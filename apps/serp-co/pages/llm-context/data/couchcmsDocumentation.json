[
  {
    "owner": "couchcms",
    "repo": "documentation",
    "content": "TITLE: Creating Full Form with CouchCMS Template Language (HTML)\nDESCRIPTION: This snippet provides a complete example of a web form built using CouchCMS template tags embedded in HTML. It includes handling multipart form-data, conditional logic for displaying success or error messages, and sending an email upon successful form submission. Various input fields are grouped into labeled fieldsets, including text inputs with validation (min length, email format, required fields), dropdown menus with predefined options, radios, checkboxes, and a CAPTCHA for bot protection. Dependencies include CouchCMS engine to parse and process the custom tags, and proper configuration of email parameters in CouchCMS settings. The expected input is user data submitted via the form; outputs include rendered form HTML, validation feedback, and emails sent to administrators. The form layout styling relies on an external CSS file (form.css) to achieve the displayed appearance.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_20\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:form enctype=\"multipart/form-data\" method=\"post\" class=\"k_form\">\n\n        <cms:if k_success >\n            <div class=\"k_successmessage\">\n                <cms:send_mail from=k_email_from to=k_email_to subject='Feedback from your site'>\n                    The following is an email sent by a visitor to your site:\n                    <cms:show k_success />\n                </cms:send_mail>\n\n                <h3>Message sent</h3>\n                <pre> <cms:show k_success /> </pre>\n            </div>\n        </cms:if>\n\n        <cms:if k_error >\n            <div class=\"k_errormessage\">\n                <ul>\n                    <cms:each k_error >\n                        <li><cms:show item /></li>\n                    </cms:each>\n                </ul>\n            </div>\n        </cms:if>\n\n        <cms:fieldset label='Personal details'>\n            <cms:input type=\"text\"\n                       name=\"name\"\n                       label=\"Name\"\n                       desc='These are some instructions'\n                       maxlength=\"100\"\n                       required='1'\n                       validator='min_len=3'/>\n\n            <cms:input type=\"text\"\n                       name=\"email\"\n                       label='Email'\n                       maxlength=\"100\"\n                       validator='email'\n                       required='1' />\n\n            <cms:input type=\"password\"\n                       name=\"userpassword\"\n                       label='Password'\n                       maxlength=\"12\"\n                       required='1' />\n\n        </cms:fieldset>\n\n        <cms:fieldset label='Your message'>\n            <cms:input type=\"dropdown\"\n                       name=\"subject\"\n                       label='Subject'\n                       opt_values='Please select a subject=- | General enquiry | Booking enquiry'\n                       opt_selected='General enquiry'\n                       required='1' />\n\n            <cms:input type=\"textarea\" cols=\"35\" rows=\"5\" name=\"message\"\n                       required='1'\n                       label='Message'></cms:input>\n\n        </cms:fieldset>\n\n        <cms:fieldset label='Additional information'>\n            <cms:input type=\"radio\"\n                       name=\"mailinglist\"\n                       label='Add me to your mailing list'\n                       opt_values='Yes=y | No=n'\n                       opt_selected='n'\n                       required='1' />\n\n            <cms:input type=\"checkbox\"\n                       name=\"interests_arr\"\n                       label='Interests'\n                       opt_values='Music | Computers | Movies | Sport | Art'\n                       opt_selected='Music | Computers | Movies | Art'\n                       required='1' />\n\n            <cms:input type='captcha'\n                       name='my-captcha'\n                       label='Are you human?'\n                       />\n\n        </cms:fieldset>\n\n        <input type=\"submit\" value=\"Send Email\" name=\"submit\"/>\n\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Generating a CouchCMS Comment Form\nDESCRIPTION: This snippet showcases a complete comment form in CouchCMS. It uses `<cms:if>`, `<cms:form>`, `<cms:input>`, `<cms:process_comment>`, and `<cms:send_mail>` tags to create a form for comment submission, handle form validation, process comments, and send email notifications upon successful submission. It includes various input fields and displays different messages based on the submission status.  Requires the CouchCMS framework.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-comments.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if k_is_commentable >\n<div class=\"comment-form\" >\n    <h3>Post a comment</h3>\n\n    <cms:form method=\"post\" class=\"k_form\">\n\n        <cms:if k_success >\n\n            <cms:process_comment />\n\n            <cms:if k_process_comment_success>\n                <cms:send_mail from=k_email_from to=k_email_to subject='Comment posted'>\n                    The following comment has been posted at your site:\n                    <cms:show k_success />\n                </cms:send_mail>\n\n                <div class=\"k_successmessage\">\n                    <p>\n                        Thank you for the feed back! <br>\n                        Your comment awaits moderation and will be published as soon as reviewed by the Admin.\n                    </p>\n                </div>\n            <cms:else />\n                <div class=\"k_errormessage\">\n                    <p>\n                        Could not post comment! <br>\n                        The following error occured while processing your comment:<br>\n                        <cms:show k_process_comment_error />\n                    </p>\n                </div>\n\n            </cms:if>\n\n        <cms:else />\n\n            <cms:if k_error >\n                <div class=\"k_errormessage\">\n                    <h2>Fields incomplete!</h2>\n                    <ul>\n                        <cms:each k_error >\n                            <li><cms:show item /></li>\n                        </cms:each>\n                    </ul>\n                </div>\n            </cms:if>\n\n            <cms:if k_logged_out >\n                <p class=\"comment-input\">\n                    <cms:input type=\"text\" name=\"k_author\" size=\"22\" tabindex=\"1\" required=\"1\"/>\n                    <label for=\"author\"><small>Name *</small></label>\n                </p>\n\n                <p class=\"comment-input\">\n                    <cms:input type=\"text\" name=\"k_email\" size=\"22\" tabindex=\"2\" validator=\"email\" required=\"1\"/>\n                    <label for=\"email\"><small>Email * (will not be published)</small></label>\n                </p>\n\n                <p class=\"comment-input\">\n                    <cms:input type=\"text\" name=\"k_link\" value=\"http://\" size=\"22\" tabindex=\"3\" />\n                    <label for=\"link\"><small>Website</small></label>\n                </p>\n            <cms:else />\n                <p>\n                    Logged in as <b><cms:show k_user_title /></b>.\n                    <a href=\"<cms:show k_logout_link />\" onclick=\"if( confirm('Are you sure you want to logout?') ) { return true; } return false;\">Logout &raquo;</a>\n                </p>\n            </cms:if>\n\n            <p class=\"comment-input\">\n                <cms:input type=\"textarea\" name=\"k_comment\" style=\"width:93%\" rows=\"10\" cols=\"10\" tabindex=\"4\"\n                    validator_msg=\"required=Please enter something as comment\"\n                    required=\"1\" />\n\n                <br>\n                <small>\n                <cms:html_encode>\n                    You can use the following HTML tags: <a><br><strong><b><em><i><blockquote><code><ul><ol><li><del>\n                </cms:html_encode>\n                </small>\n            </p>\n\n            <cms:if k_logged_out >\n                <p class=\"comment-input\">\n                    <label for=\"captcha\"><small>Please enter this word in the textbox below</small></label><br>\n                    <cms:input type=\"captcha\" name=\"captcha\" format='i-r-t' />\n                </p>\n            </cms:if>\n\n            <cms:input type=\"submit\" value=\"Submit\" name=\"submit\"/>\n\n        </cms:if>\n    </cms:form>\n\n</div>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Listing and Linking Template Folders Using CouchCMS Folders Tag\nDESCRIPTION: This snippet shows how to list template folders by enclosing a single '<li>' within a '<cms:folders>' loop and replacing folder name and link with Couch variables like '<cms:folder_link>' and '<cms:folder_title>'. It enables dynamic generation of folder-based navigation menus in the sidebar.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders>\n  <li>\n    <a href='<cms:folder_link>'><cms:folder_title></a>\n  </li>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Nested Listing of Monthly Archive Periods and Their Pages Using CouchCMS in PHP\nDESCRIPTION: This snippet demonstrates nested usage of the archives and pages tags to display an indented list of monthly archive periods along with the pages published within each period. The outer archives tag iterates through archive periods, providing k_archive_date and k_next_archive_date to specify the time boundaries. The inner pages tag uses these variables as start_on and stop_before parameters to fetch all pages published during that period. Each page is listed with a hyperlink (k_page_link), title (k_page_title), and formatted publish date (k_page_date). This approach produces a comprehensive archive sitemap-style list for the 'property.php' masterpage.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-archives.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<ul>\n<cms:archives masterpage='property.php'>\n    <li>\n    <b><cms:date k_archive_date format='F Y' /></b> (<cms:show k_archive_count />)\n    <ul>\n    <cms:pages masterpage='property.php' start_on=k_archive_date stop_before=k_next_archive_date>\n        <li>\n        <a href=\"<cms:show k_page_link />\"><cms:show k_page_title /></a>\n        <i><cms:date k_page_date /></i>\n        </li>\n    </cms:pages>\n    </ul>\n    </li>\n</cms:archives>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Marking a Template as Clonable in CouchCMS (HTML)\nDESCRIPTION: This snippet demonstrates how to declare a CouchCMS template as clonable by adding the <cms:template> tag with the clonable parameter set to '1'. This enables the creation of multiple independent pages from a single template, each with their own editable regions. Place this snippet within the HTML <HEAD> or any suitable section of the template file. CouchCMS must be properly installed and initialized for this tag to function. No additional parameters are required. After saving and reloading the template in the browser as super-admin, the CMS interprets this template as clonable and updates the admin interface accordingly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloned-pages.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:template clonable='1' > </cms:template>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Embedding Based on Exists Tag (CouchCMS Template Language)\nDESCRIPTION: This snippet dynamically checks for the existence of a snippet file matching the page name and embeds it if found. Otherwise, it displays 'my_content'. It uses nested tag evaluation, merging the Exists and Embed tags with page name variables. All pages requiring custom logic merely place a properly named snippet in the snippets folder; the core template does not need modification.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_6\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if k_is_page >\n    <cms:if \"<cms:exists \\\"<cms:show k_page_name/>.inc\\\" />\" >\n        <cms:embed \"<cms:show k_page_name/>.inc\" />\n    <cms:else />\n        <cms:show my_content />\n    </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Generating Menu with cms:menu - CouchCMS\nDESCRIPTION: This snippet demonstrates how to generate a menu using the `cms:menu` tag in CouchCMS. The `masterpage` parameter is used to specify the template that represents the root of the nested-pages tree. The output is an unordered list (`<ul>`) with list items (`<li>`) representing the menu items, creating a hierarchical menu structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:menu masterpage='index.php' />\n```\n\n----------------------------------------\n\nTITLE: Listing Pages from Template (Basic) - CouchCMS Tag\nDESCRIPTION: This snippet demonstrates the basic usage of the `<cms:pages>` tag to fetch all pages cloned from a specific template (`blog.php`). It iterates through the fetched pages, making page-specific variables available, and displays the title (`k_page_title`) for each page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_0\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php'>\n     <!-- All the variables of each page cloned out of this template are available here -->\n     <cms:show k_page_title /><br>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Sending Email with send_mail Tag\nDESCRIPTION: This snippet demonstrates how to use the `send_mail` tag in CouchCMS to send an email.  The 'from', 'to', and 'subject' attributes are required. The email body is defined by the content between the opening and closing tags. The example shows a simple email setup.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/send_mail.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:send_mail from='admin@mysite.com' to='johndoe@gmail.com' subject='Feedback from your site'>\nAnything here (between the opening and closing tags of send_mail)\nwill form the body of the email that will be sent.\n</cms:send_mail>\n```\n\n----------------------------------------\n\nTITLE: Including CouchCMS initialization - PHP\nDESCRIPTION: This snippet initializes the CouchCMS framework within a PHP template. It includes the 'cms.php' file from the 'couch' directory, which is essential for CouchCMS to function correctly.  It is crucial to place this line at the very top of the PHP file to ensure proper initialization before any other code is executed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/templates.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n```\n\n----------------------------------------\n\nTITLE: Apply Dynamic CSS Path using k_site_link (CouchCMS)\nDESCRIPTION: Demonstrates the recommended method for specifying a CSS file located within the website. It uses the <cms:show k_site_link /> tag to dynamically generate the absolute URL base for the site, ensuring the path to the stylesheet ('styles/editor_styles.css') is correct.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css=\"<cms:show k_site_link />styles/editor_styles.css\"\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Listing Pages with the 'pages' Tag in CouchCMS Template - HTML, Couch Tag Language\nDESCRIPTION: This snippet uses the <cms:pages> tag in CouchCMS within an HTML template to list all pages cloned from a specified template (e.g., 'blog.php'). It iterates over each fetched page, making all variables of the page available during the loop. The 'masterpage' parameter specifies the template; if omitted, the current template is used. Expected input includes an existing clonable template, and output is a rendered list of page titles. Requires CouchCMS to be properly installed and configured.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/listing-pages.md#_snippet_0\n\nLANGUAGE: HTML, Couch Tag Language\nCODE:\n```\n<cms:pages masterpage='blog.php'>\n     <!-- All the variables of each page cloned out of this template are available here -->\n     <cms:show k_page_title /><br>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Handling Empty Categories with Custom Variables in CouchCMS\nDESCRIPTION: Code snippet demonstrating how to use custom variables to display 'Uncategorised' when a page doesn't belong to any folder category.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if k_page_foldertitle>\n   <cms:set my_category='<cms:show k_page_foldertitle />' />\n<cms:else />\n   <cms:set my_category='Uncategorised' />\n</cms:if>\n<a href=\"#\"><cms:show my_category /></a>\n```\n\n----------------------------------------\n\nTITLE: Invoking CouchCMS Processing in PHP\nDESCRIPTION: Calls the static `COUCH::invoke()` method to trigger CouchCMS processing of the template. This line must be placed at the very end of the PHP template file, after all HTML and CouchCMS tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/about-us.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Concatenating Strings with concat Named Parameters (CouchCMS)\nDESCRIPTION: Illustrates using the `<cms:concat>` tag with explicitly named parameters for improved readability, especially when concatenating many values. Arbitrary names (e.g., `p1`, `p2`) are assigned to each string part or variable, clarifying which values are being combined.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/concat.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set welcome_message=\"<cms:concat p1='Hello ' p2=first_name p3=' ' p4=last_name p5='! We welcome you!' />\" />\n```\n\n----------------------------------------\n\nTITLE: Determining Page or List View in CouchCMS Template - Couch Template Syntax\nDESCRIPTION: Demonstrates conditional rendering within CouchCMS templates to distinguish between single page view and list view. Utilizes the 'k_is_page' variable in the <cms:if> block to display editable regions if a specific page is loaded, or to generate a page listing otherwise. No external dependencies beyond CouchCMS itself are required. Input: current URL/context within template; Output: shows single page content or a listing, depending on context. Note: Proper editable region setup is required and this logic is foundational to cloned/nested-page templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_2\n\nLANGUAGE: Couch Template Syntax\nCODE:\n```\n<cms:if k_is_page>\n    <!-- Single page being visited. Show contents of its editable regions -->\n<cms:else />\n    <!-- List view. Show a listing of pages -->\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Enabling CouchCart in CouchCMS\nDESCRIPTION: To enable the CouchCart component, the user needs to uncomment a specific line in the `kfunctions.php` file located within the `couch/addons` directory of the CouchCMS installation.  This action makes the shopping cart functionality accessible.  The file needs to be opened with a text editor and the line will need to be un-commented by removing the `//` at the beginning.  After editing this file the CouchCart will be enabled.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n//require_once( K_COUCH_DIR.'addons/cart/cart.php' ); // automatically includes session\n```\n\n----------------------------------------\n\nTITLE: Setting Order Parameter for Editable Regions in CouchCMS\nDESCRIPTION: Example of using the 'order' parameter to control the position of editable regions in the CouchCMS admin panel. Higher numbers appear lower on the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\norder='3'\n```\n\n----------------------------------------\n\nTITLE: Conditional Listing for Home-View with 'pages' Tag - HTML, Couch Tag Language\nDESCRIPTION: This snippet demonstrates using the <cms:if k_is_home> conditional in CouchCMS to detect when the template is being viewed as the home page. It lists all pages cloned from the current template using the <cms:pages> tag. Input parameters depend on CouchCMS setting the 'k_is_home' variable. Output is a rendered list of pages when viewing the template's home URL. Requires CouchCMS variables and a clonable template setup.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/listing-pages.md#_snippet_1\n\nLANGUAGE: HTML, Couch Tag Language\nCODE:\n```\n<cms:if k_is_home >\n    <cms:pages>\n        <!-- All the variables of each page cloned out of this template are available here -->\n    </cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Setting Flat Rate Per Item in Config.php\nDESCRIPTION: This snippet sets a flat shipping rate per item in the '_addons/cart/config.php_' file. It specifies a fixed shipping cost for each individual item in the order.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['shipping_flat_rate_per_item'] = '1';\n```\n\n----------------------------------------\n\nTITLE: Using the Paginator Tag - CouchCMS Template\nDESCRIPTION: This snippet shows how to use the built-in `cms:paginator` tag as an alternative to manually creating navigation links. It includes the display of pagination status information using the same variables but replaces the manual 'prev'/'next' link generation with the single `cms:paginator` tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pagination.md#_snippet_2\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:pages masterpage='blog.php' limit='10' paginate='1'>\n    <cms:if k_paginated_top>\n        <cms:if k_paginator_required >\n            Page <cms:show k_current_page /> of <cms:show k_total_pages /><br>\n        </cms:if>\n        <cms:show k_total_records /> Pages Found.\n        Displaying: <cms:show k_record_from />-<cms:show k_record_to />\n    </cms:if>\n\n    <!-- All the page variables can be accessed here -->\n\n    <cms:paginator />\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Configure Richtext Editor Dimensions (CouchCMS)\nDESCRIPTION: Demonstrates setting the dimensions of the CKEditor instance associated with a 'richtext' editable region. The 'height' and 'width' parameters are added to the <cms:editable> tag to control the editor's size in pixels.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    height='100'\n    width='500'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Creating PayPal Button with Custom Image - CouchCMS\nDESCRIPTION: This snippet demonstrates how to generate a PayPal button using a custom image.  It utilizes the `paypal_button` tag, setting the `image` parameter to the URL of the custom image.  The `k_site_link` variable retrieves the website's base URL.  The resulting HTML will render a PayPal button with the specified image.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/paypal_button.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:paypal_button image=\"<cms:show k_site_link />/images/my_button.gif\" />\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Exact Match - Equals Equals\nDESCRIPTION: This snippet fetches cloned pages where the editable region 'my_blog_author' *exactly* matches the term 'jeffrey'.  The use of '==' indicates a direct comparison. The 'masterpage' attribute specifies the base template, and the 'custom_field' attribute is used for the comparison.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_30\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author==jeffrey'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Enabling Editing for a Specific Content Region Using CouchCMS Editable Tag in PHP\nDESCRIPTION: This snippet demonstrates wrapping static HTML content in the <cms:editable> tag to make it user-editable from the CouchCMS admin panel. The only required parameter is 'name', which must be unique per template (here, 'prop_desc'). The snippet is intended for PHP/HTML templates using CouchCMS. When the super-admin visits the related template, an editable textarea region is generated.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<div class=\"prop_desc\">\n    <b>Property Description:</b>\n    <span class=\"gray\">\n        <cms:editable name='prop_desc' >\n        Condo pricing starts at just under $700,000.\n        Waterfront Private Residences.\n        Jack Nicklaus Signature Golf Course.\n        </cms:editable>\n    </span>\n    <br class=\"clear\"/>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting 'width' and 'height' parameters in 'textarea' editable region\nDESCRIPTION: Shows how to customize the size of the textarea input by specifying 'width' and 'height' parameters, enabling control over the display dimensions of the editable text box.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/textarea.md#_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<cms:editable name='prop_desc' label='Description'\n    desc='Enter description of property here'\n    width='400'\n    height='200'\n    type='textarea'/>\n\n```\n\n----------------------------------------\n\nTITLE: Defining a PayPal Donate Button Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers the 'donate' shortcode and its handler 'donate_handler'. It uses `$FUNCS->get_named_vars` to get 'account' (PayPal email), 'for' (donation purpose, defaults to current page title via `$CTX`), and 'onHover' (link title attribute). The content within the shortcode tags (e.g., `[donate]Click Here[/donate]`) is used as the link text, defaulting to 'Make A Donation'. It returns an HTML anchor tag linking to PayPal's donation processing page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n// 5.\n// PayPal Donate Button shortcode\n// Usage:   [donate]\n//          [donate]Donate Now[/donate]\n//          [donate account=\"you@yoursite.com\" onHover=\"Thanks\" for=\"Title\"]\n//          [donate account=\"you@yoursite.com\" onHover=\"Thanks\" for=\"Title\"]Donate Now[/donate]\n$FUNCS->register_shortcode( 'donate', 'donate_handler' );\nfunction donate_handler( $params, $content=null ){\n   global $FUNCS, $CTX;\n\n   extract( $FUNCS->get_named_vars(array(\n      'account' => 'your-paypal-email-address',\n      'for' => $CTX->get( 'k_page_title' ),\n      'onHover' => ''\n   ), $params) );\n\n   if( empty($content) ) $content='Make A Donation';\n   return '<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&business='.$account.'&item_name=Donation for '.$for.'\" title=\"'.$onHover.'\">'.$content.'</a>';\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Start Date - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' that have a publication date on or after '2010-02-01' using the `start_on` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_18\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' start_on='2010-02-01'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Programmatically Assign Page Name and Title in db_persist_form (CouchCMS, Kettle Template Language)\nDESCRIPTION: This snippet demonstrates how to assign custom values to the system fields 'k_page_name' and 'k_page_title' as parameters on the <cms:db_persist_form> tag, ensuring that each created clone receives explicit unique identification. Values should be programmatically generated in real implementations; otherwise, duplicate names must be avoided to prevent errors.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_10\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:db_persist_form\nk_page_name='my-page-name'\nk_page_title='My Page Name'\n/>\n```\n\n----------------------------------------\n\nTITLE: Displaying the Value of an Editable Region Using the Show Tag in CouchCMS\nDESCRIPTION: These snippets show how to display the current contents of an editable region using the <cms:show> tag. The tag outputs the value of the named variable (e.g., 'prop_desc', 'body', 'excerpt') as set by CouchCMS. Dependencies include correct prior definition of the editable region. Inputs are variable names corresponding to defined editable regions; output is the editable content rendered into the HTML.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:show prop_desc />\n```\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:show body />\n<cms:show excerpt />\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Single ID - CouchCMS Tag\nDESCRIPTION: This snippet filters the fetched pages to include only the page with a specific numeric ID (14) that has been cloned from the 'blog.php' template, using the `id` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_3\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' id='14'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Combining Logical AND (&&) and OR (||) with Precedence in CouchCMS If Tag\nDESCRIPTION: These examples explain how to use both && and || operators together, highlighting operator precedence where '&&' has higher precedence than '||'. Without explicit parentheses, logical expressions might evaluate unexpectedly. Proper grouping with parentheses ensures intended logic and control flow during template processing.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_6\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if (age lt '18') || (age gt '40') && (sex == 'M')> .. </cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:set age = '13' />\n<cms:set sex = 'F' />\n\n<cms:if (age lt '18') || (age gt '40') && (sex == 'M')>\n   <h3>Welcome Gentleman!</h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if ((age lt '18') || (age gt '40')) && (sex == 'M')>\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Single Name - CouchCMS Tag\nDESCRIPTION: This snippet filters the fetched pages to include only the page with a specific name ('my_first_entry') that has been cloned from the 'blog.php' template, using the `page_name` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_6\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' page_name='my_first_entry'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Multiple Names - CouchCMS Tag\nDESCRIPTION: This snippet filters the fetched pages to include only those with specific names ('my_first_entry' or 'my_another_entry') cloned from the 'blog.php' template, using a comma-separated list with the `page_name` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_7\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' page_name='my_first_entry, my_another_entry'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Integrating Spam Check with CouchCMS Form Handling in PHP\nDESCRIPTION: This snippet shows how to incorporate the <cms:check_spam> tag within a CouchCMS form submission condition to validate submitted email addresses against the stopforumspam.com service before persisting the form data. It requires CouchCMS environment and a form context where the 'frm_email' variable contains the user's submitted email address. If the user is flagged as a spammer, the submission is terminated with a notice. This prevents known spammers from registering or submitting forms.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_14\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if k_success >\n\n    <cms:check_spam email=frm_email />\n\n    <cms:db_persist_form\n        _invalidate_cache='0'\n        _auto_title='1'\n    />\n\n    <cms:set_flash name='submit_success' value='1' />\n    <cms:redirect k_page_link />\n\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Enabling Pagination - CouchCMS Tag\nDESCRIPTION: This snippet fetches all pages from 'blog.php' but prepares them for pagination, showing only 5 per page, by setting `paginate='1'`. Additional code is required to display the pagination links.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_10\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' limit='5' paginate='1'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying Repeatable Regions with show_repeatable - HTML\nDESCRIPTION: This snippet demonstrates the usage of the `<cms:show_repeatable>` tag to display the contents of a repeatable region named 'my_multiple_images'. Inside the loop, it shows the image source from 'my_image' and description from 'my_desc' for each row in the repeatable region. The `var` parameter (default unnamed parameter) specifies the name of the repeatable region.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/show_repeatable.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show_repeatable 'my_multiple_images' >\n   <b>Image: <img src=\"<cms:show my_image />\" /> \n   <b>Desc:</b> <cms:show my_desc />\n   <hr>\n</cms:show_repeatable>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Pagination with CouchCMS Paginator Tag\nDESCRIPTION: Demonstrates the basic usage of the self-closing `<cms:paginator />` tag within CouchCMS. This tag automatically generates 'Google style' pagination controls when placed inside `<cms:pages>`, `<cms:comments>`, or `<cms:search>` tag pairs. See 'Core Concepts - Pagination' for a complete example.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/paginator.md#_snippet_0\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:paginator />\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Exact Match - Multiple Values\nDESCRIPTION: This snippet fetches cloned pages of `blog.php` where the editable region 'my_blog_author' *exactly* matches either the term 'jeffrey' or 'arthur'.  This example uses the '==' operator, although multiple values separated by a comma are not common. It illustrates how to compare to multiple values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_31\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author==jeffrey, arthur'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS dropdown Input Type\nDESCRIPTION: Demonstrates CouchCMS dropdown lists using '<cms:input type=\"dropdown\" ... />'. The 'opt_values' attribute defines the options in 'Label | Label | Label' format. The 'name' attribute identifies the selected value.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_14\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type=\"dropdown\"\n    name=\"degree\"\n    opt_values=\"Choose One | High School Degree | Some College | Bachelor's Degree | Doctorate\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Search Form with CouchCMS search_form Tag\nDESCRIPTION: Demonstrates how to use the <cms:search_form /> tag to generate an HTML search form. The first example shows the simplest usage with default settings. The second example customizes the placeholder text using the 'msg' parameter and sets the form's action URL using the 'processor' parameter, directing the search query to 'search.php'. This tag is intended to be used with the CouchCMS 'search' tag to perform site searches.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/search_form.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:search_form />\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:search_form msg='Search' processor=\"<cms:show k_site_link/>search.php\" />\n```\n\n----------------------------------------\n\nTITLE: Controlling Future Page Visibility - CouchCMS Tag\nDESCRIPTION: This snippet fetches only those pages cloned from 'blog.php' whose publication date is on or before the current date, effectively excluding any future-dated entries, by setting `show_future_entries='0'`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_22\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' show_future_entries='0'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying Basic Repeatable Region Values in CouchCMS\nDESCRIPTION: Shows how to output the data stored in repeatable regions on the website's frontend. The `<cms:show_repeatable>` tag iterates through each saved row of the specified repeatable region ('my_multiple_images'). Inside the loop, the standard `<cms:show>` tag is used to display the value of each individual editable region defined within that repeatable set (e.g., `my_image`, `my_desc`).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/repeatable-regions.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:show_repeatable 'my_multiple_images' >\n    <b>Image: <img src=\"<cms:show my_image />\" /> \n    <b>Desc:</b> <cms:show my_desc />\n    <hr>\n</cms:show_repeatable>\n```\n\n----------------------------------------\n\nTITLE: Generating a URL with Multiple Query Parameters using add_querystring - CouchCMS/HTML\nDESCRIPTION: This snippet showcases the use of the add_querystring tag to append multiple query string parameters ('param1=some_value&param2=other_value') to the URL variable k_page_link in a CouchCMS template. Only standard CouchCMS installation is required. The tag automatically handles insertion of '?' or '&' as needed; the parameters are provided as a single string separated by '&', and the output is a complete URL with all specified parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/add_querystring.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"<cms:add_querystring k_page_link 'param1=some_value&param2=other_value' />\" >Some link</a>\n```\n\n----------------------------------------\n\nTITLE: Defining a Single Repeatable Image Region in CouchCMS\nDESCRIPTION: Demonstrates the basic definition of a repeatable region in CouchCMS. An editable region of type 'image' is defined first, and then wrapped with the `<cms:repeatable>` tag to allow multiple instances of this image field to be added dynamically in the admin panel for a cloned page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/repeatable-regions.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable type='image' name='my_image' label='Photo' />\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:repeatable name='my_multiple_images' >\n    <cms:editable type='image' name='my_image' label='Photo' />\n</cms:repeatable>\n```\n\n----------------------------------------\n\nTITLE: Outputting Variable Value with get Tag - HTML\nDESCRIPTION: This snippet demonstrates how to use the `get` tag to output the value of a variable in CouchCMS. The `set` tag is used to define a variable, and the `get` tag retrieves and outputs its value. The parameter for the `get` tag should be the name of the variable enclosed in quotes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_var='10' />\n<cms:get 'my_var' />\n```\n\n----------------------------------------\n\nTITLE: Employment Application Form Template using CouchCMS Tags and PHP\nDESCRIPTION: This comprehensive CouchCMS template defines an employment application form with multiple editable fields including text, email, URL, dropdown, decimal, and secure file uploads. It employs CouchCMS form tags for binding inputs, validation (including regex validation), and form submission handling. The template uses <cms:check_spam> to prevent spam submissions and <cms:db_persist_form> for saving data. PHP is required to invoke CouchCMS processing. HTML and CSS style the form interface. This example demonstrates full-stack integration of content management, validation, spam-check, and user feedback.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<cms:template title='Application Form' clonable='1'>\n    <cms:editable name='first_name' required='1' type='text' />\n    <cms:editable name='last_name' required='1' type='text' />\n    <cms:editable name='email' required='1' validator='email' type='text' />\n    <cms:editable name='portfolio' validator='url' type='text' />\n    <cms:editable name='position' required='1' type='dropdown'\n        opt_values=' Please choose=- | Interface Designer | Software Engineer | Systems Administrator | Office Manager'\n    />\n    <cms:editable name='salary' type='text' search_type='decimal' />\n    <cms:editable name='resume' required='1' allowed_ext='pdf, doc, docx' max_size='1024' type='securefile' />\n</cms:template>\n```\n\nLANGUAGE: HTML / CouchCMS Template Language\nCODE:\n```\n<!doctype html>\n<html>\n<head>\n<title>Employment Application</title>\n    <style>\n        body{ width:500px; }\n        input[type=\"text\"]{ width:99%; }\n        .error{ color:red; }\n    </style>\n</head>\n\n<body>\n    <h3>Employment Application</h3>\n\n    <cms:set submit_success=\"<cms:get_flash 'submit_success' />\" />\n    <cms:if submit_success >\n        <h4>Success: Your application has been submitted.</h4>\n    </cms:if>\n\n    <cms:form\n        masterpage=k_template_name\n        mode='create'\n        enctype='multipart/form-data'\n        method='post'\n        anchor='0'\n        >\n\n        <cms:if k_success >\n\n            <cms:check_spam email=frm_email />\n\n            <cms:db_persist_form\n                _invalidate_cache='0'\n                _auto_title='1'\n            />\n\n            <cms:set_flash name='submit_success' value='1' />\n            <cms:redirect k_page_link />\n        </cms:if>\n\n        <cms:if k_error >\n            <div class=\"error\">\n                <cms:each k_error >\n                    <br><cms:show item />\n                </cms:each>\n            </div>\n        </cms:if>\n\n        <label>First Name</label>\n        <cms:input name=\"first_name\" type=\"bound\" />\n        <br />\n\n        <label>Last Name</label>\n        <cms:input name=\"last_name\" type=\"bound\" />\n        <br />\n\n        <label>Email Address</label>\n        <cms:input name=\"email\" type=\"bound\" />\n        <br />\n\n        <label>Portfolio Website</label>\n        <cms:input name=\"portfolio\" type=\"bound\" />\n        <br />\n\n        <label>Which position are you applying for? </label>\n        <cms:input name=\"position\" type=\"bound\" />\n        <br />\n\n        <label>Salary Requirements</label>\n        <cms:input name=\"salary\" type=\"bound\" />\n        <br />\n\n        <label>Attach a Copy of Your Resume</label>\n        <cms:input name=\"resume\" type=\"bound\" />\n        <p>Word or PDF Documents Only</p>\n        <br />\n\n        <label>What colour is a blue apple? (4 characters required)</label>\n        <cms:input name=\"human\" type=\"text\" required='1' validator='regex=/^blue$/i' />\n        <br />\n\n        <cms:if \"<cms:not submit_success />\" >\n            <button type=\"submit\">Submit Application</button>\n        </cms:if>\n\n    </cms:form>\n\n</body>\n</html>\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Displaying Calendar for a Specific Date using CouchCMS (HTML)\nDESCRIPTION: Illustrates how to use the `date` parameter of the `<cms:calendar>` tag to display the calendar for a month other than the current one. By providing a date string in 'yyyy-mm-dd' format (e.g., '2010-09-01'), you can specify which month's calendar is generated.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:calendar date='2010-09-01' >\n    ...\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Using not_empty tag with conditional statements in CouchCMS\nDESCRIPTION: Example of using the not_empty tag with an if condition to check if an editable region contains content. This approach is particularly useful for richtext fields where CKEditor might insert empty HTML tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/not_empty.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if \"<cms:not_empty my_content />\" >\n   .. do something..\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Custom Date Formatting with CouchCMS date Tag - Markup\nDESCRIPTION: Outputs k_page_date formatted as 'jS M, Y' using the format parameter. Requires CouchCMS with k_page_date available in the expected date format. Accepts a date and a format string as parameters and returns a date string such as '1st Jan, 2022'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\n<cms:date k_page_date format='jS M, Y' />\n```\n\n----------------------------------------\n\nTITLE: Generating Text Excerpts Using CouchCMS excerpt Tag in XML\nDESCRIPTION: Demonstrates how to use the CouchCMS excerpt tag to create an excerpt of content enclosed within the tag. It shows how to limit the excerpt length by word or character count using the 'count' and 'truncate_chars' parameters, and preserves specific HTML tags with the 'allow' parameter. The snippet also illustrates how to customize the trailing text of the excerpt with the 'trail' parameter. Dependencies include the CouchCMS templating system and valid context where cms tags are processed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/excerpt.md#_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<cms:excerpt count='100' truncate_chars='1'>...blah blah...</cms:excerpt>\n```\n\nLANGUAGE: XML\nCODE:\n```\nallow='i, b'\n```\n\n----------------------------------------\n\nTITLE: Combining Inclusion Criteria - AND Logic\nDESCRIPTION: This snippet fetches all pages that contain 'jeffery' AND contain 'arthur' somewhere within 'my_blog_author' (i.e. contain both jeffery as well as arthur).  Again, uses the pipe `|` character to combine conditions with an AND logic.  The 'masterpage' parameter is still in use.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_36\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author=jeffrey | my_blog_author=arthur'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Using load_edit Tag to Load Required JS/CSS for Inline Editing in CouchCMS Template\nDESCRIPTION: Shows the minimal markup required in the HEAD section of the CouchCMS template to include JavaScript and CSS files necessary for on-page editing capabilities. Optional parameters include skip_ckeditor to disable inline editing UI, no_border to hide the default inline editing border, and prompt_text to customize the unsaved changes warning. This is a prerequisite snippet to enable the editing features on the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<cms:load_edit />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:load_edit no_border='1' />\n```\n\n----------------------------------------\n\nTITLE: Enhanced calendar with nested page links and larger layout (HTML/CouchCMS)\nDESCRIPTION: This code snippet creates a larger calendar layout that displays multiple page links within each day cell, showing the titles of cloned pages associated with that day. The entries are limited to two per day for readability, and the calendar supports dynamic date input modifications.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:calendar date='2010-09-01' masterpage='events.php'>\n    <table class=\"calendar_big\">\n        <tr>\n            <th colspan=\"7\"><cms:date k_calendar_date format='F Y' /></th>\n        </tr>\n        <tr>\n            <cms:repeat count='7'>\n            <td class=\"months_heading\"><cms:zebra 'Su' 'M' 'T' 'W' 'Th' 'F' 'S'/></td>\n            </cms:repeat>\n        </tr>\n        <cms:weeks>\n            <tr>\n            <cms:days pad_with_zeroes='0' >\n                <cms:if k_timeline_position='present'>\n                    <cms:set tdclass='today' />\n                </cms:if>\n                <cms:else />\n                    <cms:set tdclass='' />\n                </cms:else>\n                </cms:if>\n                <cms:if k_position='current_month' >\n                    <cms:if k_count_entries >\n                        <td class='entries <cms:show tdclass />' align='center'>\n                            <a href=\"#\"><cms:show k_day /></a>\n                            <ul>\n                                <cms:entries limit='2' skip_custom_fields='1'>\n                                <li>\n                                    <a href=\"<cms:show k_page_link />\"><cms:show k_page_title /></a>\n                                </li>\n                                </cms:entries>\n                            </ul>\n                        </td>\n                    </cms:if>\n                    <cms:else />\n                        <td class='<cms:show tdclass />' ><cms:show k_day /></td>\n                    </cms:else>\n                </cms:if>\n            </cms:days>\n            </tr>\n        </cms:weeks>\n    </table>\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Locale-Specific Date Formatting with CouchCMS date Tag - Markup (Italian)\nDESCRIPTION: Outputs k_page_date in the '%B %d, %Y' format and in Italian locale by specifying both format and locale parameters. Requires the 'italian' locale to be available on the server hosting CouchCMS. Accepts a date, a format string, and 'italian' as the locale, and produces the formatted date in Italian or defaults to English if unavailable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_4\n\nLANGUAGE: markup\nCODE:\n```\n<cms:date k_page_date format='%B %d, %Y' locale='italian' />\n```\n\n----------------------------------------\n\nTITLE: Accessing Submission Results via k_success and k_error Variables\nDESCRIPTION: Demonstrates how to handle form submission outcomes using 'k_success' and 'k_error' variables. Displays success message and submitted data upon successful validation, or error messages if validation fails. Uses `<cms:each>` tag to iterate over validation messages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_2\n\nLANGUAGE: HTML+CouchCMS\nCODE:\n```\n<cms:form method=\"post\">\n    <cms:if k_success >\n        <h3>Form successfully submitted</h3>\n        <cms:each k_success sep='\\n'>\n            <cms:show item /><br>\n        </cms:each>\n    </cms:if>\n\n    <cms:if k_error >\n        <h3>Failed to submit form</h3>\n        <cms:each k_error >\n            <cms:show item /><br>\n        </cms:each>\n    </cms:if>\n\n    Name: <cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" />\n    Email: <cms:input type=\"text\" size=\"10\" name=\"email\" />\n    <cms:input name=\"submit\" type=\"submit\" value=\"Send\" />\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Conditionally Invoking PayPal Gateway in checkout.php (CouchCMS)\nDESCRIPTION: Enhances the `checkout.php` template by adding a conditional check using `cms:if` and `cms:pp_count_items`. The `cms:pp_payment_gateway` tag, which redirects to PayPal, is only invoked if the cart contains items. If the cart is empty, a message indicating this is displayed instead.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_38\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once 'couch/cms.php'; ?>\n    <cms:no_cache />\n\n    <cms:if \"<cms:pp_count_items />\" >\n        <cms:pp_payment_gateway\n           shipping_address=\"<cms:if \\\"<cms:pp_count_shippable_items />\\\" >1<cms:else />0</cms:if>\"\n           empty_cart='0'\n        />\n     <cms:else />\n        <p>Your cart is empty!</p>\n     </cms:if>\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Defining CouchCMS Events Calendar Template Fields and Views\nDESCRIPTION: This CouchCMS template snippet defines the structure for an events calendar. It includes `cms:editable` tags to create custom fields for event details like description, location, start/end times (using dropdowns), and an end date with validation. The code then uses conditional logic (`cms:if k_is_page`) to switch between a single event \"page view\" displaying details and a \"list view\" showing a full calendar powered by the `cms:calendar` tag, which lists event entries. It requires a CouchCMS installation and depends on the `calendar.css` file for styling.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_6\n\nLANGUAGE: CouchCMS Template (PHP/HTML)\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<cms:template title='Events' clonable='1'>\n    <cms:editable name='desc' label='Description' type='textarea' />\n    <cms:editable name='location' label='Location' type='text' />\n\n    <cms:editable name=\"start_time\" label=\"Time From (24 Hrs)\"\n      opt_values=' Unspecified |\n                  00:00 | 00:30 | 01:00 | 01:30 | 02:00 | 02:30 | 03:00 | 03:30 |\n                  04:00 | 04:30 | 05:00 | 05:30 | 06:00 | 06:30 | 07:00 | 07:30 |\n                  08:00 | 08:30 | 09:00 | 09:30 | 10:00 | 10:30 | 11:00 | 11:30 |\n                  12:00 | 12:30 | 13:00 | 13:30 | 14:00 | 14:30 | 15:00 | 15:30 |\n                  16:00 | 16:30 | 17:00 | 17:30 | 18:00 | 18:30 | 19:00 | 19:30 |\n                  20:00 | 20:30 | 21:00 | 21:30 | 22:00 | 22:30 | 23:00 | 23:30 |'\n      type='dropdown'\n    />\n\n    <cms:editable name=\"end_time\" label=\"Time Until (24 Hrs)\"\n      opt_values=' Unspecified |\n                  00:00 | 00:30 | 01:00 | 01:30 | 02:00 | 02:30 | 03:00 | 03:30 |\n                  04:00 | 04:30 | 05:00 | 05:30 | 06:00 | 06:30 | 07:00 | 07:30 |\n                  08:00 | 08:30 | 09:00 | 09:30 | 10:00 | 10:30 | 11:00 | 11:30 |\n                  12:00 | 12:30 | 13:00 | 13:30 | 14:00 | 14:30 | 15:00 | 15:30 |\n                  16:00 | 16:30 | 17:00 | 17:30 | 18:00 | 18:30 | 19:00 | 19:30 |\n                  20:00 | 20:30 | 21:00 | 21:30 | 22:00 | 22:30 | 23:00 | 23:30 |'\n      type='dropdown'\n    />\n\n    <cms:editable name='end_date'\n        label='Event End Date (if multi-days event)'\n        desc='Enter date in yyyy-mm-dd format e.g. 2010-12-31'\n        type='text'\n        validator='regex=/(?:19|20)\\d\\d-(?:0[1-9]|1[012])-(?:0[1-9]|[12][0-9]|3[01])/'\n        separator='#'\n        validator_msg='regex=Incorrect date format'\n    />\n\n</cms:template>\n<HTML>\n<HEAD>\n<TITLE></TITLE>\n<link href=\"<cms:show k_site_link />calendar.css\" rel=\"stylesheet\" type=\"text/css\">\n</HEAD>\n<BODY>\n    <cms:if k_is_page >\n        <!-- Page View -->\n        <b>Event:</b> <cms:show k_page_title /><br>\n        <b>Description:</b> <cms:show desc /><br>\n        <b>Location:</b> <cms:show location /><br>\n        <b>Date:</b> <cms:date k_page_date format='F j, Y' /><br>\n        <cms:if start_time!='Unspecified' >\n            <b>From:</b> <cms:show start_time /><br>\n        </cms:if>\n        <cms:if \"<cms:not_empty end_date />\" >\n            <b>End Date:</b> <cms:date end_date format='F j, Y' /><br>\n        </cms:if>\n        <cms:if end_time!='Unspecified' >\n            <b>Till:</b> <cms:show end_time /><br>\n        </cms:if>\n\n    <cms:else />\n        <!-- List view -->\n        <cms:calendar date=\"<cms:gpc 'cal' />\" masterpage=k_template_name show_future_entries='1' >\n            <table class=\"calendar_big\">\n                <tr>\n                    <th><a href=\"<cms:concat k_page_link '?cal=' k_prev_calendar_date />\"> << </a></th>\n                    <th colspan=\"5\"><cms:date k_calendar_date format='F Y' /></th>\n                    <th><a href=\"<cms:concat k_page_link '?cal=' k_next_calendar_date />\"> >> </a></th>\n                </tr>\n                <tr>\n                    <cms:repeat count='7'>\n                    <td class=\"months_heading\"><cms:zebra 'Su' 'M' 'T' 'W' 'Th' 'F' 'S'/></td>\n                    </cms:repeat>\n                </tr>\n\n                <cms:weeks>\n                    <tr>\n                    <cms:days >\n                        <cms:if k_timeline_position='present'>\n                            <cms:set tdclass='today' />\n                        <cms:else />\n                            <cms:set tdclass='' />\n                        </cms:if>\n\n                        <cms:if k_position='current_month' >\n                            <cms:if k_count_entries >\n                                <td class='entries <cms:show tdclass />' align='center'>\n                                    <a href=\"#\"><cms:show k_day /></a>\n                                    <ul>\n                                    <cms:entries limit='2' skip_custom_fields='1'>\n                                        <li>\n                                            <a href=\"<cms:show k_page_link />\"><cms:show k_page_title /></a>\n                                        </li>\n                                    </cms:entries>\n                                    </ul>\n                                </td>\n                            <cms:else />\n                                <td class='<cms:show tdclass />' ><cms:show k_day /></td>\n                            </cms:if>\n                        <cms:else />\n                            <td class='other_month'><cms:show k_day /></td>\n                        </cms:if>\n                    </cms:days>\n                    </tr>\n                </cms:weeks>\n            </table>\n        </cms:calendar>\n    </cms:if>\n</BODY>\n</HTML>\n<?php COUCH::invoke(); ?>\n\n```\n\n----------------------------------------\n\nTITLE: Defining Fixed Size Cropped Image Field CouchCMS Template\nDESCRIPTION: This snippet defines a CouchCMS editable region of type 'image'. It sets the required width and height to 150 pixels and enables cropping (`crop='1'`). Uploaded images will be resized and cropped to fit these exact dimensions, as illustrated by the subsequent tables showing how various source image sizes are processed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/image.md#_snippet_0\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:editable name='prop_image' label='Image' desc='Upload main image of property here'\n    width='150'\n    height='150'\n    crop='1'\n    type='image' />\n```\n\n----------------------------------------\n\nTITLE: Checking Inequality of Variable Using CouchCMS If Tag\nDESCRIPTION: These snippets show how to check if 'my_var' does NOT equal the string 'hello'. They use '!=' and 'ne' as the inequality operators. The enclosed HTML is output only when the condition evaluates to true (i.e., values are not equal).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_2\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var != 'hello' >\n    <h3> Not Hello </h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var ne 'hello'> <h3> Not Hello </h3> </cms:if>\n```\n\n----------------------------------------\n\nTITLE: Including Subfolders in Folder Filter - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' that belong to the 'classic-bikes' folder *and* any of its subfolders by setting `include_subfolders='1'`. This parameter augments the `folder` parameter's behavior.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_17\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' folder='classic-bikes' include_subfolders='1'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Combining Exclusion Criteria - AND Logic\nDESCRIPTION: This snippet fetches pages that do not contain 'jeffrey' AND do not contain 'arthur' anywhere within 'my_blog_author' (i.e. have neither jeffrey nor arthur). The use of the pipe `|` character represents a boolean AND operation in the `custom_field` attribute.  The `masterpage` specifies the base template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_35\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author!=jeffrey | my_blog_author!=arthur'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Email Validation in CouchCMS\nDESCRIPTION: Example of using the 'email' validator to ensure only valid email addresses are accepted in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_17\n\nLANGUAGE: html\nCODE:\n```\nvalidator='email'\n```\n\n----------------------------------------\n\nTITLE: Defining Many-to-Many Relation using CouchCMS relation tag\nDESCRIPTION: This snippet shows the basic definition of a Many-to-Many relationship between two CouchCMS templates. It uses the `editable` tag with `type='relation'`, specifying the target template via `masterpage` and naming the relationship with `name`. This creates a multi-select list in the primary template's admin panel for linking pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_0\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' />\n```\n\n----------------------------------------\n\nTITLE: Relative Link Example (HTML)\nDESCRIPTION: This snippet shows an example of a relative link in HTML that might cause issues with Pretty URLs.  It shows an example of a CSS link using a relative path, which can cause problems with the correct loading of CSS files when Pretty URLs are enabled.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pretty-urls.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"css/lightbox.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: Handling Multiple Conditions with Nested If/Else in CouchCMS\nDESCRIPTION: This example shows how to implement complex conditional logic with multiple outcomes by nesting 'cms:if' and 'cms:else' tags. It evaluates the 'age' variable against different ranges to determine and display the corresponding stage of life (Infant, Toddler, Preschooler, etc.). This demonstrates how 'else' blocks can contain further 'if' statements to handle more than two possibilities.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/else.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if age lt '1' >\n    <h3>Infant</h3>\n<cms:else />\n    <cms:if (age ge '1') && (age lt '3') >\n        <h3>Toddler</h3>\n    <cms:else />\n        <cms:if (age ge '3') && (age lt '5') >\n            <h3>Preschooler</h3>\n        <cms:else />\n            <cms:if (age ge '5') && (age lt '11') >\n                <h3>School Age</h3>\n            <cms:else />\n                <cms:if (age ge '11') && (age lt '13') >\n                    <h3>Preteen or Tween</h3>\n                <cms:else />\n                    <cms:if (age ge '13') && (age lt '20') >\n                        <h3>Teen</h3>\n                    <cms:else />\n                        <h3>Adult</h3>\n                    </cms:if>\n                </cms:if>\n            </cms:if>\n        </cms:if>\n    </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Defining a 'textarea' editable region with default text in CouchCMS\nDESCRIPTION: Shows how to declare a 'textarea' type editable region with default text content. The example illustrates setting the 'name', 'label', 'desc', and 'type' parameters to create a multi-line text input box with preset content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/textarea.md#_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<cms:editable\n  name='prop_desc'\n  label='Description'\n  desc='Enter description of property here'\n  type='textarea'>\n    Condo pricing starts at just under $700,000. Waterfront Private Residences. Jack Nicklaus\n    Signature Golf Course.\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Menu Using Parent Page Reference - CouchCMS menu Tag with root='@n' - CouchCMS Tag Language\nDESCRIPTION: Showcases dynamic menu capabilities using special keywords in root/childof. Setting 'root' to '@n' dynamically selects the parent page at the nth position in the current page's ancestry, enabling automatic context-aware menus. No code modifications needed for different menu contexts; works at runtime.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_8\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='@1' />\n```\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='@2' />\n```\n\n----------------------------------------\n\nTITLE: Setting Percentage-Based Discount by Order Total in PHP\nDESCRIPTION: Code snippet showing how to configure a sliding scale of percentage-based discounts based on the order's total cost in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['discount_by_order_total'] = '[ 50=5 | 100=15 ]%';\n```\n\n----------------------------------------\n\nTITLE: Using Parameters with CouchCMS Thumbnail Tag for Thumbnail Dimensions and Constraints in HTML\nDESCRIPTION: This snippet provides an example of using multiple parameters including 'width', 'height', and 'enforce_max' with the CouchCMS thumbnail tag inside an HTML img element. These parameters instruct the tag to generate a thumbnail with specified maximum width and height and optionally enforce maximum size constraints. The parameters mirror those in editable thumbnail regions, ensuring consistent behavior and flexible thumbnail customizations within templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/thumbnail.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"<cms:thumbnail my_image width='150' height='150' enforce_max='1' />\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Combined Repeatable Regions in CouchCMS\nDESCRIPTION: Illustrates how to define a repeatable unit comprising multiple editable regions (an 'image' and a 'nicedit' field) within a single `<cms:repeatable>` block. This allows creating structured repeatable rows, like for tabular data. It also shows the use of parameters like `show_preview`, `preview_width`, `input_width`, and `col_width` to control the appearance and layout of these fields within the admin panel row.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/repeatable-regions.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:repeatable name='my_multiple_images' >\n    <cms:editable type='image' name='my_image' label='Photo' show_preview='1' preview_width='150' input_width='200' col_width='300' />\n    <cms:editable type='nicedit' label='Description' name='my_desc' />\n</cms:repeatable>\n```\n\n----------------------------------------\n\nTITLE: Outputting Variable Value with show Tag - HTML\nDESCRIPTION: This snippet demonstrates the difference between using the `get` tag and the `show` tag in CouchCMS. The `show` tag, when given a quoted parameter, outputs the parameter's literal value (the variable name), not the variable's content.  To display the variable's value with `show`, the variable name should not be enclosed in quotes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_var='10' />\n<cms:show 'my_var' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_var='10' />\n<cms:show my_var />\n```\n\n----------------------------------------\n\nTITLE: Replacing Form with CouchCMS pp_product_form Tag\nDESCRIPTION: Demonstrates how to replace the standard HTML `<form>` tag with the CouchCart `<cms:pp_product_form>` tag. This tag handles the form submission logic automatically, eliminating the need for explicit 'action', 'method', and 'accept-charset' attributes, while preserving other attributes like 'class'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_13\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:pp_product_form class=\"cart-form\">\n    <div class=\"product-top-box\">\n\n    ... content truncated ...\n\n    </div>\n</cms:pp_product_form>\n```\n\n----------------------------------------\n\nTITLE: Creating a List with listfolders Tag in CouchCMS\nDESCRIPTION: This snippet uses the `listfolders` tag to create a simple list of folders. It produces a list similar to that created by the `folders` tag, but with less flexibility for customization. It uses the `childof` and `hierarchical` parameters for filtering and structuring the list.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:listfolders masterpage='news.php' childof='world' hierarchical='1'/>\n```\n\n----------------------------------------\n\nTITLE: Searching pages of specific template (news.php) - CouchCMS\nDESCRIPTION: This code snippet demonstrates how to use the `masterpage` parameter within the `<cms:search>` tag to restrict the search to pages using the 'news.php' template.  The search will only return results from pages created with that template.  This example assumes the CouchCMS environment is correctly set up.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/search.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:search masterpage='news.php' >..</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Setting Percentage-Based Flat Discount by Order Total in PHP\nDESCRIPTION: Code snippet showing how to configure a flat percentage-based discount for orders above a certain threshold in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['discount_by_order_total'] = '[ 100=10 ]%';\n```\n\n----------------------------------------\n\nTITLE: Defining Editable Price Field for Products in CouchCMS Template\nDESCRIPTION: This snippet defines the required 'pp_price' editable field for product price in a CouchCMS clonable template. It ensures each product (cloned page) has a non-zero price for PayPal compatibility. The field includes validation for length, data type, and non-negative decimal value. Place this inside the product.php template and ensure the Title field holds the product name. Required for the PayPal button to appear and transactions to process correctly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_1\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:editable name='pp_price' label='Price' desc='Amount in USD (correct upto 2 decimal points)'\n    maxlength='10'\n    search_type='decimal'\n    validator='non_negative_decimal'\n    type='text' />\n```\n\n----------------------------------------\n\nTITLE: Excluding Folders from Listing in CouchCMS\nDESCRIPTION: This snippet demonstrates excluding specific folders from the listing using the `exclude` parameter.  It also uses `hierarchical='1'`. The `masterpage` attribute specifies the template. The `exclude` parameter prevents the 'music' and 'asia' folders, and their children, from appearing in the output.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' hierarchical='1' exclude='music, asia'>\n    <cms:show k_folder_title /> [<cms:show k_level />] <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Repeating Content in CouchCMS Listing Snippet - CouchCMS Tags\nDESCRIPTION: This snippet demonstrates the use of <cms:repeat> and <cms:show> tags within a CouchCMS snippet to display a set number of headings using the template's title. It serves as an example of how custom listing displays can be built for the admin interface. Requires CouchCMS installed and proper snippet inclusion; expects a template with a defined k_template_title parameter. Input: n/a. Output: Four headings showing the template's title. Limitation: Does not access actual page data, only displays repeated template title.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_16\n\nLANGUAGE: CouchCMS tags\nCODE:\n```\n<cms:repeat '4'>\n    <h3>Hello <cms:show k_template_title />!</h3>\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Define Richtext Editable Region with Default Content (CouchCMS)\nDESCRIPTION: Demonstrates how to define a 'richtext' editable region using the <cms:editable> tag. It specifies the region's name ('prop_desc'), label, description, and type. The content enclosed within the opening and closing tags serves as the default value in the CKEditor instance.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n name='prop_desc'\n label='Description'\n desc='Enter description of property here'\n type='richtext'>\n    Condo pricing starts at just under $700,000. Waterfront Private Residences. Jack Nicklaus\n    Signature Golf Course.\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Updating a variable value in CouchCMS\nDESCRIPTION: This snippet shows how to change the value of an existing variable and then display its new value in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_message='Salut!' />\n<cms:show my_message />\n```\n\n----------------------------------------\n\nTITLE: Displaying CouchCMS Richtext Editable Region\nDESCRIPTION: Uses the `<cms:show>` tag to output the content stored in the editable region named 'blog_content' directly into the HTML structure of the template. This replaces static placeholder text with dynamic content managed via the CouchCMS admin panel.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:show blog_content />\n```\n\n----------------------------------------\n\nTITLE: Displaying Cart Price Components\nDESCRIPTION: Implementation of conditional display for cart price components (subtotal, discount, shipping, taxes) with proper formatting.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_31\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if \"<cms:pp_discount />\" || \"<cms:pp_shipping />\" || \"<cms:pp_taxes />\" >\n    <tr class=\"row-extras\">\n        <td class=\"col-extras-label\" colspan=\"4\">Subtotal</td>\n        <td class=\"col-extras\">$<cms:number_format \"<cms:pp_sub_total />\" /></td>\n    </tr>\n</cms:if>\n\n<cms:if \"<cms:pp_discount />\">\n    <tr class=\"row-extras\">\n        <td class=\"col-extras-label\" colspan=\"4\">Discount:</td>\n        <td class=\"col-extras col-discount\"><span class=\"subtract\">-</span>$<cms:number_format \"<cms:pp_discount />\" /></td>\n    </tr>\n</cms:if>\n\n\n<cms:if \"<cms:pp_shipping />\">\n    <tr class=\"row-extras\">\n        <td class=\"col-extras-label\" colspan=\"4\">Shipping:</td>\n        <td class=\"col-extras\">$<cms:number_format \"<cms:pp_shipping />\" /></td>\n    </tr>\n</cms:if>\n\n<cms:if \"<cms:pp_taxes />\">\n    <tr class=\"row-extras\">\n        <td class=\"col-extras-label\" colspan=\"4\">Taxes:</td>\n        <td class=\"col-extras\">$<cms:number_format \"<cms:pp_taxes />\" /></td>\n    </tr>\n</cms:if>\n\n<tr class=\"row-total\">\n    <td class=\"col-total-label\" colspan=\"4\">Total:</td>\n    <td class=\"col-total\">$<cms:number_format \"<cms:pp_total />\" /></td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Generating Image Thumbnail Using CouchCMS Thumbnail Tag in HTML\nDESCRIPTION: This snippet demonstrates how to generate a thumbnail from a static image URL using the CouchCMS thumbnail tag inside an HTML img element. The 'src' parameter specifies the full path to the source image, while 'width' sets the desired thumbnail width. The tag outputs the path to a generated thumbnail stored in the same folder as the original image. This usage requires CouchCMS and must be embedded inside CMS templates parsed by the system.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/thumbnail.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:thumbnail src='http://www.mysite.com/couch/uploads/image/test.jpg' width='150' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"<cms:thumbnail src='http://www.mysite.com/couch/uploads/image/test.jpg' width='150' />\" />\n```\n\n----------------------------------------\n\nTITLE: Conditional Listing for Folder-View with 'pages' Tag - HTML, Couch Tag Language\nDESCRIPTION: This snippet uses <cms:if k_is_folder> to determine if the current view is a folder-view. It then lists pages inside the specified folder by passing 'folder=k_folder_name' and 'include_subfolders=\\'1\\'' to the <cms:pages> tag. Requires the variables 'k_is_folder' and 'k_folder_name' to be available, which occurs when viewing a template filtered by folder. Output is a list of pages in the selected folder and its subfolders.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/listing-pages.md#_snippet_2\n\nLANGUAGE: HTML, Couch Tag Language\nCODE:\n```\n<cms:if k_is_folder >\n    <cms:pages folder=k_folder_name include_subfolders='1' >\n        <!-- All the variables of each page in this folder are available here -->\n    </cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Multiple Page Names (CouchCMS)\nDESCRIPTION: Fetches comments associated with pages named either 'my_first_entry' or 'my_another_entry'. The 'page_name' parameter accepts a comma-separated list for filtering by multiple page names.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_7\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_name='my_first_entry, my_another_entry'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Displaying Selected Checkbox Values - CouchCMS HTML\nDESCRIPTION: Displays the current value(s) of 'my_categories'—the editable checkbox region—by outputting its saved contents in the template. Requires a previously defined editable region with this name; outputs selected values joined by '|'. No additional dependencies.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show my_categories />\n```\n\n----------------------------------------\n\nTITLE: Checking Equality of Variable Using CouchCMS If Tag\nDESCRIPTION: These snippets demonstrate how to check if the variable 'my_var' holds a specific string value ('hello'). The <cms:if> condition evaluates to true if the comparison matches, allowing execution of the enclosed content. It supports '=', 'eq', and '==' as equivalent equality operators.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_1\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var = 'hello' >\n    <h3> Hello </h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var eq 'hello'> <h3>Hello</h3> </cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var == 'hello'> <h3>Hello</h3> </cms:if>\n```\n\n----------------------------------------\n\nTITLE: Persisting Form Data Upon Submission in CouchCMS (Kettle Template Language)\nDESCRIPTION: This snippet processes a successfully submitted form by persisting its values into the bound template using the <cms:db_persist_form> tag. The _invalidate_cache parameter disables cache invalidation, while _auto_title automatically generates a page title for the new clone. Dependencies include the CouchCMS runtime and both k_success and k_page_link variables defined; it is expected to be placed inside a Couch-managed form. This method results in creation of a new page (clone) containing the submitted data, redirecting the user on success.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_7\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:if k_success >\n\n    <cms:db_persist_form\n        _invalidate_cache='0'\n        _auto_title='1'\n    />\n\n    <cms:set_flash name='submit_success' value='1' />\n    <cms:redirect k_page_link />\n\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Enabling the 'inline' addon in Couch CMS PHP configuration\nDESCRIPTION: This PHP snippet shows how to include the 'inline' addon in Couch CMS by adding the necessary 'require_once' statement in the '_kfunctions.php_' file, enabling on-page editing capabilities across templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once( K_COUCH_DIR.'addons/inline/inline.php' );\n```\n\n----------------------------------------\n\nTITLE: Implementing PayPal Redirection in checkout.php (CouchCMS)\nDESCRIPTION: Adds the `cms:pp_payment_gateway` tag to the `checkout.php` template. This tag handles formatting the current shopping cart data according to PayPal's requirements and redirects the user to PayPal for payment. It configures the `shipping_address` parameter based on whether shippable items exist in the cart (`cms:pp_count_shippable_items`) and disables automatic cart emptying (`empty_cart='0'`) for testing purposes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_37\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once 'couch/cms.php'; ?>\n    <cms:no_cache />\n    <cms:pp_payment_gateway\n       shipping_address=\"<cms:if \\\"<cms:pp_count_shippable_items />\\\" >1<cms:else />0</cms:if>\"\n       empty_cart='0'\n    />\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cookie Value in CouchCMS\nDESCRIPTION: This snippet demonstrates how to use the `get_cookie` tag in CouchCMS to retrieve the value of a cookie. It requires the `name` parameter to specify the cookie to retrieve.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get_cookie.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:get_cookie 'my_test_cookie' />\n```\n\n----------------------------------------\n\nTITLE: Fetching Global Values Using get_custom_field Tag in CouchCMS\nDESCRIPTION: Demonstrates how to retrieve global site-wide values, such as site name, directly in templates using the *get_custom_field* tag with the masterpage set to globals.php. This method is suitable for fetching individual global variables without relying on the pages tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<h1><cms:get_custom_field 'site_name' masterpage='globals.php' /></h1>\n```\n\n----------------------------------------\n\nTITLE: Setting Dynamic HTML Title in CouchCMS Templates\nDESCRIPTION: Shows how to dynamically set the content of the <title> tag in HTML head section by fetching global site name or other variables. This practice ensures each page has a meaningful and unique title, aiding SEO and user navigation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<title><cms:get_custom_field 'site_name' masterpage='globals.php' /> - Portfolio Site</title>\n```\n\n----------------------------------------\n\nTITLE: Excluding Comments by Page IDs (CouchCMS)\nDESCRIPTION: Retrieves comments from all pages *except* those with IDs '13' or '17'. Uses the 'NOT' keyword before the comma-separated list in the 'page_id' parameter to exclude specific pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_5\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_id='NOT 13, 17'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Dropdown Editable Region in CouchCMS\nDESCRIPTION: Defines a CouchCMS editable region of type 'dropdown'. It sets the internal name, user-visible label, a description, specifies the list of selectable options using the `opt_values` parameter, and explicitly sets the type to 'dropdown'. The options are provided as a pipe-separated list.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential | Commercial | Rental'\n  type='dropdown'\n/>\n```\n\n----------------------------------------\n\nTITLE: Displaying Basic Calendar using CouchCMS Tags (HTML)\nDESCRIPTION: Demonstrates the fundamental usage of the CouchCMS `calendar` tag. It uses the mandatory nested `weeks` and `days` tags within an HTML table structure to generate a basic calendar grid for the current month, displaying only the day number (`k_day`) within each cell.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:calendar >\n    <table class=\"calendar_small\">\n        <cms:weeks>\n            <tr>\n            <cms:days >\n                <td ><cms:show k_day /></td>\n            </cms:days>\n            </tr>\n        </cms:weeks>\n    </table>\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Listing Monthly Archive Periods Using CouchCMS Archives Tag in PHP\nDESCRIPTION: This snippet demonstrates basic usage of the <cms:archives> tag in a PHP template to iterate over all monthly archive periods that contain at least one published page. It outputs each period's start date formatted as a readable string using the <cms:date> tag and the k_archive_date variable, which holds the start of the period. The listing is a simple display of months where content exists. No additional parameters are required other than specifying the masterpage template. This serves as a foundational example for building archive lists.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-archives.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:archives masterpage='blog.php'>\n    <cms:date k_archive_date format='F Y' /><br>\n</cms:archives>\n```\n\n----------------------------------------\n\nTITLE: Checking Presence of Variable Using CouchCMS If Tag\nDESCRIPTION: This snippet checks if a variable 'my_var' is present and has a value that is neither blank nor '0'. It outputs enclosed HTML only when 'my_var' exists and holds a truthy value. The <cms:if> tag evaluates the condition and executes its enclosed statements accordingly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_0\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var >\n   <h3> my_var is present </h3>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Sending Transactional Email on PayPal IPN Success in CouchCMS - CouchCMS Template\nDESCRIPTION: This realistic example integrates email notifications for successful PayPal purchases using CouchCMS tags. When k_paypal_success is true, it sends a thank you email to the buyer using the send_mail tag, utilizes variables like pp_receiver_email, pp_payer_email, and pp_item_name, and provides a cloaked download link for the purchased file using cloak_url. On error, it logs the error message. Required prerequisites: functional CouchCMS installation, properly configured email settings, and the downloadable_file region set for the item.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_7\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:paypal_processor>\n    <cms:if k_paypal_success>\n        <cms:send_mail from=pp_receiver_email to=pp_payer_email subject='Thank you for your purchase!' >\n            Dear <cms:show pp_first_name /> <cms:show pp_last_name />,\n\n            Thank you for buying <cms:show pp_item_name />.\n\n            You may download your file from the following link:\n            <cms:cloak_url link=downloadable_file force_download='1' />\"\n\n        </cms:send_mail>\n    </cms:if>\n\n    <cms:if k_paypal_error>\n        <cms:set msg=\"ERROR: <cms:show k_paypal_error/>\" />\n        <cms:log msg />\n    </cms:if>\n</cms:paypal_processor>\n```\n\n----------------------------------------\n\nTITLE: Sending Email on Successful Form Submission\nDESCRIPTION: Demonstrates how to use the Couch email tag to send an email with form data upon successful submission by utilizing the k_success variable and displaying submitted values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if k_success>\n   <cms:email from=k_email_from to=k_email_to subject='Contact form submitted'>\n      Following is the form submitted by the visitor:\n      Name: <cms:show frm_name />\n      Email: <cms:show frm_email />\n      Message: <cms:show frm_message />\n   </cms:email>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Form Tag to Couch CMS Form Tag\nDESCRIPTION: Shows how to replace a standard HTML form tag with its Couch CMS equivalent by adding the 'cms:' prefix and removing the action attribute since Couch handles processing internally.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<form method=\"post\" action=\"form_process.php\">\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:form method=\"post\" action=\"\">\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination Navigation Manually - CouchCMS Template\nDESCRIPTION: This example demonstrates how to use the CouchCMS pagination variables (`k_paginated_top`, `k_paginator_required`, `k_current_page`, `k_total_pages`, `k_total_records`, `k_record_from`, `k_record_to`, `k_paginated_bottom`, `k_paginate_link_prev`, `k_paginate_link_next`) to display pagination information (page numbers, record range, total) and manually create 'prev' and 'next' navigation links within the tag loop.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pagination.md#_snippet_1\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:pages masterpage='blog.php' limit='10' paginate='1'>\n    <cms:if k_paginated_top>\n        <cms:if k_paginator_required >\n            Page <cms:show k_current_page /> of <cms:show k_total_pages /><br>\n        </cms:if>\n        <cms:show k_total_records /> Pages Found.\n        Displaying: <cms:show k_record_from />-<cms:show k_record_to />\n    </cms:if>\n\n    <!-- All the page variables can be accessed here -->\n\n    <cms:if k_paginated_bottom >\n        <cms:if k_paginate_link_prev >\n            <a href=\"<cms:show k_paginate_link_prev />\">prev</a>\n        </cms:if>\n        <cms:if k_paginate_link_next >\n            <a href=\"<cms:show k_paginate_link_next />\">next</a>\n        </cms:if>\n    </cms:if>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Decrementing Variable by a Specific Value in CouchCMS\nDESCRIPTION: This snippet demonstrates how to decrement the CouchCMS variable `my_value` by a value of 2.  It relies on the variable `my_value` being previously set. The `decr` tag takes the variable to be decremented as the first parameter and the amount to decrement as the second optional parameter. The expected output after this operation is 9, which is then displayed by the `show` tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/decr.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:decr my_value '2' />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: Initializing PayPal IPN Processing in CouchCMS Template - CouchCMS Template\nDESCRIPTION: This snippet inserts the cms:paypal_processor tag at the start of a CouchCMS template to process PayPal IPNs. The debug parameter, when set to '1', writes step-by-step logs to a file named log.txt in the site's root directory. No additional dependencies are needed beyond enabling CouchCMS and correct file permissions; the expected output is processing and logging of incoming IPN events from PayPal for further handling.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_3\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:paypal_processor debug='1' />\n```\n\n----------------------------------------\n\nTITLE: Conditional Logic for Embedding Multiple Page-Specific Snippets (CouchCMS Template Language)\nDESCRIPTION: This code extends conditional embedding for both 'contact-us' and 'testimonials' pages, embedding their respective snippets. If neither matches, it displays 'my_content'. Relies on Embed and If tags, and k_page_name for matching. As more cases are added, maintenance can become unwieldy.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_5\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if k_is_page >\n   <cms:if k_page_name=='contact-us' >\n      <cms:embed 'contact-us.inc' />\n   <cms:else />\n        <cms:if k_page_name=='testimonials' >\n            <cms:embed 'testimonials.inc' />\n        <cms:else />\n            <cms:show my_content />\n        </cms:if>\n   </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Defining Image and Thumbnail Regions for CouchCMS Gallery\nDESCRIPTION: Specifies the mandatory editable regions required for a CouchCMS gallery template. An 'image' type region named `gg_image` must be defined for the main image, and a 'thumbnail' type region named `gg_thumb`, associated with `gg_image`, must be defined for the thumbnail. These specific names are crucial for CouchCMS's automatic page creation during mass uploads.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/photo-gallery.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:template title='Gallery' clonable='1' dynamic_folders='1' gallery='1'>\n\n   <cms:editable\n      name=\"gg_image\"\n      label=\"Image\"\n      desc=\"Upload your main image here\"\n      width=\"500\"\n      show_preview='1'\n      preview_height='200'\n      type=\"image\"\n   />\n\n   <cms:editable\n      name=\"gg_thumb\"\n      assoc_field=\"gg_image\"\n      label=\"Image Thumbnail\"\n      desc=\"Thumbnail of image above\"\n      width='115'\n      height='115'\n      enforce_max='1'\n      type=\"thumbnail\"\n   />\n\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Conditions with Logical OR (||) in CouchCMS If Tag\nDESCRIPTION: These snippets demonstrate combining conditions using the logical OR operator '||'. The <cms:if> tag executes the enclosed statements if any one of the conditions evaluates to true. They illustrate behavior when variables satisfy one or both conditions, showing the flexibility of OR logic.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_5\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if (age gt '18') || (age lt '40')> .. </cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if (age lt '18') || (age gt '40')> .. </cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if (age gt '18') || (sex == 'M')> .. </cms:if>\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Maps API Key in PHP\nDESCRIPTION: This PHP snippet shows how to define the Google Maps API key within the CouchCMS configuration file (`config.php`). A valid key obtained from the Google API console is required for the `cms:google_map` tag to function correctly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/google-maps.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// 16.\n// Google Maps API Key.\n// You'll have to get one for your site from 'http://code.google.com/apis/maps/'\n// if your site makes use of Google maps.\ndefine( 'K_GOOGLE_KEY', 'ABQIAAAAD7z_FToS5NSqosnG9No1ABQYPrehWcZJH1ec0SZqipYFbK_nfRT1ryCGKzl5KGpFG3y5jyPe_uClVg' );\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Content Styles for CKEditor in JavaScript\nDESCRIPTION: This JavaScript snippet uses CKEDITOR.stylesSet.add to register a named style set ('my_styles') with CKEditor, providing users with pre-defined formatting options tied to site CSS classes such as 'notice', 'error', and 'success'. Dependencies: CKEditor JavaScript library. Inputs: none directly, but requires the CSS classes to exist on your site. Outputs: makes custom styles available in the editor's style dropdown. Limitations: The style set name must match the name used in the CouchCMS <cms:editable> tag's custom_styles parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.stylesSet.add( 'my_styles',\n[\n    { name : 'Normal'    , element : 'p' },\n    { name : 'Notice'    , element : 'p', attributes : { 'class' : 'notice' } },\n    { name : 'Warning'   , element : 'p', attributes : { 'class' : 'error' } },\n    { name : 'Message'   , element : 'p', attributes : { 'class' : 'success' } }\n]);\n```\n\n----------------------------------------\n\nTITLE: Listing Pages in Current Archive (Dynamic) - CouchCMS Tag\nDESCRIPTION: Intended for use within a CouchCMS archive view, this snippet dynamically fetches pages that belong to the current archive period using the `k_archive_date` variable for `start_on` and `k_next_archive_date` variable for `stop_before`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_21\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages start_on=k_archive_date stop_before=k_next_archive_date ></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Accessing Individual Input Fields After Submission\nDESCRIPTION: Shows how to access submitted input values individually using 'frm_' variables, and conditionally display error messages for each field that failed validation after submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_3\n\nLANGUAGE: HTML+CouchCMS\nCODE:\n```\n<cms:form method=\"post\">\n    <cms:if k_success >\n        <h3>Form successfully submitted</h3>\n        name: <cms:show frm_name /><br>\n        email: <cms:show frm_email /><br>\n    </cms:if>\n\n    <cms:if k_error >\n        <h3>Failed to submit form</h3>\n    </cms:if>\n\n    Name: <cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" />\n          <cms:if k_error_name ><cms:show k_error_name /></cms:if> <br />\n    Email: <cms:input type=\"text\" size=\"10\" name=\"email\" />\n           <cms:if k_error_email ><cms:show k_error_email /></cms:if> <br />\n\n    <cms:input name=\"submit\" type=\"submit\" value=\"Send\" />\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Div Tag Usage in CouchCMS\nDESCRIPTION: Provides an example of how to use the 'div' tag in CouchCMS for dividing a variable's value by a specified number, specifically dividing 'my_count' by 5. It explains that the tag outputs the result of the division and accepts parameters that can be literals, variables, or outputs from other tags. The snippet is self-contained and relies on no additional variables or functions beyond the 'div' tag itself.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/div.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:div my_count '5' />\n```\n\n----------------------------------------\n\nTITLE: Accessing the selected value of a 'radio' editable region in CouchCMS\nDESCRIPTION: Shows how to retrieve and display the value selected by the user in a radio button group using the <cms:show> tag with the editable region's name. The output will be the selected option's value.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show my_property_type />\n```\n\n----------------------------------------\n\nTITLE: CouchCMS radio Input Type\nDESCRIPTION: Shows how to create radio buttons in CouchCMS using the '<cms:input type=\"radio\" ... />' tag.  The 'opt_values' attribute is used to define the options, with the format 'Label=value'. Labels are what the user sees, values are what is submitted.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_10\n\nLANGUAGE: CouchCMS\nCODE:\n```\nWhat kind of shirt are you wearing? <br />\n\nShade:\n<cms:input type=\"radio\" name=\"shade\" opt_values=\"Dark=dark | Light=light\" /><br />\n\nSize:\n<cms:input type=\"radio\" name=\"size\" opt_values=\"Small=small | Medium=medium | Large=large\" /><br />\n```\n\n----------------------------------------\n\nTITLE: Conditional Class Application for Active Menu Item\nDESCRIPTION: This code adds dynamic class assignment to menu items based on the current template using CouchCMS's *k_template_name* variable. It ensures the correct menu item is highlighted to reflect the active section, enhancing navigation clarity across pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<li <cms:if k_template_name='blog'> class=\"current\"</cms:if> >\n  <a href=\"<cms:link 'blog.php' />\">Blog</a>\n</li>\n```\n\n----------------------------------------\n\nTITLE: Querying Numeric Fields - Range Comparisons\nDESCRIPTION: This snippet fetches all pages with custom field distance containing a value less than 50 AND custom field price 'greater than or equal to' 1000000 AND custom field price 'less than or equal to' 3000000 (i.e. price between 1000000 and 3000000). This example demonstrates range-based comparisons for numerical data. It shows how to include comparisons like less than, greater than and in-between.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_38\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages custom_field='distance<50 | price>=1000000 | price<=3000000'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Settings in Couch CMS\nDESCRIPTION: Shows how to configure email settings in the config.php file by setting the sender and recipient email addresses for the contact form.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\ndefine( 'K_EMAIL_FROM', 'admin@mytestsite.com' );\ndefine( 'K_EMAIL_TO', 'admin@mytestsite.com' );\n```\n\n----------------------------------------\n\nTITLE: Cloaking a Webpage Link with CouchCMS\nDESCRIPTION: Using the cloak_url tag to hide the destination of a webpage link, with the redirect parameter set to enable webpage redirection.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"<cms:cloak_url link='http://www.google.com' redirect='1' />\" >Visit Site</a>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Full Nested Menu - CouchCMS Tag - CouchCMS Tag Language\nDESCRIPTION: Demonstrates the basic use of the <cms:menu> tag to generate a dropdown menu based on the specified masterpage template ('menu.php'). Requires that nested pages exist under the referenced masterpage in the CMS. Outputs the complete menu tree for all nested pages using default parameters. No styling or depth limitation is applied in this example.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_0\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php'/>\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Thumbnail Editable Region in CouchCMS\nDESCRIPTION: Creates a CouchCMS editable region named 'my_image_thumb' of type 'thumbnail'. It is linked to the 'my_image' region using `assoc_field`. This automatically generates a thumbnail (100px wide, proportional height) whenever the 'my_image' region is updated. `show_preview='1'` displays the generated thumbnail in the admin panel.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable\n    name='my_image_thumb'\n    label='Image Thumbnail'\n    desc='Thumbnail of main image'\n    width='100'\n    show_preview='1'\n    assoc_field='my_image'\n    type='thumbnail'\n/>\n```\n\n----------------------------------------\n\nTITLE: Fetching Custom Field Value - CouchCMS\nDESCRIPTION: This code snippet demonstrates how to use the `get_custom_field` tag to fetch the value of an editable region named 'site_name' from the 'globals.php' template. The fetched value will be outputted to the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get_custom_field.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:get_custom_field 'site_name' masterpage='globals.php' />\n```\n\n----------------------------------------\n\nTITLE: Setting a Simple Variable with the Set tag in Couch CMS\nDESCRIPTION: Creates a variable named 'greeting' and assigns the value 'Hello' to it. This demonstrates the basic usage of the set tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set.md#_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n<cms:set greeting='Hello' />\n```\n\n----------------------------------------\n\nTITLE: Configuring .htaccess for Custom 404 Page in CouchCMS\nDESCRIPTION: Excerpt from the .htaccess file showing how to uncomment the ErrorDocument directive to enable a custom 404 error page. The configuration points to a 404.php file in the website's root directory.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/custom-404-page.md#_snippet_0\n\nLANGUAGE: apache\nCODE:\n```\n#If you wish to use a custom 404 page, place a file named 404.php in your website's root and uncomment the line below.\n#If your website is installed in a subfolder, change the line below to reflect the path to the subfolder.\n#e.g. for http://www.example.com/subdomain1/subdomain2/ make it ErrorDocument 404 /subdomain1/subdomain2/404.php\n#ErrorDocument 404 /404.php\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages in Descending Order - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages from 'blog.php' and sorts them in descending order based on their 'publish_date' using the `order='desc'` parameter. This is also the default behavior when no order is specified.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_26\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' orderby='publish_date' order='desc'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Complete Job Application Form with Data Persistence and Post-Submission Feedback (CouchCMS/Kettle Template Language & HTML)\nDESCRIPTION: This snippet presents a full CouchCMS-managed application form, including form fields, error handling, and success messaging. The form persists data to the bound template with <cms:db_persist_form _auto_title='1' /> and provides immediate feedback to users via <cms:set_flash> and conditional logic. Dependencies include a CouchCMS template, defined masterpage, and input field bindings. Submitted information is stored as a new cloned page, while errors are displayed inline.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_12\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:set submit_success=\"<cms:get_flash 'submit_success' />\" />\n\n<cms:if submit_success >\n    <h4>Success: Your application has been submitted.</h4>\n</cms:if>\n\n\n<cms:form\n    masterpage=k_template_name\n    mode='create'\n    enctype='multipart/form-data'\n    method='post'\n    anchor='0'\n    >\n\n    <cms:if k_success >\n\n        <cms:db_persist_form\n            _invalidate_cache='0'\n            _auto_title='1'\n        />\n\n        <cms:set_flash name='submit_success' value='1' />\n        <cms:redirect k_page_link />\n    </cms:if>\n\n    <cms:if k_error >\n        <div class=\"error\">\n            <cms:each k_error >\n                <br><cms:show item />\n            </cms:each>\n        </div>\n    </cms:if>\n\n\n    <label>First Name</label>\n    <cms:input name=\"first_name\" type=\"bound\" />\n    <br />\n\n    <label>Last Name</label>\n    <cms:input name=\"last_name\" type=\"bound\" />\n    <br />\n\n    <label>Email Address</label>\n    <cms:input name=\"email\" type=\"bound\" />\n    <br />\n\n    <label>Portfolio Website</label>\n    <cms:input name=\"portfolio\" type=\"bound\" />\n    <br />\n\n    <label>Which position are you applying for? </label>\n    <cms:input name=\"position\" type=\"bound\" />\n    <br />\n\n    <label>Salary Requirements</label>\n    <cms:input name=\"salary\" type=\"bound\" />\n    <br />\n\n    <label>Attach a Copy of Your Resume</label>\n    <cms:input name=\"resume\" type=\"bound\" />\n    <p>Word or PDF Documents Only</p>\n    <br />\n\n    <cms:if \"<cms:not submit_success />\" >\n        <button type=\"submit\">Submit Application</button>\n    </cms:if>\n\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Dynamically Generating RSS Feed with CouchCMS Pages - PHP & Couch Tag\nDESCRIPTION: This advanced snippet generates a dynamic RSS feed by iterating through pages (e.g., property.php masterpage) in CouchCMS. It sets the correct MIME type, safely outputs the XML declaration, and creates channel/item nodes based on editable fields. Expects the existence of editable fields such as my_news_text and proper configuration of k_site_link, k_page_title, k_page_link, and k_page_date variables. Uses HTML encoding for descriptions and limits the feed to 10 most recent items. Dependencies include CouchCMS and proper template structure. Outputs a standards-compliant RSS feed suitable for readers and aggregators.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/rss-feeds.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<cms:content_type 'text/xml' /><cms:concat '<' '?xml version=\"1.0\" encoding=\"' k_site_charset '\"?' '>' />\n<rss version=\"2.0\">\n  <channel>\n    <title>My News Channel</title>\n    <link><cms:show k_site_link /></link>\n    <description>Description of this channel.</description>\n    <language>en-us</language>\n    <pubDate><cms:date format='D, d M Y H:i:s' gmt='1'/> GMT</pubDate>\n    <generator>CouchCMS</generator>\n\n    <cms:pages masterpage='property.php' limit=\"10\">\n    <item>\n        <title><cms:show k_page_title /></title>\n        <link><cms:show k_page_link /></link>\n        <description>\n            <cms:html_encode>\n                <cms:excerptHTML><cms:show my_news_text /></cms:excerptHTML>\n            </cms:html_encode>\n        </description>\n\n        <pubDate><cms:date k_page_date format='D, d M Y H:i:s' gmt='1'/> GMT</pubDate>\n    </item>\n    </cms:pages>\n </channel>\n</rss>\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Outputting Current Date with CouchCMS date Tag - Markup\nDESCRIPTION: Outputs the current date/time using the <cms:date /> tag without any parameters. No dependencies are required. The output format defaults to the system's standard if no format or date is provided. No inputs are needed, and the tag returns a string representing the current date/time.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n<cms:date />\n```\n\n----------------------------------------\n\nTITLE: Dynamic Redirection using CouchCMS link tag\nDESCRIPTION: Example showing how to redirect users to a cloned page from the same template by generating the URL dynamically with the 'link' tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/redirect.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:redirect url=\"<cms:link masterpage=k_template_name page='test' />\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Reusable Sidebar Snippet with Conditional Latest News Section\nDESCRIPTION: This snippet involves extracting sidebar HTML into a separate file 'blog_sidebar.html' and embedding it in multiple views. It also conditionally displays the 'Latest News' section only in page-view layouts using a CouchCMS conditional tag, making the sidebar reusable and context-aware.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if k_is_pageview>\n  <div class='latest-news'>\n    ... list latest blog posts ...\n  </div>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Converting Regular Inputs to Bound Inputs in CouchCMS\nDESCRIPTION: Demonstrates how to convert standard form inputs to data-bound inputs by changing their type from 'text' to 'bound'. This makes the inputs inherit all properties and validations from the corresponding editable regions in the template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_6\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<label>First Name</label>\n<cms:input name=\"first_name\" type=\"bound\" />\n<br />\n\n<label>Last Name</label>\n<cms:input name=\"last_name\" type=\"bound\" />\n<br />\n\n<label>Email Address</label>\n<cms:input name=\"email\" type=\"bound\" />\n<br />\n\n<label>Portfolio Website</label>\n<cms:input name=\"portfolio\" type=\"bound\" />\n<br />\n\n<label>Which position are you applying for? </label>\n<cms:input name=\"position\" type=\"bound\" />\n<br />\n\n<label>Salary Requirements</label>\n<cms:input name=\"salary\" type=\"bound\" />\n<br />\n\n<label>Attach a Copy of Your Resume</label>\n<cms:input name=\"resume\" type=\"bound\" />\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Length Validator in CouchCMS\nDESCRIPTION: Example of using the 'min_len' validator to enforce a minimum character length for input in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_6\n\nLANGUAGE: html\nCODE:\n```\nvalidator='min_len=6'\n```\n\n----------------------------------------\n\nTITLE: Using Output of Another Tag as Parameter in CouchCMS\nDESCRIPTION: Illustrates how to set a tag parameter with the output of another tag by enclosing the nested tag within double quotes. This enables dynamic parameters based on other tags' outputs, such as setting 'message' to the output of 'show'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/setting-parameters.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set message=\"<cms:show 'Hello World' />\" />\n<cms:show message />\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages by Custom Field - CouchCMS Tag\nDESCRIPTION: This snippet sorts the fetched pages cloned from 'blog.php' based on the value of a specific custom field ('my_blog_author') using the `orderby` parameter. This requires the custom field to be defined in the template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_24\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' orderby='my_blog_author'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Generating a URL with One Query Parameter using add_querystring - CouchCMS/HTML\nDESCRIPTION: This snippet demonstrates how to use the add_querystring self-closing tag within a CouchCMS template to add a single query string parameter ('param1=some_value') to a dynamic URL represented by the variable k_page_link. No dependencies apart from CouchCMS are required. The tag ensures proper formatting of the URL and should be placed inside the href attribute of the anchor element; input is the base link and query string, and output is a valid URL with the appended parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/add_querystring.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"<cms:add_querystring k_page_link 'param1=some_value' />\" >Some link</a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Repeatable Regions with Iteration Variables in CouchCMS\nDESCRIPTION: Demonstrates advanced usage of the `<cms:show_repeatable>` tag for displaying repeatable region data. It shows how to use the `startcount` parameter to define the starting index of the loop counter (default is 1). Within the loop, it accesses iteration-specific variables `k_count` (current item number) and `k_total_records` (total number of items) provided by the tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/repeatable-regions.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:show_repeatable 'my_multiple_images' startcount='0' >\n    <cms:show k_count /> / <cms:show k_total_records />\n    <b>Image: <img src=\"<cms:show my_image />\" /> \n    <b>Desc:</b> <cms:show my_desc />\n    <hr>\n</cms:show_repeatable>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of nested_pages Tag in CouchCMS\nDESCRIPTION: Shows the simplest implementation of the nested_pages tag to list hierarchical pages from a masterpage template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_pages.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_pages masterpage='index.php'>\n   <a href=\"<cms:show k_nestedpage_link />\"><cms:show k_nestedpage_title /></a><br />\n</cms:nested_pages>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS 'each' tag, using the default separator\nDESCRIPTION: This snippet demonstrates the use of the 'each' tag with the default separator '|'.  It defines the 'msg' variable and then applies the each tag, which splits the variable based on the default separator. The 'show' tag displays each iterated value. This is functionally the same as the previous example but omits the `sep` parameter because it defaults to '|'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/each.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:each msg >..</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Displaying Folders with Links in CouchCMS\nDESCRIPTION: This snippet retrieves folder titles and links using the `folders` tag and the `k_folder_title` and `k_folder_link` variables.  It generates HTML links, where each link's text is a folder title and the link points to the folder's view. The `masterpage` parameter specifies which template's folders to use.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php'>\n<a href=\"<cms:show k_folder_link />\"><cms:show k_folder_title /></a> <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Setting a cookie with named parameters in CouchCMS\nDESCRIPTION: This snippet illustrates using named parameters with the set_cookie tag to set a cookie called 'my_test_cookie' with the value 'hello world'. It enhances clarity and flexibility in cookie configuration.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set_cookie.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set_cookie name='my_test_cookie' value='hello world' />\n```\n\n----------------------------------------\n\nTITLE: Performing Basic Search with CouchCMS\nDESCRIPTION: This snippet demonstrates the basic usage of the `cms:search` tag. It searches pages within the 'blog.php' template, limits the results to 10, and iterates through them to display the linked search title and search excerpt for each found page. It expects search terms to be provided via the 's' query string parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-search.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:search masterpage='blog.php' limit='10' >\n    <h3><a href=\"<cms:show k_page_link />\"><cms:show k_search_title /></a></h3>\n    <cms:show k_search_excerpt />\n</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Displaying Product Options with CouchCMS\nDESCRIPTION: This snippet demonstrates the rendering of product options using CouchCMS tags within HTML. It shows how to handle different option types (lists, radio buttons, dropdowns, and text input fields) and utilize the `pp_product_options` and `pp_option_values` tags. It uses conditional statements (`cms:if`) to display different input types based on the option configuration and includes handling for option prices. It is dependent on the CouchCart component, which must be enabled, and utilizes CouchCMS tags. The output includes labels, hidden inputs, radio buttons, select dropdowns, and text input fields based on the option type and modifiers.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"product-options\">\n   <cms:pp_product_options >\n      <cms:if option_type='list'>\n        <cms:if option_modifier='*' || option_modifier='**'>\n            <label><cms:show option_name />:</label><br>\n            <input type=\"hidden\" name=\"on<cms:show k_count />\" value=\"<cms:show option_name />\" style=\"display:none;\">\n            <cms:set radio_input_name=\"os<cms:show k_count />\" />\n            <cms:pp_option_values>\n                <label class=\"radio-label\">\n                    <input type=\"radio\" name=\"<cms:show radio_input_name />\" value=\"<cms:show k_count />\"<cms:if k_count='0'> checked=\"true\"</cms:if>>\n                    <cms:show option_val />\n                    <cms:if option_price >\n                        [<cms:show option_price_sign /><cms:pp_config 'currency_symbol' /><cms:show option_price />]\n                    </cms:if>\n                </label>\n                <cms:if option_modifier='*'></cms:if>\n            </cms:pp_option_values>\n        <cms:else />\n            <label><cms:show option_name />:</label><br>\n            <input type=\"hidden\" name=\"on<cms:show k_count />\" value=\"<cms:show option_name />\" style=\"display:none;\">\n            <select name=\"os<cms:show k_count />\">\n                <cms:pp_option_values>\n                    <option value=\"<cms:show k_count />\">\n                        <cms:show option_val />\n                        <cms:if option_price >\n                            [<cms:show option_price_sign /><cms:pp_config 'currency_symbol' /><cms:show option_price />]\n                        </cms:if>\n                    </option>\n                </cms:pp_option_values>\n            </select>\n        </cms:if>\n      <cms:else />\n        <label><cms:show option_name />:</label><br>:\n        <input type=\"hidden\" name=\"on<cms:show k_count />\" value=\"<cms:show option_name />\" style=\"display:none;\">\n        <input type=\"text\" name=\"os<cms:show k_count />\" maxlength=\"200\">\n      </cms:if>\n   </cms:pp_product_options>\n   <br>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by End Date - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' that have a publication date strictly before '2010-03-01' using the `stop_before` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_19\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' stop_before='2010-03-01'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Concatenating Strings with Newlines using concat (CouchCMS)\nDESCRIPTION: Demonstrates a practical application of the `<cms:concat>` tag to combine literal strings and variables (`pp_item_name`, `pp_item_number`, `pp_quantity`), specifically showcasing the inclusion of newline escape characters (`\\n`) to format the output over multiple lines.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/concat.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set msg = \"<cms:concat 'item_name: ' pp_item_name '\\n'\n'item_number: ' pp_item_number '\\n'\n'quantity: ' pp_quantity />\" />\n```\n\n----------------------------------------\n\nTITLE: Limiting the Number of Comments Fetched (CouchCMS)\nDESCRIPTION: Retrieves only the latest five approved comments. The 'limit' parameter restricts the number of results. Since 'order' is not specified, it defaults to 'desc' (latest first).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_9\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments limit='5'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Comparing Variable Values Using Relational Operators in CouchCMS If Tag\nDESCRIPTION: These snippets illustrate numeric comparisons using the <cms:if> tag to check if 'my_var' is greater than, greater than or equal to, less than, or less than or equal to 100. Operators used include 'gt', 'ge', 'lt', and 'le'. The tag executes enclosed content only if the respective condition is true.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_3\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var gt '100' >\n    <h3> Value greater than 100 </h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var ge '100' >\n    <h3> Value greater than or equal to 100 </h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var lt '100' >\n    <h3> Value lesser than 100 </h3>\n</cms:if>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if my_var le '100' >\n    <h3> Value lesser than or equal to 100 </h3>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Using opt_values with custom value assignments in CouchCMS 'radio' editable\nDESCRIPTION: Illustrates how to assign custom save values to options using the syntax 'Option=Value' in opt_values. When a user selects 'Rental', the output of <cms:show> will be '2' if assigned accordingly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\nopt_values='Residential=0 | Commercial=1 | Rental=2'\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential=0 | Commercial=1 | Rental=2'\n  /\n```\n\n----------------------------------------\n\nTITLE: Apply Absolute CSS Stylesheet URL to Richtext Editor (CouchCMS)\nDESCRIPTION: Illustrates applying a CSS stylesheet using a full URL in the 'css' parameter. This allows linking to stylesheets hosted anywhere, including externally or using the full site path.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css='http://www.mysite.com/styles/editor_styles.css'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Defining a Self-Closing Text Editable Region\nDESCRIPTION: This code snippet shows how to define a 'text' type editable region without a default value. By making the tag self-closing, no default text is displayed in the textbox.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/text.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='prop_title' label='Title'\ndesc='Enter title of property here'\ntype='text' />\n```\n\n----------------------------------------\n\nTITLE: Generating a Customized Search Form with CouchCMS\nDESCRIPTION: This snippet shows how to customize the search form generated by `cms:search_form`. The `msg` parameter sets the placeholder text in the input field, and the `processor` parameter specifies the URL of the page that should handle the form submission (e.g., a dedicated search results page).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-search.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:search_form msg='Enter keywords' processor=\"<cms:show k_site_link />search.php\" />\n```\n\n----------------------------------------\n\nTITLE: Restricting Input to Alphabetic Characters in CouchCMS\nDESCRIPTION: Example of using the 'alpha' validator to restrict input to only alphabetic characters (a-z, A-Z) in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_9\n\nLANGUAGE: html\nCODE:\n```\nvalidator='alpha'\n```\n\n----------------------------------------\n\nTITLE: Fetch Variable from Specific Method - CouchCMS Tag\nDESCRIPTION: Shows how to use the `gpc` tag to retrieve a variable's value specifically from a defined method (e.g., 'post'). The `method` parameter accepts 'get', 'post', or 'cookie', allowing precise control over the data source. Like the default usage, this method also sanitizes the value, enhancing security.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/gpc.md#_snippet_1\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:gpc 'my_parameter' method='post' />\n```\n\n----------------------------------------\n\nTITLE: Listing Pages in Current Folder (Dynamic) - CouchCMS Tag\nDESCRIPTION: Intended for use within a CouchCMS folder view, this snippet dynamically fetches pages that belong to the current folder (`k_folder_name`) and includes pages from its subfolders by setting `include_subfolders='1'`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_16\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages folder=k_folder_name include_subfolders='1'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Setting Content-Type Header Using content_type Tag in CouchCMS (HTML)\nDESCRIPTION: This snippet demonstrates how to use the content_type tag in CouchCMS templates to set the HTTP Content-Type response header. A typical use case is for RSS feeds, where the content type should be 'text/xml' for browsers to recognize the feed properly. Requires CouchCMS environment with template parsing; the single value parameter specifies the desired MIME type, and the tag is self-closing without outputting variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/content_type.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:content_type 'text/xml' />\n```\n\n----------------------------------------\n\nTITLE: Fetching Related Albums of a Specific Artist Using pages and related_pages Tags in CouchCMS (HTML-like Templating)\nDESCRIPTION: Demonstrates how to provide context explicitly when page-view context is not available by using the pages tag to specify a particular artist page ('john-lennon') and then fetching related album pages through the related_pages tag. This snippet requires the 'artists.php' template and the 'artist_albums' relation field. It outputs the titles of albums related to the specified artist, allowing retrieval of related pages outside of a direct page context. This is useful in list views or unrelated page views where the default context is insufficient.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_7\n\nLANGUAGE: HTML-like CouchCMS Templating Language\nCODE:\n```\n<cms:pages masterpage='artists.php' page_name='john-lennon'>\n   <h3>Albums of John Lennon:</h3>\n   <cms:related_pages 'artist_albums' >\n      <!-- All variables of 'albums.php' are available here -->\n      <cms:show k_page_title />\n   </cms:related_pages>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Setting a cookie with set_cookie tag in CouchCMS\nDESCRIPTION: This snippet demonstrates the basic usage of the set_cookie tag with positional parameters to set a cookie named 'my_test_cookie' with the value 'hello world'. It shows how to create and assign cookies directly in CouchCMS templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set_cookie.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set_cookie 'my_test_cookie' 'hello world' />\n```\n\n----------------------------------------\n\nTITLE: Declaring a Gallery Clonable Template in CouchCMS\nDESCRIPTION: Defines a CouchCMS template named 'Gallery' as clonable, enabling dynamic folders for albums, and marking it specifically as a gallery template using `gallery='1'`. This `gallery='1'` parameter enables the special mass upload interface for this template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/photo-gallery.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:template title='Gallery' clonable='1' dynamic_folders='1' gallery='1'>\n\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Setting Shipping by Order Total as Percentage\nDESCRIPTION: This snippet configures shipping charges as a percentage of the order's total cost, using a sliding scale in '_addons/cart/config.php_'. The example shows shipping charges based on a percentage of the cart's total for orders over $0, $50, and $100.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['shipping_by_order_total'] = '[ 0=6 | 50=3 | 100=0 ]%'; \n```\n\n----------------------------------------\n\nTITLE: Handling Post-Submission Actions with Email Notification\nDESCRIPTION: Illustrates how to send an email upon successful form submission using the 'send_mail' Couch tag. Combines validation success detection with mailing mechanism to notify or process submitted data further.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_4\n\nLANGUAGE: HTML+CouchCMS\nCODE:\n```\n<cms:form method=\"post\">\n    <cms:if k_success >\n        <h3>Thanks for your submission. We'll get back to you.</h3>\n        <cms:send_mail from='abc@somemail.com' to='xyz@somemail.com' subject='Feedback from your site'>\n            The following is an email sent by a visitor to your site:\n            <cms:show k_success />\n        </cms:send_mail>\n    </cms:if>\n\n    <cms:if k_error >\n        <h3>Failed to submit form</h3>\n        <cms:each k_error >\n            <cms:show item /><br>\n        </cms:each>\n    </cms:if>\n\n    Name: <cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" /> <br />\n    Email: <cms:input type=\"text\" size=\"10\" name=\"email\" /> <br />\n    <cms:input name=\"submit\" type=\"submit\" value=\"Send\" />\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic CouchCMS Nicedit Editable Region\nDESCRIPTION: Basic syntax for defining an editable region of type 'nicedit'. This snippet shows the minimal required parameters: `type`, `label`, and `name`. It creates a simple WYSIWYG editor field.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/nicedit.md#_snippet_0\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='nicedit' label='Description' name='my_desc' />\n```\n\n----------------------------------------\n\nTITLE: Checking Page Existence with cms:page_exists\nDESCRIPTION: Uses the `cms:page_exists` tag to check if a cloned page named 'contact-us', derived from the 'index.php' master template, exists. It returns '1' if the page exists and '0' otherwise. The `masterpage` parameter specifies the template the page was cloned from; if omitted, the current template is assumed. The `name` parameter specifies the name of the cloned page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/page_exists.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:page_exists 'contact-us' masterpage='index.php' />\n```\n\n----------------------------------------\n\nTITLE: Using nested_crumbs as a Tag-Pair for Custom Markup in CouchCMS\nDESCRIPTION: Advanced implementation using nested_crumbs as a tag-pair with custom markup. This example includes parameters for ignoring show_in_menu setting, prepending and appending HTML, and custom formatting for each breadcrumb item.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_crumbs.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_crumbs masterpage='index.php' ignore_show_in_menu='1' prepend='<ul class=\"breadcrumb\">' append='</ul>'>\n   <li><a href=\"<cms:show k_crumb_link />\"><cms:show k_crumb_text /></a><cms:if k_crumb_is_last='0'> &raquo; </cms:if></li>\n</cms:nested_crumbs>\n```\n\n----------------------------------------\n\nTITLE: Making Editable Fields Required in CouchCMS\nDESCRIPTION: Example of using the 'required' parameter to make an editable region mandatory for users to fill in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\nrequired='1'\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages by Page Name - CouchCMS Tag\nDESCRIPTION: This snippet sorts the fetched pages cloned from 'blog.php' alphabetically based on their `page_name` using the `orderby` parameter. The default order (descending) is applied unless specified otherwise.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_23\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' orderby='page_name'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Searching pages of multiple templates (news.php, blog.php) - CouchCMS\nDESCRIPTION: This code snippet demonstrates using the `masterpage` parameter with multiple template names ('news.php' and 'blog.php') to broaden the search scope.  The search will include pages based on either of the specified templates.  Ensure that 'news.php' and 'blog.php' are valid CouchCMS templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/search.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:search masterpage='news.php, blog.php' >..</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Capturing Content in CouchCMS Template Language\nDESCRIPTION: This snippet demonstrates the basic structure of the `<cms:capture>` tag in CouchCMS. It shows how to use the `into` parameter to name the variable where the output will be stored and the `scope` parameter to define the variable's accessibility (global or parent). Any code placed between the opening and closing tags will execute, but its rendered output will be saved into the specified variable rather than displayed directly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/capture.md#_snippet_0\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:capture into='my_variable' scope='global'>\n    ...everything executed here will get stored in variable 'my_variable' at the requested scope...\n</cms:capture>\n```\n\n----------------------------------------\n\nTITLE: Using 'each' tag to split and display values in CouchCMS\nDESCRIPTION: This snippet demonstrates how to use the `each` tag to iterate through a string.  It initializes a variable `msg` with pipe-separated values and then uses the `each` tag to split the string based on the pipe character (`|`). The `show` tag is then used to display each individual value.  The expected output will be each word on a new line.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/each.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set msg='hello|world|how|do|you|do' />\n<cms:each msg sep='|' >\n    <cms:show item /><br>\n</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Menu Using Parent N Levels Up - CouchCMS menu Tag with root='@current-n' - CouchCMS Tag Language\nDESCRIPTION: Shows menu configuration by dynamically choosing the nth ancestor (above current page) as the root, using '@current-n'. Supports building deeply context-sensitive navigation systems. For example, '@current-1' will select the immediate parent, '@current-2' the grandparent.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_10\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='@current-1' />\n```\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='@current-2' />\n```\n\n----------------------------------------\n\nTITLE: HTML: Original Quantity Input Field\nDESCRIPTION: Presents the standard HTML input field used for users to specify the quantity of an item they wish to add to the cart. Notes that the original `name` attribute is 'quantity'. This field needs modification for CouchCart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"product-quantity\" name=\"quantity\" id=\"quantity\" type=\"number\" step=\"1\" value=\"1\" title=\"Quantity\">\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Single Folder - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' that belong directly to the specified folder ('classic-bikes') using the `folder` parameter. It does not include pages in subfolders by default.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_13\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' folder='classic-bikes'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Attaching a template and highlighting days with entries in a small calendar (HTML/CouchCMS)\nDESCRIPTION: This code creates a small, stylized calendar that attaches a template ('events.php') via the masterpage attribute. It highlights current day and days with entries, linking to daily archives for those days. The code uses loops and conditional tags to generate the calendar structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:calendar date='2010-09-01' masterpage='events.php'>\n    <table class=\"calendar_small\">\n        <tr>\n            <th colspan=\"7\"><cms:date k_calendar_date format='F Y' /></th>\n        </tr>\n        <tr>\n            <cms:repeat count='7'>\n            <td class=\"months_heading\"><cms:zebra 'Su' 'M' 'T' 'W' 'Th' 'F' 'S'/></td>\n            </cms:repeat>\n        </tr>\n        <cms:weeks>\n            <tr>\n            <cms:days >\n                <cms:if k_timeline_position='present'>\n                    <cms:set tdclass='today' />\n                </cms:if>\n                <cms:else />\n                    <cms:set tdclass='' />\n                </cms:else>\n                </cms:if>\n                <cms:if k_position='current_month' >\n                    <cms:if k_count_entries >\n                        <td class='entries <cms:show tdclass />' >\n                            <a href=\"<cms:link masterpage='events.php' year=k_year month=k_month day=k_day />\"><cms:show k_day /></a>\n                        </td>\n                    </cms:if>\n                    <cms:else />\n                        <td class='<cms:show tdclass />' ><cms:show k_day /></td>\n                    </cms:else>\n                </cms:if>\n            </cms:days>\n            </tr>\n        </cms:weeks>\n    </table>\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Displaying Comments with Pagination and Gravatar in CouchCMS\nDESCRIPTION: This code snippet demonstrates how to display comments associated with a specific page in CouchCMS. It uses the `cms:comments` tag to fetch and display comments, applies pagination, and integrates gravatars for commenters. The `page_id` parameter is used to filter comments for the current page, and variables such as `k_comment_author_email` are used to display comment information.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-comments.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:if k_is_page >\n    <cms:comments page_id=k_page_id limit='5' order='asc' paginate='1'>\n        <cms:if k_paginated_top >\n            <h3><cms:show k_total_records /> Comments</h3>\n            <ul id=\"commentlist\">\n        </cms:if>\n\n        <li id=\"comment-<cms:show k_comment_id />\">\n            <cms:gravatar email=\"<cms:show k_comment_author_email />\" size=\"36\" />\n            <p>\n                <cite>\n                    <span class=\"commenter\">\n                        <cms:if k_comment_author_website >\n                            <a class=\"url\" rel=\"external nofollow\" href=\"<cms:show k_comment_author_website />\"><cms:show k_comment_author /></a>\n                        <cms:else/>\n                            <cms:show k_comment_author />\n                        </cms:if>\n                        Says:\n                    </span>\n                    \n                    <span class=\"meta\"><a name=\"<cms:show k_comment_anchor />\"><cms:date k_comment_date format='F j, Y'/> at <cms:date k_comment_date format='h:ia'/></a></span>\n                </cite>\n            </p>\n\n            <div class=\"comment_text\">\n                <cms:show k_comment />\n            </div>\n\n        </li>\n\n        <cms:if k_paginated_bottom >\n            </ul>\n        </cms:if>\n\n        <cms:paginator />\n\n    </cms:comments>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Displaying Pagination Status with cms:dump within CouchCMS Loop\nDESCRIPTION: This snippet uses '<cms:dump />' inside the blog's pages loop to inspect pagination variables like 'k_paginated_top' and 'k_paginated_bottom'. It aids in debugging and understanding how page iteration influences the visibility and state of pagination-related variables during rendering.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:pages ...>\n  <cms:dump />\n  ...\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Defining a Google Map Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers a CouchCMS shortcode named 'googlemap' and defines its handler function 'googlemap_handler'. This function uses `$FUNCS->get_named_vars` to extract 'src', 'width', and 'height' parameters, providing default values for width and height. It then returns an HTML iframe tag configured to embed the specified Google Map.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$FUNCS->register_shortcode( 'googlemap', 'googlemap_handler' );\n\nfunction googlemap_handler( $params, $content=null ){\n    global $FUNCS;\n\n    extract( $FUNCS->get_named_vars(array(\n       'src' => '',\n       'width' => '425',\n       'height' => '350'\n    ), $params) );\n\n    return '<iframe width=\"'.$width.'\" height=\"'.$height.'\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"'.$src.'&output=embed\"></iframe>';\n}\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages by Multiple Fields - CouchCMS Tag\nDESCRIPTION: This snippet sorts the fetched pages cloned from 'blog.php' by multiple criteria: first by 'modification_date', and then by 'page_name' for pages that have the same modification date, using a comma-separated list with `orderby`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_25\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' orderby='modification_date, page_name'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Repeating Content with Named Parameters in cms:repeat - CouchCMS\nDESCRIPTION: This snippet illustrates the use of named parameters (`count` and `startcount`) within the `<cms:repeat>` tag in CouchCMS.  It shows how naming parameters allows for flexibility in their order, preventing ambiguity. The `startcount` parameter specifies the initial value of the iteration counter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/tags.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:repeat count='4' startcount='1'></cms:repeat>\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:repeat startcount='1' count='4'></cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Defining a custom value separator in 'radio' options with 'val_separator' parameter\nDESCRIPTION: Allows the use of a different character for separating option names and their values, avoiding conflicts when '=' is used within option labels. Set val_separator to your preferred character.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential:0 | Commercial:1 | Rental:2'\n  val_separator=':'\n  /\n```\n\n----------------------------------------\n\nTITLE: Explicit Bound Inputs for Page Name and Title (CouchCMS, Kettle Template Language)\nDESCRIPTION: This snippet adds explicit input fields for required system fields 'k_page_name' and 'k_page_title' in a CouchCMS form using type='bound' <cms:input> tags. It ensures that when users submit the form, both values are provided as needed by the CMS's cloning mechanism. Recommended when unique names or titles are necessary for each submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_9\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:input type=\"bound\" name=\"k_page_name\" />\n<cms:input type=\"bound\" name=\"k_page_title\" />\n```\n\n----------------------------------------\n\nTITLE: Customizing Active Trail Class in CouchCMS Menu\nDESCRIPTION: This snippet shows how to customize the CSS class that is applied to the active trail of the CouchCMS menu tag.  The 'active_trail_class' parameter allows you to specify a different class name than the default 'active'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_18\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:menu masterpage='menu.php' active_trail_class='selected-parent' />\n```\n\n----------------------------------------\n\nTITLE: Multiple Folder Selection in Relation Regions\nDESCRIPTION: Demonstrates how to display pages from multiple specified folders in a relation region.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/relation.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' folder='classical, jazz' />\n```\n\n----------------------------------------\n\nTITLE: Styling CouchCMS Calendar Days (HTML)\nDESCRIPTION: Shows how to conditionally apply CSS classes to calendar cells based on the day's position relative to the current date and month. It uses `if` and `set` tags with variables like `k_timeline_position` ('present') and `k_position` ('current_month') to add classes like 'today' or 'other_month' for styling purposes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:calendar >\n    <table class=\"calendar_small\">\n        <tr>\n            <th colspan=\"7\"><cms:date k_calendar_date format='F Y' /></th>\n        </tr>\n        <tr>\n            <cms:repeat count='7'>\n            <td class=\"months_heading\"><cms:zebra 'Su' 'M' 'T' 'W' 'Th' 'F' 'S'/></td>\n            </cms:repeat>\n        </tr>\n\n        <cms:weeks>\n            <tr>\n            <cms:days >\n              <cms:if k_timeline_position='present'>\n                   <cms:set tdclass='today' />\n              <cms:else />\n                   <cms:set tdclass='' />\n              </cms:if>\n\n              <cms:if k_position='current_month' >\n                   <td class='<cms:show tdclass />' ><cms:show k_day /></td>\n              <cms:else />\n                   <td class='other_month'><cms:show k_day /></td>\n              </cms:if>\n            </cms:days>\n            </tr>\n        </cms:weeks>\n    </table>\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Setting and Displaying Initial Variable Value - CouchCMS Tags\nDESCRIPTION: This snippet initializes a CouchCMS variable named `my_value` with the string value '11' using the `set` tag. It then immediately displays the current value of this variable using the `show` tag to establish a starting point for subsequent operations. This requires a CouchCMS environment.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/incr.md#_snippet_0\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:set my_value='11' />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: CouchCMS Input Types: text, password, submit, hidden\nDESCRIPTION: Shows the CouchCMS equivalents of basic HTML input types. The 'cms:input' tag with appropriate 'type' attributes replaces standard HTML input tags. The key difference is the 'cms:' prefix and the self-closing syntax (ending with '/>'). The 'name' attribute functions the same as in HTML.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_6\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" />\n<cms:input type=\"password\" size=\"10\" maxlength=\"10\" name=\"password\" />\n<cms:input type=\"submit\" name=\"submit\" value=\"Send\" />\n<cms:input type=\"hidden\" name=\"max_val\" value=\"100\" />\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor Toolbar to 'Basic' in CouchCMS Editable Field\nDESCRIPTION: This snippet configures the editor for a field to only display basic formatting tools by setting the toolbar parameter to 'basic'. This restricts end-users to a minimal set of editing actions. No custom_toolbar parameter is used, and the editor UI is simplified accordingly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_13\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='basic'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Conditional Display of Navigation Buttons Using Pagination Variables\nDESCRIPTION: This snippet shows how to conditionally display 'Previous Posts' and 'Next Posts' buttons only when relevant pagination links are available. It checks for the presence of 'k_paginate_link_prev' and 'k_paginate_link_next' variables to avoid showing navigation buttons when no further pages exist, enhancing user interface accuracy.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if k_paginate_link_prev>\n  <a href='<cms:show k_paginate_link_prev>'>Previous Posts</a>\n</cms:if>\n<cms:if k_paginate_link_next>\n  <a href='<cms:show k_paginate_link_next>'>Next Posts</a>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Setting the Width of a Text Editable Region\nDESCRIPTION: This snippet demonstrates how to set the width of the text input box using the 'width' parameter. The value specifies the width in pixels.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/text.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='prop_title' label='Title'\n desc='Enter title of property here'\n width='200'\n type='text'>Awesome property!</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Setting and Showing Variable Value in CouchCMS\nDESCRIPTION: This snippet initializes a CouchCMS variable named `my_value` to 11 and then displays its value.  This demonstrates the initial setup before decrementing. No dependencies are required for this example. The output will be 11.  This snippet shows the starting value before further operations.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/decr.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_value='11' />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: Updating Cart Modal with AJAX Response\nDESCRIPTION: jQuery AJAX GET request that retrieves the current cart HTML from the server and updates the modal window content. This function is called after any cart operation to reflect the updated state.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Fetch updated cart\n$.get(url, function(response) {\n    // Update modal window\n    $('#cart-modal>.modal-body').html(response);\n```\n\n----------------------------------------\n\nTITLE: Changing the Selected-Item Class - CouchCMS menu Tag with selected_class - CouchCMS Tag Language\nDESCRIPTION: Modifies the CSS class applied to the active (current) menu item using 'selected_class'. Default is 'current', but this allows integration with custom class conventions. Particularly useful when working with third-party UI frameworks that expect a specific class for active states.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_16\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' selected_class='selected' />\n```\n\n----------------------------------------\n\nTITLE: Listing Folders from a Root in CouchCMS\nDESCRIPTION: This snippet lists a section of the folder hierarchy, starting from a specified root folder, using the `root` parameter. It lists folders hierarchically using `hierarchical='1'. The `masterpage` selects the target template. The output is the hierarchy starting from the 'world' folder.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' root='world' hierarchical='1'>\n    <cms:show k_folder_title /> [<cms:show k_level />] <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Full-featured Custom Toolbar Matching CKEditor's 'Medium' Type\nDESCRIPTION: This custom_toolbar example replicates CKEditor's default 'medium' toolbar using explicit button and group definitions. The string parameter lists specific button identifiers and separators, including group pipes (|), hyphens, and underscores for separators, and double pipes to force new toolbar rows. Input: a multi-line string parameter. Output: an organized and grouped toolbar layout.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_18\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='custom'\n    custom_toolbar='bold, italic, underline, strike, -, subscript, superscript |\n    format |\n    justifyleft, justifycenter, justifyright, justifyblock |\n    numberedlist, bulletedlist, -, outdent, indent, blockquote |\n    undo, redo, removeformat |\n    |\n    cut, copy, paste, pastetext, pastefromword |\n    image, flash, table, horizontalrule, smiley, specialchar, pagebreak |\n    link, unlink, anchor |\n    showblocks, preview, maximize, -, source'\n    type='richtext' />\n```\n\n----------------------------------------\n\nTITLE: Using popup_edit Tag to Create Popup Editing Links for Editable Regions in CouchCMS\nDESCRIPTION: Illustrates how to generate links that open popup windows allowing editing of specified editable regions. Supports specifying multiple field names separated by pipes. The popup_edit tag automatically derives the current page and template context unless overridden inside a pages tag. Optional parameters include fields to list all editable regions, link_text to change the link label, prompt_text to alert about unsaved inline edits, and class for CSS styling. This snippet enables alternate popup-based editing methods alongside inline editing.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<cms:popup_edit 'my_text' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:popup_edit 'my_text|my_richtext|k_page_folder_id' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:pages masterpage='globals.php' >\n    <cms:popup_edit 'site_name|meta_desc' />\n</cms:pages>\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:pages masterpage='portfolio.php' page_name='some-work' >\n    <cms:popup_edit 'description' />\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Skipping Pages with Offset - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' but skips the first two results in the list using the `offset` parameter. This is useful for displaying results after a certain number.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_11\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' offset='2'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Defining CouchCMS Editable Regions in Template Tag\nDESCRIPTION: Registers editable regions ('blog_content' as richtext and 'blog_image' as an image) within the `<cms:template>` tag in a CouchCMS template. This makes these fields available for editing in the CouchCMS admin panel. The image field is configured to automatically crop uploaded images to 610x150 pixels.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:template name='blog' title='Blog' clonable='1'>\n    <cms:editable name='blog_content' label='Content' type='richtext' />\n    <cms:editable name='blog_image' label='Image' type='image' crop='1' width='610' height='150' />\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Defining Editable Regions in Home Page - CouchCMS Template Tags and HTML\nDESCRIPTION: This snippet shows how to define editable regions in the HTML boxes at the bottom of the homepage using <cms:editable> tags, allowing admin control via the CouchCMS backend. Dependencies include CouchCMS, and variables such as 'box1_title', 'box1_text', 'box1_link', etc., are defined with unique names (name=\"...\") as required by CouchCMS. Each group's label and editable regions are associated for organization. The input consists of HTML elements enclosed by the <cms:editable> tag to make them editable; outputs are the rendered content and editable regions in the CMS admin interface. Editable regions must have unique 'name' attributes and can be grouped for clarity.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/home-page.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name=\"box1_title\" label=\"Box 1 Title\" type=\"text\">\n    Box 1 Title Here\n</cms:editable>\n\n<cms:editable name=\"box1_text\" label=\"Box 1 Text\" type=\"richtext\">\n    Box 1 Content Here\n</cms:editable>\n\n<cms:editable name=\"box1_link\" label=\"Box 1 Link\" type=\"text\">\n    /portfolio/\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Exact Exclusion - Not Equals Equals\nDESCRIPTION: This snippet fetches all cloned pages where the editable region 'my_blog_author' DOES NOT exactly match the term 'jeffrey'.  The '!==' operator performs a strict exclusion.  It works similarly to the previous example but requires an exact match to be excluded.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_33\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author!==jeffrey'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Excerpt with CouchCMS\nDESCRIPTION: Demonstrates the simplest usage of the CouchCMS `excerptHTML` tag. It processes the enclosed content (the output of `<cms:show content />`) and generates an excerpt using the tag's default settings for word count (50) and trail ('...').\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/excerpthtml.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:excerptHTML><cms:show content /></cms:excerptHTML>\n```\n\n----------------------------------------\n\nTITLE: Alternative simplified conditional check in CouchCMS\nDESCRIPTION: A simpler way to check if an editable region contains content, but this method may not work correctly with richtext fields that contain empty HTML tags inserted by CKEditor.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/not_empty.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if my_content >\n   .. do something..\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Uncommenting and Setting Branding Logo and Footer in PHP Configuration\nDESCRIPTION: This snippet demonstrates how to uncomment and customize branding constants in 'couch/config.php' to set custom logos and footer content for white-labeling. Users must replace default filenames and URLs with their own branding assets and links.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/white-label.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n//define( 'K_LOGO_LIGHT', 'couch.gif' );\n```\n\nLANGUAGE: PHP\nCODE:\n```\n//define( 'K_LOGO_DARK', 'couch_dark.gif' );\n```\n\nLANGUAGE: PHP\nCODE:\n```\n//define( 'K_ADMIN_FOOTER', '<a href=\"http://www.yourcompany.com\">COMPANY NAME</a>' );\n```\n\n----------------------------------------\n\nTITLE: Basic breadcrumbs tag implementation in CouchCMS\nDESCRIPTION: The simplest implementation of the breadcrumbs tag to display folder hierarchy in CouchCMS templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/breadcrumbs.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:breadcrumbs />\n```\n\n----------------------------------------\n\nTITLE: Anti-Spam Input Field with Regex Validation (CouchCMS, Kettle Template Language & HTML)\nDESCRIPTION: This snippet adds a manually validated question field to a CouchCMS form to filter spam bots. It displays a label and an input of type text, requiring the user to answer 'blue' (case-insensitive) before the form is accepted. The validator parameter enforces a regular expression on input. No external dependencies besides CouchCMS; expected to be used in public-facing forms to supplement the default security.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<label>What colour is a blue apple? (4 characters required)</label>\n<cms:input name=\"human\" type=\"text\" required='1' validator='regex=/^blue$/i' />\n```\n\n----------------------------------------\n\nTITLE: Auto-Generating Page Title and Name in CouchCMS db_persist_form (Kettle Template Language)\nDESCRIPTION: This snippet utilizes the _auto_title='1' parameter on the <cms:db_persist_form> tag, instructing CouchCMS to automatically generate the page 'title' and derive a unique 'name' as needed. This approach alleviates manual title/name input requirements and supports high-volume submissions. The '_auto_title' parameter should be used when neither field is supplied explicitly via input or parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_11\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:db_persist_form\n_auto_title='1'\n/>\n```\n\n----------------------------------------\n\nTITLE: Changing Menu Markup to Ordered List - CouchCMS menu Tag with list_type - CouchCMS Tag Language\nDESCRIPTION: Demonstrates switching menu HTML output from an unordered (<ul>) to ordered (<ol>) list by setting 'list_type' to 'ol'. Useful for adjusting assistive technology semantics or styling requirements. Does not impact the underlying menu logic.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_11\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' list_type='ol' />\n```\n\n----------------------------------------\n\nTITLE: Making 'textarea' editable region self-closing with no default text\nDESCRIPTION: Provides an example of defining an empty 'textarea' by using a self-closing tag, resulting in an input box with no default content displayed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/textarea.md#_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<cms:editable name='prop_desc' label='Description' desc='Enter description of property here' />\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Multiple Folders - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' that belong directly to one of the specified folders ('classic-bikes' or 'super-bikes'), using a comma-separated list with the `folder` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_14\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' folder='classic-bikes, super-bikes'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Converted CouchCMS Form Using Tags (HTML + Couch tags)\nDESCRIPTION: Transforms the standard HTML form into a Couch-managed form by replacing HTML input tags with Couch tags, omitting the action attribute to allow Couch to handle validation. Utilizes 'cms:' prefix and self-closing tags for proper Couch syntax.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_1\n\nLANGUAGE: HTML+CouchCMS\nCODE:\n```\n<cms:form method=\"post\">\n    Name: <cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" /> <br />\n    Email: <cms:input type=\"text\" size=\"10\" name=\"email\" /> <br />\n    <cms:input name=\"submit\" type=\"submit\" value=\"Send\" />\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Using the nl2br Tag in CouchCMS\nDESCRIPTION: This snippet demonstrates the usage of the <cms:nl2br> tag in CouchCMS. It wraps around content, typically a variable output using <cms:show>, and converts any newline characters found within that content into HTML <br> tags. This is commonly used to display text from a 'textarea' editable region while respecting the line breaks entered by the user.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nl2br.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:nl2br><cms:show some_variable /></cms:nl2br>\n```\n\n----------------------------------------\n\nTITLE: Setting Search Type for Numeric Values in CouchCMS\nDESCRIPTION: Example of setting the 'search_type' parameter to handle decimal values correctly for sorting and comparison in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nsearch_type='decimal'\n```\n\n----------------------------------------\n\nTITLE: Searching all pages except news.php - CouchCMS\nDESCRIPTION: This snippet demonstrates how to exclude a specific template ('news.php') from the search using the 'NOT' keyword in the `masterpage` parameter. The search will include pages from all templates *except* 'news.php'. Make sure that 'news.php' is a valid CouchCMS template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/search.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:search masterpage='NOT news.php' >..</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Using Absolute Paths in Custom 404 Page with CouchCMS\nDESCRIPTION: Example of how to ensure image paths are absolute in a custom 404.php template by using the k_site_link CouchCMS tag to prefix relative URLs. This prevents broken images when the 404 page is displayed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/custom-404-page.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<img src=\"<cms:show k_site_link />images/logo.jpg\" />\n```\n\n----------------------------------------\n\nTITLE: Enabling Inline Image Preview for Editable Field CouchCMS Template\nDESCRIPTION: This snippet defines a CouchCMS editable region of type 'image'. Setting `show_preview='1'` instructs CouchCMS to display an inline preview of the selected image directly above the upload control in the admin panel. If `show_preview` is not set or is set to '0', a preview link is shown instead.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/image.md#_snippet_2\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:editable name='prop_image' label='Image' desc='Upload main image of property here'\n    show_preview='1'\n    type='image' />\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor Toolbar to 'Medium' in CouchCMS Editable Field\nDESCRIPTION: This example configures the editable field's toolbar to use the default 'medium' setup, which enables a moderate set of formatting tools. The toolbar parameter is set to 'medium', or can be omitted as this is the default. No custom tool grouping or selections are needed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_14\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='medium'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Alternating Table Row Classes Using Zebra and Repeat Tags in CouchCMS Templates (HTML)\nDESCRIPTION: This snippet uses CouchCMS repeat tags to generate a table where each row has alternating class names assigned by the zebra tag, cycling between 'row' and 'alternate_row'. It demonstrates nesting repeat tags to create table rows and cells, where the zebra tag's parameters are applied as CSS classes to enable zebra striping and visually distinguish alternate rows. Requires CouchCMS template support for repeat and zebra tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/zebra.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<TABLE>\n<cms:repeat count='4' >\n    <TR class=\"<cms:zebra 'row' 'alternate_row' />\">\n        <cms:repeat count='6' startcount='1' >\n            <TD>\n                <cms:show k_count />\n            </TD>\n        </cms:repeat>\n    </TR>\n</cms:repeat>\n</TABLE>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS captcha Input with Format Parameter\nDESCRIPTION: Demonstrates using the 'format' parameter with the CouchCMS CAPTCHA input type. The 'format' parameter controls the order and presence of the image, textbox, and reload link. The characters 'i' (image), 't' (textbox), 'r' (reload), and '-' (linebreak) define the layout.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_17\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type='captcha' name='my-captcha' format='i-r-t' />\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type='captcha' name='my-captcha' format='r-i-t' />\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type='captcha' name='my-captcha' format='rit' />\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Validation in CouchCMS\nDESCRIPTION: Example of using the 'regex' validator to apply custom validation rules using regular expressions in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_20\n\nLANGUAGE: html\nCODE:\n```\nvalidator='regex=/(cat|dog)$/i'\n```\n\n----------------------------------------\n\nTITLE: Displaying a variable value with the show tag in CouchCMS\nDESCRIPTION: This snippet demonstrates how to display the value stored in the variable my_message using the show tag in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:show my_message />\n```\n\n----------------------------------------\n\nTITLE: Dynamic Menu Using Current Page - CouchCMS menu Tag with root='@current' - CouchCMS Tag Language\nDESCRIPTION: Uses the '@current' special keyword to dynamically set the menu root to the currently viewed page. Allows for contextual navigation menus that adjust to the current site section. Intended for advanced, dynamic navigation in template files.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_9\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='@current' />\n```\n\n----------------------------------------\n\nTITLE: Associating Editable Regions with a CouchCMS Group\nDESCRIPTION: This code demonstrates how to associate existing editable regions with a defined group using the `group` parameter.  The editable regions for image, thumbnail and document are all associated with the 'prop_uploads' group. This groups them together in the CouchCMS admin panel for better organization.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/group.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='prop_image' label='Image' desc='Upload main image here' show_preview='1'\n    group='prop_uploads'\n    type='image' />\n\n<cms:editable name='prop_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    height='80'\n    assoc_field='prop_image'\n    group='prop_uploads'\n    type='thumbnail' />\n\n<cms:editable name='prop_code' label='Area Code' desc='Enter area code here'\n    maxlength='20'\n    type='text' />\n\n<cms:editable name='prop_document' label='Downloadable File' desc='Upload the file here'\n    group='prop_uploads'\n    type='file' />\n```\n\n----------------------------------------\n\nTITLE: Setting Inline Image Preview Width CouchCMS Template\nDESCRIPTION: This snippet defines a CouchCMS editable region for an image, enabling the inline preview feature (`show_preview='1'`) and setting the display width of the preview image in the admin panel to 150 pixels using the `preview_width` parameter. The `preview_height` parameter can also be used, and it is recommended to set at least one dimension.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/image.md#_snippet_3\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:editable name='prop_image' label='Image' desc='Upload main image of property here'\n    show_preview='1'\n    preview_width='150'\n    type='image' />\n```\n\n----------------------------------------\n\nTITLE: Enabling Sessions Module for Flash Messages (PHP)\nDESCRIPTION: The code will use the *cms:set_flash* tag. To enable the 'sessions' module, you need to uncomment a line in the `kfunctions.php` file (if not already so). This line enables the session functionality required for displaying flash messages after form submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once( K_COUCH_DIR.'addons/cart/session.php' );\n```\n\n----------------------------------------\n\nTITLE: Defining Password Editable Region with Max Length (CouchCMS Tags)\nDESCRIPTION: Defines a 'password' type editable region named 'my_password'. This configuration uses the 'maxlength' parameter set to '40' to restrict the maximum number of characters a user can input into the generated HTML textbox to 40. This tag must be placed within a valid CouchCMS template structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/password.md#_snippet_3\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable name='my_password' label='Password'\n desc='Enter your password'\n maxlength='40'\n type='password' />\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Multiple Page IDs (CouchCMS)\nDESCRIPTION: Retrieves comments belonging to pages with either ID '13' or '17'. The 'page_id' parameter accepts a comma-separated list to include comments from multiple specific pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_4\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_id='13, 17'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Enabling Pagination for Comments (CouchCMS)\nDESCRIPTION: Fetches all approved comments but displays them in paginated sets of five. The 'paginate' parameter enables pagination, requiring additional 'paginator' tag implementation for navigation links.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_10\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments limit='5' paginate='1'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Grouping Editable Regions for Each Box - CouchCMS Template Tags\nDESCRIPTION: This snippet outlines the best practice of grouping associated editable regions for each homepage box via group type <cms:editable> tags. Each group is defined with type=\"group\"; individual editable regions are linked to this group by specifying the group=\"...\" attribute. Prerequisites are CouchCMS installed and the 'name' attribute for each region/group must be unique. The expected input is multiple related editable regions, and the output is a more organized admin panel, grouping related fields together for easier management.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/home-page.md#_snippet_2\n\nLANGUAGE: CouchCMS template tags\nCODE:\n```\n<cms:editable name=\"box1_group\" label=\"Box 1\" type=\"group\" />\n<cms:editable name=\"box1_title\" label=\"Title\" group=\"box1_group\" type=\"text\" />\n<cms:editable name=\"box1_text\" label=\"Text\" group=\"box1_group\" type=\"richtext\" />\n<cms:editable name=\"box1_link\" label=\"Link\" group=\"box1_group\" type=\"text\" />\n```\n\n----------------------------------------\n\nTITLE: Define Self-Closing Richtext Editable Region (CouchCMS)\nDESCRIPTION: Shows how to define a 'richtext' editable region without any default content by using a self-closing <cms:editable /> tag. This is useful when the editor should start empty.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='prop_desc' label='Description'\n    desc='Enter description of property here'\n    type='richtext' />\n```\n\n----------------------------------------\n\nTITLE: Concatenating Strings with concat Unnamed Parameters (CouchCMS)\nDESCRIPTION: Shows the basic usage of the `<cms:concat>` tag to combine literal strings and variable values. Each string part or variable is provided as a space-separated unnamed parameter directly within the tag's content. The tag returns the concatenated string.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/concat.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set welcome_message=\"<cms:concat 'Hello ' first_name ' ' last_name '! We welcome you!' />\" />\n```\n\n----------------------------------------\n\nTITLE: Multiplying Variable by Literal using CouchCMS Tag\nDESCRIPTION: This snippet demonstrates how to use the CouchCMS 'mul' tag to multiply the value stored in the 'my_count' variable by the literal number 5. The tag outputs the calculated product directly into the template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/mul.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:mul my_count '5' />\n```\n\n----------------------------------------\n\nTITLE: Grouping Editable Regions in CouchCMS\nDESCRIPTION: Example of using the 'group' parameter to organize related editable regions together under a parent group in the CouchCMS admin panel.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\ngroup='paypal_group'\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination with CouchCMS in blog.php\nDESCRIPTION: This snippet demonstrates configuring CouchCMS pagination in blog.php by setting 'limit' and 'paginate' parameters, then displaying navigation buttons conditionally based on pagination variables like 'k_paginated_bottom', 'k_paginate_link_prev', and 'k_paginate_link_next'. It ensures navigation buttons only appear when relevant links exist, providing a seamless paginated browsing experience.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:pages limit='3' paginate='1'>\n  ...\n  <cms:if k_paginated_bottom>\n    ... show navigation buttons ...\n  <cms:if>\n  ...\n  <a href='<cms:show k_paginate_link_prev>'>Previous Posts</a>\n  <a href='<cms:show k_paginate_link_next>'>Next Posts</a>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Customized breadcrumbs implementation with conditional rendering in CouchCMS\nDESCRIPTION: An example showing how to implement breadcrumbs with custom separator and template inclusion, conditionally rendered only on page or folder views.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/breadcrumbs.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:if k_is_page || k_is_folder >\n    <cms:breadcrumbs separator='&nbsp;>>&nbsp;' include_template='1' />\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Setting a Default Selected Option (opt_selected) in CouchCMS\nDESCRIPTION: Configures a CouchCMS dropdown editable region to have a specific option selected by default. The `opt_selected` parameter is set to the *value* of the desired option, not its label. This works for both simple label lists and label-value mapped lists.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name=\"my_property_type\" label=\"Property Type\" desc=\"Select one from these\"\n  opt_values='Residential | Commercial | Rental'\n  opt_selected = 'Rental'\n  type='dropdown'\n/>\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name=\"my_property_type\" label=\"Property Type\" desc=\"Select one from these\"\n  opt_values='Residential=0 | Commercial=1 | Rental=2'\n  opt_selected = '2'\n  type='dropdown'\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Dropdown Options (opt_values) with a Custom Separator in CouchCMS\nDESCRIPTION: Allows specifying a custom character to separate options within the `opt_values` list instead of the default pipe '|'. The `separator` parameter is used to define this custom character. This is useful if options contain the default separator character.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_5\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name=\"my_property_type\" label=\"Property Type\" desc=\"Select one from these\"\n  opt_values='Please Select=- * Residential=0 * Commercial=1 * Rental=2'\n  separator='*'\n  type='dropdown'\n/>\n```\n\n----------------------------------------\n\nTITLE: Iterating and Displaying Ancestor Folders in CouchCMS\nDESCRIPTION: This snippet uses the `parentfolders` tag to loop through all parent folders of the folder named 'china'. Inside the loop, it displays a link and the title for each parent folder, formatted as a simple breadcrumb path.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/parentfolders.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:parentfolders folder='china' >\n    <a href=\"<cms:show k_folder_link/>\"><cms:show k_folder_title/></a>&nbsp;>\n</cms:parentfolders>\n```\n\n----------------------------------------\n\nTITLE: Embedding Google Map Using Latitude and Longitude with CouchCMS Tag in HTML\nDESCRIPTION: This snippet embeds a Google Map by directly specifying geographic coordinates via latitude and longitude attributes. The name attribute identifies the map instance, while latitude and longitude define the exact point for the map center. This approach provides precise positioning without relying on address resolution. Default zoom and sizing apply unless explicitly provided.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/google_map.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:google_map\n    name='my_map'\n    latitude='37.423021'\n    longitude='-122.083739'\n/>\n```\n\n----------------------------------------\n\nTITLE: Displaying CouchCMS Gallery Images using cms:pages\nDESCRIPTION: Demonstrates using the `cms:pages` tag to iterate through the image pages created within the 'gallery.php' template. For each page (image), it generates an HTML anchor tag linking to the full-size image (`gg_image`) and displays the corresponding thumbnail (`gg_thumb`) as the link content. The `k_page_title` is used for the image's title attribute.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/photo-gallery.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage=\"gallery.php\" include_subfolders='0' >\n   <a href=\"<cms:show gg_image />\">\n      <img src=\"<cms:show gg_thumb />\" title=\"<cms:show k_page_title />\" />\n   </a>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Using masterpage Parameter (Implicit) - CouchCMS Tag\nDESCRIPTION: When the `masterpage` parameter is omitted, the `<cms:pages>` tag fetches pages cloned from the template in which the snippet is placed. This snippet demonstrates this default behavior.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_2\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Generating a Basic Search Form with CouchCMS\nDESCRIPTION: This snippet uses the `cms:search_form` tag to automatically generate a standard HTML search form. By default, this form includes a text input named 's' and submits to the current page, appending the input value as the 's' query string parameter. This is useful when the search results are displayed on the same page as the form.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-search.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:search_form />\n```\n\n----------------------------------------\n\nTITLE: Controlling Subfolder Inclusion in Relations\nDESCRIPTION: Demonstrates how to disable the inclusion of subfolders when specifying folder parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/relation.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' folder='classical' include_subfolders='1' />\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Value Separator (val_separator) in CouchCMS\nDESCRIPTION: Allows specifying a custom character to separate the label from the value within each option defined in `opt_values` instead of the default equals sign '='. The `val_separator` parameter is used for this purpose. This is useful if option labels or values contain the default equals character.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_6\n\nLANGUAGE: CouchCMS\nCODE:\n```\nval_separator=':'\n```\n\n----------------------------------------\n\nTITLE: URL Validation in CouchCMS\nDESCRIPTION: Example of using the 'url' validator to ensure only valid URLs are accepted in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_18\n\nLANGUAGE: html\nCODE:\n```\nvalidator='url'\n```\n\n----------------------------------------\n\nTITLE: Absolute Link Example using k_site_link (HTML)\nDESCRIPTION: This snippet is an alternative example that includes the use of a CouchCMS tag to generate the absolute URL for the CSS file. This provides flexibility, and it allows the website's CSS files to be loaded correctly when Pretty URLs are enabled. This is often the preferred method for dynamically creating the correct base URL.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pretty-urls.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"<cms:show k_site_link />css/lightbox.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: Limiting Menu Depth - CouchCMS menu Tag - CouchCMS Tag Language\nDESCRIPTION: Illustrates restricting the number of hierarchical levels displayed in the menu by using the 'depth' parameter. This example returns only the top-level pages from 'menu.php' since depth is set to 1. Useful for main navigation bars or head menus. Outputs a flat list with no children displayed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_1\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' depth='1' />\n```\n\n----------------------------------------\n\nTITLE: Highlighting Ancestor Folders in Navigation - CouchCMS - CouchCMS\nDESCRIPTION: This snippet creates a navigation menu where all LI elements representing ancestor folders of the current page or folder are given the 'selected' CSS class. It checks whether the template is in 'page view' or 'folder view', sets the current folder accordingly, and then iterates through hierarchical folders. The <cms:is_ancestor> tag is used to determine ancestor relationships, influencing the applied CSS class. Requires CouchCMS with hierarchical folders and the tags: <cms:folders>, <cms:if>, <cms:set>, and <cms:is_ancestor>.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_11\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if k_is_page || k_is_folder >\n    <cms:if k_folder_name ><cms:set current_folder=k_folder_name /></cms:if>\n    <cms:if k_page_foldername ><cms:set current_folder=k_page_foldername /></cms:if>\n</cms:if>\n<cms:folders hierarchical='1' extended_info='1'>\n    <cms:if k_level_start ><UL></cms:if>\n    <cms:if k_element_start >\n\n        <cms:set my_class='' />\n        <cms:if \"<cms:is_ancestor parent=k_folder_name child=current_folder />\" >\n            <cms:set my_class='class=\"selected\"' />\n        </cms:if>\n\n        <LI <cms:show my_class />>\n        <span <cms:show my_class />><cms:show k_folder_title /></span>\n    </cms:if>\n    <cms:if k_element_end ></LI></cms:if>\n    <cms:if k_level_end ></UL></cms:if>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Setting Path to Superfish and Linking CSS\nDESCRIPTION: This snippet defines the path to the Superfish files using `cms:set` and then links the Superfish CSS file using the path defined earlier. This is necessary for the Superfish plugin to work correctly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:set path_to_superfish=\"<cms:show k_site_link />/superfish/\" />\n<link rel=\"stylesheet\" media=\"screen\" href=\"<cms:show path_to_superfish />css/superfish.css\" />\n```\n\n----------------------------------------\n\nTITLE: Enabling Thumbnail Preview in CouchCMS Admin\nDESCRIPTION: Defines a 'thumbnail' editable region named 'my_image_thumb' with `show_preview` set to '1'. This displays the actual generated thumbnail image within the admin interface, below the associated 'image' field ('my_image'), instead of just a link.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_6\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    show_preview='1'\n    assoc_field='my_image'\n    type='thumbnail' />\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Excerpt with Custom Trail Link in CouchCMS\nDESCRIPTION: Demonstrates using the `trail` parameter to customize the text appended to the excerpt generated by the CouchCMS `excerptHTML` tag. This example appends a hyperlink to the page (`<cms:show k_page_link />`), providing a 'read more' link after the truncated content from `<cms:show blog_content />`. Note the required escaping of the double quote within the `href` attribute value.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/excerpthtml.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:excerptHTML trail=\"&nbsp;(<a href=\\\"<cms:show k_page_link />\\\">read more..</a>)\"><cms:show blog_content /></cms:excerptHTML>\n```\n\n----------------------------------------\n\nTITLE: Custom Validation Error Messages in CouchCMS\nDESCRIPTION: Example of setting custom error messages to display when validation fails for required fields in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_22\n\nLANGUAGE: html\nCODE:\n```\nvalidator_msg='required=What! You think you can get away with leaving this empty?'\n```\n\n----------------------------------------\n\nTITLE: CouchCMS captcha Input Type\nDESCRIPTION: Shows how to implement a CAPTCHA in CouchCMS using '<cms:input type='captcha' name='...' />'.  This helps prevent spam. It includes a generated image, a textbox for user input, and a reload link. The 'required' parameter is automatically set to '1'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_16\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type='captcha' name='my-captcha' />\n```\n\n----------------------------------------\n\nTITLE: Creating a Dropdown List of Folders - CouchCMS\nDESCRIPTION: This snippet demonstrates how to use the `dropdownfolders` tag to create an HTML dropdown list of folders associated with the 'news.php' template. It utilizes the `masterpage` attribute to specify the template for which the folders should be listed in the dropdown.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/dropdownfolders.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:dropdownfolders masterpage='news.php' />\n```\n\n----------------------------------------\n\nTITLE: Parsing URL Query Parameters with JavaScript\nDESCRIPTION: This snippet parses the URL's query string to identify the search parameter 'q' and, if present, decodes and assigns its value to the input element with the ID 'search_input'. The key functionality is to ensure that any search term from the URL is pre-populated in the search input field for better user experience. It depends on a DOM element with id 'search_input' being present in the HTML.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/search.md#_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar qs = location.search.substr(1).split('&');\n\nif (qs[0] !== '') {\n    qs.forEach(function(item) {\n            var k = item.split('=')[0],\n                v = decodeURIComponent(item.split('=')[1].replace(/\\+/g, '%20'));\n\n            if (k === 'q') {\n                document.getElementById('search_input').value = v;\n            }\n        }\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Custom Field - Simple Equals\nDESCRIPTION: This snippet fetches all cloned pages of `blog.php` where the custom field `my_blog_author` contains the word `jeffrey` anywhere within its value. The `masterpage` attribute specifies the template to search within and `custom_field` uses the equals sign `=` for a partial match. It demonstrates a basic use case for retrieving pages based on custom field values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_29\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author=jeffrey'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying Success Message on Form Validation\nDESCRIPTION: Shows how to conditionally display a success message when the form is successfully submitted by checking the k_success variable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"message-success\">\n   <cms:if k_success>\n      <p style=\"display:block\">Thanks for your message! I'll get back to you as soon as possible.</p>\n   </cms:if>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining One-to-One Relation in CouchCMS\nDESCRIPTION: This snippet defines a One-to-One relationship where both the primary and reverse template pages can only link to a single page of the other template. It combines the `has='one'` and `reverse_has='one'` parameters on the `relation` editable tag, resulting in a single-select dropdown list that only shows unassociated pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_4\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='relation' name='album_artists' masterpage='artists.php' has='one' reverse_has='one' />\n```\n\n----------------------------------------\n\nTITLE: Defining a Thumbnail with Fixed Width in CouchCMS\nDESCRIPTION: Defines a 'thumbnail' editable region named 'my_image_thumb' specifying only the `width` ('100'). The height is automatically calculated to maintain the original image's aspect ratio. It requires an associated 'image' field named 'my_image' and includes an admin preview.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    show_preview='1'\n    assoc_field='my_image'\n    type='thumbnail' />\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Exclusion - Not Equals\nDESCRIPTION: This snippet fetches all cloned pages of `blog.php` where the editable region `my_blog_author` DOES NOT contain the word 'jeffrey' anywhere within it. The '!=' operator performs an exclusion search, and the `masterpage` parameter identifies the template to search.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_32\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author!=jeffrey'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Multiple Custom Validation Error Messages in CouchCMS\nDESCRIPTION: Example of setting multiple custom error messages for different validators in CouchCMS editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_23\n\nLANGUAGE: html\nCODE:\n```\nvalidator_msg='required=Please enter something | min_len=Too short!'\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Single Masterpage (CouchCMS)\nDESCRIPTION: Fetches comments associated only with pages cloned from the 'blog.php' template using the 'masterpage' parameter. This restricts the comment retrieval to a specific template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_0\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments masterpage='blog.php'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Quantity Input Element in HTML\nDESCRIPTION: The HTML structure for input element that allows users to change the quantity of an item in cart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_24\n\nLANGUAGE: HTML\nCODE:\n```\n<td class=\"col-quantity\"><input class=\"quantity-input\" type=\"number\" step=\"1\" value=\"2\"></td>\n```\n\n----------------------------------------\n\nTITLE: Including CouchCMS Framework in PHP Template\nDESCRIPTION: Shows the mandatory PHP code snippets required at the beginning and end of a `.php` file to enable CouchCMS management. These lines load the CouchCMS framework and invoke its processing engine.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once 'couch/cms.php'; ?>\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Paginated Listing of Nested Pages\nDESCRIPTION: Shows how to create a paginated list of nested pages with pagination controls and record count information.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_pages.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_pages masterpage='index.php' extended_info='1' paginate='1' limit='5' >\n   <cms:if k_paginated_top>\n     <cms:if k_paginator_required >\n         Page <cms:show k_current_page /> of <cms:show k_total_pages /><br>\n     </cms:if>\n     <cms:show k_total_records /> records Found.\n     Displaying: <cms:show k_record_from />-<cms:show k_record_to />\n     <br /><hr />\n   </cms:if>\n\n    <a href=\"<cms:show k_nestedpage_link />\"><cms:show k_nestedpage_title /></a><br />\n\n    <cms:paginator />\n\n</cms:nested_pages>\n```\n\n----------------------------------------\n\nTITLE: Fetch Variable from GET, POST, or COOKIE - CouchCMS Tag\nDESCRIPTION: Demonstrates the basic usage of the `gpc` tag to retrieve a variable's value. When the `method` parameter is not specified, the tag searches for the variable in GET, then POST, then COOKIE in that order. A key benefit is that the tag automatically sanitizes the retrieved value, helping to prevent XSS vulnerabilities.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/gpc.md#_snippet_0\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:gpc 'my_parameter' />\n```\n\n----------------------------------------\n\nTITLE: Initializing CouchCMS in PHP Template\nDESCRIPTION: Adds the required PHP boilerplate to an HTML file to transform it into a CouchCMS template. The `require_once` line includes the CouchCMS core file, and `COUCH::invoke()` processes the template and outputs the final content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n```\n\nLANGUAGE: php\nCODE:\n```\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: cms:show Tag with Arbitrary Named Parameters - CouchCMS\nDESCRIPTION: This snippet demonstrates that the `<cms:show>` tag in CouchCMS ignores the names assigned to its parameter. Any name can be used; the tag will always display the value passed as the single parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/tags.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:show 'Hello' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:show var='Hello' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:show foobar='Hello' />\n```\n\n----------------------------------------\n\nTITLE: Defining Many-to-One Relation (Primary to Reverse) in CouchCMS\nDESCRIPTION: This snippet defines a Many-to-One relationship where the primary template page can link to only one page of the reverse template, but each reverse template page can link to many primary pages. It uses the `has='one'` parameter with the `relation` editable tag, resulting in a single-select dropdown list in the primary template's admin panel.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_2\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' has='one' />\n```\n\n----------------------------------------\n\nTITLE: Accessing the Dropdown's Selected Value in CouchCMS\nDESCRIPTION: Displays the value selected by the user in the 'my_property_type' editable region. This tag is used in the template to output the stored value, which corresponds to the selected option's label or its mapped value if `opt_values` included value mapping.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:show my_property_type />\n```\n\n----------------------------------------\n\nTITLE: Cloaking Email with Custom No-JavaScript Message in CouchCMS\nDESCRIPTION: Demonstrates using the 'msg' parameter to provide a custom message that will be displayed to users who access the page with JavaScript disabled, overriding the default message.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/cloak_email.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:cloak_email email='johndoe@gmail.com' title='Contact Me!' msg='No JavaScript ?!!' />\n```\n\n----------------------------------------\n\nTITLE: Basic PHP Tag Usage in Couch CMS\nDESCRIPTION: A simple example showing how to use the 'php' tag to execute PHP code within a Couch CMS template. This outputs 'Hello World' to the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/php.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:php> echo( \"Hello World\" ); </cms:php>\n```\n\n----------------------------------------\n\nTITLE: Adding Headers to CouchCMS Calendar (HTML)\nDESCRIPTION: Extends the basic calendar display by adding header rows to the HTML table. It uses the `date` tag with the `k_calendar_date` variable to display the current month and year, and the `repeat` tag with the `zebra` tag to add header cells for the days of the week.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/events-calendar.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:calendar >\n    <table class=\"calendar_small\">\n        <tr>\n            <th colspan=\"7\"><cms:date k_calendar_date format='F Y' /></th>\n        </tr>\n        <tr>\n            <cms:repeat count='7'>\n            <td class=\"months_heading\"><cms:zebra 'Su' 'M' 'T' 'W' 'Th' 'F' 'S'/></td>\n            </cms:repeat>\n        </tr>\n\n        <cms:weeks>\n            <tr>\n            <cms:days >\n                <td ><cms:show k_day /></td>\n            </cms:days>\n            </tr>\n        </cms:weeks>\n    </table>\n</cms:calendar>\n```\n\n----------------------------------------\n\nTITLE: Advanced PHP Tag Usage with Nested Couch Tags\nDESCRIPTION: This example demonstrates how to use the 'php' tag as a parameter within the 'set' tag, while also using a Couch 'show' tag within PHP code. It replaces newlines with pipe characters in a variable's content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/php.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:set k_success2=\"<cms:php>\n    echo(str_replace( \\\"\\n\\\", '|', \\\"<cms:show k_success/>\\\" ));\n</cms:php>\" />\n```\n\n----------------------------------------\n\nTITLE: Encoding HTML Entities in CouchCMS Templates with html_encode Tag - CouchCMS Template\nDESCRIPTION: This snippet demonstrates how to use the html_encode tag in CouchCMS template files to convert special HTML characters to their corresponding entities for safe output. The provided example wraps the excerptHTML tag, which shows a summary of post content, inside the html_encode tag. No external dependencies are required as both tags are built-in to CouchCMS. Inputs include any value/output placed inside <cms:html_encode>, and the output is the input string with &, \", ', <, and > converted to &amp;amp;, &amp;quot;, &amp;#039;, &amp;lt;, and &amp;gt;. There are no parameters for html_encode, and it does not accept or set variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/html_encode.md#_snippet_0\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:html_encode>\n    <cms:excerptHTML><cms:show my_news_text /></cms:excerptHTML>\n</cms:html_encode>\n```\n\n----------------------------------------\n\nTITLE: HTML Output of CouchCMS fieldset\nDESCRIPTION: Displays the HTML output generated by the CouchCMS '<cms:fieldset>' tag.  It shows how the CouchCMS tag is converted into standard HTML for structuring form elements.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_19\n\nLANGUAGE: HTML\nCODE:\n```\n<fieldset>\n    <dl>\n        <dt><label for=\"name\">name <span class=\"k_fielderror\">*</span> </label></dt>\n        <dd><input type=\"text\" maxlength=\"40\" size=\"10\" value=\"aa\" id=\"name\" name=\"name\"/></dd>\n\n        <dt><label for=\"password\">password </label></dt>\n        <dd><input type=\"password\" maxlength=\"10\" size=\"10\" value=\"\" id=\"password\" name=\"password\"/></dd>\n    </dl>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Database in config.php\nDESCRIPTION: This snippet describes the database configuration step after renaming the config.example.php file to config.php. The user is prompted to modify the database connection details in the config.php file to match their MySQL database credentials. This includes the database server, username, password, and database name.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/building-a-real-world-site.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n![](../../../../assets/img/contents/portfolio-site-3.png)\n```\n\n----------------------------------------\n\nTITLE: Excluding Comments by Page Names (CouchCMS)\nDESCRIPTION: Fetches comments from all pages *except* those named 'my_first_entry' or 'my_another_entry'. Uses the 'NOT' keyword before the comma-separated list in the 'page_name' parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_8\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_name='NOT my_first_entry, my_another_entry'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Setting Exact Length Validator in CouchCMS\nDESCRIPTION: Example of using the 'exact_len' validator to enforce a specific character length for input in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_8\n\nLANGUAGE: html\nCODE:\n```\nvalidator='exact_len=10'\n```\n\n----------------------------------------\n\nTITLE: Including Unchecked Pages - CouchCMS menu Tag with ignore_show_in_menu - CouchCMS Tag Language\nDESCRIPTION: Demonstrates overriding the default 'Show in menu' setting by setting 'ignore_show_in_menu' to '1'. Ensures that even pages flagged as hidden (in Advanced Settings of nested-pages) are included in the menu output. Useful for displaying all content regardless of menu preferences.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_5\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' ignore_show_in_menu='1' />\n```\n\n----------------------------------------\n\nTITLE: Using masterpage Parameter (Explicit) - CouchCMS Tag\nDESCRIPTION: This example shows how to explicitly specify the template from which to fetch pages using the `masterpage` parameter. It will retrieve all pages cloned from the 'blog.php' template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_1\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Enabling Comments in CouchCMS Template\nDESCRIPTION: This snippet demonstrates how to enable comments on a template in CouchCMS. The `commentable` parameter of the `<cms:template>` tag is set to '1'. This allows the admin to enable commenting for pages cloned from this template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-comments.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:template title='Blog' clonable='1' commentable='1'>\n    <!-- The editable and folder tags can go here -->\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Defining a YouTube Video Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers the 'youtube' shortcode and its handler 'youtube_handler'. It accepts 'video' (either a full URL or just the video ID), 'width', and 'height' parameters using `$FUNCS->get_named_vars`. The handler extracts the video ID from the URL if necessary, sanitizes parameters, and returns an HTML iframe suitable for embedding YouTube videos.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n// 4.\n// YouTube Shortcode\n// Usage:   [youtube video=\"http://www.youtube.com/watch?v=5PsnxDQvQpw\"]\n//          [youtube https://www.youtube.com/watch?v=1aBSPn2P9bg]\n//          [youtube 1aBSPn2P9bg]\n$FUNCS->register_shortcode( 'youtube', 'youtube_handler' );\nfunction youtube_handler( $params, $content=null ){\n   global $FUNCS;\n\n   extract( $FUNCS->get_named_vars(array(\n      'video' => 'http://',\n      'width' => '475',\n      'height' => '350',\n   ), $params) );\n\n   // Video parameter is link or ID?\n   if ( (substr($video, 0, 7) == 'http://') || (substr($video, 0, 8) == 'https://') ){\n      /*\n      Example links that can be handled:\n      http://www.youtube.com/watch?v=5PsnxDQvQpw\n      http://youtube.com/watch?v=5PsnxDQvQpw\n      http://youtube.com/watch?gl=US&hl=en-US&v=5PsnxDQvQpw\n      https://youtube.com/v/5PsnxDQvQpw&rel=1\n      */\n      if( !preg_match('#https?://(?:[^\\.]+\\.)?youtube.com.*(?:\\?v=|&v=|/v/)([\\w_-]+)#i', $video, $matches) ) return;\n      $video = $matches[1];\n   }\n\n   // Sanitize parameters\n   $video = htmlspecialchars( $video, ENT_QUOTES );\n   $width = (int)$width;\n   $height = (int)$height;\n\n   // Output HTML\n   $html =<<<EOS\n   <iframe class=\"youtube-player\" type=\"text/html\" width=\"$width\" height=\"$height\" src=\"//www.youtube.com/embed/$video\" frameborder=\"0\"></iframe>\nEOS;\n   return $html;\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Single Page ID (CouchCMS)\nDESCRIPTION: Retrieves comments belonging only to the page with the specific ID '13'. The 'page_id' parameter filters comments based on the unique identifier of the associated page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_3\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_id='13'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Global Variables Definition in globals.php for Site-wide Editable Content\nDESCRIPTION: This snippet shows how to create a non-executable CouchCMS template named globals.php containing editable regions for site-wide values like site name and description. These variables can be edited centrally and fetched across templates for consistent branding.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n// Attach CouchCMS to the globals.php template\ninclude_once('couch/cms.php');\n// Define editable regions for global site information\necho '<cms:editable name=\"site_name\" label=\"Site Name\" type=\"text\" />';\necho '<cms:editable name=\"site_description\" label=\"Site Description\" type=\"richtext\" />';\n?>\n```\n\n----------------------------------------\n\nTITLE: Using popup_edit tag with multiple editable regions\nDESCRIPTION: This HTML snippet illustrates how to specify multiple regions within a single '<cms:popup_edit />' tag, separated by '|', enabling simultaneous editing controls for multiple content areas in the popup interface.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:popup_edit 'intro_image|intro_title|intro_text' />\n```\n\n----------------------------------------\n\nTITLE: Listing Cart Items with CouchCMS pp_cart_items Loop\nDESCRIPTION: Shows how to use the `<cms:pp_cart_items>` tag pair to iterate through all items currently in the cart. Inside the loop, CouchCMS variables (like `link`, `product_thumb`, `title`, `quantity`, `price`, `line_total`, `line_id`, `line_discount`, `orig_price`) are made available and displayed using `<cms:show />` tags to dynamically generate the cart item rows.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_20\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:pp_cart_items>\n    <tr>\n        <td class=\"col-remove\"><a href=\"<cms:pp_remove_item_link />\" class=\"cart-remove\" title=\"Remove\">&times;<span class=\"screen-reader\">Remove</span></a></td>\n        <td class=\"col-desc\">\n            <a href=\"<cms:show link />\" class=\"cart-thumb\">\n                <img src=\"<cms:show product_thumb />\" width=\"70\" height=\"64\" alt=\"<cms:show title />\">\n            </a>\n            <div class=\"desc-box\">\n                <a href=\"<cms:show link />\"><cms:show title /></a>\n                <p><cms:pp_selected_options separator='<br>' /></p>\n            </div>\n        </td>\n        <td class=\"col-quantity\"><input name=\"qty[<cms:show line_id />]\" class=\"quantity-input\" type=\"number\" min=\"0\" step=\"1\" value=\"<cms:show quantity />\" title=\"Quantity\"></td>\n        <td class=\"col-price\">\n            <cms:if line_discount><span class=\"compare-price\">$<cms:number_format orig_price /></span></cms:if>\n            $<cms:number_format price />\n        </td>\n        <td class=\"col-subtotal\">$<cms:number_format line_total /></td>\n    </tr>\n</cms:pp_cart_items>\n```\n\n----------------------------------------\n\nTITLE: Preselecting Checkbox Options by Value - CouchCMS HTML\nDESCRIPTION: Sets one or more checkbox options as selected by default, using the 'opt_selected' parameter with either alias or value matching the mapping in 'opt_values'. Particularly useful for displaying default selections to the CMS user. Requires a prior editable region definition.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name=\"my_categories\" label=\"Categories\" desc=\"Check all applicable\"\n  opt_values='Entertainment | Computers | Sports | Health'\n  opt_selected = 'Sports'\n  type='checkbox'\n/>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name=\"my_categories\" label=\"Categories\" desc=\"Check all applicable\"\n  opt_values='Entertainment=0 | Computers=1 | Sports=2 | Health=3'\n  opt_selected = '2'\n  type='checkbox'\n/>\n```\n\nLANGUAGE: HTML\nCODE:\n```\nopt_selected = '0 | 2'\n```\n\n----------------------------------------\n\nTITLE: Performing Search with Explicit Keywords Parameter in CouchCMS\nDESCRIPTION: Similar to the basic search, this snippet explicitly sets the search keywords using the `keywords` parameter. It retrieves the value of the 's' query string parameter using the `cms:gpc` tag and passes it to `cms:search`. This method allows using variables or other tags to define the search terms.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-search.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:search masterpage='blog.php' limit='10' keywords=\"<cms:gpc 's' />\" >\n    <h3><a href=\"<cms:show k_page_link />\"><cms:show k_search_title /></a></h3>\n    <cms:show k_search_excerpt />\n</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Display Richtext Content (CouchCMS)\nDESCRIPTION: Illustrates how to output the HTML content stored within a previously defined 'richtext' editable region named 'prop_desc'. The <cms:show> tag is used with the region's name as the variable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show prop_desc />\n```\n\n----------------------------------------\n\nTITLE: Using the [googlemap] Shortcode in CouchCMS\nDESCRIPTION: Demonstrates various ways to use the previously defined `[googlemap]` shortcode within CouchCMS content. It shows usage with only the required 'src' parameter, and examples overriding the default 'width' and 'height' parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_1\n\nLANGUAGE: Shortcode\nCODE:\n```\n[googlemap src=\"http://maps.google.com/?ll=23.250652,77.402072&spn=0.019912,0.038581&z=15\"]\n[googlemap src=\"http://maps.google.com/?ll=23.250652,77.402072&spn=0.019912,0.038581&z=15\" width='600']\n[googlemap src=\"http://maps.google.com/?ll=23.250652,77.402072&spn=0.019912,0.038581&z=15\" width='600' height='480']\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Multiple Masterpages (CouchCMS)\nDESCRIPTION: Fetches comments associated with pages cloned from either 'blog.php' or 'testimonial.php' templates. The 'masterpage' parameter accepts a comma-separated list for multiple template inclusion.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_1\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments masterpage='blog.php, testimonial.php'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Conditionally Rendering Template Content Using CouchCMS Tags - CouchCMS-Mustache\nDESCRIPTION: This snippet demonstrates using nested <cms:if> tags to determine the current view (page, folder, archive, or home) in a CouchCMS clonable template and display appropriate content for each scenario. It checks the environment variables k_is_page, k_is_folder, k_is_archive, and k_is_home to control output sections. Prerequisites include a clonable template context with CouchCMS active and defined variables. The snippet expects these boolean-like variables and produces relevant content blocks for each type of view, enabling fully dynamic templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/views.md#_snippet_0\n\nLANGUAGE: CouchCMS-Mustache\nCODE:\n```\n<cms:if k_is_page >\n    <!-- Page view - display current page here -->\n<cms:else />\n    <!-- List view -->\n    <cms:if k_is_folder >\n        <!-- Folder view - display a list of pages belonging to this folder here -->\n    </cms:if>\n\n    <cms:if k_is_archive >\n        <!-- Archive view - display a list of pages belonging to this time period here -->\n    </cms:if>\n\n    <cms:if k_is_home >\n        <!-- Neither a folder view nor archive view - display a list of ALL pages cloned from this template here -->\n    </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Apply Relative CSS Stylesheet to Richtext Editor (CouchCMS)\nDESCRIPTION: Shows how to use the 'css' parameter to apply a custom stylesheet to the CKEditor instance. A relative path ('styles/editor_styles.css') is provided, which is resolved relative to the CouchCMS site root folder. This helps match the editor's content appearance to the final webpage.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css='styles/editor_styles.css'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Hiding Editable Regions in CouchCMS\nDESCRIPTION: Example of using the 'hidden' parameter to suppress the output of an editable region defined outside the Template tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\nhidden='1'\n```\n\n----------------------------------------\n\nTITLE: Restricting Input to Alphanumeric Characters in CouchCMS\nDESCRIPTION: Example of using the 'alpha_num' validator to restrict input to only alphabetic and numeric characters in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_10\n\nLANGUAGE: html\nCODE:\n```\nvalidator='alpha_num'\n```\n\n----------------------------------------\n\nTITLE: Using loop iteration variables in CouchCMS repeat tag\nDESCRIPTION: This snippet demonstrates how to access and display the current iteration count (k_count) within a repeat loop tag in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<cms:repeat count='4'>\n    <cms:show k_count /><br>\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Fixing Relative CSS Links with k_site_link\nDESCRIPTION: Shows the corrected code for linking CSS files. By prepending the CouchCMS `k_site_link` tag (within `<cms:show />`), an absolute URL to the site root is generated, ensuring the stylesheets load correctly even with PrettyURLs enabled. This fix needs to be applied in all templates, including embedded ones.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<link rel=\"stylesheet\" href=\"<cms:show k_site_link />css/style.css\" type=\"text/css\" media=\"screen\">\n<link rel=\"stylesheet\" href=\"<cms:show k_site_link />css/style_other.css\" type=\"text/css\" media=\"screen\">\n```\n\n----------------------------------------\n\nTITLE: Defining a Thumbnail with Fixed Width and Height in CouchCMS\nDESCRIPTION: Defines a 'thumbnail' editable region named 'my_image_thumb' specifying both `width` ('100') and `height` ('80'). If the aspect ratio of the source image differs, the thumbnail will be cropped to fit these dimensions, potentially removing parts of the image. It requires an associated 'image' field named 'my_image' and includes an admin preview.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    height='80'\n    show_preview='1'\n    assoc_field='my_image'\n    type='thumbnail' />\n```\n\n----------------------------------------\n\nTITLE: Conditional Element-Level Access Control in Couch CMS Templates - HTML-like Tag Snippet\nDESCRIPTION: Implements fine-grained access control within a page by conditionally displaying content based on the visitor's user access level and login status. It first checks if the user has an access level greater than or equal to 4 (Authenticated User Special), then either displays restricted content or messages prompting login or re-login via dynamically generated login and logout links. This snippet depends on Couch CMS predefined variables such as k_user_access_level, k_logged_out, k_login_link, and k_logout_link.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/users.md#_snippet_1\n\nLANGUAGE: HTML-like Couch CMS tags\nCODE:\n```\n<cms:if k_user_access_level ge '4' >\n    <h1>If you can see this you must atleast be an Authenticated User (Special)</h1>\n<cms:else />\n    <cms:if k_logged_out >\n        You need to be logged in as an Authenticated User (Special) or higher to access this area <p>\n        Please <a href=\"<cms:show k_login_link />\">Login</a>.\n    <cms:else />\n        You do not have sufficient priveleges to access this area<p>\n        You need to be logged in as an Authenticated User (Special) or higher.<p>\n        Please <a href=\"<cms:show k_logout_link />\">Logout</a> and login again with the right credentials.\n    </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Fetching Custom Field Value from a Specific Page - CouchCMS\nDESCRIPTION: This code snippet demonstrates how to use the `get_custom_field` tag to fetch the value of an editable region named 'content' from the 'blog.php' template within a specific page named 'my_test_page'. This is typically used for clonable pages where you need to specify which instance to fetch the data from.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get_custom_field.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:get_custom_field var='content' masterpage='blog.php' page='my_test_page' />\n```\n\n----------------------------------------\n\nTITLE: Defining Product Options\nDESCRIPTION: This code snippet demonstrates the syntax for defining product options in CouchCart, including options, option-values, and price modifications. The input is a string with the option name, values, and price adjustments. The output determines how the variant will behave.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nColor[Red | Black | Green]\n```\n\n----------------------------------------\n\nTITLE: Creating Yearly Archives Grouping with CouchCMS Archives Tag in PHP\nDESCRIPTION: This snippet customizes the archives tag by setting the type parameter to 'yearly' to group pages by year instead of the default monthly grouping. It outputs each yearly period's start date formatted as per the specified pattern. The use of k_archive_date and <cms:date> tags remains the same, but the groupings change to yearly collections. This allows template designers to show archive summaries at a higher level of granularity.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-archives.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:archives masterpage='blog.php' type='yearly'>\n    <cms:date k_archive_date format='F Y' /><br>\n</cms:archives>\n```\n\n----------------------------------------\n\nTITLE: Handling PayPal IPN Success and Error in CouchCMS - CouchCMS Template\nDESCRIPTION: This fragment demonstrates a typical structure for handling successful and failed PayPal IPN events using the paypal_processor tag. It makes use of the k_paypal_success and k_paypal_error variables, made available after IPN processing, to execute further actions. Dependencies include CouchCMS and working paypal_processor integration; expected input is a PayPal IPN, and the snippet must be placed in the appropriate template file.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_6\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:paypal_processor>\n    <cms:if k_paypal_success>\n\n        <!-- All PayPal variables and variables of the item's page are available here -->\n\n    </cms:if>\n\n    <cms:if k_paypal_error>\n\n        <!-- All PayPal variables and the error message is available here -->\n\n    </cms:if>\n</cms:paypal_processor>\n```\n\n----------------------------------------\n\nTITLE: Disabling the 'Selected' Class - CouchCMS menu Tag with no_selected - CouchCMS Tag Language\nDESCRIPTION: Turns off the default behavior where the currently visited page receives a special class ('current') on its menu item. Useful for universal or non-highlighted menus. The 'no_selected' parameter is set to '1' to disable selection highlighting.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_15\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' no_selected='1' />\n```\n\n----------------------------------------\n\nTITLE: Cloaking Email with a Custom Link Title in CouchCMS\nDESCRIPTION: Shows how to use the 'title' parameter with the 'cloak_email' tag to set custom visible text for the generated mailto link, instead of displaying the email address itself.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/cloak_email.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:cloak_email email='johndoe@gmail.com' title='Contact Me!' />\n```\n\n----------------------------------------\n\nTITLE: Styling the Paginator Output - CSS\nDESCRIPTION: This CSS code provides styling rules specifically for the HTML output generated by the `cms:paginator` tag. It targets elements within a `div` with the class `pagination` to style links, current page indicators, and disabled page indicators.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pagination.md#_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n/*\n    Paginator -\n    Source: http://www.strangerstudios.com/sandbox/pagination/diggstyle.php (strangerstudios.com)\n*/\n\ndiv.pagination {\n    padding: 3px;\n    margin: 3px;\n}\n\ndiv.pagination a {\n    padding: 2px 5px 2px 5px;\n    margin: 2px;\n    border: 1px solid #AAAADD;\n    zoom: 100%;\n    text-decoration: none; /* no underline */\n    color: #000099;\n}\ndiv.pagination a:hover, div.pagination a:active {\n    border: 1px solid #000099;\n\n    color: #000;\n}\ndiv.pagination span.page_current {\n    padding: 2px 5px 2px 5px;\n    margin: 2px;\n    border: 1px solid #000099;\n\n    * zoom: 100%;\n\n    font-weight: bold;\n    background-color: #000099;\n    color: #FFF;\n}\ndiv.pagination span.page_disabled {\n    padding: 2px 5px 2px 5px;\n    margin: 2px;\n    border: 1px solid #EEE;\n\n    * zoom: 100%;\n\n    color: #DDD;\n}\n\n* span.elipsis {zoom:100%}\n```\n\n----------------------------------------\n\nTITLE: Specifying numeric input type for editable region in CouchCMS\nDESCRIPTION: Indicates how to set the search_type parameter to 'integer' or 'decimal' for numeric input fields, enabling numeric comparisons or sorting based on the input values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_numeric_field\"\n  label=\"Numeric Field\"\n  desc=\"Enter numeric data\"\n  search_type='integer'\n  type='text'\n/>\n```\n\n----------------------------------------\n\nTITLE: Listing Related Albums Using related_pages Tag in CouchCMS (HTML-like Templating)\nDESCRIPTION: Displays related album pages linked to an artist page using the related_pages tag within a page-view context in the CouchCMS templating language. This snippet requires the 'artist_albums' relation field defined in the 'artists.php' template, which is the primary template establishing the relationship. It outputs the titles of related albums by iterating over those pages. The snippet uses an if condition to ensure it executes within a single page view and makes available all the variables from the 'artists.php' template when rendering. Specifying the relation field name ('artist_albums') is recommended for clarity though optional if only one relation exists.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_5\n\nLANGUAGE: HTML-like CouchCMS Templating Language\nCODE:\n```\n<cms:if k_is_page >\n   <!-- All variables of 'artists.php' are available here -->\n   <h2>Artist: <cms:show k_page_title /></h2>\n\n   <h3>Related albums:</h3>\n   <cms:related_pages 'artist_albums' >\n      <!-- All variables of 'albums.php' are available here -->\n      <cms:show k_page_title />\n   </cms:related_pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Skipping Comments with Offset (CouchCMS)\nDESCRIPTION: Retrieves five approved comments after skipping the first two results. The 'offset' parameter specifies the number of initial comments to skip, used in conjunction with 'limit'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_11\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments limit='5' offset='2'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Creating Page Links in CouchCMS\nDESCRIPTION: Code snippet for displaying the URL link to the current page using the k_page_link system variable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show k_page_link />\n```\n\n----------------------------------------\n\nTITLE: Basic Email Cloaking with CouchCMS\nDESCRIPTION: Demonstrates the simplest usage of the 'cloak_email' tag by providing only the email address as a parameter. This generates a JavaScript-protected mailto link.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/cloak_email.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:cloak_email 'johndoe@gmail.com' />\n```\n\n----------------------------------------\n\nTITLE: Basic Relation Region Setup in CouchCMS\nDESCRIPTION: Demonstrates how to create a basic relation region that lists all cloned pages from a specific template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/relation.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' />\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor Toolbar to 'Custom' in CouchCMS Editable Field\nDESCRIPTION: This snippet sets the toolbar parameter to 'custom', which disables the default tool sets and lets administrators explicitly define which buttons are shown via the custom_toolbar parameter. This enables fine-grained control over the editor UI but requires additional setup in the field definition.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_16\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='custom'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Assigning a Variable's Value to Another Variable in Couch CMS\nDESCRIPTION: Creates a variable named 'message' and assigns the value of the existing 'greeting' variable to it. This demonstrates using variables as values for other variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set.md#_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n<cms:set message=greeting />\n```\n\n----------------------------------------\n\nTITLE: Defining Many-to-One Relation (Reverse to Primary) in CouchCMS\nDESCRIPTION: This snippet defines a Many-to-One relationship from the perspective of the reverse template. By placing the `relation` tag with `masterpage='artists.php'` and `has='one'` in the albums template, an album page is limited to linking to a single artist, while an artist can be linked to many albums. This creates a single-select dropdown for choosing an artist when editing an album.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_3\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='relation' name='album_artists' masterpage='artists.php' has='one' />\n```\n\n----------------------------------------\n\nTITLE: Using Custom Separators with Complex Validators in CouchCMS\nDESCRIPTION: Example of using custom separators to combine regex validation with other validators in CouchCMS editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_25\n\nLANGUAGE: html\nCODE:\n```\nvalidator='regex:/(cat|dog)$/i # min_len:14'\n```\n\n----------------------------------------\n\nTITLE: Displaying Selected Options (Self-Closing Tag)\nDESCRIPTION: Shows how to use the `<cms:pp_selected_options />` tag as a self-closing tag. This outputs all selected options for the current cart item as a single string, using a specified separator (in this case, `<br>`) between options.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_21\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:pp_selected_options separator='<br>' />\n```\n\n----------------------------------------\n\nTITLE: Listing Related Artists Using reverse_related_pages Tag in CouchCMS (HTML-like Templating)\nDESCRIPTION: Iterates over artist pages related to the current album page using the reverse_related_pages tag, within a page view context of the 'albums.php' template. This snippet requires specifying both the relation field name ('artist_albums') and the masterpage of the primary template ('artists.php') that defines the relationship. It renders the title of each related artist. The snippet ensures it runs only in page-view context and accesses all variables available in 'albums.php' while displaying 'artists.php' related pages.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_6\n\nLANGUAGE: HTML-like CouchCMS Templating Language\nCODE:\n```\n<cms:if k_is_page >\n   <!-- All variables of 'albums.php' are available here -->\n   <h2>Album: <cms:show k_page_title /></h2>\n\n   <h3>Artists:</h3>\n   <cms:reverse_related_pages 'artist_albums' masterpage='artists.php' >\n      <!-- All variables of 'artists.php' are available here -->\n      <cms:show k_page_title />\n   </cms:reverse_related_pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Defining a CouchCMS Nicedit Editable Region with Default Content\nDESCRIPTION: Demonstrates defining an editable region of type 'nicedit' with initial content. The text enclosed between the opening and closing tags serves as the default value displayed in the editor when a new page is created or edited.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/nicedit.md#_snippet_1\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='nicedit' label='Description' name='my_desc' >\nThis enclosed text will appear as the default value of the editor\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Repeat Tags in CouchCMS\nDESCRIPTION: This example demonstrates how to use the `repeat` tag in CouchCMS to generate an HTML table. The outer `repeat` creates rows, and the inner `repeat` creates cells within each row. The `k_count` variable is used to display the iteration number in each cell.  The `startcount` parameter is used to start the counter at 1 instead of 0.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/repeat.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<TABLE>\n<cms:repeat count='4' >\n    <TR>\n        <cms:repeat count='6' startcount='1' >\n            <TD>\n                <cms:show k_count />\n            </TD>\n        </cms:repeat>\n    </TR>\n</cms:repeat>\n</TABLE>\n```\n\n----------------------------------------\n\nTITLE: Configuring PayPal Credentials and Currency in CouchCMS (PHP)\nDESCRIPTION: This code block sets the core PayPal configuration for CouchCMS in the config.php file. It defines whether to use the PayPal sandbox for testing (K_PAYPAL_USE_SANDBOX), specifies the seller's business account email (K_PAYPAL_EMAIL), and sets the currency (K_PAYPAL_CURRENCY) using a supported three-letter code. Adjust K_PAYPAL_USE_SANDBOX to 0 for production, provide your correct PayPal business email, and choose the matching PayPal-supported currency code. Required for enabling PayPal integration across the site.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Set the following if you use PayPal buttons to sell products.\n// 17.\n// Set this to zero once you are ready to go live\ndefine( 'K_PAYPAL_USE_SANDBOX', 1 );\n// 18.\n// Email address of your PayPal 'business' account selling the item\ndefine( 'K_PAYPAL_EMAIL', 'seller_3272492192_biz@gmail.com' );\n// 19.\n// A three letter code for the currency you do your business in\n// Some valid values are: AUD (Australian Dollar), CAD (Canadian Dollar), EUR (Euro),\n// GBP (Pound Sterling), JPY (Japanese Yen) and USD (U.S. Dollar).\n// Please check PayPal to find yours.\ndefine( 'K_PAYPAL_CURRENCY', 'USD' );\n```\n\n----------------------------------------\n\nTITLE: Adding a popup_edit tag for button text element with link_text parameter\nDESCRIPTION: This code shows how to enable popup editing for a textual button label by appending a '<cms:popup_edit />' tag to the element, with a custom 'link_text' parameter to customize the editing link label on the front-end.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#work\" class=\"button button-big\"><cms:show intro_button /></a>\n<cms:popup_edit 'intro_button' link_text='Edit button' />\n```\n\n----------------------------------------\n\nTITLE: Defining Nested Folders in CouchCMS\nDESCRIPTION: This snippet demonstrates how to define a hierarchical folder structure within a CouchCMS clonable template (e.g., news.php) using nested `<cms:folder>` tags. Each tag requires a unique 'name' attribute for identification and a 'title' attribute for display in the admin panel. Placing this code in the template and visiting it as a super-admin registers the folders. Pages can then be assigned to these folders via the admin panel's 'Advanced settings'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:folder name=\"world\" title=\"World News\">\n    <cms:folder name=\"north-america\" title=\"North American News\">\n        <cms:folder name=\"united-states\" title=\"United States News\">\n            <cms:folder name=\"ohio\" title=\"Ohio News\" />\n            <cms:folder name=\"nevada\" title=\"Nevada News\" />\n        </cms:folder>\n    </cms:folder>\n    <cms:folder name=\"asia\" title=\"Asian News\">\n        <cms:folder name=\"china\" title=\"China News\" />\n        <cms:folder name=\"japan\" title=\"Japan News\" />\n    </cms:folder>\n</cms:folder>\n<cms:folder name=\"sports\" title=\"Sports News\" />\n<cms:folder name=\"music\" title=\"Music News\" />\n<cms:folder name=\"entertainment\" title=\"Entertainment News\" />\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Date Range - CouchCMS Tag\nDESCRIPTION: This snippet fetches pages cloned from 'blog.php' published within a specific date range, from '2010-02-01' (inclusive) up to, but not including, '2010-03-01', by combining the `start_on` and `stop_before` parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_20\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' start_on='2010-02-01' stop_before='2010-03-01'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages with Multiple Order Directions - CouchCMS Tag\nDESCRIPTION: When sorting by multiple fields, this snippet demonstrates setting different sort directions for each field. It sorts first in ascending order by 'my_custom_field_1' and then in descending order by 'my_custom_field_2'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_28\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages orderby='my_custom_field_1, my_custom_field_2' order='asc, desc'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying 'No Comments' message conditionally - CouchCMS\nDESCRIPTION: Uses a conditional 'if' tag to display either the list of comments or a 'No comments' message if no comments are available for the current page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<cms:if k_comments_total_count >\n  ...\n<cms:else />\n  No comments.\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Modifying Quantity Input Name for CouchCart\nDESCRIPTION: Shows the required modification to the quantity input field for CouchCart integration. The `name` attribute is changed from 'quantity' to 'qty', which is the name expected by CouchCart when processing the add-to-cart form submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"product-quantity\" name=\"qty\" id=\"quantity\" type=\"number\" step=\"1\" value=\"1\" title=\"Quantity\">\n```\n\n----------------------------------------\n\nTITLE: Permanent Redirection with HTTP 301 status code\nDESCRIPTION: Example showing how to implement a permanent redirect (HTTP 301) to a cloned page by setting the 'permanently' parameter to 1.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/redirect.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:redirect url=\"<cms:link masterpage=k_template_name page='test' />\" permanently='1' />\n```\n\n----------------------------------------\n\nTITLE: Accessing EXIF Data in a CouchCMS Gallery Template (CouchCMS Tags)\nDESCRIPTION: Demonstrates using the `<cms:exif>` tag within a `<cms:pages>` loop for a gallery template (`gallery.php`). Inside the `<cms:exif>` block, various EXIF variables (e.g., `exif_resolution`, `exif_datetime`, `exif_make`) become accessible and can be outputted using the `<cms:show>` tag. This specific example displays image dimensions, capture date/time, camera make/model, shutter speed, aperture, and focal length.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/photo-gallery.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:pages masterpage=\"gallery.php\" include_subfolders='0' >\n   <a href=\"<cms:show gg_image />\"><img src=\"<cms:show gg_thumb />\" title=\"<cms:show k_page_title />\" /></a>\n   <cms:exif>\n      Dimensions: <cms:show exif_resolution /><br />\n      Taken on: <cms:show exif_datetime /><br />\n      Camera make: <cms:show exif_make /><br />\n      Camera model: <cms:show exif_model /><br />\n      Shutter speed: <cms:show exif_exposuretime /><br />\n      Aperture: <cms:show exif_aperture /><br />\n      Focal length: <cms:show exif_focallength /><br />\n   </cms:exif>\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Cloaking Email Using Explicit 'email' Parameter in CouchCMS\nDESCRIPTION: Illustrates using the named 'email' parameter explicitly within the 'cloak_email' tag to specify the email address to be cloaked.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/cloak_email.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:cloak_email email='johndoe@gmail.com' />\n```\n\n----------------------------------------\n\nTITLE: Querying Pages by Exclusion - Multiple Values\nDESCRIPTION: This snippet fetches all cloned pages where the editable region 'my_blog_author' DOES NOT contain the words 'jeffrey' and 'arthur' anywhere within it.  Like the previous exclusions, the '!=' operator with multiple comma-separated values excludes pages matching those values. It effectively performs a search where both values are not present in the field.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_34\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author!=jeffrey, arthur'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Field Matching Validation in CouchCMS\nDESCRIPTION: Example of using the 'matches_field' validator to ensure two fields contain identical values, useful for password confirmation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_19\n\nLANGUAGE: html\nCODE:\n```\nvalidator='matches_field=my_password'\n```\n\n----------------------------------------\n\nTITLE: Setting a cookie with expiration time in CouchCMS\nDESCRIPTION: This snippet shows how to set a cookie with an explicit expiration time of 86400 seconds (1 day) using the expire parameter. The value specifies the cookie's lifetime, and a value of 0 or omission results in session cookie behavior.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set_cookie.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set_cookie 'my_test_cookie' value='hello world' expire='86400' />\n```\n\n----------------------------------------\n\nTITLE: Manually Constructing Breadcrumbs with parentfolders Tag - CouchCMS - CouchCMS\nDESCRIPTION: This snippet manually builds a breadcrumb trail using CouchCMS tags, offering flexibility over the HTML structure. It determines the folder context, includes the template as the first breadcrumb, and iterates parent folders to append each ancestor as a navigable link. Suitable for cases where the default output of <cms:breadcrumbs> is insufficient. Requires CouchCMS with appropriate folder and template setup.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_14\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if k_is_page || k_is_folder >\n    <a href=\"<cms:show k_template_link/>\" ><cms:show k_template_title/></a>&nbsp;>\n    <cms:if k_folder_name ><cms:set my_folder=k_folder_name /></cms:if>\n    <cms:if k_page_foldername ><cms:set my_folder=k_page_foldername /></cms:if>\n    <cms:if my_folder >\n        <cms:parentfolders folder=my_folder >\n            <a href=\"<cms:show k_folder_link/>\" ><cms:show k_folder_title/></a>&nbsp;>\n        </cms:parentfolders>\n    </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Defining 500 Steel Paper Clips Variants\nDESCRIPTION: This code snippet contains the configuration for the \"500 Steel Paper Clips\" product variants. This provides options for sizes, including how to display those as radio buttons. It demonstrates the definition of variants for a product within the CouchCart context.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nSize[Large | Medium | Small]*\n```\n\n----------------------------------------\n\nTITLE: Setting Menu Container ID - CouchCMS menu Tag with menu_id - CouchCMS Tag Language\nDESCRIPTION: Applies a custom HTML ID to the root menu list element for targeted CSS or JavaScript with the 'menu_id' parameter. Each menu should have a unique ID when multiple menus exist on a page. The example assigns 'top-menu' as the ID.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_13\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' menu_id='top-menu' />\n```\n\n----------------------------------------\n\nTITLE: Displaying Latest Portfolio Items in a Carousel - CouchCMS pages Enumerator Tag\nDESCRIPTION: This snippet demonstrates how to use the <cms:pages> enumerator tag to fetch and iterate over the latest five portfolio items cloned from the 'portfolio.php' template, displaying them in a carousel list. CouchCMS and HTML knowledge are required. The tag loops over 'portfolio' pages, and you can access fields such as 'k_image', 'k_page_title', etc. The snippet must be placed within the PHP page inside the CouchCMS context. Inputs are fetched pages, and outputs are list items displaying content for each portfolio entry.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/home-page.md#_snippet_3\n\nLANGUAGE: CouchCMS template tags\nCODE:\n```\n<ul class=\"carousel\">\n    <cms:pages masterpage=\"portfolio.php\" limit=\"5\">\n        <li>\n            <img src=\"<cms:show k_image />\" alt=\"<cms:show k_page_title />\" />\n            <p><cms:show k_page_title /></p>\n        </li>\n    </cms:pages>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Displaying Dynamic Cart Total\nDESCRIPTION: Implementation of dynamic cart total value using CouchCart tags with number formatting.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_30\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<td class=\"col-total\">$<cms:number_format \"<cms:pp_total />\" /></td>\n```\n\n----------------------------------------\n\nTITLE: Defining Dropdown Options (opt_values) with Special Hyphen Value in CouchCMS\nDESCRIPTION: Demonstrates using the special '-' (hyphen) value mapping for an option in `opt_values`. When an option is mapped to '-', selecting it is not considered a valid selection. If the `required` parameter is set on the editable region, an error will occur on saving if this option is selected.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\nopt_values='Please Select=- | Residential=0 | Commercial=1 | Rental=2'\n```\n\n----------------------------------------\n\nTITLE: Toggling Onpage Editing On/Off Using no_edit Tag and Session Variable in CouchCMS\nDESCRIPTION: Describes controlling the visibility of onpage editing features for admin users by conditionally outputting the no_edit tag based on a session variable. The example uses a cms:if conditional checking admin access and session value inline_edit_on. A form toggles the session variable by submitting the change and refreshing the page, dynamically enabling or disabling inline editing. This snippet provides a method for admins to toggle editing without changing code.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<cms:if k_user_access_level ge '7' && \"<cms:not \"<cms:get_session 'inline_edit_on' />\" />\" >\n    <cms:no_edit />\n</cms:if>\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:if k_user_access_level ge '7' >\n    <br style=\"clear:both\">\n    <cms:form method='post' anchor='0' style=\"float:left;\">\n\n        <cms:if k_success>\n            <cms:if \"<cms:get_session 'inline_edit_on' />\" >\n                <cms:delete_session 'inline_edit_on' />\n            <cms:else />\n                <cms:set_session 'inline_edit_on' value='1' />\n            </cms:if>\n            <cms:redirect k_page_link />\n        </cms:if>\n\n        <cms:if \"<cms:get_session 'inline_edit_on' />\" >\n            <cms:input name='submit' type=\"submit\" value=\"Turn Edit Off\" />\n        <cms:else />\n            <cms:input name='submit' type=\"submit\" value=\"Turn Edit On\" />\n        </cms:if>\n\n    </cms:form>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Checking for File Outside Snippets Folder (CouchCMS Template Language)\nDESCRIPTION: This code uses <cms:exists> with a relative path containing '../' to check for 'contact.inc' two directories up from 'couch/snippets/common/contact.inc'. The Exists tag processes relative paths, allowing searches outside the default snippets folder. Use with caution to avoid security or file structure issues.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_2\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:exists \"../../common/contact.inc\" />\n```\n\n----------------------------------------\n\nTITLE: Absolute Link Example (HTML)\nDESCRIPTION: This snippet provides examples of how to convert the relative link in the previous snippet into an absolute link. This ensures that the CSS file is loaded correctly, and it is an important step for ensuring that the website's style is rendered correctly when Pretty URLs are enabled.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pretty-urls.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"/css/lightbox.css\" rel=\"stylesheet\" />\n```\n\n----------------------------------------\n\nTITLE: Limiting Number of Pages - CouchCMS Tag\nDESCRIPTION: This snippet limits the number of fetched pages from 'blog.php' to five, using the `limit` parameter. By default, these will be the most recently published pages unless sorting parameters are specified.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_9\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' limit='5'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Setting Fixed Value Flat Discount by Order Total in PHP\nDESCRIPTION: Code snippet showing how to configure a flat fixed-value discount for orders above a certain threshold in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['discount_by_order_total'] = '[ 100=10 ]';\n```\n\n----------------------------------------\n\nTITLE: Locale-Specific Date Formatting with CouchCMS date Tag - Markup (French)\nDESCRIPTION: Outputs k_page_date in the '%B %d, %Y' format and in French locale by specifying both format and locale parameters. Requires the 'french' locale to be installed on the web server. Takes a date, a format string, and a locale identifier as input, and outputs the formatted date in French. Defaults to English if the locale is unavailable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_3\n\nLANGUAGE: markup\nCODE:\n```\n<cms:date k_page_date format='%B %d, %Y' locale='french' />\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Folders for Blog Categories in CouchCMS\nDESCRIPTION: Code snippet showing how to define virtual folders in CouchCMS to implement blog categories. These folders help organize content and can appear in URLs when pretty-URLs are enabled.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folder name=\"philosophy\" title=\"Philosophy\" />\n<cms:folder name=\"history\" title=\"History\" />\n<cms:folder name=\"jobs\" title=\"Jobs\" />\n<cms:folder name=\"staff\" title=\"Staff\" />\n<cms:folder name=\"clients\" title=\"Clients\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a 404 Error Page with HTML in CouchCMS\nDESCRIPTION: HTML markup for a 404 error page with a heading, subheading, and explanatory text. The template is configured with a front matter section indicating absolute links and the base template to use.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/404.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dne\">\n    <h1>404</h1>\n\n    <h2>Not Found Error</h2>\n\n    <p>The requested file could not be found at this address.You may be able to locate the desired page with our search function.</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Checking Existence of File with Exists Tag in CouchCMS (CouchCMS Template Language)\nDESCRIPTION: This snippet uses the <cms:exists> tag to determine if a file named 'contact.inc' exists in the 'couch/snippets' folder. It returns '1' if the file exists and '0' otherwise. No additional dependencies are required and the parameter is the relative path of the file or folder to check.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_0\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:exists \"contact.inc\" />\n```\n\n----------------------------------------\n\nTITLE: Initializing CouchCMS Checkout Template (checkout.php)\nDESCRIPTION: Provides the basic structure for the `checkout.php` template required by CouchCMS. This includes the necessary PHP bootstrapping code (`require_once`, `COUCH::invoke`) and the `cms:no_cache` tag to ensure the page output is not cached.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_36\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once 'couch/cms.php'; ?>\n    <cms:no_cache />\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Using the Zebra Tag to Output Sequential Values in CouchCMS Templates (HTML)\nDESCRIPTION: This snippet demonstrates the basic usage of the zebra tag inside a repeat block in CouchCMS templates. The zebra tag outputs its consecutive parameters on each iteration, looping back to the start if iterations exceed the number of parameters. It requires CouchCMS environment with repeat tag support and displays how repeated values cycle through 'one', 'two', and 'three' for five iterations.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/zebra.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:repeat count='5'>\n    <cms:zebra 'one' 'two' 'three' /><br>\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Complete Menu Example with Custom Classes and IDs\nDESCRIPTION: A comprehensive example showing how to create a fully-featured menu with custom classes for active states, levels, and other styling hooks.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_pages.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_pages masterpage='index.php' extended_info='1' >\n   <cms:if k_level_start >\n      <cms:if k_level='0'>\n          <ul class=\"my-menu-class-1 my-menu-class-2\" id=\"my-menu-id\">\n      <cms:else />\n          <ul>\n      </cms:if>\n   </cms:if>\n\n   <cms:if k_element_start >\n      <li id=\"item-<cms:show k_nestedpage_name />\" class=\"level-<cms:show k_level/><cms:if k_total_children> has-submenu</cms:if><cms:if k_first_child> first</cms:if><cms:if k_last_child> last</cms:if><cms:if k_is_active> active</cms:if><cms:if k_is_current> current</cms:if>\">\n      <a href=\"<cms:show k_menu_link />\"><cms:show k_menu_title /></a>\n   </cms:if>\n\n   <cms:if k_element_end ></li></cms:if>\n   <cms:if k_level_end ></ul></cms:if>\n</cms:nested_pages>\n```\n\n----------------------------------------\n\nTITLE: Linking CKEditor Custom Styles in a CouchCMS Editable (Richtext) Field\nDESCRIPTION: This Couch Tag Markup snippet shows how to link a CKEditor custom styles JavaScript file to a specific <cms:editable> field using the custom_styles parameter. The value follows 'name=path/to/file.js' where 'name' matches the style set registered in JS. Dependencies: CouchCMS, CKEditor, and the JS custom styles file placed in the specified directory. Inputs: field parameters. Outputs: a style dropdown reflecting your custom styles.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_12\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    custom_styles=\"my_styles=styles/custom_styles.js\"\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Checking for File in Subdirectory with Exists Tag (CouchCMS Template Language)\nDESCRIPTION: This snippet checks for the presence of 'contact.inc' within a 'common' subdirectory under 'couch/snippets' using the <cms:exists> tag. The parameter accepts relative paths, enabling flexible organization of snippet files. Useful for organizing large sets of reusable code in nested directories.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_1\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:exists \"common/contact.inc\" />\n```\n\n----------------------------------------\n\nTITLE: Defining an Email Obfuscation Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers the 'mailto' shortcode and its handler 'mailto_handler'. This handler takes the email address as the content enclosed within the shortcode tags (e.g., `[mailto]email@example.com[/mailto]`). It uses CouchCMS's internal `<cms:cloak_email>` tag by constructing the tag string and executing it via `$FUNCS->embed`. This returns obfuscated HTML/JavaScript to protect the email address from scrapers.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n// 6.\n// Obfuscate email\n// Usage: [mailto]email@mydomain.com[/mailto]\n$FUNCS->register_shortcode( 'mailto', 'mailto_handler' );\nfunction mailto_handler( $params, $content=null ){\n   global $FUNCS;\n\n   // Create Couch script.. we'll use the 'cloak_email' tag to encrypt email\n   $html = \"<cms:cloak_email email='{$content}' />\";\n\n   // Pass on the code to Couch for execution using the 'embed' function\n   return $FUNCS->embed( $html, $is_code=1 );\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Sidebar Menu of Latest Monthly Archives with Page Counts in PHP\nDESCRIPTION: This snippet utilizes the archives tag with a limit parameter to fetch the latest six monthly archive periods. For each period, it generates a list item containing a hyperlink to the archive-view page using k_archive_link and formats the display date with <cms:date>. Additionally, the count of pages published in that period is displayed within parentheses using k_archive_count. This snippet is typically used for sidebar menus to allow quick navigation to recent archives with associated page quantities.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-archives.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<ul>\n<cms:archives limit='6'>\n    <li>\n    <a href=\"<cms:show k_archive_link/>\"><cms:date k_archive_date format='F Y' /></a>\n    (<cms:show k_archive_count />)\n    </li>\n</cms:archives>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS Template Definition with Editable Regions\nDESCRIPTION: This code defines a clonable CouchCMS template named 'Application Form'. It includes editable regions for various fields like first name, last name, email, portfolio, position, salary, and resume. The `securefile` type is used for secure file uploads. The template defines required fields, email validation, URL validation, allowed file extensions and the maximum filesize.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:template title='Application Form' clonable='1'>\n    <cms:editable name='first_name' required='1' type='text' />\n    <cms:editable name='last_name' required='1' type='text' />\n    <cms:editable name='email' required='1' validator='email' type='text' />\n    <cms:editable name='portfolio' validator='url' type='text' />\n    <cms:editable name='position' required='1' type='dropdown'\n        opt_values=' Please choose=- | Interface Designer | Software Engineer | Systems Administrator | Office Manager'\n    />\n    <cms:editable name='salary' type='text' search_type='decimal' />\n    <cms:editable name='resume' required='1' allowed_ext='pdf, doc, docx' max_size='1024' type='securefile' />\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Editable Regions Inside a Template Tag in CouchCMS\nDESCRIPTION: This snippet demonstrates defining several editable regions together within a <cms:template> block, typically at the top of a CouchCMS template file. Each region uses the <cms:editable> tag with parameters like 'name', 'label', and 'type'. This structure is essential for 'clonable' templates and ensures regions are registered for editing. The expected output is the creation of editable areas 'body' and 'excerpt', initially hidden from the direct page output unless displayed via show tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:template title='Index' clonable='1' >\n    <cms:editable name=\"body\" label=\"Body\" type=\"richtext\" />\n    <cms:editable name=\"excerpt\" label=\"Excerpt\" type=\"textarea\" />\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Variable-Based Code Embedding\nDESCRIPTION: Shows how to embed code by first storing it in a variable and then passing that variable to the embed tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_var=\"<b class='title'><cms:show 'Hello world' /></b>\" />\n<cms:embed code=my_var />\n```\n\n----------------------------------------\n\nTITLE: Handling Remove Item Link Clicks with jQuery\nDESCRIPTION: jQuery event handler that intercepts clicks on cart item removal links. This allows the removal action to be performed via AJAX instead of a regular page navigation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Handle 'Remove Item' link\n$(document).on('click', '.cart-remove', function(e) {\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Access Level on Templates in Couch CMS - HTML-like Tags\nDESCRIPTION: Defines the minimum user access level required to access pages cloned from a specific template by setting the access_level parameter in the cms:template tag. The example enforces that only users with access level 2 (Authenticated User) or above can access the related content. This requires the Couch CMS templating environment and applicable access level variable settings.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/users.md#_snippet_0\n\nLANGUAGE: HTML-like Couch CMS tags\nCODE:\n```\n<cms:template title='News' clonable='1' access_level='2'>\n    <!-- Editable regions and Folders are usually defined here -->\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Displaying Variables using CouchCMS show tag (CouchCMS)\nDESCRIPTION: These snippets illustrate how to use the CouchCMS 'show' tag to display the value of variables. The first example shows a system variable (k_page_title), and the second shows a user-defined or editable region variable (my_intro). The variable name is passed as the first parameter. This requires a CouchCMS environment with defined variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/show.md#_snippet_1\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:show k_page_title />\n```\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:show my_intro />\n```\n\n----------------------------------------\n\nTITLE: Adding News Items to RSS Feed - XML\nDESCRIPTION: This snippet extends the basic RSS structure by including two news items within the channel. Each item consists of a title, link, description, and publication date. It is intended to be placed in an XML file and requires no external libraries or processing, providing static information to consumers.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/rss-feeds.md#_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<rss version=\"2.0\">\n    <channel>\n        <title>My Explosive News</title>\n        <link>http://www.mysite.com</link>\n        <description>News and articles written by me</description>\n        <language>en-us</language>\n        <pubDate>10 Jul 2007</pubDate>\n\n        <item>\n            <title>My Second News</title>\n            <link>http://www.mysite.com/breaking/my-second-news.html</link>\n            <description>This is my second news item.</description>\n            <pubDate>10 Jul 2007</pubDate>\n        </item>\n\n        <item>\n            <title>My First News</title>\n            <link>http://www.mysite.com/my-first-news.html</link>\n            <description>This is my first news item.</description>\n            <pubDate>10 Jul 2007</pubDate>\n        </item>\n    </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Setting template as commentable in blog.php - CouchCMS\nDESCRIPTION: Sets the 'commentable' attribute to '1' within the template tag of blog.php. This action designates the template as commentable within CouchCMS, enabling comment functionality for the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<cms:template title='Blog' clonable='1' commentable='1'>\n    ...\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Enabling Custom Admin Entry Filename in CouchCMS config.php (PHP)\nDESCRIPTION: This PHP snippet shows the enabled definition of the 'K_ADMIN_PAGE' constant, specifying the new filename of the admin panel entry script after renaming 'index.php'. By removing the comment slashes and setting the constant to the new custom filename (e.g., 'prada78.php'), CouchCMS will no longer recognize the default 'index.php' for admin access, thus securing the admin URL. This snippet depends on prior renaming of the actual admin entry PHP file in the 'couch' directory.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/securing-the-admin-panel.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n// 1b.\n// For security purpose, the 'index.php' file of Couch can be renamed to anything else.\n// If you do so, uncomment the following line and enter the new name.\ndefine( 'K_ADMIN_PAGE', 'prada78.php' )\n```\n\n----------------------------------------\n\nTITLE: Excluding Pages by Multiple Names - CouchCMS Tag\nDESCRIPTION: This snippet fetches all pages cloned from 'blog.php' *except* those with the specified names ('my_first_entry' or 'my_another_entry') by using the 'NOT' keyword followed by a comma-separated list with the `page_name` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_8\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' page_name='NOT my_first_entry, my_another_entry'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Fixed-Value Quantity-Based Product Pricing in CouchCMS\nDESCRIPTION: Example of item-level fixed-value discount scale for implementing tiered pricing based on quantity purchased.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\n[ 5=10 | 10=15 ]\n```\n\n----------------------------------------\n\nTITLE: Setting Discount by Quantity Ordered in PHP\nDESCRIPTION: Code snippet showing how to configure discounts based on the number of items in the cart in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['discount_by_quantity_ordered'] = '[ 4=10 ]';\n```\n\n----------------------------------------\n\nTITLE: Using embed tag to include comments form - CouchCMS\nDESCRIPTION: Replaces the existing comment submission form in blog.php with an embedded snippet from 'comments_form.html'. This utilizes CouchCMS's embed tag to reuse a pre-designed comments form, typically provided in the CouchCMS documentation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed 'comments_form.html' />\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Google Map Parameters with CouchCMS Tag in HTML\nDESCRIPTION: This comprehensive snippet showcases advanced customization of a Google Map using multiple parameters in the couchcms google_map tag. It specifies a unique map name, geographic coordinates for centering, zoom level controlling map detail, a message displayed in a marker balloon, as well as explicit pixel dimensions for map width and height. Additional CSS styling is applied to the container div using the style attribute. This snippet illustrates full control over map appearance and behavior within CouchCMS templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/google_map.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:google_map\n    name='my_office'\n    latitude='37.423021'\n    longitude='-122.083739'\n    zoom='14'\n    message='We are located here'\n    width='640'\n    height='480'\n    style='margin-bottom:10px;'\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Search Form, Results, and Pagination on a Page with CouchCMS\nDESCRIPTION: This comprehensive snippet demonstrates how to combine a search form, search results display, and pagination on a single page. It generates the form, performs the search, displays result count and pagination info using conditional checks and specific variables (`k_paginated_top`, `k_paginator_required`, `k_current_page`, `k_total_pages`, etc.), shows individual result details, and includes the `cms:paginator` tag for navigation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-search.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:search_form />\n\n<cms:search limit='10' >\n    <cms:if k_paginated_top >\n        <div>\n            <cms:if k_paginator_required >\n                Page <cms:show k_current_page /> of <cms:show k_total_pages /><br>\n            </cms:if>\n            <cms:show k_total_records /> Pages Found -\n            displaying: <cms:show k_record_from />-<cms:show k_record_to />\n        </div>\n    </cms:if>\n\n    <h3><a href=\"<cms:show k_page_link />\"><cms:show k_search_title /></a></h3>\n    <cms:show k_search_excerpt />\n    <hr>\n\n    <cms:paginator />\n\n</cms:search>\n```\n\n----------------------------------------\n\nTITLE: Enabling EXIF Data Extraction in CouchCMS Configuration (PHP)\nDESCRIPTION: Shows the PHP constant `K_EXTRACT_EXIF_DATA` located in the 'config.php' file. To activate EXIF data extraction for images uploaded to CouchCMS galleries, this constant's value must be changed from the default `0` to `1`. This feature is off by default.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/photo-gallery.md#_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// 25\n// Set the following to '1' if you wish to extract EXIF data from images uploaded to Gallery\ndefine( 'K_EXTRACT_EXIF_DATA', 0 );\n```\n\n----------------------------------------\n\nTITLE: Displaying Radio Buttons for Product Options\nDESCRIPTION: This code snippet shows how to modify the display format for option-values to radio buttons in CouchCart. Adding an asterisk ('*') at the end of the option string changes the display to radio buttons. This directly impacts the user interface.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nColor[Red | Black=+3 | Green=-2]\nSize[Large | Medium | Small]*\n```\n\n----------------------------------------\n\nTITLE: Excluding Folders in Relation Regions\nDESCRIPTION: Shows how to exclude pages from specific folders using the NOT operator.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/relation.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' folder='NOT classical, jazz' />\n```\n\n----------------------------------------\n\nTITLE: Excluding Pages by Multiple Folders - CouchCMS Tag\nDESCRIPTION: This snippet fetches all pages cloned from 'blog.php' *except* those belonging directly to the specified folders ('classic-bikes' or 'super-bikes') by using the 'NOT' keyword with the `folder` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_15\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' folder='NOT classic-bikes, super-bikes'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Defining an Adsense Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers a CouchCMS shortcode named 'adsense' with its handler function 'adsense_handler'. This simple handler takes no parameters and returns a predefined HTML/JavaScript block for displaying Google Adsense ads. Remember to replace placeholder values for `google_ad_client` and `google_ad_slot`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n// 1.\n// Adsense shortcode\n// Usage: [adsense]\n$FUNCS->register_shortcode( 'adsense', 'adsense_handler' );\nfunction adsense_handler( $params, $content=null ){\n   return '<script type=\"text/javascript\"><!--\n      google_ad_client = \"pub-XXXXXXXXXXXXXXXX\"; /* Put your own value here */\n      google_ad_slot = \"XXXXXXXXXX\"; /* Put your own value here */\n      google_ad_width = 468;\n      google_ad_height = 60;\n      //-->\n   </script>\n   <script type=\"text/javascript\"\n      src=\"http://pagead2.googlesyndication.com/pagead/show_ads.js\">\n   </script>';\n}\n```\n\n----------------------------------------\n\nTITLE: File Path Embedding Syntax\nDESCRIPTION: Shows the basic syntax for embedding a file using a relative path to the 'couch/snippets' folder.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed 'message.inc' />\n```\n\n----------------------------------------\n\nTITLE: Adding inline_edit Tag to Enable On-page Editing in CouchCMS HTML Template\nDESCRIPTION: Demonstrates how to add the inline_edit tag as an unnamed parameter to a block-level HTML element, such as a heading or div, to make the content editable inline. Requirements include placing this tag only on block-level HTML elements and matching the field name with the editable region. The input is the existing page markup, and the output is markup that activates inline editing for that region, viewable to admins. This snippet illustrates adding inline_edit to both a header element and a div wrapper when no block-level container was originally present.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<header>\n    <h1 <cms:inline_edit 'intro_title' /> ><cms:show intro_title /></h1>\n</header>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div <cms:inline_edit 'intro_text' /> ><cms:show intro_text /></div>\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages by Multiple IDs - CouchCMS Tag\nDESCRIPTION: This snippet filters the fetched pages to include only those with specific numeric IDs (14 or 13) cloned from the 'blog.php' template, using a comma-separated list with the `id` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_4\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' id='14, 13'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Conditions with Logical AND (&&) in CouchCMS If Tag\nDESCRIPTION: This snippet combines two conditions using the logical AND operator '&&'. The <cms:if> tag executes enclosed statements only if all conditions evaluate to true, e.g., variable 'age' must be greater than 18 and less than 40. Parentheses are used for grouping conditions clearly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/if.md#_snippet_4\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if (age gt '18') && (age lt '40')> .. </cms:if>\n```\n\n----------------------------------------\n\nTITLE: Setting Item Level Shipping in Product Template\nDESCRIPTION: This snippet defines a sliding scale of shipping charges based on the number of the product ordered. The example defines shipping charges based on the number of items in cart using an editable region named '*pp_shipping_scale*' in product template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n[ 0=3 | 5=7 | 15=10 ]\n```\n\n----------------------------------------\n\nTITLE: Combining Custom Fields - AND Logic\nDESCRIPTION: This snippet fetches pages that contain 'jeffery' within 'my_blog_author' AND contain 'fellow countrymen' within 'my_blog_text'. Demonstrates combining multiple custom fields with the boolean AND operation. The `masterpage` attribute specifies the base template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_37\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pages masterpage='blog.php' custom_field='my_blog_author=jeffrey | my_blog_text=fellow countrymen'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Defining a Google Map Shortcode Handler (kfunctions.php example) in CouchCMS (PHP)\nDESCRIPTION: This is an example from kfunctions.php, registering the 'googlemap' shortcode and its handler 'googlemap_handler'. It extracts 'src', 'width' (default '425'), and 'height' (default '350') parameters using `$FUNCS->get_named_vars`. It returns an HTML iframe tag to embed the Google Map, appending '&output=embed' to the source URL.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n// 3.\n// Google map shortcode\n// Usage: [googlemap src=\"http://maps.google.com/?ll=23.250652,77.402072&spn=0.019912,0.038581&z=15\"]\n$FUNCS->register_shortcode( 'googlemap', 'googlemap_handler' );\nfunction googlemap_handler( $params, $content=null ){\n   global $FUNCS;\n\n   extract( $FUNCS->get_named_vars(array(\n      'src' => '',\n      'width' => '425',\n      'height' => '350'\n   ), $params) );\n\n   return '<iframe width=\"'.$width.'\" height=\"'.$height.'\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\" src=\"'.$src.'&output=embed\"></iframe>';\n}\n```\n\n----------------------------------------\n\nTITLE: Asynchronously Loading Google Custom Search Engine Script in JavaScript\nDESCRIPTION: This immediately-invoked function expression (IIFE) dynamically creates and injects a script element into the DOM to asynchronously load the Google Custom Search Engine (CSE) JavaScript. It selects the protocol based on the current page's protocol (http or https), constructs the script source URL using a specified CSE ID, and inserts the script before the first existing script tag. This allows embedding Google-powered search results on the webpage without blocking page rendering.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/search.md#_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function() {\n    var cx = '006145326556115505877:jeimmot9ugc';\n    var gcse = document.createElement('script');\n    gcse.type = 'text/javascript';\n    gcse.async = true;\n    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +\n        '//cse.google.com/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(gcse, s);\n})();\n```\n\n----------------------------------------\n\nTITLE: Apply Body ID for CSS Styling in Richtext Editor (CouchCMS)\nDESCRIPTION: Illustrates using the 'body_id' parameter alongside the 'css' parameter. This assigns the specified ID ('prop_desc') to the editor's internal body tag, allowing CSS rules defined in the linked stylesheet that target this specific ID to style the editor's content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css=\"<cms:show k_site_link />styles/editor_styles.css\"\n    body_id='prop_desc'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Filtering Pages Based on Folder Parameter in CouchCMS\nDESCRIPTION: This snippet demonstrates how to restrict page listings to a specified folder by passing the dynamic '<cms:k_folder_name />' to the 'folder' parameter in the '<cms:pages>' tag. This enables display of only pages within the selected folder when viewing folder-specific content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:pages folder='<cms:k_folder_name />'>\n  ...\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Switching List and Page Views with k_is_list in CouchCMS - CouchCMS-Mustache\nDESCRIPTION: This snippet streamlines detection of list versus page views in a CouchCMS clonable template by testing the k_is_list variable with an <cms:if>. It displays either a listing or the current page content, serving as a minimal conditional control flow suitable for most CouchCMS templates. Dependencies include the CouchCMS runtime and the proper definition of k_is_list and related context variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/views.md#_snippet_1\n\nLANGUAGE: CouchCMS-Mustache\nCODE:\n```\n<cms:if k_is_list >\n    <!-- List view - display list of pages here -->\n<cms:else />\n    <!-- Page view - display current page here -->\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Cart Form Structure in HTML\nDESCRIPTION: The original HTML structure showing a form used for cart operations with a table inside it.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_23\n\nLANGUAGE: HTML\nCODE:\n```\n<form action=\"\" method=\"post\" accept-charset=\"utf-8\">\n    <table>\n\n    ... content trunctated ...\n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom PayPal IPN Log File in CouchCMS - CouchCMS Template\nDESCRIPTION: This snippet configures the cms:paypal_processor tag with both debug mode enabled and a custom logfile name. The logfile parameter changes where logs are written; in this example, logs go to paypal.log instead of log.txt. Requires CouchCMS and appropriate server write permissions; provides enhanced monitoring control for troubleshooting.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_4\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:paypal_processor debug='1' logfile='paypal.log' />\n```\n\n----------------------------------------\n\nTITLE: Registering a Custom Admin Edit Snippet with Advanced Dropdown - PHP with CouchCMS\nDESCRIPTION: This PHP statement associates a custom edit screen snippet with a specified template in CouchCMS, using the register_admin_pageview method. The third parameter enables the advanced settings dropdown in the admin panel. Requires placement in the kfunctions.php file and existing snippet file ('my_edit.html'). Input: Template filename, snippet filename, and advanced dropdown flag as parameters. Output: Customizes the edit form for a template in the backend. Limitation: Completely bypasses the default edit handling; all required logic for editing and saving must be implemented in the snippet.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\n$FUNCS->register_admin_pageview( 'application.php', 'my_edit.html', 1 ); // '1' for showing the 'advanced setting dropdown'\n```\n\n----------------------------------------\n\nTITLE: Defining a CouchCMS Editable Region Group\nDESCRIPTION: This code defines an editable region of type 'group' named 'prop_uploads' with the label 'Uploads'. This group will serve as a container for related editable regions, improving the organization within the CouchCMS admin panel.  It uses the standard cms:editable tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/group.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='prop_uploads' label='Uploads' desc='Your main uploads' type='group' />\n```\n\n----------------------------------------\n\nTITLE: Nesting Embedded Snippets in CouchCMS\nDESCRIPTION: Demonstrates how to nest embedded snippets by embedding 'message.inc' within 'greeting.inc'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<b class=\"title\"><cms:show \"<cms:embed 'message.inc' />\" /></b>\n```\n\n----------------------------------------\n\nTITLE: Defining a Richtext Editable Region in CouchCMS\nDESCRIPTION: Uses the `cms:editable` tag to define a content area ('main_content') that can be managed through the CouchCMS admin panel using a rich text editor. The original static content should be placed between the opening and closing tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/about-us.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='main_content' type='richtext'> original content </cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Formatting Number with Custom Separators - CouchCMS Tag\nDESCRIPTION: Illustrates how to customize the decimal character and thousands separator using the `number_format` tag. It sets `decimal_character` to ',' and `thousands_separator` to a space, useful for locale-specific formatting like French notation. The number '1234.56' is used as input.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/number_format.md#_snippet_2\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:number_format '1234.56' decimal_character=',' thousands_separator=' ' />\n```\n\n----------------------------------------\n\nTITLE: Displaying Original and Discounted Prices in HTML/PHP\nDESCRIPTION: Code for displaying the original price (with strikethrough) alongside the discounted price in a CouchCMS cart template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if line_discount><span class=\"compare-price\">$<cms:number_format orig_price /></span></cms:if>$<cms:number_format price />\n```\n\n----------------------------------------\n\nTITLE: Implementing CouchCart Form for Quantity Updates\nDESCRIPTION: Replacing the standard HTML form with CouchCart's pp_cart_form tag to enable cart functionality.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_25\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:pp_cart_form>\n    <table>\n\n    ... content truncated ...\n\n</cms:pp_cart_form>\n```\n\n----------------------------------------\n\nTITLE: Registering a Custom Admin Listview Snippet - PHP with CouchCMS\nDESCRIPTION: This PHP statement registers a custom admin listing snippet for a specified template in CouchCMS by calling the register_admin_listview method. It ties the given template ('application.php') to the custom snippet file ('my_list.html'), which must be present in the configured snippets folder. Requires access to CouchCMS's kfunctions.php file and $FUNCS global. Input: Template filename and snippet filename as strings. Output: Changes the listing view in the admin panel for the template. Limitation: The snippet completely replaces the default listing, all default behaviors must be reimplemented if needed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\n$FUNCS->register_admin_listview( 'application.php', 'my_list.html' );\n```\n\n----------------------------------------\n\nTITLE: Adding Hidden Quantity Input for Default Value (HTML)\nDESCRIPTION: Illustrates an alternative approach using a hidden input field to specify a default quantity (e.g., always 1) when the user is not required to manually enter it. The input is named 'qty' with a predefined 'value'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"hidden\" value=\"1\" name=\"qty\"/>\n```\n\n----------------------------------------\n\nTITLE: Declaring Basic RSS Feed Structure with Static XML - XML\nDESCRIPTION: This snippet shows the minimum required for creating a valid RSS feed using plain XML. It defines a single channel with title, link, description, language, and publication date tags. No external dependencies are required. It expects static values for each metadata tag and does not include items or dynamic content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/rss-feeds.md#_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<rss version=\"2.0\">\n    <channel>\n        <title>My Explosive News</title>\n        <link>http://www.mysite.com</link>\n        <description>News and articles written by me</description>\n        <language>en-us</language>\n        <pubDate>Fri, 30 Jul 2010 05:49:44 GMT</pubDate>\n    </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Percentage-Based Quantity-Based Product Pricing in CouchCMS\nDESCRIPTION: Example of item-level percentage-based discount scale for implementing tiered pricing based on quantity purchased.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\n[ 5=10 | 10=15 ]%\n```\n\n----------------------------------------\n\nTITLE: Descending Order for Menu Items - CouchCMS menu Tag - CouchCMS Tag Language\nDESCRIPTION: Demonstrates using the 'order' parameter with 'desc' to reverse menu item order based on the ordering field. Combined with 'orderby' and 'depth', this example outputs the menu in descending title order and includes two hierarchical levels. Aids the creation of custom navigation orders.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_3\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' depth='2' orderby='title' order='desc' />\n```\n\n----------------------------------------\n\nTITLE: Direct Code Embedding Syntax\nDESCRIPTION: Demonstrates the syntax for embedding code directly using the 'code' parameter with a string literal.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed code=\"<b class='title'><cms:show 'Hello world' /></b>\" />\n```\n\n----------------------------------------\n\nTITLE: Session Variables Setting for Coupon Data and Cart Refresh\nDESCRIPTION: Following successful validation, this code assigns the retrieved coupon details (code, discount, type, minimum amount, free shipping) to site-wide session variables. The cart is then refreshed via the 'pp_refresh_cart' function to recalculate totals considering the coupon data. This sequence integrates the coupon into the overall shopping cart processing pipeline using CouchCMS's session management.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_17\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if k_success >\n<cms:pages masterpage=\"<cms:pp_config 'tpl_coupons' />\" custom_field=\"code==<cms:show frm_coupon_code /> | end_date>=<cms:date format='Y-m-d' />\" limit='1'>\n   <cms:set_session name='coupon_found' value='1' />\n   <cms:set_session name='coupon_code' value=code />\n   <cms:set_session name='coupon_discount' value=discount />\n   <cms:set_session name='coupon_type' value=type />\n   <cms:set_session name='coupon_min_amount' value=min_amount />\n   <cms:set_session name='coupon_free_shipping' value=free_shipping />\n\n  <cms:pp_refresh_cart />\n</cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Declaring a Clonable Template in CouchCMS\nDESCRIPTION: This snippet shows the standard CouchCMS tag used to declare a template as 'clonable'. Making a template clonable is the first step required for creating multiple pages (clones) from a single template file, which is a prerequisite for using the nested pages feature.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:template clonable='1'> ... </cms:template>\n```\n\n----------------------------------------\n\nTITLE: Handling Checkout Link Clicks with jQuery\nDESCRIPTION: jQuery event handler that intercepts clicks on the checkout button. This allows the checkout process to be initiated via AJAX instead of a direct page navigation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Handle 'Checkout' link\n$(document).on('click', '.checkout-button', function(e) {\n```\n\n----------------------------------------\n\nTITLE: Displaying Google Map using Address in CouchCMS\nDESCRIPTION: This CouchCMS tag example demonstrates how to embed a Google Map onto a page by providing a physical address. The `name` parameter provides a unique identifier for the map instance, and the `address` parameter specifies the location to display.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/google-maps.md#_snippet_1\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:google_map\n    name='my_map'\n    address='1600 Amphitheatre Parkway, Mountain View, CA'\n/>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS dropdown with Size Parameter\nDESCRIPTION: Demonstrates CouchCMS dropdown lists using '<cms:input type=\"dropdown\" ... />' with the 'size' attribute which will convert the dropdown list to a plain selection list. The 'opt_values' attribute defines the options in 'Label | Label | Label' format. The 'name' attribute identifies the selected value.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_15\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type=\"dropdown\"\nname=\"degree\"\nsize='4'\nopt_values=\"Choose One | High School Degree | Some College | Bachelor's Degree | Doctorate\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining an IFrame Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers a CouchCMS shortcode named 'iframe' and its handler 'iframe_handler'. It uses `$FUNCS->get_named_vars` to process parameters like 'src', 'width', 'height', 'scrolling', 'frameborder', and 'marginheight', providing defaults. The handler returns an HTML iframe tag embedding the specified source URL.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n// 2.\n// IFrame shortcode\n// Usage: [iframe src=\"http://www.somesite.com/\" width=\"100\" height=\"100\" scrolling=\"yes\" frameborder=\"1\" marginheight=\"2\"]\n$FUNCS->register_shortcode( 'iframe', 'iframe_handler' );\nfunction iframe_handler( $params, $content=null ){\n   global $FUNCS;\n\n   extract( $FUNCS->get_named_vars(array(\n      'src' => '',\n      'width' => '100%',\n      'height' => '500',\n      'scrolling' => 'no',\n      'frameborder' => '0',\n      'marginheight' => '0'\n   ), $params) );\n\n   $html =<<<EOS\n   <iframe src=\"$src\" title=\"\" width=\"$width\" height=\"$height\" scrolling=\"$scrolling\" frameborder=\"$frameborder\" marginheight=\"$marginheight\">\n      <a href=\"$src\" target=\"_blank\">$src</a>\n   </iframe>\nEOS;\n    return $html;\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Folders with Masterpage in CouchCMS\nDESCRIPTION: This snippet uses the `folders` tag with the `masterpage` parameter to enumerate folders associated with a specified template. The `masterpage` attribute is set to 'news.php', indicating that it should retrieve and display the folders defined for that template. This ensures the correct folders are listed. It outputs the folder titles with line breaks.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php'>\n    <cms:show k_folder_title /> <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Including jQuery and Superfish JavaScript Files\nDESCRIPTION: This snippet includes the necessary JavaScript files: jQuery (version 1.2.6) and the Superfish plugin's JavaScript file.  jQuery is a prerequisite for Superfish and must be included before Superfish's JavaScript.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"<cms:show path_to_superfish />js/jquery-1.2.6.min.js\"></script>\n<script src=\"<cms:show path_to_superfish />js/superfish.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Admin Entry Filename in CouchCMS Using PHP\nDESCRIPTION: This PHP code snippet demonstrates how to define a custom admin entry filename for the CouchCMS admin panel by setting the 'K_ADMIN_PAGE' constant in the 'config.php' file. Uncommenting and modifying this line changes the default 'index.php' to a user-defined name, which enhances security by obscuring the login URL. The snippet requires the 'config.php' file and a corresponding renamed admin file present in the 'couch' folder. The key parameter is the filename string, which should retain the '.php' extension. This adjustment results in the admin panel being accessible only via the new filename URL.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/securing-the-admin-panel.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// 1b.\n// For security purpose, the 'index.php' file of Couch can be renamed to anything else.\n// If you do so, uncomment the following line and enter the new name.\n//define( 'K_ADMIN_PAGE', 'kachua.php' )\n```\n\n----------------------------------------\n\nTITLE: Setting Shipping by Order Total in Config.php\nDESCRIPTION: This snippet configures shipping charges based on the order's total cost using a sliding scale.  It sets different shipping costs for different order value ranges. The provided example sets shipping charges for orders between 0-50, 51-100, and above 100.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['shipping_by_order_total'] = '[ 0=6 | 50=3 | 100=0 ]';\n```\n\n----------------------------------------\n\nTITLE: Adding Values Using the CouchCMS add Tag (HTML)\nDESCRIPTION: This snippet demonstrates the use of the CouchCMS 'add' tag to sum the value of a variable (my_count) and the literal value '1', outputting the result. To utilize this tag, the CouchCMS runtime must be active within the HTML template. The tag is self-closing, expects exactly two parameters, and does not assign variables. Inputs must be CMS-compatible variables or literal values. The result is rendered as output within the template. No error handling for invalid parameter types is provided within the tag itself.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/add.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:add my_count '1' />\n```\n\n----------------------------------------\n\nTITLE: Setting Discount by Order Total in PHP\nDESCRIPTION: Code snippet showing how to configure a sliding scale of fixed-value discounts based on the order's total cost in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['discount_by_order_total'] = '[ 50=5 | 100=15 ]';\n```\n\n----------------------------------------\n\nTITLE: Displaying Google Map using Coordinates in CouchCMS\nDESCRIPTION: This CouchCMS tag example illustrates how to embed a Google Map using specific geographic coordinates instead of an address. The `name` parameter identifies the map instance, while the `latitude` and `longitude` parameters define the exact point to center the map on.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/google-maps.md#_snippet_2\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:google_map\n    name='my_map'\n    latitude='37.423021'\n    longitude='-122.083739'\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Paper Airplane Variants\nDESCRIPTION: This code snippet provides the configuration for \"Paper Airplane\" product variants, specifying options like color and custom text. It is used in the definition of product variants with different values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nColor[Red | Green | Blue]\nCustom Text[*TEXT*]\n```\n\n----------------------------------------\n\nTITLE: Enforcing Non-Zero Integer Values in CouchCMS\nDESCRIPTION: Example of using the 'non_zero_integer' validator to restrict input to only non-zero integer values in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_13\n\nLANGUAGE: html\nCODE:\n```\nvalidator='non_zero_integer'\n```\n\n----------------------------------------\n\nTITLE: Specifying Cart & Checkout Templates\nDESCRIPTION: CouchCart requires the user to designate two templates essential for proper functionality: one for displaying the cart contents and another for the checkout process. The names of these templates are configured within the `config.php` file (or `config.example.php`) located in the `addons/cart` folder. Users must modify these configuration settings if their templates have different names from the defaults.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['tpl_cart'] = 'cart.php';\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['tpl_checkout'] = 'checkout.php';\n```\n\n----------------------------------------\n\nTITLE: Admin Panel Output Container Structure - HTML\nDESCRIPTION: This HTML snippet shows the container div within the CouchCMS admin panel where the output of a custom admin listing or edit snippet is rendered. When creating custom admin screens, any styles or selectors should be scoped, as the snippet's output is constrained to this element. Prerequisite: Understanding of how CouchCMS inserts partials into the admin layout. Input: n/a. Output: All snippet content appears within this div.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_18\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"admin-wrapper-body\">\n<!-- our snippet gets output here -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Shipping by Quantity Ordered in Config.php\nDESCRIPTION: This snippet configures shipping charges based on the quantity of items ordered, using a sliding scale in the '_addons/cart/config.php_' file.  The example sets shipping costs based on the number of items in the cart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['shipping_by_quantity_ordered'] = '[ 0=3 | 5=7 | 15=10 ]';\n```\n\n----------------------------------------\n\nTITLE: Attaching CouchCMS Boilerplate to Template - PHP\nDESCRIPTION: This snippet demonstrates how to attach CouchCMS to a PHP file by wrapping the page content with CouchCMS's PHP boilerplate code and changing the file extension to .php. Required dependencies are CouchCMS and a web server supporting PHP. No external parameters are needed, but the CouchCMS 'couch' directory must be correctly referenced and accessible. The expected output is for the CMS to recognize the page and make it editable through the admin panel.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/home-page.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<!-- page content -->\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Embedding Header Snippet for Menu Reuse in CouchCMS Templates\nDESCRIPTION: This snippet demonstrates how to create a reusable header.html snippet containing the site menu, and embed it within multiple templates and list views using CouchCMS embed tags. It also includes a conditional snippet to dynamically assign the 'current' class based on the active template for highlighting purposes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:embed 'header.html' />\n```\n\n----------------------------------------\n\nTITLE: Listing Folders with listfolders Tag - HTML\nDESCRIPTION: This snippet demonstrates the usage of the `listfolders` tag in CouchCMS to display a list of folders. It takes the `masterpage` parameter to specify the template.  The output is an HTML unordered list.  The `masterpage` parameter is required to define the template for which to list folders.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/listfolders.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:listfolders masterpage='news.php' />\n```\n\n----------------------------------------\n\nTITLE: Configuring Upload Directory in CouchCMS with PHP\nDESCRIPTION: This PHP snippet changes the default upload directory for files in CouchCMS by defining the K_UPLOAD_DIR constant. Place this code in the config.php file to specify a custom folder (such as 'myuploads'), ensuring it is relative to your site and has appropriate write permissions. No additional parameters are required, and the directory must be writable by the web server. Limitations: Be careful to set correct permissions and paths to avoid upload errors.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/file.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// 12.\n// Upload folder if not using the default upload folder within 'couch'.\n// Should be relative to your site (don't forget to set write permissions on it).\ndefine( 'K_UPLOAD_DIR', 'myuploads' );\n```\n\n----------------------------------------\n\nTITLE: Embedding Custom Toolbar Definition via CouchCMS Embed Tag\nDESCRIPTION: This snippet illustrates how to externalize and reuse a custom_toolbar configuration by saving its value in a separate .inc file and referencing it with the <cms:embed> tag. This approach streamlines code maintenance when the same toolbar is used across multiple fields. Ensure the embedded file contains only the toolbar button string.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_19\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='custom'\n    custom_toolbar=\"<cms:embed 'my_toolbar.inc' />\"\n    type='richtext' />\n```\n\n----------------------------------------\n\nTITLE: Defining a File-Type Editable Region in CouchCMS Template Markup\nDESCRIPTION: This CouchCMS template snippet creates a file-type editable region named 'my_document' in a template. The region allows users to upload a file, assign a label ('Downloadable File'), and provide a description. Requires CouchCMS installed and the template correctly registered for editing. The input expects a file upload, storing the resulting file's URL as the value. No extra parameters are available beyond standard editable region settings.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/file.md#_snippet_1\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:editable\n  name='my_document'\n  label='Downloadable File'\n  desc='Upload the file here'\n  type='file'\n/>\n```\n\n----------------------------------------\n\nTITLE: Conditionally Displaying Validation Error Messages in Couch CMS\nDESCRIPTION: Shows how to conditionally display error messages using the validation variables (k_error_tagname) that Couch sets when validation fails for specific inputs.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n   <label for=\"name\">Your Name *</label>\n   <cms:input type=\"text\" name=\"name\" id=\"name\" required='1' value=\"\" class=\"requiredField\" />\n   <cms:if k_error_name>\n      <span class=\"error\" style=\"display:block\">This field is required.</span>\n   </cms:if>\n</p>\n<p>\n   <label for=\"email\">E-mail Address *</label>\n   <cms:input type=\"text\" name=\"email\" id=\"email\" required='1' validator='email' value=\"\" class=\"requiredField email\" />\n   <cms:if k_error_email>\n      <span class=\"error\" style=\"display:block\">A valid email address is required.</span>\n   </cms:if>\n</p>\n<p>\n   <label for=\"message\">Message *</label>\n   <cms:input type=\"textarea\" name=\"message\" id=\"message\" required='1' rows=\"5\" cols=\"30\" class=\"requiredField\" />\n   <cms:if k_error_message>\n      <span class=\"error\" style=\"display:block\">This field is required.</span>\n   </cms:if>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML: Original Cart Item Table Row Structure\nDESCRIPTION: Presents the standard HTML markup for a single row within a shopping cart table, displaying static details for an item like thumbnail, description, quantity input, price, and subtotal. This static structure is used as a template for dynamic generation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<tr>\n    <td class=\"col-remove\"><a href=\"cart.html?action=remove\" class=\"cart-remove\" title=\"Remove\">&times;<span class=\"screen-reader\">Remove</span></a></td>\n    <td class=\"col-desc\">\n        <a href=\"index.html\" class=\"cart-thumb\">\n            <img src=\"uploads/image/paper-airplane-70x64.png\" width=\"70\" height=\"64\" alt=\"Paper Airplane\">\n        </a>\n        <div class=\"desc-box\">\n            <a href=\"index.html\">Paper Airplane</a>\n            <p>Color: Red<br>Custom Text: John Doe</p>\n        </div>\n    </td>\n    <td class=\"col-quantity\"><input class=\"quantity-input\" type=\"number\" min=\"0\" step=\"1\" value=\"3\" title=\"Quantity\"></td>\n    <td class=\"col-price\">$6.00</td>\n    <td class=\"col-subtotal\">$18.00</td>\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Setting Global Variables for Cart Modal JavaScript in PHP Template\nDESCRIPTION: Code that sets global variables for the cart-modal.js script by using CouchCMS tags to generate URLs for the AJAX cart and checkout pages. These variables are made available to the subsequent JavaScript file.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_39\n\nLANGUAGE: HTML\nCODE:\n```\n<script type=\"text/javascript\">\n    // Set global values for 'js/cart-modal.js' that follows\n    var cart_link = \"<cms:link \"<cms:pp_config 'tpl_ajax_cart' />\" />\";\n    var checkout_link = \"<cms:pp_checkout_link />\";\n</script>\n<script src=\"js/cart-modal.js\" type=\"text/javascript\"></script>\n```\n\n----------------------------------------\n\nTITLE: Displaying an Uploaded File Link in CouchCMS Template Markup\nDESCRIPTION: This CouchCMS snippet generates an HTML anchor tag that links to the uploaded file by outputting the value of the 'my_document' editable region using the <cms:show> tag. It requires that the region was previously defined and populated. The output is an HTML link that users can click to download the uploaded file. Input: uploaded file URL; Output: HTML anchor element; Only works within a CouchCMS processed template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/file.md#_snippet_2\n\nLANGUAGE: couchcms\nCODE:\n```\n<a href=\"<cms:show my_document />\" >Download file</a>\n```\n\n----------------------------------------\n\nTITLE: Listing cloned pages using CouchCMS pages tag in HTML\nDESCRIPTION: This snippet shows the basic usage of the CouchCMS pages tag enclosing a block to loop through all cloned pages of a specified template (blog.php). The masterpage attribute identifies which template's clones to enumerate, making all variables of each page accessible inside the tag's block. This approach is used within an embedded HTML template (blog_list.html) to dynamically generate repeated content for each cloned blog post.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:pages masterpage='blog.php'>\n\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Configuring an Editable Region to Use a Rich Text Editor with CouchCMS\nDESCRIPTION: This snippet illustrates setting the 'type' parameter of the <cms:editable> tag to 'richtext', causing CouchCMS to provide a WYSIWYG editor for the region. It is used within PHP/HTML templates. Required parameters include 'name', and optional parameters like 'type' define region behavior. Input is rich text, and the output is HTML-formatted content managed via the CMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:editable name='prop_desc' type='richtext'>..</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Setting Expiration Time for Cloaked Links\nDESCRIPTION: Creating a time-limited cloaked link that expires after 24 hours (86400 seconds), providing temporary access to a secure file.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"\n    <cms:cloak_url\n    link=\"http://yoursite.com/couch/uploads/file/secure/test.jpg\"\n    force_download='1'\n    expiry='86400'\n    />\n\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging for PayPal IPN Processing in CouchCMS\nDESCRIPTION: Demonstrates using the 'paypal_processor' tag with the 'debug' parameter set to '1' to log IPN processing steps. The 'logfile' parameter specifies the log file path, either relative to the site root (e.g., 'paypal.log') or to a specific, potentially secure directory (e.g., 'couch/uploads/file/secure/paypal.log'). If 'logfile' is omitted, 'log.txt' in the site root is used.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/paypal_processor.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:paypal_processor debug='1' logfile='paypal.log' />\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:paypal_processor debug='1' logfile='couch/uploads/file/secure/paypal.log' />\n```\n\n----------------------------------------\n\nTITLE: Setting the Maximum Length of a Text Editable Region\nDESCRIPTION: This snippet shows how to limit the number of characters that can be entered in the text box using the 'maxlength' parameter. The value represents the maximum allowed characters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/text.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='prop_title' label='Title'\n desc='Enter title of property here'\n maxlength='40'\n type='text'>Awesome property!</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Modifying CouchCMS Licensing Configuration in PHP\nDESCRIPTION: This code snippet shows how to enable the paid license mode in CouchCMS by changing a constant definition in the 'couch/config.php' file. Setting 'K_PAID_LICENSE' to 1 activates white-labeling features that allow further branding customizations.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/white-label.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\ndefine( 'K_PAID_LICENSE', 0 );\n```\n\n----------------------------------------\n\nTITLE: Handling Add Item and Update Cart Form Submissions with jQuery\nDESCRIPTION: jQuery event handler that intercepts form submissions from cart-related forms. This function prevents the default form submission and instead handles the action via AJAX.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Handle 'Add Item' & 'Update Cart' form submissions\n$(document).on('submit', '.cart-form', function(event) {\n```\n\n----------------------------------------\n\nTITLE: Excluding Pages from Menu - CouchCMS menu Tag - CouchCMS Tag Language\nDESCRIPTION: Explains how to omit specific pages and their descendants from the rendered menu using the 'exclude' parameter. Page names are supplied as a comma-separated list. If an excluded page has child pages, those are also removed from the output.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_4\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' exclude='united-states-news, china-news' />\n```\n\n----------------------------------------\n\nTITLE: Filtering Comments by Single Page Name (CouchCMS)\nDESCRIPTION: Fetches comments associated only with the page named 'my_first_entry'. The 'page_name' parameter filters comments based on the unique name of the associated page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_6\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments page_name='my_first_entry'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Excluding Comments by Masterpages (CouchCMS)\nDESCRIPTION: Fetches comments from all pages *except* those cloned from 'blog.php' or 'testimonial.php'. Uses the 'NOT' keyword before the comma-separated list in the 'masterpage' parameter for exclusion.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_2\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments masterpage='NOT blog.php, testimonial.php'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Excluding Shipping from Tax Calculation in PHP\nDESCRIPTION: Code snippet showing how to exclude shipping charges from tax calculations in CouchCMS shopping cart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['tax_excludes_shipping'] = '1';\n```\n\n----------------------------------------\n\nTITLE: CouchCMS 'each' tag, specifying the variable name\nDESCRIPTION: This example shows how to use the `each` tag and the `as` parameter to define a custom variable name.  It initializes a variable `msg` with a pipe-separated string. The `each` tag uses the `as` parameter to specify that each split value should be stored in a variable named 'my_var'.  The `show` tag is then used to display the content of the 'my_var' variable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/each.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:each msg as='my_var' >\n    <cms:show my_var/><br>\n</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Coupon Code Validation Using CouchCMS Pages Tag\nDESCRIPTION: This code snippet handles successful coupon code submission by fetching a coupon record matching the submitted code and current date, using CouchCMS's pages tag. It enables validation of the coupon's existence and validity period, which can then be used to apply discounts. The snippet relies on session variables to store coupon data for subsequent cart recalculation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_16\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if k_success >\n<cms:pages masterpage=\"<cms:pp_config 'tpl_coupons' />\" custom_field=\"code==<cms:show frm_coupon_code /> | end_date>=<cms:date format='Y-m-d' />\" limit='1'>\n\n</cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Configuring Comment Approval and Interval\nDESCRIPTION: This snippet provides configuration settings for comments within CouchCMS's `config.php` file. It defines whether comment approval is required (`K_COMMENTS_REQUIRE_APPROVAL`) and the minimum time interval between comments from the same user (`K_COMMENTS_INTERVAL`). These settings enhance spam control.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-comments.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n// 20.\n// A setting of '1' will necessitate the admin to approve comments before they get published.\n// '0' will publish comments immediately.\n// A setting of '1' is strongly recommended in order to avoid spam.\ndefine( 'K_COMMENTS_REQUIRE_APPROVAL', 1 );\n\n// 21.\n// Minimum time interval required between two comments posted by the same user (in seconds).\n// Prevents comment flooding. A setting of 5 minutes (300 seconds) is recommended.\ndefine( 'K_COMMENTS_INTERVAL', 5 * 60 );\n```\n\n----------------------------------------\n\nTITLE: Excluding Content from Search Results in CouchCMS\nDESCRIPTION: Example of using the 'searchable' parameter to exclude an editable region's content from search results in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nsearchable='0'\n```\n\n----------------------------------------\n\nTITLE: Customizing First and Last Item CSS Classes - CouchCMS menu Tag - CouchCMS Tag Language\nDESCRIPTION: Controls the CSS class applied to the first and last items of each menu level via 'first_class' and 'last_class' parameters. Default classes are 'first' and 'last', but custom classnames make it easy to integrate with complex themes or frameworks.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_14\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' first_class='begin' />\n```\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' first_class='begin' last_class='end' />\n```\n\n----------------------------------------\n\nTITLE: Defining a Static HTML Region for Property Description in PHP/HTML\nDESCRIPTION: This snippet shows a static HTML block representing part of a property listing template. It serves as the baseline content before adding CouchCMS functionality. There are no dependencies, and the expected output is a property description displayed in HTML with no editability. It is meant to be replaced or enhanced by subsequent CouchCMS tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"prop_desc\">\n    <b>Property Description:</b>\n    <span class=\"gray\">\n        Condo pricing starts at just under $700,000.\n        Waterfront Private Residences.\n        Jack Nicklaus Signature Golf Course.\n    </span>\n    <br class=\"clear\"/>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding Google Map Using Address with CouchCMS Tag in HTML\nDESCRIPTION: This snippet demonstrates how to embed a Google Map on a web page by specifying the location using a human-readable address. It uses the couchcms google_map self-closing tag where the name attribute uniquely identifies the map instance, and the address attribute specifies the physical location to display. No additional parameters are necessary, and the map will be generated with default sizing and zoom settings unless overridden.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/google_map.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:google_map\n    name='my_map'\n    address='1600 Amphitheatre Parkway, Mountain View, CA'\n/>\n```\n\n----------------------------------------\n\nTITLE: Basic Form Persistence on Submission in CouchCMS (Kettle Template Language)\nDESCRIPTION: This snippet shows a minimal approach to save form submissions in CouchCMS via <cms:db_persist_form /> without parameters. It is dependent on the form context and expects the bound template and input fields. The submitted data is saved, but leaving system fields like 'name' and 'title' empty may cause errors; additional configuration is recommended for production use.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_8\n\nLANGUAGE: Kettle Template Language\nCODE:\n```\n<cms:db_persist_form />\n```\n\n----------------------------------------\n\nTITLE: Defining One-to-Many Relation (Primary to Reverse) in CouchCMS\nDESCRIPTION: This snippet defines a One-to-Many relationship where the primary template page can link to many pages of the reverse template, but each reverse template page can only link to one primary page. It achieves this by adding the `reverse_has='one'` parameter to the `relation` editable tag definition. The admin panel still shows a multi-select list, filtered to only include reverse pages not already linked.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/relationships.md#_snippet_1\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' reverse_has='one' />\n```\n\n----------------------------------------\n\nTITLE: Using the CouchCMS hide Tag\nDESCRIPTION: Demonstrates the basic syntax of the CouchCMS `hide` tag. Code placed between the opening `<cms:hide>` and closing `</cms:hide>` tags will be processed and executed by CouchCMS, but any output generated by that code will be suppressed and not appear on the final webpage. This is useful for executing backend logic or setting variables without visible output. The tag takes no parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/hide.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:hide>\n   ...Everything here will get executed but the output will never appear on the webpage...\n</cms:hide>\n```\n\n----------------------------------------\n\nTITLE: Displaying Static HTML with cms:editable type='message' in CouchCMS\nDESCRIPTION: Defines a CouchCMS editable region named 'banner' of type 'message'. The HTML content enclosed within the tag, including the `<blockquote>` and `<p>` elements, will be displayed verbatim in the CouchCMS admin panel. This type is specifically for showing formatted messages or static content, not for user input, and ignores the 'label' and 'desc' parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/message.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable name='banner' type='message'>\n<blockquote><p>The \"free\" distribution of unwelcome or misleading messages to thousands of people is an annoying and sometimes destructive use of the Internet's unprecedented efficiency.\n<span style=\"color: rgb(51, 51, 51);\">Bill Gates, New York Times, 1998</span></p></blockquote>\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Listing Hierarchical Folders in CouchCMS\nDESCRIPTION: This snippet lists folders hierarchically using the `folders` tag and the `hierarchical` parameter set to '1'.  It also displays the level of each folder using the `k_level` variable. The `masterpage` parameter selects the target template. The output is an ordered list of folder titles with their levels, reflecting the hierarchical structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' hierarchical='1'>\n    <cms:show k_folder_title /> (<cms:show k_level />) <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Defining Text Box Option with Price Adjustment\nDESCRIPTION: This code snippet demonstrates how to define a text box option with a price adjustment. It shows how to configure a custom text input that alters the base price of the product. The syntax is identical to other options with a price delta.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nYour Message[*TEXT*=5]\n```\n\n----------------------------------------\n\nTITLE: Adding Validation Constraints to Couch CMS Input Tags\nDESCRIPTION: Demonstrates how to add validation constraints to Couch CMS input tags by using the 'required' parameter and 'validator' parameter for specific validation types like email.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n   <label for=\"name\">Your Name *</label>\n   <cms:input type=\"text\" name=\"name\" id=\"name\" required='1' value=\"\" class=\"requiredField\" />\n   <span class=\"error\" style=\"display:block\">This field is required.</span>\n</p>\n<p>\n   <label for=\"email\">E-mail Address *</label>\n   <cms:input type=\"text\" name=\"email\" id=\"email\" required='1' validator='email' value=\"\" class=\"requiredField email\" />\n   <span class=\"error\" style=\"display:block\">A valid email address is required.</span>\n</p>\n<p>\n   <label for=\"message\">Message *</label>\n   <cms:input type=\"textarea\" name=\"message\" id=\"message\" required='1' rows=\"5\" cols=\"30\" class=\"requiredField\" />\n   <span class=\"error\" style=\"display:block\">This field is required.</span>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Setting Image Quality for Editable Field CouchCMS Template\nDESCRIPTION: This snippet defines a CouchCMS editable region for an image, specifying a required width of 150 pixels. It also sets the output image quality to 50%. The quality parameter ranges from 0 (worst quality, smaller file) to 100 (best quality, biggest file), affecting file size and visual fidelity. The default value is 80.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/image.md#_snippet_1\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:editable name='prop_image' label='Image' desc='Upload main image of property here'\n    width='150'\n    quality='50'\n    type='image' />\n```\n\n----------------------------------------\n\nTITLE: Setting Thumbnail Preview Dimensions in CouchCMS Admin\nDESCRIPTION: Defines a 'thumbnail' editable region named 'my_image_thumb' that uses `preview_width` ('80') to control the width of the thumbnail preview displayed in the admin panel when `show_preview` is '1'. This does not affect the actual generated thumbnail's dimensions (set by `width` and `height`). Requires an associated 'image' field 'my_image'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_7\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    show_preview='1'\n    preview_width='80'\n    assoc_field='my_image'\n    type='thumbnail' />\n```\n\n----------------------------------------\n\nTITLE: HTML Input Types: text, password, submit, hidden\nDESCRIPTION: Demonstrates standard HTML input tags for text, password, submit, and hidden fields. These HTML input elements are fundamental for capturing user input in web forms. The 'name' attribute is crucial for identifying the input element when the form is submitted. The 'value' attribute sets the initial value. Size and maxlength control the display and input length.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\">\n<input type=\"password\" size=\"10\" maxlength=\"10\" name=\"password\">\n<input type=\"submit\" name=\"submit\" value=\"Send\">\n<input type=\"hidden\" name=\"max_val\" value=\"100\">\n```\n\n----------------------------------------\n\nTITLE: Listing Child Folders in CouchCMS\nDESCRIPTION: This snippet lists only the subfolders of a specified parent folder using the `childof` parameter.  It also uses the `hierarchical='1'` parameter. The `masterpage` attribute specifies the template. The output shows the subfolders of the 'world' folder.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' childof='world' hierarchical='1'>\n    <cms:show k_folder_title /> [<cms:show k_level />] <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Generating Gravatar Image Tag in CouchCMS\nDESCRIPTION: This code snippet demonstrates how to use the `gravatar` tag in CouchCMS to display a Gravatar image based on a given email address. It retrieves the image from gravatar.com, using the specified size. If no Gravatar is found for the email, it uses a default image.  The tag takes an `email` parameter which is required. The `size` parameter sets the width and height of the image and defaults to 48. The `default` parameter specifies an alternative image.  The `link_only` parameter can output only the image link.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/gravatar.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:gravatar email=\"johndoe@gmail.com\" size=\"60\" />\n```\n\n----------------------------------------\n\nTITLE: smart_embed tag usage - PHP\nDESCRIPTION: This code demonstrates the basic usage of the 'smart_embed' tag in a CouchCMS template. It includes the tag with a single parameter specifying the snippet name. The tag searches for snippets with names like 'header-default.*' or 'default.*' within a sub-folder named 'header' inside the snippets folder.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/smart_embed.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:smart_embed 'header' />\n```\n\n----------------------------------------\n\nTITLE: Defining Status Classes for Content in CSS\nDESCRIPTION: This CSS snippet defines color schemes for error, notice, and success messages by targeting classes. These classes should align with those referenced in your CKEditor custom styles for consistent front-end styling. The snippet must be included in your site's stylesheet for the styles to render as expected in both the editor and on the site.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_11\n\nLANGUAGE: CSS\nCODE:\n```\n.error      { background: #FBE3E4; color: #8a1f11; border-color: #FBC2C4; }\n.notice     { background: #FFF6BF; color: #514721; border-color: #FFD324; }\n.success    { background: #E6EFC2; color: #264409; border-color: #C6D880; }\n```\n\n----------------------------------------\n\nTITLE: Formatting Date with Russian Locale and Charset - CouchCMS\nDESCRIPTION: This snippet demonstrates how to use the 'date' tag in CouchCMS to format a date for the Russian locale, specifying the 'ISO-8859-5' charset to ensure correct character encoding. The k_page_date variable holds the date value. The format specifies the desired output format of the date.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:date k_page_date format='%B %d, %Y' locale='russian' charset='ISO-8859-5' />\n```\n\n----------------------------------------\n\nTITLE: Defining Checkbox Editable Region with Static Options - CouchCMS HTML\nDESCRIPTION: Defines an editable region named 'my_categories' of type 'checkbox', displaying four options in the CMS panel. Requires CouchCMS to be installed and the region to be used within a valid CouchCMS template. The parameters 'opt_values', 'name', and 'type' control the options and input type. No input/output appears on the frontend unless paired with a display tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_categories\"\n  label=\"Categories\" desc=\"Check all applicable\"\n  opt_values='Entertainment | Computers | Sports | Health'\n  type='checkbox'\n/>\n```\n\n----------------------------------------\n\nTITLE: Displaying Subtree Rooted at Specific Page - CouchCMS menu Tag with root - CouchCMS Tag Language\nDESCRIPTION: Uses the 'root' parameter to limit the menu output to start at a specific page and include its children. The supplied value corresponds to the unique name of a nested-page under the masterpage. This example displays 'United States News' and its direct children as the menu.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_6\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' root='united-states-news' />\n```\n\n----------------------------------------\n\nTITLE: Listing Folder Ancestors with parentfolders Tag - CouchCMS - CouchCMS\nDESCRIPTION: This snippet displays a sequence of ancestor folder names for a given folder, separated by the '>' character. It uses the <cms:parentfolders> tag to enumerate parent folders by passing the target folder (here, 'china') and outputs each as a linked breadcrumb step. Requires CouchCMS with properly defined folder hierarchies and the <cms:parentfolders> tag enabled.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_12\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:parentfolders folder='china' >\n    <a href=\"<cms:show k_folder_link/>\" ><cms:show k_folder_title/></a>&nbsp;>\n</cms:parentfolders>\n```\n\n----------------------------------------\n\nTITLE: Adding a PayPal Buy Button Using CouchCMS Tag\nDESCRIPTION: This line inserts a PayPal 'Buy Now' button into the item's page within the CouchCMS product.php template. Requires 'pp_price' field to be present; otherwise, the button will not render. The PayPal button automates checkout data provisioning. The appearance can be customized via the 'image' parameter. Clicking the button directs customers to PayPal with product data transferred automatically.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_2\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:paypal_button />\n```\n\n----------------------------------------\n\nTITLE: Excluding Pages by Multiple IDs - CouchCMS Tag\nDESCRIPTION: This snippet fetches all pages cloned from 'blog.php' *except* those with the specified numeric IDs (14 or 13) by using the 'NOT' keyword followed by a comma-separated list with the `id` parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_5\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' id='NOT 14, 13'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Executing AJAX Link Actions for Cart Operations\nDESCRIPTION: jQuery AJAX GET request that follows a link's href attribute without a page refresh. Upon completion, it calls the show_cart function to update the cart display in the modal window.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Execute action by following link\n$.get($(this).attr(\"href\"), function() {\n    show_cart();\n});\n```\n\n----------------------------------------\n\nTITLE: Defining an SWF Embedding Shortcode Handler in CouchCMS (PHP)\nDESCRIPTION: Registers the 'swf' shortcode and its handler 'swf_handler'. It uses `$FUNCS->get_named_vars` to extract 'src', 'width', and 'height' parameters, providing defaults. The parameters are sanitized (htmlspecialchars for src, integer casting for dimensions). The handler returns an HTML `<object>` tag with a nested `<embed>` tag for embedding SWF (Flash) content, ensuring cross-browser compatibility.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/shortcodes.md#_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n// 7.\n// Embed SWF\n// Usage: [swf http://www.youtube.com/v/5PsnxDQvQpw&hl=en_GB&fs=1]\n//        [swf src=\"http://www.youtube.com/v/5PsnxDQvQpw&hl=en_GB&fs=1\" width=\"640\" height=\"480\"]\n$FUNCS->register_shortcode( 'swf', 'swf_handler' );\nfunction swf_handler( $params, $content=null ){\n   global $FUNCS;\n\n   extract( $FUNCS->get_named_vars(array(\n      'src' => '',\n      'width' => '480',\n      'height' => '385'\n   ), $params) );\n\n   // Sanitize parameters\n   $src = htmlspecialchars( $src, ENT_QUOTES );\n   $width = (int)$width;\n   $height = (int)$height;\n\n   $html =<<<EOS\n   <object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" width=\"$width\" height=\"$height\">\n      <param name=\"movie\" value=\"$src\"></param>\n      <param name=\"allowFullScreen\" value=\"true\"></param>\n      <param name=\"allowscriptaccess\" value=\"always\"></param>\n      <param name=\"wmode\" value=\"opaque\"></param>\n      <embed\n         src=\"$src\"\n         type=\"application/x-shockwave-flash\"\n         allowscriptaccess=\"always\"\n         allowfullscreen=\"true\"\n         width=\"$width\"\n         height=\"$height\"\n         wmode=\"opaque\">\n      </embed>\n   </object>\nEOS;\n    return $html;\n\n}\n```\n\n----------------------------------------\n\nTITLE: Basic CouchCMS Template - PHP\nDESCRIPTION: This is a sample CouchCMS template demonstrating how to use 'smart_embed' to include header, menu, content, and footer snippets. It initializes CouchCMS and uses editable regions for content.  The template uses no direct HTML markup, relying entirely on snippets. The template is saved as index.php or about.php\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/smart_embed.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<cms:template>\n    <!-- Editable regions unique to this template can be defined here -->\n    <cms:editable name='content' type='textarea' />\n</cms:template>\n\n<cms:smart_embed 'header' />\n<cms:smart_embed 'menu' />\n<cms:smart_embed 'content' />\n<cms:smart_embed 'footer' />\n\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Basic Conditional Output with If/Else in CouchCMS\nDESCRIPTION: This snippet demonstrates a simple conditional statement using 'cms:if' and 'cms:else'. If the variable 'my_var' equals 'hello', it outputs 'Hello'; otherwise, it outputs 'Don't know what it is'. This illustrates the basic function of the 'else' tag to provide an alternative block of code when the 'if' condition is false.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/else.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if my_var == 'hello' >\n    <h3> Hello </h3>\n<cms:else />\n   <h3> Don't know what it is </h3>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Each Selected Checkbox Option - CouchCMS HTML\nDESCRIPTION: Uses the CouchCMS 'each' tag to loop through all selected values in the 'my_categories' checkbox region and prints each on its own line. This approach requires the region to exist and have values; it enables more granular frontend display than the raw 'show' tag. No external dependencies.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:each my_categories as='cat'>\n  <cms:show cat /><br>\n</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Debugging smart_embed with variable - PHP\nDESCRIPTION: This shows how to control the debug mode of multiple 'smart_embed' tags using a global variable.  This allows enabling/disabling debugging in one place instead of modifying each tag individually. The variable 'my_debug' is set to '0' or '1' to turn debugging on or off for all smart_embed statements.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/smart_embed.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_debug='0' 'global' />\n<cms:smart_embed 'header' debug=my_debug />\n<cms:smart_embed 'menu' debug=my_debug />\n<cms:smart_embed 'content' debug=my_debug />\n<cms:smart_embed 'footer' debug=my_debug />\n```\n\n----------------------------------------\n\nTITLE: Invoking CouchCMS - PHP\nDESCRIPTION: This snippet invokes the CouchCMS engine to process the template. It's placed at the very end of the PHP file and triggers CouchCMS to parse the template for CouchCMS tags and perform the necessary operations. Without this call, CouchCMS will not process the template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/templates.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Creating Breadcrumbs Using breadcrumbs Tag - CouchCMS - CouchCMS\nDESCRIPTION: This example leverages the <cms:breadcrumbs> tag to generate a breadcrumb navigation trail for the current page or folder. It checks for 'page' or 'folder' views and includes the template name at the beginning via the 'include_template' parameter. The separator can be customized as shown. Designed for CouchCMS installations supporting the <cms:breadcrumbs> tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_13\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if k_is_page || k_is_folder >\n    <cms:breadcrumbs separator='&nbsp;>&nbsp;' include_template='1'/>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Apply Body Class(es) for CSS Styling in Richtext Editor (CouchCMS)\nDESCRIPTION: Demonstrates using the 'body_class' parameter to apply one or more CSS classes ('class1 class2') to the editor's internal body tag. Multiple classes are separated by spaces. This enables styling the editor content based on class selectors defined in the linked stylesheet(s).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css=\"<cms:show k_site_link />styles/editor_styles.css\"\n    body_class='class1 class2'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Debugging smart_embed - PHP\nDESCRIPTION: This snippet demonstrates how to use the 'debug' parameter of the 'smart_embed' tag. When set to '1', the tag outputs a list of candidate snippets it considered and the one it chose, instead of the snippet's content.  This is helpful for understanding which snippet is being loaded in different views.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/smart_embed.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:smart_embed debug='1' />\n```\n\n----------------------------------------\n\nTITLE: Executing AJAX Form Submission for Cart Actions\nDESCRIPTION: jQuery AJAX POST request that submits form data to the server without a page refresh. Upon success, it calls the show_cart function to update the cart display in the modal window.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Execute action by submitting form\n$.ajax({\n    type: 'post',\n    url: $(this).attr('action'),\n    data: $(this).serialize(),\n    success: function() {\n        show_cart();\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Using embed within smart_embed - PHP\nDESCRIPTION: This example shows how to combine the 'embed' tag with 'smart_embed' to load a base snippet and then add additional markup.  It's used when a specific template needs a slightly modified version of a common snippet.  The example loads 'header/default.html' and appends a JavaScript file.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/smart_embed.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed 'header/default.html' />\n<script type=\"text/javascript\" src=\"<cms:show k_site_link />js/jquery-1.7.1.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a clonable template for folder descriptions in CouchCMS (PHP)\nDESCRIPTION: Defines a non-executable, clonable PHP template with editable regions for storing folder-specific descriptions and blurbs. It serves solely as a data container for associated pages, enabling dynamic display of folder info in the portfolio without direct URL access.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/portfolio.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:template \n  clonable='1' \n  executable='0' \n  order='100' \n  title='Portfolio Folder Description' \n  hidden='1'>\n\n  <cms:editable \n    name='description' \n    label='Folder Description' \n    type='richtext'>\n  </cms:editable>\n\n  <cms:editable \n    name='blurb' \n    label='Folder Blurb' \n    type='text'>\n  </cms:editable>\n\n</cms:template>\n```\n\n----------------------------------------\n\nTITLE: Applying CSS Classes to Menu Container - CouchCMS menu Tag with menu_class - CouchCMS Tag Language\nDESCRIPTION: Shows how to add custom CSS class(es) to the outer list container ('<ul>' or '<ol>') by using the 'menu_class' parameter. Accepts space-separated multiple class names. Facilitates menu customization and integration with CSS frameworks such as Superfish or custom themes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_12\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' menu_class='sf-menu' />\n```\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' menu_class='sf-menu sf-navbar' />\n```\n\n----------------------------------------\n\nTITLE: HTML radio Input Type\nDESCRIPTION: Demonstrates the use of HTML radio buttons for selecting one option from a set of choices. Each radio button shares the same 'name' attribute, and the 'value' attribute differentiates the options. Only one radio button within a group can be selected at a time.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\nWhat kind of shirt are you wearing? <br />\n\nShade:\n<input type=\"radio\" name=\"shade\" value=\"dark\">Dark\n<input type=\"radio\" name=\"shade\" value=\"light\">Light <br />\n\nSize:\n<input type=\"radio\" name=\"size\" value=\"small\">Small\n<input type=\"radio\" name=\"size\" value=\"medium\">Medium\n<input type=\"radio\" name=\"size\" value=\"large\">Large <br />\n```\n\n----------------------------------------\n\nTITLE: Displaying Inline Radio Buttons for Product Options\nDESCRIPTION: This code snippet demonstrates how to display radio buttons on the same line within the CouchCart system. By using two asterisks ('**') at the end of the option string, the radio buttons will appear inline, thereby affecting the layout.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nColor[Red | Black=+3 | Green=-2]\nSize[Large | Medium | Small]**\n```\n\n----------------------------------------\n\nTITLE: Limiting Hierarchical Folders Depth in CouchCMS\nDESCRIPTION: This snippet limits the depth of the hierarchical folder listing using the `depth` parameter.  It lists folders hierarchically using the `hierarchical` parameter set to '1', and limits the traversal to one level by setting depth to '1'. The `masterpage` attribute indicates the template. The output only displays the top-level folders of the hierarchy.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' hierarchical='1' depth='1'>\n    <cms:show k_folder_title /> [<cms:show k_level />] <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Defining a Self-Closing Editable Region in CouchCMS Templates\nDESCRIPTION: This snippet shows the use of the <cms:editable> tag as a self-closing tag to define an editable region with no default text. The 'name' parameter is required. It creates a blank textarea in the admin panel, allowing users to input content as needed. Intended for CouchCMS PHP/HTML templates, there are no additional dependencies.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/editable-regions.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<cms:editable name='prop_desc' />\n```\n\n----------------------------------------\n\nTITLE: Setting Thumbnail Quality in CouchCMS\nDESCRIPTION: Defines a 'thumbnail' editable region named 'my_image_thumb' setting the compression `quality` to '50' (0=worst, 100=best, default=80). This affects the file size and visual quality of the generated thumbnail. It requires an associated 'image' field named 'my_image', specifies width, and includes an admin preview.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_5\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image_thumb' label='Image Thumbnail' desc='Thumbnail of main image'\n    width='100'\n    show_preview='1'\n    quality='50'\n    assoc_field='my_image'\n    type='thumbnail' />\n```\n\n----------------------------------------\n\nTITLE: Implementing popup_edit tag for non-textual regions\nDESCRIPTION: This HTML fragment demonstrates how to add a '<cms:popup_edit />' tag adjacent to a non-textual editable region (an image), allowing editors to click a link that opens a popup window for updating the region, with optional customization of link text and styling.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"4u\">\n    <span class=\"me image image-full\"><img src=\"<cms:show intro_image />\" alt=\"\" /></span>\n    <cms:popup_edit 'intro_image' />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining Password Editable Region with Width (CouchCMS Tags)\nDESCRIPTION: Defines a 'password' type editable region named 'my_password'. This configuration includes the 'width' parameter set to '200', which controls the visual width of the generated HTML input textbox, making it 200 pixels wide. This tag must be placed within a valid CouchCMS template structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/password.md#_snippet_2\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable name='my_password' label='Password'\n desc='Enter your password'\n width='200'\n type='password' />\n```\n\n----------------------------------------\n\nTITLE: Converting HTML Input Elements to Couch CMS Input Tags\nDESCRIPTION: Demonstrates how to convert standard HTML input elements to Couch CMS equivalent tags by adding 'cms:' prefix and converting textarea to a Couch input tag with type 'textarea'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n   <label for=\"name\">Your Name *</label>\n   <input type=\"text\" name=\"name\" id=\"name\" value=\"\" class=\"requiredField\" />\n   <span class=\"error\">This field is required.</span>\n</p>\n<p>\n   <label for=\"email\">E-mail Address *</label>\n   <input type=\"text\" name=\"email\" id=\"email\" value=\"\" class=\"requiredField email\" />\n   <span class=\"error\">This field is required.</span>\n</p>\n<p>\n   <label for=\"message\">Message *</label>\n   <textarea name=\"message\" id=\"message\" rows=\"5\" cols=\"30\" class=\"requiredField\"></textarea>\n   <span class=\"error\">This field is required.</span>\n</p>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n   <label for=\"name\">Your Name *</label>\n   <cms:input type=\"text\" name=\"name\" id=\"name\" value=\"\" class=\"requiredField\" />\n   <span class=\"error\">This field is required.</span>\n</p>\n<p>\n   <label for=\"email\">E-mail Address *</label>\n   <cms:input type=\"text\" name=\"email\" id=\"email\" value=\"\" class=\"requiredField email\" />\n   <span class=\"error\">This field is required.</span>\n</p>\n<p>\n   <label for=\"message\">Message *</label>\n   <cms:input type=\"textarea\" name=\"message\" id=\"message\" rows=\"5\" cols=\"30\" class=\"requiredField\" />\n   <span class=\"error\">This field is required.</span>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Custom Toolbar with Bold and Italic Only in CouchCMS CKEditor Field\nDESCRIPTION: A minimal custom_toolbar example, showing how to enable only bold and italic buttons in the editor for a given field. Requires the toolbar parameter be set to 'custom'. Input: parameter string for custom_toolbar. Output: a simplified toolbar.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_17\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='custom'\n    custom_toolbar='bold, italic'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Ordering Pages with Default Order - CouchCMS Tag\nDESCRIPTION: This snippet is equivalent to the default behavior of the `<cms:pages>` tag when no sorting parameters are provided. It fetches pages from 'blog.php' and sorts them by 'publish_date' in descending order.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_27\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor Toolbar to 'Full' in CouchCMS Editable Field\nDESCRIPTION: This snippet sets the toolbar parameter to 'full', allowing users access to all available CKEditor formatting controls in the toolbar. Provides maximum editing flexibility, exposing advanced users to the entire range of editor buttons. No additional configuration required.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_15\n\nLANGUAGE: Couch Tag Markup\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    toolbar='full'\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Setting a variable with the set tag in CouchCMS\nDESCRIPTION: This snippet demonstrates how to create a variable named my_message and assign it the value 'Hello World' using the set tag in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_message='Hello World' />\n```\n\n----------------------------------------\n\nTITLE: Defining Checkbox Options with Distinct Saved Values - CouchCMS HTML\nDESCRIPTION: Defines checkbox options where each display label is mapped to a unique saved value using the '=' separator in 'opt_values'. Useful for storing numeric or custom identifiers, not just display names, in the CMS. Requires standard CouchCMS template context and editable region support.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\nopt_values='Entertainment=0 | Computers=1 | Sports=2 | Health=3'\n```\n\n----------------------------------------\n\nTITLE: Displaying Only Children of a Page - CouchCMS menu Tag with childof - CouchCMS Tag Language\nDESCRIPTION: Uses the 'childof' parameter to render only the direct children of a specified nested-page as the menu. The parent page itself is not included in output. If both 'childof' and 'root' are set, 'root' takes precedence over 'childof'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_7\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' childof='united-states-news' />\n```\n\n----------------------------------------\n\nTITLE: Defining Raised Relief World Globe Variants\nDESCRIPTION: This code snippet shows the complete variant configurations for a \"Raised Relief World Globe\" product. It lists all the options, the different possible values and price modifications which will be used to define the product variants, reflecting how it is presented.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nIlluminated[No | Yes=5]\nStand Type[Tabletop | Floor=15]\nStand Material[Plastic | Brass=10 | Wood=25]\n```\n\n----------------------------------------\n\nTITLE: Defining Product Options with Price Adjustments\nDESCRIPTION: This code snippet provides an example of how to define product options along with price adjustments for specific option-values. It utilizes the syntax to specify the option name, the option-values and their respective price differences from the base product price. The input format is crucial for interpreting the pricing correctly.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nColor[Red | Black=+3 | Green=-2]\n```\n\n----------------------------------------\n\nTITLE: Adding CouchCMS Includes\nDESCRIPTION: This code snippet shows the necessary PHP includes required to integrate a template with CouchCMS. It includes the cms.php file for core CouchCMS functionality and invokes the Couch object at the end of the file to initialize Couch.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/portfolio.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n```\n\nLANGUAGE: PHP\nCODE:\n```\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Ordering Comments Ascendingly by Date (CouchCMS)\nDESCRIPTION: Fetches all approved comments and orders them by date in ascending order (oldest first). The 'order' parameter controls the sort direction; 'desc' (latest first) is the default.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/comments.md#_snippet_12\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:comments order='asc'></cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Illustrative Relative CSS Link (Problem)\nDESCRIPTION: This conceptual snippet represents the problematic relative path used for linking stylesheets in the original Aurelius template. When PrettyURLs are active, this relative path fails because the base URL of the page changes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<link rel=\"stylesheet\" href=\"css/style.css\" type=\"text/css\" media=\"screen\">\n<link rel=\"stylesheet\" href=\"css/style_other.css\" type=\"text/css\" media=\"screen\">\n```\n\n----------------------------------------\n\nTITLE: Defining a Text Editable Region in CouchCMS\nDESCRIPTION: This code snippet demonstrates how to define a 'text' type editable region in a CouchCMS template. The 'name' attribute specifies the variable name, 'label' is the display name, 'desc' provides a description, and 'type' is set to 'text'. The default value is set within the opening and closing tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/text.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable\n name='prop_title'\n label='Title'\n desc='Enter title of property here'\n type='text'>Awesome property!</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Embedding Google Custom Search Results using HTML\nDESCRIPTION: This snippet uses a custom HTML tag <gcse:searchresults-only> to define the container where Google Custom Search results will appear. It relies on the Google CSE script being loaded and executed to populate the results dynamically, enabling users to view search results without leaving the page or loading a separate results page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/search.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div><gcse:searchresults-only></gcse:searchresults-only></div>\n```\n\n----------------------------------------\n\nTITLE: Defining Dropdown Options (opt_values) with Label-Value Mapping in CouchCMS\nDESCRIPTION: Shows how to define options for a dropdown where each option's display label is mapped to a different internal value. The format `Label=Value` is used, with options still separated by the default pipe character. The saved value will be the one after the equals sign.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/dropdown.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\nopt_values='Residential=0 | Commercial=1 | Rental=2'\n```\n\n----------------------------------------\n\nTITLE: Disabling Active Trail in CouchCMS Menu\nDESCRIPTION: This snippet demonstrates how to disable the default active trail behavior of the CouchCMS menu tag.  By setting the 'no_active_trail' parameter to '1', the menu tag will not apply any special class to the menu-items leading up to the current page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_17\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:menu masterpage='menu.php' no_active_trail='1' />\n```\n\n----------------------------------------\n\nTITLE: Formatting Date with Greek Locale and Charset - CouchCMS\nDESCRIPTION: This snippet demonstrates how to use the 'date' tag in CouchCMS to format a date for the Greek locale, specifying the 'ISO-8859-7' charset to ensure correct character encoding. The k_page_date variable holds the date value. The format specifies the desired output format of the date.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:date k_page_date format='%B %d, %Y' locale='greek' charset='ISO-8859-7' />\n```\n\n----------------------------------------\n\nTITLE: Ordering Menu Items by Field - CouchCMS menu Tag - CouchCMS Tag Language\nDESCRIPTION: Shows how to sort menu items using the 'orderby' parameter. Here, menu items are ordered by their 'title' field with a maximum depth of 2. Requires nested pages under 'menu.php'. Output structure nests items up to two levels.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/menu.md#_snippet_2\n\nLANGUAGE: CouchCMS Tag Language\nCODE:\n```\n<cms:menu masterpage='menu.php' depth='2' orderby='title' />\n```\n\n----------------------------------------\n\nTITLE: Repeating Content with Unnamed Parameters in cms:repeat - CouchCMS\nDESCRIPTION: This snippet demonstrates the use of unnamed parameters with the `<cms:repeat>` tag. It highlights the importance of parameter order when parameters are unnamed; otherwise, the tag's behavior may differ from the intended behavior. `cms:repeat` expects the first unnamed parameter to be `count` and the second to be `startcount`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/tags.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cms:repeat '1' '4'></cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Outputting Menu Markup Using cms:menu\nDESCRIPTION: This snippet utilizes the `cms:menu` tag to generate the HTML markup for the menu. It specifies the `masterpage` for the menu structure and sets the `menu_class` parameter to 'sf-menu', which is used by Superfish. The menu is wrapped within a div with the id 'navwrap'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"navwrap\">\n    <cms:menu masterpage='index.php' menu_class='sf-menu' />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting the Template Display Title in CouchCMS\nDESCRIPTION: Uses the `cms:template` tag to assign a user-friendly title ('About Us') to the current template. This title will be displayed in the CouchCMS admin panel sidebar instead of the template's filename. It should be placed near the top of the template, after the initial PHP require_once line.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/about-us.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:template title='About Us' />\n```\n\n----------------------------------------\n\nTITLE: CouchCMS checkbox Input Type\nDESCRIPTION: Demonstrates CouchCMS checkboxes using the '<cms:input type=\"checkbox\" ... />' tag. The 'opt_values' attribute is used to define the options. If labels and values are the same, only the labels need to be defined. The submitted value will be a comma-separated string of selected values.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_12\n\nLANGUAGE: CouchCMS\nCODE:\n```\nSelect your favorite cartoon characters.\n<cms:input type=\"checkbox\" name=\"toon\" opt_values=\"Goofy | Donald | Bugs Bunny=Bugs | Scooby Doo=Scoob\" />\n```\n\n----------------------------------------\n\nTITLE: Iterating Through Selected Options (Tag Pair)\nDESCRIPTION: Illustrates the use of the `<cms:pp_selected_options>` tag as a tag pair. This allows iterating over each selected option individually, making variables like `option_name` and `option_value` available within the loop for custom display and formatting.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_22\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:pp_selected_options startcount='1'>\n    <b><cms:show k_count />. <cms:show option_name /></b>: <cms:show option_value /><br />\n</cms:pp_selected_options>\n```\n\n----------------------------------------\n\nTITLE: Enabling 'no_xss_check' to allow raw JavaScript input in 'textarea' editable region\nDESCRIPTION: Illustrates how to permit users to input JavaScript or Couch tags by disabling XSS sanitization for the region. Setting 'no_xss_check' to '1' bypasses the default security filter, suitable for trusted input like AdSense code.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/textarea.md#_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<cms:editable name='my_adsense' label=\"Adsense Code\" desc=\"Enter your Adsense code here\"\n    height='100'\n    no_xss_check='1'\n    type='textarea'/>\n\n```\n\n----------------------------------------\n\nTITLE: Defining a 'radio' type editable region in CouchCMS\nDESCRIPTION: Demonstrates how to declare a radio button editable field with options and labels for user selection in CouchCMS. The snippet shows the usage of the <cms:editable> tag with parameters like name, label, desc, opt_values, and type.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential | Commercial | Rental'\n  type='radio'\n/>\n```\n\n----------------------------------------\n\nTITLE: Basic Redirection to External URL using CouchCMS redirect tag\nDESCRIPTION: Simple example demonstrating how to redirect users to an external website using the 'redirect' tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/redirect.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:redirect url='http://www.google.com/' />\n```\n\n----------------------------------------\n\nTITLE: HTML dropdown (select) Input Type\nDESCRIPTION: Illustrates a standard HTML dropdown list (select element) for choosing one option from a list.  Options are defined within the <option> tags. The 'name' attribute identifies the selected value when the form is submitted.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\nCollege Degree?\n<select name=\"degree\">\n    <option>Choose One</option>\n    <option>High School Degree</option>\n    <option>Some College</option>\n    <option>Bachelor's Degree</option>\n    <option>Doctorate</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: Listing Folders and Pages with CouchCMS dump Tag in Template Language\nDESCRIPTION: This snippet uses CouchCMS tags to iterate through all folders and their contained pages for a specific masterpage. The dump tag is embedded at different hierarchical levels: globally, within folders loop, and within pages loop to output variables available at those points. No external dependencies are required. Inputs include the folder and page structures defined in CouchCMS. Outputs are HTML listings of folders and pages along with variable dumps showing current tag context variables. Used to debug variable scopes and confirm availability within nested tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/dump.md#_snippet_0\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:folders masterpage='news.php' hierarchical='1'>\n    <H3><cms:show k_folder_title /></H3>\n    <cms:if k_folder_pagecount >\n        <UL>\n        <cms:pages masterpage=\"news.php\" folder=k_folder_name include_subfolders='0'>\n            <LI><a href=\"<cms:show k_page_link />\"><cms:show k_page_title /></a></LI>\n        </cms:pages>\n        </UL>\n    </cms:if>\n</cms:folders>\n```\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:dump />\n<cms:folders masterpage='news.php' hierarchical='1'>\n    <H3><cms:show k_folder_title /></H3>\n    <cms:dump />\n    <cms:if k_folder_pagecount >\n        <UL>\n        <cms:pages masterpage=\"news.php\" folder=k_folder_name include_subfolders='0'>\n            <cms:dump />\n            <LI><a href=\"<cms:show k_page_link />\"><cms:show k_page_title /></a></LI>\n        </cms:pages>\n        </UL>\n    </cms:if>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Prompting Login for Unauthorized Users Accessing Cloaked Links\nDESCRIPTION: Combining access_level with prompt_login to redirect unauthorized users to a login page when attempting to access a protected file.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"\n    <cms:cloak_url\n    link=\"http://yoursite.com/couch/uploads/file/secure/test.jpg\"\n    force_download='1'\n    access_level='4'\n    prompt_login='1'\n    />\n\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Excerpt with Count and Ignore Parameters in CouchCMS\nDESCRIPTION: Shows how to use the `count` and `ignore` parameters with the CouchCMS `excerptHTML` tag. It limits the excerpt to 130 words and removes any `<img>` tags found within the processed content, which is the output of `<cms:show content />`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/excerpthtml.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:excerptHTML count='130' ignore='img'>\n    <cms:show content />\n</cms:excerptHTML>\n```\n\n----------------------------------------\n\nTITLE: Implementing Breadcrumbs with nested_crumbs tag\nDESCRIPTION: This snippet demonstrates the use of the `nested_crumbs` tag to generate breadcrumbs reflecting the hierarchy of nested pages.  It showcases both the self-closing tag usage and the tag-pair usage with greater control over markup, including setting a masterpage and applying HTML elements.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_crumbs masterpage='index.php' />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_crumbs masterpage='index.php' ignore_show_in_menux='1' prepend='<ul class=\"breadcrumb\">' append='</ul>'>\n    <li><a href=\"<cms:show k_crumb_link />\"><cms:show k_crumb_text /></a><cms:if k_crumb_is_last='0'> &raquo; </cms:if></li>\n</cms:nested_crumbs>\n```\n\n----------------------------------------\n\nTITLE: Apply Multiple CSS Stylesheets to Richtext Editor (CouchCMS)\nDESCRIPTION: Shows how to link multiple CSS stylesheets to the CKEditor instance. The paths (relative or absolute, generated dynamically or statically) are separated by a pipe '|' character within the 'css' parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/richtext.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name='desc' label='Description'\n    desc='Enter description of property here'\n    css=\"<cms:show k_site_link />styles/editor_styles.css | styles/my_styles.css\"\n    type='richtext'/>\n```\n\n----------------------------------------\n\nTITLE: Enabling Nested Pages for a Template in CouchCMS\nDESCRIPTION: This snippet demonstrates how to enable the 'Nested Pages' feature for a clonable template in CouchCMS. By adding the `nested_pages='1'` parameter to the `<cms:template>` tag, you activate the ability to create hierarchical relationships between pages cloned from this template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:template clonable='1' nested_pages='1'> ... </cms:template>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS 'each' tag, using a custom separator\nDESCRIPTION: This snippet shows how to use a custom separator within the 'each' tag.  It splits the 'msg' variable by the '@' character using the `sep` parameter. The values are then iterated and ready to be displayed. It demonstrates how to use a custom separator to parse a string.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/each.md#_snippet_3\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:each msg sep='@' >..</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Understanding the is_ancestor Tag for Folder Hierarchy in CouchCMS\nDESCRIPTION: This snippet illustrates the usage of the is_ancestor tag within a CouchCMS template. It demonstrates how to evaluate if one folder is an ancestor of another using a self-closing tag within a conditional if statement. The snippet emphasizes the parameters needed and how the output impacts conditional logic in templates.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/is_ancestor.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if \"<cms:is_ancestor parent=folder1 child=folder2 />\" >\n    ..\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Fixing Relative JavaScript Links with k_site_link\nDESCRIPTION: Illustrates fixing relative paths for JavaScript files (e.g., in `portfolio.php`). Similar to the CSS fix, the `k_site_link` CouchCMS tag is prepended to the `src` attribute of `<script>` tags to create absolute URLs, resolving loading issues caused by PrettyURLs.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/tying-the-loose-ends.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<script type=\"text/javascript\" src=\"<cms:show k_site_link />js/jquery-1.4.2.min.js\"></script>\n<script type=\"text/javascript\" src=\"<cms:show k_site_link />js/jquery.prettyPhoto.js\"></script>\n<!-- other script tags -->\n```\n\n----------------------------------------\n\nTITLE: CouchCMS 'each' tag parameter shorthand\nDESCRIPTION: This snippet demonstrates that the `var` parameter can be omitted when using the `each` tag. It shows how to use `each` tag to iterate with the message directly in the tag. This example shows the shorthand for passing the string to split by directly passing the message variable as the first parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/each.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:each var=msg >..</cms:each>\n```\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:each msg >..</cms:each>\n```\n\n----------------------------------------\n\nTITLE: Using Explicit Values as Tag Parameters in CouchCMS\nDESCRIPTION: Demonstrates how to assign explicit (literal) string values to CouchCMS tags, noting that such values must be enclosed within quotes, either single or double. These parameters are straightforward and are used to pass fixed data to tags like 'show' and 'repeat'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/setting-parameters.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show \"Hello World\" />\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:repeat count='4'>\n    This line gets repeated\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Listing Folders Using folders Tag in CouchCMS\nDESCRIPTION: This snippet demonstrates how to list all folders defined in a specific template using the `folders` tag.  It retrieves folder titles and displays them. The `masterpage` parameter is used to specify the target template. Output will be a list of folder titles.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders>\n    <cms:show k_folder_title /> <br>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Listing Comments with CouchCMS\nDESCRIPTION: This snippet demonstrates listing comments using the `<cms:comments>` tag.  It retrieves the latest five comments. Inside the tag's block, data associated with each comment is made available as variables. This tag is similar to `<cms:pages>` and shares similar parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-comments.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:comments limit='5'>\n    <!-- sets comment related variables here -->\n</cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Displaying CouchCMS Image Editable Region in HTML Attribute\nDESCRIPTION: Uses the `<cms:show>` tag within the `src` attribute of an `<img>` tag to dynamically set the image source using the URL stored in the editable region named 'blog_image'. This integrates images uploaded via the CouchCMS admin panel into the template output.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<img class=\"thumb\" src=\"<cms:show blog_image />\" alt=\"\"/>\n```\n\n----------------------------------------\n\nTITLE: Deleting a cookie in CouchCMS using the delete_cookie tag\nDESCRIPTION: This example demonstrates how to delete a cookie named 'my_test_cookie' using the delete_cookie tag in CouchCMS. The tag is self-closing and requires the name of the cookie to be deleted as its parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/delete_cookie.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:delete_cookie 'my_test_cookie' />\n```\n\n----------------------------------------\n\nTITLE: Configuring CouchCMS Nicedit Editable Region Dimensions\nDESCRIPTION: Shows how to customize the visual dimensions of the 'nicedit' editor. The `width`, `height`, and `maxheight` parameters are used to set the initial width, initial height, and maximum expandable height of the editor interface in pixels.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/nicedit.md#_snippet_2\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='nicedit' label='Description' name='my_desc'\n    width='400'\n    height='200'\n    maxheight='600' />\n```\n\n----------------------------------------\n\nTITLE: HTML checkbox Input Type\nDESCRIPTION: Illustrates HTML checkboxes for selecting multiple options. Each checkbox has a unique 'value' attribute. Multiple checkboxes with the same 'name' can be selected, sending multiple values upon submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\nSelect your favorite cartoon characters.\n<input type=\"checkbox\" name=\"toon\" value=\"Goofy\">Goofy\n<input type=\"checkbox\" name=\"toon\" value=\"Donald\">Donald\n<input type=\"checkbox\" name=\"toon\" value=\"Bugs\">Bugs Bunny\n<input type=\"checkbox\" name=\"toon\" value=\"Scoob\">Scooby Doo\n```\n\n----------------------------------------\n\nTITLE: Nested Tag Parameters in CouchCMS (Deep Nesting)\nDESCRIPTION: Displays how tags can be nested as parameters of other tags, with multiple levels of nesting. The example demonstrates setting a message with deep nesting of 'show' tags, illustrating the process of replacing inner tags with their output during execution.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/setting-parameters.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set message=\"<cms:show \"<cms:show 'hello' />\" /> world\" />\n```\n\n----------------------------------------\n\nTITLE: Specifying an empty option in 'radio' options list for line break in CouchCMS\nDESCRIPTION: Demonstrates that including an empty option in opt_values creates a line break (&lt;BR&gt;). The empty option is denoted by consecutive delimiters with no content between them.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\nopt_values='Residential=0 | Commercial=1 | | Rental=2'\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential=0 | Commercial=1 | | Rental=2'\n  /\n```\n\n----------------------------------------\n\nTITLE: Custom separator in 'radio' options list with 'separator' parameter\nDESCRIPTION: Demonstrates changing the delimiter used between options by setting the separator parameter to a character other than the default '|'. Useful when options contain the default separator character.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential=0 * Commercial=1 * Rental=2'\n  separator='*'\n  type='radio'\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating PayPal Button with PayPal Images - CouchCMS\nDESCRIPTION: This snippet shows how to generate a PayPal button using one of the pre-defined images provided by PayPal. It uses the `paypal_button` tag, setting the `image` parameter to a number between 0 and 8. The number represents a specific PayPal button image.  The button will be displayed with the corresponding image.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/paypal_button.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:paypal_button image='3' />\n```\n\n----------------------------------------\n\nTITLE: Modifying the cms:form Tag for Data Binding\nDESCRIPTION: Shows how to convert a regular CouchCMS form into a data-bound form by adding masterpage and mode parameters. The masterpage parameter binds the form to a template, while mode='create' indicates the form will create new entries.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_5\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:form\n    masterpage=k_template_name\n    mode='create'\n    enctype='multipart/form-data'\n    method='post'\n    anchor='0'\n    >\n```\n\n----------------------------------------\n\nTITLE: Displaying the Content of a Text Editable Region\nDESCRIPTION: This snippet illustrates how to output the content of a 'text' type editable region using the `<cms:show>` tag. The variable name corresponds to the 'name' attribute defined in the `<cms:editable>` tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/text.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:show prop_title />\n```\n\n----------------------------------------\n\nTITLE: Adding Pagination to Comments Listing - CouchCMS\nDESCRIPTION: Implements pagination for the comments list using the CouchCMS paginator.  Requires some CSS styling to suit design needs. See Pagination documentation for a sample CSS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<cms:paginator count=k_comments_total_count limit='5' >\n  <cms:pagesize options='5,10,20' />\n  <cms:first_page />\n  <cms:prev_page />\n  <cms:current_page /> of <cms:total_pages />\n  <cms:next_page />\n  <cms:last_page />\n</cms:paginator>\n```\n\n----------------------------------------\n\nTITLE: Setting the default selected option in CouchCMS 'radio' editable\nDESCRIPTION: Shows how to specify which option is selected by default by setting opt_selected to the option's value or assigned value. This determines the initially checked radio button when the page loads.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/radio.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable\n  name=\"my_property_type\"\n  label=\"Property Type\"\n  desc=\"Select one from these\"\n  opt_values='Residential | Commercial | Rental'\n  opt_selected='Rental'\n  /\n```\n\n----------------------------------------\n\nTITLE: Ignoring CouchCMS Code Blocks\nDESCRIPTION: This code snippet demonstrates the use of the `<cms:ignore>` tag in CouchCMS.  It prevents the code within the tags from being executed. The `<cms:show>` tag outside the `<cms:ignore>` tag will output \"Hello \", while the `<cms:show>` tag inside the `<cms:ignore>` tag will be ignored.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/ignore.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:show 'Hello ' />\n<cms:ignore>\n    <cms:show 'world' />\n</cms:ignore>\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Password Editable Region (CouchCMS Tags)\nDESCRIPTION: Defines an editable region named 'my_password' in a CouchCMS template. It is configured as a 'password' type, which visually masks user input with asterisks. This tag must be placed within a valid CouchCMS template structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/password.md#_snippet_0\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable\n name='my_password'\n label='Password'\n desc='Enter your password'\n type='password'\n/>\n```\n\n----------------------------------------\n\nTITLE: Embedding the Menu Snippet in Templates\nDESCRIPTION: This snippet shows how to embed the created 'menu.html' snippet within each template of the website. The `cms:embed` tag includes the contents of the snippet into the current template. This facilitates reuse and centralizes the menu code.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed 'menu.html' />\n```\n\n----------------------------------------\n\nTITLE: Displaying Literal String using CouchCMS show tag (CouchCMS)\nDESCRIPTION: This snippet demonstrates using the CouchCMS 'show' tag to output a literal string directly onto the page. The string 'Hello World' is passed as the first and only parameter to the tag. This requires a CouchCMS environment.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/show.md#_snippet_0\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:show 'Hello World' />\n```\n\n----------------------------------------\n\nTITLE: Listing Comments using the comments tag - CouchCMS\nDESCRIPTION: Encloses a sample comment within the 'comments' tag to dynamically list approved comments associated with the current page. The 'page_id' parameter is set to 'k_page_id' to filter comments specifically for the current page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<cms:comments page_id=k_page_id >\n  ...\n</cms:comments>\n```\n\n----------------------------------------\n\nTITLE: Configuring Pretty URLs in CouchCMS (PHP)\nDESCRIPTION: This code snippet shows how to enable Pretty URLs in the CouchCMS configuration file. It involves modifying the K_PRETTY_URLS constant to enable the feature. This is a crucial step in setting up SEO-friendly URLs in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pretty-urls.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n// 8.\n// Set the following to '1' if you wish to enable Pretty URLS.\n// After enabling it, use gen_htaccess.php to generate an .htaccess file and place it in the root folder of your site.\ndefine( 'K_PRETTY_URLS', 0 );\n```\n\n----------------------------------------\n\nTITLE: Initializing Superfish on the Menu\nDESCRIPTION: This snippet initializes the Superfish plugin on the menu. It waits for the document to be ready and then applies the `.superfish()` method to the `ul.sf-menu` element.  This activates the dropdown functionality provided by Superfish.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/nested-pages-aka-menu-maker.md#_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n$(document).ready(function(){\n        $(\"ul.sf-menu\").superfish();\n    });\n```\n\n----------------------------------------\n\nTITLE: Building Documentation Site with Wintersmith (Shell)\nDESCRIPTION: Executes the Wintersmith build process to generate the static documentation website files. Requires Wintersmith to be installed (globally or locally) and the necessary source files and configuration to be present. This command should be executed in the 'src' directory.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/README.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nwintersmith build\n```\n\n----------------------------------------\n\nTITLE: Creating a unique anchor for each comment - CouchCMS\nDESCRIPTION: Generates a unique anchor for each listed comment using the 'k_comment_id' variable. This anchor is used for linking directly to specific comments from other pages or sections within the blog.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog-2.md#_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a name=\"comment-<cms:show k_comment_id />\"></a>\n```\n\n----------------------------------------\n\nTITLE: Specifying CouchCMS Nicedit Editable Region Toolbar Buttons\nDESCRIPTION: Illustrates how to control the buttons visible in the 'nicedit' toolbar. The `buttons` parameter accepts a comma-separated string of desired button names, allowing customization of the editing features available to the user.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/nicedit.md#_snippet_3\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:editable type='nicedit' label='Description' name='my_desc'\n    buttons='italic, bold' />\n```\n\n----------------------------------------\n\nTITLE: Enabling DataBound Forms Module in CouchCMS (PHP)\nDESCRIPTION: To enable the DataBound Forms module in CouchCMS 1.4, you need to uncomment (or add if upgrading) a specific line in the `kfunctions.php` file. This file is located in the `couch/addons` folder. Uncommenting this line activates the data-bound-form functionality.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once( K_COUCH_DIR.'addons/data-bound-form/data-bound-form.php' );\n```\n\n----------------------------------------\n\nTITLE: Using Nested Tags in the Set Tag in Couch CMS\nDESCRIPTION: Sets the value of 'message' to 'Hello World' by combining the 'greeting' variable with a string. This demonstrates using nested tags within the set tag parameters.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set.md#_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\n<cms:set message=\"<cms:show greeting /> World\" />\n```\n\n----------------------------------------\n\nTITLE: HTML textarea Element\nDESCRIPTION: Illustrates the HTML textarea element used for multi-line text input. The 'rows' and 'cols' attributes control the size of the textarea, while 'wrap' determines how text is wrapped. The 'name' attribute is used for form submission.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<textarea rows=\"5\" cols=\"20\" wrap=\"physical\" name=\"comments\">\n    Enter Comments Here\n</textarea>\n```\n\n----------------------------------------\n\nTITLE: Repeating Content with cms:repeat Tag - CouchCMS\nDESCRIPTION: This snippet demonstrates the usage of the paired `<cms:repeat>` tag in CouchCMS to repeat content a specified number of times. The `count` parameter determines the number of repetitions.  Content between the start and end tags is repeated.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/tags.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:repeat count='4'>\n    <h3>This heading will be repeated 4 times</h3>\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Creating Nested UL/LI Menu Structure with Extended Info\nDESCRIPTION: Demonstrates how to create a hierarchical menu using nested_pages with extended_info parameter to properly generate nested UL and LI tags.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_pages.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_pages masterpage='index.php' extended_info='1' >\n   <cms:if k_level_start ><ul></cms:if>\n   <cms:if k_element_start ><li>\n      <cms:show k_nestedpage_title />\n   </cms:if>\n   <cms:if k_element_end ></li></cms:if>\n   <cms:if k_level_end ></ul></cms:if>\n</cms:nested_pages>\n```\n\n----------------------------------------\n\nTITLE: Disabling CouchCMS Template Caching\nDESCRIPTION: Illustrates the use of the `<cms:no_cache />` tag within a CouchCMS template. Placing this tag prevents CouchCMS from caching the output of the template, which is crucial for displaying dynamic content like a shopping cart that changes frequently.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_18\n\nLANGUAGE: couchcms\nCODE:\n```\n<cms:no_cache />\n```\n\n----------------------------------------\n\nTITLE: Initializing CouchCMS Variables\nDESCRIPTION: This snippet initializes two CouchCMS variables, 'first_name' and 'last_name', with simple string literal values using the `<cms:set>` tag. These variables are used as examples in subsequent concatenation demonstrations.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/concat.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set first_name = 'John' />\n<cms:set last_name = 'Doe' />\n```\n\n----------------------------------------\n\nTITLE: Displaying Text with cms:show Tag - CouchCMS\nDESCRIPTION: This snippet demonstrates the usage of the self-closing `<cms:show>` tag in CouchCMS to display text. The tag takes a single, unnamed parameter which is the text to be displayed.  The output of this tag replaces the tag itself when the template is rendered.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/tags.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:show 'Hello World' />\n```\n\n----------------------------------------\n\nTITLE: Conditional Embedding of Form Snippet for Contact Page (CouchCMS Template Language)\nDESCRIPTION: This snippet embeds a form from 'contact-us.inc' when viewing the page named 'contact-us'. For other pages, it renders 'my_content'. Depends on the Embed tag, If tag, and an editable region named 'my_content'. The page name is checked via 'k_page_name'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_4\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if k_is_page >\n   <cms:if k_page_name=='contact-us' >\n      <cms:embed 'contact-us.inc' />\n   <cms:else />\n       <cms:show my_content />\n   </cms:if>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Defining an Image Editable Region in CouchCMS\nDESCRIPTION: Defines a standard CouchCMS editable region named 'my_image' of type 'image'. This region allows users to upload an image through the admin panel and serves as the source for associated thumbnail regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:editable name='my_image' label='Image' desc='Upload main image here' type=\"image\" />\n```\n\n----------------------------------------\n\nTITLE: Conditional Cart Table Display\nDESCRIPTION: Implementation of conditional logic to show the cart table only when there are items in the cart, otherwise showing an empty cart message.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_29\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:if \"<cms:pp_count_items />\" >\n    <div class=\"row\">\n        <div class=\"twelve columns\">\n            <cms:pp_cart_form>\n            ... contents truncated ...\n            </cms:pp_cart_form>\n        </div>\n    </div>\n<cms:else />\n    <div class=\"message\">\n        <p class=\"info\">Your cart is empty!</p>\n    </div>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: CouchCMS textarea Input Type\nDESCRIPTION: Presents the CouchCMS equivalent of the textarea HTML element. It uses the '<cms:input type='textarea' ... />' tag. The attributes 'rows', 'cols', 'wrap', and 'name' function similarly to the HTML textarea.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_8\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:input type='textarea' rows=\"5\" cols=\"20\" wrap=\"physical\" name=\"comments\">\n    Enter Comments Here\n</cms:input>\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm (Shell)\nDESCRIPTION: Installs the project dependencies listed in the package.json file within the current directory. Requires Node.js and npm to be installed. This command should be executed in the 'src' directory of the cloned repository.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/README.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Variables as Tag Parameters in CouchCMS\nDESCRIPTION: Shows how to assign variables as parameters to tags, where variables are used without quotes. Examples include setting a variable and passing it to 'repeat' count, emphasizing the importance of quotes for explicit values versus variables.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/setting-parameters.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show k_template_name />\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:set my_count='4' />\n<cms:repeat count=my_count>\n    This line gets repeated\n</cms:repeat>\n```\n\n----------------------------------------\n\nTITLE: Specifying Multiple Tags for Ignore Parameter in CouchCMS\nDESCRIPTION: Illustrates the correct syntax for the `ignore` parameter when multiple HTML tags need to be excluded from the excerpt generated by the CouchCMS `excerptHTML` tag. Tags are listed as a comma-separated string value.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/excerpthtml.md#_snippet_2\n\nLANGUAGE: CouchCMS\nCODE:\n```\nignore='img, table'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination - CouchCMS Template\nDESCRIPTION: This snippet shows the basic configuration for enabling pagination on a CouchCMS tag. The `limit` parameter sets the number of items per page, and the `paginate='1'` parameter explicitly enables pagination functionality.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/pagination.md#_snippet_0\n\nLANGUAGE: CouchCMS Template\nCODE:\n```\n<cms:pages masterpage='blog.php' limit='10' paginate='1'>\n    <!-- All the variables can be accessed here -->\n</cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying Editable Image Region and Creating Its Thumbnail Using CouchCMS Tags in HTML\nDESCRIPTION: This snippet shows how to output an editable image region named 'my_image' and create a thumbnail from it using the CouchCMS tag syntax. The '<cms:show my_image />' outputs the URL of the uploaded image, whereas '<cms:thumbnail my_image width='150' />' dynamically generates and outputs a thumbnail of specified width from the editable image. This approach enables dynamic thumbnail generation linked directly to user-uploaded content within the CMS backend.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/thumbnail.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"<cms:show my_image />\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"<cms:thumbnail my_image width='150' />\" />\n```\n\n----------------------------------------\n\nTITLE: Unified Handling of All List-Views with 'pages' Tag - HTML, Couch Tag Language\nDESCRIPTION: This snippet provides a unified approach by using <cms:if k_is_list> to cover all list-views (home, folder, archive) in one block. The <cms:pages> tag is called with parameters for folder, subfolders, and archive date range; unused parameters in a given context have no effect. Requires CouchCMS variables to be set as appropriate for the current view. Output is a flexible list of pages that adapts to the current template context.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/listing-pages.md#_snippet_4\n\nLANGUAGE: HTML, Couch Tag Language\nCODE:\n```\n<cms:if k_is_list >\n    <cms:pages folder=k_folder_name include_subfolders='1' start_on=k_archive_date stop_before=k_next_archive_date >\n        <!-- All the variables of each page belonging to this view are available here -->\n    </cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with Global Scope in Couch CMS\nDESCRIPTION: Sets a variable 'message' with a global scope, making it accessible throughout the template. This demonstrates using the optional scope parameter with a named parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set.md#_snippet_3\n\nLANGUAGE: markup\nCODE:\n```\n<cms:set message='hello' scope='global' />\n```\n\n----------------------------------------\n\nTITLE: Conditional Rendering with If and Show Tags (CouchCMS Template Language)\nDESCRIPTION: This snippet conditionally renders the 'my_content' editable region if the current page is being viewed (checked via k_is_page). No additional dependencies are required. The variable 'my_content' must be defined as an editable region in the template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/exists.md#_snippet_3\n\nLANGUAGE: CouchCMS Template Language\nCODE:\n```\n<cms:if k_is_page >\n   <cms:show my_content />\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Dynamic File Link Cloaking with Admin Path\nDESCRIPTION: Using the k_admin_link variable with cloak_url to dynamically generate the correct path to a secure file rather than hardcoding the URL.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"<cms:cloak_url link=\"<cms:show k_admin_link/>uploads/file/secure/test.jpg\" />\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Setting Flat Rate Per Order in Config.php\nDESCRIPTION: This snippet sets a flat shipping rate per order in the '_addons/cart/config.php_' file. It specifies a fixed shipping cost regardless of the number of items in the order.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['shipping_flat_rate_per_order'] = '5';\n```\n\n----------------------------------------\n\nTITLE: Serving Static RSS Feed with CouchCMS Integration - PHP & Couch Tag\nDESCRIPTION: This snippet demonstrates a full PHP file that includes CouchCMS, sets the content type to text/xml, safely builds the XML header, and statically adds news items in RSS format. Prerequisites include CouchCMS (require_once) and setting k_site_charset. Parameters such as news title, link, and description are hardcoded. No dynamic news item pulling occurs.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/rss-feeds.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n<cms:content_type 'text/xml' /><cms:concat '<' '?xml version=\"1.0\" encoding=\"' k_site_charset '\"?' '>' />\n<rss version=\"2.0\">\n  <channel>\n    <title>My Explosive News</title>\n    <link>http://www.mysite.com</link>\n    <description>News and articles written by me</description>\n    <language>en-us</language>\n    <pubDate>10 Jul 2007</pubDate>\n\n    <item>\n        <title>My Second News</title>\n        <link>http://www.mysite.com/breaking/my-second-news.html</link>\n        <description>This is my second news item.</description>\n        <pubDate>10 Jul 2007</pubDate>\n    </item>\n\n    <item>\n        <title>My First News</title>\n        <link>http://www.mysite.com/my-first-news.html</link>\n        <description>This is my first news item.</description>\n        <pubDate>10 Jul 2007</pubDate>\n    </item>\n  </channel>\n</rss>\n<?php COUCH::invoke(); ?>\n```\n\n----------------------------------------\n\nTITLE: Outputting XML Declaration Safely in CouchCMS - Couch Tag Syntax\nDESCRIPTION: This snippet uses CouchCMS's concat tag to safely output the XML declaration inside a PHP file, circumventing PHP's parsing issues with the '<?' sequence. It requires CouchCMS and that the k_site_charset variable is properly set in config.php. Output is the XML declaration line suitable as the first line in an RSS feed; all characters are handled so PHP is not confused by XML headers.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/rss-feeds.md#_snippet_2\n\nLANGUAGE: Couch Tag\nCODE:\n```\n<cms:concat '<' '?xml version=\"1.0\" encoding=\"' k_site_charset '\"?' '>' />\n```\n\n----------------------------------------\n\nTITLE: Enumerating Templates with CouchCMS Templates Tag\nDESCRIPTION: This code snippet demonstrates how to use the `<cms:templates>` tag in CouchCMS to enumerate all templates. It includes the `show_hidden` attribute to include hidden templates and utilizes the `<cms:dump />` tag to display the template data.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/templates.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:templates show_hidden='1' order='desc'>\n    <cms:dump />\n</cms:templates>\n```\n\n----------------------------------------\n\nTITLE: Forcing File Download with Cloaked Links\nDESCRIPTION: Setting the force_download parameter to ensure files are downloaded rather than displayed in the browser, regardless of file type.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"\n    <cms:cloak_url\n    link='http://yoursite.com/couch/uploads/file/secure/test.jpg'\n    force_download='1'\n    />\n\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Navigation Cart Display\nDESCRIPTION: Implementation of dynamic cart information in the navigation bar using CouchCart tags to show current item count and total.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_33\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<a href=\"<cms:pp_cart_link />\" class=\"nav cart\"><span class=\"quantity\"><cms:pp_count_items /></span> item(s) - $<span class=\"price\"><cms:number_format \"<cms:pp_total />\" /></span></a>\n```\n\n----------------------------------------\n\nTITLE: Modified HTML Checkout Submit Button for CouchCMS\nDESCRIPTION: Demonstrates modifying an HTML submit button by adding the `name=\"checkout\"` attribute, making it compatible with CouchCMS's `pp_cart_form` for checkout initiation.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_35\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"button checkout-button\" type=\"submit\" name=\"checkout\" value=\"Checkout\">\n```\n\n----------------------------------------\n\nTITLE: Creating an Unordered List from Folders in CouchCMS\nDESCRIPTION: This snippet creates an unordered HTML list from the folder hierarchy using the `folders` tag and the `extended_info` parameter.  It utilizes `k_level_start`, `k_element_start`, `k_element_end`, and `k_level_end` variables to construct the `<ul>` and `<li>` tags.  The `childof` parameter restricts the listing to the 'world' folder.  This snippet provides full control over the list's HTML structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/using-folders.md#_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:folders masterpage='news.php' childof='world' hierarchical='1' extended_info='1'>\n    <cms:if k_level_start ><UL></cms:if>\n    <cms:if k_element_start ><LI>\n        <cms:show k_folder_title />\n    </cms:if>\n    <cms:if k_element_end ></LI></cms:if>\n    <cms:if k_level_end ></UL></cms:if>\n</cms:folders>\n```\n\n----------------------------------------\n\nTITLE: Implementing Quantity Update Input Field\nDESCRIPTION: Modified input field with dynamic name and value attributes to enable quantity updating functionality in CouchCart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_26\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<td class=\"col-quantity\"><input name=\"qty[<cms:show line_id />]\" class=\"quantity-input\" type=\"number\" step=\"1\" value=\"<cms:show quantity />\" ></td>\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in CouchCMS\nDESCRIPTION: Code snippet for formatting dates in CouchCMS using the date tag with a custom format parameter to display dates in a specific style.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:date k_page_date format='jS M, y'/>\n```\n\n----------------------------------------\n\nTITLE: Filtering Related Pages by Folder in CouchCMS\nDESCRIPTION: Shows how to limit the relation region to display only pages from a specific folder.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/relation.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:editable type='relation' name='artist_albums' masterpage='albums.php' folder='classical' />\n```\n\n----------------------------------------\n\nTITLE: Direct Code Embedding Using Variable\nDESCRIPTION: Shows how to embed code directly by first storing it in a variable and then using the 'code' parameter.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"right\">\n    <cms:set my_var=\"<b class='title'><cms:show 'Hello world' /></b>\" />\n    <cms:embed code=my_var />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Displaying a CouchCMS Thumbnail\nDESCRIPTION: Outputs the URL of the generated thumbnail associated with the 'my_image_thumb' editable region using the `cms:show` tag within an HTML `<img>` tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/thumbnail.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<img src=\"<cms:show my_image_thumb />\" />\n```\n\n----------------------------------------\n\nTITLE: Basic File Embedding in CouchCMS\nDESCRIPTION: Demonstrates how to embed an external file ('header.inc') stored in the 'couch/snippets' folder into a CouchCMS template.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:embed 'header.inc' />\n```\n\n----------------------------------------\n\nTITLE: Basic File Link Cloaking in CouchCMS\nDESCRIPTION: Using cloak_url to secure access to a file stored in a protected directory, preventing direct access to the actual file location.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"<cms:cloak_url link='http://yoursite.com/couch/uploads/file/secure/test.jpg' />\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Original Item Removal Link in HTML\nDESCRIPTION: The HTML structure for the remove item link that needs to be modified to work with CouchCart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_27\n\nLANGUAGE: HTML\nCODE:\n```\n<td class=\"col-remove\"><a href=\"cart.html?action=remove\" class=\"cart-remove\" title=\"Remove\">&times;<span class=\"screen-reader\">Remove</span></a></td>\n```\n\n----------------------------------------\n\nTITLE: Implementing Item Removal with CouchCart\nDESCRIPTION: Modified removal link using CouchCart's pp_remove_item_link tag to enable item removal from cart.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_28\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<td class=\"col-remove\"><a href=\"<cms:pp_remove_item_link />\" class=\"cart-remove\" title=\"Remove\">&times;<span class=\"screen-reader\">Remove</span></a></td>\n```\n\n----------------------------------------\n\nTITLE: Custom Separator Configuration in CouchCMS\nDESCRIPTION: Example of changing the default separators for validators and error messages to avoid conflicts with regex patterns.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_24\n\nLANGUAGE: html\nCODE:\n```\nseparator='#'\nval_separator=':'\n```\n\n----------------------------------------\n\nTITLE: Customizing Option and Value Separators - CouchCMS HTML\nDESCRIPTION: Demonstrates customizing the separators used between options and between label/value pairs within 'opt_values' and 'opt_selected'. The 'separator' parameter replaces the default '|', and 'val_separator' replaces '='. Useful when display or value strings may contain reserved characters. Requires standard CouchCMS region definitions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/checkbox.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:editable name=\"my_categories\" label=\"Categories\" desc=\"Check all applicable\"\n  opt_values='Entertainment=0 * Computers=1 * Sports=2 * Health=3'\n  opt_selected = '1 * 3'\n  separator='*'\n  type='checkbox'\n/>\n```\n\nLANGUAGE: HTML\nCODE:\n```\nval_separator=':'\n```\n\n----------------------------------------\n\nTITLE: Original HTML Checkout Submit Button\nDESCRIPTION: Shows the initial state of an HTML submit button intended for initiating the checkout process before modification for CouchCMS integration.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_34\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"button checkout-button\" type=\"submit\" value=\"Begin Checkout\">\n```\n\n----------------------------------------\n\nTITLE: Enforcing Non-Zero Decimal Values in CouchCMS\nDESCRIPTION: Example of using the 'non_zero_decimal' validator to restrict input to only decimal values larger than 0 in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_16\n\nLANGUAGE: html\nCODE:\n```\nvalidator='non_zero_decimal'\n```\n\n----------------------------------------\n\nTITLE: Example HTML Structure with Embedded Content\nDESCRIPTION: Shows a simple HTML div structure with content that could be extracted into a reusable snippet.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"right\">\n    <b class=\"title\"><cms:show 'Hello World' /></b>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Example PayPal IPN Debug Log Output - Pseudo-Log\nDESCRIPTION: This example shows typical output in the IPN processing log file when handling a PayPal transaction via the paypal_processor tag. It captures all variables received, the verification process with PayPal, validation checks, and the final result of the transaction. The values shown are illustrative and may vary; the log helps diagnose issues and verify correct processing.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/paypal.md#_snippet_5\n\nLANGUAGE: Pseudo-Log\nCODE:\n```\n=======================[25-Jul-2010 10:08:22 PM]=======================\nReceived paypal IPN:\n\nmc_gross = 13.68\nprotection_eligibility = Ineligible\npayer_id = 38UYXKJAJW7VJ\ntax = 0.00\npayment_date = 22:08:18 Jul 25, 2010 PDT\npayment_status = Completed\ncharset = windows-1252\nfirst_name = Test\nmc_fee = 0.70\nnotify_version = 3.0\ncustom =\npayer_status = verified\nbusiness = seller_3272492192_biz@gmail.com\nquantity = 3\nverify_sign = AFcWxV21C7fd0v3bYYYRCpSSRl31AmmFHoB9fY1YRiGSb9s-pX-wTi.c\npayer_email = buyer_3272492155_per@gmail.com\ntxn_id = 8HA76708L29474809\npayment_type = instant\nlast_name = User\nreceiver_email = seller_3272492192_biz@gmail.com\npayment_fee = 0.70\nreceiver_id = H2D8CMM9EY86G\ntxn_type = web_accept\nitem_name = My First Product\nmc_currency = USD\nitem_number = 1\nresidence_country = US\ntest_ipn = 1\nhandling_amount = 0.00\ntransaction_subject = My First Product\npayment_gross = 13.68\nshipping = 0.00\n\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nConnecting to paypal for verification..\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nConnected\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nVERIFIED\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nCouch validating transaction..\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nTransaction OK\n\n=======================[25-Jul-2010 10:08:23 PM]=======================\nExiting\n```\n\n----------------------------------------\n\nTITLE: Setting Tax Percentage in PHP\nDESCRIPTION: Code snippet showing how to configure a fixed tax percentage to be applied to the cart's total value in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-2.md#_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\n$pp['tax_percent'] = '10';\n```\n\n----------------------------------------\n\nTITLE: Displaying Page Title in CouchCMS\nDESCRIPTION: Code snippet for displaying the title of the current page in CouchCMS using the k_page_title system variable.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/blog.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:show k_page_title />\n```\n\n----------------------------------------\n\nTITLE: Custom Error Messages with Custom Separators in CouchCMS\nDESCRIPTION: Example of setting custom error messages using the modified separators for different validation conditions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_26\n\nLANGUAGE: html\nCODE:\n```\nvalidator_msg='required:Please enter something # min_len:Too short!'\n```\n\n----------------------------------------\n\nTITLE: Enforcing Non-Negative Decimal Values in CouchCMS\nDESCRIPTION: Example of using the 'non_negative_decimal' validator to restrict input to only non-negative decimal values in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_15\n\nLANGUAGE: html\nCODE:\n```\nvalidator='non_negative_decimal'\n```\n\n----------------------------------------\n\nTITLE: Enforcing Non-Negative Integer Values in CouchCMS\nDESCRIPTION: Example of using the 'non_negative_integer' validator to restrict input to only non-negative integer values in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_12\n\nLANGUAGE: html\nCODE:\n```\nvalidator='non_negative_integer'\n```\n\n----------------------------------------\n\nTITLE: Protecting Files with .htaccess Configuration\nDESCRIPTION: Apache .htaccess configuration to prevent direct access to files by disabling directory listing and denying all direct requests.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_2\n\nLANGUAGE: Apache\nCODE:\n```\nOptions All -Indexes\ndeny from all\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Validators in CouchCMS\nDESCRIPTION: Example of applying multiple validators together using the pipe character as a separator in CouchCMS editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_21\n\nLANGUAGE: html\nCODE:\n```\nvalidator='alpha_num | min_len=6 | max_len=14'\n```\n\n----------------------------------------\n\nTITLE: Incrementing Variable by Specific Value - CouchCMS Tags\nDESCRIPTION: Following the initialization, this snippet demonstrates the `incr` tag by incrementing the value of the `my_value` variable by '2'. The `incr` tag takes the variable name as the first parameter and the increment value as the second. The updated value is then displayed using the `show` tag. This requires the `incr` tag to be available and the variable to be previously set.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/incr.md#_snippet_1\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:incr my_value '2' />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: Enforcing Decimal Values in CouchCMS\nDESCRIPTION: Example of using the 'decimal' validator to restrict input to only decimal numeric values in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_14\n\nLANGUAGE: html\nCODE:\n```\nvalidator='decimal'\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Length Validator in CouchCMS\nDESCRIPTION: Example of using the 'max_len' validator to enforce a maximum character length for input in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\nvalidator='max_len=20'\n```\n\n----------------------------------------\n\nTITLE: Enforcing Integer Values in CouchCMS\nDESCRIPTION: Example of using the 'integer' validator to restrict input to only integer values in editable regions.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable.md#_snippet_11\n\nLANGUAGE: html\nCODE:\n```\nvalidator='integer'\n```\n\n----------------------------------------\n\nTITLE: Restricting Cloaked Links to Authorized Users\nDESCRIPTION: Using the access_level parameter to limit file access to authenticated users with a specific permission level (4 or higher).\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"\n    <cms:cloak_url\n    link=\"http://yoursite.com/couch/uploads/file/secure/test.jpg\"\n    force_download='1'\n    access_level='4'\n    />\n\">Test Link</a>\n```\n\n----------------------------------------\n\nTITLE: Incrementing Variable by Default Value - CouchCMS Tags\nDESCRIPTION: This snippet shows the `incr` tag used without the optional second parameter. In this case, the `my_value` variable is incremented by the default value of 1. The result of this increment is then displayed using the `show` tag, demonstrating the effect of omitting the increment value parameter. This requires the `incr` tag and the variable to be previously set.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/incr.md#_snippet_2\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:incr my_value />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: Resulting HTML for Cloaked Email (JavaScript Enabled)\nDESCRIPTION: Shows the HTML '<a>' tag that is generated by the 'cloak_email' tag when the page is accessed by a browser with JavaScript enabled. This link is not present in the raw HTML source.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/cloak_email.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"mailto:johndoe@gmail.com\">johndoe@gmail.com</a>\n```\n\n----------------------------------------\n\nTITLE: Setting Start Count for Variables - CouchCMS Tag\nDESCRIPTION: This snippet sets the starting value for pagination-related variables (like `k_count`, `k_record_from`) to 0 instead of the default 1, using the `startcount` parameter. This is useful for zero-based indexing.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/pages.md#_snippet_12\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:pages masterpage='blog.php' startcount='0'></cms:pages>\n```\n\n----------------------------------------\n\nTITLE: Displaying Editable Region Value (CouchCMS Tags)\nDESCRIPTION: Accesses and outputs the value stored in the 'my_password' editable region using the standard CouchCMS `<cms:show>` tag. This tag is used to render the content of an editable region within the template output. It requires the 'my_password' editable region to have been previously defined.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/password.md#_snippet_1\n\nLANGUAGE: CouchCMS Tags\nCODE:\n```\n<cms:show my_password />\n```\n\n----------------------------------------\n\nTITLE: CouchCMS fieldset Tag\nDESCRIPTION: Illustrates the use of the CouchCMS '<cms:fieldset>' tag to group related form elements.  It outputs HTML fieldset, dl, dt, and dd tags to create a semantically correct form structure.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_18\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:fieldset>\n    <cms:input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\" required='1' />\n    <cms:input type=\"password\" size=\"10\" maxlength=\"10\" name=\"password\" />\n</cms:fieldset>\n```\n\n----------------------------------------\n\nTITLE: Formatting Number with Default Precision - CouchCMS Tag\nDESCRIPTION: Demonstrates the basic usage of the `number_format` tag with a large integer. It formats the number using default decimal precision (2 places), default thousands separator (comma), and default decimal character (period). The expected output includes commas for thousands separators and `.00` at the end.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/number_format.md#_snippet_0\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:number_format '1234567890' />\n```\n\n----------------------------------------\n\nTITLE: Defining Text Box Option\nDESCRIPTION: This code snippet shows how to define a text box option within the product variants. It utilizes '*TEXT*' to indicate the text box option-value and allows buyers to input custom text. This provides flexibility to the product.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nYour Message[*TEXT*]\n```\n\n----------------------------------------\n\nTITLE: Formatting Number without Decimal Places - CouchCMS Tag\nDESCRIPTION: Shows how to use the `number_format` tag to format a number without any decimal places. It utilizes the `decimal_precision` parameter set to '0'. The default thousands separator (comma) is still applied.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/number_format.md#_snippet_1\n\nLANGUAGE: CouchCMS Tag\nCODE:\n```\n<cms:number_format '1234567890' decimal_precision='0' />\n```\n\n----------------------------------------\n\nTITLE: Making Error Messages Visible with Inline CSS\nDESCRIPTION: Shows how to override the default 'display: none' style by adding inline style to make error message paragraphs visible when validation fails.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<span class=\"error\">This field is required.</span>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<span class=\"error\" style=\"display:block\">This field is required.</span>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Form for Job Application\nDESCRIPTION: This is a simplified HTML form designed for job applications. It includes fields for first name, last name, email address, portfolio website, position applied for, salary requirements, and resume upload.  The form uses the POST method.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<form method=\"post\">\n\n    <label>First Name</label>\n    <input name=\"first_name\" type=\"text\">\n    <br />\n\n    <label>Last Name</label>\n    <input name=\"last_name\" type=\"text\">\n    <br />\n\n    <label>Email Address</label>\n    <input name=\"email\" type=\"text\">\n    <br />\n\n    <label>Portfolio Website</label>\n    <input name=\"portfolio\" type=\"text\" >\n    <br />\n\n    <label>Which position are you applying for? </label>\n    <select name=\"position\">\n        <option selected=\"selected\"></option>\n        <option>Interface Designer</option>\n        <option>Software Engineer</option>\n        <option>Systems Administrator</option>\n        <option>Office Manager</option>\n    </select>\n    <br />\n\n    <label>Salary Requirements</label>\n    <input name=\"salary\" type=\"text\">\n    <br />\n\n    <label>Attach a Copy of Your Resume</label>\n    <input name=\"resume\" type=\"file\">\n    <p>Word or PDF Documents Only</p>\n    <br />\n\n    <button type=\"submit\">Submit Application</button>\n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Customizing Interface Labels in Language File in PHP\nDESCRIPTION: This code snippet shows modifications in the language translation file (e.g., 'EN.php') to change the admin panel and login box titles. Editing these lines update the displayed labels in the admin interface for branding purposes.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/miscellaneous/white-label.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n// Addendum to Version 1.1 /////////////////////////////////////\n```\n\nLANGUAGE: PHP\nCODE:\n```\n// Admin Panel\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$t['admin_panel'] = 'Admin Panel';\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$t['login_title'] = 'CouchCMS';\n```\n\n----------------------------------------\n\nTITLE: Defining a 'textarea' editable region with default text omitted based on implicit default\nDESCRIPTION: Demonstrates that omitting the 'type' parameter defaults the editable region to 'textarea'. This example emphasizes that explicit specification of 'type' is optional since 'textarea' is the default.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/editable/textarea.md#_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<cms:editable\n  name='prop_desc'\n  label='Description'\n  desc='Enter description of property here'>\n    Condo pricing starts at just under $700,000. Waterfront Private Residences. Jack Nicklaus\n    Signature Golf Course.\n</cms:editable>\n```\n\n----------------------------------------\n\nTITLE: Conditional Listing for Archive-View with 'pages' Tag - HTML, Couch Tag Language\nDESCRIPTION: This snippet uses a conditional <cms:if k_is_archive> to detect archive views in CouchCMS. It utilizes the variables 'k_archive_date' and 'k_next_archive_date' as filter parameters for the <cms:pages> tag to fetch pages published within the archive period. Dependencies include CouchCMS context variables being set for archive views. Output is a list of pages matching the date range constraints.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/listing-pages.md#_snippet_3\n\nLANGUAGE: HTML, Couch Tag Language\nCODE:\n```\n<cms:if k_is_archive >\n    <cms:pages start_on=k_archive_date stop_before=k_next_archive_date >\n        <!-- All the variables of each page belonging to this archive period are available here -->\n    </cms:pages>\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Calculating Modulo using CouchCMS tag\nDESCRIPTION: This snippet demonstrates how to use the `<cms:mod>` tag in CouchCMS. It first sets a variable named `my_count` and then applies the `mod` tag to this variable and a literal value '5' to calculate and output the remainder of the division.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/mod.md#_snippet_0\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set my_count='23' />\n<cms:mod my_count '5' />\n```\n\n----------------------------------------\n\nTITLE: Formatting Page Date with CouchCMS date Tag - Markup\nDESCRIPTION: Outputs the value of the k_page_date variable using the <cms:date /> tag. Requires CouchCMS to provide the k_page_date variable in Y-m-d H:i:s format. No additional parameters are set, so the output uses the default format. Expects k_page_date as input and returns a formatted date string.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/date.md#_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n<cms:date k_page_date />\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of get Tag - HTML\nDESCRIPTION: This snippet illustrates what happens when the `get` tag is used incorrectly in CouchCMS.  Omitting the quotes around the variable name in the `get` tag will cause it to attempt to retrieve the value of a variable whose name is the value '10', instead of the variable named 'my_var'.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/get.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:set my_var='10' />\n<cms:get my_var />\n```\n\n----------------------------------------\n\nTITLE: Concatenating Strings Directly in CouchCMS\nDESCRIPTION: Demonstrates a method of concatenating literal strings and variable values within a `<cms:set>` tag by directly embedding variables using the `<cms:show>` tag. This is presented as an alternative to using the `<cms:concat>` tag, though it requires wrapping each variable in `<cms:show />`.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/concat.md#_snippet_1\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set welcome_message=\"Hello <cms:show first_name/> <cms:show last_name/>! We welcome you!\" />\n```\n\n----------------------------------------\n\nTITLE: HTML: Original Add to Cart Form Structure\nDESCRIPTION: Shows a standard HTML form element used for submitting data to add a product to a shopping cart. This structure is presented as the starting point before being replaced by the CouchCart-specific tag.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<form class=\"cart-form\" action=\"cart.html\" method=\"post\" accept-charset=\"utf-8\">\n    <div class=\"product-top-box\">\n\n    ... content truncated ...\n\n    </div>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Subtracting Values in CouchCMS\nDESCRIPTION: This snippet demonstrates the usage of the `sub` tag in CouchCMS. The tag subtracts the second parameter ('1' in this case) from the value of the variable `my_count`.  The output will be the result of the subtraction.  The snippet uses a CouchCMS tag which is self-closing.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/sub.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:sub my_count '1' />\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic CouchCMS Form with Flash Notification\nDESCRIPTION: A complete CouchCMS form implementation with success notification handling, error display, and basic text inputs. The form uses flash messages to display success notifications across page loads.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/databound-forms.md#_snippet_4\n\nLANGUAGE: CouchCMS\nCODE:\n```\n<cms:set submit_success=\"<cms:get_flash 'submit_success' />\" />\n<cms:if submit_success >\n    <h4>Success: Your application has been submitted.</h4>\n</cms:if>\n\n<cms:form method='post' anchor='0'>\n\n    <cms:if k_success >\n        <cms:set_flash name='submit_success' value='1' />\n        <cms:redirect k_page_link />\n    </cms:if>\n\n    <cms:if k_error >\n        <div class=\"error\">\n            <cms:each k_error >\n                <br><cms:show item />\n            </cms:each>\n        </div>\n    </cms:if>\n\n    <label>First Name</label>\n    <cms:input name=\"first_name\" type=\"text\" />\n    <br />\n\n    <label>Last Name</label>\n    <cms:input name=\"last_name\" type=\"text\" />\n    <br />\n\n    <label>Email Address</label>\n    <cms:input name=\"email\" type=\"text\" />\n    <br />\n\n    <label>Portfolio Website</label>\n    <cms:input name=\"portfolio\" type=\"text\" />\n    <br />\n\n    <label>Which position are you applying for? </label>\n    <cms:input name=\"position\" type=\"text\" />\n    <br />\n\n    <label>Salary Requirements</label>\n    <cms:input name=\"salary\" type=\"text\" />\n    <br />\n\n    <label>Attach a Copy of Your Resume</label>\n    <cms:input name=\"resume\" type=\"text\" />\n    <p>Word or PDF Documents Only</p>\n    <br />\n\n    <cms:if \"<cms:not submit_success />\" >\n        <button type=\"submit\">Submit Application</button>\n    </cms:if>\n\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Decrementing Variable by Default Value in CouchCMS\nDESCRIPTION: This snippet shows how to decrement the CouchCMS variable `my_value` by the default value of 1. It uses the `decr` tag with only the variable name as a parameter.  `my_value` is assumed to have been previously set. The expected output after decrementing is 8.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/decr.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cms:decr my_value />\n<cms:show my_value />\n```\n\n----------------------------------------\n\nTITLE: HTML Structure Using Embed Tag\nDESCRIPTION: Shows how to modify HTML structure to use an embedded snippet file instead of inline content.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/embed.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"right\">\n    <cms:embed 'greeting.inc' />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Modifying Form Closing Tag for Couch CMS\nDESCRIPTION: Shows how to update the HTML form closing tag to its Couch CMS equivalent by adding the 'cms:' prefix.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/contact-form.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n</form>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n</cms:form>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Form for Contact Information\nDESCRIPTION: A simple HTML form that submits user name and email to a PHP script named contact.php. Serves as a baseline before converting to Couch form.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/forms.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<form method=\"post\" action=\"contact.php\">\n    Name: <input type=\"text\" size=\"10\" maxlength=\"40\" name=\"name\"> <br />\n    Email: <input type=\"text\" size=\"10\" name=\"email\"> <br />\n    <input type=\"submit\" value=\"Send\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Basic Link Without Cloaking in HTML\nDESCRIPTION: A standard HTML anchor tag without any URL cloaking, showing a simple link to Google.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/cloaked-links.md#_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"http://www.google.com\" >Visit Site</a>\n```\n\n----------------------------------------\n\nTITLE: Displaying system variables in CouchCMS\nDESCRIPTION: These snippets demonstrate how to display system variables like the template name and page link that are automatically set by CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cms:show k_template_name />\n```\n\nLANGUAGE: html\nCODE:\n```\n<cms:show k_page_link />\n```\n\n----------------------------------------\n\nTITLE: Using nested_crumbs as a Self-Closing Tag in CouchCMS\nDESCRIPTION: Basic implementation of the nested_crumbs tag as a self-closing element. The masterpage parameter points to the template behind the nested-pages tree.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/nested_crumbs.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cms:nested_crumbs masterpage='index.php' />\n```\n\n----------------------------------------\n\nTITLE: Displaying a static value with the show tag in CouchCMS\nDESCRIPTION: This snippet shows how to display a static string 'Hello' using the show tag in CouchCMS.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/variables.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cms:show 'Hello' />\n```\n\n----------------------------------------\n\nTITLE: Initializing CouchCMS Integration in PHP\nDESCRIPTION: Includes the core CouchCMS engine file (`cms.php`) using `require_once`. This line must be placed at the very beginning of the PHP template file to enable CouchCMS functionality. The path 'couch/cms.php' assumes the CouchCMS admin folder is named 'couch'; adjust if renamed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tutorials/portfolio-site/about-us.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php require_once( 'couch/cms.php' ); ?>\n```\n\n----------------------------------------\n\nTITLE: Adding load_edit tag to enable on-page editing scripts\nDESCRIPTION: This HTML snippet inserts the '<cms:load_edit />' tag into the template's head section to load all necessary JavaScript and CSS assets required for on-page editing functionalities, facilitating the injection of editing controls into the page.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/on-page-editing.md#_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:load_edit />\n```\n\n----------------------------------------\n\nTITLE: Setting Variables with Unnamed Scope Parameter in Couch CMS\nDESCRIPTION: Sets a variable 'message' with a global scope using the unnamed second parameter. This demonstrates an alternative syntax for specifying scope.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/tags-reference/set.md#_snippet_4\n\nLANGUAGE: markup\nCODE:\n```\n<cms:set message='hello' 'global' />\n```\n\n----------------------------------------\n\nTITLE: Advanced Nested Tags with Conditional and File Inclusion in CouchCMS\nDESCRIPTION: Presents a complex example involving nested 'show', 'exists', 'if', and 'embed' tags to conditionally include page-specific content files based on file existence. Demonstrates resolving each tag step-by-step as their outputs influence subsequent tags, illustrating advanced nesting and logic.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/setting-parameters.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<cms:if \"<cms:exists \"<cms:show k_page_name/>.inc\" />\" >\n    <cms:embed \"<cms:show k_page_name/>.inc\" />\n</cms:if>\n```\n\n----------------------------------------\n\nTITLE: Installing Wintersmith Globally with npm (Shell)\nDESCRIPTION: Installs the Wintersmith static site generator globally on the system, making the 'wintersmith' command available from any directory. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/README.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install wintersmith -g\n```\n\n----------------------------------------\n\nTITLE: Original Navigation Cart Display\nDESCRIPTION: The original HTML structure showing cart information in the navigation bar.\nSOURCE: https://github.com/couchcms/documentation/blob/gh-pages/src/contents/concepts/shopping-cart-1.md#_snippet_32\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"cart.html\" class=\"nav cart\"><span class=\"quantity\">3</span> item(s) - $<span class=\"price\">250.00</span></a>\n```"
  }
]
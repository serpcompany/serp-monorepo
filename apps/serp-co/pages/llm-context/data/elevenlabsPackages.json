[
  {
    "owner": "elevenlabs",
    "repo": "packages",
    "content": "TITLE: Initializing Conversation with ElevenLabs AI\nDESCRIPTION: Code to initialize a Conversation instance with ElevenLabs, which establishes a websocket connection and enables microphone communication.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst conversation = await Conversation.startSession(options);\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Conversation Hook\nDESCRIPTION: Basic initialization of the useConversation hook for managing websocket connections and audio\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst conversation = useConversation();\n```\n\n----------------------------------------\n\nTITLE: Requesting Microphone Access in Browser\nDESCRIPTION: Code snippet demonstrating how to properly request microphone access and handle potential permission errors in the browser.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// call after explaning to the user why the microphone access is needed\n// handle errors and show appropriate message to the user\ntry {\n  await navigator.mediaDevices.getUserMedia();\n} catch {\n  // handle error\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Microphone Access\nDESCRIPTION: Code for requesting and handling microphone access permissions\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\ntry {\n  await navigator.mediaDevices.getUserMedia();\n} catch {\n  // handle error\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Conversation Overrides for Dynamic Configuration\nDESCRIPTION: Code demonstrating how to override various conversation settings like agent prompt, first message, language, and voice ID.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  overrides: {\n    agent: {\n      prompt: {\n        prompt: \"My custom prompt\",\n      },\n      firstMessage: \"My custom first message\",\n      language: \"en\",\n    },\n    tts: {\n      voiceId: \"custom voice id\",\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Conversation Overrides\nDESCRIPTION: Configuration for overriding various conversation settings including agent prompt and TTS settings\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nconst conversation = useConversation({\n  overrides: {\n    agent: {\n      prompt: {\n        prompt: \"My custom prompt\",\n      },\n      firstMessage: \"My custom first message\",\n      language: \"en\",\n    },\n    tts: {\n      voiceId: \"custom voice id\",\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Client Tools for Agent-Triggered Actions\nDESCRIPTION: Example of defining client tools that the ElevenLabs agent can invoke to trigger client-side functionality with parameters.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  clientTools: {\n    displayMessage: async (parameters: { text: string }) => {\n      alert(text);\n\n      return \"Message displayed\";\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Client Tools\nDESCRIPTION: Example of implementing client tools for agent-triggered actions\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nconst conversation = useConversation({\n  clientTools: {\n    displayMessage: (parameters: { text: string }) => {\n      alert(text);\n\n      return \"Message displayed\";\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Starting a Session with Agent ID\nDESCRIPTION: Code example showing how to initialize a conversation session using a public agent ID from ElevenLabs.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  agentId: \"<your-agent-id>\",\n});\n```\n\n----------------------------------------\n\nTITLE: Using a Signed URL for Authorized Conversations\nDESCRIPTION: Client-side code to fetch a signed URL from a server endpoint and use it to initialize an authorized conversation.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Client\n\nconst response = await fetch(\"/signed-url\", yourAuthHeaders);\nconst signedUrl = await response.text();\n\nconst conversation = await Conversation.startSession({ signedUrl });\n```\n\n----------------------------------------\n\nTITLE: Creating a Server Endpoint for Signed URL Authorization\nDESCRIPTION: Node.js server example that creates an endpoint to request a signed URL using the ElevenLabs API for authorized conversations.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Node.js server\n\napp.get(\"/signed-url\", yourAuthMiddleware, async (req, res) => {\n  const response = await fetch(\n    `https://api.elevenlabs.io/v1/convai/conversation/get_signed_url?agent_id=${process.env.AGENT_ID}`,\n    {\n      method: \"GET\",\n      headers: {\n        // Requesting a signed url requires your ElevenLabs API key\n        // Do NOT expose your API key to the client!\n        \"xi-api-key\": process.env.XI_API_KEY,\n      },\n    }\n  );\n\n  if (!response.ok) {\n    return res.status(500).send(\"Failed to get signed URL\");\n  }\n\n  const body = await response.json();\n  res.send(body.signed_url);\n});\n```\n\n----------------------------------------\n\nTITLE: Server-side URL Generation\nDESCRIPTION: Example of generating signed URLs for authorized conversations using the REST API\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nconst requestHeaders: HeadersInit = new Headers();\nrequestHeaders.set(\"xi-api-key\", process.env.XI_API_KEY);\n\nconst response = await fetch(\n    \"https://api.elevenlabs.io/v1/convai/conversation/get_signed_url?agent_id={{agent id created through ElevenLabs UI}}\",\n    {\n      method: \"GET\",\n      headers: requestHeaders,\n    }\n);\n\nif (!response.ok) {\n    return Response.error();\n}\n\nconst body = await response.json();\nconst url = body.signed_url;\n```\n\n----------------------------------------\n\nTITLE: Setting the Output Volume of the Conversation\nDESCRIPTION: Method to adjust the output volume of the conversation audio, with values ranging from 0 to 1.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nawait conversation.setVolume({ volume: 0.5 });\n```\n\n----------------------------------------\n\nTITLE: Getting Input and Output Volume Levels\nDESCRIPTION: Methods to retrieve the current input and output volume levels on a normalized scale from 0 to 1.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst inputVolume = await conversation.getInputVolume();\nconst outputVolume = await conversation.getOutputVolume();\n```\n\n----------------------------------------\n\nTITLE: Controlling Microphone Mute Status\nDESCRIPTION: Methods to mute or unmute the microphone during an active conversation.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Mute the microphone\nconversation.setMicMuted(true);\n\n// Unmute the microphone\nconversation.setMicMuted(false);\n```\n\n----------------------------------------\n\nTITLE: Sending Contextual Updates to the ElevenLabs Agent\nDESCRIPTION: Method to inform the agent about user actions not directly related to the conversation but relevant for context.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nconversation.sendContextualUpdate(\n  \"User navigated to another page. Consider it for next response, but don't react to this contextual update.\"\n);\n```\n\n----------------------------------------\n\nTITLE: Sending Feedback to the ElevenLabs Agent\nDESCRIPTION: Code to send binary feedback (positive/negative) to the agent regarding its most recent response.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconversation.sendFeedback(true);\n```\n\n----------------------------------------\n\nTITLE: Ending a Conversation Session\nDESCRIPTION: Method to manually end a conversation, disconnect from the websocket, and discard the conversation instance.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nawait conversation.endSession();\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Conversation ID\nDESCRIPTION: Method to get the unique identifier for the current conversation.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst id = conversation.getId();\n```\n\n----------------------------------------\n\nTITLE: Configuring Connection Delay for Different Devices\nDESCRIPTION: Setting device-specific delays between microphone activation and connection establishment to prevent audio cutoff issues.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  connectionDelay: {\n    android: 3_000,\n    ios: 0,\n    default: 0,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Connection Delay\nDESCRIPTION: Configuration for setting platform-specific connection delays\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nconst conversation = useConversation({\n  connectionDelay: {\n    android: 3_000,\n    ios: 0,\n    default: 0,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring iOS Headphone Preference for Audio Output\nDESCRIPTION: Code to force the use of headphones on iOS devices when available, as iOS Safari typically prefers the built-in speaker.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  preferHeadphonesForIosDevices: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring iOS Headphone Preference\nDESCRIPTION: Configuration to prefer headphones for audio output on iOS devices\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nconst conversation = useConversation({\n  preferHeadphonesForIosDevices: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Wake Lock Feature in Conversation\nDESCRIPTION: Code to disable the default wake lock acquisition that prevents devices from sleeping during conversations.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst conversation = await Conversation.startSession({\n  useWakeLock: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Wake Lock\nDESCRIPTION: Configuration to disable the wake lock functionality\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\nconst conversation = useConversation({\n  useWakeLock: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Installing ElevenLabs JavaScript Client via Package Managers\nDESCRIPTION: Commands for installing the @11labs/client package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/client/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @11labs/client\n# or\nyarn add @11labs/client\n# or\npnpm install @11labs/client\n```\n\n----------------------------------------\n\nTITLE: Installing ElevenLabs React Package\nDESCRIPTION: Commands for installing the ElevenLabs React package using different package managers\nSOURCE: https://github.com/elevenlabs/packages/blob/main/packages/react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @11labs/react\n# or\nyarn add @11labs/react\n# or\npnpm install @11labs/react\n```\n\n----------------------------------------\n\nTITLE: Setting up the monorepo and installing dependencies\nDESCRIPTION: This command sets up the monorepo, installs dependencies for all packages, and symlinks local packages where appropriate.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Linking a package globally for development\nDESCRIPTION: These commands link a package globally and then link it to a project for development purposes.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# inside of the package root\npnpm link --global\n\n# inside of your project\npnpm link --global <pkg>\n```\n\n----------------------------------------\n\nTITLE: Running development script for a package\nDESCRIPTION: This command starts the watch mode for a specific package, allowing for real-time development.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating a new package from template\nDESCRIPTION: This command creates a new package from a template in the packages folder of the monorepo.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npnpm run create --name=[package-name]\n```\n\n----------------------------------------\n\nTITLE: Installing pnpm globally using npm\nDESCRIPTION: This command installs pnpm globally on the system, which is required for managing the monorepo and its packages.\nSOURCE: https://github.com/elevenlabs/packages/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i pnpm -g\n```"
  }
]
[
  {
    "owner": "nrwl",
    "repo": "nx-console",
    "content": "TITLE: Creating a New Nx Workspace with npx\nDESCRIPTION: Command to create a new Nx workspace using the create-nx-workspace utility. This is the recommended way to start with Nx from scratch.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-nx-workspace@latest my-workspace\n```\n\n----------------------------------------\n\nTITLE: Creating a New Nx Workspace using npx\nDESCRIPTION: Command to create a new Nx workspace using npx and the create-nx-workspace package. This initializes a fresh monorepo with the Nx tooling pre-configured.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-nx-workspace@latest my-workspace\n```\n\n----------------------------------------\n\nTITLE: Installing Nx in an Existing Repository\nDESCRIPTION: Command to add Nx to an existing repository using the nx init command. This transforms a standard repository into an Nx-powered monorepo without restructuring existing code.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx init\n```\n\n----------------------------------------\n\nTITLE: Installing Nx into an Existing Repository\nDESCRIPTION: Command to add Nx capabilities to an existing repository. This allows you to adopt Nx incrementally in an established project.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx nx init\n```\n\n----------------------------------------\n\nTITLE: Running Local CI Checks for Nx Console\nDESCRIPTION: Lists the commands to run various CI checks locally, including formatting, testing, building, and end-to-end testing using Nx commands.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn nx format:check\nyarn nx run-many --target=test\nyarn nx run-many --target=build\nyarn nx run-many --target=e2e\n```\n\n----------------------------------------\n\nTITLE: Creating a New Angular Project with CLI\nDESCRIPTION: Command to create a new Angular project using ng new with optional parameters for routing and style preferences.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nng new my-app --routing --style=scss\n```\n\n----------------------------------------\n\nTITLE: Building Angular Application for Production\nDESCRIPTION: Command to build an Angular application with production optimization flags enabled.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nng build --configuration=production\n```\n\n----------------------------------------\n\nTITLE: Generating an Angular Component\nDESCRIPTION: Command to generate a new component in an Angular application with the --standalone flag for standalone components.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nng generate component my-component --standalone\n```\n\n----------------------------------------\n\nTITLE: Assigning Keyboard Shortcut to Custom Nx Task in VSCode\nDESCRIPTION: This snippet shows how to create a keyboard shortcut in VSCode's keybindings.json file. It assigns the key combination 'ctrl+cmd+t' to run the custom 'Test Affected' task defined earlier.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/src/getting-started/5-streamlining.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"key\": \"ctrl+cmd+t\",\n  \"command\": \"workbench.action.tasks.runTask\",\n  \"args\": \"Test Affected\"\n}\n```\n\n----------------------------------------\n\nTITLE: Generating an Angular Service\nDESCRIPTION: Command to generate a new service in an Angular application, which can be injected into components or other services.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nng generate service my-service\n```\n\n----------------------------------------\n\nTITLE: Starting Angular Development Server\nDESCRIPTION: Command to start the Angular development server with the serve command, providing hot-reload functionality.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nng serve\n```\n\n----------------------------------------\n\nTITLE: Running Angular Tests\nDESCRIPTION: Command to execute unit tests in an Angular application using the Karma test runner.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nng test\n```\n\n----------------------------------------\n\nTITLE: Installation Instructions using IDE Plugin System\nDESCRIPTION: Steps showing how to install the Nx Console plugin through the IDE's built-in plugin marketplace.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/intellij/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSettings/Preferences > Plugins > Marketplace > Search for \"stunning-waddle\" > Install Plugin\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Task for Nx Affected Tests in VSCode\nDESCRIPTION: This snippet demonstrates how to set up a custom task in VSCode's tasks.json file to run Nx affected tests. It defines a shell command that executes 'nx affected --target=test'.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/vscode/src/getting-started/5-streamlining.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"label\": \"Test Affected\",\n  \"type\": \"shell\",\n  \"command\": \"nx affected --target=test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Manual Plugin Installation Steps\nDESCRIPTION: Instructions for manually installing the Nx Console plugin by downloading and installing from disk.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/intellij/README.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSettings/Preferences > Plugins > ⚙️ > Install plugin from disk...\n```\n\n----------------------------------------\n\nTITLE: Configuring MCP Server in mcp.json for Nx Monorepos\nDESCRIPTION: This JSON configuration sets up the Nx MCP server to run via npx. It specifies the server type, command, and arguments including the path to the workspace.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/nx-mcp/README.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"servers\": {\n    \"nx-mcp\": {\n      \"type\": \"stdio\",\n      \"command\": \"npx\",\n      \"args\": [\"nx-mcp@latest\", \"/path/to/your/workspace\"]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Conventional Commit Message Format\nDESCRIPTION: Demonstrates the structure of a commit message following the conventional commit format, including type, subject, and body.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntype: subject\nBLANK LINE\nbody\n```\n\n----------------------------------------\n\nTITLE: Installing Nx Language Server globally with npm\nDESCRIPTION: This command installs the Nx Language Server (nxls) globally, making it accessible in your system path. This is necessary for editors other than those using the Nx Console extension.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/nxls/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g nxls\n```\n\n----------------------------------------\n\nTITLE: Building the vscode-project-details library with Nx\nDESCRIPTION: Command to build the vscode-project-details library using Nx build tools. This command needs to be run in the terminal from the root of the Nx workspace.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/project-details/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build vscode-project-details\n```\n\n----------------------------------------\n\nTITLE: Building Nx Language Server Module\nDESCRIPTION: Command to build the language server capabilities definition library using Nx build system.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/definition/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build language-server-capabilities-definition\n```\n\n----------------------------------------\n\nTITLE: Example of a Detailed Conventional Commit Message\nDESCRIPTION: Provides a specific example of a conventional commit message for a feature addition, including the type, subject, and a descriptive body.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nfeat: add links to angular.io to the generate screen\n\nThe generate screen shows links to docs explaining all command-line options in depth\n```\n\n----------------------------------------\n\nTITLE: Building Nx Console Help View Component\nDESCRIPTION: Command to build the VSCode help and feedback view component using Nx build system.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-help-and-feedback-view/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build vscode-nx-help-and-feedback-view\n```\n\n----------------------------------------\n\nTITLE: Defining README for Nx Console Shared Generate UI Types\nDESCRIPTION: A markdown README file describing a library generated with Nx build tooling.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/generate-ui-types/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# shared-generate-ui-types\\n\\nThis library was generated with [Nx](https://nx.dev).\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Nx Language Server Workspace\nDESCRIPTION: Executes unit tests for the language-server-workspace library using Jest test runner via Nx CLI command.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/workspace/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test language-server-workspace\n```\n\n----------------------------------------\n\nTITLE: Linting Nx Language Server Workspace\nDESCRIPTION: Performs linting on the language-server-workspace library using ESLint via Nx CLI command.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/workspace/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint language-server-workspace\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode LSP Client\nDESCRIPTION: Command to execute unit tests for the vscode-lsp-client library using Jest via Nx.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/lsp-client/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test vscode-lsp-client\n```\n\n----------------------------------------\n\nTITLE: Documenting Initial Release in Markdown Changelog\nDESCRIPTION: This snippet documents the initial release (version 0.0.1) of the nx-console plugin. It notes that the initial scaffold was created from the IntelliJ Platform Plugin Template.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/intellij/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.0.1]\n### Added\n- Initial scaffold created from [IntelliJ Platform Plugin Template](https://github.com/JetBrains/intellij-platform-plugin-template)\n```\n\n----------------------------------------\n\nTITLE: Running Linter for VSCode LSP Client\nDESCRIPTION: Command to run ESLint on the vscode-lsp-client library using Nx.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/lsp-client/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint vscode-lsp-client\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests for VSCode Nx Workspace\nDESCRIPTION: Command to execute Jest unit tests for the vscode-nx-workspace library using the Nx CLI\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-workspace/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test vscode-nx-workspace\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VS Code Nx Project Tree Extension\nDESCRIPTION: Command to execute unit tests for the vscode-nx-project-tree library using Jest as the test runner within the Nx development environment.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-project-view/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-nx-project-tree\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode Generate UI Webview Library\nDESCRIPTION: This command executes the unit tests for the vscode-generate-ui-webview library using Jest as the testing framework. It utilizes the Nx build system to run the tests.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/generate-ui-webview/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test vscode-generate-ui-webview\n```\n\n----------------------------------------\n\nTITLE: Running Jest Tests for Error Diagnostics Module\nDESCRIPTION: Command to execute unit tests for the error-diagnostics library using Jest test runner in an Nx workspace environment. Tests are run using the Nx CLI command.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/error-diagnostics/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test error-diagnostics\n```\n\n----------------------------------------\n\nTITLE: Building the vscode-nx-cloud-view Library with Nx\nDESCRIPTION: This command builds the vscode-nx-cloud-view library using Nx. It's a fundamental step in the development process.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-cloud-view/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build vscode-nx-cloud-view\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for vscode-nx-cloud-view with Jest\nDESCRIPTION: This command executes the unit tests for the vscode-nx-cloud-view library using Jest as the testing framework. It's essential for maintaining code quality and ensuring functionality.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-cloud-view/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-nx-cloud-view\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode Utils Library\nDESCRIPTION: This command executes unit tests for the VSCode utils library using Jest as the test runner. It uses the Nx CLI to run the tests.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test vscode-utils\n```\n\n----------------------------------------\n\nTITLE: Running ESLint for vscode-project-graph\nDESCRIPTION: Command to run linting on the vscode-project-graph library using ESLint via the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/project-graph/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx lint vscode-project-graph\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests with Nx for nxls-e2e Library\nDESCRIPTION: Command for executing unit tests for the nxls-e2e library using Jest test runner through the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/apps/nxls-e2e/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test nxls-e2e\n```\n\n----------------------------------------\n\nTITLE: Running Lint for Language Server Capabilities Document Links\nDESCRIPTION: Command to execute linting for the language-server-capabilities-document-links library using ESLint via Nx.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/document-links/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint language-server-capabilities-document-links\n```\n\n----------------------------------------\n\nTITLE: Building Nx Cloud Onboarding WebView Library\nDESCRIPTION: Command to build the nx-cloud-onboarding-webview library using Nx build tools.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-cloud-onboarding-webview/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx build nx-cloud-onboarding-webview\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Shared File System Library in Nx\nDESCRIPTION: This command executes unit tests for the shared-file-system library using Jest test runner in an Nx project.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/file-system/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test shared-file-system\n```\n\n----------------------------------------\n\nTITLE: Running unit tests for vscode-verify-workspace with Jest\nDESCRIPTION: Command to execute unit tests for the vscode-verify-workspace library using Jest as the test runner. This uses the Nx CLI to run the tests.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/verify/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-verify-workspace\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests with Nx for VSCode CLI Task\nDESCRIPTION: Command to execute Jest unit tests for the vscode-cli-task library using the Nx CLI. The command uses Nx to run the test task for the specific library module.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/tasks/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test vscode-cli-task\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Language Server Capabilities Document Links\nDESCRIPTION: Command to execute unit tests for the language-server-capabilities-document-links library using Jest via Nx.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/document-links/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test language-server-capabilities-document-links\n```\n\n----------------------------------------\n\nTITLE: Running VS Code Configuration Tests with Nx\nDESCRIPTION: Command to execute unit tests for the vscode-configuration library using Jest test runner through Nx CLI\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/configuration/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test vscode-configuration\n```\n\n----------------------------------------\n\nTITLE: Testing Nx Language Server Module\nDESCRIPTION: Command to run unit tests for the language server capabilities definition library using Jest test runner.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/definition/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test language-server-capabilities-definition\n```\n\n----------------------------------------\n\nTITLE: Running ESLint for Language Server Capabilities Library\nDESCRIPTION: Command to run linting on the language-server-capabilities-code-completion library using ESLint.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/code-completion/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint language-server-capabilities-code-completion\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with Jest for Language Server Capabilities Library\nDESCRIPTION: Command to execute unit tests for the language-server-capabilities-code-completion library using Jest test runner.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/capabilities/code-completion/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test language-server-capabilities-code-completion\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Shared File System Library in Nx\nDESCRIPTION: This command runs the linter (ESLint) on the shared-file-system library in an Nx project to check for code quality and style issues.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/file-system/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint shared-file-system\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode Copilot Library\nDESCRIPTION: Command to execute unit tests for the VSCode Copilot library using Jest via the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/copilot/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-copilot\n```\n\n----------------------------------------\n\nTITLE: Linting VSCode Utils Library\nDESCRIPTION: This command runs linting on the VSCode utils library using ESLint. It uses the Nx CLI to execute the linting process.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/utils/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint vscode-utils\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode Nx Commands Tree Library\nDESCRIPTION: This command executes unit tests for the vscode-nx-commands-tree library using Jest within the Nx framework. It demonstrates how to run tests for a specific library in an Nx workspace.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-commands-view/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test vscode-nx-commands-tree\n```\n\n----------------------------------------\n\nTITLE: Running ESLint Command for Language Server Types\nDESCRIPTION: Command to run linting checks on the language-server-types library using ESLint.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/types/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx lint language-server-types\n```\n\n----------------------------------------\n\nTITLE: Running Jest Tests Command\nDESCRIPTION: Command to execute unit tests for the VSCode TypeScript plugin using Jest test runner through Nx\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/typescript-plugin/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test vscode-typescript-plugin\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for VSCode Nx Conversion Library\nDESCRIPTION: This command executes the unit tests for the vscode-nx-conversion library using Jest as the test runner. It utilizes the Nx CLI to run the tests.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-conversion/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test vscode-nx-conversion\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with Jest in Nx\nDESCRIPTION: Command to execute unit tests for the shared-types library using Jest test runner through Nx\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/types/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test shared-types\n```\n\n----------------------------------------\n\nTITLE: Linting Language Server Utils Library with Nx and ESLint\nDESCRIPTION: This command runs linting checks on the language-server-utils library using ESLint through the Nx build system.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/utils/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnx lint language-server-utils\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests for Shared JSON Schema Library\nDESCRIPTION: Command for executing unit tests for the shared-json-schema library using the Nx CLI and Jest test runner.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/json-schema/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test shared-json-schema\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Language Server Utils Library with Nx and Jest\nDESCRIPTION: This command executes unit tests for the language-server-utils library using Jest test runner through the Nx build system.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnx test language-server-utils\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Format\nDESCRIPTION: Standardized changelog format documenting version changes with conventional commit types (features, bug fixes, performance improvements) and linking to issues/commits.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### [17.28.2](https://github.com/nrwl/nx-console/compare/v17.28.1...v17.28.2) (2023-01-17)\n\n### Bug Fixes\n\n* refresh vcs status correctly ([#1478](https://github.com/nrwl/nx-console/issues/1478)) ([9c83ac0](https://github.com/nrwl/nx-console/commits/9c83ac0b477e72f6afc4b85f4025ec119e781a69))\n```\n\n----------------------------------------\n\nTITLE: Running ESLint in Nx\nDESCRIPTION: Command to perform linting on the shared-types library using ESLint through Nx\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/types/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx lint shared-types\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Telemetry Library with Nx\nDESCRIPTION: This command executes the unit tests for the telemetry library using Jest as the test runner. It utilizes Nx's test command with the library name as an argument.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/telemetry/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test telemetry\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for nx-version Library\nDESCRIPTION: Command to execute unit tests for the nx-version library using Jest via the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/nx-version/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test nx-version\n```\n\n----------------------------------------\n\nTITLE: Running Jest Tests for Nx MCP Server\nDESCRIPTION: Command for executing unit tests for the nx-mcp-server library using Jest test runner through the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/nx-mcp/nx-mcp-server/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test nx-mcp-server\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests for MCP Library in Nx\nDESCRIPTION: Command to execute unit tests for the mcp library using Jest through the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/mcp/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test mcp\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests with Nx\nDESCRIPTION: Command to execute unit tests for the output-channels library using Jest test runner through Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/output-channels/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnx test output-channels\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Nx Cloud Onboarding WebView\nDESCRIPTION: Command to execute Jest unit tests for the nx-cloud-onboarding-webview library.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-cloud-onboarding-webview/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test nx-cloud-onboarding-webview\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests with Nx CLI\nDESCRIPTION: Command to execute Jest unit tests for the shared-npm library using the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/npm/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test shared-npm\n```\n\n----------------------------------------\n\nTITLE: Running Jest Unit Tests for vscode-project-graph\nDESCRIPTION: Command to execute unit tests for the vscode-project-graph library using Jest via the Nx CLI.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/project-graph/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-project-graph\n```\n\n----------------------------------------\n\nTITLE: Initializing Nx Library Reference\nDESCRIPTION: Simple Markdown reference indicating the library was generated using Nx build tools.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/shared/llm-context/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# prompts\n\nThis library was generated with [Nx](https://nx.dev).\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Nx TypeScript Import Plugin\nDESCRIPTION: Simple markdown documentation indicating this is a library generated using the Nx development toolkit.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/typescript-import-plugin/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# vscode-typescript-import-plugin\n\nThis library was generated with [Nx](https://nx.dev).\n```\n\n----------------------------------------\n\nTITLE: Running Jest Tests Command for Language Server Types\nDESCRIPTION: Command to execute unit tests for the language-server-types library using Jest test runner.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/language-server/types/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnx test language-server-types\n```\n\n----------------------------------------\n\nTITLE: Testing Nx Console Help View Component\nDESCRIPTION: Command to run Jest-based unit tests for the VSCode help and feedback view component.\nSOURCE: https://github.com/nrwl/nx-console/blob/master/libs/vscode/nx-help-and-feedback-view/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnx test vscode-nx-help-and-feedback-view\n```"
  }
]
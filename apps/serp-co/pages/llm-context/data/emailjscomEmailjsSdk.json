[
  {
    "owner": "emailjs-com",
    "repo": "emailjs-sdk",
    "content": "TITLE: Async/Await Email Sending with Error Handling\nDESCRIPTION: Example of sending an email using EmailJS with async/await syntax and custom error handling.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport emailjs, { EmailJSResponseStatus } from '@emailjs/browser';\n\ntry {\n  await emailjs.send(\n    'YOUR_SERVICE_ID',\n    'YOUR_TEMPLATE_ID',\n    {},\n    {\n      publicKey: 'YOUR_PUBLIC_KEY',\n    },\n  );\n  console.log('SUCCESS!');\n} catch (err) {\n  if (err instanceof EmailJSResponseStatus) {\n    console.log('EMAILJS FAILED...', err);\n    return;\n  }\n\n  console.log('ERROR', err);\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Email in Modern JavaScript Frameworks\nDESCRIPTION: Example of sending an email using EmailJS in modern JavaScript frameworks like Angular, Vue.js, React, or Svelte.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport emailjs from '@emailjs/browser';\n\nconst templateParams = {\n  name: 'James',\n  notes: 'Check this out!',\n};\n\nemailjs\n  .send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, {\n    publicKey: 'YOUR_PUBLIC_KEY',\n  })\n  .then(\n    (response) => {\n      console.log('SUCCESS!', response.status, response.text);\n    },\n    (err) => {\n      console.log('FAILED...', err);\n    },\n  );\n```\n\n----------------------------------------\n\nTITLE: Sending Email from Form in JavaScript\nDESCRIPTION: JavaScript code to send an email using EmailJS by submitting a form.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nemailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', '#myForm').then(\n  function (response) {\n    console.log('SUCCESS!', response.status, response.text);\n  },\n  function (err) {\n    console.log('FAILED...', err);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Sending Email with Custom Parameters in JavaScript\nDESCRIPTION: JavaScript code to send an email using EmailJS with custom template parameters.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar templateParams = {\n  name: 'James',\n  notes: 'Check this out!',\n};\n\nemailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams).then(\n  function (response) {\n    console.log('SUCCESS!', response.status, response.text);\n  },\n  function (err) {\n    console.log('FAILED...', err);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Global EmailJS Settings\nDESCRIPTION: Example of setting up global configuration options for EmailJS, including public key, headless browser blocking, and rate limiting.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport emailjs from '@emailjs/browser';\n\nemailjs.init({\n  publicKey: 'YOUR_PUBLIC_KEY',\n  blockHeadless: true,\n  blockList: {\n    list: ['foo@emailjs.com', 'bar@emailjs.com'],\n  },\n  limitRate: {\n    throttle: 10000, // 10s\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Overriding EmailJS Settings Locally\nDESCRIPTION: Example of overriding global EmailJS settings for a specific email send operation, including custom blocklist and rate limiting options.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport emailjs from '@emailjs/browser';\n\nconst templateParams = {\n  name: 'James',\n  notes: 'Check this out!',\n};\n\nemailjs\n  .send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, {\n    publicKey: 'YOUR_PUBLIC_KEY',\n    blockList: {\n      watchVariable: 'userEmail',\n    },\n    limitRate: {\n      throttle: 0, // turn off the limit rate for these requests\n    },\n  })\n  .then(\n    (response) => {\n      console.log('SUCCESS!', response.status, response.text);\n    },\n    (err) => {\n      console.log('FAILED...', err);\n    },\n  );\n```\n\n----------------------------------------\n\nTITLE: Including EmailJS SDK via CDN\nDESCRIPTION: HTML snippet to include the EmailJS SDK from a CDN and initialize it with a public key.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script\n  type=\"text/javascript\"\n  src=\"https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js\">\n</script>\n<script type=\"text/javascript\">\n  (function () {\n    emailjs.init({\n      publicKey: 'YOUR_PUBLIC_KEY',\n    });\n  })();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing EmailJS SDK via npm\nDESCRIPTION: Command to install the EmailJS SDK using npm package manager.\nSOURCE: https://github.com/emailjs-com/emailjs-sdk/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @emailjs/browser\n```"
  }
]
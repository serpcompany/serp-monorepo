[
  {
    "owner": "playfab",
    "repo": "javascriptsdk",
    "content": "TITLE: Implementing PlayFab LoginWithCustomID API Call in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to make a LoginWithCustomID API call to PlayFab, handle the response, and display the result. It includes error handling and a utility function for compiling error reports.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/TypeScriptGettingStarted.md#2025-04-19_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nfunction DoExampleLoginWithCustomID(): void {\n    PlayFab.settings.titleId = (<HTMLInputElement>document.getElementById(\"titleId\")).value;\n    var loginRequest: PlayFabClientModels.LoginWithCustomIDRequest = {\n        CustomId: (<HTMLInputElement>document.getElementById(\"customId\")).value,\n        CreateAccount: true\n    };\n\n    PlayFabClientSDK.LoginWithCustomID(loginRequest, LoginCallback);\n}\n\nvar LoginCallback = function (result: PlayFabModule.SuccessContainer<PlayFabClientModels.LoginResult>, error: PlayFabModule.IPlayFabError): void {\n    if (result !== null) {\n        document.getElementById(\"resultOutput\").innerHTML = \"Congratulations, you made your first successful API call!\";\n    } else if (error !== null) {\n        document.getElementById(\"resultOutput\").innerHTML =\n            \"Something went wrong with your first API call.\\n\" +\n            \"Here's some debug information:\\n\" +\n            CompileErrorReport(error);\n    }\n}\n\n// This is a utility function we haven't put into the core SDK yet.  Feel free to use it.\nfunction CompileErrorReport(error: PlayFabModule.IPlayFabError): string {\n    if (error === null)\n        return \"\";\n    var fullErrors: string = error.errorMessage;\n    for (var paramName in error.errorDetails)\n        for (var msgIdx in error.errorDetails[paramName])\n            fullErrors += \"\\n\" + paramName + \": \" + error.errorDetails[paramName][msgIdx];\n    return fullErrors;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing PlayFab API Authentication with LoginWithCustomID\nDESCRIPTION: JavaScript implementation that makes a call to PlayFab's LoginWithCustomID API endpoint. The code retrieves values from input fields, constructs a proper request object, makes the API call, and handles the callback with both success and error scenarios.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/JavaScriptGettingStarted.md#2025-04-19_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction DoExampleLoginWithCustomID(){\n    PlayFab.settings.titleId = document.getElementById(\"titleId\").value;\n    var loginRequest = {\n        // Currently, you need to look up the correct format for this object in the API-docs:\n        // https://api.playfab.com/Documentation/Client/method/LoginWithCustomID\n        TitleId: PlayFab.settings.titleId,\n        CustomId: document.getElementById(\"customId\").value,\n        CreateAccount: true\n    };\n\n    PlayFabClientSDK.LoginWithCustomID(loginRequest, LoginCallback);\n}\n\nvar LoginCallback = function (result, error) {\n    if (result !== null) {\n        document.getElementById(\"resultOutput\").innerHTML = \"Congratulations, you made your first successful API call!\";\n    } else if (error !== null) {\n        document.getElementById(\"resultOutput\").innerHTML =\n            \"Something went wrong with your first API call.\\n\" +\n            \"Here's some debug information:\\n\" +\n            CompileErrorReport(error);\n    }\n}\n\n// This is a utility function we haven't put into the core SDK yet.  Feel free to use it.\nfunction CompileErrorReport(error) {\n    if (error === null)\n        return \"\";\n    var fullErrors = error.errorMessage;\n    for (var paramName in error.errorDetails)\n        for (var msgIdx in error.errorDetails[paramName])\n            fullErrors += \"\\n\" + paramName + \": \" + error.errorDetails[paramName][msgIdx];\n    return fullErrors;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing HTML Structure for PlayFab API Call\nDESCRIPTION: This HTML snippet sets up the structure for a simple web page that allows users to input a TitleID and CustomID, and make a LoginWithCustomID API call to PlayFab. It includes references to the PlayFab SDK and the application script.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/TypeScriptGettingStarted.md#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>PlayFab JavaScript Unit Tests</title>\n    <script type=\"text/javascript\" src=\"src/PlayFab/PlayFabClientApi.js\"></script>\n    <script type=\"text/javascript\" src=\"app.js\"></script>\n</head>\n<body>\n    PlayFab Getting Started Guide<br/>\n    TitleID: <input type=\"text\" id=\"titleId\" value=\"144\"><br/>\n    CustomID: <input type=\"text\" id=\"customId\" value=\"GettingStartedGuide\"><br/>\n    <input type=\"button\" value=\"Call LoginWithCustomID\" onclick=\"DoExampleLoginWithCustomID()\"><br/>\n    Result:<br/>\n    <textarea id=\"resultOutput\" cols=\"60\" rows=\"5\"></textarea><br/>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Structure for PlayFab SDK Integration\nDESCRIPTION: HTML structure for a basic web page that loads the PlayFab Client SDK and creates a simple interface for calling the LoginWithCustomID API. The page includes input fields for TitleID and CustomID, a button to trigger the API call, and a textarea to display results.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/JavaScriptGettingStarted.md#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>PlayFab JavaScript Unit Tests</title>\n    <script type=\"text/javascript\" src=\"https://download.playfab.com/PlayFabClientApi.js\"></script>\n    <script type=\"text/javascript\" src=\"PlayFabGettingStarted.js\"></script>\n</head>\n<body>\n    PlayFab Getting Started Guide<br />\n    TitleID: <input type=\"text\" id=\"titleId\" value=\"144\"><br />\n    CustomID: <input type=\"text\" id=\"customId\" value=\"GettingStartedGuide\"><br />\n    <input type=\"button\" value=\"Call LoginWithCustomID\" onclick=\"DoExampleLoginWithCustomID()\"><br />\n    Result:<br />\n    <textarea id=\"resultOutput\" cols=\"60\" rows=\"5\"></textarea><br />\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Loading PlayFab Client SDK in HTML\nDESCRIPTION: HTML script tag that loads the PlayFab Client SDK directly from PlayFab's CDN. This is a key step for enabling PlayFab API functionality in a web page.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/JavaScriptGettingStarted.md#2025-04-19_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<script type=\"text/javascript\" src=\"https://download.playfab.com/PlayFabClientApi.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Binding JavaScript Functions to HTML Elements\nDESCRIPTION: HTML code that imports the custom JavaScript file and creates a button to trigger the PlayFab API call function defined in that file.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/JavaScriptGettingStarted.md#2025-04-19_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<script type=\"text/javascript\" src=\"PlayFabGettingStarted.js\"></script>\n...\n<input type=\"button\" value=\"Call LoginWithCustomID\" onclick=\"DoExampleLoginWithCustomID()\"><br />\n```\n\n----------------------------------------\n\nTITLE: Installing PlayFab JavaScript SDK via NPM\nDESCRIPTION: Command to install the PlayFab web JavaScript SDK using NPM. This is specifically for the web version of the SDK, as opposed to the NodeJS version which is installed with a different package name.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install playfab-web-sdk\n```\n\n----------------------------------------\n\nTITLE: Installing PlayFab JavaScript SDK via NPM\nDESCRIPTION: Command to install the PlayFab JavaScript SDK for web applications using NPM. This installs the web JavaScript package rather than the NodeJS SDK which would be installed with 'npm install playfab'.\nSOURCE: https://github.com/playfab/javascriptsdk/blob/master/PlayFabSdk/readme.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install playfab-web-sdk\n```"
  }
]
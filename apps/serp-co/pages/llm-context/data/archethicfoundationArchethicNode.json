[
  {
    "owner": "archethic-foundation",
    "repo": "archethic-node",
    "content": "TITLE: Run Elixir Node\nDESCRIPTION: This shell command starts an Elixir node using the `iex` interactive shell and the `mix` build tool.  It compiles and runs the project, allowing interaction with the Archethic node.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\niex -S mix\n```\n\n----------------------------------------\n\nTITLE: Start second node\nDESCRIPTION: These shell commands start a second node by specifying environment variables for crypto seed, P2P port, HTTP port, and HTTPS port. This allows running multiple nodes on the same machine for development or testing purposes.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nARCHETHIC_CRYPTO_SEED=node2 ARCHETHIC_P2P_PORT=3003 ARCHETHIC_HTTP_PORT=4001 ARCHETHIC_HTTPS_PORT=5001 iex -S mix\n```\n\n----------------------------------------\n\nTITLE: Start All Docker Nodes\nDESCRIPTION: This shell command uses Docker Compose to start all the services defined in the `docker-compose.yml` file. This allows for easy orchestration of multiple Archethic Node instances and related services.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Start Single Docker Node\nDESCRIPTION: These shell commands use Docker Compose to start a single node (node1, node2 or node3) defined in the `docker-compose.yml` file. This provides a simple way to run a single Archethic Node instance using Docker.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up node1\ndocker compose up node2\ndocker compose up node3\n```\n\n----------------------------------------\n\nTITLE: Install Elixir Dependencies\nDESCRIPTION: This shell command installs the necessary dependencies for the Elixir project using the `mix` build tool. It retrieves and installs all the packages specified in the `mix.exs` file.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmix deps.get\n```\n\n----------------------------------------\n\nTITLE: Clone Archethic Node Repository\nDESCRIPTION: These shell commands clone the Archethic Node repository from GitHub and navigate into the project directory. This is the first step in setting up the project locally.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/archethic-foundation/archethic-node.git\ncd archethic-node\n```\n\n----------------------------------------\n\nTITLE: Build Docker Image\nDESCRIPTION: This shell command builds a Docker image for the Archethic Node project, tagging it as `archethic-node`.  This image can then be used to run the node in a containerized environment.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t archethic-node .\n```\n\n----------------------------------------\n\nTITLE: Run Docker Benchmarks\nDESCRIPTION: This shell command uses Docker Compose to start the `bench` service defined in the `docker-compose.yml` file. This is used to run benchmarks against the Archethic Node.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up bench\n```\n\n----------------------------------------\n\nTITLE: Run Docker Playbooks for Validation\nDESCRIPTION: This shell command uses Docker Compose to start the `validate` service defined in the `docker-compose.yml` file. This service likely contains playbooks to validate non-regression in the Archethic Node's functionality.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up validate\n```\n\n----------------------------------------\n\nTITLE: Install static assets\nDESCRIPTION: This shell script navigates to the 'assets' directory, installs the required npm packages, and then returns to the original directory. It ensures that all necessary front-end dependencies are installed.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ncd assets ; npm install; cd -\n```\n\n----------------------------------------\n\nTITLE: Clean the data\nDESCRIPTION: This command cleans the data by executing the `clean` target in the Makefile. This is useful for resetting the environment or removing generated files.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nmake clean\n```\n\n----------------------------------------\n\nTITLE: Install Erlang using asdf - MacOS\nDESCRIPTION: This command installs Erlang using the `asdf` version manager, specifically configuring it to use the OpenSSL version installed by Brew. The `--disable-jit` flag disables the JIT compiler, and other options prevent the inclusion of Java and wxWidgets. This step is crucial for a proper Erlang setup on Apple Silicon for Archethic Node.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd <project_directory>\nKERL_CONFIGURE_OPTIONS=\"--disable-jit --without-javac --without-wx --with-ssl=$(brew --prefix openssl@3)\" asdf install\n```\n\n----------------------------------------\n\nTITLE: Update exla dependency in mix.exs\nDESCRIPTION: This Elixir code snippet updates the `exla` dependency in the `mix.exs` file to a specific version (`0.5.3`). This ensures compatibility and addresses potential issues when running the Archethic node on MacOS with Apple Silicon.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\n      {:exla, \"~> 0.5.3\"},\n```\n\n----------------------------------------\n\nTITLE: Install openssl using brew - MacOS\nDESCRIPTION: This shell command installs OpenSSL version 3 using the Homebrew package manager on MacOS.  This is a prerequisite for running the Archethic node on Apple Silicon.\nSOURCE: https://github.com/archethic-foundation/archethic-node/blob/master/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbrew install openssl@3\n```"
  }
]
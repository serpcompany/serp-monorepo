[
  {
    "owner": "jeremytregunna",
    "repo": "ruby-trello",
    "content": "TITLE: Configuring Basic Authorization in Ruby Trello\nDESCRIPTION: Shows how to configure the ruby-trello library with basic authorization using a public key and member token.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nrequire 'trello'\n\nTrello.configure do |config|\n  config.developer_public_key = TRELLO_DEVELOPER_PUBLIC_KEY # The \"key\" from step 1\n  config.member_token = TRELLO_MEMBER_TOKEN # The token from step 2.\nend\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Ruby Trello API for Member Information\nDESCRIPTION: Shows how to retrieve and work with a Trello member's information, including name, bio, and boards.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\nbob = Trello::Member.find(\"bobtester\")\n\n# Print out his name\nputs bob.full_name # \"Bob Tester\"\n\n# Print his bio\nputs bob.bio # A wonderfully delightful test user\n\n# How about a list of his boards?\nbob.boards\n\n# And then to read the lists of the first board do :\nbob.boards.first.lists\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific Trello Items by ID\nDESCRIPTION: Demonstrates how to access specific Trello items (boards, lists, cards, checklists) using their IDs.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\n# With bob\npp bob.boards # Will pretty print all boards, allowing us to find our board id\n\n# We can now access it's lists\npp Trello::Board.find( board_id ).lists # will pretty print all lists. Let's get the list id\n\n# We can now access the cards of the list\npp Trello::List.find( list_id ).cards\n\n# We can now access the checklists of the card\npp Trello::Card.find( card_id ).checklists\n\n# and so on ...\n```\n\n----------------------------------------\n\nTITLE: Working with Multiple Trello Users via Client Objects\nDESCRIPTION: Demonstrates how to create and use Trello::Client objects to make requests on behalf of multiple Trello users in a threadsafe manner.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_9\n\nLANGUAGE: ruby\nCODE:\n```\n@client_bob = Trello::Client.new(\n  :consumer_key => YOUR_CONSUMER_KEY,\n  :consumer_secret => YOUR_CONSUMER_SECRET,\n  :oauth_token => \"Bob's access token\",\n  :oauth_token_secret => \"Bob's access secret\"\n)\n\n@client_alice = Trello::Client.new(\n  :consumer_key => YOUR_CONSUMER_KEY,\n  :consumer_secret => YOUR_CONSUMER_SECRET,\n  :oauth_token => \"Alice's access token\",\n  :oauth_token_secret => \"Alice's access secret\"\n)\n```\n\n----------------------------------------\n\nTITLE: Obtaining Trello API Keys via IRB Console\nDESCRIPTION: Demonstrates how to get Trello API public key and authorization token using the IRB console.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n$ gem install ruby-trello\n$ irb -rubygems\nirb> require 'trello'\nirb> Trello.open_public_key_url                         # copy your public key\nirb> Trello.open_authorization_url key: 'yourpublickey' # copy your member token\n```\n\n----------------------------------------\n\nTITLE: Managing Checklist Item States with Ruby Trello\nDESCRIPTION: Shows how to read and update the state of Trello checklist items (checkboxes) using the ruby-trello library.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_8\n\nLANGUAGE: ruby\nCODE:\n```\n# First get your checklist id\nchecklist = Trello::Checklist.find( checklist_id )\n\n# At this point, there is no more ids. To get your checklist item,\n# you have to know it's position (same as in the trello interface).\n# Let's take the first\nchecklist_item = checklist.items.first\n\n# Then we can read the status\nchecklist_item.state # return 'complete' or 'incomplete'\n\n# We can update it (note we call update_item_state from checklist, not from checklist_item)\nchecklist.update_item_state( checklist_item.id, 'complete' ) # or 'incomplete'\n\n# You can also use true or false instead of 'complete' or 'incomplete'\nchecklist.update_item_state( checklist_item.id, true ) # or false\n```\n\n----------------------------------------\n\nTITLE: Configuring 3-legged OAuth Authorization in Ruby Trello\nDESCRIPTION: Shows how to configure 3-legged OAuth authorization for the ruby-trello library with a return URL and callback.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nTrello.configure do |config|\n  config.consumer_key    = TRELLO_CONSUMER_KEY\n  config.consumer_secret = TRELLO_CONSUMER_SECRET\n  config.return_url      = \"http://your.site.com/path/to/receive/post\"\n  config.callback        = lambda { |request_token| DB.save(request_token.key, request_token.secret) }\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring 2-legged OAuth Authorization in Ruby Trello\nDESCRIPTION: Demonstrates how to set up 2-legged OAuth authorization for the ruby-trello library.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nTrello.configure do |config|\n  config.consumer_key = TRELLO_CONSUMER_KEY\n  config.consumer_secret = TRELLO_CONSUMER_SECRET\n  config.oauth_token = TRELLO_OAUTH_TOKEN\n  config.oauth_token_secret = TRELLO_OAUTH_TOKEN_SECRET\nend\n```\n\n----------------------------------------\n\nTITLE: Making Threadsafe Requests with Multiple Trello Clients\nDESCRIPTION: Shows how to make concurrent API requests for different users using separate Trello::Client instances.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_10\n\nLANGUAGE: ruby\nCODE:\n```\nThread.new do\n  @client_bob.find(:members, \"bobtester\")\n  @client_bob.find(:boards, \"bobs_board_id\")\nend\nThread.new do\n  @client_alice.find(:members, \"alicetester\")\n  @client_alice.find(:boards, \"alices_board_id\")\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Client for Ruby Trello\nDESCRIPTION: Demonstrates how to configure the HTTP client (either Faraday or Rest-Client) for the ruby-trello library.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\nTrello.configure do |config|\n  config.http_client = 'faraday'\n  # OR\n  config.http_client = 'rest-client'\nend\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby Trello Gem via Command Line\nDESCRIPTION: Shows how to install the ruby-trello gem using the gem command.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngem install ruby-trello\n```\n\n----------------------------------------\n\nTITLE: Running Tests for ruby-trello Project in Ruby\nDESCRIPTION: This command runs the test suite for the ruby-trello project. It ensures that all dependencies are installed and tests are executed.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: Ruby\nCODE:\n```\nbundle && rake\n```\n\n----------------------------------------\n\nTITLE: Using MatrixEval for Local Development Testing\nDESCRIPTION: Shows various MatrixEval commands for local development and testing against different Ruby and ActiveModel versions.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/README.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nmatrixeval --help\n# Or\nmeval --help\n```\n\nLANGUAGE: shell\nCODE:\n```\nmatrixeval init\n```\n\nLANGUAGE: shell\nCODE:\n```\nmatrixeval --all bundle install\n```\n\nLANGUAGE: shell\nCODE:\n```\nmatrixeval --all rspec\nmatrixeval --ruby 3.0 rspec spec/a_spec.rb\nmatrixeval --ruby 3.0 --active_model 7.0 rspec\n```\n\nLANGUAGE: shell\nCODE:\n```\nmatrixeval bash\nmatrixeval --ruby 3.0 --active_model 7.0 bash\n```\n\n----------------------------------------\n\nTITLE: Expecting Object Validity in RSpec\nDESCRIPTION: This RSpec expectation demonstrates the preferred syntax for checking an object's validity using a predicate method.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\nexpect(object).to be_valid\n```\n\n----------------------------------------\n\nTITLE: Creating a New Feature Branch in Git\nDESCRIPTION: This Git command creates a new branch for implementing a new feature in the ruby-trello project.\nSOURCE: https://github.com/jeremytregunna/ruby-trello/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nfeatures/my-new-feature\n```"
  }
]
[
  {
    "owner": "certbot",
    "repo": "certbot",
    "content": "TITLE: Basic Certbot Commands for Certificate Management\nDESCRIPTION: Example commands showing how to use Certbot to obtain and install certificates for different domain configurations. Demonstrates the basic syntax for getting certificates with and without installation.\n\nLANGUAGE: shell\nCODE:\n```\n# Obtain and install a certificate:\ncertbot\n\n# Obtain a certificate but don't install it:\ncertbot certonly\n\n# You may specify multiple domains with -d and obtain and\n# install different certificates by running Certbot multiple times:\ncertbot certonly -d example.com -d www.example.com\ncertbot certonly -d app.example.com -d api.example.com\n```\n\n----------------------------------------\n\nTITLE: Certbot Configuration File Example\nDESCRIPTION: An example configuration file for Certbot (cli.ini) that can be used to set default options. This file is typically stored in /etc/letsencrypt/ or ~/.config/letsencrypt/ and can be specified with the --config parameter.\n\nLANGUAGE: ini\nCODE:\n```\n# This is an example of the kind of things you can do in a configuration file.\n# All flags used by the client can be configured here. Run Certbot with\n# \"--help\" to learn more about the available options.\n#\n# Note that these options apply automatically to all use of Certbot for\n# obtaining or renewing certificates, so options specific to a single\n# certificate on a system with several certificates should not be placed\n# here.\n\n# Use a 4096 bit RSA key instead of 2048\nrsa-key-size = 4096\n\n# Uncomment and update to register with the specified e-mail address\n# email = foo@example.com\n\n# Uncomment to use the standalone authenticator on port 443\n# authenticator = standalone\n# standalone-supported-challenges = tls-sni-01\n\n# Uncomment to use the webroot authenticator. Replace webroot-path with the\n# path to the public_html / webroot folder being served by your web server.\n# authenticator = webroot\n# webroot-path = /usr/share/nginx/html\n\n# Uncomment to automatically agree to the terms of service of the ACME server\n# agree-tos = True\n\n# Uncomment to use a text interface instead of ncurses\n# text = True\n\n# Uncomment to use the manual authenticator\n# authenticator = manual\n\n# Uncomment to use the dns-01 challenge with the route53 plugin\n# dns-route53 = True\n\n# Uncomment to use the dns-01 challenge with the digitalocean plugin\n# dns-digitalocean = True\n\n# Uncomment to use the dns-01 challenge with the dnsimple plugin\n# dns-dnsimple = True\n\n# Uncomment to use the dns-01 challenge with the dnsmadeeasy plugin\n# dns-dnsmadeeasy = True\n\n# Uncomment to use the dns-01 challenge with the cloudflare plugin\n# dns-cloudflare = True\n\n# Uncomment to use the dns-01 challenge with the rfc2136 plugin\n# dns-rfc2136 = True\n\n# Uncomment to use the dns-01 challenge with the nsone plugin\n# dns-nsone = True\n\n# Uncomment to use the dns-01 challenge with the cloudxns plugin\n# dns-cloudxns = True\n\n# Uncomment to use the dns-01 challenge with the acme-dns plugin\n# dns-acme-dns = True\n\n# Uncomment to use the dns-01 challenge with the googlecloud plugin\n# dns-google = True\n\n# Uncomment to use the dns-01 challenge with the transip plugin\n# dns-transip = True\n\n# Uncomment to use the dns-01 challenge with the sakuracloud plugin\n# dns-sakuracloud = True\n\n# Uncomment to use the dns-01 challenge with the luadns plugin\n# dns-luadns = True\n\n# Uncomment to use the dns-01 challenge with the acmedns plugin\n# dns-acmedns = True\n\n# Uncomment to use the dns-01 challenge with the OVH plugin\n# dns-ovh = True\n\n# Uncomment to use the dns-01 challenge with the gehirn plugin\n# dns-gehirn = True\n\n# Uncomment to use the dns-01 challenge with the designate plugin\n# dns-designate = True\n\n# Uncomment to use the dns-01 challenge with the cloudns plugin\n# dns-cloudns = True\n\n# Uncomment to use the dns-01 challenge with the linode plugin\n# dns-linode = True\n\n# Uncomment and modify to use a custom authenticator\n# manual-auth-hook = /path/to/auth/hook\n# manual-cleanup-hook = /path/to/cleanup/hook\n\n# Uncomment to use the autorenew-hook to run when a certificate is renewed\n# autorenew-hook = /path/to/post/hook.sh\n```\n\n----------------------------------------\n\nTITLE: Webroot Plugin Usage with Multiple Domains\nDESCRIPTION: Example showing how to obtain a certificate for multiple domains using the webroot plugin. Demonstrates specifying different webroot paths for different domains in a single command.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot certonly --webroot -w /var/www/example -d www.example.com -d example.com -w /var/www/other -d other.example.net -d another.other.example.net\n```\n\n----------------------------------------\n\nTITLE: Listing Certificates with Certbot\nDESCRIPTION: Command to view all certificates managed by Certbot, which displays details including domains covered, expiry date, certificate path, key type, and private key location.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot certificates\n```\n\n----------------------------------------\n\nTITLE: Basic Certbot Command Usage Syntax\nDESCRIPTION: Shows the basic command syntax for using Certbot to obtain and manage SSL certificates with options for specifying domains.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot [SUBCOMMAND] [options] [-d DOMAIN] [-d DOMAIN] ...\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate by Name\nDESCRIPTION: Command to revoke a certificate by specifying its name. This is the simplest way to revoke a certificate if you know its name.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot revoke --cert-name example.com\n```\n\n----------------------------------------\n\nTITLE: Using Nginx Plugin with Certbot\nDESCRIPTION: Shows how to run Certbot with the Nginx plugin to automatically obtain and install certificates for Nginx web servers.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot --nginx\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate by Path\nDESCRIPTION: Command to revoke a certificate by specifying the path to the certificate file. This is useful when you don't know the certificate name but have access to its file.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/live/example.com/cert.pem\n```\n\n----------------------------------------\n\nTITLE: Basic Certificate Renewal with Certbot\nDESCRIPTION: The simplest command to check all installed certificates for impending expiry and renew them if needed. Certificates are renewed when less than 1/3 of their lifetime remains.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate with Reason\nDESCRIPTION: Command to revoke a certificate while specifying the reason for revocation. This example uses 'keycompromise' which is a common reason for certificate revocation.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot revoke --cert-name example.com --reason keycompromise\n```\n\n----------------------------------------\n\nTITLE: Renewing Certificates with Hooks in Certbot\nDESCRIPTION: Command to renew certificates with pre and post-hooks for starting and stopping a web server (nginx). The hooks run before and after each certificate renewal attempt.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew --pre-hook \"service nginx stop\" --post-hook \"service nginx start\"\n```\n\n----------------------------------------\n\nTITLE: Revoking Certificate Using Private Key\nDESCRIPTION: Command to revoke a certificate using its private key. This method works even if the certificate was created from a different ACME account.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot revoke --cert-path /etc/letsencrypt/live/example.com/cert.pem --key-path /etc/letsencrypt/live/example.com/privkey.pem\n```\n\n----------------------------------------\n\nTITLE: Setting Up Automated Certificate Renewal via Crontab\nDESCRIPTION: Command to add a cron job for automated certificate renewal to /etc/crontab. Includes randomized sleep time to distribute load on the Let's Encrypt servers.\n\nLANGUAGE: shell\nCODE:\n```\nSLEEPTIME=$(awk 'BEGIN{srand(); print int(rand()*(3600+1))}'); echo \"0 0,12 * * * root sleep $SLEEPTIME && certbot renew -q\" | sudo tee -a /etc/crontab > /dev/null\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificate by Name\nDESCRIPTION: Command to delete a certificate by specifying its name. This permanently removes the certificate from the system.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot delete --cert-name example.com\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate with Specific Name\nDESCRIPTION: Command to request a new certificate with a specific certificate name, which can be used to reference this certificate in other Certbot commands.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot certonly --cert-name example.com\n```\n\n----------------------------------------\n\nTITLE: Combining Manual Authentication with Nginx Installation\nDESCRIPTION: Command to create a certificate using manual authentication and the Nginx plugin for installation. Note that certificates created this way cannot be renewed automatically without additional hooks.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot run -a manual -i nginx -d example.com\n```\n\n----------------------------------------\n\nTITLE: Changing Certificate Key Type to ECDSA\nDESCRIPTION: Command to force renewal of a certificate while changing its key type from RSA to ECDSA. This is useful for upgrading certificates to use more efficient and secure key algorithms.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew --key-type ecdsa --cert-name example.com --force-renewal\n```\n\n----------------------------------------\n\nTITLE: Expanding Certificate Domains with Certbot\nDESCRIPTION: Command-line example showing how to use the --expand flag to update an existing certificate with additional domains. This command adds a new domain to an existing certificate.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot --expand -d existing.com,example.com,newdomain.com\n```\n\n----------------------------------------\n\nTITLE: Setting Default Key Type in Certbot Configuration\nDESCRIPTION: Configuration snippet to set ECDSA as the default key type for all future certificate operations including renewals. This is added to Certbot's configuration file.\n\nLANGUAGE: ini\nCODE:\n```\nkey-type = ecdsa\n```\n\n----------------------------------------\n\nTITLE: Running All Certbot Tests with Tox\nDESCRIPTION: Command to run all unittests, mypy type checking, and linting for the Certbot codebase using tox, which is the standard way to verify code quality before submitting a pull request.\n\nLANGUAGE: shell\nCODE:\n```\ntox\n```\n\n----------------------------------------\n\nTITLE: Implementing DNS-01 Challenge Authenticator Script for Certbot with Cloudflare API\nDESCRIPTION: A shell script that implements the DNS-01 challenge for Certbot using Cloudflare's API v4. The script creates a TXT record with the validation token and waits for DNS propagation. This is used with the --manual-auth-hook parameter for DNS validation.\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Get your API key from https://www.cloudflare.com/a/account/my-account\nAPI_KEY=\"your-api-key\"\nEMAIL=\"your.email@example.com\"\n\n# Strip only the top domain to get the zone id\nDOMAIN=$(expr match \"$CERTBOT_DOMAIN\" '.*\\.\\(.*\\..*\\)')\n\n# Get the Cloudflare zone id\nZONE_EXTRA_PARAMS=\"status=active&page=1&per_page=20&order=status&direction=desc&match=all\"\nZONE_ID=$(curl -s -X GET \"https://api.cloudflare.com/client/v4/zones?name=$DOMAIN&$ZONE_EXTRA_PARAMS\" \\\n     -H     \"X-Auth-Email: $EMAIL\" \\\n     -H     \"X-Auth-Key: $API_KEY\" \\\n     -H     \"Content-Type: application/json\" | python -c \"import sys,json;print(json.load(sys.stdin)['result'][0]['id'])\")\n\n# Create TXT record\nCREATE_DOMAIN=\"_acme-challenge.$CERTBOT_DOMAIN\"\nRECORD_ID=$(curl -s -X POST \"https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records\" \\\n     -H     \"X-Auth-Email: $EMAIL\" \\\n     -H     \"X-Auth-Key: $API_KEY\" \\\n     -H     \"Content-Type: application/json\" \\\n     --data '{\"type\":\"TXT\",\"name\":\"'\"$CREATE_DOMAIN\"'\",\"content\":\"'\"$CERTBOT_VALIDATION\"'\",\"ttl\":120}' \\\n             | python -c \"import sys,json;print(json.load(sys.stdin)['result']['id'])\")\n# Save info for cleanup\nif [ ! -d /tmp/CERTBOT_$CERTBOT_DOMAIN ];then\n        mkdir -m 0700 /tmp/CERTBOT_$CERTBOT_DOMAIN\nfi\necho $ZONE_ID > /tmp/CERTBOT_$CERTBOT_DOMAIN/ZONE_ID\necho $RECORD_ID > /tmp/CERTBOT_$CERTBOT_DOMAIN/RECORD_ID\n\n# Sleep to make sure the change has time to propagate over to DNS\nsleep 25\n```\n\n----------------------------------------\n\nTITLE: Running Certbot Linting and Tests\nDESCRIPTION: Commands for running linting tools and tests when developing for Certbot. The first command runs pylint checks, and the second runs all recommended developer tests while skipping missing Python interpreters.\n\nLANGUAGE: shell\nCODE:\n```\ntox run -e lint\ntox --skip-missing-interpreters\n```\n\n----------------------------------------\n\nTITLE: Implementing DNS-01 Challenge Cleanup Script for Certbot with Cloudflare API\nDESCRIPTION: A shell script that cleans up after the DNS-01 challenge by removing the TXT record from Cloudflare using their API. This script is specified with the --manual-cleanup-hook parameter to handle cleanup after DNS validation.\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\n# Get your API key from https://www.cloudflare.com/a/account/my-account\nAPI_KEY=\"your-api-key\"\nEMAIL=\"your.email@example.com\"\n\nif [ -f /tmp/CERTBOT_$CERTBOT_DOMAIN/ZONE_ID ]; then\n        ZONE_ID=$(cat /tmp/CERTBOT_$CERTBOT_DOMAIN/ZONE_ID)\n        rm -f /tmp/CERTBOT_$CERTBOT_DOMAIN/ZONE_ID\nfi\n\nif [ -f /tmp/CERTBOT_$CERTBOT_DOMAIN/RECORD_ID ]; then\n        RECORD_ID=$(cat /tmp/CERTBOT_$CERTBOT_DOMAIN/RECORD_ID)\n        rm -f /tmp/CERTBOT_$CERTBOT_DOMAIN/RECORD_ID\nfi\n\n# Remove the challenge TXT record from the zone\nif [ -n \"${ZONE_ID}\" ]; then\n    if [ -n \"${RECORD_ID}\" ]; then\n        curl -s -X DELETE \"https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID\" \\\n                -H \"X-Auth-Email: $EMAIL\" \\\n                -H \"X-Auth-Key: $API_KEY\" \\\n                -H \"Content-Type: application/json\"\n    fi\nfi\n```\n\n----------------------------------------\n\nTITLE: Running Manual Integration Tests with Local ACME Server\nDESCRIPTION: Commands to manually test Certbot against a local ACME server (Pebble) for development testing, showing a typical workflow for verifying certificate issuance.\n\nLANGUAGE: shell\nCODE:\n```\npython3 tools/venv.py\nsource venv/bin/activate\nrun_acme_server &\ncertbot_test certonly --standalone -d test.example.com\n# To stop Pebble, launch `fg` to get back the background job, then press CTRL+C\n```\n\n----------------------------------------\n\nTITLE: Running Certbot with HTTP-01 Manual Authentication Hooks\nDESCRIPTION: Command demonstrating how to use Certbot with custom authentication and cleanup scripts for HTTP-01 validation. Specifies domain and hook scripts for the certificate request process.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot certonly --manual --manual-auth-hook /path/to/http/authenticator.sh --manual-cleanup-hook /path/to/http/cleanup.sh -d secure.example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Webroot Authentication with Command-Line Arguments in Certbot\nDESCRIPTION: Example showing how to specify multiple domains with their corresponding webroot paths using the -w and -d flags. This approach allows setting different webroot paths for different domains.\n\nLANGUAGE: plain\nCODE:\n```\n-w /var/www/example -d example.com -d www.example.com -w /var/www/thing -d thing.net -d m.thing.net\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP-01 Challenge Authenticator Script for Certbot\nDESCRIPTION: A shell script that implements the HTTP-01 challenge for Certbot by writing the validation token to the .well-known/acme-challenge directory. This script is specified with the --manual-auth-hook parameter to handle HTTP validation.\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho $CERTBOT_VALIDATION > /var/www/htdocs/.well-known/acme-challenge/$CERTBOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Configuring Webroot Map in Certbot Config File\nDESCRIPTION: Example showing how to specify a webroot map in a Certbot configuration file. When used in a config file, the webroot-map needs to be on a single line.\n\nLANGUAGE: plain\nCODE:\n```\nwebroot-map = {\"example.com\":\"/var/www\"}\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP-01 Challenge Cleanup Script for Certbot\nDESCRIPTION: A shell script that cleans up after the HTTP-01 challenge by removing the validation file from the .well-known/acme-challenge directory. This script is specified with the --manual-cleanup-hook parameter.\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\nrm -f /var/www/htdocs/.well-known/acme-challenge/$CERTBOT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Environment Variables for Manual Plugin Authentication\nDESCRIPTION: Two environment variables that are exposed in authenticator and cleanup scripts used by the manual plugin. CERTBOT_REMAINING_CHALLENGES indicates how many challenges remain after the current one, while CERTBOT_ALL_DOMAINS provides a comma-separated list of all domains being challenged for the certificate.\n\nLANGUAGE: bash\nCODE:\n```\nCERTBOT_REMAINING_CHALLENGES=\"number of challenges remaining\"\nCERTBOT_ALL_DOMAINS=\"domain1.com,domain2.com,domain3.com\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Multiple Individual Domains with Certbot\nDESCRIPTION: Alternative syntax for specifying multiple domains when expanding a certificate. This approach lists each domain separately using multiple -d flags.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot --expand -d existing.com -d example.com -d newdomain.com\n```\n\n----------------------------------------\n\nTITLE: Setting DNS Google Project with Command Line Option\nDESCRIPTION: Command line option for specifying the Google Cloud project where DNS zones reside, allowing Certbot to work when auth credentials are in a different project than the managed zones.\n\nLANGUAGE: ini\nCODE:\n```\n--dns-google-project\n```\n\n----------------------------------------\n\nTITLE: Modifying Certificate Domains with --cert-name Flag\nDESCRIPTION: Command to modify a certificate to contain only a single domain. This example shows how to remove domains from an existing certificate by specifying only the domains to keep.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot certonly --cert-name example.com -d example.com\n```\n\n----------------------------------------\n\nTITLE: Adding New Lexicon Base Classes for DNS Authentication\nDESCRIPTION: Introduction of new base classes for implementing DNS authenticator plugins using Lexicon to communicate with provider DNS APIs.\n\nLANGUAGE: markdown\nCODE:\n```\n* Add a new base class `certbot.plugins.dns_common_lexicon.LexiconDNSAuthenticator` to implement a DNS\n  authenticator plugin backed by Lexicon to communicate with the provider DNS API. This approach relies\n  heavily on conventions to reduce the implementation complexity of a new plugin.\n* Add a new test base class `certbot.plugins.dns_test_common_lexicon.BaseLexiconDNSAuthenticatorTest` to\n  help testing DNS plugins implemented on top of `LexiconDNSAuthenticator`.\n```\n\n----------------------------------------\n\nTITLE: Finding Certificate References in Server Configuration\nDESCRIPTION: Command to search for references to a certificate in web server configuration files. This helps identify what needs to be updated before deleting a certificate.\n\nLANGUAGE: bash\nCODE:\n```\nsudo bash -c 'grep -R live/example.com /etc/{nginx,httpd,apache2}'\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Setting for Certbot Hooks\nDESCRIPTION: Addition of new environment variables RENEWED_DOMAINS and FAILED_DOMAINS for consumption by post renewal hooks.\n\nLANGUAGE: markdown\nCODE:\n```\n* Added `RENEWED_DOMAINS` and `FAILED_DOMAINS` environment variables for consumption by post renewal hooks.\n```\n\n----------------------------------------\n\nTITLE: Generating Self-Signed Certificate for Replacement\nDESCRIPTION: Command to generate a self-signed certificate and key. This is part of the safe certificate deletion process to replace Let's Encrypt certificates in server configurations.\n\nLANGUAGE: bash\nCODE:\n```\nsudo openssl req -nodes -batch -x509 -newkey rsa:2048 -keyout /etc/letsencrypt/self-signed-privkey.pem -out /etc/letsencrypt/self-signed-cert.pem -days 356\n```\n\n----------------------------------------\n\nTITLE: Joining Paths in Python Path Handling\nDESCRIPTION: A note about updating joinpath syntax to use one addition per call instead of multiple inputs to avoid mypy errors on Python 3.10.\n\nLANGUAGE: markdown\nCODE:\n```\n* Updates `joinpath` syntax to only use one addition per call, because the multiple inputs\n  version was causing mypy errors on Python 3.10.\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificates with Certbot\nDESCRIPTION: Command to remove a certificate by its name from Certbot. This is used after making changes to your certificate setup or when a certificate is no longer needed.\n\nLANGUAGE: shell\nCODE:\n```\nsudo certbot delete --cert-name example.com\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot snap locally\nDESCRIPTION: Command to install the locally built Certbot snap with classic confinement and dangerous flag for testing.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install --dangerous --classic certbot_*_amd64.snap\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request from Let's Encrypt Validation Server\nDESCRIPTION: Shows what a typical HTTP request from the Let's Encrypt validation server looks like when it's attempting to validate domain ownership using the HTTP-01 challenge.\n\nLANGUAGE: shell\nCODE:\n```\n66.133.109.36 - - [05/Jan/2016:20:11:24 -0500] \"GET /.well-known/acme-challenge/HGr8U1IeTW4kY_Z6UIyaakzOkyQgPr_7ArlLgtZE8SX HTTP/1.1\" 200 87 \"-\" \"Mozilla/5.0 (compatible; Let's Encrypt validation server; +https://www.letsencrypt.org)\"\n```\n\n----------------------------------------\n\nTITLE: Generating files for Certbot DNS plugins\nDESCRIPTION: Command to generate all necessary files for building all Certbot DNS plugin snaps.\n\nLANGUAGE: bash\nCODE:\n```\ntools/snap/generate_dnsplugins_all.sh\n```\n\n----------------------------------------\n\nTITLE: Combining Webroot Authentication with Apache Installation\nDESCRIPTION: Command to create a certificate using the webroot plugin for domain validation and the Apache plugin for certificate installation. The webroot path is specified with -w followed by the directory path.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot run -a webroot -i apache -w /var/www/html -d example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Certbot to trust third-party plugins\nDESCRIPTION: Command to configure Certbot snap to trust plugins with root permissions.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap set certbot trust-plugin-with-root=ok\n```\n\n----------------------------------------\n\nTITLE: U.S. Government 18F TLS Cipher Configuration\nDESCRIPTION: The cipher suite configuration used by the U.S. Government 18F website (https://18f.gsa.gov/). This configuration prioritizes ECDHE and DHE ciphers with AES encryption while explicitly excluding weak or vulnerable ciphers.\n\nLANGUAGE: plaintext\nCODE:\n```\nssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !MD5 !EXP !DSS !PSK !SRP !kECDH !CAMELLIA !RC4 !SEED';\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot plugin snap\nDESCRIPTION: Command to install a locally built Certbot DNS plugin snap for testing.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install --dangerous certbot-dns-dnsimple_*_amd64.snap\n```\n\n----------------------------------------\n\nTITLE: Renewing Certificates with Deploy Hook in Certbot\nDESCRIPTION: Command to renew certificates with a deploy hook that runs only after successful renewals. This is useful for performing actions only when certificates are actually renewed.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew --deploy-hook /path/to/deploy-hook-script\n```\n\n----------------------------------------\n\nTITLE: Connecting Certbot plugin interface\nDESCRIPTION: Command to connect the plugin interface between the Certbot snap and a plugin snap.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap connect certbot:plugin certbot-dns-dnsimple\n```\n\n----------------------------------------\n\nTITLE: Manual Certificate Renewal for Specific Domains\nDESCRIPTION: Command to renew a specific certificate by explicitly listing all its domains. This provides more fine-grained control over the renewal process for individual certificates.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot certonly -n -d example.com -d www.example.com\n```\n\n----------------------------------------\n\nTITLE: Building Certbot Docker Images\nDESCRIPTION: Builds Docker images for Certbot and its DNS plugins for all supported architectures, storing them in the local Docker image cache.\n\nLANGUAGE: bash\nCODE:\n```\n./build.sh <TAG> all\n```\n\n----------------------------------------\n\nTITLE: Reconfiguring Certificate Renewal Options with Certbot\nDESCRIPTION: Command to change a certificate's renewal options in Certbot v2.3.0+. This example updates the webroot path for future renewals of a specific certificate.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot reconfigure --cert-name example.com --webroot-path /path/to/new/location\n```\n\n----------------------------------------\n\nTITLE: Testing Certbot Docker Images\nDESCRIPTION: Loads Docker images from the local cache and runs test commands to validate the image contents.\n\nLANGUAGE: bash\nCODE:\n```\n./test.sh <TAG> all\n```\n\n----------------------------------------\n\nTITLE: Performing a Dry-Run Certificate Renewal with Modified Options in Certbot\nDESCRIPTION: Command to test certificate renewal for a specific domain with modified webroot path using the dry-run flag. This allows validation of configuration changes before actual renewal.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew --cert-name example.com --webroot-path /path/to/new/location --dry-run\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for Certbot Project\nDESCRIPTION: A comprehensive list of Python package dependencies with specific version requirements for the Certbot project. Each dependency includes version constraints and Python version compatibility requirements, typically for Python 3.9 and newer versions, with some packages having platform-specific requirements.\n\nLANGUAGE: plaintext\nCODE:\n```\ns3transfer==0.11.4 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsecretstorage==3.3.3 ; python_version >= \"3.9\" and python_version < \"4.0\" and sys_platform == \"linux\"\nsemantic-version==2.10.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsetuptools-rust==1.11.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsetuptools==78.1.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nshellingham==1.5.4 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsix==1.17.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsniffio==1.3.1 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsnowballstemmer==2.2.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsoupsieve==2.6 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinx-rtd-theme==3.0.2 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinx==7.4.7 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-applehelp==2.0.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-devhelp==2.0.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-htmlhelp==2.1.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-jquery==4.1 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-jsmath==1.0.1 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-qthelp==2.0.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nsphinxcontrib-serializinghtml==2.0.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nstack-data==0.6.3 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntldextract==5.1.3 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntomli==2.2.1 ; python_version >= \"3.9\" and python_version < \"3.11\"\ntomlkit==0.13.2 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntox==4.25.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntraitlets==5.14.3 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntrove-classifiers==2025.3.19.19 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntwine==6.1.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-httplib2==0.22.0.20250401 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-pyrfc3339==2.0.1.20241107 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-python-dateutil==2.9.0.20241206 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-pytz==2025.2.0.20250326 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-pywin32==310.0.0.20250319 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-requests==2.31.0.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-requests==2.32.0.20250328 ; python_version >= \"3.10\" and python_version < \"4.0\"\ntypes-setuptools==78.1.0.20250329 ; python_version >= \"3.9\" and python_version < \"4.0\"\ntypes-urllib3==1.26.25.14 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntyping-extensions==4.13.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nuritemplate==4.1.1 ; python_version >= \"3.9\" and python_version < \"4.0\"\nurllib3==1.26.20 ; python_version >= \"3.9\" and python_version < \"3.10\"\nurllib3==2.3.0 ; python_version >= \"3.10\" and python_version < \"4.0\"\nvirtualenv==20.30.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\nwcwidth==0.2.13 ; python_version >= \"3.9\" and python_version < \"4.0\"\nwheel==0.45.1 ; python_version >= \"3.9\" and python_version < \"4.0\"\nwrapt==1.17.2 ; python_version >= \"3.9\" and python_version < \"4.0\"\nxattr==1.1.4 ; python_version >= \"3.9\" and python_version < \"4.0\" and sys_platform == \"darwin\"\nzipp==3.21.0 ; python_version >= \"3.9\" and python_version < \"3.12\"\nzstandard==0.23.0 ; python_version >= \"3.9\" and python_version < \"4.0\"\n```\n\n----------------------------------------\n\nTITLE: Forcing Certificate Renewal with Modified Options in Certbot\nDESCRIPTION: Command to perform live certificate renewal with a modified webroot path and force renewal flag. This applies configuration changes permanently to the specified certificate.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot renew --cert-name example.com --webroot-path /path/to/new/location --force-renewal\n```\n\n----------------------------------------\n\nTITLE: Generating Certbot Requirements File with Repin Script\nDESCRIPTION: Command reference for the script that generated this requirements file. The file serves dual purposes as pip constraints and for GitHub dependency scanning.\n\nLANGUAGE: bash\nCODE:\n```\ntools/pinning/current/repin.sh\n```\n\n----------------------------------------\n\nTITLE: Creating Pre-Hook Script for HAProxy Webserver Stop\nDESCRIPTION: Command to create a pre-hook script that stops HAProxy before certificate renewal. Used when the webserver needs to be stopped for certificate validation.\n\nLANGUAGE: shell\nCODE:\n```\nsudo sh -c 'printf \"#!/bin/sh\\nservice haproxy stop\\n\" > /etc/letsencrypt/renewal-hooks/pre/haproxy.sh'\n```\n\n----------------------------------------\n\nTITLE: Pinned Python Dependencies for Certbot in Python 3.9\nDESCRIPTION: This is a requirements file listing all pinned Python package dependencies for the Certbot project, specifically for Python 3.9 environments. It includes exact versions of libraries for cryptography, DNS management, web interactions, and testing tools.\n\nLANGUAGE: plaintext\nCODE:\n```\n# This file was generated by tools/pinning/oldest/repin.sh and can be updated using\n# that script.\napacheconfig==0.3.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nasn1crypto==0.24.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nastroid==3.3.9 ; python_version >= \"3.9\" and python_version < \"3.10\"\nattrs==25.3.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nbeautifulsoup4==4.13.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\nboto3==1.15.15 ; python_version >= \"3.9\" and python_version < \"3.10\"\nbotocore==1.18.15 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncachetools==5.5.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncertifi==2025.1.31 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncffi==1.12.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\nchardet==3.0.4 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncloudflare==2.19.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncolorama==0.4.6 ; python_version >= \"3.9\" and python_version < \"3.10\" and sys_platform == \"win32\"\nconfigargparse==1.5.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\nconfigobj==5.0.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncoverage==7.8.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncryptography==43.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\ncython==0.29.37 ; python_version >= \"3.9\" and python_version < \"3.10\"\ndill==0.3.9 ; python_version >= \"3.9\" and python_version < \"3.10\"\ndistlib==0.3.9 ; python_version >= \"3.9\" and python_version < \"3.10\"\ndistro==1.0.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\ndns-lexicon==3.15.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\ndnspython==2.6.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\nexceptiongroup==1.2.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nexecnet==2.1.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\nfilelock==3.18.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nfuncsigs==0.4 ; python_version >= \"3.9\" and python_version < \"3.10\"\nfuture==1.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\ngoogle-api-python-client==1.6.5 ; python_version >= \"3.9\" and python_version < \"3.10\"\ngoogle-auth==2.16.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nhttplib2==0.9.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nidna==2.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\nimportlib-metadata==4.6.4 ; python_version >= \"3.9\" and python_version < \"3.10\"\niniconfig==2.1.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nipaddress==1.0.16 ; python_version >= \"3.9\" and python_version < \"3.10\"\nisort==6.0.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\njmespath==0.10.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\njosepy==2.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\njsonlines==4.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nmccabe==0.7.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nmypy-extensions==1.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nmypy==1.15.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nndg-httpsclient==0.3.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\noauth2client==4.1.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\npackaging==24.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nparsedatetime==2.4 ; python_version >= \"3.9\" and python_version < \"3.10\"\npbr==1.8.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npip==25.0.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\nplatformdirs==4.3.7 ; python_version >= \"3.9\" and python_version < \"3.10\"\npluggy==1.5.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nply==3.4 ; python_version >= \"3.9\" and python_version < \"3.10\"\npy==1.11.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyasn1-modules==0.4.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyasn1==0.4.8 ; python_version >= \"3.9\" and python_version < \"3.10\"\npycparser==2.14 ; python_version >= \"3.9\" and python_version < \"3.10\"\npylint==3.3.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyopenssl==25.0.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyotp==2.9.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyparsing==2.4.7 ; python_version >= \"3.9\" and python_version < \"3.10\"\npyrfc3339==1.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npytest-cov==6.1.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npytest-xdist==3.6.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\npytest==8.3.5 ; python_version >= \"3.9\" and python_version < \"3.10\"\npython-augeas==0.5.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npython-dateutil==2.9.0.post0 ; python_version >= \"3.9\" and python_version < \"3.10\"\npython-digitalocean==1.11 ; python_version >= \"3.9\" and python_version < \"3.10\"\npytz==2019.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\npywin32==310 ; python_version >= \"3.9\" and python_version < \"3.10\" and sys_platform == \"win32\"\npyyaml==6.0.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nrequests-file==2.1.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nrequests==2.20.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nrsa==4.9 ; python_version >= \"3.9\" and python_version < \"3.10\"\ns3transfer==0.3.7 ; python_version >= \"3.9\" and python_version < \"3.10\"\nsetuptools==78.1.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nsix==1.11.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nsoupsieve==2.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntldextract==5.1.3 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntomli==2.2.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntomlkit==0.13.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntox==1.9.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-httplib2==0.22.0.20250401 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-pyrfc3339==2.0.1.20241107 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-python-dateutil==2.9.0.20241206 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-pytz==2025.2.0.20250326 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-pywin32==310.0.0.20250319 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-requests==2.31.0.6 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-setuptools==78.1.0.20250329 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntypes-urllib3==1.26.25.14 ; python_version >= \"3.9\" and python_version < \"3.10\"\ntyping-extensions==4.13.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nuritemplate==3.0.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\nurllib3==1.24.2 ; python_version >= \"3.9\" and python_version < \"3.10\"\nvirtualenv==20.30.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\nwheel==0.45.1 ; python_version >= \"3.9\" and python_version < \"3.10\"\nzipp==3.21.0 ; python_version >= \"3.9\" and python_version < \"3.10\"\n```\n\n----------------------------------------\n\nTITLE: Creating Post-Hook Script for HAProxy Webserver Start\nDESCRIPTION: Command to create a post-hook script that starts HAProxy after certificate renewal. Ensures the webserver is restarted once the certificates are renewed.\n\nLANGUAGE: shell\nCODE:\n```\nsudo sh -c 'printf \"#!/bin/sh\\nservice haproxy start\\n\" > /etc/letsencrypt/renewal-hooks/post/haproxy.sh'\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for ACME Crypto Utility Module in reStructuredText\nDESCRIPTION: This snippet uses Sphinx's automodule directive to automatically generate documentation for all members of the acme.crypto_util module. This is a common pattern in Python projects that use Sphinx for documentation generation.\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: acme.crypto_util\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Setting Execute Permissions for HAProxy Pre-Hook Script\nDESCRIPTION: Command to set proper execute permissions (755) for the HAProxy pre-hook script. Essential for the script to run during the certificate renewal process.\n\nLANGUAGE: shell\nCODE:\n```\nsudo chmod 755 /etc/letsencrypt/renewal-hooks/pre/haproxy.sh\n```\n\n----------------------------------------\n\nTITLE: Sphinx autodoc directive for ACME fields module\nDESCRIPTION: This RST (reStructuredText) directive instructs Sphinx to automatically generate documentation for all members of the acme.fields module. The autodoc extension pulls documentation directly from docstrings in the Python code.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.fields\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Setting Execute Permissions for HAProxy Post-Hook Script\nDESCRIPTION: Command to set proper execute permissions (755) for the HAProxy post-hook script. Ensures the script can execute after certificate renewal.\n\nLANGUAGE: shell\nCODE:\n```\nsudo chmod 755 /etc/letsencrypt/renewal-hooks/post/haproxy.sh\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for ACME Errors Module using Sphinx in RST\nDESCRIPTION: A Sphinx directive that automatically generates documentation for all members of the acme.errors module. This is part of the API documentation for the certbot project.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.errors\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Running Certbot with Explicit HTTP Challenge and Manual Hooks\nDESCRIPTION: Command to run Certbot with manual hooks while explicitly specifying HTTP-01 as the preferred challenge method. Useful for automated deployments requiring custom validation handling.\n\nLANGUAGE: shell\nCODE:\n```\ncertbot certonly --manual --preferred-challenges=http --manual-auth-hook /path/to/http/authenticator.sh --manual-cleanup-hook /path/to/http/cleanup.sh -d secure.example.com\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for ACME Messages Module in reStructuredText\nDESCRIPTION: A reStructuredText directive that automatically documents the acme.messages module and all its members. This is part of Certbot's documentation system using Sphinx's autodoc extension.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: acme.messages\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Cloning the Certbot Repository with Git\nDESCRIPTION: Command to clone the Certbot GitHub repository to your local machine, which is the first step in setting up a local development environment.\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/certbot/certbot\n```\n\n----------------------------------------\n\nTITLE: Referencing ACME Standalone Module with Sphinx Directives in RST\nDESCRIPTION: This RST (reStructuredText) code uses Sphinx autodoc directives to automatically generate documentation for the acme.standalone module and all its members. This is a common pattern in Python projects for creating API documentation.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.standalone\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Installing OS Dependencies for Certbot on Debian/Ubuntu\nDESCRIPTION: Commands to install system dependencies required for Certbot development on APT-based Linux distributions like Debian and Ubuntu.\n\nLANGUAGE: shell\nCODE:\n```\n# For APT-based distributions (e.g. Debian, Ubuntu ...)\nsudo apt update\nsudo apt install python3-venv libaugeas0\n```\n\n----------------------------------------\n\nTITLE: Generating Sphinx Documentation for ACME JWS Module\nDESCRIPTION: This RST directive instructs Sphinx to automatically document all members of the acme.jws module. The automodule directive includes all class and function members within the module's documentation.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.jws\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Installing OS Dependencies for Certbot on RPM-based Distributions\nDESCRIPTION: Commands to install system dependencies required for Certbot development on RPM-based Linux distributions like Fedora and CentOS.\n\nLANGUAGE: shell\nCODE:\n```\n# For RPM-based distributions (e.g. Fedora, CentOS ...)\n# NB1: old distributions will use yum instead of dnf\n# NB2: RHEL-based distributions use python3X instead of python3 (e.g. python38)\nsudo dnf install python3 augeas-libs\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation Structure with reStructuredText (RST)\nDESCRIPTION: This RST code configures the structure of a Sphinx documentation project for the ACME Python library. It sets up a table of contents tree, includes auto-documentation for the ACME module, and adds standard navigation indices.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   api\n\n.. automodule:: acme\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Setting Up Python Virtual Environment for Certbot Development\nDESCRIPTION: Commands to set up a Python virtual environment for Certbot development after cloning the repository, which isolates the development dependencies from your system Python.\n\nLANGUAGE: shell\nCODE:\n```\ncd certbot\npython3 tools/venv.py\n```\n\n----------------------------------------\n\nTITLE: Including External JWS Help Documentation in Sphinx\nDESCRIPTION: This ReStructuredText directive includes the content of the 'jws-help.txt' file from the parent directory into the current documentation. The ':orphan:' directive prevents warnings about the document not being included in any toctree.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n:orphan:\n\n.. literalinclude:: ../jws-help.txt\n```\n\n----------------------------------------\n\nTITLE: Running Automated Integration Tests with Tox\nDESCRIPTION: Command to run the automated integration tests for Certbot using tox, which sets up Pebble (Let's Encrypt ACME CA server for testing) and launches the integration tests.\n\nLANGUAGE: shell\nCODE:\n```\ntox run -e integration\n```\n\n----------------------------------------\n\nTITLE: JWS Command Line Interface Usage Example\nDESCRIPTION: Shows the basic usage syntax and available commands for the JWS CLI tool. The tool supports 'sign' and 'verify' operations as subcommands, with options for help and compact output format.\n\nLANGUAGE: plaintext\nCODE:\n```\nusage: jws [-h] [--compact] {sign,verify} ...\n\npositional arguments:\n  {sign,verify}\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --compact\n```\n\n----------------------------------------\n\nTITLE: Creating Table of Contents in Sphinx Documentation for Certbot\nDESCRIPTION: This RST code defines two table of contents trees (toctree directives) that organize the Certbot documentation. The first toctree has a depth of 2 and includes general usage documentation, while the second toctree with depth 1 specifically points to API documentation.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n\n   intro\n   what\n   install\n   using\n   contributing\n   packaging\n   compatibility\n   resources\n\n.. toctree::\n   :maxdepth: 1\n\n   api\n```\n\n----------------------------------------\n\nTITLE: Installing ACME Package with Documentation Dependencies for ReadTheDocs\nDESCRIPTION: Requirements file that installs the ACME package in editable mode with documentation dependencies and pins dependencies from a separate requirements file. This configuration addresses ReadTheDocs limitations for proper documentation building.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme[docs]\n```\n\n----------------------------------------\n\nTITLE: Adding Index References in Sphinx Documentation\nDESCRIPTION: This RST code defines the indices and tables section of the documentation, providing links to the general index, module index, and search functionality through Sphinx's reference system.\n\nLANGUAGE: rst\nCODE:\n```\n* :ref:`genindex`\n* :ref:`modindex`\n* :ref:`search`\n```\n\n----------------------------------------\n\nTITLE: Sphinx autodoc directive for documenting certbot.compat.filesystem module\nDESCRIPTION: This RST (reStructuredText) code snippet specifies how the Sphinx documentation generator should document the certbot.compat.filesystem module. It includes directives to show all members, undocumented members, and inheritance information.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot.compat.filesystem\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Including README Content with reStructuredText Include Directive\nDESCRIPTION: This snippet demonstrates how to include specific sections from an external README.rst file into the current documentation using reStructuredText include directives with start-after and end-before parameters to extract only the introduction section.\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. include:: ../README.rst\n    :start-after: tag:intro-begin\n    :end-before: tag:intro-end\n```\n\n----------------------------------------\n\nTITLE: Sphinx Documentation Directive for certbot.plugins.dns_test_common Module\nDESCRIPTION: A reStructuredText directive that generates documentation for the dns_test_common module in the certbot.plugins package. The directive includes all members, undocumented members, and shows inheritance relations.\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: certbot.plugins.dns_test_common\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Implementing Python Replacement Functions for Certificate Generation\nDESCRIPTION: A code reference showing the addition of a new make_self_signed_cert function in acme.crypto_util to replace the deprecated gen_ss_cert function which used deprecated pyOpenSSL API.\n\nLANGUAGE: markdown\nCODE:\n```\n* Deprecated `gen_ss_cert` in `acme.crypto_util` as it uses deprecated\n  pyOpenSSL API.\n* Add `make_self_signed_cert` to `acme.crypto_util` to replace `gen_ss_cert.\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for certbot.ocsp Package\nDESCRIPTION: Sphinx directive that enables automatic documentation generation for the certbot.ocsp module. It includes settings to document all members, undocumented members, and show inheritance relationships.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: certbot.ocsp\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Implementing LooseVersion Utility Class\nDESCRIPTION: Addition of a new LooseVersion class in the certbot.util module for version comparison functionality.\n\nLANGUAGE: markdown\nCODE:\n```\n* Add `certbot.util.LooseVersion` class. See [GH #9489](https://github.com/certbot/certbot/issues/9489).\n```\n\n----------------------------------------\n\nTITLE: Setting Up Sphinx Documentation Structure in RST\nDESCRIPTION: A Sphinx restructuredtext directive that creates a table of contents with a maximum depth of 4 levels and includes the 'api/certbot' module documentation.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n   :maxdepth: 4\n\n   api/certbot\n```\n\n----------------------------------------\n\nTITLE: Configuring RFC2136 DNS Query Signing in Credentials File\nDESCRIPTION: Configuration option for RFC2136 DNS plugin to control whether SOA queries are signed with TSIG keys, helping with split-view DNS and hidden primary setups.\n\nLANGUAGE: ini\nCODE:\n```\ndns_rfc2136_sign_query\n```\n\n----------------------------------------\n\nTITLE: Setting up Sphinx Documentation Tree for certbot-dns-google\nDESCRIPTION: This RST directive sets up the documentation table of contents tree with a depth of 2 levels and labels it as 'Contents'. It's part of the Sphinx documentation structure.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n   :caption: Contents:\n```\n\n----------------------------------------\n\nTITLE: Accessing ACME Account Thumbprint in show_account Command\nDESCRIPTION: Enhanced functionality in the show_account command to display the RFC8555-defined ACME Account Thumbprint for identification purposes.\n\nLANGUAGE: python\nCODE:\n```\ncertbot show_account\n```\n\n----------------------------------------\n\nTITLE: Including certbot-dns-google Module Documentation\nDESCRIPTION: This RST directive automatically includes the documentation from the certbot_dns_google Python module. It will render all docstrings from the module including member functions and classes.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot_dns_google\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Using Reconfigure Subcommand to Modify Certificate Configuration\nDESCRIPTION: New subcommand that allows users to modify certificate configuration without renewing it, providing more flexibility in certificate management.\n\nLANGUAGE: python\nCODE:\n```\ncertbot reconfigure\n```\n\n----------------------------------------\n\nTITLE: Including API Documentation Reference\nDESCRIPTION: This RST directive sets up another table of contents tree with a maximum depth of 1, including the 'api' document which likely contains detailed API documentation for the certbot-dns-google plugin.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 1\n\n   api\n```\n\n----------------------------------------\n\nTITLE: Nginx Server Name with Hostname Variable\nDESCRIPTION: An example of using the $hostname variable in Nginx's server_name directive, which allows the server to automatically use the system hostname in the server configuration.\n\nLANGUAGE: ini\nCODE:\n```\nserver_name $hostname;\n```\n\n----------------------------------------\n\nTITLE: Setting up Sphinx Documentation for certbot-dns-nsone\nDESCRIPTION: This RST (reStructuredText) snippet defines the structure of the documentation for the certbot-dns-nsone module. It includes table of contents directives, automodule for automatic API documentation generation, and links to indices and search pages.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n   :caption: Contents:\n\n.. automodule:: certbot_dns_nsone\n   :members:\n\n.. toctree::\n   :maxdepth: 1\n\n   api\n```\n\n----------------------------------------\n\nTITLE: Using JSON Webroot Map for Domain Authentication in Certbot\nDESCRIPTION: Example of using the --webroot-map parameter with a JSON dictionary to map domains to webroot paths. This format allows specifying multiple domains for a single webroot path using comma-separated values.\n\nLANGUAGE: json\nCODE:\n```\n{\"eg1.is,m.eg1.is\":\"/www/eg1/\", \"eg2.is\":\"/www/eg2\"}\n```\n\n----------------------------------------\n\nTITLE: Setting up Sphinx Documentation Structure for certbot-dns-sakuracloud\nDESCRIPTION: Defines the structure of the Sphinx documentation for the certbot-dns-sakuracloud plugin. It includes table of contents directives, links to API documentation, and automatic module documentation generation.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. toctree::\n   :maxdepth: 2\n   :caption: Contents:\n\n.. toctree::\n   :maxdepth: 1\n\n   api\n\n.. automodule:: certbot_dns_sakuracloud\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Referencing Legacy Certbot Auto Script Files in Markdown\nDESCRIPTION: References to the legacy self-updating shell script filenames that were previously used to wrap Certbot functionality. These files need to be maintained for backward compatibility.\n\nLANGUAGE: markdown\nCODE:\n```\n`certbot-auto` and `letsencrypt-auto` were two names for the same self-updating\nshell script that wrapped Certbot.\n```\n\n----------------------------------------\n\nTITLE: Describing Legacy File Dependencies in Markdown\nDESCRIPTION: Explains which specific files older scripts depend on for updates and verification from the GitHub repository.\n\nLANGUAGE: markdown\nCODE:\n```\npulling `letsencrypt-auto` and `letsencrypt-auto.sig` from this directory hosted on Github to download and\nverify updates.\n```\n\n----------------------------------------\n\nTITLE: Installing certbot-dns-linode and dependencies for ReadTheDocs\nDESCRIPTION: This pip requirements specification installs certbot, acme, and the certbot-dns-linode package with its documentation dependencies in editable mode. It also references a constraints file to pin dependency versions for stability.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-linode[docs]\n```\n\n----------------------------------------\n\nTITLE: Referencing GitHub Issue in Markdown\nDESCRIPTION: References the GitHub issue that provides additional information about the legacy files and their maintenance.\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://github.com/certbot/certbot/issues/8812\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for certbot-dns-luadns Documentation on ReadTheDocs\nDESCRIPTION: This pip requirements file installs the necessary packages for ReadTheDocs to build documentation for the certbot-dns-luadns plugin. It uses dependency constraints from a central requirements file and installs certbot, acme, and the dns-luadns plugin itself in development mode with documentation dependencies.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-luadns[docs]\n```\n\n----------------------------------------\n\nTITLE: Deploying Certbot Docker Images\nDESCRIPTION: Pushes previously generated Docker images to Docker Hub with the specified tag. If the tag is a version greater than v2.0.0, a 'latest' tag is also generated.\n\nLANGUAGE: bash\nCODE:\n```\n./deploy_images.sh <TAG> all\n```\n\n----------------------------------------\n\nTITLE: Installing certbot-dns-rfc2136 Dependencies for ReadTheDocs\nDESCRIPTION: This requirements file instructs pip to install certbot-dns-rfc2136 with documentation dependencies in editable mode. It uses constraints from the tools requirements file and includes acme and certbot dependencies.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-rfc2136[docs]\n```\n\n----------------------------------------\n\nTITLE: Deploying Multi-architecture Manifests\nDESCRIPTION: Adds multi-architecture manifests to Docker Hub, assuming images have been previously pushed with the same tag.\n\nLANGUAGE: bash\nCODE:\n```\n./deploy_manifests.sh <TAG> all\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot DNS Route53 with Dependencies for ReadTheDocs\nDESCRIPTION: Requirements file that installs Certbot, ACME, and Certbot DNS Route53 plugin with documentation dependencies in editable mode. It constrains dependencies using a central requirements file for stability.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-route53[docs]\n```\n\n----------------------------------------\n\nTITLE: Setting up a VM user for Certbot snap development\nDESCRIPTION: Command to create a new user named certbot with sudo privileges for snap development.\n\nLANGUAGE: bash\nCODE:\n```\nadduser certbot && usermod -aG sudo certbot && su - certbot\n```\n\n----------------------------------------\n\nTITLE: Installing required dependencies for Certbot snap development\nDESCRIPTION: Command to update package lists and install git and python for snap development.\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update && sudo apt install -y git python\n```\n\n----------------------------------------\n\nTITLE: Adding current user to LXD group\nDESCRIPTION: Command to add the current user to the LXD group and update shell privileges for building snaps.\n\nLANGUAGE: bash\nCODE:\n```\nsudo usermod -a -G lxd ${USER} && newgrp lxd\n```\n\n----------------------------------------\n\nTITLE: Setting up LXD for Snapcraft\nDESCRIPTION: Commands to install LXD and initialize it for use with Snapcraft.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install lxd; sudo /snap/bin/lxd waitready && sudo /snap/bin/lxd init --auto\n```\n\n----------------------------------------\n\nTITLE: Installing Snapcraft\nDESCRIPTION: Command to install Snapcraft with classic confinement for building snap packages.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap install --classic snapcraft\n```\n\n----------------------------------------\n\nTITLE: Cloning Certbot repository\nDESCRIPTION: Command to clone the Certbot repository from GitHub for snap building.\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/certbot/certbot\n```\n\n----------------------------------------\n\nTITLE: Building Certbot snap\nDESCRIPTION: Command to build the Certbot snap package using LXD containers.\n\nLANGUAGE: bash\nCODE:\n```\nsnapcraft --use-lxd\n```\n\n----------------------------------------\n\nTITLE: Cleaning Snapcraft build environment\nDESCRIPTION: Command to clean the Snapcraft build environment for a fresh build using LXD containers.\n\nLANGUAGE: bash\nCODE:\n```\nsnapcraft clean --use-lxd\n```\n\n----------------------------------------\n\nTITLE: Setting Apache Mutex Configuration\nDESCRIPTION: Defines the mutex lock file location for Apache server, which must be stored on a local disk.\n\nLANGUAGE: apache\nCODE:\n```\nMutex file:${APACHE_LOCK_DIR} default\n```\n\n----------------------------------------\n\nTITLE: Connecting Certbot plugin metadata interface\nDESCRIPTION: Command to connect the plugin metadata interface between Certbot and a plugin snap.\n\nLANGUAGE: bash\nCODE:\n```\nsudo snap connect certbot-dns-dnsimple:certbot-metadata certbot:certbot-metadata\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Process ID File\nDESCRIPTION: Specifies the location where Apache should store its process identification number on startup.\n\nLANGUAGE: apache\nCODE:\n```\nPidFile ${APACHE_PID_FILE}\n```\n\n----------------------------------------\n\nTITLE: Preparing Snapcraft for remote builds\nDESCRIPTION: Command to trigger Snapcraft to request access to your Launchpad account for remote builds.\n\nLANGUAGE: bash\nCODE:\n```\nsnapcraft remote-build --launchpad-accept-public-upload --status\n```\n\n----------------------------------------\n\nTITLE: Setting Apache Connection Timeout\nDESCRIPTION: Defines the number of seconds before receives and sends time out.\n\nLANGUAGE: apache\nCODE:\n```\nTimeout 300\n```\n\n----------------------------------------\n\nTITLE: Building all Certbot snaps remotely for multiple architectures\nDESCRIPTION: Command to build all available Certbot snaps for multiple architectures using remote build.\n\nLANGUAGE: bash\nCODE:\n```\npython3 tools/snap/build_remote.py ALL --archs amd64 arm64 armhf\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache KeepAlive Settings\nDESCRIPTION: Enables persistent connections and configures the maximum number of requests and timeout for keep-alive connections.\n\nLANGUAGE: apache\nCODE:\n```\nKeepAlive On\n\n#\n# MaxKeepAliveRequests: The maximum number of requests to allow\n# during a persistent connection. Set to 0 to allow an unlimited amount.\n# We recommend you leave this number high, for maximum performance.\n#\nMaxKeepAliveRequests 100\n\n#\n# KeepAliveTimeout: Number of seconds to wait for the next request from the\n# same client on the same connection.\n#\nKeepAliveTimeout 5\n```\n\n----------------------------------------\n\nTITLE: Building specific Certbot snap for a single architecture\nDESCRIPTION: Command to build only the main Certbot snap for the armhf architecture using remote build.\n\nLANGUAGE: bash\nCODE:\n```\npython3 tools/snap/build_remote.py certbot --archs armhf\n```\n\n----------------------------------------\n\nTITLE: Setting Apache User and Group\nDESCRIPTION: Specifies the user and group under which the Apache server will run, using environment variables.\n\nLANGUAGE: apache\nCODE:\n```\nUser ${APACHE_RUN_USER}\nGroup ${APACHE_RUN_GROUP}\n```\n\n----------------------------------------\n\nTITLE: Route53 Propagation Seconds Flag Deprecation\nDESCRIPTION: Deprecated configuration flag for the Route53 DNS plugin that never had any effect, as the plugin uses the GetChange API to determine DNS update completion status.\n\nLANGUAGE: ini\nCODE:\n```\n--dns-route53-propagation-seconds\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Hostname Lookups\nDESCRIPTION: Disables the logging of client hostnames and only logs IP addresses to improve performance.\n\nLANGUAGE: apache\nCODE:\n```\nHostnameLookups Off\n```\n\n----------------------------------------\n\nTITLE: Using config_changes Command in Certbot\nDESCRIPTION: Example of a deprecated Certbot command that no longer accepts a --num parameter. This command has been marked for removal in a future release.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot config_changes\n```\n\n----------------------------------------\n\nTITLE: Setting Apache Error Log\nDESCRIPTION: Defines the location of the error log file where Apache will write error messages.\n\nLANGUAGE: apache\nCODE:\n```\nErrorLog ${APACHE_LOG_DIR}/error.log\n```\n\n----------------------------------------\n\nTITLE: Optional DNS Query Signing Configuration for RFC2136\nDESCRIPTION: Configuration option to control whether SOA queries are signed with TSIG keys in dns-rfc2136 plugin. This helps with split-view DNS or hidden primary setups.\n\nLANGUAGE: ini\nCODE:\n```\ndns_rfc2136_sign_query\n```\n\n----------------------------------------\n\nTITLE: Including Apache Module Configurations\nDESCRIPTION: Includes all enabled module configuration files from the mods-enabled directory.\n\nLANGUAGE: apache\nCODE:\n```\nIncludeOptional mods-enabled/*.load\nIncludeOptional mods-enabled/*.conf\n```\n\n----------------------------------------\n\nTITLE: Demonstrating the certbot config_changes Command Usage\nDESCRIPTION: Example showing the deprecated certbot config_changes command that no longer accepts a --num parameter. This command was used to view configuration changes made by Certbot and is marked for removal in future releases.\n\nLANGUAGE: bash\nCODE:\n```\ncertbot config_changes\n```\n\n----------------------------------------\n\nTITLE: Including Apache Ports Configuration\nDESCRIPTION: Includes the ports.conf file which contains the port configuration directives.\n\nLANGUAGE: apache\nCODE:\n```\nInclude ports.conf\n```\n\n----------------------------------------\n\nTITLE: Installing OS Dependencies for Certbot on macOS\nDESCRIPTION: Commands to install and configure system dependencies required for Certbot development on macOS using Homebrew, including setting up path environment variables.\n\nLANGUAGE: shell\nCODE:\n```\n# For macOS installations with Homebrew already installed and configured\n# NB1: If you also run `brew install python` you don't need the ~/lib\n#      directory created below, however, without this directory and symlinks\n#      to augeas, Certbot's Apache plugin won't work if you use Python\n#      installed from other sources such as pyenv or the version provided by\n#      Apple.\n# NB2: Some of our developer scripts expect GNU coreutils be first in your\n#      PATH. The commands below set this up for bash and zsh, but your\n#      instructions may be slightly different if you use an alternate shell.\nbrew install augeas coreutils gnu-sed\nmkdir ~/lib\nBREW_PREFIX=$(brew --prefix)\nln -s \"$BREW_PREFIX\"/lib/libaugeas* ~/lib\nRC_LINE=\"export PATH=\\\"$BREW_PREFIX/opt/coreutils/libexec/gnubin:\"\nRC_LINE+=\"$BREW_PREFIX/opt/gnu-sed/libexec/gnubin:\\$PATH\\\"\"\necho \"$RC_LINE\" >> ~/.bashrc  # for bash\necho \"$RC_LINE\" >> ~/.zshrc  # for zsh\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Root Directory Access\nDESCRIPTION: Defines security restrictions for the root filesystem, denying all access by default.\n\nLANGUAGE: apache\nCODE:\n```\n<Directory />\n\tOptions FollowSymLinks\n\tAllowOverride None\n\tRequire all denied\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Activating the Certbot Virtual Environment\nDESCRIPTION: Command to activate the virtual environment for Certbot development, which makes development tools like ipdb3, ipython, pytest, and tox available in your shell.\n\nLANGUAGE: shell\nCODE:\n```\nsource venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache /usr/share Directory Access\nDESCRIPTION: Grants access to the /usr/share directory where Debian web applications are packaged.\n\nLANGUAGE: apache\nCODE:\n```\n<Directory /usr/share>\n\tAllowOverride None\n\tRequire all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Running Specific Unit Tests with Pytest\nDESCRIPTION: Commands to run specific unit tests or test cases using pytest, which is useful when developing or debugging a particular feature.\n\nLANGUAGE: shell\nCODE:\n```\npytest acme/acme/_internal/tests/messages_test.py # Use the test file you're working on\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache /var/www Directory Access\nDESCRIPTION: Grants access to the /var/www directory with options for indexes and symlinks.\n\nLANGUAGE: apache\nCODE:\n```\n<Directory /var/www/>\n\tOptions Indexes FollowSymLinks\n\tAllowOverride None\n\tRequire all granted\n</Directory>\n```\n\n----------------------------------------\n\nTITLE: Running a Specific Test Case with Pytest\nDESCRIPTION: Command to run a specific test case within a test file using pytest's -k flag, which allows targeting very specific test functionality.\n\nLANGUAGE: shell\nCODE:\n```\npytest acme/acme/_internal/tests/messages_test.py -k test_to_partial_json\n```\n\n----------------------------------------\n\nTITLE: Setting Apache AccessFileName\nDESCRIPTION: Specifies .htaccess as the name of the file to look for in each directory for additional configuration directives.\n\nLANGUAGE: apache\nCODE:\n```\nAccessFileName .htaccess\n```\n\n----------------------------------------\n\nTITLE: Installing a Plugin During Development\nDESCRIPTION: Instructions for installing a plugin into a Certbot development environment for testing using pip's development mode and verifying installation with certbot_test.\n\nLANGUAGE: shell\nCODE:\n```\n. venv/bin/activate\npip install -e examples/plugins/\ncertbot_test plugins\n```\n\n----------------------------------------\n\nTITLE: Protecting Apache .htaccess and .htpasswd Files\nDESCRIPTION: Prevents .htaccess and .htpasswd files from being viewed by web clients for security.\n\nLANGUAGE: apache\nCODE:\n```\n<FilesMatch \"^\\.ht\">\n\tRequire all denied\n</FilesMatch>\n```\n\n----------------------------------------\n\nTITLE: Installing a Local Plugin Snap for Certbot\nDESCRIPTION: Commands for installing and configuring a locally built plugin snap to work with the Certbot snap, including setting up trust permissions and connecting the plugin interface.\n\nLANGUAGE: shell\nCODE:\n```\nsnap install --classic certbot\nsnap set certbot trust-plugin-with-root=ok\nsnap install --dangerous your-snap-filename.snap\nsudo snap connect certbot:plugin your-snap-name\nsudo /snap/bin/certbot plugins\n```\n\n----------------------------------------\n\nTITLE: Defining Apache Log Formats\nDESCRIPTION: Creates named log format definitions for use with CustomLog directives, with customized formats for various logging needs.\n\nLANGUAGE: apache\nCODE:\n```\nLogFormat \"%t \\\"%r\\\" %>s %O  \\\"%{User-Agent}i\\\"\" vhost_combined\n\n#LogFormat \"%h %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\n#LogFormat \"%h %l %u %t \\\"%r\\\" %>s %O\" common\nLogFormat \"- %t \\\"%r\\\" %>s %b\" noip\n\nLogFormat \"%{Referer}i -> %U\" referer\nLogFormat \"%{User-agent}i\" agent\n```\n\n----------------------------------------\n\nTITLE: Building Certbot Documentation\nDESCRIPTION: Command to build HTML documentation for Certbot packages. This needs to be run from the docs directory of the package after setting up the development environment and activating the virtual environment.\n\nLANGUAGE: shell\nCODE:\n```\nmake clean html\n```\n\n----------------------------------------\n\nTITLE: Including Apache Additional Configuration Files\nDESCRIPTION: Includes additional configuration files from the conf-enabled directory.\n\nLANGUAGE: apache\nCODE:\n```\nIncludeOptional conf-enabled/*.conf\n```\n\n----------------------------------------\n\nTITLE: Configuring Git to Ignore macOS Files\nDESCRIPTION: Commands to set up Git to ignore .DS_Store files created by macOS Finder. This creates a global Git ignore file in the user's configuration directory.\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p ~/.config/git\necho '.DS_Store' >> ~/.config/git/ignore\n```\n\n----------------------------------------\n\nTITLE: Auto-documenting the certbot.plugins.dns_common Module in Python\nDESCRIPTION: Sphinx documentation directives for generating automatic documentation of the certbot.plugins.dns_common module. The directive includes all members, undocumented members, and shows inheritance relationships.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot.plugins.dns_common\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Running Letstest with AWS Credentials\nDESCRIPTION: Command to run Letstest tests with AWS credentials. It requires specifying the targets file, the path to SSH key, AWS profile name, and the test script to execute.\n\nLANGUAGE: bash\nCODE:\n```\n>letstest targets/targets.yaml /path/to/your/key.pem <profile name> scripts/<test to run>\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation for Certbot Main Module with reStructuredText\nDESCRIPTION: This RST directive uses automodule to generate comprehensive documentation for the certbot.main module, including all members, undocumented members, and inheritance relationships.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot.main\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for certbot.achallenges Module\nDESCRIPTION: This snippet configures Sphinx documentation to automatically document the certbot.achallenges module, including all its members, undocumented members, and inheritance relationships.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: certbot.achallenges\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Documenting Certbot Errors Module with reStructuredText\nDESCRIPTION: This reStructuredText snippet configures the documentation for the certbot.errors module using Sphinx's automodule directive. It includes all members, undocumented members, and inheritance information for the module.\n\nLANGUAGE: rst\nCODE:\n```\ncertbot.errors module\n=====================\n\n.. automodule:: certbot.errors\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Configuring Sphinx Documentation for ACME Client\nDESCRIPTION: This RST (reStructuredText) snippet configures Sphinx to automatically generate documentation for the acme.client module with all its members included. The automodule directive instructs Sphinx to import the module and extract all documentation from its members.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.client\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Documenting ACME Utility Module with ReStructuredText\nDESCRIPTION: This RST code snippet uses the automodule directive to generate documentation for all members of the acme.util module, which is part of the certbot project's ACME implementation.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: acme.util\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Auto-documenting the ACME Challenges Module with reStructuredText\nDESCRIPTION: This directive instructs Sphinx to automatically generate documentation for the acme.challenges module, including all members. The directive will extract docstrings and signature information from the Python module to create comprehensive API documentation.\n\nLANGUAGE: reStructuredText\nCODE:\n```\n.. automodule:: acme.challenges\n   :members:\n```\n\n----------------------------------------\n\nTITLE: Including API Documentation with Sphinx toctree\nDESCRIPTION: A Sphinx toctree directive that includes all files from the api/ directory using the glob pattern. This creates a centralized documentation structure for the Certbot API reference.\n\nLANGUAGE: rst\nCODE:\n```\n.. toctree::\n   :glob:\n\n   api/*\n```\n\n----------------------------------------\n\nTITLE: Autodocumenting the certbot.tests.util module with Sphinx\nDESCRIPTION: This RST (reStructuredText) code uses Sphinx directives to automatically generate documentation for the certbot.tests.util module. The directive includes all members, undocumented members, and shows inheritance relationships.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot.tests.util\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Generating API Documentation with reStructuredText for certbot.compat.misc Module\nDESCRIPTION: This restructuredtext snippet uses Sphinx's automodule directive to generate documentation for the certbot.compat.misc module. It includes all module members, undocumented members, and inheritance information.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: certbot.compat.misc\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Importing and Using certbot.compat.os Module\nDESCRIPTION: This code snippet demonstrates how to import and use the certbot.compat.os module through Python's automodule directive. The module contains functions for common OS operations like chmod, umask, chown, open, mkdir, makedirs, rename, replace, access, stat, and fstat.\n\nLANGUAGE: python\nCODE:\n```\n.. automodule:: certbot.compat.os\n    :members: chmod, umask, chown, open, mkdir, makedirs, rename, replace, access, stat, fstat\n```\n\n----------------------------------------\n\nTITLE: Configuring autodoc for certbot.interfaces Module in ReStructuredText\nDESCRIPTION: This code snippet configures Sphinx's autodoc extension to automatically generate documentation for the certbot.interfaces module. It includes all members, undocumented members, and shows inheritance relationships.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: certbot.interfaces\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Sphinx automodule directive for certbot.plugins.util\nDESCRIPTION: This RST (reStructuredText) snippet configures Sphinx to automatically document the certbot.plugins.util module. It includes all members, undocumented members, and inheritance relationships.\n\nLANGUAGE: rst\nCODE:\n```\n.. automodule:: certbot.plugins.util\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Sphinx automodule directive for Certbot's DNS Lexicon module in reStructuredText\nDESCRIPTION: This snippet uses Sphinx's automodule directive to automatically generate documentation for the certbot.plugins.dns_common_lexicon module. The directive includes all members, undocumented members, and shows inheritance relationships.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. automodule:: certbot.plugins.dns_common_lexicon\n    :members:\n    :undoc-members:\n    :show-inheritance:\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependencies for Certbot DNS OVH Documentation on ReadTheDocs\nDESCRIPTION: Requirements file that installs the necessary packages for building certbot-dns-ovh documentation on ReadTheDocs. It uses pinned dependencies for stability and installs packages in editable mode to ensure proper documentation generation.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-ovh[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing certbot-dns-sakuracloud with documentation dependencies for ReadTheDocs\nDESCRIPTION: Requirements file that instructs ReadTheDocs how to install the certbot-dns-sakuracloud project with its documentation dependencies. It includes pinned constraints from a separate requirements file and installs acme, certbot, and certbot-dns-sakuracloud in editable mode with documentation extras.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-sakuracloud[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot DNS Google Plugin for ReadTheDocs\nDESCRIPTION: Requirements file that installs Certbot DNS Google plugin with documentation dependencies in editable mode. It references an external constraints file for pinned dependencies and installs ACME and Certbot as prerequisites.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-google[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot DNS Cloudflare Package with Documentation Dependencies in Pip\nDESCRIPTION: Pip requirements file that specifies how to install Certbot DNS Cloudflare with its documentation dependencies for ReadTheDocs. It uses constraint files to pin dependencies for stability and installs packages in editable mode to ensure proper documentation building.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-cloudflare[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot DNS-Gehirn with Documentation Dependencies for ReadTheDocs\nDESCRIPTION: Requirements file that specifies how to install Certbot DNS-Gehirn with its documentation dependencies for ReadTheDocs. It uses the constraints file from tools/requirements.txt and installs acme, certbot, and certbot-dns-gehirn[docs] in editable mode to ensure proper documentation building.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-gehirn[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot DNSMadeEasy Plugin Requirements for ReadTheDocs\nDESCRIPTION: This pip requirements file installs the necessary dependencies for building Certbot DNSMadeEasy plugin documentation on ReadTheDocs. It uses constraints from another requirements file and installs acme, certbot, and certbot-dns-dnsmadeeasy packages in editable mode, with the docs extra for the DNSMadeEasy plugin.\n\nLANGUAGE: bash\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-dnsmadeeasy[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing certbot-dns-nsone with Documentation Dependencies for ReadTheDocs\nDESCRIPTION: PIP requirements file that installs certbot, acme, and certbot-dns-nsone packages in editable mode for documentation generation on ReadTheDocs. The file uses pinned dependencies through a constraints file and installs the dns-nsone plugin with its documentation dependencies.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-nsone[docs]\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependencies for Certbot DNS DNSimple Documentation on ReadTheDocs\nDESCRIPTION: This requirements file installs ACME, Certbot, and the certbot-dns-dnsimple plugin in editable mode with documentation dependencies. It uses a constraints file to pin versions for stability and works around ReadTheDocs limitations for proper documentation building.\n\nLANGUAGE: plaintext\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-dnsimple[docs]\n```\n\n----------------------------------------\n\nTITLE: Configuring pip requirements for certbot-dns-digitalocean documentation on ReadTheDocs\nDESCRIPTION: This requirements file instructs ReadTheDocs how to install certbot-dns-digitalocean with documentation dependencies. It constrains dependencies using the main requirements file and installs acme, certbot, and certbot-dns-digitalocean in editable mode with docs extras.\n\nLANGUAGE: requirements.txt\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot\n-e certbot-dns-digitalocean[docs]\n```\n\n----------------------------------------\n\nTITLE: Installing Certbot Documentation Dependencies for ReadTheDocs\nDESCRIPTION: This requirements.txt file instructs ReadTheDocs how to install Certbot with documentation dependencies. It constrains versions using an external requirements file and installs both acme and certbot packages in development mode.\n\nLANGUAGE: pip\nCODE:\n```\n-c ../tools/requirements.txt\n-e acme\n-e certbot[docs]\n```\n\n----------------------------------------\n\nTITLE: Setting up Sphinx Documentation Structure for certbot-dns-digitalocean\nDESCRIPTION: This reStructuredText snippet defines the main documentation structure for the certbot-dns-digitalocean plugin. It includes a table of contents, automodule directive for generating API documentation, and navigation links.\n\nLANGUAGE: restructuredtext\nCODE:\n```\n.. certbot-dns-digitalocean documentation master file, created by\n   sphinx-quickstart on Wed May 10 10:52:06 2017.\n   You can adapt this file completely to your liking, but it should at least\n   contain the root `toctree` directive.\n\nWelcome to certbot-dns-digitalocean's documentation!\n====================================================\n\n.. toctree::\n   :maxdepth: 2\n   :caption: Contents:\n\n.. automodule:: certbot_dns_digitalocean\n   :members:\n\n.. toctree::\n   :maxdepth: 1\n\n   api\n\n\n\nIndices and tables\n==================\n\n* :ref:`genindex`\n* :ref:`modindex`\n* :ref:`search`\n```"
  }
]
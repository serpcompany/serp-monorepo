[
  {
    "owner": "unpoly",
    "repo": "unpoly",
    "content": "TITLE: Session-Required Link Implementation\nDESCRIPTION: Advanced implementation showing how to handle links requiring user sessions by opening a login modal and continuing the original navigation after successful login.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/projects\" require-session>My projects</a>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:link:follow', 'a[require-session]', async function(event) {\n  if (!isSignedIn()) {\n    // Abort the current render pass\n    event.preventDefault()\n\n    // Wait until the user has signed in in a modal\n    await up.layer.ask('/session/new', { acceptLocation: '/welcome' })\n\n    // Start a new render pass with the original render pass\n    up.render(event.renderOptions)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Universal Form Handling in Unpoly\nDESCRIPTION: Configures Unpoly to handle all form submissions without requiring up-submit attribute. Exceptions include forms with up-submit=false or cross-origin action attributes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-everything.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.form.config.submitSelectors.push(['form'])\n```\n\n----------------------------------------\n\nTITLE: Handling Missing Targets with fallback Option in Unpoly\nDESCRIPTION: The fallback option specifies behavior when target selectors are missing from the page or server response. It can be a CSS selector string to use as alternative, true to use a main target, or false to reject the render promise.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/targeting.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n@param {string|boolean} [options.fallback]\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Offline Event Handler in Unpoly with JavaScript\nDESCRIPTION: This snippet demonstrates how to set up a global handler for offline events using JavaScript. It listens for the up:fragment:offline event and prompts the user to retry the request when offline.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/network-issues.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:fragment:offline', function(event) {\n  if (confirm('You are offline. Retry?')) event.retry()\n})\n```\n\n----------------------------------------\n\nTITLE: Enabling Single-Page Navigation with up-follow Attribute in HTML\nDESCRIPTION: Demonstrates how to use the up-follow attribute to enable single-page navigation on a link element. This attribute causes the link to swap the <main> or <body> element instead of replacing the full page.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow>Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Error Handling with Unpoly Render\nDESCRIPTION: Shows detailed error handling for various scenarios in Unpoly render operations, including server errors, matching failures, aborted requests, and offline states.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ntry {\n  window.addEventListener('error', function(event) {\n    console.log('Compiler threw error', event.error)\n  })\n  \n  let result = await up.render({\n    url: '/path',\n    target: '.target',    // selector to replace for 200 OK status\n    failTarget: '.errors' // selector to replace for non-200 status\n  })\n} catch (error) {\n  if (error instanceof up.RenderResult) {\n    // Server sent HTML with a non-200 status code\n    console.log(\"Updated .errors with\", error.fragments)\n  } else if (error instanceof up.CannotMatch) {\n    console.log(\"Could not find .target in current page or response\")\n  } else if (error instanceof up.Aborted) {\n    console.log(\"Request to aborted\")\n  } else if (error instanceof up.Offline) {\n    console.log(\"Connection loss or timeout\")\n  } else {\n    console.log(\"Other error while rendering: \", error)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Form with Dependent Fields using up-validate\nDESCRIPTION: Example of a postage purchase form with interdependent fields for continent, country, weight and price using Unpoly's up-validate attribute. The form demonstrates how to update dependent fields automatically when parent fields change.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/dependent-fields.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\" action=\"/purchases\">\n  <fieldset>\n    <label for=\"continent\">Continent</label>\n    <select name=\"continent\" id=\"continent\" up-validate=\"#country\">...</select>\n  </fieldset>\n  \n  <fieldset>\n    <label for=\"country\">Country</label>\n    <select name=\"country\" id=\"country\" up-validate=\"#price\">...</select>\n  </fieldset>\n  \n  <fieldset>\n    <label for=\"weight\">Weight</label>\n    <input name=\"weight\" id=\"weight\" up-validate=\"#price\"> kg\n  </fieldset>\n  \n  <fieldset>\n    <label for=\"price\">Price</label>\n    <output id=\"price\">23 €</output>\n  </fieldset>\n\n  <button>Buy stamps</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Targeting a Fragment with HTML Attribute\nDESCRIPTION: HTML example showing how to use the up-target attribute on a link to update a specific div with class .content while leaving other elements unchanged.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/posts/5\" up-target=\".content\">Read post</a>\n\n<div class=\".content\">\n  Post will appear here!\n</div>\n\n<div class=\".other\">\n  This fragment will not change.\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating Multiple Fragments with a Single Request\nDESCRIPTION: HTML example showing how to target multiple fragments by separating selectors with commas, useful for updating related content simultaneously.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/posts/5\" up-target=\".content, .unread-count\">Read post</a>\n```\n\n----------------------------------------\n\nTITLE: Setting Callbacks for Overlay Close Events in JavaScript\nDESCRIPTION: Shows how to set onAccepted and onDismissed callbacks when opening an overlay to handle different closure intents. These callbacks run when an overlay is accepted or dismissed respectively.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nup.layer.open({\n  url: '/users/new',\n  onAccepted: (event) => console.log('User was created'),\n  onDismissed: (event) => console.log('User creation was canceled')\n})\n```\n\n----------------------------------------\n\nTITLE: Disabling Form Controls During Submission in Unpoly\nDESCRIPTION: Shows how to use the up-disable attribute to automatically disable all form fields and buttons while a form is submitting, preventing duplicate submissions and providing visual feedback.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/loading-state.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form up-submit up-disable action=\"/session\">\n  <input type=\"text\" name=\"email\">        <!-- will be disabled -->\n  <input type=\"password\" name=\"password\"> <!-- will be disabled -->\n  <button type=\"submit\">Sign in</button>  <!-- will be disabled -->\n</form>\n```\n\n----------------------------------------\n\nTITLE: Implementing Viewport-Based Lazy Loading in HTML\nDESCRIPTION: This snippet demonstrates how to use the up-defer attribute with 'reveal' value to load content when it scrolls into view.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"menu\" up-defer=\"reveal\" up-href=\"/menu\">\n  Loading...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Programmatically Following a Link with up.follow() in JavaScript\nDESCRIPTION: Demonstrates how to use the up.follow() JavaScript function to programmatically trigger the same behavior as clicking a link with the up-follow attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.follow(link)\n```\n\n----------------------------------------\n\nTITLE: Targeting Sibling Elements with Ambiguous Selectors\nDESCRIPTION: HTML example showing how Unpoly resolves ambiguous selectors for nested elements by proximity to the interaction origin.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\".card-text\">Card #1 preview</div>\n  <a href=\"/cards/1\" up-target=\".card .card-text\">Show full card #1</a>\n</div>\n\n<div class=\"card\">\n  <div class=\"card-text\">Card #2 preview</div>\n  <a href=\"/cards/2\" up-target=\".card .card-text\">Show full card #2</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Response Optimized for Targeted Fragment\nDESCRIPTION: This example shows a server response that only includes the targeted fragment's HTML, improving efficiency by omitting content that won't be used. The Vary header indicates the response depends on the X-Up-Target header.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nVary: X-Up-Target\n\n<div class=\"menu\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Awaiting Render Completion in JavaScript\nDESCRIPTION: Example of using async/await to run code after fragments have been updated and compiled. This allows access to the updated DOM after the render process completes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nawait up.render({ url: '/path', target: '.target' })\nconsole.log(\"Updated fragment is\", document.querySelector('.target'))\n```\n\n----------------------------------------\n\nTITLE: Configuring Different Render Options for Failed Responses in JavaScript\nDESCRIPTION: Shows how to use fail-prefixed options in up.render() to handle successful and failed responses differently, including target selection, scrolling behavior, and callbacks.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/failed-responses.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({\n  url: '/action',\n  method: 'post',\n  target: '.content',            // when submission succeeds update '.content'\n  failTarget: 'form',            // when submission fails update the form\n  scroll: 'auto',                // when submission succeeds use default scroll behavior\n  failScroll: '.errors',         // when submission fails scroll to the error messages\n  onRendered: () => { ... },     // when submission succeeds run this callback\n  onFailRendered: () => { ... }, // when submission fails run this other callback\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Universal Link Following in Unpoly\nDESCRIPTION: Configures Unpoly to follow all links with href attributes automatically without requiring up-follow attribute. Exceptions include links with up-follow=false, download attributes, or cross-origin hrefs.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-everything.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.link.config.followSelectors.push('a[href]')\n```\n\n----------------------------------------\n\nTITLE: Using up-hungry Attribute for Optional Updates\nDESCRIPTION: HTML example demonstrating the up-hungry attribute which marks elements that should be optionally updated when matching content is found in the response.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\".unread-count\" up-hungry>12</div>\n  \n<!-- Following this link will update .content, .unread-count:maybe -->\n<a href=\"/card/5\" up-target=\".content\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Preloading Links in Unpoly for Offline Access\nDESCRIPTION: This snippet demonstrates how to preload links with the up-preload attribute to ensure they remain navigable while offline. The link will be eagerly loaded when it appears in the DOM.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/network-issues.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/menu\" up-layer=\"new drawer\" up-preload=\"insert\">≡ Menu</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing TODO List HTML Structure for Optimistic Rendering in HTML\nDESCRIPTION: HTML structure for a TODO list with a form to add new tasks. The form has an up-preview attribute set to 'add-task' to enable optimistic rendering.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimistic-rendering.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"tasks\">\n  <!-- Form to add a new task -->\n  <form up-target=\"#tasks\" up-preview=\"add-task\">\n    <input type=\"text\" name=\"text\" required>\n    <button type=\"submit\">Save</button>\n  </form>\n\n  <!-- List of existing tasks -->\n  <div class=\"task\">Buy milk</div>\n  <div class=\"task\">Buy toast</div>\n  <div class=\"task\">Buy honey</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Closing Overlay via JavaScript in Unpoly\nDESCRIPTION: Examples of programmatically accepting and closing overlays using JavaScript, with optional value passing.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nup.layer.accept()\n```\n\nLANGUAGE: js\nCODE:\n```\nup.layer.accept({ name: 'Anna', email: 'anna@domain.tld' })\n```\n\n----------------------------------------\n\nTITLE: Integrating Mustache Template Engine with Unpoly in JavaScript\nDESCRIPTION: Shows how to integrate the Mustache template engine with Unpoly using an event handler. This allows for more expressive templating with variables and loops.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:template:clone', '[type=\"text/mustache\"]', function(event) {\n  const template = event.target.innerHTML\n  const result = Mustache.render(template, event.data)\n  event.nodes = up.element.createNodesFromHTML(result)\n})\n```\n\n----------------------------------------\n\nTITLE: Server Response HTML Structure for Unpoly Fragment Updates\nDESCRIPTION: Shows the expected server response structure containing the target element that will be extracted and placed into the page. Only the matching element will be used while other content is discarded.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  ...\n  <div class=\"target\">\n    New content\n  </div>\n  ...\n</html>>\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Response Optimized for Overlay Mode\nDESCRIPTION: This example shows a server response customized for an overlay, which may omit elements like navigation that aren't needed in the context of an overlay. The Vary header indicates the response depends on the X-Up-Mode header.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nVary: X-Up-Mode\n\n<main>...</main>\n```\n\n----------------------------------------\n\nTITLE: Configuring Debouncing with up-watch-delay\nDESCRIPTION: Example of using the up-watch-delay attribute to wait until a user stops typing before triggering autosubmit. This improves performance by reducing the number of requests sent while typing.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <!-- Wait until the user has stopped typing for 100 milliseconds -->\n  <input name=\"query\" up-autosubmit up-watch-delay=\"100\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Loading HTML from Server via Hyperlink in Unpoly\nDESCRIPTION: Demonstrates how to fetch HTML from the server when a hyperlink is clicked by using standard href attribute with up-target to specify which fragment to update.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\".target\">Click me</a>\n\n<div class=\"target\">\n  Content will appear here\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Placeholders While Loading Content in Unpoly\nDESCRIPTION: Shows how to display temporary placeholder content during fragment loading using the up-placeholder attribute. This provides immediate feedback while waiting for the server response.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/loading-state.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\"#target\" up-placeholder=\"Loading…\">Show story</a>\n\n<div id=\"#target\">\n  Loading…\n</div>\n```\n\n----------------------------------------\n\nTITLE: Targeting a Fragment with JavaScript API\nDESCRIPTION: JavaScript example demonstrating how to use up.render() with a target option to update a specific element on the page.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ target: '.content', url: '/posts/5' })\n```\n\n----------------------------------------\n\nTITLE: Handling Offline Events with HTML Attributes in Unpoly\nDESCRIPTION: This snippet shows how to handle offline events using the up-on-offline attribute on a link. When the user is offline and attempts to follow the link, they will be prompted to retry the request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/network-issues.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-on-offline=\"if (confirm('You are offline. Retry?')) event.retry()\">\n  Post bid\n</a>\n```\n\n----------------------------------------\n\nTITLE: Preventing Rendering with Event Cancellation in Unpoly.js\nDESCRIPTION: This snippet demonstrates how to cancel the rendering of loaded responses by intercepting the 'up:fragment:loaded' event. It checks for a specific header and shows an alert instead of rendering the fragment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/skipping-rendering.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:fragment:loaded', async function(event) {\n  if (event.response.header('X-User-Created')) {\n    // If we see an X-User-Created header, abort the rendering pass\n    event.preventDefault()\n\n    // Show an alert instead\n    alert('The user was created successfully')\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using HTML Attributes for Failed Response Handling in Forms\nDESCRIPTION: Demonstrates how to configure different behaviors for successful and failed form submissions using up-fail-prefixed HTML attributes in a form element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/failed-responses.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\" action=\"/action\"\n  up-submit                 <!-- have Unpoly handle the form --> \n  up-target=\".content\"      <!-- when submission succeeds update '.content' -->\n  up-fail-target=\"form\"     <!-- when submission fails update the form -->\n  up-scroll=\"auto\"          <!-- when submission succeeds use default scroll behavior -->\n  up-fail-scroll=\".errors\"> <!-- when submission fails scroll to the error messages -->\n  ...\n</form>\n```\n\n----------------------------------------\n\nTITLE: Setting Mousedown Link Activation in Unpoly\nDESCRIPTION: Configures Unpoly to follow links on mousedown instead of click without requiring up-instant attribute. Links must still be followable and exceptions include links with up-instant=false.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-everything.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.link.config.instantSelectors.push('a[href]')\n```\n\n----------------------------------------\n\nTITLE: Inspecting Render Result Object\nDESCRIPTION: Example showing how to inspect the up.RenderResult object to obtain information about the effective results of a render operation, including layer, fragments, and options used.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet result = await up.render({ url: '/path', target: '.target', failTarget: '.errors' })\nconsole.log(\"Updated layer: \", result.layer)\nconsole.log(\"Updated fragments: \", result.fragments)\nconsole.log(\"Effective option used: \", result.options)\n```\n\n----------------------------------------\n\nTITLE: Preserving Element State with up-keep Attribute in Unpoly HTML\nDESCRIPTION: This example shows how to use the 'up-keep' attribute to preserve specific elements within a targeted fragment. It demonstrates preserving an audio element's state when the surrounding article is updated.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/skipping-rendering.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<article>\n  <p>Content</p>\n  <audio id=\"player\" up-keep src=\"song.mp3\"></audio>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Form Submission with Unpoly Fragment Updates\nDESCRIPTION: Shows how to set up a form to update a fragment after submission by using standard action attribute and up-target to specify which fragment to update.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/path\" up-target=\".target\">\n  ...\n</form>\n\n<div class=\"target\">\n  Content will appear here\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Asset Change Notification in Unpoly (JavaScript)\nDESCRIPTION: This snippet demonstrates how to listen for the 'up:assets:changed' event in Unpoly and create a notification button when web assets have changed. It checks if a notification already exists, and if not, adds a button to the page body that allows users to reload and get the latest version.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/new-asset-notification-example.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:assets:changed', function() {\n  // If we are already showing a notification, do nothing.\n  if (document.querySelector('#new-version')) return\n   \n  // Append a <div id=\"new-version\"> notification to the <body>\n  up.element.affix(document.body, 'button#new-version', {\n    text: 'A new app version is available. Click to reload.',\n    onclick: 'location.reload()',\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Response Optimized for Unpoly Requests\nDESCRIPTION: This example shows a server response that only includes the body HTML for Unpoly requests, omitting the document head which won't be used in fragment updates. The Vary header indicates the response depends on the X-Up-Version header.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nVary: X-Up-Version\n\n<body>\n  ...\n</body>\n```\n\n----------------------------------------\n\nTITLE: Handling Last Page in Unpoly Infinite Scrolling\nDESCRIPTION: This HTML snippet shows how to handle the last page in the infinite scrolling implementation. It replaces the 'load next page' link with a text-only container, indicating the end of the content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/infinite-scrolling.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"pages\">\n  <div class=\"page\">items for last page</div>\n</div>\n\n<div id=\"next-page\">You've reached the end.</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Status Effects with Previews in Unpoly\nDESCRIPTION: Demonstrates how to use the preview API to create custom loading effects. This example injects a spinner image into a link while waiting for a response, which will be automatically removed when the request completes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/loading-state.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nup.preview('link-spinner', function(preview) {\n  let link = preview.origin\n  preview.insert(link, '<img src=\"spinner.gif\">')\n})\n```\n\n----------------------------------------\n\nTITLE: Listening for JavaScript Errors with Event Listener\nDESCRIPTION: Example showing how to set up an error event listener on the window object to handle exceptions from user code that Unpoly catches. This allows for centralized error handling without crashing the application.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener('error', function(event) {\n  alert(\"Got an error \" + event.error.name)\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-Cache Behavior in Unpoly\nDESCRIPTION: JavaScript code to customize the auto-caching behavior in Unpoly by modifying the network configuration to only cache GET requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nup.network.config.autoCache = function(request) {\n  return request.method === 'GET'\n}\n```\n\n----------------------------------------\n\nTITLE: Global Offline Handler for Fragment Requests (JavaScript)\nDESCRIPTION: This code snippet shows how to set up a global handler for offline scenarios in Unpoly 3 using the up:fragment:offline event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:fragment:offline', function(event) {\n  if (confirm('You are offline. Retry?')) event.retry()\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Optimistic Rendering Preview Function in JavaScript\nDESCRIPTION: JavaScript function that handles the 'add-task' preview. It accesses form data, constructs a new task element, and inserts it after the form while also resetting the form.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimistic-rendering.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.preview('add-task', function(preview) {\n  let form = preview.origin.closest('form')\n  let text = preview.params.get('text')\n  let newTask = `<div class=\"task\">${up.util.escapeHTML(text)}</div>`\n  preview.insert(form, 'afterend', newTask)\n  form.reset()\n})\n```\n\n----------------------------------------\n\nTITLE: Optimizing Server-Side Caching with Deferred Loading in HTML\nDESCRIPTION: This snippet demonstrates how to extract user-specific content into a deferred partial to improve server-side cacheability of the main content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<article>\n  <h1>Article title</h1>\n  <nav id=\"controls\" up-defer up-href=\"/articles/123/controls\"></nav>\n  <p>Lorem ipsum dolor sit amet ...</p>\n</article>\n```\n\n----------------------------------------\n\nTITLE: Rendering Flash Messages in Unpoly Response\nDESCRIPTION: HTML markup showing how to include flash messages in the server response. The messages will be extracted and placed in the up-flashes container regardless of targeting.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/flashes.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div up-flashes>\n  <strong>User was updated!</strong> <!-- mark-line -->\n</div>\n\n<main>\n  Main response content ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Overriding Attribute Options with JavaScript in up.follow()\nDESCRIPTION: Shows how to override options parsed from a link's attributes by passing an options object to the up.follow() function. This example overrides the up-meta-tags attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.follow(link, { metaTags: true })\n```\n\n----------------------------------------\n\nTITLE: Selectively Disabling Cache for Specific Routes in Unpoly\nDESCRIPTION: JavaScript code that preserves default caching behavior but disables it for URLs ending with '/edit' by customizing the auto-cache function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nlet defaultAutoCache = up.network.config.autoCache\nup.network.config.autoCache = function(request) {\n  return defaultAutoCache(request) && !request.url.endsWith('/edit')\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Failure Detection in Unpoly\nDESCRIPTION: Shows how to override the default failure detection to consider responses with specific headers as failed, even if they have a successful HTTP status code.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/failed-responses.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet badStatus = up.network.config.fail\nup.network.config.fail = (response) => badStatus(response) || response.header('X-Unauthorized')\n```\n\n----------------------------------------\n\nTITLE: Preloading a URL Directly with JavaScript in Unpoly\nDESCRIPTION: Makes a background request that caches a specified URL without requiring a link element, using up.request() with cache and background options.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.request('/menu', { cache: true, background: true })\n```\n\n----------------------------------------\n\nTITLE: Configuring Rendering Options in Unpoly\nDESCRIPTION: This snippet outlines the options available for the up.render function in Unpoly. It includes parameters for disabling form controls, showing placeholders, applying previews, and setting feedback classes during content loading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/loading-state.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@partial up.render/loading-state\n\n@param {boolean|string|Element|Array} [options.disable]\n  [Disables form controls](/disabling-forms) while the request is loading.\n\n@param {string|Element|List<Node>} [options.placeholder]\n  A [placeholder](/placeholders) to show within the targeted fragment while new content is loading.\n\n  Existing children of the targeted fragment [will be hidden](/placeholders#basic-example) during the request.\n  When the request ends for any reason, all changes will be reverted.\n\n  @experimental\n\n@param {string|Function(up.Preview)|Array} [options.preview]\n  One or more [previews](/previews) that temporarily change the page\n  while new content is loading.\n\n  The preview changes will be reverted automatically\n  when the request ends for [any reason](/previews#ending).\n\n@param {boolean} [options.feedback=true]\n  Whether to set [feedback classes](/feedback-classes)\n  while loading content.\n```\n\n----------------------------------------\n\nTITLE: Selectively Disabling Revalidation for Specific Routes in Unpoly\nDESCRIPTION: JavaScript code that preserves default revalidation behavior but disables it for the dashboard URL by customizing the auto-revalidate function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_9\n\nLANGUAGE: js\nCODE:\n```\nup.fragment.config.autoRevalidate = (response) => response.expired && response.url != '/dashboard'\n```\n\n----------------------------------------\n\nTITLE: Using target Option in Unpoly Rendering\nDESCRIPTION: The target option allows specifying which elements to update after a successful response. It accepts a CSS selector string, DOM element, jQuery object, or array of selector alternatives. If omitted, a main target will be rendered.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/targeting.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@param {string|Element|jQuery|Array<string>} [options.target]\n```\n\n----------------------------------------\n\nTITLE: Updating Select Options After Overlay Acceptance in Unpoly\nDESCRIPTION: This snippet demonstrates how to update and select a new option in a select field after creating a company in an overlay. It uses up.validate() to preview a form submission with the new company ID.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/subinteractions.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<select name=\"company\">...</select>\n\n<a href=\"/companies/new\"\n  up-layer=\"new\"\n  up-accept-location=\"/companies/$id\"\n  up-on-accepted=\"up.validate('select', { params: { company: value.id } })\">\n  New company\n</a>\n```\n\n----------------------------------------\n\nTITLE: Structuring HTML for Infinite Scrolling with Unpoly\nDESCRIPTION: This HTML snippet shows the initial structure for implementing infinite scrolling. It includes a container for pages and a link to load the next page, using Unpoly attributes for deferred loading and targeting.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/infinite-scrolling.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"pages\">\n  <div class=\"page\">items for page 1</div>\n</div>\n\n<a id=\"next-page\" href=\"/items?page=2\" up-defer=\"reveal\" up-target=\"#next-page, #pages:after\">\n  load next page\n</div>\n```\n\n----------------------------------------\n\nTITLE: Focusing Element with Custom Selector in Unpoly\nDESCRIPTION: Example showing how to focus a specific search input element when rendering new content using Unpoly's render function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({\n  target: '.content',\n  url: '/advanced-search',\n  focus: 'input[type=search]'\n})\n```\n\n----------------------------------------\n\nTITLE: Link-triggered Form Disabling\nDESCRIPTION: Example of disabling form controls when a link is clicked using the up-disable attribute on the link element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/session\">\n  <input type=\"text\" name=\"email\">\n  <input type=\"password\" name=\"password\">\n  <button type=\"submit\">Sign in</button>\n\n  <a href=\"/register\" up-disable>\n    Register an account instead\n  </a>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Configuring SEO-Friendly Lazy Loading with HTML\nDESCRIPTION: This example shows how to implement lazy loading while allowing search engines to discover and index the content as a separate URL.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a id=\"menu\" up-defer href=\"/menu\">load menu</a>\n```\n\n----------------------------------------\n\nTITLE: Custom Loading Indicator JavaScript Logic\nDESCRIPTION: Implements the logic for a custom loading indicator using Unpoly's compiler and event system. Includes show/hide functionality based on network state.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/progress-bar.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Disable the default progress bar\nup.network.config.progressBar = false\n\nup.compiler('loading-indicator', function(indicator) {\n  function show() { up.element.show(indicator) }\n  function hide() { up.element.hide(indicator) }\n\n  hide()\n\n  return [\n    up.on('up:network:late', show),\n    up.on('up:network:recover', hide)\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Extracting and Rendering Fragments from HTML Document\nDESCRIPTION: Shows how to extract specific elements from a larger HTML string using the document option with target selectors to update multiple fragments at once.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nlet html = `\n  <main>\n    <div class=\"foo\">...</div>\n    <div class=\"bar\">...</div>\n    <div class=\"bar\">...</div>\n    <div class=\"qux\">...</div>\n  </main  \n`\n```\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ target: '.foo, .bar', document: html })\n```\n\n----------------------------------------\n\nTITLE: External Link Form Disabling\nDESCRIPTION: Shows how to disable form controls from a link outside the form using a CSS selector to target the form.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/session\" id=\"session-form\">\n  <input type=\"text\" name=\"email\">\n  <input type=\"password\" name=\"password\">\n  <button type=\"submit\">Sign in</button>\n</form>\n\n<a href=\"/register\" up-disable=\"#session-form\">\n  Register an account instead\n</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Watch Events in HTML\nDESCRIPTION: Example of using the up-watch-event attribute to control which events trigger autosubmit functionality. This changes the default behavior to watch for 'change' events instead of 'input' events.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <input name=\"query\" up-autosubmit up-watch-event=\"change\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Awaiting Full Render Pipeline Completion\nDESCRIPTION: Example of using the finished promise to wait for all post-processing including animations and revalidation to complete before executing code.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet result = await up.render({ target: '.target', url: '/path' }).finished\nconsole.log(\"Final fragments: \", result.fragments)\n```\n\n----------------------------------------\n\nTITLE: Using Render Lifecycle Callbacks in Unpoly 3\nDESCRIPTION: Demonstrates how to hook into specific stages of the rendering process using callback functions. These callbacks allow intervention at various points in the rendering lifecycle for custom behavior.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({\n  url: '/path',\n  onLoaded(event)        { /* Content was loaded from cache or server */ },\n  focus(fragment, opts)  { /* Set focus */ },\n  scroll(fragment, opts) { /* Set scroll positions */ },\n  onRendered(result)     { /* Fragment was updated */ },\n  onFailRendered(result) { /* Fragment was updated from failed response */ },\n  onRevalidated(result)  { /* Stale content was re-rendered */ },\n  onFinished(result)     { /* All finished, including animation and revalidation */ }\n  onOffline(event)       { /* Disconnection or timeout */ },\n  onError(error)         { /* Any error */ }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Dependent Navigation in Unpoly\nDESCRIPTION: Event handler that modifies navigation behavior based on the origin element. This example opens links within forms in a new overlay to prevent losing form data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:link:follow', function(event, link) {\n  if (link.closest('form')) {\n    event.renderOptions.layer = 'new'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Layer Navigation Tracking in Unpoly\nDESCRIPTION: Enhanced tracking implementation that handles both main page navigation and overlay interactions using Unpoly layer events.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Track initial page load. Your old tracking code may already do this.\ntrackPageView(location.href)\n\n// Track when a layer changes its location.\n// This includes location changes on the root layer. \nup.on('up:layer:location:changed', ({ location }) => trackPageView(location))\n\n// When an overlay opens, track the overlay's initial location.\nup.on('up:layer:opened', ({ layer }) => {\n  // Don't track overlays that were opened from local string content.\n  if (layer.location) {\n    trackPageView(layer.location)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Substituting Content on Offline Events in Unpoly\nDESCRIPTION: This snippet shows an alternative approach to handling offline events by replacing the target content with a message informing the user they are offline, instead of retrying the request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/network-issues.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:fragment:offline', function(event) {\n  up.render(event.renderOptions.target, { content: \"You are offline.\" })\n})\n```\n\n----------------------------------------\n\nTITLE: Multiple Target Updates with up-validate\nDESCRIPTION: Example showing how to update multiple dependent fields simultaneously by using comma-separated selectors in the up-validate attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/dependent-fields.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<select name=\"continent\" up-validate=\"#country, #price\">\n  ...\n</select>\n```\n\n----------------------------------------\n\nTITLE: Ruby Controller Implementation for Form Validation\nDESCRIPTION: Example of a Rails controller implementing form validation with appropriate HTTP status codes for failed submissions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/validation.md#2025-04-17_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\nclass UsersController < ApplicationController\n\n  def create\n    user_params = params.require(:user).permit(:email, :password)\n    @user = User.new(user_params)\n    if @user.save?\n      sign_in @user\n    else\n      # Signal a failed form submission with an HTTP 422 status\n      render 'form', status: :unprocessable_entity\n    end\n  end\n\nend\n```\n\n----------------------------------------\n\nTITLE: Customizing Navigation Defaults in Unpoly\nDESCRIPTION: Example of customizing default navigation options by setting the transition property in up.fragment.config.navigateOptions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.fragment.config.navigateOptions.transition = 'cross-fade'\n```\n\n----------------------------------------\n\nTITLE: Failing Responses in Fragment Loaded Event Handlers\nDESCRIPTION: Demonstrates how to programmatically mark a response as failed within an up:fragment:loaded event listener based on response headers.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/failed-responses.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:fragment:loaded', function(event) {\n  if (event.response.header('X-Unauthorized')) {\n    event.renderOptions.fail = true\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Emitting Custom Events on Click with up-emit in Unpoly\nDESCRIPTION: Uses up-emit to make an element emit a custom event when clicked. Additional event properties can be specified with up-emit-props, supporting communication between distributed elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/faux-interactive-elements.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span up-emit=\"user:select\" up-emit-props=\"{ user_id: 5 }\">\n  Alice\n</span>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Template in HTML with Unpoly\nDESCRIPTION: Demonstrates how to render a template using Unpoly's up-document attribute. The template is referenced by its CSS selector and cloned without making a server request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" up-target=\".target\" up-document=\"#my-template\">Click me</a>\n\n<div class=\"target\">\n  Old content\n</div>\n\n<template id=\"my-template\">\n  <div class=\"target\">\n    New content\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Placeholder Logic with Previews in JavaScript\nDESCRIPTION: Demonstrates how to use Unpoly's preview feature for more complex placeholder logic and manipulation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('loading-message', function(preview) {\n  // ...\n  preview.showPlaceholder(element, html)\n})\n```\n\n----------------------------------------\n\nTITLE: Navigation After Overlay Acceptance in Unpoly\nDESCRIPTION: This snippet shows how to navigate to a new URL after successfully creating a company in an overlay. The up-on-accepted attribute contains a callback that uses up.navigate() to go to a new project creation page with the new company ID as a parameter.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/subinteractions.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/companies/new\"\n  up-layer=\"new\"\n  up-accept-location=\"/companies/$id\"\n  up-on-accepted=\"up.navigate({ url: '/projects/new?company_id=' + value.id' })\">\n  New company\n</a>\n```\n\n----------------------------------------\n\nTITLE: Customizing Restoration Behavior in Unpoly\nDESCRIPTION: This snippet demonstrates how to use the 'up:location:restore' event to customize the render options for history restoration in Unpoly. It shows how to change the target element for a specific URL path.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/restoring-history.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:location:restore', function(event) {\n  // Update a different fragment when restoring /special-path  \n  if (event.location === '/special-path') {\n    event.renderOptions.target = '#other'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Tracking Address Bar Changes with Unpoly Events\nDESCRIPTION: Implementation for tracking page views when the browser's address bar changes using Unpoly's up:location:changed event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Track initial page load. Your old tracking code may already do this.\ntrackPageView(location.href)\n\n// Track a visit when the address bar changes.\nup.on('up:location:changed', ({ location }) => trackPageView(location))\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Previews in JavaScript for Unpoly\nDESCRIPTION: These JavaScript snippets show different ways to specify multiple previews when using up.navigate() in Unpoly, including using a comma-separated string, an array of strings, or an array of functions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({ url: '/edit', preview: 'spinner form-placeholder' })\nup.navigate({ url: '/edit', preview: ['spinner', 'form-placeholder'] })\n\nlet fn1 = (preview) => { ... }\nlet fn2 = (preview) => { ... }\nup.navigate({ url: '/edit', preview: [fn1, fn2] })\n```\n\n----------------------------------------\n\nTITLE: Using up-follow and up-href for Link-Like Behavior in Unpoly\nDESCRIPTION: Makes a non-interactive element behave like a hyperlink by adding up-follow and up-href attributes. This creates an accessible element that navigates to the specified URL when clicked.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/faux-interactive-elements.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span up-follow up-href=\"/details\">Read more</span>\n```\n\n----------------------------------------\n\nTITLE: Eager Preloading Links on Insertion in Unpoly with HTML\nDESCRIPTION: Sets up a link to preload as soon as it appears in the DOM using 'up-preload=\"insert\"' attribute, useful for high-probability clicks like navigation menus.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/menu\" up-layer=\"new drawer\" up-preload=\"insert\">≡ Menu</a>\n```\n\n----------------------------------------\n\nTITLE: Disabling Fields During Processing\nDESCRIPTION: Example of using up-watch-disable to prevent user input while processing changes. This helps prevent confusion from multiple concurrent actions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <!-- Wait until the user has stopped typing for 100 milliseconds -->\n  <input name=\"query\" up-autosubmit up-watch-disable>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Using up-document attribute in Unpoly\nDESCRIPTION: The up-document attribute allows providing a larger HTML string from which Unpoly will extract the targeted fragment. It accepts HTML strings or template selectors with optional variables for dynamic templates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/local-content.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n[up-document]\n```\n\n----------------------------------------\n\nTITLE: Aborting Conflicting Requests in Unpoly\nDESCRIPTION: The default option { abort: 'target' } aborts earlier requests targeting fragments within your targeted fragments.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/aborting-requests.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{ abort: 'target' }\n```\n\n----------------------------------------\n\nTITLE: Migrating to Unpoly Compiler for Progressive Enhancement\nDESCRIPTION: Unpoly compiler approach that enhances lightbox links both on initial page load and when new elements are added through fragment updates. This solves the issue of elements not being enhanced after the initial page load.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/legacy-scripts.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.compiler('a.lightbox', function(element) {\n  lightboxify(element)\n})\n```\n\n----------------------------------------\n\nTITLE: Opening Overlay with Template Reference\nDESCRIPTION: Shows how to open an overlay using content from a template element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a up-layer=\"new popup\" up-content=\"#help\">\n  Help\n</a>\n\n<template id=\"help\">\n  <p>Helpful instructions here</p>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using Placeholders During Processing\nDESCRIPTION: Example of using up-watch-placeholder to show a placeholder element while processing input changes. This provides a more sophisticated loading state than a simple spinner.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <input name=\"query\" up-autosubmit up-watch-placeholder=\"#results-placeholder\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Configuring Failed Response Handling in Up.js\nDESCRIPTION: Configuration options for handling failed server responses in Up.js. Includes settings for determining what constitutes a failed response and how to handle rendering of failed responses to specific targets.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/failed-responses.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@param {boolean|Function(up.Response): boolean} [options.fail]\n@param {string|Element|jQuery|Array<string>} [options.failTarget]\n```\n\n----------------------------------------\n\nTITLE: Handling Offline Scenarios with up-on-offline Attribute (HTML)\nDESCRIPTION: This example demonstrates how to use the up-on-offline attribute to handle connection loss in Unpoly 3, allowing the user to retry the request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_54\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"...\" up-on-offline=\"if (confirm('You are offline. Retry?')) event.retry()\">Post bid</a>\n```\n\n----------------------------------------\n\nTITLE: Custom Preload Conditions with JavaScript in Unpoly\nDESCRIPTION: JavaScript compiler that preloads a link with 'rel=next' attribute when the user hovers over a main element, demonstrating programmatic preloading with up.link.preload().\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('link[rel=next]', (link) => {\n  return up.on('mouseenter', 'main', () => up.link.preload(link))\n})\n```\n\n----------------------------------------\n\nTITLE: Opening Basic Overlay with HTML Attribute\nDESCRIPTION: Shows how to open a fragment in a new overlay using the up-layer attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/users/new/\" up-layer=\"new\">\n```\n\n----------------------------------------\n\nTITLE: Auto-removing Flash Messages with JavaScript in Unpoly\nDESCRIPTION: JavaScript code that compiles flash message elements and removes them after a 5-second delay using up.destroy(), allowing for timed dismissal of notifications.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/flashes.md#2025-04-17_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nup.compiler('[up-flashes] > *', function(message) {\n  setTimeout(() => up.destroy(message), 5000)\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Templates for Placeholders in HTML\nDESCRIPTION: Demonstrates how to use dynamic templates with variables for more flexible and context-aware placeholders.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a\n  href=\"/path\"\n  up-target=\"#target\"\n  up-placeholder=\"#loading-template { size: 'xl', text: 'Please wait' }\">\n  Show story\n</a>\n```\n\n----------------------------------------\n\nTITLE: Setting Watch Options for Field Groups\nDESCRIPTION: Example of setting watch options on a fieldset to apply to all contained radio buttons. This is useful for watching groups of related fields with consistent behavior.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <fieldset up-autosubmit up-watch-disable>\n    <input type=\"radio\" name=\"format\" value=\"html\"> HTML format\n    <input type=\"radio\" name=\"format\" value=\"pdf\"> PDF format\n    <input type=\"radio\" name=\"format\" value=\"txt\"> Text format\n  </fieldset>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Reloading Elements After Overlay Acceptance in Unpoly\nDESCRIPTION: This snippet shows how to reload a list of companies after creating a new company in an overlay. The up-on-accepted attribute defines a callback that reloads the .company-list element when the overlay is accepted.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/subinteractions.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/companies/new\"\n  up-layer=\"new\"\n  up-accept-location=\"/companies/$id\"\n  up-on-accepted=\"up.reload('.company-list')\">\n  New company\n</a>\n\n<div class=\"company-list\">\n  ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Aborting Fragment Requests in JavaScript\nDESCRIPTION: Example of programmatically aborting requests targeting fragments in a specific region using the new up.fragment.abort() method in Unpoly 3.0.0.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nup.fragment.abort(selector)\n```\n\n----------------------------------------\n\nTITLE: Auto-reloading main element after user absence with up-poll\nDESCRIPTION: This HTML snippet demonstrates how to reload the main element when a user returns to a tab after an absence of 5 minutes or more using up-poll with a large interval value.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_35\n\nLANGUAGE: html\nCODE:\n```\n<main up-poll up-interval=\"300_000\">\n  ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Using compiler with meta information in Unpoly\nDESCRIPTION: This example demonstrates a compiler function with access to meta information about the current render pass. While access to response data is no longer available in Unpoly 3.5, other meta properties like layer and revalidating remain accessible.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.user', function(element, data, meta) {\n  console.log(meta.response.text.length)        // => 160232\n  console.log(meta.response.header('X-Course')) // => \"advanced-ruby\"\n  console.log(meta.layer.mode)                  // => \"root\"\n  console.log(meta.revalidating)                // => boolean\n})\n```\n\n----------------------------------------\n\nTITLE: Using an Anonymous Preview Function in JavaScript\nDESCRIPTION: This snippet shows how to use an anonymous preview function directly in a navigation call, without defining a named preview.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({\n   url: '/edit',\n   preview: (preview) => preview.insert(preview.origin, '<img src=\"spinner.gif\">')\n})\n```\n\n----------------------------------------\n\nTITLE: HTML Link with Rendered Callback\nDESCRIPTION: Example of a link with the up-on-rendered attribute that executes JavaScript code after the fragment has been updated, allowing access to the newly rendered content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a\n  href=\"/foo\"\n  up-target=\"/target\"\n  up-on-rendered=\"console.log('Updated fragment is', document.querySelector('.target'))\">\n  Click me\n</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Form Loading State with up.submit in Unpoly\nDESCRIPTION: Describes the disable option that can be passed to up.submit to disable form controls while a request is loading. When enabled, form controls are disabled during submission but their values are still included in the form parameters.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.submit/loading-state.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@partial up.submit/loading-state\n\n@mix up.render/loading-state\n  @param options.disable\n    [Disables form controls](/disabling-forms) while the request is loading.\n\n    The values of disabled fields will still be included in the submitted form params.\n```\n\n----------------------------------------\n\nTITLE: Manually Cloning and Modifying Template in JavaScript with Unpoly\nDESCRIPTION: Demonstrates how to manually clone a template using Unpoly's JavaScript API, modify the result, and then render it. This provides full programmatic control over template rendering.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nlet [fragment] = up.template.clone('#task-template')\nfragment.innerText = 'Buy Toast'\nup.render({ fragment })\n```\n\n----------------------------------------\n\nTITLE: Advanced Preview with Manual DOM Manipulation\nDESCRIPTION: This snippet demonstrates an advanced preview that manually adds and removes a CSS class to the body element, with proper cleanup handling.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('my-preview', function(preview) {\n  if (document.body.classList.contains('loading')) return\n\n  document.body.classList.add('loading')\n  \n  return () => document.body.classList.remove('loading') \n})\n```\n\n----------------------------------------\n\nTITLE: HTML Form with Validation Error Messages\nDESCRIPTION: Example showing how validation error messages are rendered in the HTML structure below form fields.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/validation.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/users\">\n\n  <fieldset>\n    <label for=\"email\" up-validate>E-mail</label>\n    <input type=\"text\" id=\"email\" name=\"email\" value=\"foo@bar.com\">\n    <div class=\"error\">E-mail has already been taken!</div>\n  </fieldset>\n\n  <fieldset>\n    <label for=\"password\" up-validate>Password</label>\n    <input type=\"password\" id=\"password\" name=\"password\" value=\"secret\">\n    <div class=\"error\">Password is too short!</div>\n  </fieldset>\n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Disabling Revalidation for Individual Links in Unpoly\nDESCRIPTION: HTML example showing how to disable revalidation for a specific link using the up-revalidate attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/\" up-revalidate=\"false\">Start page</a>\n```\n\n----------------------------------------\n\nTITLE: Preventing Polling Requests on the Client\nDESCRIPTION: Shows how to prevent polling requests using JavaScript event handling.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:fragment:poll', function(event) {\n  // Don't reload a fragment that contains a playing video\n  let video = event.target.querySelector('video')\n  if (video && !video.paused) {\n    event.preventDefault()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Aborting Layer Requests in Unpoly\nDESCRIPTION: Pass { abort: 'layer' } to abort all requests targeting a fragment on the same layer.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/aborting-requests.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{ abort: 'layer' }\n```\n\n----------------------------------------\n\nTITLE: Replacing Child Content with :content Pseudo Selector\nDESCRIPTION: HTML example showing how to preserve a container element while replacing all its children using the :content pseudo selector.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">...</div>\n\n<a href=\"/cards/5\" up-target=\".card:content\">Show card #5</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Template-Based Optimistic Rendering in HTML\nDESCRIPTION: HTML structure including a Minimustache template to reduce view duplication. The template defines how a task should be rendered and can be reused in JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimistic-rendering.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"tasks\">\n  ...\n</div>\n\n<script type=\"text/minimustache\" id=\"task-template\">\n  <div class=\"task\">\n    {{text}}\n  </div>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using Optional Targets with :maybe Pseudo Selector\nDESCRIPTION: HTML example showing how to mark a target as optional using the :maybe pseudo selector to prevent errors when elements might be missing.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/card/5\" up-target=\".content, .unread-count:maybe\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Using a Parameterized Preview in JavaScript Navigation\nDESCRIPTION: This JavaScript snippet shows how to use a preview with parameters when navigating programmatically.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({\n  url: '/edit',\n  preview: 'link-spinner { size: 100 }'\n})\n```\n\n----------------------------------------\n\nTITLE: Programmatic Target Derivation in Unpoly\nDESCRIPTION: Shows how to use up.fragment.toTarget() to programmatically derive a CSS selector from an element in JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/target-derivation.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nelement = up.element.createFromHTML('<span class=\"klass\">...</span>')\nselector = up.fragment.toTarget(element) // returns '.klass'\n```\n\n----------------------------------------\n\nTITLE: Handling Broken Compilers with Error Tolerance in JavaScript\nDESCRIPTION: Example demonstrating Unpoly's improved error handling where exceptions in user code no longer crash the entire application. A broken compiler will emit an error event but the up.hello() function still succeeds.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.element', () => { throw new Error('broken compiler') })\nlet element = up.element.affix(document.body, '.element')\nup.hello(element) // no error is thrown\n```\n\n----------------------------------------\n\nTITLE: Modern DOM-based Event Binding in Unpoly\nDESCRIPTION: Shows the updated approach for binding to Unpoly events using standard DOM event listeners on the document element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_94\n\nLANGUAGE: javascript\nCODE:\n```\n$(document).on('up:fragment:inserted', function(event) {\n  var $fragment = $(this);\n  ...\n};\n```\n\n----------------------------------------\n\nTITLE: Detecting Unpoly Errors in a Try-Catch Block\nDESCRIPTION: Pattern for catching and handling Unpoly-specific errors using the up.Error class. This allows distinguishing between Unpoly errors and other types of exceptions in asynchronous code.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_58\n\nLANGUAGE: javascript\nCODE:\n```\ntry {\n  await up.render('main', { url: '/foo' })\n} catch (exception) {\n  if (exception instanceof up.Error) {\n    // handle Unpoly exception\n  } else {\n    // re-throw unhandled exception\n    throw exception\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Focus Options in HTML Attributes\nDESCRIPTION: Demonstrates how to set multiple focus options using the up-focus attribute in an HTML link element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path#section\" up-follow up-focus=\"hash, reset\">Link label</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Navigation in Unpoly with up-navigate Attribute\nDESCRIPTION: Example showing how to use the up-navigate attribute to control navigation behavior in Unpoly. When set to false, it disables default navigation effects like history updates and scrolling during fragment updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/navigation.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nup-navigate=\"true\"\n```\n\nLANGUAGE: html\nCODE:\n```\nup-navigate=\"false\"\n```\n\n----------------------------------------\n\nTITLE: Using Relaxed JSON in HTML Attributes with Unpoly\nDESCRIPTION: Example of using Relaxed JSON syntax with single quotes and unquoted property names in the up-data attribute for better readability.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/relaxed-json.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"user\" up-data=\"{ name: 'Bob', age: 18 }\">Bob</span>\n```\n\n----------------------------------------\n\nTITLE: Targeting Body and Child Elements\nDESCRIPTION: HTML example showing that when targeting an ancestor and its descendant, Unpoly will only request the ancestor since it contains the descendant.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/home\" up-target=\"body, .unread-count\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Placing Flashes Outside Main Element in Unpoly Layout\nDESCRIPTION: HTML markup showing how to place an up-flashes container outside the main element in an application layout, which is a common pattern for notification placement.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/flashes.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  Navigation items ...\n</nav>\n<div up-flashes></div> <!-- mark-line -->\n<main>\n  Main page content ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Source URL for Polling\nDESCRIPTION: Shows how to set a custom source URL for polling using the up-source attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"unread-count\" up-poll up-source=\"/unread-count\">\n  2 new messages\n</div>\n```\n\n----------------------------------------\n\nTITLE: Form Observation with Value and Name\nDESCRIPTION: Demonstrates the new form observation API that provides field values and names.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_68\n\nLANGUAGE: javascript\nCODE:\n```\nup.observe('form', function(value, name) {\n  console.log('The value of %o is now %o', name, value);\n});\n```\n\n----------------------------------------\n\nTITLE: Preloading Links on Hover in Unpoly with HTML\nDESCRIPTION: Configures a link to preload its content when the user hovers over it, with a default delay of 90 milliseconds before making the preload request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-preload>Hover over me to preload my content</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Template-Based Optimistic Rendering in JavaScript\nDESCRIPTION: Updated JavaScript function that uses a server-rendered template instead of inline HTML. This reduces view duplication by using up.template.clone to generate new task elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimistic-rendering.md#2025-04-17_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nup.preview('add-task', function(preview) {\n  let form = preview.origin.closest('form')\n  let text = preview.params.get('text')\n\n  if (text) {\n    let newTask = up.template.clone('#task-template', { text })\n    preview.insert(form, 'afterend', newTask)\n    form.reset()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Overlay Elements with JavaScript in Unpoly\nDESCRIPTION: Shows how to use the up:layer:opened event to customize overlay elements after they're inserted but before they're rendered.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_9\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:layer:opened', function(event) {\n  if (isChristmas()) {\n    up.element.affix(event.layer.element, '.santa-hat', text: 'Merry Christmas!')\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using a Parameterized Preview with Dynamic Values\nDESCRIPTION: This snippet demonstrates how to use a preview with dynamically determined parameter values in JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nlet size = 100\n\nup.navigate({\n  url: '/edit',\n  preview: (preview) => preview.run('link-spinner', { size })\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-Caching Behavior in JavaScript\nDESCRIPTION: Shows how to customize the auto-caching behavior by modifying the up.network.config.autoCache function. This example prevents auto-caching of requests to URLs ending with '/edit'.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nlet defaultAutoCache = up.network.config.autoCache\nup.network.config.autoCache = function(request) {\n  return defaultAutoCache(request) && !request.url.endsWith('/edit')\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Flashes Container Implementation in Unpoly\nDESCRIPTION: HTML markup for creating a custom flashes container with specific Unpoly attributes that control its behavior, useful when the default up-flashes behavior is not suitable.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/flashes.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div\n  id=\"flashes\"\n  role=\"alert\"\n  up-hungry\n  up-if-layer=\"subtree\"\n  up-keep\n  up-on-keep=\"if (!up.element.isEmpty(event.newFragment)) event.preventDefault()\"\n>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Working with Custom CSS Properties in JavaScript\nDESCRIPTION: Examples of getting and setting CSS custom properties (CSS variables) using Unpoly's element style helpers.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_20\n\nLANGUAGE: js\nCODE:\n```\n// Returns the computed value of the `--custom-prop` property.\nup.element.style(div, '--custom-prop')\n\n// Sets the `--custom-prop` property as an inline `[style]` attribute\nup.element.setStyle(div, { '--custom-prop': 'value' })\n```\n\n----------------------------------------\n\nTITLE: Configuring Form Change Events in JavaScript\nDESCRIPTION: Example of configuring form change event handling in Unpoly 3.0 to restore previous behavior of validating on blur instead of change.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nup.form.config.watchChangeEvents\n```\n\n----------------------------------------\n\nTITLE: Implementing Delayed Preview in JavaScript for Unpoly\nDESCRIPTION: This JavaScript snippet demonstrates how to create a delayed preview in Unpoly using up.preview() and up.util.timer(). It checks if the preview is still running before making changes to avoid unintended modifications.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('delayed-spinner', (preview) => {\n  up.util.timer(1000, function() {\n    if (!preview.ended) {\n      preview.insert('<img src=\"spinner.gif\">')      \n    }\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Reloading App on Next User Interaction in JavaScript\nDESCRIPTION: This JavaScript code implements a strategy to reload the app at the next safe opportunity when assets have changed. It listens for asset changes and link follow events, preventing renders and forcing a full page load when conditions are met.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-asset-changes.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet assetsChanged = false\n\nup.on('up:assets:changed', function() {\n  assetsChanged = true\n})\n\nup.on('up:link:follow', function(event) {\n  if (assetsChanged && isLoadPageSafe(event.renderOptions)) {\n    // Prevent the render pass\n    event.preventDefault()\n\n    // Make full page load without Unpoly\n    up.network.loadPage(event.renderOptions)\n  }\n})\n\nfunction isLoadPageSafe({ url, layer, method }) {\n  // Default to 'GET' and uppercase the method string\n  let isSafeRequest = url && up.util.normalizeMethod(method) === 'GET'\n\n   // To prevent any overlays from closing, we only make a full page load\n   // when the link is changing the root layer.\n  let isRootLayer = up.layer.current.isRoot() && layer !== 'new'\n\n   return isSafeRequest && isRootLayer\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Event Watching Function for Different Field Types\nDESCRIPTION: Function that dynamically determines which events to watch based on the field type. This example changes date pickers on desktop to watch 'blur' instead of 'change' events to improve user experience.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nup.form.config.watchChangeEvents = function(field) { \n  if (field.matches('input[type=date]') && isDesktop()) {\n    return ['blur']\n  } else {\n    return ['change']\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Exact URL Pattern Match Example\nDESCRIPTION: Demonstrates matching a specific URL path using a simple URL pattern.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/users/new\n```\n\n----------------------------------------\n\nTITLE: Using Layer Reference for Async Operations in JavaScript\nDESCRIPTION: This snippet demonstrates how to store and use a layer reference for asynchronous operations where the current layer may change over time.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/layer-option.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Store an up.Layer reference to what is now the current layer.\nlet layerReference = up.layer.current\n\n// Run a function in 10 seconds layer.\nsetTimeout(function() {\n  // Pass the saved layer reference since the current layer\n  // may have changed in the last 10 seconds..\n  let headlines = up.fragment.get('h1', { layer: layerReference })\n  console.log(\"Headlines are \", headlines)\n}, 10000)\n```\n\n----------------------------------------\n\nTITLE: Element Data Attribute Examples in Unpoly 3\nDESCRIPTION: Shows three equivalent ways to attach data to elements using either up-data attributes, standard HTML5 data attributes, or a combination of both. These data values can be accessed by compilers and other Unpoly features.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_49\n\nLANGUAGE: html\nCODE:\n```\n<div up-data='{ \"foo\": \"one\", \"bar\": \"two\" }'></div>\n<div data-foo='one' data-bar='two'></div>\n<div up-data='{ \"foo\": \"one\" }' data-bar='bar'></div>\n```\n\n----------------------------------------\n\nTITLE: Initializing Layer Context in HTML\nDESCRIPTION: Shows how to initialize the context object using HTML attributes when opening a layer.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/games/new\" up-layer=\"new\" up-context=\"{ lives: 3 }\">\n  Start a new game\n</a>\n```\n\n----------------------------------------\n\nTITLE: HTML Form Validation with Watching\nDESCRIPTION: Example showing how to use up-validate and up-watch-disable attributes to validate and disable form elements during validation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_51\n\nLANGUAGE: html\nCODE:\n```\n<select up-validate=\".employees\" up-watch-disable=\".employees\">\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Restoration Behavior in Unpoly\nDESCRIPTION: This example shows how to completely override Unpoly's default history restoration behavior. It prevents the default render pass and implements custom restoration logic using plain JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/restoring-history.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:location:restore', function(event) {\n  // Stop Unpoly from rendering anything\n  event.preventDefault()\n  \n  // We will render ourselves\n  document.body.innerText = `Restored content for ${event.location}!`\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Polling Example with Unpoly\nDESCRIPTION: Demonstrates how to use the up-poll attribute to refresh a fragment every 30 seconds.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"unread-count\" up-poll>\n  2 new messages\n</div>\n```\n\n----------------------------------------\n\nTITLE: Handling up:click Events in Unpoly\nDESCRIPTION: JavaScript event listener for handling the up:click event emitted by elements with up-clickable attribute. This allows for custom behavior when faux-buttons are activated.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/faux-interactive-elements.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlet button = document.querySelector('#faux-button')\n\nbutton.addEventListener('up:click', function(event) {\n  console.log('Click on faux button!')\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Fragment Loading from Single URL in HTML\nDESCRIPTION: This example shows how to set up multiple deferred placeholders that load from the same URL, optimizing network requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"editorial-controls\" up-defer up-href=\"/articles/123/deferred\"></div>\n\n... other HTML ...\n\n<div id=\"analytics-controls\" up-defer up-href=\"/articles/123/deferred\"></div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Previews in HTML for Unpoly\nDESCRIPTION: This HTML snippet shows how to use multiple previews in Unpoly by specifying multiple preview names in the up-preview attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/edit\"\n   up-follow\n   up-preview=\"spinner, form-placeholder\">\n  Edit page\n</a>\n```\n\n----------------------------------------\n\nTITLE: Parsing Relaxed JSON in JavaScript with Unpoly\nDESCRIPTION: Example of using up.util.parseRelaxedJSON() to parse a Relaxed JSON string with unquoted property names, single quotes, and a trailing comma.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/relaxed-json.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nlet value = up.util.parseRelaxedJSON(\"{ foo: 'one', bar: 'two', }\")\nconsole.log(value) // logs an object { foo: 'one', bar: 'two' }\n```\n\n----------------------------------------\n\nTITLE: Rendering DOM Element Object in Unpoly\nDESCRIPTION: JavaScript example showing how to render DOM Element objects directly using the content option, which will move existing elements in the DOM or compile new elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nlet element = document.createElement(...)\nup.render({ target: '.target', content: element })\n```\n\n----------------------------------------\n\nTITLE: Event Binding with Element Reference in Unpoly\nDESCRIPTION: Example of binding event handlers to specific elements using up.on() with event delegation support.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\nup.on(element, '.button', 'click', (event) => { ... })\n```\n\n----------------------------------------\n\nTITLE: Lazy Preloading Links when Scrolled into View in Unpoly with HTML\nDESCRIPTION: Configures a link to preload when it's scrolled into the viewport using the 'up-preload=\"reveal\"' attribute, useful for below-the-fold content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/stories/106\" up-preload=\"reveal\">Full story</a>\n```\n\n----------------------------------------\n\nTITLE: Modifying Layer Context in JavaScript\nDESCRIPTION: Illustrates how to read and change the context from client-side JavaScript using an event listener.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.on('heart:collected', function() {\n  up.context.lives++\n})\n```\n\n----------------------------------------\n\nTITLE: Unpoly Network Error Handler\nDESCRIPTION: Event handler that executes when a fragment fails to load due to network issues or timeouts. Provides access to the triggering element and error object.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/lifecycle-hooks.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"this\": \"The link being followed\",\n  \"error\": \"An up.Offline error\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Load Timing with JavaScript and Unpoly\nDESCRIPTION: This code snippet uses Unpoly's compiler to set a custom load timing for a deferred content placeholder.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('#menu[up-defer]', function(placeholder) {\n  setTimeout(() => up.deferred.load(placeholder), 2000)\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Layer Option for Unpoly Follow\nDESCRIPTION: Specifies the layer parameter that determines where fragments should be rendered. It supports various layer options and can open fragments in new overlays.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/layer.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-layer='origin current']\n  The [layer](/up.layer) in which to match and render the fragment.\n\n  See [layer option](/layer-option) for a list of allowed values.\n\n  To [open the fragment in a new overlay](/opening-overlays), pass `[up-layer=new]`.\n  In this case attributes for `[up-layer=new]` may also be used.\n```\n\n----------------------------------------\n\nTITLE: Server Response with ETag for Bandwidth Optimization\nDESCRIPTION: Illustrates how to include an ETag header in the server response for detecting unchanged content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nETag: \"x234dff\"\n\n<html>\n  ...\n  <div class='messages'>\n    ...\n  </div>\n  ...\n</html>\n```\n\n----------------------------------------\n\nTITLE: Deferred Loading Implementation with up-defer\nDESCRIPTION: Implementation of the placeholder element with up-defer and up-href attributes to enable lazy loading of the menu content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/defer-example.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"menu\" up-defer up-href=\"/menu\">\n  Loading...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Client-side Template Reference with up-document\nDESCRIPTION: Demonstrates how to use client-side templating by referencing a template element with up-document attribute, allowing content to be replaced without a server request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" up-target=\".target\" up-document=\"#my-template\">Click me</a>\n\n<div class=\"target\">\n  Old content\n</div>\n\n<template id=\"my-template\">\n  <div class=\"target\">\n    New content\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using up.form.isField() in JavaScript\nDESCRIPTION: New function up.form.isField(). It returns whether the given element is a form field.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst isField = up.form.isField(element);\n```\n\n----------------------------------------\n\nTITLE: Default Focus Visibility Strategy Implementation in Unpoly\nDESCRIPTION: The default implementation of up.viewport.config.autoFocusVisible that determines whether a focus ring should be visible. It shows focus rings when the user interacts via keyboard or when the focused element is a form field.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus-visibility.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nup.viewport.config.autoFocusVisible = ({ element, inputDevice }) =>\n  inputDevice === 'key' || up.form.isField(element)\n```\n\n----------------------------------------\n\nTITLE: Batching Multiple Render Requests in JavaScript\nDESCRIPTION: Example of how Unpoly batches multiple requests to the same URL, merging the X-Up-Target headers to optimize performance.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_14\n\nLANGUAGE: js\nCODE:\n```\nup.render('.foo', { url: '/path', cache: true })\nup.render('.bar', { url: '/path', cache: true })\n```\n\n----------------------------------------\n\nTITLE: Using a Parameterized Preview in HTML\nDESCRIPTION: This HTML snippet demonstrates how to use a preview with parameters directly in an HTML element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/edit\" up-follow up-preview=\"spinner { size: 100 }\">Edit page</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Single-Page Navigation for All Links in JavaScript\nDESCRIPTION: Demonstrates how to configure Unpoly to apply single-page navigation behavior to all hyperlinks by default, without needing to add the up-follow attribute to each link.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.link.config.followSelectors.push('a[href]')\n```\n\n----------------------------------------\n\nTITLE: Accessing Overlay Acceptance Values in HTML\nDESCRIPTION: Demonstrates accessing the acceptance value in HTML using the up-on-accepted attribute. The value variable contains the data returned when the overlay is accepted.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/select-user\"\n  up-layer=\"new\"\n  up-on-accepted=\"console.log('Got user', value)\">\n  ...\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Notification Flashes with up-flashes in HTML\nDESCRIPTION: Example of how to use the up-flashes element to render confirmation messages in Unpoly. The element's content will be displayed as notification messages, which have special behavior like being updated even when not directly targeted.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_29\n\nLANGUAGE: html\nCODE:\n```\n<div up-flashes>\n  <strong>User was updated!</strong> <!-- mark-line -->\n</div>\n\n<main>\n  Main response content ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Updating Stylesheets on Asset Changes in JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to manually update stylesheet assets when changes are detected. It removes old stylesheets and appends new ones to the document head.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-asset-changes.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction isStylesheet(asset) {\n  return asset.matches('link[rel=stylesheet]')\n}\n\nup.on('up:assets:changed', function({ oldAssets, newAssets }) {\n  let oldStylesheets = up.util.filter(oldAssets, isStylesheet)\n  for (let oldStylesheet of oldStylesheets) {\n    oldStylesheet.remove()\n  }\n  \n  let newStylesheets = up.util.filter(newAssets, isStylesheet)\n  for (let newStylesheet of newStylesheets) {\n    document.head.append(newStylesheet)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Handling AJAX Requests with up:proxy:load Event\nDESCRIPTION: Example of how to access request properties in the up:proxy:load event, which replaces the previous jQuery.ajaxPrefilter() method for intercepting AJAX requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_79\n\nLANGUAGE: javascript\nCODE:\n```\nevent.request.url\n```\n\n----------------------------------------\n\nTITLE: Configuring Scroll Behavior in Unpoly Render Function\nDESCRIPTION: This snippet outlines the various scrolling-related options available in Unpoly's render function. It includes parameters for controlling scroll animation, revealing elements, and managing scroll positions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/scrolling.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@partial up.render/scrolling\n\n@param {boolean|string|Element|Function} [options.scroll]\n  How to scroll after the new fragment was rendered.\n\n  See [scrolling](/scrolling) for a list of allowed values.\n\n@param {string} [options.scrollBehavior='instant']\n  Whether to [animate the scroll motion](/scroll-tuning#animating-the-scroll-motion)\n  when [prepending or appending](/targeting-fragments#appending-or-prepending) content.\n\n@param {number} [options.revealSnap]\n  When to [snap to the top](/scroll-tuning#snapping-to-the-screen-edge)\n  when scrolling to an element near the top edge of the viewport's scroll buffer.\n\n@param {number} [options.revealTop]\n  When to [move a revealed element to the top](/scroll-tuning#moving-revealed-elements-to-the-top)\n  when scrolling to an element.\n\n@param {string} [options.revealPadding]\n  How much [space to leave to the closest viewport edge](/scroll-tuning#revealing-with-padding)\n  when scrolling to an element.\n\n@param {string} [options.revealMax]\n  How many pixel lines of [high element to reveal](/scroll-tuning#revealing-with-padding) when scrolling to an element.\n\n@param {boolean} [options.saveScroll=true]\n  Whether to [save scroll positions](/up.viewport.saveScroll) before updating the fragment.\n\n  Saved scroll positions can later be restored with [`{ scroll: 'restore' }`](/scrolling#restoring-scroll-positions).\n```\n\n----------------------------------------\n\nTITLE: Disabling Form via JavaScript\nDESCRIPTION: Demonstrates how to programmatically disable form controls using the up.submit() method with the disable option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.submit(form, { disable: true })\n```\n\n----------------------------------------\n\nTITLE: Replacing Fragment Children with up-content Attribute\nDESCRIPTION: Demonstrates how to replace only an element's children by providing new HTML content via the up-content attribute, without making a server request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"target\">\n  Old content\n</div>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" up-target=\".target\" up-content=\"New content\">Click me</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"target\">\n  New content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Focus Visibility Strategy in Unpoly\nDESCRIPTION: Example of extending the default focus visibility strategy to never show focus rings on main elements, while preserving the default behavior for other elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus-visibility.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nlet defaultVisible = up.viewport.config.autoFocusVisible\nup.viewport.config.autoFocusVisible = (options) =>\n  defaultVisible(options) && !up.fragment.matches(options.element, ':main')\n```\n\n----------------------------------------\n\nTITLE: Implementing Revalidation Preview in HTML for Unpoly\nDESCRIPTION: This snippet demonstrates how to use the up-revalidate-preview attribute to show a preview for revalidating requests after rendering cached content in Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/clients\"\n   up-follow\n   up-preview=\"index-placeholder\"\n   up-revalidate-preview=\"spinner\">\n  Clients\n</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Transition for Fragment Morphing in Unpoly\nDESCRIPTION: This option specifies the name of a transition to morph between old and new fragments when swapping content. It is used for swapping fragments, not for appending or prepending content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/motion.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\noptions.transition\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request with X-Up-Target Header for Fragment Updates\nDESCRIPTION: This example shows how Unpoly sends the targeted selector in an X-Up-Target request header when updating a fragment. The server can use this information to optimize its response.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /sitemap HTTP/1.1\nX-Up-Target: .menu\n```\n\n----------------------------------------\n\nTITLE: Using Property Names in Utility Functions\nDESCRIPTION: Demonstrates how utility functions like up.util.map() can now accept a property name instead of a mapping function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_75\n\nLANGUAGE: javascript\nCODE:\n```\nusers = [{ name: 'foo' }, { name: 'bar' }]\nup.util.map(users, 'name') // ['foo', 'bar']\n```\n\n----------------------------------------\n\nTITLE: Rendering Unpoly Response Object\nDESCRIPTION: Shows how to render an up.Response object, which processes both the response text and headers for rendering, useful for accessing discarded responses from closed overlays.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nlet response = await up.request('/path')\nup.render({ target: '.target', response })\n```\n\n----------------------------------------\n\nTITLE: Unpoly Fragment Loaded Event Handler\nDESCRIPTION: JavaScript event handler that executes when the server responds with new HTML but before rendering. Provides access to the triggering element and fragment loaded event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/lifecycle-hooks.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"this\": \"The link being followed\",\n  \"event\": \"A preventable up:fragment:loaded event\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using up-evict-cache Attribute in Unpoly\nDESCRIPTION: Controls whether existing cache entries will be evicted with the current request. Can be set to true or to a URL pattern to only evict matching requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/caching.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\nup-evict-cache\n```\n\n----------------------------------------\n\nTITLE: Initializing Layer Context in JavaScript\nDESCRIPTION: Demonstrates how to initialize the context object when opening a layer using JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.open({ url: '/games/new', context: { lives: 3 } })\n```\n\n----------------------------------------\n\nTITLE: Changing Target Through Client-Side Events in Unpoly\nDESCRIPTION: Client-side events like up:link:follow, up:form:submit, and up:fragment:loaded allow changing the target by modifying the event.renderOptions.target property. This provides flexibility for dynamic target selection based on client-side conditions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\nEvents like `up:link:follow`, `up:form:submit` and `up:fragment:loaded` also let you change the target\\nby setting `event.renderOptions.target` to a new selector.\\nSee [Changing options before rendering](/render-lifecycle#changing-options-before-rendering) for an example.\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Expiration in Unpoly Rendering\nDESCRIPTION: This snippet describes the 'expireCache' option for Unpoly rendering. It controls whether existing cache entries will be expired with this request, accepting boolean or string values.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/caching.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\noptions.expireCache\n```\n\n----------------------------------------\n\nTITLE: Using up-revalidate-preview Attribute in Unpoly\nDESCRIPTION: Specifies the name of a preview that runs while revalidating cached content. This is marked as an experimental feature in Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/caching.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nup-revalidate-preview\n```\n\n----------------------------------------\n\nTITLE: Creating Clickable Elements with up-clickable in Unpoly\nDESCRIPTION: Makes a non-interactive element behave like a button by adding the up-clickable attribute. This enables keyboard navigation and other accessibility features without specifying a particular action.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/faux-interactive-elements.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span id=\"faux-button\" up-clickable>Click me</span>\n```\n\n----------------------------------------\n\nTITLE: Styling Loading Elements with CSS Classes in Unpoly\nDESCRIPTION: Demonstrates how Unpoly adds CSS classes to elements during loading. The 'up-active' class is added to the element triggering the load, while 'up-loading' is applied to the target fragment being updated.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/loading-state.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/bar\" up-target=\"#target\" class=\"up-active\">Bar</a>\n\n<div id=\"target\" class=\"up-loading\">\n  Initial content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Event-Based Close Conditions for Overlays\nDESCRIPTION: Shows how to set up an event-based close condition using up-accept-event. The overlay closes automatically when the specified event is emitted within the overlay, with the event object becoming the acceptance value.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/users/new\"\n  up-layer=\"new\"\n  up-accept-event=\"user:created\"\n  up-on-accepted=\"alert('Hello user #' + value.id)\">\n  Add a user\n</a>\n```\n\n----------------------------------------\n\nTITLE: Using up-revalidate Attribute in Unpoly\nDESCRIPTION: Controls whether to reload a fragment after it was rendered from a cached response. Options include 'auto' for age-based revalidation, 'true' to always revalidate cached content, and 'false' to never revalidate cached content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/caching.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\nup-revalidate='auto'\n```\n\n----------------------------------------\n\nTITLE: JavaScript Implementation of Wildcard Pattern\nDESCRIPTION: Demonstrates wildcard URL pattern matching in JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.open({ acceptLocation: \"/users/*\" })\n```\n\n----------------------------------------\n\nTITLE: Updating Browser Location in Unpoly Render Function\nDESCRIPTION: Sets an explicit browser location URL before rendering. By default, it uses the { url } option or the final URL after server redirection. Setting it to false prevents URL updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/history.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\noptions.location = 'https://example.com/new-url' | false\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Watch Callback Parameters\nDESCRIPTION: A structured table documenting the parameters passed to watch callbacks in Unpoly's form watching system. Includes value and name parameters, plus configuration options for controlling UI feedback, field disabling, previews and placeholders.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/watch-callback-arguments.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                  | Type       | Description                                                                                                                                   |\n|-----------------------|------------|-----------------------------------------------------------------------------------------------------------------------------------------------|\n| `value`               | `string`   | The changed field value.                                                                                                                      |\n| `name`                | `string`   | The `[name]` of the changed field.                                                                                                            |\n| `options.origin`      | `Element`  | The element that caused the change.<br>This is usually the changed field.                                                                     |\n| `options.feedback`    | `boolean`  | Whether to set [feedback classes](/feedback-classes) while working.<br>Parsed from the field's `[up-watch-feedback]` attribute.               |\n| `options.disable`     | `boolean`  | Which [fields to disable](/disabling-forms) while working.<br>Parsed from the field's `[up-watch-disable]` attribute.                         |\n| `options.preview`     | `string`   | The name of a [preview](/previews) to run while working.<br>Parsed from the field's `[up-watch-preview]` attribute.                           |\n| `options.placeholder` | `string`   | The HTML or selector for a [placeholder](/placeholders) to show while working.<br>Parsed from the field's `[up-watch-placeholder]` attribute. |\n```\n\n----------------------------------------\n\nTITLE: Using up-expire-cache Attribute in Unpoly\nDESCRIPTION: Controls whether existing cache entries will be expired with the current request. Can be set to true or to a URL pattern to only expire matching requests. By default, non-GET requests expire the entire cache.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/caching.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nup-expire-cache\n```\n\n----------------------------------------\n\nTITLE: Configuring Failed Response Handling with up-fail Attribute\nDESCRIPTION: HTML attribute for configuring how failed server responses are handled. By default, any non-2xx or non-304 status code is considered an error. Setting up-fail=false treats all responses as successful.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/failed-responses.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n[up-fail]\n```\n\n----------------------------------------\n\nTITLE: Complex Template with Mustache-style Syntax in HTML\nDESCRIPTION: Illustrates a more complex template using Mustache-style syntax for variables, loops, and conditions. This example uses a script tag with a custom type attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script id=\"results-template\" type=\"text/mustache\">\n  <div id=\"game-results\">\n    <h1>Results of game {{gameCount}}</h1>\n\n    {{#players}}\n      <p>{{name}} has scored {{score}} points.</p>\n    {{/players}}\n  </div>>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Fragment Reload Examples\nDESCRIPTION: JavaScript examples showing how Unpoly reloads different fragments with their respective modification times\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.reload('.messages')     // If-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT\nup.reload('.recent-posts') // If-Modified-Since: Thu, 3 Nov 2022 15:35:02 GMT\nup.reload('#post1')        // If-Modified-Since: Thu, 3 Nov 2022 15:35:02 GMT\n```\n\n----------------------------------------\n\nTITLE: Configuring additional CSS classes for current links\nDESCRIPTION: Additional CSS classes for current links can be configured using up.status.config.currentClasses.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nup.status.config.currentClasses.push('.my-current')\n```\n\n----------------------------------------\n\nTITLE: Configuring History Updates in Unpoly Render Function\nDESCRIPTION: Controls whether and how browser history is updated during rendering. It can be set to true, 'auto', or false. When set to 'auto', it uses the up.fragment.config.autoHistoryTargets for conditional updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/history.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\noptions.history = true | 'auto' | false\n```\n\n----------------------------------------\n\nTITLE: Setting Focus Visibility with HTML Attributes\nDESCRIPTION: Example of using the up-focus-visible attribute on a link to override the default focus visibility strategy for a single interaction.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus-visibility.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-focus=\":main\" up-focus-visible=\"false\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Server Response HTML for Next Page in Unpoly Infinite Scrolling\nDESCRIPTION: This HTML snippet shows the server's response for the next page request. It contains items for the new page and an updated link for the subsequent page, maintaining the infinite scrolling structure.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/infinite-scrolling.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"pages\">\n  <div class=\"page\">items for page 2</div>\n</div>\n\n<a id=\"next-page\" href=\"/items?page=3\" up-defer=\"reveal\" up-target=\"#next-page, #pages:after\">\n  load next page\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Revalidation Preview to True in HTML for Unpoly\nDESCRIPTION: This snippet shows how to use the up-revalidate-preview attribute with a true value to apply the up-preview attribute for both initial render and revalidation requests in Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/clients\"\n   up-follow\n   up-preview=\"spinner\"\n   up-revalidate-preview=\"true\">\n  Clients\n</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Usage in Unpoly Rendering\nDESCRIPTION: This snippet describes the 'cache' option for Unpoly rendering. It controls whether to read from and write to the cache, with possible values of true, 'auto', or false.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/caching.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\noptions.cache\n```\n\n----------------------------------------\n\nTITLE: Styling Modal Box with CSS in Unpoly\nDESCRIPTION: Example of how to override Unpoly's default styles for modal boxes by targeting the up-modal-box element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\nup-modal-box {\n  background-color: #eeeeee;\n  padding: 20px;\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache for Individual Links in Unpoly\nDESCRIPTION: HTML example showing how to disable caching for a specific link using the up-cache attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/stock-charts\" up-cache=\"false\">View latest prices</a>\n```\n\n----------------------------------------\n\nTITLE: Preventing hungry element updates with event listener in JavaScript\nDESCRIPTION: This code demonstrates how to prevent hungry elements from updating based on custom conditions. The example shows preventing updates for elements with an 'is-empty' class by listening to the 'up:fragment:hungry' event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nelement.addEventListener('up:fragment:hungry', function(event) {\n  if (event.newFragment.classList.contains('is-empty')) {\n    console.log('Ignoring a fragment with an .is-empty class')\n    event.preventDefault()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Opening Overlay with Layer Instance Promise\nDESCRIPTION: Demonstrates opening an overlay using up.layer.open() which returns a promise for the layer instance.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nlet layer = await up.layer.open({ url: '/users/new' })\n```\n\n----------------------------------------\n\nTITLE: Rendering up.Response Objects (JavaScript)\nDESCRIPTION: Example of passing an up.Response object as a { response } option to render its contents after manually fetching content from the server.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nlet response = await up.request('/path')\nup.render({ target: '.target', response })\n```\n\n----------------------------------------\n\nTITLE: Fragment Tracking Compiler Implementation\nDESCRIPTION: Unpoly compiler implementation for tracking page views when specific fragments are rendered.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('[track-page-view]', function(element, data, meta) {\n  // Don't track duplicate page views if we just reloaded for cache revalidation. \n  if (!meta.revalidating) {\n    // Send an event to our web analytics tool.\n    trackPageView(meta.layer.location)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Shorthand Overlay Mode Syntax\nDESCRIPTION: Shows the shorthand syntax for specifying overlay mode directly in the up-layer attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/users/new/\" up-layer=\"new drawer\">\n```\n\n----------------------------------------\n\nTITLE: Using CSP nonce with up-on-loaded attribute in HTML\nDESCRIPTION: Demonstrates how to use a Content Security Policy nonce with the up-on-loaded attribute to allow JavaScript execution when strict CSP is enabled.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_59\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-on-loaded=\"nonce-kO52Iphm8B alert()\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Click-Based Overlay Closing in Unpoly\nDESCRIPTION: HTML markup for closing an overlay when an element is clicked using the up-accept attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/fallback\" up-accept>...</a>\n```\n\n----------------------------------------\n\nTITLE: Parameter Documentation for up.render Options\nDESCRIPTION: Detailed JSDoc-style documentation for the options parameter of up.render method. Includes content, fragment, document, and response options for different rendering scenarios. Each option supports either HTML strings or template references.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/local-content.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@partial up.render/local-content\n\n@param {string|Element|List<Node>} [options.content]\n@param {string|Element} [options.fragment]\n@param {string|Element|Document} [options.document]\n@param {up.Response} [options.response]\n```\n\n----------------------------------------\n\nTITLE: Configuring Watch Event Parameters in HTML\nDESCRIPTION: Demonstrates the HTML attributes for configuring event watching in Unpoly. The up-watch-event attribute specifies the event type to watch (defaulting to 'input'), while up-watch-delay sets a debouncing delay in milliseconds.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-watch/event-source.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n@partial up-watch/event-source\n\n@param [up-watch-event='input']\n@param [up-watch-delay=0]\n```\n\n----------------------------------------\n\nTITLE: Layer Mode Configuration Table in Markdown\nDESCRIPTION: A markdown table defining the available layer modes in Unpoly, including their descriptions and whether they function as overlays. Includes root layer, modal dialog, drawer, popup menu, and cover modes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/layer-terminology.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Mode      | Description                           | Overlay? |\n| --------- | ------------------------------------- |----------|\n| `root`    | The initial page                      | no       |\n| `modal`   | A modal dialog box                    | yes      |\n| `drawer`  | A drawer sliding in from the side     | yes      |\n| `popup`   | A popup menu anchored to a link       | yes      |\n| `cover`   | An overlay covering the entire screen | yes      |\n```\n\n----------------------------------------\n\nTITLE: Setting Form-Wide Watch Options\nDESCRIPTION: Example of setting watch options at the form level to apply to all fields within the form. This provides a convenient way to configure consistent behavior across multiple fields.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\" up-watch-disable>\n  <input name=\"query\" up-autosubmit>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Accessing Response in Layer Events (JavaScript)\nDESCRIPTION: Example of using the new { response } property in up:layer:accepted events to render content from a server response that closed an overlay.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_38\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/companies/new\"\n   up-layer=\"new\"\n   up-accept-location=\"/companies\"\n   up-on-accepted=\"up.render('.companies', { response: event.response }\">\n  New company\n</a>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Template with Variables in HTML\nDESCRIPTION: Illustrates a template with variable placeholders, which can be customized when rendering. This example uses double curly braces for variable syntax.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<template id=\"task-template\">\n  <div class=\"task\">\n    {{taskDescription}}\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Handling Failed Responses in Polling\nDESCRIPTION: Demonstrates how to handle failed responses by setting the up-fail attribute to false.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"download-status\" up-poll up-fail=\"false\">\n  Download not ready yet.\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Polling Interval in JavaScript\nDESCRIPTION: Demonstrates how to set the default polling interval using JavaScript configuration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.radio.config.pollInterval = 10000\n```\n\n----------------------------------------\n\nTITLE: Setting X-Up-Target Header for Server-Side Target Change in Unpoly\nDESCRIPTION: The server can change the rendering target by setting the X-Up-Target response header. This allows dynamic modification of the target fragment based on server-side logic.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\nThe server may elect to render a different target by seting an `X-Up-Target` response header.\n```\n\n----------------------------------------\n\nTITLE: Targeting Nothing with :none Selector\nDESCRIPTION: HTML example showing how to make a server request without updating any fragment on the page using the :none selector.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/ping\" up-target=\":none\">Ping server</a>\n```\n\n----------------------------------------\n\nTITLE: Accessing Layer Locations in Unpoly\nDESCRIPTION: This snippet shows how to access location information for individual layers in Unpoly, even when an overlay with visible history is active. It demonstrates that each layer maintains its own location tracking.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/history-in-overlays.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.current.location // => \"/overlay\"\nup.layer.root.location    // => \"/\"\n```\n\n----------------------------------------\n\nTITLE: Showing Loading Preview During Processing\nDESCRIPTION: Example of using up-watch-preview to display a spinner while processing input changes. This provides visual feedback to users that their input is being processed.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\">\n  <input name=\"query\" up-autosubmit up-watch-preview=\"spinner\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Unpoly Error Handler\nDESCRIPTION: Generic error handler for any errors during the rendering process. Provides access to the triggering element and error object.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/lifecycle-hooks.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"this\": \"The link being followed\",\n  \"error\": \"An Error object\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining navigational containers using up-nav attribute\nDESCRIPTION: If a <nav> element cannot be used, the [up-nav] attribute can be set on an arbitrary tag to define a navigational container.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div up-nav>\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTML Element Navigation History Attributes\nDESCRIPTION: Example showing attribute usage for conditional hungry element updates based on layer and history state.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_52\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"canonical\" up-if-layer=\"any\" up-if-history>\n```\n\n----------------------------------------\n\nTITLE: Using Auto-Attribute for Caching in HTML\nDESCRIPTION: Demonstrates the use of the 'auto' value for the up-cache attribute, which enables automatic caching for GET requests on links with up-follow.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-cache=\"auto\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Setting HTML Lang Attribute in Unpoly Render Function\nDESCRIPTION: Specifies an explicit language code to set as the html[lang] attribute. By default, it extracts the language from the response. It can be set to false to prevent updates to the lang attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/history.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\noptions.lang = 'en-US' | false\n```\n\n----------------------------------------\n\nTITLE: Targeting Main Element with JavaScript\nDESCRIPTION: JavaScript example showing how to render content to the main element by omitting the target option in the up.render call.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ url: '/cards/5' })\n```\n\n----------------------------------------\n\nTITLE: Preventing Rendering of Revalidation Responses in Unpoly\nDESCRIPTION: JavaScript code that prevents rendering of revalidated content when a video is playing, by intercepting the up:fragment:loaded event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:fragment:loaded', function(event) {\n  // Don't insert fresh content if the user has started a video\n  // after the expired content was rendered.\n  let video = event.request.fragment.querySelector('video')\n  \n  if (event.revalidating && video && !video.paused) {\n    // Finish the render pass with no changes.\n    event.skip()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Maximum Concurrent Requests in Unpoly\nDESCRIPTION: Shows how to configure the maximum number of concurrent requests in Unpoly using up.proxy.config.maxRequests. This can be useful for limiting requests, especially in testing environments.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_84\n\nLANGUAGE: javascript\nCODE:\n```\nup.proxy.config.maxRequests = 1;\n```\n\n----------------------------------------\n\nTITLE: Opening an Overlay with Invisible History in Unpoly\nDESCRIPTION: This code demonstrates how an overlay with invisible history (history:false) does not affect the browser's address bar. The browser URL remains unchanged even after opening an overlay.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/history-in-overlays.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nlocation.pathname // => \"/\"\nawait up.layer.open({ url: '/overlay', history: false }) // mark-phrase \"false\"\nlocation.pathname // => \"/\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Fallback Behavior with up-fallback\nDESCRIPTION: Controls fallback behavior when target selectors are missing. Can be set to true (use main target), false (reject promise), or a custom CSS selector as an alternative target.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/targeting.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\nup-fallback='true'\n```\n\n----------------------------------------\n\nTITLE: HTML Structure of Modal Overlays in Unpoly\nDESCRIPTION: Shows the HTML structure for modal overlays in Unpoly, including container, backdrop, viewport, box, content, and dismiss elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<up-modal size=\"medium\">                     <!-- container with attributes -->\n  <up-modal-backdrop></up-modal-backdrop>    <!-- semi-transparent background -->\n  <up-modal-viewport>                        <!-- scroll bar -->\n    <up-modal-box>                           <!-- white box with padding -->\n      <up-modal-content>...</div>            <!-- content parent (unstyled) -->\n      <up-modal-dismiss>×</up-modal-dismiss> <!-- dismiss icon -->\n    </up-modal-box>\n  </up-modal-viewport>\n</up-modal>\n```\n\n----------------------------------------\n\nTITLE: Updating CSRF Meta Tags in JavaScript\nDESCRIPTION: Code snippet showing how CSRF meta tags are automatically updated when found in server responses. This is part of the new passive updates functionality.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_77\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"csrf-param\">\n<meta name=\"csrf-token\">\n```\n\n----------------------------------------\n\nTITLE: JavaScript event handler for class-based approach\nDESCRIPTION: This JavaScript code registers an event handler that intercepts link follow events and adds callbacks programmatically, which works with strict CSP.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:link:follow', '.alert-on-loaded', (event) => {\n  event.renderOptions.onLoaded = () => alert()\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Form Error Reveal in HTML\nDESCRIPTION: Example of using the up-fail-reveal attribute on a form to specify which element should be revealed when the server responds with an error.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_78\n\nLANGUAGE: html\nCODE:\n```\n<form up-target=\".content\" up-fail-reveal=\".error\">\n  ...\n</form>\n```\n\n----------------------------------------\n\nTITLE: Configuring Navigation Selectors in JavaScript\nDESCRIPTION: Adds a custom selector to the list of navigation elements that will receive the .up-current class for styling.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\nup.status.config.navs.push('.my-nav-bar')\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request with X-Up-Target Header in Unpoly\nDESCRIPTION: Demonstrates how Unpoly sends a GET request to update a specific fragment, using the X-Up-Target header to specify the target selector.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/vary-header-example.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /sitemap HTTP/1.1\nX-Up-Target: .menu\n```\n\n----------------------------------------\n\nTITLE: Modifying Template Element with Callback in HTML using Unpoly\nDESCRIPTION: Shows how to use the up-on-rendered attribute to modify a template element after it has been cloned and inserted. This allows for programmatic customization of the rendered template.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<a\n  up-fragment=\"#task-template\"\n  up-on-rendered=\"result.fragment.innerText = 'Buy toast'\"\n>\n  Click me\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom History Restoration\nDESCRIPTION: Example of completely overriding Unpoly's history restoration behavior with custom implementation using preventDefault.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_19\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:location:restore', function(event) {\n  // Stop Unpoly from rendering anything\n  event.preventDefault()\n  \n  // We will render ourselves\n  document.body.innerText = `Restored content for ${event.location}!`\n})\n```\n\n----------------------------------------\n\nTITLE: Targeting an Element Object with JavaScript\nDESCRIPTION: JavaScript example demonstrating how to target a specific element by passing an Element object to up.reload, which derives the selector automatically.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nlet element = document.querySelector('#foo')\n\nup.reload(element) // Derives the target '#foo' from the given element\n```\n\n----------------------------------------\n\nTITLE: Substituting Content on Offline Events (JavaScript)\nDESCRIPTION: This example demonstrates how to substitute content when an offline event occurs in Unpoly 3, providing feedback to the user about the connection status.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_56\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:fragment:offline', function(event) {\n  up.render(event.renderOptions.target, { content: \"You are offline.\" })\n})\n```\n\n----------------------------------------\n\nTITLE: Enhanced Compiler Function with Metadata in Unpoly 3\nDESCRIPTION: Demonstrates the new compiler function signature that includes a third metadata parameter. This provides access to additional context about the current render pass, including response information and layer details.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.user', function(element, data, meta) {\n  console.log(meta.response.text.length)        // => 160232\n  console.log(meta.response.header('X-Course')) // => \"advanced-ruby\"\n  console.log(meta.layer.mode)                  // => \"root\"\n  console.log(meta.revalidating)                // => true\n})\n```\n\n----------------------------------------\n\nTITLE: Controlling Fragment Selection with match Option in Unpoly\nDESCRIPTION: The match option controls which fragment to update when multiple elements match the target selector. It accepts 'region' to prefer fragments near the origin element, or 'first' to always use the first match. Defaults to up.fragment.config.match.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/targeting.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n@param {string} [options.match='region']\n```\n\n----------------------------------------\n\nTITLE: Merged X-Up-Target HTTP Header Example\nDESCRIPTION: Example of the HTTP request header with merged targets that Unpoly sends when batching requests to the same URL.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nGET /path HTTP/1.1\nX-Up-Target: .foo, .bar\n```\n\n----------------------------------------\n\nTITLE: Return value of Unpoly event binding\nDESCRIPTION: The up.on method returns a function that can be called to remove the event listener.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.on/after-element.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nFunction()\n```\n\n----------------------------------------\n\nTITLE: Using aria-current for accessibility\nDESCRIPTION: Unpoly assigns an [aria-current] attribute to links marked as .up-current for accessibility purposes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/foo\" class=\"up-current\" aria-current=\"page\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Adding Transition Effect to up-follow with up-transition Attribute in HTML\nDESCRIPTION: Shows how to use the up-transition attribute to add an animated transition effect when following a link with up-follow. This example uses a cross-fade transition.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-transition=\"cross-fade\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Using Standard JSON in HTML Attributes with Unpoly\nDESCRIPTION: Example of using standard JSON syntax within the up-data attribute for an HTML span element representing a user.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/relaxed-json.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class='user' up-data='{ \"name\": \"Bob\", \"age\": 18 }'>Bob</span>\n```\n\n----------------------------------------\n\nTITLE: Displaying Unpoly Fragment Update Options in Markdown Table\nDESCRIPTION: This markdown table outlines various effects for updating fragments in Unpoly, showing both HTML attributes and corresponding JavaScript options. It includes methods for fetching URLs, updating HTML content, and working with larger HTML strings or response objects.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/providing-html-table.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Effect                                                                 | HTML attribute         | JavaScript option |\n|------------------------------------------------------------------------|------------------------|-------------------|\n| Fetch a URL and update targeted fragments                              | `[href]` or `[action]` | `{ url }`         | \n| Update a fragment's inner HTML from a string, `<template>` or `Element`                           | `[up-content]`         | `{ content }`     | \n| Update a fragment's outer HTML from a string, `<template>` or `Element` | `[up-fragment]`        | `{ fragment }`    | \n| Update targeted fragments from a larger HTML string                    | `[up-document]`        | `{ document }`    | \n| Update targeted fragments from an existing `up.Response` object        | –                      | `{ response }`    | \n\n@partial providing-html-table\n```\n\n----------------------------------------\n\nTITLE: Configuring Polling for Version Detection in HTML\nDESCRIPTION: This HTML snippet shows how to set up polling to detect new versions without user interaction. It uses Unpoly's up-poll attribute to reload an empty fragment every 2 minutes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-asset-changes.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"version-detector\" up-poll up-interval=\"120_000\" up-source=\"/version\"></div>\n```\n\n----------------------------------------\n\nTITLE: Deferred Content Loading HTML Example\nDESCRIPTION: Shows how to implement lazy loading of content using up-defer and up-href attributes\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"menu\" up-defer up-href=\"/menu\">\n  Loading...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Programmatic Rendering of Remote Content in Unpoly\nDESCRIPTION: JavaScript examples showing how to render remote content programmatically using up.render() and up.navigate() functions with URL and target options.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ url: '/path', target: '.target' })\n```\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({ url: '/path', target: '.target' })\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML from a Template Element in Unpoly\nDESCRIPTION: Demonstrates how to use a <template> element as the source of HTML for updating fragments by referencing it with up-document attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" up-target=\".target\" up-document=\"#my-template\">Click me</a>\n\n<div class=\"target\">\n  Old content\n</div>\n\n<template id=\"my-template\">\n  <div class=\"target\">\n    New content\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Derivation Patterns in Unpoly 3\nDESCRIPTION: Defines the default patterns used by Unpoly 3 for deriving target selectors from elements. These patterns are used when Unpoly needs to determine which fragment to update based on an element reference.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nup.fragment.config.targetDerivers = [\n  '[up-id]',        // [up-id=\"foo\"]\n  '[id]',           // #foo\n  'html',           // html\n  'head',           // head\n  'body',           // body\n  'main',           // main\n  '[up-main]',      // [up-main=\"root\"]\n  'link[rel]',      // link[rel=\"canonical\"]\n  'meta[property]', // meta[property=\"og:image\"]\n  '*[name]',        // input[name=\"email\"]\n  'form[action]',   // form[action=\"/users\"]\n  'a[href]',        // a[href=\"/users/\"]\n  '[class]',        // .foo (filtered by up.fragment.config.badTargetClasses)\n]\n```\n\n----------------------------------------\n\nTITLE: Customizing Overlay Dismiss Controls in Unpoly\nDESCRIPTION: Example of customizing overlay dismiss behavior using the up-dismissable attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/terms\" up-layer=\"new\" up-dismissable=\"button\">Show terms</a>\n```\n\n----------------------------------------\n\nTITLE: Setting Context Option for Unpoly Follow\nDESCRIPTION: Documents the experimental up-context parameter that allows passing JSON data to be merged into the layer context when rendering a fragment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/layer.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-context]\n  A [relaxed JSON](/relaxed-json) object that will be merged into the [context](/context)\n  of the current layer once the fragment is rendered.\n\n  @experimental\n```\n\n----------------------------------------\n\nTITLE: Using up-cache Attribute in Unpoly\nDESCRIPTION: Defines how Unpoly should use caching when following fragments. Options include 'true' to always use cache with revalidation, 'auto' to use cache based on request type (default for GET requests), and 'false' to always make network requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/caching.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nup-cache='auto'\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Location Path with Visible History in Unpoly Overlay\nDESCRIPTION: This code snippet demonstrates how an overlay with visible history changes the browser's address bar. It shows that opening an overlay with history:true will reflect its URL in the browser's address bar.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/history-in-overlays.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nlocation.pathname // => \"/\"\n\nawait up.layer.open({ url: '/overlay', history: true }) // mark-phrase \"true\"\nlocation.pathname // => \"/overlay\"\n```\n\n----------------------------------------\n\nTITLE: Using up-target Attribute in Unpoly\nDESCRIPTION: Specifies a target selector to update after a successful response. If omitted, a main target will be rendered instead.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/targeting.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nup-target=':main'\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Fragment Tracking\nDESCRIPTION: HTML markup example showing how to mark main content for page view tracking.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<main track-page-view>\n  ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Styling Custom Overlay Classes with CSS in Unpoly\nDESCRIPTION: Example of how to style a custom 'warning' modal by targeting the overlay box within a modal with a specific class.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_8\n\nLANGUAGE: css\nCODE:\n```\nup-modal.warning up-modal-box {\n  background-color: yellow\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Aligned Popups with CSS in Unpoly\nDESCRIPTION: Example of how to target and style specific popup alignments using CSS attribute selectors.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nup-popup[align=right] up-popup-box {\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Server Response Fragment HTML\nDESCRIPTION: Example of the server response containing the full menu content that replaces the placeholder. The up-defer attribute is removed to prevent infinite reloading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/defer-example.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"menu\">\n  Hundreds of links here\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Origin Element for Fragment Updates in Unpoly\nDESCRIPTION: The origin option specifies the element that triggered the change. When multiple elements match the target, Unpoly will prefer updating elements near the origin. The origin's selector can be referenced as :origin in target selectors.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/targeting.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n@param {Element|jQuery} [options.origin]\n```\n\n----------------------------------------\n\nTITLE: Using up-fragment Attribute to Embed HTML for Rendering\nDESCRIPTION: Demonstrates using the up-fragment attribute to embed HTML directly in a link that will be used to update the page when clicked.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href='#' up-fragment='<div class=\"target\">inner</div>'>Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Default Target Derivation Patterns Configuration in Unpoly\nDESCRIPTION: Shows the default configuration for up.fragment.config.targetDerivers with patterns arranged in decreasing priority. Each pattern produces different types of selectors as shown in the comments.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/target-derivation.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.fragment.config.targetDerivers = [\n  '[up-id]',         // [up-id=\"foo\"]\n  '[id]',            // #foo\n  'html',            // html\n  'head',            // head\n  'body',            // body\n  'main',            // main\n  '[up-main]',       // [up-main=\"root\"]\n  'link[rel]',       // link[rel=\"canonical\"]\n  'meta[property]',  // meta[property=\"og:title\"]\n  '*[name]',         // input[name=\"email\"]\n  'form[action]',    // form[action=\"/users\"]\n  'a[href]',         // a[href=\"/users/\"]\n  '[class]',         // .foo (filtered by up.fragment.config.badTargetClasses)\n  'form',            // form\n]\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache for Function Calls in Unpoly\nDESCRIPTION: JavaScript code demonstrating how to disable caching for a specific function call using the cache option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nup.follow(link, { cache: false })\n```\n\n----------------------------------------\n\nTITLE: Navigation Menu with First Link Active\nDESCRIPTION: Navigation menu state when /foo is the current URL. Unpoly automatically adds the 'up-current' class to the matching link.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/nav-example.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/foo\" class=\"up-current\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Disabling Revalidation for Function Calls in Unpoly\nDESCRIPTION: JavaScript code demonstrating how to disable revalidation for a specific function call while keeping caching enabled.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_11\n\nLANGUAGE: js\nCODE:\n```\nup.follow(link, { cache: true, revalidate: false })\n```\n\n----------------------------------------\n\nTITLE: Simple Template Engine Integration in JavaScript with Unpoly\nDESCRIPTION: Demonstrates a simple template engine integration using JavaScript string functions. This implementation handles basic variable replacements without additional dependencies.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:template:clone', '[type=\"text/minimustache\"]', function(event) {\n  let template = event.target.innerHTML\n  let evaluate = (_match, variable) => up.util.escapeHTML(event.data[variable])\n  let filled = template.replace(/{{(\\w+)}}/g, evaluate)\n  event.nodes = up.element.createNodesFromHTML(filled)\n})\n```\n\n----------------------------------------\n\nTITLE: Programmatic Control Disabling\nDESCRIPTION: Demonstrates how to disable specific form elements programmatically by passing an array of elements to the disable option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.submit(form, { disable: [button, field] })\n```\n\n----------------------------------------\n\nTITLE: HTML Implementation of Multiple Patterns\nDESCRIPTION: Shows how to use multiple URL patterns in HTML markup.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<!-- Closes layer when user visits either /account or anything underneath \"/users/\" -->\n<a href=\"/users/\" up-accept-location=\"/users/*, /account\" up-layer=\"new\">Users</a>\n```\n\n----------------------------------------\n\nTITLE: Basic Link Feedback Structure in HTML\nDESCRIPTION: Demonstrates the basic HTML structure for a link with feedback targeting a specific fragment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\"#target\">Link</a>\n\n<div id=\"target\">\n  Inital content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Conditional Rendering with Layer Context in ERB\nDESCRIPTION: Demonstrates how to conditionally render content based on the layer context in an ERB template.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_5\n\nLANGUAGE: erb\nCODE:\n```\n<% if up.context[:project] %>\n  Pick a contact for <%= up.context[:project] %>\n<% else %>\n  List of contacts\n<% end %>\n\n<% @contacts.each do |contact| %>\n  <li>...</li>\n<% end %>\n```\n\n----------------------------------------\n\nTITLE: Using up-content attribute in Unpoly\nDESCRIPTION: The up-content attribute allows setting an element's inner HTML content. It accepts either an HTML string or a template selector with optional variables for dynamic content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/local-content.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n[up-content]\n```\n\n----------------------------------------\n\nTITLE: Configuring Meta Tags for History Updates in HTML\nDESCRIPTION: HTML structure showing which meta tags in the head section will be automatically updated when history changes in Unpoly. Elements like title, canonical links, and meta descriptions are synchronized.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_30\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  <title>AcmeCorp</title> <!-- mark-line -->\n  <link rel=\"canonical\" href=\"https://example.com/dresses/green-dresses\"> <!-- mark-line -->\n  <meta name=\"description\" content=\"About the AcmeCorp team\"> <!-- mark-line -->\n  <meta prop=\"og:image\" content=\"https://app.com/og.jpg\"> <!-- mark-line -->\n  <script src=\"/assets/app.js\"></script>\n  <link rel=\"stylesheet\" href=\"/assets/app.css\">  \n</head>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Placeholders in HTML\nDESCRIPTION: Shows how to use the up-placeholder attribute to display a loading message while content is being fetched.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\"#target\" up-placeholder=\"<p>Loading…</p>\">Show story</a>\n\n<div id=\"#target\">\n  Old content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using up-fragment attribute in Unpoly\nDESCRIPTION: The up-fragment attribute specifies the outer HTML for a fragment, making the up-target attribute optional as the target will be derived from the root element in the HTML. It supports HTML strings or template selectors with variables.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/local-content.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n[up-fragment]\n```\n\n----------------------------------------\n\nTITLE: Implementing Distant Updates with Deferred Loading in HTML\nDESCRIPTION: This snippet demonstrates how to use up-target attribute to update multiple fragments when a placeholder is scrolled into view.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/articles/123/controls\" up-defer=\"reveal\" up-target=\"#editorial-controls, #analytics-controls\">\n  load controls\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Animation for Appending/Prepending Content in Unpoly\nDESCRIPTION: This option defines the name of an animation to reveal a new fragment when appending or prepending content. It should be used instead of the transition option when not swapping fragments.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/motion.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\noptions.animation\n```\n\n----------------------------------------\n\nTITLE: Active Link State with Feedback Classes\nDESCRIPTION: Shows how feedback classes are applied to links and target elements during loading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/bar\" up-target=\"#target\" class=\"up-active\">Bar</a>\n\n<div id=\"target\" class=\"up-loading\">\n  Initial content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Updating HTML Structure for Popups in Unpoly\nDESCRIPTION: The HTML markup for popups has been changed to improve CSS styling. The new structure includes a wrapper div with class 'up-popup' and an inner div with class 'up-popup-content'.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_71\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"up-popup\">\n  <div class=\"up-popup-content\">\n    Fragment content here\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: HTTP Request for Loading Next Page in Unpoly Infinite Scrolling\nDESCRIPTION: This HTTP request snippet demonstrates how Unpoly automatically requests the next page when the 'load next page' button enters the viewport. It includes custom headers for targeting specific elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/infinite-scrolling.md#2025-04-17_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /items?page=2 HTTP/1.1\nX-Up-Target: #next-page, #pages\n```\n\n----------------------------------------\n\nTITLE: Using up-placeholder Attribute for Loading State\nDESCRIPTION: Demonstrates how to show a placeholder with loading text while content is being loaded. The up-placeholder attribute contains the HTML to display during loading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-placeholder=\"<p>Loading…</p>\">Show story</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Modal History Behavior in Unpoly\nDESCRIPTION: Demonstrates how to configure whether modals change the browser URL in Unpoly using the up.modal.config.history option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_87\n\nLANGUAGE: javascript\nCODE:\n```\nup.modal.config.history = true; // Modals will change browser URL\n```\n\n----------------------------------------\n\nTITLE: Moving callback to JavaScript with class-based approach\nDESCRIPTION: This solution uses a class to identify elements and attaches behavior via JavaScript instead of HTML attributes, avoiding CSP restrictions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow class=\"alert-on-loaded\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring additional selectors for navigation components\nDESCRIPTION: Additional selectors can be configured to automatically match navigation components using up.status.config.navSelectors.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.status.config.navSelectors.push('.navbar')\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request with X-Up-Mode Header for Overlay Content\nDESCRIPTION: This example shows how Unpoly includes the layer mode and target selector in request headers when rendering content in an overlay. The server can use this to customize the response for different layer types.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nX-Up-Mode: drawer\nX-Up-Target: main\n```\n\n----------------------------------------\n\nTITLE: Using Placeholders in JavaScript with Unpoly\nDESCRIPTION: Demonstrates how to use the placeholder option in JavaScript when navigating with Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({\n  url: '/path',\n  target: '#target',\n  placeholder: '<p>Loading…</p>'\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Unpoly Configuration Properties\nDESCRIPTION: Demonstrates the updated syntax for configuring Unpoly modules by setting properties directly on the config object instead of using methods.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_91\n\nLANGUAGE: javascript\nCODE:\n```\nup.layout.config.snap = 100;\n```\n\n----------------------------------------\n\nTITLE: Defining up.Params Class API\nDESCRIPTION: API reference for the up.Params class showing available methods for parameter manipulation and conversion between different parameter representations.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\nup.Params = {\n  // Constructor\n  new: function() {},\n  \n  // Instance methods\n  add: function(name, value) {},\n  addAll: function(params) {},\n  addField: function(field) {},\n  delete: function(name) {},\n  get: function(name) {},\n  set: function(name, value) {},\n  toArray: function() {},\n  toFormData: function() {},\n  toObject: function() {},\n  toQuery: function() {},\n  toURL: function(baseUrl) {},\n  \n  // Static methods\n  fromFields: function(fields) {},\n  fromForm: function(form) {},\n  fromURL: function(url) {}\n}\n```\n\n----------------------------------------\n\nTITLE: Promise-based Overlay Handling in Unpoly\nDESCRIPTION: JavaScript example showing how to handle overlays as promises using async/await syntax.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_12\n\nLANGUAGE: js\nCODE:\n```\nlet user = await up.layer.ask({ url: '/users/new' })\nconsole.log('Got user:', user)\n```\n\nLANGUAGE: js\nCODE:\n```\ntry {\n  await up.layer.ask({ url: '/users/new' })\n} catch (reason) {\n  console.log('Overlay was dismissed:', reason)\n}\n```\n\n----------------------------------------\n\nTITLE: DOM Insertion Position Values\nDESCRIPTION: Reference values for specifying where to insert new DOM elements in relation to a reference element. These values determine whether new content is inserted before, after, or inside the reference element as children.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/adjacent-positions.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Value           | Insert position                                  |\n|-----------------|--------------------------------------------------|\n| \"beforebegin\"   | Insert before `reference`, as a new sibling.     |\n| \"afterbegin\"    | Prepend to `reference`, before its first child.  |\n| \"beforeend\"     | Append to `reference` , after its last child.    |\n| \"afterend\"      | Insert after `reference`, as a new sibling.      |\n```\n\n----------------------------------------\n\nTITLE: HTML meta tag for CSP nonce in initial page\nDESCRIPTION: This HTML snippet shows how to include the meta tag in the head section of the initial page to provide the CSP nonce to Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  <meta name=\"csp-nonce\" content=\"nonce-kO52Iphm8B\">\n  ...\n</head>\n```\n\n----------------------------------------\n\nTITLE: Setting Location-Based Close Conditions for Overlays\nDESCRIPTION: Demonstrates setting up a location-based close condition using up-accept-location. The overlay automatically closes when navigation reaches a URL matching the pattern, with captured segments available as values.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/companies/new\"\n  up-layer=\"new\"\n  up-accept-location=\"/companies/$id\"\n  up-on-accepted=\"alert('New company with ID ' + value.id)\">\n  New company\n</a>\n```\n\n----------------------------------------\n\nTITLE: Defining a Simple Preview in JavaScript\nDESCRIPTION: This snippet demonstrates how to define a simple preview named 'link-spinner' that inserts a spinner image into a link while it's loading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('link-spinner', function(preview) {\n  let link = preview.origin\n  preview.insert(link, '<img src=\"spinner.gif\">')\n})\n```\n\n----------------------------------------\n\nTITLE: Event Types Parameter Format Examples\nDESCRIPTION: Shows different formats for specifying event types when unbinding events. Includes space-separated string, comma-separated string, and array format examples.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.off/after-element.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n'foo bar'         // space-separated string\n'foo, bar'        // comma-separated string\n['foo', 'bar']     // array of types\n```\n\n----------------------------------------\n\nTITLE: Server Response for Unchanged Content\nDESCRIPTION: Demonstrates the server response when content hasn't changed, using a 304 Not Modified status.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 304 Not Modified\n```\n\n----------------------------------------\n\nTITLE: Binding Event Handlers with up.on and Retrieving the Function for Unbinding\nDESCRIPTION: Demonstrates the updated event handling in Unpoly where up.on() returns a function that can be called to unbind the event handler.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_89\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:fragment:inserted', function(event, $fragment) {\n   ...\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Elements from CSS Selectors in Unpoly\nDESCRIPTION: Function documentation for up.element.createFromSelector that creates DOM elements from CSS selectors. Accepts a selector string and optional attributes object for configuring text content, inner HTML, and CSS styles. Returns a new DOM Element instance.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.element.createFromSelector/all.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.element.createFromSelector(selector, {\n  text: \"Element text content\",\n  content: \"<span>Inner HTML content</span>\",\n  style: {\n    \"background-color\": \"#fff\",\n    \"font-size\": \"16px\"\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Defining navigational containers using HTML nav element\nDESCRIPTION: Standard <nav> elements are always considered navigational containers in Unpoly. Links within these containers are automatically marked as .up-current if they point to the current page.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Resolving Multiple Matches with up-match\nDESCRIPTION: Determines which fragment to update when multiple fragments match the target selector. Can be 'region' (prefer fragment in current region) or 'first' (always update first match).\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/targeting.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nup-match='region'\n```\n\n----------------------------------------\n\nTITLE: Configuring Client State Parameters in Unpoly\nDESCRIPTION: Configuration parameters for managing client state in Unpoly, including the up-use-data attribute for overriding fragment data properties and up-use-keep attribute for element preservation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/client-state.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"up-use-data\": \"<relaxed-json-object>\",\n  \"up-use-keep\": \"true\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Overlay Layer Management Options in Markdown\nDESCRIPTION: A Markdown table documenting the available options for managing overlay layers in Unpoly. The options include 'new' for stacking overlays, 'swap' for replacing the current overlay, and 'shatter' for closing all overlays before opening a new one.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/new-overlay-placement-table.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Option     | Description                                                            |\n| ---------- | ---------------------------------------------------------------------- |\n| `new`      | Stacks a new overlay over the current layer.                           |\n| `swap`     | Replaces the current overlay. If no overlay is open, opens an overlay. |\n| `shatter`  | Closes all overlays and opens a new overlay.                           |\n\n@partial new-overlay-placement-table\n```\n\n----------------------------------------\n\nTITLE: Problematic Script Placement in HTML Body\nDESCRIPTION: Example of a script tag located at the end of the body, which will re-execute every time the body is updated through Unpoly. This can cause performance issues and duplicate script execution.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/legacy-scripts.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <body>\n    <p>Content here</p>\n    <script src=\"app.js\"></script> <!-- will run every time `body` is updated -->\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Disabling Progress Bar Globally\nDESCRIPTION: Demonstrates how to disable the default progress bar functionality across the entire application.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/progress-bar.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.network.config.progressBar = false\n```\n\n----------------------------------------\n\nTITLE: Aborting All Requests in Unpoly\nDESCRIPTION: Pass { abort: 'all' } to abort all requests targeting any fragment on any layer.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/aborting-requests.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{ abort: 'all' }\n```\n\n----------------------------------------\n\nTITLE: Setting Callbacks for Overlay Close Events in HTML\nDESCRIPTION: Demonstrates using up-on-accepted and up-on-dismissed HTML attributes to run code when an overlay is accepted or dismissed. These attributes allow handling different closure intents directly in markup.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n<a href=\"/select-user\"\n  up-layer=\"new\"\n  up-on-accepted=\"console.log('User was created')\"\n  up-on-dismissed=\"console.log('User creation was canceled')\">\n  ...\n</a>\n```\n\n----------------------------------------\n\nTITLE: Accessing Form Element in Form Events (Old Approach)\nDESCRIPTION: Previous way of accessing the form element in Unpoly form events by traversing up the DOM from the event target.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_16\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:form:submit', function(event) {\n  let form = event.target.closest('form')\n  console.log(\"form is\", form)\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Dynamic Template for Placeholders\nDESCRIPTION: Shows how to create a template that can be customized with variables for flexible placeholder content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script id=\"loading-template\" type=\"text/minumustache\">\n  <p class=\"{{ size }}\">\n    {{ message }}\n  </p>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using up.viewport.config.autoFocusVisible in JavaScript\nDESCRIPTION: You can set up.viewport.config.autoFocusVisible to a function that decides if an element should get a .up-focus-visible or .up-focus-hidden class.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nup.viewport.config.autoFocusVisible = (element) => {\n  // Logic to determine focus visibility\n  return true; // or false\n};\n```\n\n----------------------------------------\n\nTITLE: Opting out of .up-current assignment\nDESCRIPTION: Matching containers can opt out of .up-current assignment by setting an [up-nav=false] attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav up-nav=\"false\">\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Opening Overlay via JavaScript Navigation\nDESCRIPTION: Shows how to programmatically open an overlay using up.navigate() method.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({ url: '/users/new', layer: 'new' })\n```\n\n----------------------------------------\n\nTITLE: Fallback to Main Target with JavaScript\nDESCRIPTION: JavaScript example showing how to fall back to the main target when the primary target can't be matched, useful for displaying error messages.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ url: '/path', target: '.content', fallback: true })\n```\n\n----------------------------------------\n\nTITLE: Implementing Placeholders for New Overlays in HTML\nDESCRIPTION: Shows how to use placeholders with links that open new overlays, providing a seamless loading experience.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-layer=\"new\" up-placeholder=\"<p>Loading…</p>\">Open overlay</a>\n```\n\n----------------------------------------\n\nTITLE: Initial Menu Fragment HTML\nDESCRIPTION: Example of a heavy menu structure that could benefit from deferred loading.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/defer-example.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"menu\">\n  Hundreds of links here\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Focus Visibility with JavaScript API\nDESCRIPTION: Example of using the focusVisible option when navigating with JavaScript to override the default focus visibility strategy for a single interaction.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/focus-visibility.md#2025-04-17_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nup.navigate{\n  url: '/path',\n  focus: ':main', \n  focusVisible: false\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Request with If-None-Match\nDESCRIPTION: Example of conditional HTTP request using If-None-Match header and its response\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET /messages HTTP/1.1\nIf-None-Match: \"x234dff\"\n```\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 304 Not Modified\n```\n\n----------------------------------------\n\nTITLE: Adding Keyboard Focus with HTML tabindex\nDESCRIPTION: Example of making an element focusable using the tabindex attribute, allowing keyboard navigation via the Tab key.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/focus-ring-show-example.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"my-button\" tabindex=\"0\">\n  ...\n</span>\n```\n\n----------------------------------------\n\nTITLE: Selective Control Disabling with CSS Selector\nDESCRIPTION: Example of disabling specific form controls by using a CSS selector with the up-disable attribute to target only button elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form up-submit up-disable=\"button\" action=\"/session\">\n  <input type=\"text\" name=\"email\">\n  <input type=\"password\" name=\"password\">\n  <button type=\"submit\">Sign in</button>\n  <button type=\"reset\">Clear form</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Styling Focus Ring for Keyboard Users\nDESCRIPTION: CSS implementation for showing focus ring only when using keyboard navigation. Uses focus-visible pseudo-class and custom classes to handle focus visibility.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/focus-ring-show-example.md#2025-04-17_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.my-button {\n  &:focus-visible:not(.up-focus-hidden),\n  &.up-focus-visible {\n    outline: 1px solid royalblue;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Animation Easing in Unpoly\nDESCRIPTION: Demonstrates how to modify the default easing function for animations in Unpoly using the global configuration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/motion-tuning.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.config.easing\n```\n\n----------------------------------------\n\nTITLE: Opening Overlay with Local Content\nDESCRIPTION: Demonstrates opening an overlay using local HTML content via the up-content attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a up-layer=\"new popup\" up-content=\"<p>Helpful instructions here</p>\">\n  Help\n</a>\n```\n\n----------------------------------------\n\nTITLE: Disabling Single-Page Navigation with up-follow=false Attribute in HTML\nDESCRIPTION: Shows how to make an exception to the default single-page navigation behavior by setting the up-follow attribute to false, causing a full page load instead.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow=\"false\">Click for full page load</a>\n```\n\n----------------------------------------\n\nTITLE: Disabling Revalidation for Navigation in Unpoly\nDESCRIPTION: JavaScript code to disable cache revalidation globally for navigation actions by modifying the fragment configuration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nup.fragment.config.navigateOptions.revalidate = false\n```\n\n----------------------------------------\n\nTITLE: Defining up-save-focus Parameter in Unpoly\nDESCRIPTION: Documents the up-save-focus attribute which controls whether focus-related state is saved before updating a fragment. This allows the focus position to be restored later using the [up-focus=restore] parameter.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/focus.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-save-focus='true']\n  Whether to [save focus-related state](/up.viewport.saveFocus) before updating the fragment.\n\n  Saved scroll positions can later be restored with [`[up-focus=restore]`](/focus#restoring-focus).\n```\n\n----------------------------------------\n\nTITLE: Enabling Universal Link Preloading in Unpoly\nDESCRIPTION: Configures Unpoly to preload all links on hover without requiring up-preload attribute. Exceptions include links with up-preload=false, non-followable links, and uncacheable destinations.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-everything.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.link.config.preloadSelectors.push('a[href]')\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Form Structure\nDESCRIPTION: Example of a basic registration form HTML structure with email and password fields.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/validation.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/users\">\n\n  <fieldset>\n    <label for=\"email\">E-mail</label>\n    <input type=\"text\" id=\"email\" name=\"email\">\n  </fieldset>\n\n  <fieldset>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" id=\"password\" name=\"password\">\n  </fieldset>\n\n  <button type=\"submit\">Register</button>\n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Setting Failed Response Target with up-fail-target Attribute\nDESCRIPTION: HTML attribute for specifying which DOM element should be updated when a server request fails. Defaults to ':main' if not specified. Used for rendering failed responses in specific page sections.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/failed-responses.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n[up-fail-target=':main']\n```\n\n----------------------------------------\n\nTITLE: Hiding Focus Rings in Unpoly\nDESCRIPTION: CSS rules to selectively hide focus outlines for mouse and touch interactions while maintaining accessibility. Uses the :focus-visible pseudo-class and Unpoly's custom .up-focus-visible and .up-focus-hidden classes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/focus-ring-hide-example.md#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:focus:not(:focus-visible, .up-focus-visible),\n.up-focus-hidden {\n  outline: none !important;\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Animations Globally in Unpoly\nDESCRIPTION: Shows how to force-enable animations for all users regardless of their system preferences.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/motion-tuning.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.config.enabled = true\n```\n\n----------------------------------------\n\nTITLE: Using up-alias with URL pattern\nDESCRIPTION: A URL pattern can be used with up-alias to match multiple URLs.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/users\" up-alias=\"/users/*\">Users</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Disabling Meta Tag Updates in JavaScript\nDESCRIPTION: Example of how to disable the synchronization of meta tags during a render pass by setting the metaTags option to false when calling up.render(). This allows fine-grained control over meta tag behavior.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nup.render('.element', { url: '/path', history: true, metaTags: false }) // mark-phrase \"metaTags\"\n```\n\n----------------------------------------\n\nTITLE: Providing a Fallback Target with JavaScript\nDESCRIPTION: JavaScript example showing how to provide a fallback target that will be used if the primary target cannot be matched in either page or response.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nup.render({ url: '/path', target: '.content', fallback: 'body' })\n```\n\n----------------------------------------\n\nTITLE: JavaScript Implementation of Exact URL Pattern\nDESCRIPTION: Demonstrates exact URL pattern matching in JavaScript to control overlay behavior.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/* Closes the new overlay when user visits \"/users/new\" */\nup.layer.open({ acceptLocation: \"/users/new\" })\n```\n\n----------------------------------------\n\nTITLE: JavaScript Implementation of Named Segment Capture\nDESCRIPTION: Shows how to capture and use named URL segments in JavaScript using async/await.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nvar { name } = await up.layer.ask({ acceptLocation: '/users/:name' });\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Eviction in Unpoly 3 (JavaScript)\nDESCRIPTION: This snippet shows how to configure Unpoly 3 to evict the entire cache after a request with an unsafe HTTP method, restoring Unpoly 2's behavior.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\nup.network.config.evictCache = (request) => !request.isSafe()\n```\n\n----------------------------------------\n\nTITLE: Cache Revalidation Configuration in JavaScript\nDESCRIPTION: Example of configuring cache revalidation options when rendering cached content without navigation in Unpoly 3.1.0.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n{ cache: 'auto', revalidate: 'auto' }\n```\n\n----------------------------------------\n\nTITLE: Querying Elements with up.first()\nDESCRIPTION: Example showing how to use up.first() with the origin option to find a parent element containing a reference element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_82\n\nLANGUAGE: javascript\nCODE:\n```\n$input = $('input.email');\nup.first('.field:has(&)', $input); // returns the .field containing $input\n```\n\n----------------------------------------\n\nTITLE: Deriving Target Selector for Polling\nDESCRIPTION: Illustrates how Unpoly derives the target selector from the polling element's ID.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"score\" up-poll>\n  Score: 1400\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling current links with CSS\nDESCRIPTION: Custom CSS can be used to style .up-current links as Unpoly applies no default styling.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n.up-current {\n  font-weight: bold;\n  background-color: yellow;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Previews with Options in HTML for Unpoly\nDESCRIPTION: This HTML snippet demonstrates how to use multiple previews with options in Unpoly by appending option objects to each preview name in the up-preview attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/edit\"\n   up-follow\n   up-preview=\"spinner { size: 20 }, form-placeholder { animation: 'pulse' }\">\n  Edit page\n</a>\n```\n\n----------------------------------------\n\nTITLE: Dismissing an Overlay and Restoring Browser History in Unpoly\nDESCRIPTION: This code shows how dismissing an overlay with visible history restores the root layer's URL in the browser's address bar. When the overlay is closed, the browser URL reverts to the root layer's location.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/history-in-overlays.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nawait up.layer.dismiss()\nlocation.pathname // => \"/\"\n```\n\n----------------------------------------\n\nTITLE: Link without href Attribute for Local Updates\nDESCRIPTION: Shows how to omit the href attribute when updating fragments from a string or template, with Unpoly ensuring the link is still focusable and keyboard-accessible.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a up-target=\".target\" up-content=\"New content\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Custom Loading Indicator Implementation\nDESCRIPTION: Shows HTML markup for a custom loading indicator element that can replace the default progress bar.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/progress-bar.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<loading-indicator>Please wait!</loading-indicator>\n```\n\n----------------------------------------\n\nTITLE: Disabling Animations Globally in Unpoly\nDESCRIPTION: Demonstrates how to disable animations for all users, which can be useful for minimizing concurrency in automated integration tests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/motion-tuning.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.config.enabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Peel Option for Unpoly Follow\nDESCRIPTION: Defines the up-peel parameter that controls whether overlays obstructing the target layer should be closed when a fragment is updated.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/layer.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-peel='true']\n  Whether to close overlays obstructing the updated layer when the fragment is updated.\n\n  This is only relevant when updating a layer that is not the [frontmost layer](/up.layer.front).\n```\n\n----------------------------------------\n\nTITLE: Handling Discarded Response in Unpoly Overlay\nDESCRIPTION: Example of accessing and rendering discarded response content when an overlay closes after successful form submission.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/companies/new\"\n   up-layer=\"new\"\n   up-accept-location=\"/companies\"\n   up-on-accepted=\"up.render('.companies', { response: event.response })\">\n  New company\n</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Popup History Behavior in Unpoly\nDESCRIPTION: Shows how to configure whether popups change the browser URL in Unpoly using the up.popup.config.history option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_88\n\nLANGUAGE: javascript\nCODE:\n```\nup.popup.config.history = false; // Popups will not change browser URL\n```\n\n----------------------------------------\n\nTITLE: Basic Target Derivation Example in JavaScript\nDESCRIPTION: Demonstrates how Unpoly automatically derives a CSS selector from a DOM element when reloading it.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/target-derivation.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nlet element = document.querySelector('#foo')\nup.reload(element) // Derives the target '#foo' from the given element\n```\n\n----------------------------------------\n\nTITLE: Basic Error Handling in Unpoly Compiler\nDESCRIPTION: Demonstrates how Unpoly handles errors in user-provided functions like compilers without interrupting execution. Shows that errors are emitted as window events rather than thrown exceptions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.element', () => { throw new Error('broken compiler') })\nlet element = up.element.affix(document.body, '.element')\nup.hello(element) // no error is thrown\n```\n\n----------------------------------------\n\nTITLE: Form Feedback Structure\nDESCRIPTION: HTML structure for a form with feedback classes targeting a specific fragment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/action\" up-target=\"#target\">\n  <input type=\"text\" name=\"email\">\n  <button type=\"submit\">Submit</button>\n</form>\n\n<div id=\"target\">\n  Initial content\n</div>\n```\n\n----------------------------------------\n\nTITLE: Placing Flashes Inside Main Element in Unpoly Layout\nDESCRIPTION: HTML markup demonstrating how to place the up-flashes container inside the main element for styling reasons, which will cause flashes from overlays to be rendered in the overlay preferably.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/flashes.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  Navigation items ...\n</nav>\n<main>\n  <div up-flashes></div> <!-- mark-line -->\n  \n  Main page content ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Accessing Dismissal Reasons in HTML\nDESCRIPTION: Shows how to access dismissal reasons using the up-on-dismissed attribute. The value variable contains information about why the overlay was dismissed (e.g., ':button', ':key', ':outside').\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/select-user\"\n  up-layer=\"new\"\n  up-on-dismissed=\"console.log('Dismissal reason is', value)\">\n  ...\n</a>\n```\n\n----------------------------------------\n\nTITLE: Using up-alias for highlighting links for multiple URLs\nDESCRIPTION: The [up-alias] attribute can be set to highlight a link for multiple URLs. This example shows a link that will be highlighted at both /users and /users/new locations.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/users\" up-alias=\"/users/new\">Users</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Disabling Caching Globally for Navigation in Unpoly\nDESCRIPTION: JavaScript code to disable caching globally for navigation actions by modifying the fragment configuration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.fragment.config.navigateOptions.cache = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Modal Size with CSS in Unpoly\nDESCRIPTION: Example of how to customize the width of a medium-sized modal by targeting the up-modal-box element within a modal with size attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_5\n\nLANGUAGE: css\nCODE:\n```\nup-modal[size=medium] up-modal-box {\n  width: 500px;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining up-focus-visible Parameter in Unpoly\nDESCRIPTION: Documents the up-focus-visible attribute which determines whether the focused element should display a visible focus ring. By default, the visibility depends on the viewport configuration and current input device.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/focus.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-focus-visible='auto']\n  Whether the focused element should have a [visible focus ring](/focus-visibility).\n  \n  By default focus will be visible if `up.viewport.config.autoFocusVisible()`\n  returns `true` for the focused element and [current input device](/up.event.inputDevice).\n```\n\n----------------------------------------\n\nTITLE: HTML for Positioning Popups in Unpoly\nDESCRIPTION: Example of how to control the position of a popup relative to its origin by using up-position and up-align attributes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/help\" up-layer=\"new popup\" up-position=\"top\" up-align=\"right\">Show help</a>\n```\n\n----------------------------------------\n\nTITLE: Opening Drawer Mode Overlay\nDESCRIPTION: Demonstrates opening an overlay in drawer mode using the up-mode attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/opening-overlays.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/users/new/\" up-layer=\"new\" up-mode=\"drawer\">\n```\n\n----------------------------------------\n\nTITLE: Unpoly Polling Request with If-None-Match Header\nDESCRIPTION: Shows how Unpoly includes the If-None-Match header in polling requests to echo the ETag.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /messages HTTP/1.1\nIf-None-Match: \"x234dff\"\n```\n\n----------------------------------------\n\nTITLE: Using Boolean Attributes with Unpoly in HTML\nDESCRIPTION: Demonstrates different ways to use boolean attributes in Unpoly, including setting them to 'true', 'false', or leaving them empty. All three examples shown are equivalent ways to enable the up-follow attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow>Click for single-page navigation</a>\n<a href=\"/path\" up-follow=\"\">Click for single-page navigation</a>\n<a href=\"/path\" up-follow=\"true\">Click for single-page navigation</a>\n```\n\n----------------------------------------\n\nTITLE: Using role=navigation for accessibility with up-nav\nDESCRIPTION: When using a non-<nav> element with [up-nav], it's recommended to also set a [role=navigation] attribute for accessibility.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div up-nav role=\"navigation\">\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Preventing Request Abortion in Unpoly\nDESCRIPTION: Pass { abortable: false } to protect a request from being aborted through { abort }.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/aborting-requests.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{ abortable: false }\n```\n\n----------------------------------------\n\nTITLE: Customizing History Restoration Behavior\nDESCRIPTION: Example of customizing how Unpoly handles history restoration by modifying the renderOptions in the up:location:restore event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_18\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:location:restore', function(event) {\n  // Update a different fragment when restoring /special-path  \n  if (event.location === '/special-path') {\n    event.renderOptions.target = '#other'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: HTML Structure with Custom Dimensions\nDESCRIPTION: HTML markup example showing how to include custom tracking dimensions using up-data attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<main track-page-view up-data=\"{ course: 'ruby-basics', page: 1 }\">\n  ...\n</main>\n```\n\n----------------------------------------\n\nTITLE: Preventing Link Preloading Based on Connection Speed in Unpoly with JavaScript\nDESCRIPTION: Event handler that prevents preloading on slow connections by listening for the 'up:link:preload' event and checking the connection speed using the NetworkInformation API.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nfunction isSlowConnection() {\n  // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation\n  return navigator.connection && navigator.connection.effectiveType.include('2g')  \n}\n\nup.on('up:link:preload', function(event) {\n  if (isSlowConnection()) {\n    event.preventDefault()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Eviction in Unpoly Rendering\nDESCRIPTION: This snippet describes the 'evictCache' option for Unpoly rendering. It determines whether existing cache entries will be evicted with this request, accepting boolean or string values.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/caching.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\noptions.evictCache\n```\n\n----------------------------------------\n\nTITLE: Normalizing Custom Events in JavaScript\nDESCRIPTION: Code that configures Unpoly to recognize non-standard events as 'change' events. This allows custom components that emit special events to work with Unpoly's watching functionality.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nup.form.config.watchChangeEvents = ['change', 'myselect:chosen']\n```\n\n----------------------------------------\n\nTITLE: Using the Ampersand Selector to Reference Current Element in Target Selectors\nDESCRIPTION: Shows how to use the & symbol to reference the current element in CSS selectors for targeting elements that contain the triggering element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_90\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\".container:has(&)\">\n```\n\n----------------------------------------\n\nTITLE: Assigning up-nav to individual links\nDESCRIPTION: The [up-nav] attribute can be assigned to individual links instead of a navigational container.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/foo\" up-nav>Foo</a>\n```\n\n----------------------------------------\n\nTITLE: Overriding Form-Level Options at Input Level\nDESCRIPTION: Example of how to override form-level watch options for specific input fields. This allows for customized behavior on individual fields while maintaining defaults for others.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/watch-options.md#2025-04-17_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/search\" up-watch-disable>\n  <input name=\"department\" up-autosubmit>\n  <input name=\"query\" up-autosubmit up-watch-disable=\"false\">\n</form>\n```\n\n----------------------------------------\n\nTITLE: Infinite Scrolling Implementation HTML\nDESCRIPTION: Shows structure for implementing infinite scrolling using up-defer and up-target attributes\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"pages\">\n  <div class=\"page\">items for page 1</div>\n</div>\n\n<a id=\"next-page\" href=\"/items?page=2\" up-defer=\"reveal\" up-target=\"#next-page, #pages:after\">\n  load next page\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling Progress Bar with CSS\nDESCRIPTION: Shows how to customize the appearance of the Unpoly progress bar using CSS selectors.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/progress-bar.md#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nup-progress-bar {\n  background-color: red;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Expiration and Auto-Revalidation in Unpoly\nDESCRIPTION: JavaScript code to set cache expiration time to 20 seconds and configure when auto-revalidation should occur based on response expiration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nup.network.config.cacheExpireAge = 20_000 // expire after 20 seconds\nup.fragment.config.autoRevalidate = (response) => response.expired\n```\n\n----------------------------------------\n\nTITLE: Setting Document Title in Unpoly Render Function\nDESCRIPTION: Specifies an explicit document title to set before rendering. By default, it's extracted from the response's <title> tag. Setting it to false prevents title updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/history.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\noptions.title = 'New Title' | false\n```\n\n----------------------------------------\n\nTITLE: HTML for Positioning Drawers in Unpoly\nDESCRIPTION: Shows how to open a drawer on the right edge of the screen by setting an up-position attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/settings\" up-layer=\"new drawer\" up-position=\"right\">Settings</a>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure of Popup Overlays in Unpoly\nDESCRIPTION: Shows the simpler HTML structure for popup overlays in Unpoly which don't have backdrop, scroll bar, or dismiss icon components.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<up-popup size=\"medium\" position=\"bottom\" align=\"left\">\n  <up-popup-box>\n    <up-popup-content>...</div>\n  </up-popup-box>\n</up-popup>\n```\n\n----------------------------------------\n\nTITLE: Basic Event Emission HTML Example\nDESCRIPTION: Demonstrates how to use up-emit attribute for event emission on click interactions\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<button up-emit>...</button>\n```\n\n----------------------------------------\n\nTITLE: Wildcard Pattern Examples\nDESCRIPTION: Various examples of URL patterns using wildcards (*) to match multiple URLs.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n/users/*\n```\n\nLANGUAGE: text\nCODE:\n```\n*/new\n```\n\nLANGUAGE: text\nCODE:\n```\n/users/*/edit\n```\n\nLANGUAGE: text\nCODE:\n```\n/users/?*\n```\n\n----------------------------------------\n\nTITLE: Shorthand Template Rendering in HTML with Unpoly\nDESCRIPTION: Shows a shortened version of template rendering using the up-fragment attribute, which derives the target from the template's root element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a up-fragment=\"#my-template\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Initial Navigation Menu Structure\nDESCRIPTION: Basic HTML navigation structure with two links before any state changes occur. The nav element is marked with 'up-nav' to enable Unpoly's navigation features.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/nav-example.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Setting Unpoly Attributes in Ruby\nDESCRIPTION: Demonstrates how to set Unpoly attributes when generating HTML from Ruby, using the link_to helper and passing a true literal as the attribute value.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_10\n\nLANGUAGE: ruby\nCODE:\n```\nlink_to 'Click me', '/path', 'up-follow': true\n```\n\n----------------------------------------\n\nTITLE: Updated Modal HTML Structure in Unpoly\nDESCRIPTION: The HTML structure for modals was changed to include a separate backdrop element, allowing for more flexible animations where the backdrop and dialog can be animated independently.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_83\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"up-modal\">\n<div class=\"up-modal-backdrop\">\n<div class=\"up-modal-viewport\">\n  <div class=\"up-modal-dialog\">\n    <div class=\"up-modal-content\">\n      ...\n    </div>\n    <div class=\"up-modal-close\" up-close>X</div>\n  </div>\n</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Overlay Classes in Unpoly\nDESCRIPTION: Shows how to create a variant of an existing overlay mode by passing an up-class attribute when opening an overlay.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/confirm-erase\"\n   up-method=\"delete\"\n   up-layer=\"new\"\n   up-class=\"warning\">\n  Erase disk\n</a>\n```\n\n----------------------------------------\n\nTITLE: Disabling Controls within Container\nDESCRIPTION: Shows how to disable form controls within a specific container by targeting a CSS class with up-disable.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form up-submit up-disable=\".actions\" action=\"/session\">\n  <input type=\"text\" name=\"email\">\n  <input type=\"password\" name=\"password\">\n  <div class=\"actions\">\n    <button type=\"submit\">Sign in</button>\n    <button type=\"reset\">Clear form</button>\n  </div>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Using Boolean Attributes with Unpoly in HTML\nDESCRIPTION: HTML examples showing how to enable or disable Unpoly features using boolean attributes with values 'true', 'false', or empty values.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow=\"true\">Click for single-page navigation</a>\n<a href=\"/path\" up-follow=\"false\">Click for full page load</a>\n```\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow>Click for single-page navigation</a>\n<a href=\"/path\" up-follow=\"\">Click for single-page navigation</a>\n<a href=\"/path\" up-follow=\"true\">Click for single-page navigation</a>\n```\n\n----------------------------------------\n\nTITLE: Targeting the Main Element\nDESCRIPTION: HTML example showing implicit targeting of the main element when no specific target is provided, which updates the primary content area.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/cards/5\" up-follow>Load post</a>\n\n<main>\n  Post will appear heare\n</main>\n```\n\n----------------------------------------\n\nTITLE: Implementing Template-based Placeholders in HTML\nDESCRIPTION: Shows how to use a template for placeholders, allowing for reusable and more complex placeholder structures.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/placeholders.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-target=\"#target\" up-placeholder=\"#loading-template\">Show story</a>\n\n<div id=\"#target\">\n  Old content\n</div>\n\n<template id=\"loading-template\">\n  <p>\n    Loading…\n  </p>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using a Preview in HTML\nDESCRIPTION: This HTML snippet shows how to use the 'link-spinner' preview in a link by setting the up-preview attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/edit\" up-follow up-preview=\"link-spinner\">Edit page</a>\n```\n\n----------------------------------------\n\nTITLE: Using Boolean Variables with Unpoly Attributes in ERB\nDESCRIPTION: Shows how to use a boolean variable from a server-side templating language (in this case, ERB) to set the value of an Unpoly attribute dynamically.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/attributes-and-options.md#2025-04-17_snippet_9\n\nLANGUAGE: erb\nCODE:\n```\n<a href=\"/path\" up-follow=\"<%= is_signed_in %>\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Accessing Layer Locations with Invisible History in Unpoly\nDESCRIPTION: This snippet shows how to access location information for layers when using invisible history. It demonstrates that layers still track their locations even when not showing them in the browser address bar.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/history-in-overlays.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.current.location // => \"/\"\nup.layer.root.location    // => \"/\"\nlocation.pathname         // => \"/\"\n```\n\n----------------------------------------\n\nTITLE: HTML Implementation of Wildcard Pattern\nDESCRIPTION: Shows how to use wildcard URL pattern matching in HTML markup.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!-- Closes the new overlay when user visits anything underneath \"/users/\" -->\n<a href=\"/users/\" up-accept-location=\"/users/*\" up-layer=\"new\">Users</a>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure of an Overlay with Custom Class\nDESCRIPTION: Shows how a custom class is applied to the overlay's container element for styling purposes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<up-modal class=\"warning\">\n...\n</up-modal>\n```\n\n----------------------------------------\n\nTITLE: Setting Animation Duration in Unpoly\nDESCRIPTION: Shows how to change the default animation duration in Unpoly by modifying the global configuration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/motion-tuning.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.config.duration\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML String Fragment in Unpoly JavaScript\nDESCRIPTION: Shows how to render a string of HTML using the fragment option in up.render(), where the target is derived from the class of the root element in the provided HTML.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// This will update .foo\nup.render({ fragment: '<div class=\".target\">inner</div>' })\n```\n\n----------------------------------------\n\nTITLE: Event Handler with Native Element in Unpoly\nDESCRIPTION: Demonstrates how event handlers now receive native DOM elements instead of jQuery collections.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_64\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('click', (event, element) => {\n  alert(\"Clicked on an \" + element.tagName)\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Polling Interval with Unpoly\nDESCRIPTION: Shows how to set a custom polling interval using the up-interval attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/polling.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"unread-count\" up-poll up-interval=\"10000\">\n  2 new messages\n</div>\n```\n\n----------------------------------------\n\nTITLE: Specifying Duration for Transitions/Animations in Unpoly\nDESCRIPTION: This option sets the duration of the transition or animation in milliseconds. It applies to both transitions and animations used in fragment updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/motion.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\noptions.duration\n```\n\n----------------------------------------\n\nTITLE: JavaScript Link Following with Feedback\nDESCRIPTION: Example of programmatically following a link with feedback using up.follow().\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.follow(link)\n```\n\n----------------------------------------\n\nTITLE: Using Template References with up-placeholder\nDESCRIPTION: Shows how to reference a template element for placeholders instead of embedding HTML directly in the attribute. This improves maintainability for complex placeholder content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-placeholder=\"#loading-template\">Show story</a>\n\n<template id=\"loading-template\">\n  <p>\n    Loading…\n  </p>\n</template>\n```\n\n----------------------------------------\n\nTITLE: HTML Element Update in Overlays\nDESCRIPTION: Example showing the HTML structure change for modal elements between Unpoly versions. Modal div elements are replaced with semantic up-modal elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_61\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"modal\">\n```\n\nLANGUAGE: html\nCODE:\n```\n<up-modal>\n```\n\n----------------------------------------\n\nTITLE: Using Relaxed JSON with up-data Attribute\nDESCRIPTION: Demonstrates the new relaxed JSON syntax in Unpoly, which allows unquoted property names and single-quoted strings in attributes like up-data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"user\" up-data=\"{ name: 'Bob', age: 18 }\">Bob</span>\n```\n\n----------------------------------------\n\nTITLE: Simple URL Link after Preloading in Unpoly with HTML\nDESCRIPTION: Basic link that will use the cached response if the URL was previously preloaded, demonstrating how preloaded content is automatically used.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/preloading.md#2025-04-17_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/menu\">Menu</a>\n```\n\n----------------------------------------\n\nTITLE: Multiple Pattern Alternatives Example\nDESCRIPTION: Shows how to match multiple URL patterns using comma or space separation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n/users/*, /account\n```\n\n----------------------------------------\n\nTITLE: Link with Optional Target in HTML\nDESCRIPTION: Example of using the new optional target syntax in Unpoly 3.0.0, where some targeted fragments are marked as optional.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_44\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/cards/5\" up-target=\".content, .details:maybe\">...</a>\n```\n\n----------------------------------------\n\nTITLE: Accessing Overlay Acceptance Values in JavaScript\nDESCRIPTION: Shows how to access the acceptance value through the event.value property in an onAccepted callback. This allows retrieving data selected or created in an overlay.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nup.layer.open({\n  url: '/select-user',\n  onAccepted: (event) => console.log('Got user', event.value)\n})\n```\n\n----------------------------------------\n\nTITLE: Using up.focus() with focusVisible option in JavaScript\nDESCRIPTION: The up.focus() function accepts a new { focusVisible } option to control whether .up-focus-hidden or .up-focus-visible is set on a focused element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nup.focus(element, { focusVisible: true });\n```\n\n----------------------------------------\n\nTITLE: Configuring Hungry Mode for Fragment Updates in Unpoly\nDESCRIPTION: The hungry option controls whether [up-hungry] elements outside the updated fragment will also be updated. This feature is marked as experimental in the framework.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/targeting.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n@param {boolean} [options.hungry=true]\n```\n\n----------------------------------------\n\nTITLE: Configuring Meta Tags Update in Unpoly Render Function\nDESCRIPTION: Controls the updating of meta tags in the <head>. By default, it extracts meta tags from the response's <head>. It can be set to false to prevent meta tag updates, or an array of Element objects for custom meta tags.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/history.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\noptions.metaTags = true | false | [Element, Element, ...]\n```\n\n----------------------------------------\n\nTITLE: Navigation Menu with Second Link Active\nDESCRIPTION: Navigation menu state when /bar is the current URL. The 'up-current' class is automatically moved to the second link.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/nav-example.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/foo\">Foo</a>\n  <a href=\"/bar\" class=\"up-current\">Bar</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Configuring Revalidation in Unpoly Rendering\nDESCRIPTION: This snippet describes the 'revalidate' option for Unpoly rendering. It determines whether to reload the targeted fragment after it was rendered from a cached response, with possible values of 'auto', true, or false.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/caching.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\noptions.revalidate\n```\n\n----------------------------------------\n\nTITLE: Disabling Animations Globally in Unpoly\nDESCRIPTION: Demonstrates how to disable all animations globally in Unpoly. This can be particularly useful in testing environments where animations are not needed or desired.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_85\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.enabled = false;\n```\n\n----------------------------------------\n\nTITLE: Implementing Matomo Page View Tracking in JavaScript\nDESCRIPTION: Basic implementation of the trackPageView function for Matomo analytics integration.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction trackPageView(url) {\n  _paq.push(['setCustomUrl', url])\n  _paq.push(['trackPageView'])\n}\n```\n\n----------------------------------------\n\nTITLE: Parent Layer Targeting Form in Unpoly\nDESCRIPTION: Form configuration that updates the parent layer and dismisses its own overlay after successful submission.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/closing-overlays.md#2025-04-17_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\" action=\"/users\" up-layer=\"parent\">\n  <input type=\"text\" name=\"email\">\n  <button type=\"submit\">Create user</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Unpoly Render Complete Handler\nDESCRIPTION: Callback executed when Unpoly completes fragment updates. Provides access to the triggering element and render result object.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/lifecycle-hooks.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"this\": \"The link being followed\",\n  \"result\": \"The up.RenderResult for the respective render pass\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using CSP nonce prefix with up-on-* attributes\nDESCRIPTION: This example shows how to prefix a nonce to the JavaScript code in an up-on-loaded attribute to make it work with strict CSP rules.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-on-loaded=\"nonce-kO52Iphm8B alert()\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Preloading Links in JavaScript\nDESCRIPTION: Example of eagerly preloading links using a compiler in Unpoly 3.0.0, which is no longer abortable by default.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('a[rel=next]', up.link.preload)\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request with X-Up-Version Header for Unpoly Requests\nDESCRIPTION: This example shows how Unpoly includes its version in an X-Up-Version header. Servers can use this to distinguish between fragment updates and full page loads.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimizing-responses.md#2025-04-17_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nX-Up-Version: 1.0.0\n```\n\n----------------------------------------\n\nTITLE: Event listener function signature in Unpoly\nDESCRIPTION: The function signature for event listeners in Unpoly's up.on method. The listener receives the event object, the target element, and any attached data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.on/after-element.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nFunction(event, [element], [data])\n```\n\n----------------------------------------\n\nTITLE: Initial Fragment Request with Last-Modified\nDESCRIPTION: Example of initial HTTP request and response with Last-Modified header\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /messages HTTP/1.1\nX-Up-Target: .messages\n```\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nLast-Modified: Wed, 15 Nov 2000 13:11:22 GMT\n\n<html>\n  <div class='messages'>...</div>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Appending Children with :after Pseudo Selector\nDESCRIPTION: HTML example showing how to append new content to an existing element using the :after pseudo selector, useful for pagination.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"tasks\">\n  <li>Wash car</li>\n  <li>Purchase supplies</li>\n  <li>Fix tent</li>\n</ul>\n\n<a href=\"/page/2\" class=\"next-page\" up-target=\".tasks:after, .next-page\">\n  Load more tasks\n</a>\n```\n\n----------------------------------------\n\nTITLE: HTML with Multiple Fragment Versions\nDESCRIPTION: Example of HTML structure with different modification times for different fragments\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class='messages' up-time='Wed, 21 Oct 2015 07:28:00 GMT'>\n  <div class='message' id='message1'>...</div>\n  <div class='message' id='message2'>...</div>\n</div>\n\n<div class='recent-posts' up-time='Thu, 3 Nov 2022 15:35:02 GMT'>\n  <div class='post' id='post1'>...</div>\n  <div class='post' id='post2'>...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Origin in JavaScript Render\nDESCRIPTION: Setting a custom origin element for feedback classes during rendering.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('click', '.my-button', function(event) {\n  up.render({ url: '/path', origin: event.target })\n})\n```\n\n----------------------------------------\n\nTITLE: Using up-alias with multiple URLs\nDESCRIPTION: Multiple alternative URLs can be passed to up-alias using comma-separated values.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/navigation-bars.md#2025-04-17_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<nav>\n  <a href=\"/users\" up-alias=\"/users/new, /users/online\">Users</a>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Custom Event Emission in Unpoly\nDESCRIPTION: Shows how to emit custom events on specific elements with additional data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\nup.emit(element, 'app:user:login', { email: 'foo@example.com' })\n```\n\n----------------------------------------\n\nTITLE: Reusing destructor functions with element parameter in JavaScript\nDESCRIPTION: This code shows how to reuse the same destructor function for multiple elements. The destructor function now receives the element being destroyed as a parameter, allowing for better code reuse.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nlet fn = (element) => console.log('Element %o was destroyed', element)\n\nfor (let element of document.querySelector('div')) {\n  up.destructor(element, fn)\n}\n```\n\n----------------------------------------\n\nTITLE: Server Response with Vary Header for Fragment Optimization in Unpoly\nDESCRIPTION: Shows a server response optimized for a fragment update, including the Vary header to indicate that X-Up-Target influenced the response, and the fragment HTML content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/vary-header-example.md#2025-04-17_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nVary: X-Up-Target\n\n<div class=\"menu\">...</div>\n```\n\n----------------------------------------\n\nTITLE: HTTP Request Header for Deferred Content\nDESCRIPTION: Example of the HTTP request headers sent when fetching deferred content, including the X-Up-Target header for fragment targeting.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/defer-example.md#2025-04-17_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET /path HTTP/1.1\nX-Up-Target: #menu\n```\n\n----------------------------------------\n\nTITLE: HTML Implementation of Named Segment Capture\nDESCRIPTION: Demonstrates capturing named URL segments in HTML markup with result value handling.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!-- Closes layer when user visits any URL beginning with \"/users/\" and captures the suffix as { name } -->\n<a href=\"/users/\"\n  up-accept-location=\"/users/:name\"\n  up-layer=\"new\"\n  up-on-accepted=\"console.log(`Reached user ${value.name}`!)\">\n  Users\n</a>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure Showing Elements Updated During History Changes\nDESCRIPTION: This HTML snippet demonstrates which elements in a document are updated when Unpoly changes history state. The highlighted elements include the HTML language attribute, document title, canonical link, and meta tags.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/updating-history.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\"> <!-- mark-phrase \"en\" -->\n  <head>\n    <title>AcmeCorp</title> <!-- mark-line -->\n    <link rel=\"canonical\" href=\"https://example.com/dresses/green-dresses\"> <!-- mark-line -->\n    <meta name=\"description\" content=\"About the AcmeCorp team\"> <!-- mark-line -->\n    <meta prop=\"og:image\" content=\"https://app.com/og.jpg\"> <!-- mark-line -->\n    <script src=\"/assets/app.js\"></script>\n    <link rel=\"stylesheet\" href=\"/assets/app.css\">\n  </head>\n  <body>\n    ...\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Updating HTML Structure for Tooltips in Unpoly\nDESCRIPTION: The HTML markup for tooltips has been changed to improve CSS styling. The new structure includes a wrapper div with class 'up-tooltip' and an inner div with class 'up-tooltip-content'.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_72\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"up-tooltip\">\n  <div class=\"up-tooltip-content\">\n    Tooltip text here\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using up.on() with capture option in JavaScript\nDESCRIPTION: up.on() takes a { capture: true } option to register a listener that runs before the event is emitted on the element.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nup.on('click', '.selector', (event) => {\n  // Event handler code\n}, { capture: true });\n```\n\n----------------------------------------\n\nTITLE: Legacy JavaScript Using DOMContentLoaded for Element Enhancement\nDESCRIPTION: Traditional JavaScript code that waits for page load to select and enhance all lightbox links on the page. This approach fails to capture elements added through Unpoly fragment updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/legacy-scripts.md#2025-04-17_snippet_0\n\nLANGUAGE: js\nCODE:\n```\ndocument.addEventListener('DOMContentLoaded', function(event) {\n  document.querySelectorAll('a.lightbox').forEach(function(element) {\n    lightboxify(element)\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Using Boolean Attributes with ERB Templates\nDESCRIPTION: Example of using Ruby's ERB templating to dynamically set Unpoly boolean attributes based on variables.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_12\n\nLANGUAGE: erb\nCODE:\n```\n<a href=\"/path\" up-follow=\"<%= is_signed_in %>\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Loading State CSS Styling\nDESCRIPTION: CSS rule for styling elements that are loading new content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.up-loading {\n  opacity: 0.6;\n}\n```\n\n----------------------------------------\n\nTITLE: Compiler Function with Native Element\nDESCRIPTION: Example of a compiler callback receiving native DOM elements instead of jQuery collections.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_66\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.button', function(button) {\n  alert(\"We have a new button with class \" + button.className)\n})\n```\n\n----------------------------------------\n\nTITLE: Batch Form Observation\nDESCRIPTION: Shows how to observe multiple form changes in a single callback using the batch option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_69\n\nLANGUAGE: javascript\nCODE:\n```\nup.observe('form', { batch: true }, function(diff) {\n  console.log('Observed one or more changes: %o', diff);\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Fields During Validation\nDESCRIPTION: Example showing how to disable form fields during validation using the up-watch-disable attribute to prevent user input while validation requests are in flight.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/dependent-fields.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\" action=\"/purchases\" up-watch-disable>\n  ...\n</form>\n```\n\n----------------------------------------\n\nTITLE: Checking Animation Status in Unpoly\nDESCRIPTION: Shows how to check if animations are currently enabled in Unpoly using the up.motion.isEnabled function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_86\n\nLANGUAGE: javascript\nCODE:\n```\nif (up.motion.isEnabled()) {\n  // Animations are enabled\n} else {\n  // Animations are disabled\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Manual Deferred Loading in HTML\nDESCRIPTION: This example shows how to configure a placeholder for manual deferred loading using the 'manual' value for up-defer attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/lazy-loading.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div up-defer=\"manual\" id=\"menu\" up-href=\"/menu\">\n  Loading...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Legacy Event Binding with up.bus.on\nDESCRIPTION: Shows the deprecated way of binding to Unpoly events using the bus system, which has been replaced with DOM events.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_93\n\nLANGUAGE: javascript\nCODE:\n```\nup.bus.on('fragment:ready', function($fragment) {\n  ...\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Unpoly Attributes in Ruby\nDESCRIPTION: Example of setting Unpoly boolean attributes using Ruby's link_to helper with a literal true value.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_13\n\nLANGUAGE: ruby\nCODE:\n```\nlink_to 'Click me', '/path', 'up-follow': true\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for Active Elements\nDESCRIPTION: CSS rules for styling active links and submit buttons to provide visual feedback.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.up-active:is(a, [up-follow], input[type=submit], button[type=submit], button:not([type])) {\n  outline: 2px solid blue;\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP header with CSP nonce configuration\nDESCRIPTION: This HTTP response header example shows how to define a Content Security Policy with a nonce that matches the one used in HTML attributes.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nContent-Type: text/html\nContent-Security-Policy: script-src 'self' 'nonce-kO52Iphm8B'\n...\n\n<a href=\"/path\" up-follow up-on-loaded=\"nonce-kO52Iphm8B alert()\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Defining Easing Function for Transitions/Animations in Unpoly\nDESCRIPTION: This option specifies the timing function that accelerates the transition or animation. It accepts standard CSS transition timing functions as defined in the MDN documentation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/motion.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\noptions.easing\n```\n\n----------------------------------------\n\nTITLE: HTML Links for Opening Overlays with Different Sizes\nDESCRIPTION: Shows how to create links that open overlays with different sizes using the up-size attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/customizing-overlays.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-layer=\"new\" up-size=\"small\">open small modal</a>\n<a href=\"/path\" up-layer=\"new\" up-size=\"medium\">open medium modal</a>\n<a href=\"/path\" up-layer=\"new\" up-size=\"large\">open large modal</a>\n<a href=\"/path\" up-layer=\"new\" up-size=\"grow\">open growing modal</a>\n<a href=\"/path\" up-layer=\"new\" up-size=\"full\">open full-width modal</a>\n```\n\n----------------------------------------\n\nTITLE: Fragment Tracking with Custom Dimensions\nDESCRIPTION: Enhanced compiler implementation that includes custom dimension data in tracking calls.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('[track-page-view]', function(element, data, meta) {\n  // Don't track duplicate page views if we just reloaded for cache revalidation. \n  if (!meta.revalidating) {\n    // Send an event to our web analytics tool.\n    trackPageView(meta.layer.location, data)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Form with Required Validation in HTML\nDESCRIPTION: HTML form with a required input field to prevent submission with empty values, a basic client-side validation approach for optimistic rendering.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/optimistic-rendering.md#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<form up-target=\"#tasks\" up-preview=\"add-task\">\n  <input type=\"text\" name=\"text\" required>\n  <button type=\"submit\">Save</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: CSS for Styling Unpoly Links without href Attribute\nDESCRIPTION: CSS code to style links that use Unpoly attributes instead of href, ensuring they have the same visual appearance as standard links.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_8\n\nLANGUAGE: css\nCODE:\n```\na:is([href], [up-content], [up-fragment], [up-document]) {\n  color: blue;\n  text-decoration: underline;\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Form Element in Form Events (New Approach)\nDESCRIPTION: New simplified way of accessing the form element directly through the form property in the event object.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_17\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:form:submit', function({ form }) {\n  console.log(\"form is\", form)\n})\n```\n\n----------------------------------------\n\nTITLE: Preview-based Control Disabling\nDESCRIPTION: Demonstrates how to disable form controls during preview using the preview.disable() method with CSS selectors.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('.sign-in', function(preview) {\n  preview.disable('input[name=email]')\n  preview.disable('.button-bar')\n})\n```\n\n----------------------------------------\n\nTITLE: Example of problematic up-on-loaded attribute with CSP\nDESCRIPTION: This HTML snippet demonstrates an element with an up-on-loaded attribute that would fail under strict CSP rules that disallow eval().\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/csp.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-follow up-on-loaded=\"alert()\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Setting up-lang attribute in HTML\nDESCRIPTION: When updating history, the html[lang] is now also updated. This can be prevented by setting an [up-lang=false] attribute or passing a { lang: false } option.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_24\n\nLANGUAGE: HTML\nCODE:\n```\n<html up-lang=\"false\">\n  <!-- Content here -->\n</html>\n```\n\n----------------------------------------\n\nTITLE: Detecting Revalidation in Unpoly Compilers\nDESCRIPTION: JavaScript code for an Unpoly compiler that checks if content is being revalidated before tracking page views to avoid duplicate analytics data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/caching.md#2025-04-17_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nup.compiler('[track-page-view]', function(element, data, meta) { // mark-phrase \"meta\"\n  // Don't track duplicate page views if we just reloaded for cache revalidation. \n  if (!meta.revalidating) {\n    // Send an event to our web analytics tool.\n    trackPageView(meta.layer.location)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing Index in Utility Function Callbacks\nDESCRIPTION: Shows how utility functions now pass the iteration index as a second argument to the callback function.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_76\n\nLANGUAGE: javascript\nCODE:\n```\nusers = [{ name: 'foo' }, { name: 'bar' }]\nup.util.map(users, function(user, index) { return index }) // [0, 1]\n```\n\n----------------------------------------\n\nTITLE: Experimental Hungry Elements Option\nDESCRIPTION: Controls whether elements with up-hungry attribute outside the updated fragment will also be updated. This is an experimental feature.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/targeting.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\nup-use-hungry='true'\n```\n\n----------------------------------------\n\nTITLE: Improved Script Placement with Defer Attribute\nDESCRIPTION: Recommended approach for script loading that moves scripts to the head with a defer attribute. This prevents re-execution when the body is updated through Unpoly fragment updates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/legacy-scripts.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <head>\n    <script src=\"app.js\" defer></script> <!-- mark-phrase \"defer\" -->\n  </head>\n  <body>\n    <p>Content here</p>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Deprecated Attribute Warning Example in Plain Text\nDESCRIPTION: Example of improved deprecation warning for renamed attributes in Unpoly 3.1.1, showing how the warning message now includes the actual attribute name.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_41\n\nLANGUAGE: plaintext\nCODE:\n```\nAttribute [up-reveal] was renamed to [up-scroll=\"target\"].\n```\n\n----------------------------------------\n\nTITLE: Disabling Full Form with HTML Attribute\nDESCRIPTION: Shows how to disable all form controls during submission using the up-disable attribute on a form element. All input fields and buttons will be disabled during form submission.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/disabling-forms.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form up-submit up-disable action=\"/session\">\n  <input type=\"text\" name=\"email\">\n  <input type=\"password\" name=\"password\">\n  <button type=\"submit\">Sign in</button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Using queueMicrotask() in JavaScript\nDESCRIPTION: The function up.util.microtask() was deprecated. Users are advised to use the browser's built-in queueMicrotask() function instead.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nqueueMicrotask(() => {\n  // Microtask code here\n});\n```\n\n----------------------------------------\n\nTITLE: CSS Length Values with Units in JavaScript\nDESCRIPTION: Examples showing the requirement for length values to include units when using Unpoly style helper functions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_22\n\nLANGUAGE: js\nCODE:\n```\n// ❌ Length values without unit is uo longer supported\nup.element.setStyle(div, { height: 50 })\n\n// ✔️ Length values now require a unit\nup.element.setStyle(div, { height: '50px' })\n```\n\n----------------------------------------\n\nTITLE: Initial Fragment Request with ETag\nDESCRIPTION: Example of initial HTTP request and response with ETag header for fragment updates\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /messages HTTP/1.1\nX-Up-Target: .messages\n```\n\nLANGUAGE: http\nCODE:\n```\nHTTP/1.1 200 OK\nETag: \"x234dff\"\n\n<html>\n  ...\n  <div class='messages'>\n    ...\n  </div>\n  ...  \n</html>\n```\n\n----------------------------------------\n\nTITLE: Custom Feedback Classes Configuration\nDESCRIPTION: JavaScript configuration for adding custom feedback classes to active and loading elements.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nup.status.config.activeClasses.push('activated')\nup.status.config.loadingClasses.push('fetching')\n```\n\n----------------------------------------\n\nTITLE: HTML Implementation of Exact URL Pattern\nDESCRIPTION: Shows how to use exact URL pattern matching in HTML markup to close an overlay when visiting a specific URL.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- Closes the new overlay when user visits \"/users/new\" -->\n<a href=\"/users/\" up-layer=\"new\" up-accept-location=\"/users/new\">Users</a>\n```\n\n----------------------------------------\n\nTITLE: Using Promise.resolve() instead of Removed Utility Methods\nDESCRIPTION: Example of replacing removed utility methods with standard Promise API methods. This shows how to migrate from deprecated up.util.resolvedPromise() to the standard Promise.resolve().\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_80\n\nLANGUAGE: javascript\nCODE:\n```\n// Before - using deprecated methods\nup.util.resolvedPromise(value);\nup.util.rejectedPromise(error);\n\n// After - using standard Promise API\nPromise.resolve(value);\nPromise.reject(error);\n```\n\n----------------------------------------\n\nTITLE: Disabling Log Formatting in JavaScript\nDESCRIPTION: Example of disabling log formatting in Unpoly to simplify detection of undeprecated APIs in automated tests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nup.log.config.format = false\n```\n\n----------------------------------------\n\nTITLE: Preload Link Configuration HTML Examples\nDESCRIPTION: Demonstrates different preloading strategies using up-preload attribute variations\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path\" up-preload>Hover over me to preload my content</a>\n<a href=\"/menu\" up-layer=\"new drawer\" up-preload=\"insert\">≡ Menu</a>\n<a href=\"/stories/106\" up-preload=\"reveal\">Full story</a>\n```\n\n----------------------------------------\n\nTITLE: Watching Unpoly Files for Changes\nDESCRIPTION: Command to watch Unpoly source files for changes and automatically recompile affected build files. This is faster than performing a full build after each change.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch-dev\n```\n\n----------------------------------------\n\nTITLE: Resulting HTML After Loading Next Page in Unpoly Infinite Scrolling\nDESCRIPTION: This HTML snippet demonstrates the resulting structure after Unpoly renders the response for the next page. It shows how new items are appended to the existing page content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/infinite-scrolling.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"pages\">\n  <div class=\"page\">items for page 1</div>\n  <div class=\"page\">items for page 2</div>\n</div>\n\n<a id=\"next-page\" href=\"/items?page=3\" up-defer=\"reveal\" up-target=\"#next-page, #pages:after\">\n  load next page\n</div>\n```\n\n----------------------------------------\n\nTITLE: Processing Compiler Data in JavaScript with Unpoly\nDESCRIPTION: Demonstrates how to use a compiler function in Unpoly to post-process cloned template elements with custom data. This allows for dynamic content manipulation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('.task', function(task, data) {\n  if (data.description) {\n    task.innerText = data.description\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Macro Function with Native Element\nDESCRIPTION: Shows how to use macro functions with native DOM elements for attribute manipulation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\nup.compiler('a.fast-link', function(element) {\n  element.setAttribute('up-preload', 'up-preload')\n  element.setAttribute('up-instant', 'up-instant')\n})\n```\n\n----------------------------------------\n\nTITLE: JavaScript Implementation of Multiple Patterns\nDESCRIPTION: Shows different ways to specify multiple URL patterns in JavaScript.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/url-patterns.md#2025-04-17_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nup.layer.open({ acceptLocation: \"/users/* /account\" })\nup.layer.open({ acceptLocation: \"/users/*, /account\" })\nup.layer.open({ acceptLocation: [\"/users/*\", \"/account\"] })\n```\n\n----------------------------------------\n\nTITLE: CSS Property Names in Kebab-case in JavaScript\nDESCRIPTION: Examples showing the required kebab-case format for CSS property names in Unpoly style helper functions.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_21\n\nLANGUAGE: js\nCODE:\n```\n// ❌ camelCase property names are no longer supported\nup.element.setStyle(div, { backgroundColor: 'red' })\n\n// ✔️ Property names must now be in kebab-case\nup.element.setStyle(div, { 'background-color': 'red' })\n```\n\n----------------------------------------\n\nTITLE: Starting Unpoly Test Server\nDESCRIPTION: Command to start a background server required for running Unpoly tests. The server is run in the background using the & operator.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-server &\n```\n\n----------------------------------------\n\nTITLE: Creating Nodes from HTML without Requiring a Single Root Element\nDESCRIPTION: New experimental function for parsing a list of nodes from HTML without requiring a single root element. Unlike createFromHTML(), this can parse Text nodes or a mixed list of Text and Element siblings.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.element.createNodesFromHTML()\n```\n\n----------------------------------------\n\nTITLE: Watching Unpoly Files for Changes During Development\nDESCRIPTION: Command to watch the Unpoly project files for changes and automatically recompile affected build files for faster development.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch-dev\n```\n\n----------------------------------------\n\nTITLE: Spinner Visibility CSS\nDESCRIPTION: CSS rules for showing/hiding a spinner during form submission.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/feedback-classes.md#2025-04-17_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n.spinner {\n  display: none;\n  \n  form.up-active & {\n    display: block;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Template with Data in HTML using Unpoly\nDESCRIPTION: Shows how to pass data to a template using the up-use-data attribute in Unpoly. This allows for dynamic content in templates without server requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/templates.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a up-fragment=\"#my-template\" up-use-data=\"{ description: 'Buy toast' }\">\n  Click me\n</a>\n```\n\n----------------------------------------\n\nTITLE: Installing Unpoly Development Dependencies with npm\nDESCRIPTION: Command to install required npm packages for Unpoly development environment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting Revalidation Preview in Unpoly Rendering\nDESCRIPTION: This experimental snippet describes the 'revalidatePreview' option for Unpoly rendering. It allows setting a preview that runs while revalidating cached content.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/caching.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\noptions.revalidatePreview\n```\n\n----------------------------------------\n\nTITLE: Using up.fail_target Ruby Helper Methods\nDESCRIPTION: Example of using the new Ruby on Rails helper methods for handling failed responses in Unpoly. These methods help determine which selectors are targeted for failed requests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_81\n\nLANGUAGE: ruby\nCODE:\n```\n# Get the selector targeted for a failed response\nup.fail_target\n\n# Check if a specific selector is targeted for a failed response\nup.fail_target?(\"#error-container\")\n\n# Check if a selector is targeted for either successful or failed response\nup.any_target?(\"#content\")\n```\n\n----------------------------------------\n\nTITLE: Building Unpoly for Development\nDESCRIPTION: Command to create a fresh development build of Unpoly in the dist/ directory. This generates transpiled files needed for testing.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build-dev\n```\n\n----------------------------------------\n\nTITLE: Using up.safe_callback helper in ERB template\nDESCRIPTION: Shows how to use the up.safe_callback helper from the unpoly-rails gem to insert a CSP nonce for JavaScript callbacks in ERB templates.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_60\n\nLANGUAGE: erb\nCODE:\n```\n<a href=\"/path\" up-follow up-on-loaded=\"<%= up.safe_callback('alert()') %>\">Click me</a>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Unpoly Release\nDESCRIPTION: Command to start the guided CLI interface for creating a new Unpoly release. This walks through the steps needed for the release process.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run release\n```\n\n----------------------------------------\n\nTITLE: Mustache.js Template Integration\nDESCRIPTION: Shows how to integrate the Mustache.js template engine with Unpoly by using a script tag with type=\"text/mustache\", enabling dynamic template variables.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script id=\"results-template\" type=\"text/mustache\">\n  <div id=\"game-results\">\n    <h1>Results of game {{gameCount}}</h1>\n\n    {{#players}}\n      <p>{{name}} has scored {{score}} points.</p>\n    {{/players}}\n  </div>>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using Layer Context in ERB Template\nDESCRIPTION: Shows how to use layer context in an ERB template to create a contact picker with project-specific information.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_4\n\nLANGUAGE: erb\nCODE:\n```\n<% form_for @project do |form| %>\n\n  Contact: <%= form.object.contact %>\n\n  <a href='/contacts'\n    up-layer='new'\n    up-accept-location='/contacts/*'\n    up-context='<%= { project: @project.name }.to_json %>'>\n    Pick a contact\n  </a>\n\n  ...\n<% end %>\n```\n\n----------------------------------------\n\nTITLE: Starting the Unpoly Test Server\nDESCRIPTION: Command to start a background server required for running Unpoly tests.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-server &\n```\n\n----------------------------------------\n\nTITLE: Identifying Assets in HTML Structure\nDESCRIPTION: This HTML snippet demonstrates which elements are considered assets by Unpoly for tracking changes. It highlights that remote scripts and stylesheets are tracked, while inline scripts are not by default.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/handling-asset-changes.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<html>\n  <head>\n    <title>AcmeCorp</title>\n    <link rel=\"stylesheet\" href=\"/assets/frontend-5f3aa101.css\"> <!-- mark-line -->\n    <script src=\"/assets/frontend-81ba23a9.js\"></script> <!-- mark-line -->\n    <script>console.log('loaded!')</script>\n    <link rel=\"canonical\" href=\"https://example.com/dresses/green-dresses\">\n  </head>\n  <body>\n    ...\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Peel Option Documentation for up.render\nDESCRIPTION: Documentation for the peel boolean option that controls whether to close obstructing overlays when updating a layer that isn't the frontmost layer.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/layer.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n@param {boolean} [options.peel]\n```\n\n----------------------------------------\n\nTITLE: Starting Unpoly Development Environment\nDESCRIPTION: Command to build the library and start a development server for running tests. This performs an initial build and automatically rebuilds when files are changed.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Using CSS Pseudo-Selector .element:content for HTML Updates\nDESCRIPTION: You can now target and update an element's inner HTML using the .element:content pseudo-selector. This swaps all children of .element, while preserving the element itself.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n.element:content\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Unpoly Development\nDESCRIPTION: Command to install required npm packages for Unpoly development. This is necessary before building or working on the framework.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Loading Migration Script\nDESCRIPTION: HTML code snippet showing how to include the Unpoly migration script for upgrading from older versions to 2.0\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_62\n\nLANGUAGE: html\nCODE:\n```\n<code>unpoly-migrate.js</code>\n```\n\n----------------------------------------\n\nTITLE: Sanitizing User Input for Unpoly Rendering\nDESCRIPTION: JavaScript example showing how to safely escape user-controlled input before rendering it with Unpoly to prevent XSS attacks.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/providing-html.md#2025-04-17_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nlet userText = document.querySelector('wysiwyg-textarea').value\nup.render({ fragment: '<div class=\".foo\">' + up.util.escapeHTML(userText) + '</div>' })\n```\n\n----------------------------------------\n\nTITLE: Creating a New Unpoly Release\nDESCRIPTION: Command to start the guided CLI interface for the Unpoly release process.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run release\n```\n\n----------------------------------------\n\nTITLE: Using up.network Configuration to Handle Unpoly Failures\nDESCRIPTION: Example of using up.network.config.fail to create a global rule for determining when a response is considered to have failed, allowing users to handle misconfigured server endpoints.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\nup.network.config.fail\n```\n\n----------------------------------------\n\nTITLE: Defining up-focus Parameter in Unpoly\nDESCRIPTION: Documents the up-focus attribute which controls what element receives focus after a new fragment is rendered. This parameter accepts various values as described in the Controlling focus documentation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/focus.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@param [up-focus='auto']\n  What to focus after the new fragment was rendered.\n\n  See [Controlling focus](/focus) for a list of allowed values.\n```\n\n----------------------------------------\n\nTITLE: Legacy Unpoly Configuration Method\nDESCRIPTION: Shows the deprecated way of configuring Unpoly modules using method calls that has been replaced with direct property assignment.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_92\n\nLANGUAGE: javascript\nCODE:\n```\nup.layout.defaults({ snap: 100 });\n```\n\n----------------------------------------\n\nTITLE: Building Unpoly for Development\nDESCRIPTION: Command to create a fresh build of Unpoly for development purposes, generating transpiled files in the dist/ directory.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build-dev\n```\n\n----------------------------------------\n\nTITLE: Starting Unpoly Development Environment\nDESCRIPTION: Command to build the Unpoly library and start a server for running tests. This enables automatic rebuilding when files change.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Modifying Layer Context in Ruby\nDESCRIPTION: Demonstrates how to read and change the context from a Ruby controller on the server side.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/context.md#2025-04-17_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\nclass GamesController < ApplicationController\n\n  def restart\n    up.context[:lives] = 3\n    render 'stage1'\n  end\n\nend\n```\n\n----------------------------------------\n\nTITLE: Disabling Animation in JavaScript\nDESCRIPTION: Sets the global configuration to disable all animations in Unpoly.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/dist/CHANGELOG.md#2025-04-17_snippet_74\n\nLANGUAGE: javascript\nCODE:\n```\nup.motion.config.enabled = false\n```\n\n----------------------------------------\n\nTITLE: Using a Preview in JavaScript Navigation\nDESCRIPTION: This JavaScript snippet demonstrates how to use a named preview when navigating programmatically using up.navigate().\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nup.navigate({ url: '/edit', preview: 'link-spinner' })\n```\n\n----------------------------------------\n\nTITLE: Configuring Real-time Validation in Unpoly Forms with HTML Attributes\nDESCRIPTION: This snippet demonstrates how to set up a form input that validates as the user types, rather than waiting for the field to lose focus. It uses up-validate with up-watch-event=\"input\" to trigger validation on each keystroke, along with up-watch-delay to prevent excessive validation requests and up-keep to preserve user input during validation.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/partials/validating-while-typing.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input name=\"email\" up-validate up-watch-event=\"input\" up-watch-delay=\"100\" up-keep>\n```\n\n----------------------------------------\n\nTITLE: Defining Scroll Behavior with HTML Attribute in Unpoly\nDESCRIPTION: This snippet demonstrates how to use the up-scroll attribute in an HTML anchor tag to define multiple scroll strategies. It attempts to scroll to the hash target first, then defaults to scrolling to the top if no hash is present.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/scrolling.md#2025-04-17_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/path#section\" up-follow up-scroll=\"hash, top\">Link label</a>\n```\n\n----------------------------------------\n\nTITLE: Handling Network Issues in Unpoly\nDESCRIPTION: Shows how to handle network connectivity problems using Unpoly's events. This example listens for the up:fragment:offline event and gives users the option to retry the failed request.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/loading-state.md#2025-04-17_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nup.on('up:fragment:offline', function(event) {\n  if (confirm('You are offline. Retry?')) event.retry()\n})\n```\n\n----------------------------------------\n\nTITLE: Layer Parameter Documentation for up.render\nDESCRIPTION: Documentation for the layer option in up.render method. Specifies which layer to render the fragment in, with support for opening new overlays. The layer parameter accepts string identifiers, Layer objects, or Element references.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up.render/layer.md#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@param {string|up.Layer|Element} [options.layer='origin current']\n```\n\n----------------------------------------\n\nTITLE: Targeting Ancestor Elements with Ambiguous Selectors\nDESCRIPTION: HTML example showing how Unpoly resolves ambiguous selectors by proximity, updating the ancestor that contains the clicked link.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/targeting-fragments.md#2025-04-17_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  Card #1 preview\n  <a href=\"/cards/1\" up-target=\".card\">Show full card #1</a>\n</div>\n\n<div class=\"card\">\n  Card #2 preview\n  <a href=\"/cards/2\" up-target=\".card\">Show full card #2</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Unpoly Post-Processing Complete Handler\nDESCRIPTION: Callback executed when all DOM changes and animations are complete. Access to triggering element and final render result.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/params/up-follow/lifecycle-hooks.md#2025-04-17_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"this\": \"The link being followed\",\n  \"result\": \"The up.RenderResult for the last render pass that updated a fragment\"\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Form with up-validate Attributes\nDESCRIPTION: Example of a form implementing real-time field validation using the up-validate attribute.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/validation.md#2025-04-17_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form action=\"/users\">\n\n  <fieldset>\n    <label for=\"email\" up-validate>E-mail</label>\n    <input type=\"text\" id=\"email\" name=\"email\">\n  </fieldset>\n\n  <fieldset>\n    <label for=\"password\" up-validate>Password</label>\n    <input type=\"password\" id=\"password\" name=\"password\">\n  </fieldset>\n\n  <button type=\"submit\">Register</button>\n\n</form>\n```\n\n----------------------------------------\n\nTITLE: Modifying Render Options for Form Links\nDESCRIPTION: Example showing how to modify render options for links within forms to open in new overlay layers, preserving form data.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/render-lifecycle.md#2025-04-17_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nup.on('up:link:follow', 'form a', function(event, link) {\n  if (link.closest('form')) {\n    event.renderOptions.layer = 'new'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Preview with Parameters in JavaScript\nDESCRIPTION: This snippet shows how to define a preview that accepts parameters, allowing for customization of the preview effect.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/previews.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nup.preview('spinner', function(preview, { size = 50 }) {\n  let spinner = up.element.createFromSelector('img', { src: 'spinner.gif', width: size })\n  preview.insert(preview.fragment, spinner)\n})\n```\n\n----------------------------------------\n\nTITLE: Universal Fragment Update Tracking\nDESCRIPTION: Implementation for tracking all fragment updates using the up:fragment:loaded event.\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/analytics.md#2025-04-17_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Track initial page load. Your old tracking code may already do this.\ntrackPageView(location.href)\n\nup.on('up:fragment:loaded', (event) => {\n  // Don't track revalidation of cached content. \n  if (!event.revalidating) {\n    trackPageView(event.response.url)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: HTML Fragment with ETag Attribute\nDESCRIPTION: Example of HTML fragment with remembered ETag in up-etag attribute\nSOURCE: https://github.com/unpoly/unpoly/blob/master/src/unpoly/pages/conditional-requests.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class='messages' up-etag='\"x234dff\"'>\n...\n</div>\n```"
  }
]
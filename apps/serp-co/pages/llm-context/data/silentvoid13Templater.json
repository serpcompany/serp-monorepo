[
  {
    "owner": "silentvoid13",
    "repo": "templater",
    "content": "TITLE: Templater Syntax Example in JavaScript\nDESCRIPTION: Example template file using Templater syntax to create a note with dynamic content including creation date, modification date, navigation links to adjacent dates, and a daily quote. The template demonstrates variables and function calls with the characteristic <% %> syntax.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/introduction.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n---\ncreation date: <% tp.file.creation_date() %>\nmodification date: <% tp.file.last_modified_date(\"dddd Do MMMM YYYY HH:mm:ss\") %>\n---\n\n<< [[<% tp.date.now(\"YYYY-MM-DD\", -1) %>]] | [[<% tp.date.now(\"YYYY-MM-DD\", 1) %>]] >>\n\n# <% tp.file.title %>\n\n<% tp.web.daily_quote() %>\n```\n\n----------------------------------------\n\nTITLE: Templater Function Call Syntax\nDESCRIPTION: Demonstrates the standard syntax for calling internal functions in Templater through module hierarchy\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<% tp.<module_name>.<internal_function_name> %>\n```\n\n----------------------------------------\n\nTITLE: Invoking Templater Function with Arguments in JavaScript\nDESCRIPTION: Demonstrates the syntax for invoking a Templater function with multiple arguments. Arguments must be passed in the correct order and respect the specified types.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/syntax.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntp.date.now(arg1_value, arg2_value, arg3_value, ...)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Template Commands with Date Functions\nDESCRIPTION: Example template showing usage of internal date functions to display formatted dates for yesterday and tomorrow using the tp.date module.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/terminology.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nYesterday: <% tp.date.yesterday(\"YYYY-MM-DD\") %>\nTomorrow: <% tp.date.tomorrow(\"YYYY-MM-DD\") %>\n```\n\n----------------------------------------\n\nTITLE: Conditional File Content Generation Using JavaScript in Templater\nDESCRIPTION: Multiple examples demonstrating conditional content generation based on file title, frontmatter type, and tags. Shows how to use if-else statements within JavaScript Execution Commands to generate different content based on file properties.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/commands/execution-command.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%* if (tp.file.title.startsWith(\"Hello\")) { %>\nThis is a hello file !\n<%* } else { %>\nThis is a normal file !\n<%* } %>\n    \n<%* if (tp.frontmatter.type === \"seedling\") { %>\nThis is a seedling file !\n<%* } else { %>\nThis is a normal file !\n<%* } %>\n    \n<%* if (tp.file.tags.contains(\"#todo\")) { %>\nThis is a todo file !\n<%* } else { %>\nThis is a finished file !\n<%* } %>\n\n<%*\nfunction log(msg) {\n\tconsole.log(msg);\n}\n%>\n<%* log(\"Title: \" + tp.file.title) %>\n    \n<%* tR += tp.file.content.replace(/stuff/, \"things\"); %>\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Script User Function in JavaScript\nDESCRIPTION: Example of a simple script function that accepts a message parameter and returns a formatted string. The function must be exported using the CommonJS module syntax to work with Templater.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/script-user-functions.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction my_function (msg) {\n    return `Message from my script: ${msg}`;\n}\nmodule.exports = my_function;\n```\n\n----------------------------------------\n\nTITLE: Accessing Obsidian API in Templater Scripts\nDESCRIPTION: A collection of examples showing how to use the tp.obsidian module in Templater scripts. Includes getting all folders, normalizing paths, converting HTML to markdown, and making HTTP requests.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/obsidian-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Get all folders\n<%\ntp.app.vault.getAllLoadedFiles()\n  .filter(x => x instanceof tp.obsidian.TFolder)\n  .map(x => x.name)\n%>\n\n// Normalize path\n<% tp.obsidian.normalizePath(\"Path/to/file.md\") %>\n\n// Html to markdown\n<% tp.obsidian.htmlToMarkdown(\"\\<h1>Heading\\</h1>\\<p>Paragraph\\</p>\") %>\n\n// HTTP request\n<%*\nconst response = await tp.obsidian.requestUrl(\"https://jsonplaceholder.typicode.com/todos/1\");\ntR += response.json.title;\n%>\n```\n\n----------------------------------------\n\nTITLE: Accessing Obsidian Vault and File Management with Templater\nDESCRIPTION: This snippet demonstrates two common operations using the Templater app module: listing all folders in the vault and updating frontmatter of an existing file. These examples show how to leverage the Obsidian API through Templater scripting.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/app-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Get all folders\n<%\ntp.app.vault.getAllLoadedFiles()\n  .filter(x => x instanceof tp.obsidian.TFolder)\n  .map(x => x.name)\n%>\n\n// Update frontmatter of existing file\n<%*\nconst file = tp.file.find_tfile(\"path/to/file\");\nawait tp.app.fileManager.processFrontMatter(file, (frontmatter) => {\n  frontmatter[\"key\"] = \"value\";\n});\n%>\n```\n\n----------------------------------------\n\nTITLE: Updating Frontmatter After Template Execution in Templater\nDESCRIPTION: This code snippet demonstrates how to use the on_all_templates_executed hook to update frontmatter after a template has finished executing. It finds the current file and processes its frontmatter to add a new key-value pair.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/hooks-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<%*\ntp.hooks.on_all_templates_executed(async () => {\n  const file = tp.file.find_tfile(tp.file.path(true));\n  await tp.app.fileManager.processFrontMatter(file, (frontmatter) => {\n    frontmatter[\"key\"] = \"value\";\n  });\n});\n%>\n```\n\n----------------------------------------\n\nTITLE: Invoking User Function in Templater JavaScript\nDESCRIPTION: Demonstrates how to call a user-defined function named 'echo' using Templater syntax. This example shows the correct format for invoking custom functions within Templater templates.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/overview.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<% tp.user.echo() %>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Frontmatter Variables in Templater\nDESCRIPTION: Demonstrates how to retrieve frontmatter variable values using Templater syntax. It shows both dot notation for simple variable names and bracket notation for names containing spaces.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/frontmatter-module.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<% tp.frontmatter.alias %>\n<% tp.frontmatter[\"variable name with spaces\"] %>\n```\n\n----------------------------------------\n\nTITLE: Templater Web Module Examples in JavaScript\nDESCRIPTION: A collection of JavaScript examples demonstrating how to use the web module functions in the Templater project. Examples are dynamically generated from function documentation.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/web-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{%- for key, fn in tp.web.functions %}\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Implementing Whitespace Control in Templater\nDESCRIPTION: This snippet demonstrates how to use dashes at the end of tags to trim newlines after execution commands, resulting in cleaner output without blank lines.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/commands/whitespace-control.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<%* if (tp.file.title == \"MyFile\" ) { -%>\nThis is my file!\n<%* } else { -%>\nThis isn't my file!\n<%* } -%>\nSome content ...\n```\n\nLANGUAGE: markdown\nCODE:\n```\nThis isn't my file!\nSome content ...\n```\n\n----------------------------------------\n\nTITLE: Using Templater to Access Frontmatter Values\nDESCRIPTION: Demonstrates how to use Templater to access and display frontmatter values within a template, including variables with spaces in their names.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/frontmatter-module.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nFile's metadata alias: <% tp.frontmatter.alias %>\nNote's type: <% tp.frontmatter[\"note type\"] %>\n```\n\n----------------------------------------\n\nTITLE: Invoking a Script User Function in Templater\nDESCRIPTION: Example syntax for calling a script user function within Templater. This shows how to pass a string argument to the previously defined script function.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/script-user-functions.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<% tp.user.my_script(\"Hello World!\") %>\n```\n\n----------------------------------------\n\nTITLE: Function Examples in JavaScript\nDESCRIPTION: JavaScript code examples for all functions in the Templater System module. Each example is labeled with its name and demonstrates how to use a specific system function.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/system-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{%- for key, fn in tp.system.functions %}\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Creating a Documented Script User Function with TSDoc\nDESCRIPTION: Example of a script function with TSDoc documentation at the top. This documentation enables intellisense-like experience when using the function in Templater.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/script-user-functions.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This does something cool\n */\nfunction doSomething() {\n    console.log('Something was done')\n}\n\nmodule.exports = doSomething;\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Default Whitespace Behavior in Templater\nDESCRIPTION: This snippet shows a template with conditional logic and the resulting output, highlighting the default behavior of preserving newlines around commands.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/commands/whitespace-control.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<%* if (tp.file.title == \"MyFile\" ) { %>\nThis is my file!\n<%* } else { %>\nThis isn't my file!\n<%* } %>\nSome content ...\n```\n\nLANGUAGE: markdown\nCODE:\n```\n\nThis isn't my file!\n\nSome content ...\n```\n\n----------------------------------------\n\nTITLE: Using Dynamic Commands with tp.file.last_modified_date in Templater\nDESCRIPTION: This example demonstrates how to use a dynamic command in Templater to display the last modified date of a file. The command will only be executed when entering preview mode, not during template processing.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/commands/dynamic-command.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nLast modified date: <%+ tp.file.last_modified_date() %>\n```\n\n----------------------------------------\n\nTITLE: Example Frontmatter Structure\nDESCRIPTION: Shows an example of a file's frontmatter structure with simple key-value pairs.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/frontmatter-module.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\nalias: myfile\nnote type: seedling\n---\n\nfile content\n```\n\n----------------------------------------\n\nTITLE: Running External Plugin Command After Template Execution in Templater\nDESCRIPTION: This snippet shows how to use the on_all_templates_executed hook to run a command from another plugin (in this case, the Obsidian Linter) after Templater has updated the file. This allows for integration with other Obsidian plugins.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/hooks-module.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<%*\ntp.hooks.on_all_templates_executed(() => {\n  tp.app.commands.executeCommandById(\"obsidian-linter:lint-file\");\n});\n-%>\n```\n\n----------------------------------------\n\nTITLE: Templater Function Documentation Syntax in JavaScript\nDESCRIPTION: Illustrates the documentation syntax used for Templater's internal functions. It shows how argument names, types, optional arguments, and default values are represented.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/syntax.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ntp.<my_function>(arg1_name: type, arg2_name?: type, arg3_name: type = <default_value>, arg4_name: type1|type2, ...)\n```\n\n----------------------------------------\n\nTITLE: Executing System Command User Function with Arguments in JavaScript\nDESCRIPTION: Demonstrates how to call a user-defined system command function named 'echo' with arguments passed as a JavaScript object. The arguments are made available as environment variables in the executed command.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/system-user-functions.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<% tp.user.echo({a: \"value 1\", b: \"value 2\"}) %>\n```\n\n----------------------------------------\n\nTITLE: Manipulating List Data in Frontmatter with JavaScript\nDESCRIPTION: Demonstrates how to use JavaScript array methods within Templater to manipulate and display list data from frontmatter.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/frontmatter-module.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n<% tp.frontmatter.categories.map(prop => `  - \"${prop}\"`).join(\"\\n\") %>\n```\n\n----------------------------------------\n\nTITLE: Using Internal Functions in System Command Definition\nDESCRIPTION: Shows how to incorporate Templater's internal functions within a system command definition. In this example, the 'tp.file.path()' function is used to get the current file's path, which is then passed to the 'cat' command.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/user-functions/system-user-functions.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat <% tp.file.path() %>\n```\n\n----------------------------------------\n\nTITLE: Generating Function Documentation in Markdown\nDESCRIPTION: This snippet demonstrates how to generate documentation for functions in the File Module using a specific markdown template. It iterates through functions, displaying their definitions, descriptions, arguments, and examples.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/file-module.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{%- for key, fn in tp.file.functions %}\n### `{{ fn.definition }}` \n\n{{ fn.description }}\n\n{% if fn.args %}\n##### Arguments\n\n{% for arg in fn.args %}\n- `{{ arg.name }}`: {{ arg.description }}\n{% endfor %}\n{% endif %}\n\n{% if fn.examples %}\n##### Examples\n\n```javascript\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n```\n{% endif %}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Templater Date Function Documentation Example in JavaScript\nDESCRIPTION: Provides an example of the documentation syntax for the tp.date.now internal function, showcasing optional arguments with different types and default values.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/syntax.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ntp.date.now(format?: string = \"YYYY-MM-DD\", offset?: number|string, reference?: string, reference_format?: string)\n```\n\n----------------------------------------\n\nTITLE: Frontmatter with List Example\nDESCRIPTION: Shows an example of frontmatter containing a list of categories.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/frontmatter-module.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n---\ncategories:\n  - book\n  - movie\n---\n```\n\n----------------------------------------\n\nTITLE: Implementing Date Module Class in Templater\nDESCRIPTION: This code defines the InternalModuleDate class which extends InternalModule to provide date-related functions for the Templater plugin. It registers static templates for current date (now), tomorrow, and yesterday, each with configurable formatting and offset options.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/contribute.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport class InternalModuleDate extends InternalModule {\n    name = \"date\";\n\n    async createStaticTemplates() {\n        this.static_templates.set(\"now\", this.generate_now());\n        this.static_templates.set(\"tomorrow\", this.generate_tomorrow());\n        this.static_templates.set(\"yesterday\", this.generate_yesterday());\n    }\n\n    async updateTemplates() {}\n\n    generate_now() {\n        return (format: string = \"YYYY-MM-DD\", offset?: number, reference?: string, reference_format?: string) => {\n            if (reference && !window.moment(reference, reference_format).isValid()) {\n                throw new Error(\"Invalid title date format, try specifying one with the argument 'reference'\");\n            }\n            return get_date_string(format, offset, reference, reference_format);\n        }\n    }\n\n    generate_tomorrow() {\n        return (format: string = \"YYYY-MM-DD\") => {\n            return get_date_string(format, 1);\n        }\n    }\n\n    generate_yesterday() {\n        return (format: string = \"YYYY-MM-DD\") => {\n            return get_date_string(format, -1);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Function Examples in JavaScript\nDESCRIPTION: This snippet shows how to generate a collection of JavaScript examples for all functions in the File Module. It iterates through each function and its examples, displaying them with comments.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/file-module.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{%- for key, fn in tp.file.functions %}\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Documentation Template Structure in Twig/Markdown\nDESCRIPTION: A template that iterates through configuration functions to generate documentation including function definitions, descriptions, arguments and examples.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/config-module.md#2025-04-22_snippet_0\n\nLANGUAGE: twig\nCODE:\n```\n# Config Module\n\n{{ tp.config.description }}\n\n<!-- toc -->\n\n## Documentation\n\n{%- for key, fn in tp.config.functions %}\n### `{{ fn.definition }}` \n\n{{ fn.description }}\n\n{% if fn.args %}\n##### Arguments\n\n{% for arg in fn.args %}\n- `{{ arg.name }}`: {{ arg.description }}\n{% endfor %}\n{% endif %}\n\n{% if fn.example %}\n##### Example\n\n```\n{{ fn.example }}\n```\n{% endif %}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Function Examples Template Loop\nDESCRIPTION: Template structure for displaying function examples in JavaScript, using nested loops to iterate through functions and their examples.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/date-module.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n```\n\n----------------------------------------\n\nTITLE: Moment.js Examples Template\nDESCRIPTION: Template section for displaying Moment.js specific examples in JavaScript format.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/date-module.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{% for example in tp.date.momentjs.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n```\n\n----------------------------------------\n\nTITLE: Combined Functions Examples Template\nDESCRIPTION: Template structure that combines all function examples into a single JavaScript code block using nested loops.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/docs/src/internal-functions/internal-modules/date-module.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{%- for key, fn in tp.date.functions %}\n{% for example in fn.examples -%}\n// {{ example.name}}\n{{ example.example }}\n{% endfor -%}\n{%- endfor %}\n```\n\n----------------------------------------\n\nTITLE: Version Updates and Bug Fixes for Templater Plugin\nDESCRIPTION: Markdown changelog entries documenting version changes, bug fixes and feature additions for the Templater Obsidian plugin. Includes commit references and issue links.\nSOURCE: https://github.com/silentvoid13/templater/blob/master/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* place cursor after frontmatter ([a65bc08](https://github.com/SilentVoid13/Templater/commit/a65bc0890cdf684e1afa0a7ab40b1cc6d8d1d09c)), closes [#1231](https://github.com/SilentVoid13/Templater/issues/1231)\n\n### [1.16.4](https://github.com/SilentVoid13/Templater/compare/1.16.3...1.16.4) (2023-10-11)\n\n### Bug Fixes\n\n* add missing `=` in docs example for `tp.system.suggester` ([ea6d2c4](https://github.com/SilentVoid13/Templater/commit/ea6d2c4f26d596eef6480b696d1fbb51639e21a3)), closes [#995](https://github.com/SilentVoid13/Templater/issues/995)\n```"
  }
]
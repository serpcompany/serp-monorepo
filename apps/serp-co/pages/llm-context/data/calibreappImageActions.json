[
  {
    "owner": "calibreapp",
    "repo": "image-actions",
    "content": "TITLE: Configuring GitHub Workflow for Image Compression with calibreapp/image-actions\nDESCRIPTION: This YAML configuration sets up a GitHub Actions workflow that automatically compresses images. It runs on pull requests that modify image files, pushes to main branch, manual triggers, and weekly schedules. The workflow uses calibreapp/image-actions for compression and can create a new PR with compressed images.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nname: Compress images\non:\n  pull_request:\n    paths:\n      - '**.jpg'\n      - '**.jpeg'\n      - '**.png'\n      - '**.webp'\n  push:\n    branches:\n      - main\n    paths:\n      - '**.jpg'\n      - '**.jpeg'\n      - '**.png'\n      - '**.webp'\n  workflow_dispatch:\n  schedule:\n    - cron: '00 23 * * 0'\njobs:\n  build:\n    name: calibreapp/image-actions\n    runs-on: ubuntu-latest\n    # Only run on main repo on and PRs that match the main repo.\n    if: |\n      github.repository == 'example/example_repo' &&\n      (github.event_name != 'pull_request' ||\n       github.event.pull_request.head.repo.full_name == github.repository)\n    steps:\n      - name: Checkout Branch\n        uses: actions/checkout@v3\n      - name: Compress Images\n        id: calibre\n        uses: calibreapp/image-actions@main\n        with:\n          githubToken: ${{ secrets.GITHUB_TOKEN }}\n          # For non-Pull Requests, run in compressOnly mode and we'll PR after.\n          compressOnly: ${{ github.event_name != 'pull_request' }}\n      - name: Create Pull Request\n        # If it's not a Pull Request then commit any changes as a new PR.\n        if: |\n          github.event_name != 'pull_request' &&\n          steps.calibre.outputs.markdown != ''\n        uses: peter-evans/create-pull-request@v4\n        with:\n          title: Auto Compress Images\n          branch-suffix: timestamp\n          commit-message: Compress Images\n          body: ${{ steps.calibre.outputs.markdown }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Calibre Image Actions Workflow in GitHub Actions\nDESCRIPTION: A basic GitHub Actions workflow configuration that compresses images when JPG, JPEG, PNG or WebP files are added or changed in a Pull Request. This setup runs only on Pull Requests within the same repository.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nname: Compress Images\non:\n  pull_request:\n    # Run Image Actions when JPG, JPEG, PNG or WebP files are added or changed.\n    # See https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onpushpull_requestpaths for reference.\n    paths:\n      - '**.jpg'\n      - '**.jpeg'\n      - '**.png'\n      - '**.webp'\njobs:\n  build:\n    # Only run on Pull Requests within the same repository, and not from forks.\n    if: github.event.pull_request.head.repo.full_name == github.repository\n    name: calibreapp/image-actions\n    permissions: write-all\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@v4\n\n      - name: Compress Images\n        uses: calibreapp/image-actions@main\n        with:\n          # The `GITHUB_TOKEN` is automatically generated by GitHub and scoped only to the repository that is currently running the action. By default, the action can't update Pull Requests initiated from forked repositories.\n          # See https://docs.github.com/en/actions/reference/authentication-in-a-workflow and https://help.github.com/en/articles/virtual-environments-for-github-actions#token-permissions\n          githubToken: ${{ secrets.GITHUB_TOKEN }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Compression for Images Pushed to Main Branch\nDESCRIPTION: A GitHub Actions workflow that runs whenever images are pushed directly to the main branch (useful for handling images from forked repository PRs) and creates a new Pull Request with the compressed versions.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yml\nCODE:\n```\nname: Compress Images on Push to main branch\non:\n  push:\n    branches:\n      - main\n    paths:\n      - '**.jpg'\n      - '**.jpeg'\n      - '**.png'\n      - '**.webp'\njobs:\n  build:\n    name: calibreapp/image-actions\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@v3\n      - name: Compress Images\n        id: calibre\n        uses: calibreapp/image-actions@main\n        with:\n          githubToken: ${{ secrets.GITHUB_TOKEN }}\n          compressOnly: true\n      - name: Create New Pull Request If Needed\n        if: steps.calibre.outputs.markdown != ''\n        uses: peter-evans/create-pull-request@v4\n        with:\n          title: Compressed Images\n          branch-suffix: timestamp\n          commit-message: Compressed Images\n          body: ${{ steps.calibre.outputs.markdown }}\n```\n\n----------------------------------------\n\nTITLE: Configuring On-Demand and Scheduled Image Compression with PR Creation\nDESCRIPTION: A GitHub Actions workflow that runs image compression on demand or on a schedule, and automatically creates a new Pull Request if any images can be compressed. Uses create-pull-request action as a companion.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\n# Compress images on demand (workflow_dispatch), and at 11pm every Sunday (schedule).\n# Open a Pull Request if any images can be compressed.\nname: Compress Images\non:\n  workflow_dispatch:\n  schedule:\n    - cron: '00 23 * * 0'\njobs:\n  build:\n    name: calibreapp/image-actions\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@v3\n      - name: Compress Images\n        id: calibre\n        uses: calibreapp/image-actions@main\n        with:\n          githubToken: ${{ secrets.GITHUB_TOKEN }}\n          compressOnly: true\n      - name: Create New Pull Request If Needed\n        if: steps.calibre.outputs.markdown != ''\n        uses: peter-evans/create-pull-request@v4\n        with:\n          title: Compressed Images Nightly\n          branch-suffix: timestamp\n          commit-message: Compressed Images\n          body: ${{ steps.calibre.outputs.markdown }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Quality Settings for Calibre Image Actions\nDESCRIPTION: Configuration options for controlling image compression settings in Calibre Image Actions. These settings allow customization of quality levels for different image formats.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nwith:\n  jpegQuality: '80'\n  jpegProgressive: false\n  pngQuality: '80'\n  webpQuality: '80'\n```\n\n----------------------------------------\n\nTITLE: Updated Image Actions Configuration Syntax\nDESCRIPTION: This YAML snippet demonstrates the recommended syntax for configuring calibreapp/image-actions, using the 'with' parameter for passing GitHub token instead of environment variables.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Compress Images\n  uses: calibreapp/image-actions@main\n  with:\n    githubToken: ${{ secrets.GITHUB_TOKEN }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Exclusions in Calibre Image Actions\nDESCRIPTION: Configuration for ignoring specific paths when running image compression. This uses a comma-separated string with globbing support to exclude paths like node_modules or build directories.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\nwith:\n  ignorePaths: 'node_modules/**,build'\n```\n\n----------------------------------------\n\nTITLE: Generating Image Optimization Results Table with EJS in Markdown\nDESCRIPTION: EJS template embedded in Markdown that generates a summary table of image compression results. It shows overall savings and detailed statistics for each optimized image including filename, before/after sizes, improvement percentage, and links to visual comparisons.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/markdown-templates/inline-pr-comment-with-diff.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown+ejs\nCODE:\n```\nImages automagically compressed by [Calibre](https://calibreapp.com)'s [image-actions](https://github.com/marketplace/actions/image-actions) âœ¨\n\nCompression reduced images by <strong><%- overallPercentageSaved %>%</strong>, saving <strong><%- overallBytesSaved %></strong>.\n\n| Filename | Before | After | Improvement | Visual comparison |\n| -------- | ------ | ----- | ----------- | ----------------- |\n<% optimisedImages.forEach((image) => { -%>\n| <code><%- image.name %></code> | <%- image.formattedBeforeStats %> | <%- image.formattedAfterStats %> | <%- image.formattedPercentChange %> | [View diff](<%- image.diffUrl %>) |\n<% }); %>\n\n<% if(unoptimisedImages.length) { -%>\n<%- unoptimisedImages.length %> <%- unoptimisedImages.length > 1 ? 'images' : 'image' %> did not require optimisation.\n<% } %>\n```\n\n----------------------------------------\n\nTITLE: Generating Image Compression Report with EJS Template\nDESCRIPTION: An EJS template that creates a markdown report showing image compression statistics. It displays the overall compression percentage, total bytes saved, and a table comparing before/after sizes for each processed image. Also includes a note about any unoptimized images.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/markdown-templates/pr-comment.md#2025-04-23_snippet_0\n\nLANGUAGE: ejs\nCODE:\n```\nImages automagically compressed by [Calibre](https://calibreapp.com)'s [image-actions](https://github.com/marketplace/actions/image-actions) âœ¨\n\nCompression reduced images by <strong><%- overallPercentageSaved %>%</strong>, saving <strong><%- overallBytesSaved %></strong>.\n\n| Filename | Before | After | Improvement |\n| -------- | ------ | ----- | ----------- |\n<% optimisedImages.forEach((image) => { -%>\n| <code><%- image.name %></code> | <%- image.formattedBeforeStats %> | <%- image.formattedAfterStats %> | <%- image.formattedPercentChange %> |\n<% }); %>\n\n<% if(unoptimisedImages.length) { -%>\n<%- unoptimisedImages.length %> <%- unoptimisedImages.length > 1 ? 'images' : 'image' %> did not require optimisation.\n<% } %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Compression-Only Mode in Calibre Image Actions\nDESCRIPTION: Configuration for running Image Actions in compression-only mode, which skips adding the optimized images to the Pull Request and posting a summary comment. Useful for custom workflows.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\nwith:\n  compressOnly: true\n```\n\n----------------------------------------\n\nTITLE: Running Docker Build for Testing\nDESCRIPTION: Command to build a Docker image for testing Calibre Image Actions locally before submitting a pull request. Tags the image as dev version.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t calibreapp/image-actions:dev .\n```\n\n----------------------------------------\n\nTITLE: Creating a Git Branch for Contributions\nDESCRIPTION: Example of the Git command to create a new branch for contribution purposes. This is part of the pull request workflow process.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b my-branch-name\n```\n\n----------------------------------------\n\nTITLE: Legacy Image Actions Configuration Example for Migration\nDESCRIPTION: This snippet shows the old style of configuration for calibreapp/image-actions using Docker and environment variables, which should be updated to the newer syntax using 'with' parameters and direct action reference.\nSOURCE: https://github.com/calibreapp/image-actions/blob/main/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- name: calibreapp/image-actions\n    uses: docker://calibreapp/github-image-actions\n    env:\n      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```"
  }
]
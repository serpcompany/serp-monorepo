[
  {
    "owner": "starship",
    "repo": "starship",
    "content": "TITLE: Installing Starship via Package Managers\nDESCRIPTION: Various package manager commands for installing Starship across different Linux distributions and package managers.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install starship\n```\n\nLANGUAGE: sh\nCODE:\n```\ncargo install starship --locked\n```\n\nLANGUAGE: sh\nCODE:\n```\ndnf copr enable atim/starship\\ndnf install starship\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Fish\nDESCRIPTION: Add this command to ~/.config/fish/config.fish to initialize Starship for Fish shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_5\n\nLANGUAGE: fish\nCODE:\n```\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Defining Standard Prompt Format in Starship\nDESCRIPTION: A comprehensive format string that defines the default Starship prompt layout, including all available modules that can be displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Linux and macOS\nDESCRIPTION: This command downloads and runs the Starship installation script for Linux and macOS systems. It uses curl to fetch the script and pipes it to sh for execution.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Default Starship Prompt Format Configuration in TOML\nDESCRIPTION: The default format configuration for the Starship prompt, showing all available modules in their default order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$netns\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Cmd with Clink\nDESCRIPTION: Lua script to initialize Starship in Windows Command Prompt using Clink. Create this file at %LocalAppData%\\clink\\starship.lua to enable Starship with Cmd.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship\nDESCRIPTION: Example configuration for the Swift module in Starship prompt, showing how to customize the format and style for displaying the Swift programming language version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_107\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Modules in Starship TOML\nDESCRIPTION: This TOML configuration demonstrates how to set up custom modules in Starship. It includes examples for creating a 'foo' module that echoes text and a 'time' module that displays the current time using different shell commands.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_116\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module Appearance in Starship\nDESCRIPTION: Example configuration for the Nix-shell module in Starship prompt, customizing messages for different shell states and changing the symbol and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Basic Starship TOML Configuration Example\nDESCRIPTION: Sample TOML configuration for starship showing how to add a schema reference, insert blank lines between prompts, customize the prompt character, and disable a module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Nushell\nDESCRIPTION: Add these commands to your Nushell configuration file to initialize Starship for Nushell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Shell Script\nDESCRIPTION: Command to download and install the latest version of Starship using a shell script. This method works across various Unix-like operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Basic Starship Configuration in TOML Format\nDESCRIPTION: Example TOML configuration for Starship showing schema definition, newline settings, character symbol customization, and module disabling options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Example Custom Module Configurations in Starship\nDESCRIPTION: Provides examples of different custom module configurations in Starship, demonstrating various options including command execution, detection filters, conditional display, and shell configuration for different environments.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_118\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Shell Script\nDESCRIPTION: Command to install the latest version of Starship using a shell script. This downloads and executes the installation script from the Starship website.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship Prompt\nDESCRIPTION: A TOML configuration example for customizing the Shell module in Starship prompt. This example enables the normally disabled shell module, customizes the fish and powershell indicators, sets a fallback for unknown shells, and changes the display style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_99\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship Config File\nDESCRIPTION: Creates the default configuration directory and empty config file for Starship\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Default Starship Prompt Format Configuration\nDESCRIPTION: The default prompt format configuration showing all available modules and their ordering in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Fish\nDESCRIPTION: Command to initialize Starship in Fish shell. Add this to the end of your ~/.config/fish/config.fish file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_6\n\nLANGUAGE: fish\nCODE:\n```\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: Configuration example for the Deno runtime module in Starship prompt, showing custom formatting with green coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Default OS Symbols Configuration in Starship Prompt (TOML)\nDESCRIPTION: The default operating system symbols table used by the OS module in Starship prompt. It maps each supported operating system to a unique symbol for visual identification.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nBluefin = \"üêü \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Starship Debug Commands\nDESCRIPTION: Various commands for debugging Starship functionality including module testing and timing analysis\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\nenv STARSHIP_LOG=trace starship timings\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Linux/macOS via curl\nDESCRIPTION: Command to install the latest version of Starship shell prompt using curl and the official installation script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Using $all Shorthand in Starship Format\nDESCRIPTION: Example showing how to use the $all shorthand to extend the default format without duplicating modules. This moves the directory to the second line in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Move the directory to the second line\nformat = '$all$directory$character'\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Starship Prompt Format\nDESCRIPTION: Example of customizing the Starship prompt with a custom format, scan timeout, newline settings and color palette definitions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Starship Debug Commands\nDESCRIPTION: Various commands for debugging Starship, including module debugging, timing analysis, and bug reporting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\nenv STARSHIP_LOG=trace starship timings\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Shell Script\nDESCRIPTION: Downloads and installs the latest version of Starship using curl\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Basic Starship Configuration in TOML\nDESCRIPTION: Basic configuration example showing custom prompt format, scan timeout, newline settings and color palette definitions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Cmd with Clink\nDESCRIPTION: Lua script to initialize Starship in Windows Command Prompt using Clink (v1.2.30+). This should be saved as starship.lua in the Clink scripts directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\n-- starship.lua\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Fish\nDESCRIPTION: Initialization script for Fish shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/fish/config.fish\n\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module in Starship (TOML)\nDESCRIPTION: Configuration example for the git_branch module showing how to customize the branch symbol, truncation length, truncation symbol, and ignore specific branches in the prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Configuring Directory Path Substitutions in Starship with TOML\nDESCRIPTION: Example configuration for defining custom path substitutions in Starship's directory module. This allows replacing long path segments with shorter aliases to improve readability in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Default Prompt Format Configuration\nDESCRIPTION: The default format configuration for Starship prompt showing all available module placeholders and their order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Multi-line Formatting with Line Continuation in TOML\nDESCRIPTION: Example showing how to use line continuation in multi-line basic strings to format text across multiple lines without introducing line breaks in the actual value.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\nline1\\\nline1\\\nline1\nline2\\\nline2\\\nline2\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Elvish\nDESCRIPTION: Command to initialize Starship in Elvish shell (v0.18+). Add this to the end of your ~/.elvish/rc.elv file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Homebrew\nDESCRIPTION: Command to install Starship using the Homebrew package manager for macOS and Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbrew install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Starship Prompt Format in TOML\nDESCRIPTION: Example of customizing the Starship prompt format, including setting a custom layout, adjusting timeouts, and defining a custom color palette.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Basic Bash Integration Example for Starship\nDESCRIPTION: Shows how to integrate Starship with Bash shell by setting up the prompt with status code and job count.\nSOURCE: https://github.com/starship/starship/blob/master/docs/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship Cache Location\nDESCRIPTION: Setting custom cache directory for Starship logs across different shells\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Bash\nDESCRIPTION: Configuration snippet to add to the Bash shell configuration file (~/.bashrc) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.bashrc\n\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Nushell\nDESCRIPTION: Initialization script for Nushell configuration (v0.96+)\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Customizing Helm Module in Starship Configuration\nDESCRIPTION: Example TOML configuration for customizing the Helm module appearance in Starship prompt, setting a specific format with a bold white-colored version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module with Toml\nDESCRIPTION: This snippet configures the Git branch module in Starship, specifying parameters such as the symbol, truncation length, and branches to ignore. It aids in displaying the current branch name in a customized format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for PowerShell\nDESCRIPTION: PowerShell command to add to the profile script for initializing Starship in PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Package Managers\nDESCRIPTION: Installation commands for Homebrew and Winget package managers\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbrew install starship\n```\n\nLANGUAGE: powershell\nCODE:\n```\nwinget install starship\n```\n\n----------------------------------------\n\nTITLE: Basic Starship TOML Configuration\nDESCRIPTION: Example TOML configuration showing basic prompt customization including schema validation, newline settings, and module configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Installing Starship using Chocolatey on Windows\nDESCRIPTION: This command installs Starship using the Chocolatey package manager on Windows. Chocolatey must be pre-installed on the system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Zsh\nDESCRIPTION: This command initializes Starship for the Zsh shell. It should be added to the end of the ~/.zshrc file to enable Starship on shell startup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Multi-line String Examples in TOML for Starship\nDESCRIPTION: Examples showing how to use multi-line strings in starship TOML configuration, demonstrating both literal and basic multi-line strings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# with literal string\nformat = '''\n\n\\$'''\n\n# with multiline basic string\nformat = \"\"\"\n\n\\\\$\"\"\"\n\n# with basic string\nformat = \"\\n\\\\$\"\n```\n\n----------------------------------------\n\nTITLE: Directory Path Substitutions Configuration in TOML\nDESCRIPTION: Configuration example showing how to set up path substitutions in the directory module to replace long network paths with shorter aliases\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Indicators in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize various git status indicators like conflicted, ahead, behind, etc. in the Starship prompt configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Module in Starship (TOML)\nDESCRIPTION: Example configuration for customizing the git_status module in Starship prompt. It sets custom symbols for different git statuses and demonstrates how to show ahead/behind counts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Tcsh\nDESCRIPTION: Add this command to ~/.tcshrc to initialize Starship for Tcsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Default Prompt Format Configuration in Starship\nDESCRIPTION: The default format configuration for Starship prompt, showing all available modules in their default order. This can be overridden with custom formats.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Starship Configuration File with Shell Commands\nDESCRIPTION: Shell command to create the default Starship configuration directory and file at ~/.config/starship.toml.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Basic Starship TOML Configuration Example\nDESCRIPTION: Sample TOML configuration for Starship prompt showing schema reference, newline settings, character module customization, and module disabling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Xonsh\nDESCRIPTION: Configuration snippet to add to the Xonsh shell configuration file (~/.xonshrc) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.xonshrc\n\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Implementing Starship Prompt in Bash\nDESCRIPTION: A basic example of how to integrate Starship prompt into a Bash shell script. It captures the status code and number of background jobs before calling the Starship prompt command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Default Starship Prompt Format Configuration in TOML\nDESCRIPTION: Shows the complete default prompt format configuration that displays various system and development environment information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Chocolatey\nDESCRIPTION: Command to install Starship using the Chocolatey package manager on Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Hiding Hostname in Remote Tmux Sessions in Starship Prompt\nDESCRIPTION: Example TOML configuration for hiding the hostname in remote tmux sessions in Starship shell prompt. This snippet demonstrates using environment variable detection to control hostname visibility.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship\nDESCRIPTION: TOML configuration for customizing the Mercurial branch display in Starship prompt with custom format and truncation settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in PowerShell\nDESCRIPTION: Command to initialize Starship in PowerShell. Add this to the end of your PowerShell profile (found by running $PROFILE) to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for PowerShell\nDESCRIPTION: Add this command to your PowerShell profile to initialize Starship for PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Creating Starship Configuration File in Shell\nDESCRIPTION: This command creates the default Starship configuration file in the user's home directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Zsh\nDESCRIPTION: Initialization code for Zsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.zshrc\n\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Module in Starship\nDESCRIPTION: Provides configuration options for the AWS module in Starship, including format, symbol, region aliases, and profile aliases. It also explains how the module interacts with various AWS-related tools and environment variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)'\nsymbol = '‚òÅÔ∏è '\nregion_aliases = {}\nprofile_aliases = {}\nstyle = 'bold yellow'\nexpiration_symbol = 'X'\ndisabled = false\nforce_display = false\n```\n\n----------------------------------------\n\nTITLE: Installing Starship using Chocolatey in PowerShell\nDESCRIPTION: Command to install Starship prompt using the Chocolatey package manager on Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Complex Kubernetes Context Configuration in Starship Prompt\nDESCRIPTION: Provides advanced customization of Kubernetes context display using pattern matching and aliases. This example shows how to style and rename contexts from different providers like GKE.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\n# \"bold red\" style + default symbol when Kubernetes current context name equals \"production\" *and* the current user\n# equals \"admin_user\"\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\n# \"green\" style + a different symbol when Kubernetes current context name contains openshift\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\n# Using capture groups\n# Contexts from GKE, AWS and other cloud providers usually carry additional information, like the region/zone.\n# The following entry matches on the GKE format (`gke_projectname_zone_cluster-name`)\n# and renames every matching kube context into a more readable format (`gke-cluster-name`):\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Ion\nDESCRIPTION: Command to initialize Starship in Ion shell. Add this to the end of your ~/.config/ion/initrc file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux\nDESCRIPTION: This command downloads and runs the Starship installation script, specifying the binary directory for Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the git_branch module in Starship. It sets a custom symbol, truncation length, and ignores specific branches.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship Shell Prompt\nDESCRIPTION: Custom configuration for the PHP module in Starship prompt. This example modifies the format and styling of the PHP version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Zsh\nDESCRIPTION: Configuration lines to add to ~/.zshrc to initialize Starship in Zsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.zshrc\n\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Nushell\nDESCRIPTION: Commands to initialize Starship in Nushell v0.96 or higher by creating an autoload file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Performance with Timing Analysis\nDESCRIPTION: Command to analyze and display execution times of Starship modules, useful for identifying performance bottlenecks in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Custom Module Configuration Examples in Starship\nDESCRIPTION: Example configuration for custom modules in Starship's TOML configuration file, including a basic 'foo' module that runs an echo command, a 'time' module that uses PowerShell, and a 'time-as-arg' module that passes commands as arguments instead of stdin.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_113\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship with PowerShell\nDESCRIPTION: PowerShell command to initialize Starship in the PowerShell profile\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Customizing Starship Prompt with TOML Configuration\nDESCRIPTION: Example TOML configuration for customizing the Starship prompt with a custom format, setting scan timeout, disabling new lines, and defining custom color palettes.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: This TOML configuration demonstrates how to set up a minimal left prompt and move all other modules to the right prompt using Starship's 'right_format' option.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Module with Toml\nDESCRIPTION: This snippet facilitates the configuration of the Git status module in Starship, which displays the state of the repository. It also mentions performance considerations when running on Windows environments.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n// Configuration for Git status module.\n// Snippet not provided.\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Elvish\nDESCRIPTION: Initialization code for Elvish shell configuration (v0.18+ required)\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.elvish/rc.elv\n\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Default Starship Prompt Format Configuration\nDESCRIPTION: The default format configuration for Starship prompt showing all available modules and their ordering.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Display in Starship\nDESCRIPTION: TOML configuration for customizing how Starship displays container information when running inside a container environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Context-Specific Styles in Starship Prompt (TOML)\nDESCRIPTION: Sets up custom styles and aliases for specific Kubernetes contexts in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Package Managers\nDESCRIPTION: Installation commands for Homebrew and Winget package managers\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbrew install starship\n```\n\nLANGUAGE: powershell\nCODE:\n```\nwinget install starship\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Bash\nDESCRIPTION: Command to initialize Starship in Bash shell. Add this to the end of your ~/.bashrc file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in PowerShell\nDESCRIPTION: This snippet demonstrates how to enable and customize the transient prompt feature in PowerShell using Starship. It replaces the previous prompt with a custom string, in this case, the Starship character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship TOML\nDESCRIPTION: This TOML configuration demonstrates how to set up a minimal left prompt and move the rest of the prompt content to the right using Starship's right_format option.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Enabling TransientPrompt in Fish Shell\nDESCRIPTION: This Fish shell script demonstrates how to enable and customize the transient prompt feature using Starship. It defines functions to modify both left and right sides of the input prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\n\nfunction starship_transient_rprompt_func\n  starship module time\nend\n\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module in Starship (TOML)\nDESCRIPTION: This snippet shows the configuration for the git_state module in Starship. It customizes the format and sets a custom style for the cherry-pick state.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Tcsh\nDESCRIPTION: Initialization code for Tcsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.tcshrc\n\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship\nDESCRIPTION: This snippet shows how to configure the Azure module in Starship to display the subscription name. It sets the format, symbol, style, and enables the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Tracking Counters in Git Status\nDESCRIPTION: This configuration shows how to display ahead/behind counts for Git branches in the Starship prompt, visualizing how many commits the local branch is ahead or behind compared to its tracking branch.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Shape\nDESCRIPTION: Example configuration for customizing the vim mode indicator in the Character module. This sets a custom symbol for vim command mode.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship\nDESCRIPTION: Example configuration for customizing the Dart programming language version display in Starship shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for PowerShell\nDESCRIPTION: Configuration snippet to add to the PowerShell profile to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration Path with Environment Variable in Bash/Sh\nDESCRIPTION: Shell command to change the default Starship configuration file location using the STARSHIP_CONFIG environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Homebrew\nDESCRIPTION: Command to install Starship using the Homebrew package manager, commonly used on macOS and Linux systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nbrew install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Context in Starship\nDESCRIPTION: Customizes the Kubernetes prompt display with user and cluster information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to set up a minimal left prompt with all other modules moved to the right prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Extending Default Starship Prompt Format\nDESCRIPTION: Example showing how to extend the default prompt format by adding additional modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# Move the directory to the second line\nformat = '$all$directory$character'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the Kubernetes module in Starship prompt. It sets the format, enables the module, and defines custom styles for specific contexts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Zsh\nDESCRIPTION: Add this command to ~/.zshrc to initialize Starship for Zsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module Without Custom Error Shape\nDESCRIPTION: Example configuration for the Character module that only changes color based on command status. This keeps the same symbol shape but changes color based on command success.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Starship Prompt Format in TOML\nDESCRIPTION: Example configuration showing how to customize the Starship prompt format with custom colors, timing, and display options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for PowerShell\nDESCRIPTION: Initialization code for PowerShell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Modules in Starship (TOML)\nDESCRIPTION: Example configuration for custom modules in Starship prompt. Demonstrates how to set up custom commands, detection filters, and formatting options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt Function in Bash\nDESCRIPTION: This snippet demonstrates how to create a custom function that runs right before the prompt is drawn in Bash. It defines a function that prints a rocket emoji and assigns it to starship_precmd_user_func.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Prompt Format in Starship\nDESCRIPTION: Shows the default prompt format used by Starship when no custom format is provided. It includes a comprehensive list of modules that can be displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the plain text symbols preset for Starship. It specifies symbol replacements for various modules to use plain text instead of Unicode characters.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Use custom format\nformat = \"$all\"\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n[battery]\nfull_symbol = \"F\"\ncharging_symbol = \"C\"\ndischarging_symbol = \"D\"\nunknown_symbol = \"U\"\n\n[character]\nsuccess_symbol = \"[>](bold green)\"\nerror_symbol = \"[x](bold red)\"\n\n[directory]\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_branch]\nsymbol = \"git \"\n\n[git_status]\nstyle = \"bold blue\"\nformat = '[$all_status$ahead_behind]($style)'\n\nconflicted = \"=\"\nahead = \">\"\nbehind = \"<\"\ndiverged = \"<>\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\nrenamed = \"r\"\ndeleted = \"x\"\n\n[hostname]\nssh_only = false\nformat = \"[$hostname](bold blue) \"\ndisabled = false\n\n[julia]\nsymbol = \"julia \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[package]\nsymbol = \"pkg \"\n\n[python]\nsymbol = \"py \"\n\n[shlvl]\nsymbol = \"shlvl \"\n\n[swift]\nsymbol = \"swift \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Display in Starship Prompt (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the git status indicators in the Starship prompt. It shows how to set custom symbols for different git states like conflicts, ahead/behind, and file modifications.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Linux/macOS via curl\nDESCRIPTION: Downloads and installs the latest version of Starship using a shell script\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship\nDESCRIPTION: Example configuration for the status module in Starship prompt, showing how to customize the style, symbols, and format for displaying command exit statuses.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_105\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Branch Tracking Information in Starship (TOML)\nDESCRIPTION: This configuration snippet shows how to display the ahead/behind count of the tracked git branch in the Starship prompt. It uses variables to show the exact number of commits ahead or behind.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module in Starship\nDESCRIPTION: Example TOML configuration for the command duration module in Starship prompt. This customizes how long command execution times are displayed by setting a minimum time threshold of 500ms and changing the format text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Module for Starship in TOML\nDESCRIPTION: Configuration options for the AWS module in Starship, including format customization, symbol settings, and region/profile aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )]($style)'\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n[aws.profile_aliases]\nCompanyGroupFrobozzOnCallAccess = 'Frobozz'\n```\n\n----------------------------------------\n\nTITLE: Custom OS Module Configuration Example in Starship\nDESCRIPTION: Example configuration for the OS module in starship.toml that customizes the format, style, and symbols for specific operating systems. This demonstrates how to enable and personalize the OS module display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Elvish\nDESCRIPTION: Initialization script for Elvish shell configuration (v0.18+)\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.elvish/rc.elv\n\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape\nDESCRIPTION: TOML configuration for customizing the character module to show different symbols for success and error states. Uses distinct shapes (‚ûú for success, ‚úó for error) with color coding.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Profile Display in Starship Prompt\nDESCRIPTION: This snippet demonstrates how to configure the AWS module in Starship to display the current AWS profile with custom styling and profile aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$profile]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.profile_aliases]\nEnterprise_Naming_Scheme-voidstars = 'void**'\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module in Starship - Extensions\nDESCRIPTION: TOML configuration example disabling Python file extension detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Customizing Directory Truncation in Starship\nDESCRIPTION: Configuration example for the directory module that increases the truncation length to 8 directories and adds a custom truncation symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship\nDESCRIPTION: Example configurations for the sudo module in Starship prompt, showing how to customize the appearance when sudo credentials are cached, including a Windows-specific configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_106\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Display in Starship\nDESCRIPTION: Configuration for the status module that displays command execution status with colored symbols. Includes settings for success/failure indicators and formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with musl on Older Linux Systems\nDESCRIPTION: Command to install Starship using a musl-compiled binary for compatibility with older Linux distributions that have outdated glibc versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Customizing TransientPrompt with Character Module in Cmd\nDESCRIPTION: This code defines a custom transient prompt function for Cmd using Clink. It replaces the previous prompt with Starship's character module, taking into account the current keymap.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Nushell\nDESCRIPTION: Commands to initialize Starship in Nushell (v0.96+). Add these to your Nushell configuration file (found by running $nu.config-path) to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship with Catppuccin Powerline Preset\nDESCRIPTION: This TOML configuration sets up Starship prompt with Catppuccin Powerline preset. It defines various prompt segments, their styles, and uses the Catppuccin color palette.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/catppuccin-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n$directory\n$git_branch\n$git_state\n$git_status\n$cmd_duration\n$line_break\n$python\n$character\"\"\"\n\n[directory]\nstyle = \"bg:#1e1e2e fg:#cba6f7\"\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_branch]\nstyle = \"bg:#313244 fg:#b4befe\"\nformat = '[[ $symbol $branch ](bg:#313244 fg:#b4befe)]($style)'\n\n[git_status]\nstyle = \"bg:#313244 fg:#b4befe\"\nformat = '[[($all_status$ahead_behind )](bg:#313244 fg:#b4befe)]($style)'\n\n[git_state]\nstyle = \"bg:#313244 fg:#b4befe\"\nformat = '\\[[$state( $progress_current/$progress_total)]($style)\\]'\n\n[cmd_duration]\nstyle = \"bg:#45475a fg:#f9e2af\"\nformat = '[[ $duration ]($style)]($style)'\n\n[python]\nstyle = \"bg:#313244 fg:#89b4fa\"\nformat = '[[ $symbol ($version) ]($style)]($style)'\n\n[line_break]\nstyle = \"bg:#1e1e2e\"\n\n[character]\nstyle = \"bg:#1e1e2e\"\nsuccess_symbol = \"[](#cba6f7 bg:#1e1e2e)[](#cba6f7)\"\nerror_symbol = \"[](#f38ba8 bg:#1e1e2e)[](#f38ba8)\"\n\n[palettes.catppuccin_mocha]\nrosewater = \"#f5e0dc\"\nflamingo = \"#f2cdcd\"\npink = \"#f5c2e7\"\nmauve = \"#cba6f7\"\nred = \"#f38ba8\"\nmaroon = \"#eba0ac\"\npeach = \"#fab387\"\nyellow = \"#f9e2af\"\ngreen = \"#a6e3a1\"\nteal = \"#94e2d5\"\nsky = \"#89dceb\"\nsapphire = \"#74c7ec\"\nblue = \"#89b4fa\"\nlavender = \"#b4befe\"\ntext = \"#cdd6f4\"\nsubtext1 = \"#bac2de\"\nsubtext0 = \"#a6adc8\"\noverlay2 = \"#9399b2\"\noverlay1 = \"#7f849c\"\noverlay0 = \"#6c7086\"\nsurface2 = \"#585b70\"\nsurface1 = \"#45475a\"\nsurface0 = \"#313244\"\nbase = \"#1e1e2e\"\nmantle = \"#181825\"\ncrust = \"#11111b\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Bash\nDESCRIPTION: Add this command to ~/.bashrc to initialize Starship for Bash shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Starship Prompt Format\nDESCRIPTION: Example configuration showing how to customize the Starship prompt format, timeout settings, newline behavior and color palettes using TOML configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Starship Integration\nDESCRIPTION: PowerShell profile configuration to enable Starship with window title customization via pre-command hook.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Right Prompt Configuration in Starship\nDESCRIPTION: TOML configuration for setting up right-aligned prompt format in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Um prompt m√≠nimo √† esquerda\nformat = \"\"\"$character\"\"\"\n\n# movw o restante do prompt para a direita\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Display in Starship Prompt (TOML)\nDESCRIPTION: This snippet shows how to customize the appearance of Git status information in the Starship prompt. It includes options for modifying symbols used for different Git states and formatting the overall display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Testing Unicode Glyph Support\nDESCRIPTION: Commands to test system support for Unicode glyphs and emoji characters.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring .NET Module in Starship\nDESCRIPTION: TOML configuration example for the dotnet module in Starship prompt. This customizes the symbol and style and disables the heuristic version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux using curl\nDESCRIPTION: This command downloads and runs the Starship installation script, specifying the binary directory for Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on CentOS 7+ via Copr\nDESCRIPTION: These commands enable the Copr repository for Starship and then install it using dnf on CentOS 7 and later versions.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndnf copr enable atim/starship\ndnf install starship\n```\n\n----------------------------------------\n\nTITLE: Analyzing Starship Performance\nDESCRIPTION: Command to output timing information for Starship modules to identify performance bottlenecks.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: Configuration example for the docker_context module in Starship prompt, customizing the format and appearance of Docker context information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the Azure module in Starship to display the subscription name. It sets the format, symbol, style, and enables the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics Module in Starship (TOML)\nDESCRIPTION: Configuration example for the git_metrics module showing how to customize the display style for added and deleted lines in the git repository.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Winget\nDESCRIPTION: Command to install Starship using the Winget package manager for Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nwinget install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Bash\nDESCRIPTION: Initialization code for Bash shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.bashrc\n\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Directory Module Truncation Configuration in TOML\nDESCRIPTION: Example configuration for customizing directory path truncation in Starship prompt. Sets the truncation length to 8 and adds a custom truncation symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Specific Kubernetes Settings in Starship (TOML)\nDESCRIPTION: Defines custom styles and aliases for specific Kubernetes contexts in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuraci√≥n b√°sica de Starship en TOML\nDESCRIPTION: Ejemplo de configuraci√≥n TOML para Starship que incluye la adici√≥n de una nueva l√≠nea, personalizaci√≥n del s√≠mbolo del prompt y desactivaci√≥n del m√≥dulo de paquetes.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Obtener terminaciones del editor basado en el esquema de configuraci√≥n\n\"$schema\" = 'https://starship.rs/config-schema. son'\n\n# Inserta una l√≠nea en blanco entre las instrucciones del int√©rprete de comandos\nadd_newline = true\n\n# Reemplaza el s√≠mbolo '‚ùØ' en el prompt con ''‚ûú'\n[character] # El nombre del m√≥dulo que estamos configurando es 'character'\nsuccess_symbol = '[‚ûú](bold green)' # El segmento 'success_symbol' se est√° configurando en '‚ûú'  con el color 'bold green'\n\n# Desactiva el m√≥dulo del paquete, ocult√°ndolo del prompt completamente\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: This snippet demonstrates how to configure a minimal left prompt with the main character while moving all other prompt elements to the right side using Starship's right_format option.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship Shell Prompt (TOML)\nDESCRIPTION: Example configuration for the sudo module in Starship shell prompt, which displays when sudo credentials are cached. Shows how to customize the appearance and enable the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship Shell Prompt (TOML)\nDESCRIPTION: Example configuration for the status module in Starship shell prompt, showing how to customize the appearance and behavior of command status reporting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_100\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: TOML String Format Examples for Starship\nDESCRIPTION: Examples of different TOML string formats used in starship configuration, including literal strings, regular strings, and escaping Starship symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# literal string\nformat = '‚ò∫\\‚òª '\n\n# regular string\nformat = \"‚ò∫\\\\‚òª \"\n\n# escaping Starship symbols\nformat = '\\[\\$\\] '\n```\n\n----------------------------------------\n\nTITLE: Configuring Jetpack Preset for Starship in TOML\nDESCRIPTION: This TOML configuration sets up the Jetpack preset for Starship prompt. It defines the format and appearance of various prompt elements including the command duration, directory, git branch, and more. The preset uses the terminal's color theme and requires a shell with right-prompt support.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$cmd_duration$character\"\nright_format = \"$time \"\n\n[character]\nsuccess_symbol = \"[‚ùØ](bold)\"\nerror_symbol = \"[‚ùØ](bold red)\"\nvimcmd_symbol = \"[‚ùÆ](bold green)\"\n\n[directory]\ntruncation_length = 3\ntruncate_to_repo = false\nformat = \"[$path]($style)[$read_only]($read_only_style) \"\n\n[git_branch]\nformat = \"[$symbol$branch]($style) \"\nsymbol = \"\"\nstyle = \"bold #d79921\"\n\n[time]\ndisabled = false\nformat = '[$time]($style) '\ntime_format = \"%R\"\nstyle = \"bold #7c6f64\"\n\n[cmd_duration]\nformat = \"[$duration]($style) \"\nstyle = \"bold #fe8019\"\n\n[memory_usage]\nformat = \"$symbol[$ram( | $swap)]($style) \"\nthreshold = 70\nstyle = \"bold dimmed #a89984\"\nsymbol = \"\"\n\n[battery]\nfull_symbol = \"‚Ä¢\"\ncharging_symbol = \"‚á°\"\ndischarging_symbol = \"‚á£\"\nunknown_symbol = \"?\"\nempty_symbol = \"!\"\n\n[[battery.display]]\nthreshold = 10\nstyle = \"bold red\"\n\n[gradle]\nformat = \"[$symbol($version )]($style)\"\n\n[java]\nformat = \"[$symbol($version )]($style)\"\n\n[kotlin]\nformat = \"[$symbol($version )]($style)\"\n\n[nodejs]\nformat = \"[$symbol($version )]($style)\"\n\n[php]\nformat = \"[$symbol($version )]($style)\"\n\n[python]\nformat = \"[$symbol($version )]($style)\"\n\n[ruby]\nformat = \"[$symbol($version )]($style)\"\n\n[rust]\nformat = \"[$symbol($version )]($style)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Fish\nDESCRIPTION: Initialization code for Fish shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/fish/config.fish\n\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: The complete TOML configuration file for the Jetpack preset defining all module settings, format strings, and styling preferences. This configuration creates the minimalist Jetpack prompt appearance with left and right prompt components.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Increase command timeout\ncommand_timeout = 5000\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Set 'jetpack' as custom color palette\npalette = 'jetpack'\n\n# Define 'jetpack' color palette\n[palettes.jetpack]\n# Override the default color for specific color names\nblue = '#569CD6'\npurple = '#C586C0'\ngreen = '#6A9955'\nred = '#D16969'\nyellow = '#DCDCAA'\ncyan = '#4EC9B0'\nbright-green = '#4EC9B0'\nbright-purple = '#B267E6'\nblack = '#001100'\nwhite = '#E5E5E5'\n\n# Make prompt a single line instead of two lines\n[line_break]\ndisabled = true\n\n# Replace the \"‚ùØ\" symbol in the prompt with \"‚ûú\"\n[character] # The name of the module we are configuring is \"character\"\nsuccess_symbol = \"[](green)\" # The \"success_symbol\" segment is being set to \"‚ûú\" with the color \"bold green\"\nerror_symbol = \"[](red)\"\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n\n# shows current directory\n[directory]\nstyle = \"bright-green\"\nread_only = \" \"\nformat = \"[ $path ]($style)$read_only\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_branch]\nformat = '[ $symbol$branch ]($style)'\ntruncation_length = 4\ntruncation_symbol = ''\nsymbol = \"\"\nstyle = \"bright-purple\"\n\n[git_commit]\ntag_symbol = \" üè∑ \"\n\n[git_status]\nformat = '[$all_status$ahead_behind ]($style)'\nstyle = \"purple\"\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\ndeleted = \"‚úò\"\nrenamed = \"¬ª\"\n\n[git_state]\nrebase = \"REBASE\"\nmerge = \"MERGE\"\ncherrypick = \"CHERRY-PICK\"\n\n[rust]\nformat = \"[ $symbol ]($style)\"\nstyle = \"red\"\n\n[nodejs]\nformat = \"[ $symbol ]($style)\"\nstyle = \"yellow\"\n\n[docker_context]\nformat = \"[ $symbol $context ](cyan)\"\nsymbol = \"·ê©\"\nsocial_contract = \"yes\"\nonly_with_files = true\n\n[sudo]\nformat = \"[$symbol]($style)\"\nstyle = \"yellow\"\nsymbol = \"üë©‚Äçüíª \"\n\n[time]\nformat = '[  $time ]($style)'\ntime_format = \"%T\"\ndisabled = true\nstyle = \"bright-purple\"\n\n[username]\nformat = \"[ $user]($style)@\"\nstyle_user = \"bright-purple\"\nshow_always = false\n\n[hostname]\nssh_only = false\nformat = \"[$hostname ]($style)\"\ndisabled = false\nstyle = \"bright-purple\"\ntrim_at = \"-jetpack\"\n\n[cmd_duration]\nformat = \"[ $duration ]($style)\"\nstyle = \"yellow\"\n\n[aws]\nsymbol = \"  \"\n\n[buf]\nsymbol = \" \"\n\n[c]\nsymbol = \" \"\n\n[conda]\nsymbol = \" \"\n\n[crystal]\nsymbol = \" \"\n\n[dart]\nsymbol = \" \"\n\n[elixir]\nsymbol = \" \"\n\n[elm]\nsymbol = \" \"\n\n[golang]\nsymbol = \" \"\n\n[guix_shell]\nsymbol = \" \"\n\n[haskell]\nsymbol = \" \"\n\n[haxe]\nsymbol = \" \"\n\n[java]\nsymbol = \" \"\n\n[julia]\nsymbol = \" \"\n\n[lua]\nsymbol = \" \"\n\n[meson]\nsymbol = \"Âñù \"\n\n[nim]\nsymbol = \" \"\n\n[nix_shell]\nsymbol = \" \"\n\n[ocaml]\nsymbol = \" \"\n\n[perl]\nsymbol = \" \"\n\n[php]\nsymbol = \" \"\n\n[python]\nsymbol = \" \"\n\n[rlang]\nsymbol = \"Ô≥í \"\n\n[ruby]\nsymbol = \" \"\n\n[scala]\nsymbol = \" \"\n\n[swift]\nsymbol = \" \"\n\n[zig]\nsymbol = \" \"\n\n[memory_usage]\nsymbol = \" \"\n\n[format]\nright_prompt = \"$time\"\n\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration for the Jetpack preset, defining prompt formatting and behavior.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/jetpack.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Prompt Format in Starship (v0.45.0+)\nDESCRIPTION: Example of how to configure the prompt format in Starship version 0.45.0 and later using the format string in TOML.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Context Pattern Configuration\nDESCRIPTION: Complex configuration example showing how to customize Kubernetes context display using pattern matching and aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Basic Bash Integration for Starship Prompt\nDESCRIPTION: A simple example of integrating Starship with Bash shell by capturing status code and job count, then using them as parameters when calling the starship prompt command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Starship String Format Examples\nDESCRIPTION: Examples of different string formatting options in Starship TOML configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# literal string\nformat = '‚ò∫\\‚òª '\n\n# regular string\nformat = \"‚ò∫\\\\‚òª \"\n\n# escaping Starship symbols\nformat = '\\[\\$\\] '\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship Prompt in PowerShell\nDESCRIPTION: This PowerShell code sets up the Starship prompt by defining a pre-command function to update the window title and initializing Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration for Starship\nDESCRIPTION: This TOML configuration file defines the Pure preset for Starship. It sets up various prompt modules and their appearance to emulate the Pure prompt style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Use custom format\nformat = \"\"\"\n$directory\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_status\\\n$cmd_duration\\\n$character\\\n\"\"\"\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\npurple = '#5E2750'\nwhite = '#FFFFFF'\n\n[character]\nsuccess_symbol = '[‚ùØ](purple)'\nerror_symbol = '[‚ùØ](red)'\nvimcmd_symbol = '[‚ùÆ](green)'\n\n[directory]\nstyle = 'purple'\n\n[git_branch]\nformat = '[$branch]($style)'\nstyle = 'bright-black'\n\n[git_status]\nformat = '[[(*$conflicted$untracked$modified$staged$renamed$deleted)](218) ($ahead_behind$stashed)]($style)'\nstyle = 'cyan'\nconflicted = '‚Äã'\nuntracked = '‚Äã'\nmodified = '‚Äã'\nstaged = '‚Äã'\nrenamed = '‚Äã'\ndeleted = '‚Äã'\nstashed = '‚â°'\n\n[git_state]\nformat = '\\([$state( $progress_current/$progress_total)]($style)\\) '\nstyle = 'bright-black'\n\n[cmd_duration]\nformat = '[$duration]($style)'\nstyle = 'yellow'\n\n[python]\nsymbol = ''\n\n[nodejs]\nsymbol = ''\n\n[ruby]\nsymbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Module in Starship\nDESCRIPTION: Custom format configuration for displaying Erlang version information in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[erlang]\nformat = 'via [e $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version Display\nDESCRIPTION: Lightweight configuration for the Pulumi module that omits version information for better performance. Only shows the stack name with a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Zsh\nDESCRIPTION: Configuration snippet to add to the Zsh shell configuration file (~/.zshrc) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.zshrc\n\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Starship Prompt Format in TOML\nDESCRIPTION: Example showing how to customize the Starship prompt format with custom colors, timing settings, and color palette definitions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Set 'foo' as custom color palette\npalette = 'foo'\n\n# Define custom colors\n[palettes.foo]\n# Overwrite existing color\nblue = '21'\n# Define new color\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Configuring Conda Environment Display in Starship\nDESCRIPTION: Example TOML configuration for the Conda module in Starship prompt. This customizes how Conda environments are displayed by changing the format to use a dimmed green color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Username Module in Starship\nDESCRIPTION: Configuration example for the Username module in Starship prompt. This customizes styles for root and regular users, changes the format, ensures the module is always displayed, and creates an alias for a system username.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_111\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[username]\nstyle_user = 'white bold'\nstyle_root = 'black bold'\nformat = 'user: [$user]($style) '\ndisabled = false\nshow_always = true\naliases = { \"corpuser034g\" = \"matchai\" }\n```\n\n----------------------------------------\n\nTITLE: Directory Truncation Configuration in TOML\nDESCRIPTION: Example configuration for customizing directory path truncation settings in Starship, including truncation length and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Truncation Options in Starship Configuration\nDESCRIPTION: Example configuration for customizing how directory paths are truncated in the Starship prompt. This sets the maximum length of displayed paths and defines a truncation symbol to indicate shortened paths.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module in Starship\nDESCRIPTION: Provides configuration options for the Azure module in Starship, including format, symbol, style, and subscription aliases. It explains how to display the current Azure Subscription or username.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[azure]\ndisabled = true\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\nsubscription_aliases = {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship Prompt\nDESCRIPTION: Example configuration for the Nix-shell module in Starship prompt. This disables the module and customizes messages for pure, impure, and unknown shell states with colored formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship Without Sudo\nDESCRIPTION: This command installs Starship to a user-writable directory without requiring sudo privileges.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- -b ~/.local/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to customize the continuation prompt that appears for incomplete statements.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Directory Truncation Configuration in TOML\nDESCRIPTION: Example configuration for customizing directory path truncation behavior in Starship prompt, setting truncation length and symbol\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Extended Default Format Configuration\nDESCRIPTION: Example showing how to extend the default format by moving the directory to the second line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# Move the directory to the second line\nformat = '$all$directory$character'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Azure module display in Starship prompt, including options for subscription name, username, and aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Nushell\nDESCRIPTION: Configuration snippet to configure Starship for Nushell (v0.96+). This creates the necessary directory and saves the initialization script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Context-Specific Styling in Starship\nDESCRIPTION: Sets up context-specific styling and aliases for different Kubernetes environments, including production and OpenShift clusters.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\n# \"bold red\" style + default symbol when Kubernetes current context name equals \"production\" *and* the current user\n# equals \"admin_user\"\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\n# \"green\" style + a different symbol when Kubernetes current context name contains openshift\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\n# Using capture groups\n# Contexts from GKE, AWS and other cloud providers usually carry additional information, like the region/zone.\n# The following entry matches on the GKE format (`gke_projectname_zone_cluster-name`)\n# and renames every matching kube context into a more readable format (`gke-cluster-name`):\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the command duration module in Starship. It sets a minimum time threshold and customizes the format of the duration display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship using Nix package manager\nDESCRIPTION: Command to install Starship imperatively using the Nix package manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Creating Starship Configuration File with Shell Commands\nDESCRIPTION: Command to create the default configuration directory and an empty configuration file for starship at ~/.config/starship.toml.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Module with Command and File Detection\nDESCRIPTION: Example of a custom module that runs a command, checks for specific files, and applies conditional rendering based on working directory\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n[custom.foo]\ncommand = 'echo foo'\ndetect_files = ['foo']\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring the Rust Module in Starship\nDESCRIPTION: Configuration example for customizing the Rust module in Starship prompt, changing the format and appearance of the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Config Path in Shell\nDESCRIPTION: Environment variable configuration for custom Starship config file location in different shells\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship to Hide Runtime Versions\nDESCRIPTION: This TOML configuration for Starship disables the display of version information for various language runtimes and tools. It sets the 'disabled' flag to true for each runtime module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndisabled = true\n\n[php]\ndisabled = true\n\n[ruby]\ndisabled = true\n\n[java]\ndisabled = true\n\n[kotlin]\ndisabled = true\n\n[golang]\ndisabled = true\n\n[python]\ndisabled = true\n\n[rust]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to set up a minimal left prompt with right-aligned content.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module with Version in Starship\nDESCRIPTION: Configuration example for the Terraform module in Starship prompt that includes the Terraform version. This sets a custom format with an emoji and displays both version and workspace information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_108\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module with Toml\nDESCRIPTION: This snippet configures the Git state module in Starship, which reflects the current state of the repository during operations such as rebasing or merging. The settings allow formatting of the displayed state and progress information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current/$progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Directory Truncation Configuration in TOML\nDESCRIPTION: Basic configuration example for customizing directory path truncation length and symbol in Starship's directory module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Pastel Powerline Preset Configuration for Starship\nDESCRIPTION: The complete TOML configuration for the Pastel Powerline preset, which provides a colorful powerline-style prompt with various modules and customizations.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pastel-powerline.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Bash\nDESCRIPTION: Initialization script for Bash shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.bashrc\n\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Shell module in Starship prompt. Customizes indicators for different shells, sets cyan bold styling, and enables the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Xonsh\nDESCRIPTION: Initialization code for Xonsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.xonshrc\n\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Chocolatey on Windows\nDESCRIPTION: Command to install Starship prompt using the Chocolatey package manager on Windows systems. Requires Chocolatey to be installed first from their installation page.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Cmd using Clink\nDESCRIPTION: This Lua script initializes Starship for the Windows Command Prompt using Clink. It should be saved in the specified file path to enable Starship in Cmd.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module with Repeat Character in Starship Prompt\nDESCRIPTION: Example showing how to use the SHLVL module with repeat and repeat_offset options to create a multi-character prompt (‚ùØ‚ùØ‚ùØ) where characters are provided by the shell level.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape\nDESCRIPTION: Customizes the success and error symbols for the character module in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Using Hostname Aliases in Starship Prompt\nDESCRIPTION: Example TOML configuration for replacing the system hostname with a nickname in Starship shell prompt. This snippet shows how to map a device name to a more user-friendly alias.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientRightPrompt in Cmd to Display Time Module\nDESCRIPTION: Lua code for Cmd shell that customizes the right side of the transient prompt to display Starship's time module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nix-shell environment display with custom messages and format\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Creating Starship Configuration File in Bash\nDESCRIPTION: Creates the default Starship configuration file in the user's home directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics Module with Toml\nDESCRIPTION: This snippet sets the configuration for the Git metrics module, enabling tracking of added and deleted lines in the repository. It provides options to format the output and customize styles for the metrics displayed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Directory Module Configuration Example\nDESCRIPTION: Example configuration for the directory module in Starship, showing how to set truncation length and symbol\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Basic PowerShell Shell Configuration in Starship\nDESCRIPTION: Simple example showing the minimal configuration needed for using PowerShell as a custom shell in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\nshell = ['pwsh', '-Command', '-']\n```\n\n----------------------------------------\n\nTITLE: Configuring the Sudo Module in Starship with TOML\nDESCRIPTION: Example configuration for the Sudo module in Starship that changes the style and symbol for sudo credential status. This enables the module which is disabled by default.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds in Starship\nDESCRIPTION: This snippet shows how to set up different display styles and symbols for various battery level thresholds in the Starship battery module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]] # 'bold yellow' style and üí¶ symbol when capacity is between 10% and 30%\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n\n# when capacity is over 30%, the battery indicator will not be displayed\n```\n\n----------------------------------------\n\nTITLE: Installing prerequisites for Starship in Termux\nDESCRIPTION: Command to install the getconf package required by Starship in the Termux environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Tokyo Night Preset Configuration File\nDESCRIPTION: Complete TOML configuration for the Tokyo Night preset that defines the color scheme, symbols, and module settings for Starship prompt customization. The configuration includes specific color codes and formatting inspired by the Tokyo Night VSCode theme.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/tokyo-night.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/tokyo-night.toml\n```\n\n----------------------------------------\n\nTITLE: Customizing Git Status Indicators in Starship Prompt with TOML\nDESCRIPTION: Example configuration that customizes the git status indicators in Starship prompt, replacing default symbols with emojis for better visualization of repository status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Conditionally Showing Kubernetes Module in Starship Prompt\nDESCRIPTION: Configures the Kubernetes module to only display when specific files are detected in the current directory. This example enables the module only when a 'k8s' file is present.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Module in Starship with Aliases\nDESCRIPTION: Configuration example for the AWS module that customizes the format, style, and symbol, and defines region and profile aliases for more readable display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )]($style)'\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n[aws.profile_aliases]\nCompanyGroupFrobozzOnCallAccess = 'Frobozz'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Fish\nDESCRIPTION: Configuration snippet to add to the Fish shell configuration file (~/.config/fish/config.fish) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/fish/config.fish\n\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship\nDESCRIPTION: This snippet shows how to configure the Azure module in Starship to display the subscription name. It disables the default configuration, sets a custom format, symbol, and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Directory Module Path Substitution Configuration in TOML\nDESCRIPTION: Configuration example showing how to set up path substitutions in the directory module. Demonstrates replacing long network paths and Java development directories with shorter aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Module with Trace Logging\nDESCRIPTION: Command to enable trace-level logging for a specific Starship module for debugging purposes, showing detailed output from just that module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Module with Trace Logs\nDESCRIPTION: Command to enable trace-level logging for a specific module in Starship, helpful for debugging unexpected behavior in that module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-prompt Commands in Bash\nDESCRIPTION: Implements custom pre-prompt functionality in Bash to display a rocket symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration for the Jetpack preset defining the prompt layout, symbols, and formatting. Uses terminal color theme and supports right prompt functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$cmd_duration$time\"\nadd_newline = false\n\n[character]\nsuccess_symbol = \"[>](bold)\"\nerror_symbol = \"[x>](bold red)\"\nvimcmd_symbol = \"[<](bold green)\"\nvimcmd_replace_one_symbol = \"[<](bold purple)\"\nvimcmd_replace_symbol = \"[<](bold purple)\"\nvimcmd_visual_symbol = \"[<](bold yellow)\"\n\n[directory]\ntruncation_length = 3\ntuncation_symbol = \"‚Ä¶/\"\nread_only = \" ro\"\nread_only_style = \"red\"\nformat = \"[$path]($style)[$read_only]($read_only_style)\"\n\n[git_branch]\nformat = \" [$symbol$branch]($style)\"\nsymbol = \"\"\nstyle = \"bright-black\"\n\n[git_status]\nformat = \"( [$all_status$ahead_behind]($style))\"\nstyle = \"bright-black\"\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstashed = \"$\"\nmodified = \"!\"\nstaged = \"+\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\n\n[cmd_duration]\nmin_time = 1_000\nformat = \" [Á••$duration]($style)\"\nstyle = \"bright-black\"\n\n[time]\ndisabled = false\nformat = \" [ $time]($style)\"\nstyle = \"bright-black\"\ntime_format = \"%R\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pastel Powerline Preset in TOML\nDESCRIPTION: This TOML configuration defines the Pastel Powerline preset for Starship. It includes settings for various prompt segments such as format, symbol, style, and disabled status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Use custom format\nformat = \"\"\"[](fg:#9A348E bg:#DA627D)$directory[](fg:#DA627D bg:#FCA17D)$git_branch$git_status[](fg:#FCA17D bg:#86BBD8)$c$elixir$elm$golang$gradle$haskell$java$julia$nodejs$nim$rust$scala[](fg:#86BBD8 bg:#33658A)$docker_context[ ](fg:#33658A)\"\"\"\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# You can also replace your username with a neat symbol like   or disable this\n# and use the os module below\n[username]\nshow_always = true\nstyle_user = \"bg:#9A348E\"\nstyle_root = \"bg:#9A348E\"\nformat = '[$user ]($style)'\ndisabled = false\n\n[directory]\nstyle = \"bg:#DA627D\"\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n# Here is how you can shorten some long paths by text replacement\n# similar to mapped_locations in Oh My Posh:\n[directory.substitutions]\n\"Documents\" = \" \"\n\"Downloads\" = \" \"\n\"Music\" = \" \"\n\"Pictures\" = \" \"\n# Keep in mind that the order matters. For example:\n# \"Important Documents\" = \"  \"\n# will not be replaced, because \"Documents\" was already substituted before.\n# So either put \"Important Documents\" before \"Documents\" or use the substituted version:\n# \"Important  \" = \"  \"\n\n[c]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[docker_context]\nsymbol = \" \"\nstyle = \"bg:#06969A\"\nformat = '[ $symbol $context ]($style) $path'\n\n[elixir]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[elm]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[git_branch]\nsymbol = \"\"\nstyle = \"bg:#FCA17D\"\nformat = '[ $symbol $branch ]($style)'\n\n[git_status]\nstyle = \"bg:#FCA17D\"\nformat = '[$all_status$ahead_behind ]($style)'\n\n[golang]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[gradle]\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[haskell]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[java]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[julia]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nodejs]\nsymbol = \"\"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nim]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[rust]\nsymbol = \"\"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[scala]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[time]\ndisabled = true\n\n[os.symbols]\nAlpine = \" \"\nArch = \" \"\nCentos = \" \"\nDebian = \" \"\nFedora = \" \"\nLinux = \" \"\nMacos = \" \"\nRed_hat = \" \"\nUbuntu = \" \"\nUnknown = \" \"\n```\n\n----------------------------------------\n\nTITLE: Customizing TransientPrompt in Cmd with Character Module\nDESCRIPTION: This Lua script customizes the transient prompt in Cmd shell to display Starship's character module. It defines the starship_transient_prompt_func to determine what appears on the left side of the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship TOML\nDESCRIPTION: Detailed configuration for the Nix-shell module in Starship prompt, customizing the appearance for different shell states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Xonsh\nDESCRIPTION: Command to initialize Starship in Xonsh shell. Add this to the end of your ~/.xonshrc file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship in home-manager for Nix\nDESCRIPTION: This Nix configuration enables Starship and sets up custom settings in the home-manager configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Shell Implementation of Starship in Bash\nDESCRIPTION: A minimal example showing how to implement Starship prompt in Bash by capturing command status, background job count, and setting the prompt to Starship's output.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Ëé∑ÂèñÊúÄÂêéÊâßË°åÂëΩ‰ª§ÁöÑËøîÂõûÂÄº\nSTATUS=$?\n\n# Ëé∑ÂèñËøêË°åÂêéÂè∞Á®ãÂ∫èÁöÑÊï∞Èáè\nNUM_JOBS=$(jobs -p | wc -l)\n\n# ËÆæÁΩÆÊèêÁ§∫Á¨¶‰∏∫ `starship prompt` ÁöÑËæìÂá∫\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the status module in Starship prompt. It customizes the style, symbol, success symbol, and format of the status display. It also enables symbol mapping and the module itself.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Tracking Indicators with Count in Starship\nDESCRIPTION: Configuration for showing ahead/behind counts of the git branch being tracked, displaying numeric indicators of how many commits ahead or behind the local branch is compared to remote.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Specific Kubernetes Styles\nDESCRIPTION: Advanced configuration for the Kubernetes module with context-specific styling and aliasing including pattern matching.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\n# \"bold red\" style + default symbol when Kubernetes current context name equals \"production\" *and* the current user\n# equals \"admin_user\"\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\n# \"green\" style + a different symbol when Kubernetes current context name contains openshift\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\n# Using capture groups\n# Contexts from GKE, AWS and other cloud providers usually carry additional information, like the region/zone.\n# The following entry matches on the GKE format (`gke_projectname_zone_cluster-name`)\n# and renames every matching kube context into a more readable format (`gke-cluster-name`):\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Module in Starship\nDESCRIPTION: Provides configuration options for the Battery module in Starship, including symbols for different battery states, format, and display threshold. The module shows the device's battery charge and charging status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[battery]\nfull_symbol = 'Û∞Åπ '\ncharging_symbol = 'Û∞ÇÑ '\ndischarging_symbol = 'Û∞ÇÉ '\nunknown_symbol = 'Û∞ÅΩ '\nempty_symbol = 'Û∞Çé '\nformat = '[$symbol$percentage]($style) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship TOML\nDESCRIPTION: Custom configuration for the Node.js module in Starship prompt, changing the format and emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Gruvbox Rainbow Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the Gruvbox Rainbow preset for Starship, including various module settings and color schemes.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/presets/gruvbox-rainbow.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Setups\nformat = \"\"\"\n[](#9A348E)\\\n$os\\\n$username\\\n[](bg:#DA627D fg:#9A348E)\\\n$directory\\\n[](fg:#DA627D bg:#FCA17D)\\\n$git_branch\\\n$git_status\\\n[](fg:#FCA17D bg:#86BBD8)\\\n$c\\\n$elixir\\\n$elm\\\n$golang\\\n$gradle\\\n$haskell\\\n$java\\\n$julia\\\n$nodejs\\\n$nim\\\n$rust\\\n$scala\\\n[](fg:#86BBD8 bg:#06969A)\\\n$docker_context\\\n[](fg:#06969A bg:#33658A)\\\n$time\\\n[ ](fg:#33658A)\\\n\"\"\"\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# You can also replace your username with a neat symbol like   or disable this\n# and use the os module below\n[username]\nshow_always = true\nstyle_user = \"bg:#9A348E\"\nstyle_root = \"bg:#9A348E\"\nformat = '[$user ]($style)'\ndisabled = false\n\n# An alternative to the username module which displays a symbol that\n# represents the current operating system\n[os]\nstyle = \"bg:#9A348E\"\ndisabled = true # Disabled by default\n\n[directory]\nstyle = \"bg:#DA627D\"\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n# Here is how you can shorten some long paths by text replacement\n# similar to mapped_locations in Oh My Posh:\n[directory.substitutions]\n\"Documents\" = \" \"\n\"Downloads\" = \" \"\n\"Music\" = \" \"\n\"Pictures\" = \" \"\n# Keep in mind that the order matters. For example:\n# \"Important Documents\" = \"  \"\n# will not be replaced, because \"Documents\" was already substituted before.\n# So either put \"Important Documents\" before \"Documents\" or use the substituted version:\n# \"Important  \" = \"  \"\n\n[c]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[docker_context]\nsymbol = \" \"\nstyle = \"bg:#06969A\"\nformat = '[ $symbol $context ]($style) $path'\n\n[elixir]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[elm]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[git_branch]\nsymbol = \"\"\nstyle = \"bg:#FCA17D\"\nformat = '[ $symbol $branch ]($style)'\n\n[git_status]\nstyle = \"bg:#FCA17D\"\nformat = '[$all_status$ahead_behind ]($style)'\n\n[golang]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[gradle]\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[haskell]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[java]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[julia]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nodejs]\nsymbol = \"\"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nim]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[rust]\nsymbol = \"\"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[scala]\nsymbol = \" \"\nstyle = \"bg:#86BBD8\"\nformat = '[ $symbol ($version) ]($style)'\n\n[time]\ndisabled = false\ntime_format = \"%R\" # Hour:Minute Format\nstyle = \"bg:#33658A\"\nformat = '[ ‚ô• $time ]($style)'\n```\n\n----------------------------------------\n\nTITLE: Displaying Ahead/Behind Count in Git Status (TOML)\nDESCRIPTION: This configuration demonstrates how to show the count of commits ahead or behind the tracked branch in the Git status display of Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Setting Starship Precmd Function in Bash\nDESCRIPTION: Assigns the window title function as Starship's precmd function in Bash.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Setting Hostname Aliases in Starship\nDESCRIPTION: TOML configuration example showing how to set up hostname aliases in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship using TOML\nDESCRIPTION: Example configuration for the Mercurial Branch module in Starship prompt. This customizes the format to display a sprout emoji followed by the branch name in bold purple, with custom truncation settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the git_branch module in Starship prompt. It sets a custom symbol, truncation length, and ignores specific branches.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt (TOML)\nDESCRIPTION: This configuration disables the line break module in Starship, making the prompt appear on a single line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module Configuration\nDESCRIPTION: Example configuration for customizing the OS module format, style and custom symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Creating a Starship Bug Report\nDESCRIPTION: Command to generate a GitHub issue with relevant information for reporting a bug in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Complete Jetpack Preset Configuration for Starship\nDESCRIPTION: The complete TOML configuration file for the Jetpack preset that defines the prompt appearance, module settings, and formatting options for the Starship prompt tool.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$cmd_duration$line_break$character\"\nright_format = \"$time\"\nadd_newline = false\n\n[directory]\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_branch]\nformat = \" on [$symbol$branch(:$remote_branch)]($style) \"\nsymbol = \"\"\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_status]\nformat = \"(\\[$all_status$ahead_behind\\]($style))\"\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstashed = \"$\"\nmodified = \"!\"\nstagingstaged = \"+\"\nrenamedrenamed = \"¬ª\"\ndeleted = \"‚úò\"\n\n[character]\nsuccess_symbol = \"[‚ùØ](green)\"\nerror_symbol = \"[‚ùØ](red)\"\nvimcmd_symbol = \"[‚ùÆ](green)\"\n\n[time]\ndisabled = false\nformat = \"[$time]($style)\"\ntime_format = \"%R\"\nstyle = \"bold bright-black\"\n\n[cmd_duration]\nformat = \"took [$duration]($style)\"\nmin_time = 1_000\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Display in Starship (TOML)\nDESCRIPTION: Sets up custom symbols and formats for various Git status indicators in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Customizing Git Status Display in Starship\nDESCRIPTION: This TOML configuration snippet customizes the appearance of Git status indicators in the Starship prompt, replacing default symbols with custom emojis to represent different Git states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Implementing Starship with Bash Example\nDESCRIPTION: A simple example showing how to integrate Starship with Bash by getting the status code and number of jobs, then setting the prompt to the output of the starship prompt command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship TOML\nDESCRIPTION: Demonstrates how to set up a right-aligned prompt in Starship using the right_format option in the TOML configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to customize the git_state module format and add a custom style for cherry-picking state.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: AWS Profile Configuration in TOML\nDESCRIPTION: Configuration example showing how to display AWS profile, region and credentials information in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )]($style)'\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n[aws.profile_aliases]\nCompanyGroupFrobozzOnCallAccess = 'Frobozz'\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title Function in Bash/Zsh\nDESCRIPTION: Defines a function to set the terminal window title using ANSI escape sequences. Can be customized with variables like $USER, $HOSTNAME, and $PWD.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Directory Path Substitutions Configuration in TOML\nDESCRIPTION: Configuration example showing how to set up path substitutions to replace long network paths or development directories with shorter aliases in Starship's directory module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Starship Integration\nDESCRIPTION: PowerShell profile configuration to initialize Starship prompt with window title customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in Bash/Sh\nDESCRIPTION: Command to change the default Starship configuration file location using the STARSHIP_CONFIG environment variable in Bash/Sh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Logging Location in Cmd with Lua\nDESCRIPTION: Lua command for setting a custom starship logging directory in Windows Cmd by modifying the starship.lua file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: TOML configuration example for customizing the OCaml module display in Starship shell prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Module with Toml\nDESCRIPTION: This snippet sets up the Git commit module in Starship. It allows customization of the displayed commit hash length, format, and tag symbol. This is useful for tailoring the commit information shown in the terminal.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Fish shell\nDESCRIPTION: This Fish shell command initializes Starship. It should be added to the end of the ~/.config/fish/config.fish file to enable Starship on shell startup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Nix using nix-env\nDESCRIPTION: This command installs Starship using the nix-env package manager on Nix systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Default Starship Prompt Format Configuration\nDESCRIPTION: The default prompt format configuration showing all available modules and their ordering in the prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\nformat = '$all'\n\n# Which is equivalent to\nformat = \"\"\"\n$username\\\n$hostname\\\n$localip\\\n$shlvl\\\n$singularity\\\n$kubernetes\\\n$directory\\\n$vcsh\\\n$fossil_branch\\\n$fossil_metrics\\\n$git_branch\\\n$git_commit\\\n$git_state\\\n$git_metrics\\\n$git_status\\\n$hg_branch\\\n$pijul_channel\\\n$docker_context\\\n$package\\\n$c\\\n$cmake\\\n$cobol\\\n$daml\\\n$dart\\\n$deno\\\n$dotnet\\\n$elixir\\\n$elm\\\n$erlang\\\n$fennel\\\n$gleam\\\n$golang\\\n$guix_shell\\\n$haskell\\\n$haxe\\\n$helm\\\n$java\\\n$julia\\\n$kotlin\\\n$gradle\\\n$lua\\\n$nim\\\n$nodejs\\\n$ocaml\\\n$opa\\\n$perl\\\n$php\\\n$pulumi\\\n$purescript\\\n$python\\\n$quarto\\\n$raku\\\n$rlang\\\n$red\\\n$ruby\\\n$rust\\\n$scala\\\n$solidity\\\n$swift\\\n$terraform\\\n$typst\\\n$vlang\\\n$vagrant\\\n$zig\\\n$buf\\\n$nix_shell\\\n$conda\\\n$meson\\\n$spack\\\n$memory_usage\\\n$aws\\\n$gcloud\\\n$openstack\\\n$azure\\\n$nats\\\n$direnv\\\n$env_var\\\n$crystal\\\n$custom\\\n$sudo\\\n$cmd_duration\\\n$line_break\\\n$jobs\\\n$battery\\\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n$character\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting up Starship Prompt in Bash\nDESCRIPTION: This snippet demonstrates how to integrate Starship into a Bash prompt, including status code and job count handling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module in Starship (TOML)\nDESCRIPTION: Configuration example for the git_state module showing how to customize the format and cherry-pick state display in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Changing Window Title in Bash and Zsh\nDESCRIPTION: This script demonstrates how to change the window title in Bash and Zsh shells when using Starship. It defines a function to set the window title and integrates it with Starship's prompt rendering.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Python Module Symbol in Starship\nDESCRIPTION: This configuration example shows how to change the Python symbol and enable pyenv version name display in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the OS module in Starship prompt. Shows how to enable the module, customize its format, style, and define custom symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: AWS Module Configuration for Starship Prompt\nDESCRIPTION: Example configuration for the AWS module in Starship, demonstrating how to display everything including custom region and profile aliases with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )]($style)'\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n[aws.profile_aliases]\nCompanyGroupFrobozzOnCallAccess = 'Frobozz'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pre-execution Commands in Cmd\nDESCRIPTION: Implements custom pre-execution command handling in Cmd using Lua to display the command about to be executed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset for Starship\nDESCRIPTION: Command to install the Jetpack preset configuration for Starship prompt into the user's configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Helm module in Starship prompt, customizing the format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt\nDESCRIPTION: Configures the line_break module to disable the two-line prompt, making Starship display on a single line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Python module in Starship prompt. It sets a custom symbol and enables pyenv version name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship\nDESCRIPTION: Custom format configuration for the Elm module display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Testing Font Configuration for Starship Symbols\nDESCRIPTION: Commands to test if your terminal correctly displays Unicode emoji and Powerline symbols, which are required for Starship to display properly.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Generating Starship Bug Report\nDESCRIPTION: This command creates a GitHub issue for reporting bugs in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration for Starship\nDESCRIPTION: TOML configuration file for the Pure preset in Starship. This file defines settings that make Starship emulate the Pure prompt's appearance and behavior.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Disable the newline at the start of the prompt\nadd_newline = false\n\n# Overrides the prompt character for the prompt\n# Note the use of \\\\ to escape the backslash in the second line\n[character]\nsuccess_symbol = \"[‚ùØ](purple)\" \nerror_symbol = \"[‚ùØ](red)\"\nvimcmd_symbol = \"[‚ùÆ](green)\"\n\n[directory]\ntruncation_length = 100\ntruncate_to_repo = false\nstyle = \"bold blue\"\n```\n\n----------------------------------------\n\nTITLE: Pastel Powerline Preset Configuration\nDESCRIPTION: The complete TOML configuration for the Pastel Powerline preset that defines the shell prompt appearance and behavior.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pastel-powerline.toml\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Elvish\nDESCRIPTION: Add this command to ~/.elvish/rc.elv to initialize Starship for Elvish shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in Fish Shell with Starship\nDESCRIPTION: Explains how to enable and customize the transient prompt feature in Fish shell using Starship. It includes examples for both left and right side prompt customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Shape\nDESCRIPTION: TOML configuration for Character module with a custom symbol for vim command mode.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Kubernetes Context Display in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the Kubernetes context display in Starship. It defines different styles and symbols for specific context patterns, including using capture groups for renaming.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Kubernetes Module with Context Aliases in Starship\nDESCRIPTION: Configures the Kubernetes module with custom format, enabling it, and adding context-specific styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Logging Location in Bash/Zsh\nDESCRIPTION: Shell command to set a custom logging directory for starship using the STARSHIP_CACHE environment variable in Bash or Zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Xonsh\nDESCRIPTION: This Python command initializes Starship for the Xonsh shell. It should be added to the end of the ~/.xonshrc file to enable Starship on shell startup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt with Character Module in PowerShell\nDESCRIPTION: This code shows how to enable TransientPrompt in PowerShell and customize it to display Starship's character module. The function Invoke-Starship-TransientFunction determines what replaces the previous prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in PowerShell\nDESCRIPTION: This PowerShell command sets a custom location for the Starship configuration file using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Path in Shell\nDESCRIPTION: This command sets a custom location for the Starship cache directory using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Customizing Window Title in Cmd with User and Path\nDESCRIPTION: Lua function for Cmd shell that sets the window title to show username, computer name, and current directory using Starship's pre-prompt hook.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\":\\n\"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring V Language Module in Starship (TOML)\nDESCRIPTION: Example configuration for the V language module in Starship prompt. Customizes the format and style for displaying the V version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_114\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Azure module displays subscription information in the Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship imperatively with Nix\nDESCRIPTION: Command to install Starship using the imperative approach with the Nix package manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux using Portage\nDESCRIPTION: Command to install Starship from the core-kit repository using Portage package manager on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Prompt Format in Starship\nDESCRIPTION: Defines a custom prompt format with green brackets and customized content. Sets a scan timeout and disables the newline at the start of the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nformat = '''\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\n[‚îÇ](bold green)$directory$rust$package\n[‚îî‚îÄ>](bold green) '''\n\nscan_timeout = 10\n\nadd_newline = false\n\npalette = 'foo'\n\n[palettes.foo]\nblue = '21'\nmustard = '#af8700'\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Symbols in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the symbols used for different battery states in the Starship battery module. It sets custom symbols for full, charging, and discharging states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the git_branch module in Starship. It sets a custom symbol, truncation length, and ignores specific branch names.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt with Character Module in Fish\nDESCRIPTION: This snippet enables and customizes the transient prompt in Fish shell. It defines a function to display Starship's character module as the transient prompt when enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module to Always Show in Starship Prompt\nDESCRIPTION: A TOML configuration example that modifies the Hostname module to always display, regardless of SSH connection status. It also customizes the format and truncates hostnames at a specific domain.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Golang Module Configuration\nDESCRIPTION: Configuration example showing how to display both the Go version and the module version requirement from go.mod in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Display in Starship\nDESCRIPTION: TOML configuration example showing how to customize hostname display in Starship, including SSH symbol and hostname truncation settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship\nDESCRIPTION: Example configuration for the VCSH module in Starship prompt. This snippet changes the format to display the active VCSH repository with a custom symbol and blue styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_114\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to set up a minimal left prompt with all other modules moved to the right prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Í∞ÑÍ≤∞Ìïú ÏôºÏ™Ω ÌîÑÎ°¨ÌîÑÌä∏\nformat = \"\"\"$character\"\"\"\n\n# ÌîÑÎ°¨ÌîÑÌä∏Ïùò ÎÇòÎ®∏ÏßÄÎ•º Ïò§Î•∏Ï™ΩÏúºÎ°ú ÏòÆÍ∏∞Í∏∞\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Plain Text Symbols Preset in Starship\nDESCRIPTION: Command to install the Plain Text Symbols preset for Starship prompt. This command saves the preset configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship\nDESCRIPTION: Example configuration for the Dart module in Starship prompt. It sets a custom format with a red sword emoji and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Module with Custom Binary Path in Starship\nDESCRIPTION: Specifies the Kotlin compiler binary path for version detection in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship using TOML\nDESCRIPTION: Example configuration for the Memory Usage module in Starship prompt. This enables the normally disabled module, removes the threshold limit, changes the symbol, and sets a custom style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship with TOML\nDESCRIPTION: Configuration example for customizing the Odin programming language module in Starship prompt. Uses a custom symbol and enables commit hash display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Viewing Starship Prompt Command Help\nDESCRIPTION: Command to display all available flags for the starship prompt command, useful for understanding configuration options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version Display\nDESCRIPTION: Configuration example that enables showing the Pulumi version in the Starship prompt, despite the performance impact. This changes the format to include version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Nerd Font Symbols Configuration for Starship in TOML\nDESCRIPTION: This TOML configuration file defines the Nerd Font symbol replacements for various Starship prompt modules. It includes custom symbols for different programming languages, tools, and status indicators.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Use custom format\nformat = \"\"\"\\n$directory$git_branch$git_state$git_status$package$golang$terraform$vagrant$docker_context$python$docker_context$python$ruby$elixir$elm$nodejs$php$rust$java$c$julia$kotlin$haskell$aws$gcloud$openstack$azure$env_var$crystal$lua$dart$dotnet$nix_shell$conda$memory_usage$kubernetes$hg_branch$cmd_duration$line_break$jobs$battery$time$status$container$shell$character\"\"\"\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n[aws]\nsymbol = \"  \"\n\n[buf]\nsymbol = \" \"\n\n[c]\nsymbol = \" \"\n\n[conda]\nsymbol = \" \"\n\n[crystal]\nsymbol = \" \"\n\n[dart]\nsymbol = \" \"\n\n[directory]\nread_only = \" Û∞åæ\"\n\n[docker_context]\nsymbol = \" \"\n\n[elixir]\nsymbol = \" \"\n\n[elm]\nsymbol = \" \"\n\n[fossil_branch]\nsymbol = \" \"\n\n[git_branch]\nsymbol = \" \"\n\n[golang]\nsymbol = \" \"\n\n[guix_shell]\nsymbol = \" \"\n\n[haskell]\nsymbol = \" \"\n\n[haxe]\nsymbol = \"‚åò \"\n\n[hg_branch]\nsymbol = \" \"\n\n[hostname]\nssh_symbol = \" \"\n\n[java]\nsymbol = \" \"\n\n[julia]\nsymbol = \" \"\n\n[kotlin]\nsymbol = \" \"\n\n[lua]\nsymbol = \" \"\n\n[memory_usage]\nsymbol = \" \"\n\n[meson]\nsymbol = \"Û∞î∑ \"\n\n[nim]\nsymbol = \" \"\n\n[nix_shell]\nsymbol = \" \"\n\n[nodejs]\nsymbol = \" \"\n\n[os.symbols]\nAlpine = \" \"\nAmazon = \" \"\nAndroid = \" \"\nArch = \" \"\nCentos = \" \"\nDebian = \" \"\nDragonfly = \" \"\nEmscripten = \" \"\nEndeavour = \" \"\nFedora = \" \"\nFreeBSD = \" \"\nGaruda = \"ÔØë \"\nGentoo = \" \"\nHaikuOS = \" \"\niOS = \" \"\nLinux = \" \"\nMacos = \" \"\nManjaro = \" \"\nMariner = \" \"\nMidnightBSD = \" \"\nMint = \" \"\nNetBSD = \" \"\nNixOS = \" \"\nOpenBSD = \" \"\nopenSUSE = \" \"\nOracleLinux = \" \"\nPop = \" \"\nRaspbian = \" \"\nRedhat = \" \"\nRedHatEnterprise = \" \"\nSolus = \"Ô¥± \"\nSUSE = \" \"\nUbuntu = \" \"\nUnknown = \" \"\nWindows = \" \"\n\n[package]\nsymbol = \" \"\n\n[pijul_channel]\nsymbol = \"ü™∫ \"\n\n[python]\nsymbol = \" \"\n\n[rlang]\nsymbol = \"Ô≥í \"\n\n[ruby]\nsymbol = \" \"\n\n[rust]\nsymbol = \" \"\n\n[scala]\nsymbol = \" \"\n\n[spack]\nsymbol = \"üÖ¢ \"\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Transient Prompt in Fish\nDESCRIPTION: Implements a transient prompt in Fish shell showing the Starship character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Symbols in Starship Prompt\nDESCRIPTION: This snippet demonstrates how to customize the symbols used for different battery states in the Starship battery module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Format in Starship\nDESCRIPTION: This snippet customizes the format of the Erlang module in the Starship prompt. It sets the `format` option within the `[erlang]` section of the `starship.toml` configuration file to display the Erlang version with a specific style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n[erlang]\nformat = 'via [e $version](bold red) '\n\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Bash with Ble.sh and Starship\nDESCRIPTION: Demonstrates how to set up and customize the transient prompt in Bash using the Ble.sh framework and Starship. It includes examples for both left and right side prompt customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Zsh\nDESCRIPTION: Initialization script for Zsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.zshrc\n\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Migrating prompt_order Configuration in TOML\nDESCRIPTION: Shows the change from array-based prompt_order to string-based format configuration for controlling module display order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Window Title Change Function in Bash/Zsh\nDESCRIPTION: Function to set the window title in bash and zsh shells. Can be customized with variables like $USER, $HOSTNAME, and $PWD.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset in Starship\nDESCRIPTION: Command to install the Pastel Powerline preset configuration into the user's Starship configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Go Module Version Display\nDESCRIPTION: Configuration showing both Go version and mod version in the Starship prompt format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Applying NixOS System Configuration\nDESCRIPTION: Command to rebuild NixOS system after adding Starship to system packages.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Running Starship on Linux with Older glibc Versions\nDESCRIPTION: Command to install Starship using a binary compiled with musl instead of glibc, useful for older Linux distributions that have compatibility issues with newer glibc versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux\nDESCRIPTION: Command to download and install Starship binary in the Termux environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module in Starship\nDESCRIPTION: Example configuration for the git_state module in Starship prompt. Customizes the format string display and cherry-pick state appearance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Module in Starship\nDESCRIPTION: Example configuration for the git_branch module in Starship prompt. Sets a custom branch symbol, truncation length and symbol, and defines branches to ignore.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Customizing Ahead/Behind Count Display in Git Status (TOML)\nDESCRIPTION: This configuration snippet shows how to display the ahead/behind count of the branch being tracked in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship in Nix using home-manager\nDESCRIPTION: Nix configuration for enabling and configuring Starship using home-manager. This includes sample settings for customizing the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # ~/.config/starship.tomlÏóê ÏûëÏÑ±Îêú ÏÑ§Ï†ï\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship\nDESCRIPTION: TOML configuration example for customizing the shell indicator module in Starship prompt. Shows how to modify shell indicators, style and enable the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics in Starship\nDESCRIPTION: This snippet configures the Git metrics module in Starship, enabling the display of added and deleted lines in a repository with customizable styles and formats.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship (TOML)\nDESCRIPTION: Example configuration for the sudo module in Starship prompt, showing custom styling, symbol, and enabling the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_105\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Transient Prompt in Cmd with Lua\nDESCRIPTION: Implements custom transient prompt functionality in Cmd using Lua. Configures the prompt to display Starship's character module with keymap integration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Installing No Empty Icons Preset via Starship CLI\nDESCRIPTION: Command to install the No Empty Icons preset configuration to the Starship config file location\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Module with Custom Symbol in Starship\nDESCRIPTION: Sets a custom Korean symbol for the Kotlin language module in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship using TOML\nDESCRIPTION: Example configuration for the Meson module in Starship prompt. This explicitly enables the module, customizes the truncation symbol, changes the display symbol, and sets a custom style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Display in Starship Prompt\nDESCRIPTION: Customizes the Local IP module to show the network interface's IPv4 address with custom formatting and color. This configuration shows the IP address for all sessions, not just SSH connections.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Fill Module in Starship\nDESCRIPTION: Example configuration for the Fill module that fills extra space on the line with a symbol. This configuration sets a custom fill symbol and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\nformat = 'AA $fill BB $fill CC'\n\n[fill]\nsymbol = '-'\nstyle = 'bold green'\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Cmd with User and Computer Info\nDESCRIPTION: This Lua script for Cmd sets the console window title to include the username, computer name, and current directory using the starship_preprompt_user_func function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\":\\u0020\"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Installing Gruvbox Rainbow Preset for Starship (Shell)\nDESCRIPTION: This command installs the Gruvbox Rainbow preset for Starship by downloading the configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/gruvbox-rainbow.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset gruvbox-rainbow -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-Execution Function in Bash with DEBUG Trap\nDESCRIPTION: This Bash script shows how to implement a pre-execution function using the DEBUG trap mechanism. The trap must be set before initializing Starship to preserve functionality while allowing custom code to run before each command execution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: TOML configuration for the Docker context module in Starship prompt, which displays the active Docker context with custom formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship (TOML)\nDESCRIPTION: Example configuration for the status module in Starship prompt, showing custom styling, symbols, and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_104\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt Right Side in Bash with Ble.sh\nDESCRIPTION: This Bash script uses the Ble.sh framework to customize the transient prompt's right side to display Starship's time module. The prompt_rps1_final option controls what appears on the right when the prompt is in transient mode.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Elvish\nDESCRIPTION: Configuration snippet to add to the Elvish shell configuration file (~/.elvish/rc.elv) to initialize Starship. Note that only Elvish v0.18 or higher is supported.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.elvish/rc.elv\n\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Replace with Nickname\nDESCRIPTION: A TOML configuration example for replacing the system hostname with a custom nickname in the Starship prompt. This uses the aliases option to map system hostnames to custom names.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Pastel Powerline Preset in TOML for Starship\nDESCRIPTION: This TOML configuration defines the Pastel Powerline preset for Starship. It includes settings for various prompt segments such as format, directory, git branch, and more.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = '''\\n$directory$git_branch$git_state$git_status$aws$gcloud$cmd_duration\\n$character'''\\n\\n# Disable the blank line at the start of the prompt\\nadd_newline = false\\n\\n# You can also replace your username with a neat symbol like   or disable this\\n# and use the os module below\\n[username]\\nshow_always = true\\nstyle_user = \"fg:#8caaee\"\\nstyle_root = \"fg:#e78284\"\\nformat = '[$user ]($style)'\\n\\n# An alternative to the username module which displays a symbol that\\n# represents the current operating system\\n[os]\\ndisabled = true\\n\\n[directory]\\nstyle = \"fg:#e5c890\"\\nformat = \"[ $path ]($style)\"\\ntruncation_length = 3\\ntruncation_symbol = \"‚Ä¶/\"\\n\\n# Here is how you can shorten some long paths by text replacement\\n# similar to mapped_locations in Oh My Posh:\\n[directory.substitutions]\\n\"Documents\" = \" \"\\n\"Downloads\" = \" \"\\n\"Music\" = \" \"\\n\"Pictures\" = \" \"\\n# Keep in mind that the order matters. For example:\\n# \"Important Documents\" = \"  \"\\n# will not be replaced, because \"Documents\" was already substituted before.\\n# So either put \"Important Documents\" before \"Documents\" or use the substituted version:\\n# \"Important  \" = \"  \"\\n\\n[git_branch]\\nsymbol = \"\"\\nstyle = \"fg:#81c8be\"\\nformat = '[[ $symbol $branch ](fg:#81c8be)]($style)'\\n\\n[git_status]\\nstyle = \"fg:#e78284\"\\nformat = '[[($all_status$ahead_behind )](fg:#e78284)]($style)'\\n\\n[git_state]\\nstyle = \"fg:#ca9ee6\"\\nformat = '\\n[\\[$state( $progress_current/$progress_total)\\] ]($style)'\\n\\n[cmd_duration]\\nmin_time = 500\\nformat = '[  $duration](fg:#e5c890)'\\n\\n[aws]\\nsymbol = \"  \"\\n\n[gcloud]\\nsymbol = \" \"\\n\n[character]\\nsuccess_symbol = \"[‚ùØ](fg:#a6d189)\"\\nerror_symbol = \"[‚ùØ](fg:#e78284)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates the configuration for the git_commit module in Starship. It sets a custom commit hash length and tag symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt with Character Module in Bash using Ble.sh\nDESCRIPTION: This snippet configures the final prompt state for transient prompts in Bash using the Ble.sh framework. It sets the final prompt to display Starship's character module when transient prompts are enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the behavior for the No Empty Icons preset in Starship. It sets various module configurations to only show icons when version information is available.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)'\nsymbol = 'üÖ∞ '\n\n[bun]\nformat = 'via [$symbol($version )]($style)'\n\n[c]\nformat = 'via [$symbol($version(-$name) )]($style)'\n\n[cmake]\nformat = 'via [$symbol($version )]($style)'\n\n[cmd_duration]\nformat = 'took [$duration]($style)'\n\n[cobol]\nformat = 'via [$symbol($version )]($style)'\n\n[conda]\nformat = 'via [$symbol$environment]($style)'\n\n[crystal]\nformat = 'via [$symbol($version )]($style)'\n\n[daml]\nformat = 'via [$symbol($version )]($style)'\n\n[dart]\nformat = 'via [$symbol($version )]($style)'\n\n[deno]\nformat = 'via [$symbol($version )]($style)'\n\n[docker_context]\nformat = 'via [$symbol$context]($style)'\n\n[dotnet]\nformat = 'via [$symbol($version )(üéØ $tfm )]($style)'\n\n[elixir]\nformat = 'via [$symbol($version \\(OTP $otp_version\\) )]($style)'\n\n[elm]\nformat = 'via [$symbol($version )]($style)'\n\n[erlang]\nformat = 'via [$symbol($version )]($style)'\n\n[fennel]\nformat = 'via [$symbol($version )]($style)'\n\n[golang]\nformat = 'via [$symbol($version )]($style)'\n\n[gradle]\nformat = 'via [$symbol($version )]($style)'\n\n[guix_shell]\nformat = 'via [$symbol]($style)'\n\n[haskell]\nformat = 'via [$symbol($version )]($style)'\n\n[haxe]\nformat = 'via [$symbol($version )]($style)'\n\n[helm]\nformat = 'via [$symbol($version )]($style)'\n\n[hg_branch]\nformat = 'on [$symbol$branch]($style)'\n\n[java]\nformat = 'via [$symbol($version )]($style)'\n\n[julia]\nformat = 'via [$symbol($version )]($style)'\n\n[kotlin]\nformat = 'via [$symbol($version )]($style)'\n\n[kubernetes]\nformat = 'on [$symbol$context( \\($namespace\\))]($style)'\n\n[lua]\nformat = 'via [$symbol($version )]($style)'\n\n[meson]\nformat = 'via [$symbol$project]($style)'\n\n[nim]\nformat = 'via [$symbol($version )]($style)'\n\n[nix_shell]\nformat = 'via [$symbol$state( \\($name\\))]($style)'\n\n[nodejs]\nformat = 'via [$symbol($version )]($style)'\n\n[ocaml]\nformat = 'via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)'\n\n[opa]\nformat = 'via [$symbol($version )]($style)'\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style)'\n\n[os]\nformat = '[$symbol]($style)'\n\n[package]\nformat = 'is [$symbol$version]($style)'\n\n[perl]\nformat = 'via [$symbol($version )]($style)'\n\n[php]\nformat = 'via [$symbol($version )]($style)'\n\n[pulumi]\nformat = 'via [$symbol$stack]($style)'\n\n[purescript]\nformat = 'via [$symbol($version )]($style)'\n\n[python]\nformat = 'via [$symbol($version )(\\($virtualenv\\) )]($style)'\n\n[raku]\nformat = 'via [$symbol($version-$vm_version )]($style)'\n\n[red]\nformat = 'via [$symbol($version )]($style)'\n\n[ruby]\nformat = 'via [$symbol($version )]($style)'\n\n[rust]\nformat = 'via [$symbol($version )]($style)'\n\n[scala]\nformat = 'via [$symbol($version )]($style)'\n\n[spack]\nformat = 'via [$symbol$environment]($style)'\n\n[sudo]\nformat = 'as [$symbol]($style)'\n\n[swift]\nformat = 'via [$symbol($version )]($style)'\n\n[terraform]\nformat = 'via [$symbol$workspace]($style)'\n\n[time]\nformat = 'at [$time]($style)'\n\n[vagrant]\nformat = 'via [$symbol($version )]($style)'\n\n[vlang]\nformat = 'via [$symbol($version )]($style)'\n\n[zig]\nformat = 'via [$symbol($version )]($style)'\n\n[solidity]\nformat = 'via [$symbol($version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in Lua\nDESCRIPTION: This Lua script sets a custom location for the Starship configuration file using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt format in Starship v0.45.0\nDESCRIPTION: Example of how prompt format is configured using 'format' string in Starship v0.45.0, replacing the previous 'prompt_order' array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title with Current Directory in Bash/Zsh\nDESCRIPTION: Adds a snippet to .bashrc or .zshrc to display the current directory in the terminal tab title.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: TOML configuration for customizing the Node.js version display with custom format and emoji symbol\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Bun Runtime Configuration\nDESCRIPTION: Custom format configuration for the Bun JavaScript runtime module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variables in Starship Modules\nDESCRIPTION: Example of how to access environment variables in Starship modules using the context object, which allows for mocking of variables during testing.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse super::{Context, Module, RootModuleConfig};\n\nuse crate::configs::php::PhpConfig;\nuse crate::formatter::StringFormatter;\n\n\npub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n   // Here `my_env_var` will be either the contents of the var or the function\n   // will exit if the variable is not set.\n   let my_env_var = context.get_env(\"MY_VAR\")?;\n\n   // Then you can happily use the value\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tokyo Night Preset for Starship\nDESCRIPTION: This command installs the Tokyo Night preset configuration for Starship, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/tokyo-night.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset tokyo-night -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL on Older Linux Distributions\nDESCRIPTION: This command installs Starship using a MUSL-compiled binary for compatibility with older glibc versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: AWS Profile Display Configuration for Starship\nDESCRIPTION: Configuration for displaying only the AWS profile in Starship prompt with profile aliases and custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$profile]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.profile_aliases]\nEnterprise_Naming_Scheme-voidstars = 'void**'\n```\n\n----------------------------------------\n\nTITLE: Installing Nerd Font Symbols Preset\nDESCRIPTION: Command to install the Nerd Font Symbols preset configuration into the Starship config file. This creates or updates the ~/.config/starship.toml file with Nerd Font symbol configurations.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset nerd-font-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Cargo on Various Systems\nDESCRIPTION: This command installs Starship using Cargo, the Rust package manager. The --locked flag ensures reproducible builds by using the exact dependency versions specified in the Cargo.lock file.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncargo install starship --locked\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship in PowerShell Profile\nDESCRIPTION: This snippet shows how to set up Starship in a PowerShell profile. It defines a function to update the window title and initializes Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: TOML configuration for customizing the Node.js prompt display in Starship shell with a robot emoji and bold green styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Defining OS Module Default Symbols in Starship Prompt (TOML)\nDESCRIPTION: Default symbols table for the OS module in Starship prompt. Maps operating system types to their corresponding symbols for display in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship with TOML\nDESCRIPTION: Example configuration for enabling and customizing the Memory Usage module in Starship prompt. This enables the module, removes the display threshold, changes the symbol, and sets a green styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Zig module in Starship prompt. Customizes the symbol used before displaying the Zig version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_116\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt and Pre-execution Commands in Cmd\nDESCRIPTION: This Lua script demonstrates how to define custom functions that run before the prompt is drawn and before a command is executed in Cmd shell using Clink and Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module in TOML Configuration\nDESCRIPTION: Example configuration for customizing the OS module in Starship prompt, showing how to modify the format, style, and override specific OS symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Configuring the Lua Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing the Lua module in Starship prompt. This sets a custom format with a full moon emoji and blue styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Spack Module in Starship\nDESCRIPTION: Configuration example for the Spack package manager environment module with custom formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_108\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship\nDESCRIPTION: Example configuration for the OpenStack module in Starship, customizing the format, style, and symbol used to display OpenStack cloud and project information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Displaying Only AWS Region in Starship\nDESCRIPTION: Configuration for the AWS module that focuses on displaying only the region information with custom styling and region aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$region]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n```\n\n----------------------------------------\n\nTITLE: Installing No-Nerd-Font Preset Configuration\nDESCRIPTION: Command to install the no-nerd-font preset configuration for Starship shell prompt. This saves the preset to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-command Function in PowerShell\nDESCRIPTION: This snippet demonstrates how to create a custom function that runs before commands in PowerShell. It defines a function named Invoke-Starship-PreCommand that prints a rocket emoji to the console.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring the Status Module in Starship with TOML\nDESCRIPTION: Example configuration for the Status module in Starship that customizes the appearance of command exit status indicators, including changing the style, symbol, and format. This example enables the module which is disabled by default.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the git_state module in Starship prompt. It customizes the format and sets a special style for cherry-picking state.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-Command Function in PowerShell with Starship\nDESCRIPTION: This PowerShell script defines the Invoke-Starship-PreCommand function that will be automatically called by Starship before each command. It demonstrates printing a rocket emoji before the command is executed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates the configuration of the git_metrics module in Starship prompt. It customizes the style for added lines and the overall format of the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Displaying Only AWS Profile in Starship\nDESCRIPTION: Configuration for the AWS module that focuses on displaying only the profile information with custom styling and profile aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$profile]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.profile_aliases]\nEnterprise_Naming_Scheme-voidstars = 'void**'\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Cmd with Lua\nDESCRIPTION: Demonstrates how to customize the transient prompt's left side in Cmd shell using Lua and Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module in Starship Prompt (TOML)\nDESCRIPTION: Configuration example for the OS module in Starship prompt, which shows the current operating system with a custom format and style. The example also demonstrates how to override default OS symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module Binary Selection\nDESCRIPTION: Configuration example showing how to specify which Python binary to use for version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt\nDESCRIPTION: Configuration to disable the line break module in Starship, making the prompt appear on a single line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Directory Truncation Configuration in TOML\nDESCRIPTION: Example configuration for customizing directory path truncation behavior in Starship prompt, setting truncation length and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux using Portage\nDESCRIPTION: Command to install Starship on Funtoo Linux using the Portage package manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Symbol in Starship Prompt\nDESCRIPTION: This snippet demonstrates how to change the symbol used for the Buf module in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-execution Function in Bash using DEBUG Trap\nDESCRIPTION: This snippet shows how to run custom code before command execution in Bash using the DEBUG trap mechanism. It must be set up before initializing Starship to ensure proper functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Applying Plain Text Symbols Preset in Starship (Shell)\nDESCRIPTION: This command applies the Plain Text Symbols preset to the Starship configuration file. It uses the starship preset command to generate the configuration and save it to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape\nDESCRIPTION: Example configuration for the Character module with distinct success and error symbols. This changes both the color and shape of the prompt character based on command success.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship Using TOML\nDESCRIPTION: A TOML configuration example for customizing the Jobs module in Starship prompt. This sets a custom plus symbol, configures number threshold to 4, and shows the symbol even when there are no jobs running.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure display thresholds for the battery module in Starship. It sets different styles and symbols for various battery percentage ranges.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]] # 'bold yellow' style and üí¶ symbol when capacity is between 10% and 30%\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n\n# when capacity is over 30%, the battery indicator will not be displayed\n```\n\n----------------------------------------\n\nTITLE: Adding Pre-prompt Rocket Icon in Bash\nDESCRIPTION: This Bash script defines a custom function to display a rocket emoji before the prompt and assigns it to starship_precmd_user_func to integrate with Starship's prompt rendering.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship\nDESCRIPTION: This example configures the Rust module in Starship. It sets a custom format that displays a gear icon followed by the Rust version, with the text colored red and bolded.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship with TOML\nDESCRIPTION: Configuration example for customizing the OpenStack cloud environment module in Starship prompt. Defines format, style, and cloud symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to configure the SHLVL module in Starship. It shows settings for disabling the module, formatting the output, and setting a threshold.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_100\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Helm module display in Starship prompt, demonstrating version and symbol formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Installing No Runtime Versions Preset for Starship\nDESCRIPTION: This command installs the 'no-runtime-versions' preset for Starship, which hides runtime versions in the prompt. It saves the configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Conda Environment Display in Starship\nDESCRIPTION: TOML configuration for customizing how Conda environment information is displayed in the shell prompt, including format and style settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Hide in Remote Tmux\nDESCRIPTION: Example configuration to hide the hostname in remote tmux sessions while showing it in other contexts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: Example configuration for the Deno module in Starship prompt. It sets a custom format with a green dinosaur emoji and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship\nDESCRIPTION: Configuration for the status module which displays command execution status with colored symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Custom Shell Configuration Example in TOML\nDESCRIPTION: Example configuration showing how to set up custom modules in Starship with various options including command execution, file detection, and shell specification.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_112\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship (TOML)\nDESCRIPTION: Example configuration for the PureScript module in Starship prompt. It sets a custom format for displaying the PureScript version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Display in Starship\nDESCRIPTION: Enables and customizes the localip module to display the IPv4 address with custom formatting and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: Demonstrates how to set up a right prompt in Starship using the right_format option in the configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Un prompt izquierdo m√≠nimo\nformat = \"\"\"$character\"\"\"\n\n# mueve el resto del mensaje a la derecha\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-execution Function in Cmd\nDESCRIPTION: This snippet defines a custom pre-execution function in Cmd using Clink. It prints the command that's about to be executed, demonstrating how to run custom code right before command execution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship\nDESCRIPTION: Configuration for customizing the PHP module display format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship Shell Prompt (TOML)\nDESCRIPTION: Example configuration for the Swift module in Starship shell prompt, which displays the currently installed Swift version with custom formatting and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Winget\nDESCRIPTION: Command to install Starship using Winget, the Windows Package Manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nwinget install starship\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-prompt Commands in Cmd\nDESCRIPTION: Implements custom pre-prompt functionality in Cmd shell using Lua to display a rocket symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module with Custom Symbol in Starship\nDESCRIPTION: TOML configuration that customizes the Python module in Starship by changing the symbol and enabling pyenv version name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module to Display Username in Starship\nDESCRIPTION: Configuration for the Azure module that displays the Azure username instead of the subscription, with custom styling and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Simple Starship Format Extension in TOML\nDESCRIPTION: Demonstrates how to extend the default prompt format by moving the directory to the second line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# Move the directory to the second line\nformat = '$all$directory$character'\n```\n\n----------------------------------------\n\nTITLE: Tokyo Night Preset TOML Configuration for Starship\nDESCRIPTION: This TOML configuration file defines the Tokyo Night preset for Starship, including various module settings and color schemes.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/tokyo-night.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n\n[aws]\nsymbol = '  '\n\n[buf]\nsymbol = ' '\n\n[c]\nsymbol = ' '\n\n[conda]\nsymbol = ' '\n\n[dart]\nsymbol = ' '\n\n[directory]\nread_only = ' '\n\n[docker_context]\nsymbol = ' '\n\n[elixir]\nsymbol = ' '\n\n[elm]\nsymbol = ' '\n\n[git_branch]\nsymbol = ' '\n\n[golang]\nsymbol = ' '\n\n[haskell]\nsymbol = ' '\n\n[hg_branch]\nsymbol = ' '\n\n[java]\nsymbol = ' '\n\n[julia]\nsymbol = ' '\n\n[memory_usage]\nsymbol = ' '\n\n[nim]\nsymbol = ' '\n\n[nix_shell]\nsymbol = ' '\n\n[nodejs]\nsymbol = ' '\n\n[package]\nsymbol = ' '\n\n[python]\nsymbol = ' '\n\n[spack]\nsymbol = 'üÖ¢ '\n\n[rust]\nsymbol = ' '\n\n[scala]\nsymbol = ' '\n\n[os.symbols]\nAlpine = \" \"\nAmazon = \" \"\nAndroid = \" \"\nArch = \" \"\nCentos = \" \"\nDebian = \" \"\nDragonFly = \" \"\nEmscripten = \" \"\nEndeavour = \" \"\nFedora = \" \"\nFreeBSD = \" \"\nGaruda = \"ÔØë \"\nGentoo = \" \"\nIllumos = \" \"\nLinux = \" \"\nMacos = \" \"\nManjaro = \" \"\nMariner = \" \"\nMint = \" \"\nNixOS = \" \"\nOpenBSD = \" \"\nopenSUSE = \" \"\nOracleLinux = \" \"\nPop = \" \"\nRaspbian = \" \"\nRedhat = \" \"\nRedHatEnterprise = \" \"\nSolus = \"Ô¥± \"\nSUSE = \" \"\nUbuntu = \" \"\nUnknown = \" \"\nWindows = \" \"\n\n[palettes.tokyo-night]\nrosewater = \"#f5e0dc\"\nflamingo = \"#f2cdcd\"\npink = \"#f5c2e7\"\nmauve = \"#cba6f7\"\nred = \"#f38ba8\"\nmaroon = \"#eba0ac\"\npeach = \"#fab387\"\nyellow = \"#f9e2af\"\ngreen = \"#a6e3a1\"\nteal = \"#94e2d5\"\nsky = \"#89dceb\"\nsapphire = \"#74c7ec\"\nblue = \"#89b4fa\"\nlavender = \"#b4befe\"\ntext = \"#cdd6f4\"\nsubtext1 = \"#bac2de\"\nsubtext0 = \"#a6adc8\"\noverlay2 = \"#9399b2\"\noverlay1 = \"#7f849c\"\noverlay0 = \"#6c7086\"\nsurface2 = \"#585b70\"\nsurface1 = \"#45475a\"\nsurface0 = \"#313244\"\nbase = \"#1e1e2e\"\nmantle = \"#181825\"\ncrust = \"#11111b\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-Execution Function in Cmd with Clink\nDESCRIPTION: This Lua script for Cmd shell defines a custom function that runs before a command is executed. It demonstrates how to print the command that's about to run by defining the starship_precmd_user_func function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship in Home Manager\nDESCRIPTION: Declarative configuration for Starship in home-manager's home.nix file, including customizable settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship with Fish\nDESCRIPTION: Configuration to add to fish config for enabling Starship\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset in Starship\nDESCRIPTION: Command to install the Pastel Powerline preset configuration to the user's Starship config directory. Requires Starship CLI to be installed and a Nerd Font to be configured in the terminal.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Specific Kubernetes Settings (TOML)\nDESCRIPTION: Defines custom styles and aliases for specific Kubernetes contexts using regular expressions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Installing Plain Text Symbols Preset in Starship\nDESCRIPTION: Command to install the Plain Text Symbols preset configuration into the Starship config file. This will create or overwrite the Starship configuration at the specified path.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Display in Starship\nDESCRIPTION: This snippet configures the Git commit module in Starship, allowing customization of the displayed commit hash length, format, and whether to show tag information or not.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Testing Font and Unicode Support in Terminal\nDESCRIPTION: Commands to test if your terminal correctly displays Unicode emoji and Nerd Font glyphs, which are required for Starship's visual elements.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset in Starship\nDESCRIPTION: Command to install the Jetpack preset configuration to the user's Starship configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt Left Side Display in Fish Shell\nDESCRIPTION: This Fish shell script enables transient prompt functionality and customizes the left side to display Starship's character module. By defining the starship_transient_prompt_func, it overrides the default transient prompt appearance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Parameters for Custom Modules in TOML\nDESCRIPTION: Example showing how to explicitly pass arguments to a shell to avoid automatic parameter addition in Starship. This prevents recursive loading issues by specifying the command format directly.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_112\n\nLANGUAGE: toml\nCODE:\n```\nshell = ['pwsh', '-Command', '-']\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module in Starship\nDESCRIPTION: TOML configuration for customizing how Starship displays command execution duration. Sets minimum time threshold and custom format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module Display in Starship\nDESCRIPTION: Basic configuration for Kubernetes module formatting and context detection with custom styling for specific cluster patterns.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version Display in Starship\nDESCRIPTION: Example configuration for the Pulumi module in Starship prompt that includes showing the Pulumi version, despite its performance impact.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Always Show\nDESCRIPTION: Example configuration to always show the hostname in Starship prompt, with custom colors and domain trimming.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Starship in WSL\nDESCRIPTION: TOML configuration for using Windows Starship executable on Windows paths in WSL environment\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape in Starship\nDESCRIPTION: This TOML snippet configures the Character module in Starship to use custom symbols for success and error states. It sets a green arrow for success and a red X for errors.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Dotnet Module in Starship\nDESCRIPTION: Configuration example for the dotnet module in Starship, showing custom symbol and style settings with heuristic detection disabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Installing Bracketed Segments Preset\nDESCRIPTION: Command to install the bracketed segments preset configuration for Starship shell prompt into the user's configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/bracketed-segments.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset bracketed-segments -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module in Starship\nDESCRIPTION: Configuration example for customizing the Kubernetes module display in Starship prompt, including context patterns and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Go Module (TOML)\nDESCRIPTION: Configures the Go module to display both the Go version and the mod version from go.mod.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Dotnet Module in Starship\nDESCRIPTION: Configuration example for the dotnet module in Starship prompt, customizing the symbol and style while disabling heuristic version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Time Module in Starship\nDESCRIPTION: TOML configuration that enables and customizes the Time module in Starship, including format, style, UTC offset, and time range settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_106\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[time]\ndisabled = false\nformat = 'üïô[\\[ $time \\]]($style) '\ntime_format = '%T'\nutc_time_offset = '-5'\ntime_range = '10:00:00-14:00:00'\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt Function in Cmd\nDESCRIPTION: This snippet defines a custom pre-prompt function in Cmd using Clink. It prints a rocket emoji before drawing the prompt, demonstrating how to customize what appears before the prompt is rendered.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Customizing Kubernetes Context in Starship Prompt\nDESCRIPTION: Customizes the Kubernetes module display with a custom format, enabling the module, and defining special styling for specific contexts. This example shows K8s information with emojis and custom colors.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Ion\nDESCRIPTION: Configuration snippet to add to the Ion shell configuration file (~/.config/ion/initrc) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/ion/initrc\n\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship Shell Prompt\nDESCRIPTION: Configuration example for customizing the PHP module in Starship prompt with a custom format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: Configuration example for the Node.js module in Starship, showing how to customize the format with a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Specific Kubernetes Settings in Starship (TOML)\nDESCRIPTION: Sets up context-specific configurations for the Kubernetes module in Starship prompt, including custom styles, symbols, and aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates the configuration of the git_commit module in Starship prompt. It sets a custom commit hash length and tag symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Binary for Version Detection in Starship\nDESCRIPTION: TOML configuration that limits Starship to use only python3 binary for detecting Python version, useful when working exclusively with Python 3.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module without Custom Error Shape\nDESCRIPTION: TOML configuration for customizing the command prompt character using the same symbol but different colors for success and error states\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to customize the continuation prompt with filled arrows\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Using Windows Starship Executable in WSL (TOML)\nDESCRIPTION: This configuration shows how to use a Windows Starship executable for rendering git_status when working with Windows paths in WSL (Windows Subsystem for Linux).\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: TOML configuration for customizing the Deno runtime version display in Starship prompt, using the dino emoji and green coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Installing Gruvbox Rainbow Preset for Starship (Shell)\nDESCRIPTION: This command installs the Gruvbox Rainbow preset for Starship by creating or overwriting the starship.toml configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/presets/gruvbox-rainbow.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset gruvbox-rainbow -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Module with Command Execution in Starship\nDESCRIPTION: Demonstrates configuration of a custom module with command output, file detection, and conditional display using TOML configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[custom.foo]\ncommand = 'echo foo'\ndetect_files = ['foo']\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes File Detection\nDESCRIPTION: Sets up Kubernetes module to only display when k8s files are present in directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring vcsh Module in Starship\nDESCRIPTION: Configuration for the vcsh module in Starship prompt, setting a bold blue format with a üÜÖ symbol followed by the repository name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: Elvish Shell Init Update\nDESCRIPTION: Changes the Elvish shell initialization to use 'catch' for version 0.18 compatibility\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_15\n\nLANGUAGE: elvish\nCODE:\n```\nChange Elvish init to `catch` for 0.18\n```\n\n----------------------------------------\n\nTITLE: Installing No-Nerd-Font Preset for Starship\nDESCRIPTION: Command to install the no-nerd-font preset configuration for Starship shell prompt. This saves the preset configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientRPrompt in Fish\nDESCRIPTION: Demonstrates how to customize the right side of the transient prompt in Fish shell to display command time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Continuation Prompt in Starship\nDESCRIPTION: This snippet shows how to customize the continuation prompt that displays when entering an incomplete statement, replacing the default with two filled-in arrows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Character Module Configuration with Custom Error Shape\nDESCRIPTION: TOML configuration for customizing the character module with different symbols for success and error states. Uses distinct shapes (‚ûú for success, ‚úó for error) with color coding.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship Prompt\nDESCRIPTION: Example configuration for the Mojo programming language module in Starship prompt. This sets the format for displaying Mojo version and hash information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Conda Environment Display in Starship\nDESCRIPTION: TOML configuration for customizing how Starship displays the current Conda environment. Modifies the format and style of the environment name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship\nDESCRIPTION: Example configuration for the shell level (SHLVL) indicator module showing basic format configuration and threshold settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_104\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module without Custom Error Shape in Starship\nDESCRIPTION: This TOML snippet configures the Character module in Starship to use the same arrow symbol for both success and error states, differentiated only by color (green for success, red for error).\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship Prompt with TOML\nDESCRIPTION: Example configuration for customizing the Daml SDK module in Starship prompt. This example modifies the format to display the Daml version with a custom prefix and bright green styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Pastel Powerline Configuration Settings\nDESCRIPTION: Complete TOML configuration file for the Pastel Powerline preset. Includes custom formatting for various prompt segments including directory, git status, language versions, and command execution time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pastel-powerline.toml\n```\n\n----------------------------------------\n\nTITLE: Customizing Swift Module in Starship (TOML)\nDESCRIPTION: This example shows how to customize the Swift module in Starship prompt. It sets a custom format with a race car emoji and red bold styling for displaying the Swift version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module Symbols in Starship Prompt (TOML)\nDESCRIPTION: Default symbols table configuration for the OS module in Starship prompt. This table maps each operating system type to a specific emoji symbol that will be displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Customizing Lua Module in Starship (TOML)\nDESCRIPTION: This configuration customizes the Lua module in Starship. It changes the format to use a moon emoji and sets a bold blue style for the version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship Terminal Prompt (TOML)\nDESCRIPTION: Example configuration for customizing the PHP module appearance in Starship prompt. This changes the format to use a blue diamond emoji and a specific color/style for the PHP version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship (TOML)\nDESCRIPTION: Example configuration for customizing the Rust module in Starship prompt. It changes the format and symbol used for displaying Rust version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Ion\nDESCRIPTION: Add this command to ~/.config/ion/initrc to initialize Starship for Ion shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the Kubernetes module display in the Starship prompt, including context aliases and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Display in Starship\nDESCRIPTION: Configuration for customizing how Docker context information is displayed in the shell prompt, including custom format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via curl on Linux/macOS\nDESCRIPTION: This command downloads and runs the Starship installation script, which installs the latest version of Starship on Linux or macOS systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape in Starship\nDESCRIPTION: Example of customizing the character module in Starship to show different symbols for success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship TOML Configuration\nDESCRIPTION: Example configuration for customizing the Golang module in Starship prompt. Sets a custom format with a race car emoji and bold cyan styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring C Module in Starship\nDESCRIPTION: Example configuration for the C module in Starship prompt, showing custom formatting options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Env Var in Starship\nDESCRIPTION: This snippet configures the `env_var` module to display the value of the `SHELL` environment variable. It sets the `variable` and `default` options within the `[env_var]` section of the `starship.toml` configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module in Starship (TOML)\nDESCRIPTION: Customizes the Kubernetes module in Starship prompt, including format, style, and context-specific configurations.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship in Nix using home-manager\nDESCRIPTION: Declarative configuration for enabling and configuring Starship in Nix using home-manager. This is added to the home.nix file to set up Starship with custom settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates the configuration for the git_metrics module in Starship. It customizes the style for added lines and modifies the format of the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Directory Path Substitutions in TOML\nDESCRIPTION: Configuration example showing how to set up path substitutions to replace long directory paths with shorter aliases in Starship's directory module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Applying No Nerd Font Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'no-nerd-font' preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship\nDESCRIPTION: Example TOML configuration for customizing the Jobs module in Starship prompt, setting custom symbol and thresholds for when to display job information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship TOML\nDESCRIPTION: Shows how to configure the continuation prompt in Starship using the continuation_prompt option in the TOML configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Customizing Starship OS Module Configuration\nDESCRIPTION: Example configuration for customizing the OS module in Starship prompt. This shows how to enable the module, change its format and style, and override specific OS symbols like Windows and Arch.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Adding Support for New Text Styles in Starship\nDESCRIPTION: This commit adds support for blink, hidden, and strikethrough text styles in Starship's output.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n* Add support for blink, hidden, and strikethrough styles. ([#4138](https://github.com/starship/starship/issues/4138)) ([aaab920](https://github.com/starship/starship/commit/aaab920f88015eb0a44e6514bf19b1db2b14829f))\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Format in Starship Prompt\nDESCRIPTION: TOML configuration that demonstrates setting up a minimal left prompt with character module and moving all other modules to the right prompt using right_format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/uk-UA/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# –ú—ñ–Ω—ñ–º—É–º –ª—ñ–≤–æ—Ä—É—á\nformat = \"\"\"$character\"\"\"\n\n# —Ä–µ—à—Ç—É –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–º–æ –ø—Ä–∞–≤–æ—Ä—É—á\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing No Empty Icons Preset in Starship with Shell\nDESCRIPTION: Command to install the No Empty Icons preset for Starship. This preset modifies Starship to only display toolset icons when their version information can be determined.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Jetpack Preset for Starship in TOML\nDESCRIPTION: This TOML configuration defines the Jetpack preset for Starship, including various module settings, symbols, and format strings for the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$cmd_duration$time\"\nadd_newline = false\n\n[directory]\ntruncation_length = 1\ntruncation_symbol = \"‚Ä¶/\"\nstyle = \"blue\"\n\n[git_branch]\nsymbol = \"\"\nstyle = \"purple\"\nformat = '[$symbol $branch]($style) '\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style))'\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\nstyle = \"purple\"\n\n[cmd_duration]\nformat = \"[$duration]($style)\"\nstyle = \"yellow\"\n\n[time]\ndisabled = false\ntime_format = \"%R\" # Hour:Minute Format\nstyle = \"bright-black\"\nformat = '[$time]($style)'\n\n[character]\nsuccess_symbol = \"[‚ùØ](purple)\"\nerror_symbol = \"[‚ùØ](red)\"\nvimcmd_symbol = \"[‚ùÆ](green)\"\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds\nDESCRIPTION: TOML configuration for setting up different battery level thresholds and their display styles\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]] # 'bold yellow' style and üí¶ symbol when capacity is between 10% and 30%\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n\n# when capacity is over 30%, the battery indicator will not be displayed\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship\nDESCRIPTION: Example configuration for enabling and customizing the Memory Usage module in Starship prompt, with custom threshold, symbol, and style settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship Prompt\nDESCRIPTION: Example TOML configuration for customizing the Golang module in Starship prompt. This configuration changes the format to display a racing car emoji followed by the Go version in bold cyan.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module to Prioritize Bun in Starship\nDESCRIPTION: This configuration modifies the Node.js module in Starship to not show when Bun configuration files are present, effectively prioritizing the Bun module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndetect_files = ['package.json', '.node-version', '!bunfig.toml', '!bun.lockb']\n```\n\n----------------------------------------\n\nTITLE: Configuring the Sudo Module in Starship with TOML\nDESCRIPTION: Example configuration for the sudo module in Starship prompt that customizes style, symbol, and enables the module which is disabled by default.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_110\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring the Character module without custom error shape in Starship\nDESCRIPTION: TOML configuration example for Character module in Starship prompt that uses the same shape but different colors for success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Displaying Username in Azure Module for Starship\nDESCRIPTION: This configuration sets up the Azure module in Starship to display the username instead of the subscription name. It customizes the format, symbol, and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Nerd Font Symbols Preset Configuration for Starship\nDESCRIPTION: This TOML configuration file defines the Nerd Font symbols for various Starship modules. It includes settings for the prompt character, AWS, Git, and other modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Use custom format\nformat = \"\"\"\\n[‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ>](bold green)\\n[‚îÇ](bold green)$directory$rust$package\\n[‚îî‚îÄ>](bold green) \"\"\"\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n[character]      # The name of the module we are configuring is \"character\"\nsuccess_symbol = \"[‚ùØ](bold green)\"     # The \"success_symbol\" segment is being set to \"‚ùØ\" with the color \"bold green\"\n\n# Configure the \"aws\" module\n[aws]\nsymbol = \"  \"\n\n[buf]\nsymbol = \" \"\n\n[c]\nsymbol = \" \"\n\n[conda]\nsymbol = \" \"\n\n[dart]\nsymbol = \" \"\n\n[directory]\nread_only = \" \"\n\n[docker_context]\nsymbol = \" \"\n\n[elixir]\nsymbol = \" \"\n\n[elm]\nsymbol = \" \"\n\n[git_branch]\nsymbol = \" \"\n\n[golang]\nsymbol = \" \"\n\n[haskell]\nsymbol = \" \"\n\n[hg_branch]\nsymbol = \" \"\n\n[java]\nsymbol = \" \"\n\n[julia]\nsymbol = \" \"\n\n[memory_usage]\nsymbol = \" \"\n\n[nim]\nsymbol = \" \"\n\n[nix_shell]\nsymbol = \" \"\n\n[nodejs]\nsymbol = \" \"\n\n[package]\nsymbol = \" \"\n\n[python]\nsymbol = \" \"\n\n[spack]\nsymbol = \"üÖ¢ \"\n\n[rust]\nsymbol = \" \"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Starship Performance with Timings Command\nDESCRIPTION: Command to output trace logs and a breakdown of module execution times in Starship, useful for identifying performance bottlenecks.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship\nDESCRIPTION: Custom format configuration for the Elm programming language module display in Starship\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version in Starship\nDESCRIPTION: Example of configuring the Pulumi module in Starship prompt to show the Pulumi version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship\nDESCRIPTION: TOML configuration for customizing the Jobs module display thresholds and symbol in Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Shell Commands in Starship with PowerShell\nDESCRIPTION: Example TOML configuration showing how to set up custom PowerShell commands in Starship prompt. Demonstrates custom command execution, file detection, and shell parameter configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\n[custom.foo]\ncommand = 'echo foo' # shows output of command\ndetect_files = ['foo'] # can specify filters but wildcards are not supported\nwhen = ''' test \"$HOME\" = \"$PWD\" '''\nformat = ' transcending [$output]($style)'\n\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst'] # filters *.pst files\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Directory Path Substitution Configuration in TOML\nDESCRIPTION: Configuration example showing how to set up directory path substitutions in Starship. Allows replacing long paths with shorter aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module in Starship\nDESCRIPTION: TOML configuration for customizing how command execution duration is displayed in the Starship prompt. Sets minimum time threshold and custom formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Raku module in Starship prompt. It customizes the format and symbol for displaying the Raku version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_98\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Go Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Go module in Starship prompt. It sets a custom format with a racing car emoji and bold cyan color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Shell Module in Starship Prompt with TOML\nDESCRIPTION: Configuration example for the Shell module in Starship prompt using TOML. This customizes the fish indicator with a fish emoji, sets PowerShell indicator to an underscore, defines a custom unknown shell message, and enables the module with cyan bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_98\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module Without Custom Error Shape\nDESCRIPTION: TOML configuration for Character module using the same shape but different colors for success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Xonsh\nDESCRIPTION: Add this command to ~/.xonshrc to initialize Starship for Xonsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Hiding Hostname in Remote Tmux Sessions in Starship Prompt\nDESCRIPTION: A TOML configuration example that hides the hostname in remote tmux sessions by detecting specific environment variables while still showing it in other contexts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Hostname Module in Starship Configuration\nDESCRIPTION: Example TOML configuration that always shows the hostname (not just in SSH sessions), with custom formatting and domain trimming.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell\nDESCRIPTION: Function to set the window title in PowerShell using Starship's Invoke-Starship-PreCommand.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd ``a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship Prompt with TOML\nDESCRIPTION: Example configuration for customizing the Deno runtime module in Starship prompt. This example modifies the format to display the Deno version with its dinosaur emoji symbol and green bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Installing No Runtime Versions Preset via Starship CLI\nDESCRIPTION: Command to install the no-runtime-versions preset configuration to the user's Starship config directory\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship Prompt\nDESCRIPTION: Example configuration for the Jobs module in Starship Prompt, customizing the symbol, number threshold, and symbol threshold settings in the starship.toml file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt with Custom Character Module in PowerShell\nDESCRIPTION: This snippet demonstrates how to enable the transient prompt feature in PowerShell and customize it to display Starship's character module. The function Invoke-Starship-TransientFunction controls what appears on the left side of the input line when using transient prompts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Module in Starship\nDESCRIPTION: Configuration example for customizing the Fennel module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fennel]\nsymbol = '‚´∞ '\n```\n\n----------------------------------------\n\nTITLE: Setting Status Styles in TOML\nDESCRIPTION: Adds success_style and failure_style options to the status module. This allows customizing the appearance of the status indicator based on whether the previous command succeeded or failed.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[status]\nsuccess_style = \"bold green\"\nfailure_style = \"bold red\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Transient Prompt in Cmd with Lua\nDESCRIPTION: Customizes the transient prompt display in Cmd shell using Lua, showing the Starship character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration for Starship\nDESCRIPTION: This TOML configuration file defines a Starship preset that replaces Unicode symbols with plain text alternatives for all modules. It maintains the same functionality but uses ASCII characters instead of Unicode symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n[aws]\nsymbol = \"AWS \"\n\n[buf]\nsymbol = \"Buf \"\n\n[c]\nsymbol = \"C \"\n\n[cobol]\nsymbol = \"COBOL \"\n\n[conda]\nsymbol = \"conda \"\n\n[crystal]\nsymbol = \"Crystal \"\n\n[cmake]\nsymbol = \"CMake \"\n\n[daml]\nsymbol = \"Daml \"\n\n[dart]\nsymbol = \"Dart \"\n\n[deno]\nsymbol = \"Deno \"\n\n[dotnet]\nsymbol = \".NET \"\n\n[directory]\nread_only = \"RO \"\n\n[docker_context]\nsymbol = \"Docker \"\n\n[elixir]\nsymbol = \"Elixir \"\n\n[elm]\nsymbol = \"Elm \"\n\n[fennel]\nsymbol = \"Fennel \"\n\n[fossil_branch]\nsymbol = \"Fossil \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"Go \"\n\n[guix_shell]\nsymbol = \"Guix \"\n\n[gradle]\nsymbol = \"Gradle \"\n\n[haskell]\nsymbol = \"Haskell \"\n\n[haxe]\nsymbol = \"Haxe \"\n\n[helmfile]\nsymbol = \"Helmfile \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[java]\nsymbol = \"Java \"\n\n[julia]\nsymbol = \"Julia \"\n\n[kotlin]\nsymbol = \"Kotlin \"\n\n[lua]\nsymbol = \"Lua \"\n\n[meson]\nsymbol = \"Meson \"\n\n[nim]\nsymbol = \"Nim \"\n\n[nodejs]\nsymbol = \"NodeJS \"\n\n[ocaml]\nsymbol = \"OCaml \"\n\n[opa]\nsymbol = \"OPA \"\n\n[os.symbols]\nAlpine = \"Alpine \"\nAlmaLinux = \"AlmaLinux \"\nAmazon = \"Amazon \"\nAndroid = \"Android \"\nAntergos = \"Antergos \"\narch = \"Arch \"\nArtix = \"Artix \"\nCentOS = \"CentOS \"\nDebian = \"Debian \"\nDragonFly = \"DragonFly \"\nEndeavourOS = \"EndeavourOS \"\nFedora = \"Fedora \"\nFreeBSD = \"FreeBSD \"\nGaruda = \"Garuda \"\nGentoo = \"Gentoo \"\nHaiku = \"Haiku \"\nIllumos = \"Illumos \"\nKali = \"Kali \"\n\"Mabox\" = \"Mabox \"\n\"Macos\" = \"MacOS \"\n\"Manjaro\" = \"Manjaro \"\n\"Mariner\" = \"Mariner \"\n\"MidnightBSD\" = \"MidnightBSD \"\n\"Mint\" = \"Mint \"\nnetbsd = \"NetBSD \"\n\"NixOS\" = \"NixOS \"\n\"OpenBSD\" = \"OpenBSD \"\n\"openSUSE\" = \"openSUSE \"\n\"openSUSE Tumbleweed\" = \"openSUSE Tumbleweed \"\n\"Oracle\" = \"Oracle \"\n\"Pop\" = \"Pop \"\n\"Raspbian\" = \"Raspbian \"\n\"Redhat\" = \"Redhat \"\n\"RedHatEnterprise\" = \"RedHatEnterprise \"\n\"Redox\" = \"Redox \"\n\"Solus\" = \"Solus \"\n\"SUSE\" = \"SUSE \"\n\"Ubuntu\" = \"Ubuntu \"\n\"Unknown\" = \"Unknown \"\n\"Windows\" = \"Windows \"\n\n[package]\nsymbol = \"Package \"\n\n[perl]\nsymbol = \"Perl \"\n\n[php]\nsymbol = \"PHP \"\n\n[pijul_channel]\nsymbol = \"Pijul \"\n\n[pulumi]\nsymbol = \"Pulumi \"\n\n[purescript]\nsymbol = \"PureScript \"\n\n[python]\nsymbol = \"Python \"\n\n[rlang]\nsymbol = \"R \"\n\n[raku]\nsymbol = \"Raku \"\n\n[red]\nsymbol = \"Red \"\n\n[ruby]\nsymbol = \"Ruby \"\n\n[rust]\nsymbol = \"Rust \"\n\n[scala]\nsymbol = \"Scala \"\n\n[swift]\nsymbol = \"Swift \"\n\n[terraform]\nsymbol = \"Terraform \"\n\n[vlang]\nsymbol = \"V \"\n\n[vagrant]\nsymbol = \"Vagrant \"\n\n[zig]\nsymbol = \"Zig \"\n\n[solidity]\nsymbol = \"Solidity \"\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset Configuration\nDESCRIPTION: Complete TOML configuration file defining the Jetpack preset settings for Starship prompt customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/jetpack.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship\nDESCRIPTION: TOML configuration for enabling and customizing the memory usage display in Starship prompt with custom threshold and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring the Shell Module in Starship\nDESCRIPTION: Configuration example for customizing the Shell module in Starship prompt, including custom indicators for different shells, styling, and enabling the module which is disabled by default.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship\nDESCRIPTION: Configuration for the SHLVL module that shows the current shell level. This example sets a custom format and threshold for displaying the shell level.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_99\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Module in Starship\nDESCRIPTION: Example configuration for the Solidity version display module with custom formatting\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship\nDESCRIPTION: Example configuration for the Helm module in Starship prompt, demonstrating how to customize its format with a bold white color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module to Exclude Bun Files in Starship\nDESCRIPTION: This configuration modifies the Node.js module in Starship to not trigger on Bun-specific files, effectively replacing Node.js detection with Bun.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndetect_files = ['package.json', '.node-version', '!bunfig.toml', '!bun.lockb']\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Module in Starship (TOML)\nDESCRIPTION: Customizes the format of the Erlang module in the Starship prompt, displaying 'e' followed by the version in bold red.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[erlang]\nformat = 'via [e $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Pure Preset Configuration for Starship (TOML)\nDESCRIPTION: This TOML configuration file defines the Pure preset for Starship, setting various prompt components and their appearance to mimic the Pure prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# Full path\n[directory]\nstyle = \"blue\"\n\n# Symbol for elevated privileges\n[character]\nsuccess_symbol = \"[‚ùØ](purple)\" # The \"‚ùØ\" symbol\nerror_symbol = \"[‚ùØ](red)\" # The \"‚ùØ\" symbol\nvimcmd_symbol = \"[‚ùÆ](green)\" # The \"‚ùÆ\" symbol\n\n# Git information\n[git_branch]\nformat = \"[$branch]($style)\" # remove the \"on\" prefix\nstyle = \"bright-black\"\n\n[git_status]\nformat = \"([$all_status$ahead_behind]($style))\" # remove the \"[\" and \"]\" from the git status\nstyle = \"bright-black\"\n\n# Time the command took to execute\n[cmd_duration]\nformat = \"[$duration]($style) \"\n\n# Make prompt a single line instead of two lines\n[line_break]\ndisabled = true\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Ruby programming language version is displayed in the Starship prompt. Changes the default diamond symbol to a triangle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Go Module Configuration (TOML)\nDESCRIPTION: Example of using the mod_version variable in the Go module configuration for Starship prompt. It displays both the Go version and the module version requirement.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection in Starship (TOML)\nDESCRIPTION: Enables the Kubernetes module in Starship prompt only when a 'k8s' file is present in the directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Bracketed Segments Preset Configuration Content\nDESCRIPTION: The TOML configuration that defines the bracketed segments preset format for Starship modules, referenced with @/public/presets/toml/bracketed-segments.toml.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/bracketed-segments.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/bracketed-segments.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Username Display in Starship Prompt\nDESCRIPTION: This snippet demonstrates how to configure the Azure module in Starship to display the current Azure username instead of the subscription name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how container information is displayed in the Starship prompt when running inside a container environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Environment Variables in Starship\nDESCRIPTION: Extended configuration showing how to display multiple environment variables in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Context Pattern Matching\nDESCRIPTION: Advanced configuration for customizing Kubernetes context display based on pattern matching and user roles.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Perl module display in Starship prompt with custom emoji and formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: TOML configuration for the direnv module in Starship prompt, which shows whether the current rc file is loaded.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt and Pre-execution Commands in Bash\nDESCRIPTION: Demonstrates how to define custom functions that run before the prompt is drawn and before a command is executed in Bash shell using Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Testing Starship Modules with ModuleRenderer\nDESCRIPTION: Comprehensive example of testing a Starship module using ModuleRenderer, which provides utilities for mocking the environment, paths, configuration, and executing the module.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\nuse super::{Context, Module, ModuleConfig};\n\nuse crate::configs::php::PhpConfig;\nuse crate::formatter::StringFormatter;\nuse crate::utils;\n\n\npub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n   /* This is where your module code goes */\n}\n\n#[cfg(test)]\nmod tests {\n   use super::*;\n   use crate::test::ModuleRenderer;\n   use nu_ansi_term::Color;\n   use std::fs::File;\n   use std::io;\n\n\n   #[test]\n   fn should_render() -> io::Result<()> {\n      // Here you setup the testing environment\n      let tempdir = tempfile::tempdir()?;\n      // Create some file needed to render the module\n      File::create(tempdir.path().join(\"YOUR_FILE\"))?.sync_all()?;\n\n      // The output of the module\n      let actual = ModuleRenderer::new(\"YOUR_MODULE_NAME\")\n         // For a custom path\n         .path(&tempdir.path())\n         // For a custom config\n         .config(toml::toml!{\n            [YOUR_MODULE_NAME]\n            val = 1\n         })\n         // For env mocking\n         .env(\"KEY\",\"VALUE\")\n         // Run the module and collect the output\n         .collect();\n\n      // The value that should be rendered by the module.\n      let expected = Some(format!(\"{} \",Color::Black.paint(\"THIS SHOULD BE RENDERED\")));\n\n      // Assert that the actual and expected values are the same\n      assert_eq!(actual, expected);\n\n      // Close the tempdir\n      tempdir.close()\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Metrics Module in Starship\nDESCRIPTION: Example configuration for the Fossil Metrics module that shows added and deleted lines in the current check-out. This configuration customizes style and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship with TOML\nDESCRIPTION: Example configuration for the PHP module in Starship prompt that customizes the format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Replacing prompt_order with format in Starship v0.45.0\nDESCRIPTION: Shows how to migrate from the array-based prompt_order configuration to the new string-based format configuration which allows for greater customization of the prompt rendering order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Debug Trap in Bash\nDESCRIPTION: Sets up a DEBUG signal trap in Bash for custom command execution handling, displaying a rocket symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Capture DEBUG *avant* de lancer starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship\nDESCRIPTION: Example configuration for customizing the Golang module in Starship prompt to display the Go version with a racing car emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: TOML configuration for customizing the Node.js module display in Starship prompt with a robot emoji and version number in bold green.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Applying No Runtime Versions Preset in Starship (Shell)\nDESCRIPTION: Shell command to apply the 'no-runtime-versions' preset to the Starship configuration file. This preset hides the version of language runtimes in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Continuation Prompt Configuration\nDESCRIPTION: TOML configuration for customizing the continuation prompt appearance in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# Um prompt de continua√ß√£o que exibe duas setas preenchidas\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to set up a minimal left prompt with all other modules moved to the right prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship Prompt with TOML\nDESCRIPTION: Example TOML configuration for customizing the Helm module in Starship shell prompt. This snippet shows how to modify the format of the Helm version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Threshold in TOML\nDESCRIPTION: Uses best match instead of first match for battery.display threshold. This allows for more flexible configuration of when different battery status indicators are shown.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[battery]\ndisplay = [{ threshold = 10, style = \"bold red\" }, { threshold = 30, style = \"bold yellow\" }]\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Module in Starship\nDESCRIPTION: Configuration example for the Time module in Starship prompt. This enables the module, sets a custom format with an emoji, specifies 24-hour time format, sets a UTC offset of -5 hours, and limits display to a specific time range.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_110\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[time]\ndisabled = false\nformat = 'üïô[\\[ $time \\]]($style) '\ntime_format = '%T'\nutc_time_offset = '-5'\ntime_range = '10:00:00-14:00:00'\n```\n\n----------------------------------------\n\nTITLE: Tokyo Night Preset TOML Configuration for Starship\nDESCRIPTION: Complete TOML configuration for the Tokyo Night preset in Starship, defining various module settings and styles.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/tokyo-night.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# A minimal left prompt\nformat = \"$character\"\n\n# move the rest of the prompt to the right\nright_format = \"$all\"\n\n# Replace the \"‚ùØ\" symbol in the prompt with \"‚ûú\"\n[character] # The name of the module we are configuring is \"character\"\nsuccess_symbol = \"[‚ûú](bold green)\" # The \"success_symbol\" segment is being set to \"‚ûú\" with the color \"bold green\"\n\n[battery]\nfull_symbol = \"üîã\"\ncharging_symbol = \"üîå\"\ndischarging_symbol = \"‚ö°\"\n\n[[battery.display]]\nthreshold = 30\nstyle = \"bold red\"\n\n[cmd_duration]\nmin_time = 100\nformat = \"took [$duration](bold yellow)\"\n\n[directory]\ntruncation_length = 8\nformat = \"[$path]($style)[$lock_symbol]($lock_style)\"\n\n[hostname]\nssh_only = false\nformat = \"<[$hostname]($style)>\"\nstyle = \"bold dimmed green\"\n\n[memory_usage]\nformat = \"via $symbol [${ram}( | ${swap})]($style)\"\nthreshold = 70\nstyle = \"bold dimmed white\"\ndisabled = false\n\n[git_branch]\nsymbol = \"üå± \"\ntruncation_length = 4\ntruncation_symbol = \"\"\nstyle = \"bold purple\"\n\n[git_state]\nstyle = \"bold dimmed red\"\n\n[git_status]\nstyle = \"bold red\"\n\n[nodejs]\nsymbol = \"‚¨¢ \"\nstyle = \"bold dimmed green\"\n\n[username]\nstyle_user = \"bold dimmed blue\"\nshow_always = false\n\n# palette tables should be last in the config ‚öìÔ∏è\n[palettes.tokyo-night]\nblack = \"#414868\"\nred = \"#f7768e\"\ngreen = \"#73daca\"\nyellow = \"#e0af68\"\nblue = \"#7aa2f7\"\npurple = \"#bb9af7\"\ncyan = \"#7dcfff\"\nwhite = \"#c0caf5\"\n\n[palette]\ncolor_palette = \"tokyo-night\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module to Display Username in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to configure the Azure module in Starship to display the username instead of the subscription. It modifies the format to show the username.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship (TOML)\nDESCRIPTION: Example configuration for the status module in Starship prompt, customizing the style, symbol, format and other options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Time Module Display in Starship Prompt\nDESCRIPTION: TOML configuration example for the time module, showing how to enable it, customize the format, set time zone offset, and specify a time range for display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[time]\ndisabled = false\nformat = 'üïô[\\[ $time \\]]($style) '\ntime_format = '%T'\nutc_time_offset = '-5'\ntime_range = '10:00:00-14:00:00'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ble.sh TransientPrompt in Bash with Character Module\nDESCRIPTION: Bash configuration to set up transient prompt using Ble.sh framework and display Starship's character module as the simplified prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\n----------------------------------------\n\nTITLE: Using mod_version Variable in Golang Module Configuration\nDESCRIPTION: Example showing how to include both the Go version and mod_version in the Starship prompt format for the Golang module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Display in Starship (TOML)\nDESCRIPTION: Sets up the format for displaying Git state information in the Starship prompt, including custom styling for cherry-pick operations.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[git_state]\nformat = '[\\($state( $progress_current of $progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Conda Environment Display in Starship (TOML)\nDESCRIPTION: This configuration snippet for the conda module in Starship modifies the format of the conda environment display, changing the color and text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Module in Starship (TOML)\nDESCRIPTION: Configuration example for the git_commit module showing how to customize the commit hash length and tag symbol used in the prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: No Nerd Font Preset TOML Configuration\nDESCRIPTION: TOML configuration file for the No Nerd Font preset that restricts symbols to emoji and powerline sets, making it compatible with systems without Nerd Fonts installed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-nerd-font.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt with Character Module in PowerShell\nDESCRIPTION: This snippet shows how to enable and customize the transient prompt feature in PowerShell. It replaces the previous prompt with Starship's character module and enables the transient prompt functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship\nDESCRIPTION: This example customizes the Scala module within the Starship prompt. It changes the Scala module's symbol to a star emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Display Configuration\nDESCRIPTION: Configuration for displaying Azure subscription information in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version in Starship\nDESCRIPTION: Example configuration for the Pulumi module in Starship prompt, including the Pulumi version in the format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module to Use Specific Binary in Starship\nDESCRIPTION: Example configuration for specifying which Python binary Starship should use to detect the installed version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module with Project Aliases\nDESCRIPTION: Example configuration for the Google Cloud module that displays account and project with custom project name aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n[gcloud.project_aliases]\nvery-long-project-name = 'vlpn'\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientRightPrompt with Time Module in Fish\nDESCRIPTION: This snippet customizes the transient right prompt in Fish shell. It defines a function to display Starship's time module on the right side of the prompt when transient prompt is enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version Display\nDESCRIPTION: Configuration for showing Pulumi module with version information in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version Display in Starship\nDESCRIPTION: Example configuration for displaying Pulumi version along with the stack in the Starship prompt, using a custom format and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Custom Package Module Configuration Example in Starship\nDESCRIPTION: Example configuration for the Package module in starship.toml that customizes the format and style. This module displays version information for package repositories based on various package managers.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module to Use Python 3 Binary Only\nDESCRIPTION: Example configuration for the Python module in Starship prompt, specifying to only use the python3 binary for version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to customize the continuation prompt displayed for incomplete statements.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Branch Tracking Info in Starship (TOML)\nDESCRIPTION: Configures the git_status module to show ahead/behind count of the tracked branch with custom symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Window Title Configuration in CMD\nDESCRIPTION: Sets window title in CMD using Lua function with username, computer name and current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\": \"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Mode Indicator in Starship\nDESCRIPTION: Example of customizing the vim mode indicator in the character module for Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Basic Kubernetes Module Configuration in Starship\nDESCRIPTION: Example configuration for the Kubernetes module showing custom format and enabling the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Window Title Customization in Bash/Zsh\nDESCRIPTION: Shows how to customize the terminal window title in Bash and Zsh shells.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Module in Starship\nDESCRIPTION: TOML configuration for customizing the Java module symbol in Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Adding Bun Module in Starship\nDESCRIPTION: This commit adds a new module for the Bun JavaScript runtime to Starship.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n* add bun module ([#4187](https://github.com/starship/starship/issues/4187)) ([85692d1](https://github.com/starship/starship/commit/85692d1bf6a8477b6879adaf8b51007389df4328))\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds\nDESCRIPTION: TOML configuration for setting up different battery level display thresholds and styles.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]]\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship\nDESCRIPTION: Configuration to enable the Sudo module on Windows systems in Starship. By default, the module is disabled on Windows since it doesn't have a default sudo command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_97\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Display in Starship\nDESCRIPTION: Example TOML configuration for the container module in Starship prompt. This customizes how container information is displayed when running inside a container environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Defining Path Substitutions for Starship Directory Module (TOML)\nDESCRIPTION: This TOML configuration defines custom substitutions for specific paths in the Starship directory module. It replaces long network paths and Java development directories with shorter aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Migrating module prefix/suffix to format (v0.45.0 example)\nDESCRIPTION: Example of the new format configuration for the cmd_duration module in Starship v0.45.0, which uses variables within a format string.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Ion\nDESCRIPTION: Initialization script for Ion shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/ion/initrc\n\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Configuring Conda Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to configure the Conda environment module in Starship. It customizes the format and style of the Conda environment display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Namespace Module in Starship Prompt\nDESCRIPTION: Example configuration for the Network Namespace (netns) module in Starship prompt. This sets a custom symbol and bold yellow styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[netns]\nstyle = 'bold yellow'\nsymbol = 'üåê '\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Module in Starship Prompt\nDESCRIPTION: Configuration example for customizing the Java module symbol in Starship Prompt's starship.toml configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship\nDESCRIPTION: Example configuration for the Vagrant module in Starship prompt. This snippet changes the default format to display the Vagrant version with a custom style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_112\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: Configuration example for the Node.js module in Starship prompt, showing custom format and emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Status Module in Starship\nDESCRIPTION: Configuration example for the status module showing exit codes and signals. Sets custom style, symbol and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Hostname Display in Starship Prompt with TOML\nDESCRIPTION: Example TOML configuration for always displaying the hostname in Starship shell prompt. This snippet shows how to disable SSH-only display and customize the hostname format with company domain trimming.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: Sample configuration for the direnv module in Starship prompt. This configuration enables the direnv module which shows the loading status of .envrc files.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Information Display in Starship\nDESCRIPTION: TOML configuration for customizing how container information is displayed in the shell prompt when running inside a container.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: Basic configuration for enabling the direnv module in Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship\nDESCRIPTION: TOML configuration for customizing the NATS context display in Starship prompt with custom format and style\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Bracketed Segments Preset Configuration File\nDESCRIPTION: TOML configuration file content imported from external source that defines the bracketed segments preset formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/bracketed-segments.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/bracketed-segments.toml\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 format Configuration in TOML\nDESCRIPTION: Example configuration showing how to define the module display order using the root-level `format` string in Starship v0.45.0, replacing the previous `prompt_order` array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Customizing gcloud Account and Project Display (TOML)\nDESCRIPTION: This configuration customizes the format of the gcloud module to display the account and an aliased project name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n[gcloud.project_aliases]\nvery-long-project-name = 'vlpn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ble.sh TransientRightPrompt in Bash with Time Module\nDESCRIPTION: Bash configuration to set up the right side of the transient prompt using Ble.sh to display Starship's time module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Rust Module in Starship Prompt with TOML\nDESCRIPTION: Configuration example for the Rust module in Starship prompt using TOML. This customizes the format to display \"via\" followed by a gear emoji and the Rust version in red bold text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Module Configuration in TOML\nDESCRIPTION: Example configuration for customizing the Package module in Starship prompt. This snippet shows how to change the format and style of the package version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Format Configuration in TOML\nDESCRIPTION: New format configuration using string interpolation with module variables to define prompt structure.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Azure module displays subscription information in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Configuring the Helm Module in Starship Prompt Using TOML\nDESCRIPTION: A TOML configuration example for customizing the Helm module in Starship prompt. This snippet changes the format of how the Helm version is displayed in the terminal prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship\nDESCRIPTION: Enable and customize the Memory Usage module with a custom symbol and green styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module in Specific Directories (TOML)\nDESCRIPTION: This configuration enables the Kubernetes module only in directories containing a 'k8s' file. It sets the module as enabled and specifies the detection file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring the Status Module in Starship with TOML\nDESCRIPTION: Example configuration for the status module in Starship prompt that customizes style, symbol, and format, including enabling pipestatus reporting and signal name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_109\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[status]\nstyle = 'bg:blue'\nsymbol = 'üî¥ '\nsuccess_symbol = 'üü¢ SUCCESS'\nformat = '[\\[$symbol$common_meaning$signal_name$maybe_int\\]]($style) '\nmap_symbol = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Hide in Remote tmux Sessions\nDESCRIPTION: A TOML configuration example for hiding the hostname in Starship prompt when in a remote tmux session. This uses the detect_env_vars option to determine when to show the hostname.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Conda Environment Display in Starship\nDESCRIPTION: TOML configuration for modifying how Conda virtual environments are shown in the Starship prompt. Customizes the format and styling of the environment name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection\nDESCRIPTION: Configuration to enable the Kubernetes module only in directories containing a specific file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Current Directory in Terminal Tab Title for Bash/Zsh\nDESCRIPTION: This complete example demonstrates how to display the current directory name in the terminal tab title by defining a window title function and integrating it with Starship as a pre-command function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship (TOML)\nDESCRIPTION: Sets a custom symbol for the Elixir module in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Bash\nDESCRIPTION: This command initializes Starship for the Bash shell. It should be added to the end of the ~/.bashrc file to enable Starship on shell startup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape\nDESCRIPTION: TOML configuration for customizing the command prompt character with different symbols for success and error states\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring git_status module in v0.45.0 (TOML)\nDESCRIPTION: Example of how to configure the git_status module to show sync count in v0.45.0, replacing the previous 'show_sync_count' property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git State Display in Starship\nDESCRIPTION: This snippet shows how to configure the Git state module in Starship, including options for different states of a Git repository and their corresponding display formats.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_state]\nformat = '[\\($state( $progress_current/$progress_total)\\)]($style) '\ncherry_pick = '[üçí PICKING](bold red)'\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection in Starship (TOML)\nDESCRIPTION: Enables the Kubernetes module in Starship and sets it to only show in directories containing a 'k8s' file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring module prefix in Starship pre-v0.45.0\nDESCRIPTION: Example of how module prefix was configured before Starship v0.45.0, using the 'cmd_duration' module as an example.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Complex Kubernetes Context Patterns\nDESCRIPTION: Defines multiple context patterns for different Kubernetes environments with custom styling and aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Using Windows Starship Executable in WSL (TOML)\nDESCRIPTION: This configuration allows using the Windows Starship executable on Windows paths when working in WSL (Windows Subsystem for Linux).\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: TOML configuration to set up a minimal left prompt and move the rest to the right prompt using Starship's right_format option.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship\nDESCRIPTION: Configuration example for the Mojo module in Starship, showing how to customize the format of the Mojo prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Language Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Ruby programming language module symbol in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Singularity Module in Starship\nDESCRIPTION: Example configuration for the Singularity container module showing custom format with emoji\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module Configuration\nDESCRIPTION: Example configuration for customizing the OS module display format, style, and custom symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Sample Starship Configuration in TOML\nDESCRIPTION: Demonstrates basic Starship configuration options including adding newlines, customizing symbols, and disabling modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Hiding Hostname in Remote Tmux Sessions\nDESCRIPTION: Configuration example that hides the hostname when in a remote tmux session by detecting specific environment variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Bracketed Segments Preset Configuration in TOML\nDESCRIPTION: The complete TOML configuration for the Bracketed Segments preset, which modifies all built-in modules to display their segments in brackets instead of using default Starship wording.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/bracketed-segments.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/bracketed-segments.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Vagrant module in Starship prompt, setting a custom format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_108\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring module format in Starship v0.45.0\nDESCRIPTION: Example of how module format is configured in Starship v0.45.0, using the 'cmd_duration' module as an example. This replaces the previous 'prefix' and 'suffix' properties.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription Aliases in Starship Prompt\nDESCRIPTION: This snippet shows how to set up aliases for Azure subscription names in the Starship configuration to display shorter names in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Setting Up Windows Starship Executable in WSL for Git Status\nDESCRIPTION: Configuration to use a Windows Starship executable when accessing Windows paths in WSL (Windows Subsystem for Linux), allowing consistent git status rendering across environments.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Branch Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet shows the configuration for the Fossil Branch module in Starship prompt. It sets a custom symbol and truncation options for the branch name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_branch]\nsymbol = 'ü¶é '\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship Prompt with TOML\nDESCRIPTION: Example configuration for customizing the Dart programming language module in Starship prompt. This example changes the symbol and styling to display the Dart version with a red color scheme.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Running Starship Help Command\nDESCRIPTION: This command shows how to access the help documentation for the Starship prompt command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship Shell Prompt\nDESCRIPTION: Example configuration for customizing how the Perl module appears in the Starship prompt. This changes the display format and symbol used for Perl version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: TOML configuration for customizing how OCaml version information is displayed in the Starship prompt. Sets the format to show the OCaml version with a camel emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring R Language Module in Starship\nDESCRIPTION: Configuration example for the R language module in Starship prompt, setting a custom format with the R symbol and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-level Prompt with SHLVL Module\nDESCRIPTION: Configuration that uses the repeat and repeat_offset options to create a multi-level prompt where each level adds a chevron character, with the last character colored based on return status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_100\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Module in Starship (TOML)\nDESCRIPTION: This snippet configures the Local IP module in Starship. It enables the module for all sessions, customizes the format, and sets a bold red style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship with TOML\nDESCRIPTION: Example configuration for the Perl module in Starship prompt that changes the format and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell with User and Path\nDESCRIPTION: PowerShell function that customizes the terminal window title to show the username, computer name, and current path using Starship's pre-command hook.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship\nDESCRIPTION: Configuration for customizing the Elixir module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: TOML configuration for customizing the Odin programming language prompt display with commit information enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Line Break Module Configuration\nDESCRIPTION: Configuration for disabling the line break in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring character module in v0.45.0 (TOML)\nDESCRIPTION: Changes to the default configuration of the character module in v0.45.0, showing replacements for removed properties.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[character]\n-- symbol = \"‚ùØ\"\n-- error_symbol = \"‚úñ\"\n-- use_symbol_for_status = true\n-- vicmd_symbol = \"‚ùÆ\"\n++ success_symbol = \"[‚ùØ](bold green)\"\n++ error_symbol = \"[‚ùØ](bold red)\"\n++ vicmd_symbol = \"[‚ùÆ](bold green)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Error Shape\nDESCRIPTION: TOML configuration for Character module with custom success and error symbols, using different symbols to indicate command success or failure.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module Configuration in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the OS module in Starship prompt. This snippet shows how to customize the format, style, enable the display, and override default symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Module Prefix Configuration in TOML\nDESCRIPTION: Example configuration showing how to set a module's prefix in Starship versions before v0.45.0, using the cmd_duration module as an example.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Directory Path Substitutions Configuration\nDESCRIPTION: Configuration example showing how to define custom path substitutions to replace long network paths or Java development directories\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n[directory.substitutions]\n'/Volumes/network/path' = '/net'\n'src/com/long/java/path' = 'mypath'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Bash\nDESCRIPTION: Configuration lines to add to ~/.bashrc to initialize Starship in Bash shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.bashrc\n\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: C Compiler Module Configuration\nDESCRIPTION: TOML configuration for customizing how the C compiler information is displayed in the prompt, showing compiler name and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Environment Variables in Starship\nDESCRIPTION: Example showing how to configure multiple environment variables display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Character Module Configuration without Custom Error Shape\nDESCRIPTION: TOML configuration for the character module using the same shape (‚ûú) but different colors to indicate success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship Prompt\nDESCRIPTION: Example configuration for the Golang module in Starship prompt that customizes the format to display a race car emoji followed by the Go version in bold cyan.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship Prompt with TOML\nDESCRIPTION: Example configuration for customizing the Crystal programming language module in Starship prompt. This example changes the format to display the Crystal version with a custom symbol and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Region Display in Starship Prompt\nDESCRIPTION: This snippet shows how to configure the AWS module in Starship to display the current AWS region with custom styling and region aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$region]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n```\n\n----------------------------------------\n\nTITLE: Displaying Multiple Environment Variables in Starship\nDESCRIPTION: This configuration shows how to display multiple environment variables using the `env_var` module in Starship. It uses the `[env_var.SHELL]` and `[env_var.USER]` sections to define the variables to display and their default values.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module in Starship - Basic\nDESCRIPTION: TOML configuration example for customizing the Python module with custom symbol and pyenv settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: No Nerd Font Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the 'no-nerd-font' preset for Starship. It sets various module symbols and configurations to ensure compatibility with non-Nerd Font environments.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Use custom format\nformat = \"$all\"\n\n# Wait 10 milliseconds for starship to check files under the current directory.\nscan_timeout = 10\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n[aws]\nsymbol = \"AWS \"\n\n[bun]\nsymbol = \"Bun \"\n\n[c]\nsymbol = \"C \"\n\n[cobol]\nsymbol = \"COBOL \"\n\n[conda]\nsymbol = \"Conda \"\n\n[crystal]\nsymbol = \"Cr \"\n\n[daml]\nsymbol = \"Daml \"\n\n[dart]\nsymbol = \"Dart \"\n\n[deno]\nsymbol = \"Deno \"\n\n[docker_context]\nsymbol = \"Docker \"\n\n[dotnet]\nsymbol = \".NET \"\n\n[elixir]\nsymbol = \"Elixir \"\n\n[elm]\nsymbol = \"Elm \"\n\n[erlang]\nsymbol = \"Erlang \"\n\n[fennel]\nsymbol = \"Fennel \"\n\n[fossil_branch]\nsymbol = \"Branch \"\n\n[gcloud]\nsymbol = \"G \"\n\n[git_branch]\nsymbol = \"Branch \"\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = \" Tag \"\n\n[git_status]\nahead = \"‚á°\"\nbehind = \"‚á£\"\nconflicted = \"‚â†\"\ndeleted = \"‚úò\"\ndiverged = \"Y\"\nmodified = \"!\"\nrenamed = \"¬ª\"\nstaged = \"+\"\nstashed = \"$\"\nuntracked = \"?\"\n\n[golang]\nsymbol = \"Go \"\n\n[guix_shell]\nsymbol = \"Guix \"\n\n[haskell]\nsymbol = \"Haskell \"\n\n[haxe]\nsymbol = \"Haxe \"\n\n[helm]\nsymbol = \"Helm \"\n\n[hg_branch]\nsymbol = \"Branch \"\n\n[java]\nsymbol = \"Java \"\n\n[julia]\nsymbol = \"Julia \"\n\n[kotlin]\nsymbol = \"Kotlin \"\n\n[lua]\nsymbol = \"Lua \"\n\n[memory_usage]\nsymbol = \"Memory \"\n\n[meson]\nsymbol = \"Meson \"\n\n[nim]\nsymbol = \"Nim \"\n\n[nix_shell]\nsymbol = \"Nix \"\n\n[nodejs]\nsymbol = \"Node.js \"\n\n[ocaml]\nsymbol = \"OCaml \"\n\n[opa]\nsymbol = \"OPA \"\n\n[os.symbols]\nAlmaLinux = \"AlmaLinux \"\nAlpine = \"Alpine \"\nAmazon = \"Amazon \"\nAndroid = \"Android \"\nArch = \"Arch \"\nCentos = \"Centos \"\nDebian = \"Debian \"\nDragonfly = \"Dragonfly \"\nEmscripten = \"Emscripten \"\nEndeavour = \"Endeavour \"\nFedora = \"Fedora \"\nFreeBSD = \"FreeBSD \"\nGaruda = \"Garuda \"\nGentoo = \"Gentoo \"\nHaikuOS = \"HaikuOS \"\niOS = \"iOS \"\nKali = \"Kali \"\n\"Linux Mint\" = \"Linux Mint \"\n\"Linux\" = \"Linux \"\nMac = \"macOS \"\nManjaro = \"Manjaro \"\nMariner = \"Mariner \"\nMidnightBSD = \"MidnightBSD \"\nNixOS = \"NixOS \"\nOpenBSD = \"OpenBSD \"\nOpenCloudOS = \"OpenCloudOS \"\nopenEuler = \"openEuler \"\nOpenSUSE = \"OpenSUSE \"\nOracleLinux = \"OracleLinux \"\n\"Pop!_OS\" = \"Pop!_OS \"\nRaspbian = \"Raspbian \"\nRocky = \"Rocky \"\nRedHatEnterprise = \"RedHatEnterprise \"\nRedox = \"Redox \"\nSabayon = \"Sabayon \"\nSlackware = \"Slackware \"\nSUSE = \"SUSE \"\nUbuntu = \"Ubuntu \"\nUnknown = \"Unknown \"\nWindows = \"Windows \"\n\n[package]\nsymbol = \"Package \"\n\n[perl]\nsymbol = \"Perl \"\n\n[php]\nsymbol = \"PHP \"\n\n[pijul_channel]\nsymbol = \"Channel \"\n\n[pulumi]\nsymbol = \"Pulumi \"\n\n[purescript]\nsymbol = \"PureScript \"\n\n[python]\nsymbol = \"Python \"\n\n[raku]\nsymbol = \"Raku \"\n\n[red]\nsymbol = \"Red \"\n\n[rlang]\nsymbol = \"R \"\n\n[ruby]\nsymbol = \"Ruby \"\n\n[rust]\nsymbol = \"Rust \"\n\n[scala]\nsymbol = \"Scala \"\n\n[solidity]\nsymbol = \"Solidity \"\n\n[spack]\nsymbol = \"Spack \"\n\n[swift]\nsymbol = \"Swift \"\n\n[terraform]\nsymbol = \"Terraform \"\n\n[zig]\nsymbol = \"Zig \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Guix-shell Module in Starship\nDESCRIPTION: Configuration example for disabling the Guix-shell module and customizing its format with a custom icon.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Module Format Configuration in TOML\nDESCRIPTION: Example configuration showing how to use the new `format` property for modules in Starship v0.45.0, using the cmd_duration module as an example.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL for Older Linux Distributions\nDESCRIPTION: Installation command for Starship on older Linux distributions that have compatibility issues with newer GLIBC versions, using the MUSL-compiled binary instead.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Aliases\nDESCRIPTION: TOML configuration for defining aliases for Azure subscription names to make them more concise\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Setting Windows Starship Path for WSL Integration\nDESCRIPTION: This configuration specifies the Windows path to the Starship executable when using Windows Subsystem for Linux (WSL), allowing Git status to be properly rendered when accessing Windows paths from WSL.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Customizing Guix-shell Module in Starship Prompt\nDESCRIPTION: Example TOML configuration for customizing the Guix-shell module in Starship prompt. This configuration disables the module and changes the format to display an ox emoji in yellow bold.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship\nDESCRIPTION: Example of customizing the PHP module in Starship prompt with a custom format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt and Pre-execution Commands in Cmd\nDESCRIPTION: Shows how to define custom functions that run before the prompt is drawn and before a command is executed in Cmd shell using Clink and Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Version Module in Starship Prompt (TOML)\nDESCRIPTION: Configuration example for the Package Version module in Starship prompt, which displays the version of a package in the current directory with a custom format and gift box symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: TOML configuration for customizing how Odin programming language version is displayed in the Starship prompt. Enables commit hash display and uses a custom icon.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the symbol used for the Scala module in Starship prompt to a star emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module with Region Aliases\nDESCRIPTION: Example configuration for the Google Cloud module that displays the account and region with custom region aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nsymbol = 'Ô∏èüá¨Ô∏è '\n[gcloud.region_aliases]\nus-central1 = 'uc1'\nasia-northeast1 = 'an1'\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the Plain Text Symbols preset for Starship. It replaces various Unicode symbols with plain text alternatives for different modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n[aws]\nsymbol = \"AWS \"\n\n[buf]\nsymbol = \"buf \"\n\n[c]\nsymbol = \"C \"\n\n[conda]\nsymbol = \"conda \"\n\n[dart]\nsymbol = \"dart \"\n\n[directory]\nread_only = \" ro\"\n\n[docker_context]\nsymbol = \"docker \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"go \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"julia \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[package]\nsymbol = \"package \"\n\n[python]\nsymbol = \"py \"\n\n[rlang]\nsymbol = \"R \"\n\n[ruby]\nsymbol = \"rb \"\n\n[rust]\nsymbol = \"rs \"\n\n[scala]\nsymbol = \"scala \"\n\n[spack]\nsymbol = \"spack \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship Prompt\nDESCRIPTION: A TOML configuration example for customizing the Scala module in Starship prompt. This configuration changes the default symbol to a star emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_98\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Module Display in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Bun module display in Starship prompt, showing the installed version of the Bun JavaScript runtime.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndetect_files = ['package.json', '.node-version', '!bunfig.toml', '!bun.lockb']\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship\nDESCRIPTION: Example configuration for the Nix-shell environment module in Starship prompt, showing custom messages and formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: No Nerd Font Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the No Nerd Font preset for Starship, specifying symbol configurations for various modules that don't require Nerd Fonts.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"aws \"\n\n[bun]\nsymbol = \"bun \"\n\n[c]\nsymbol = \"C \"\n\n[cobol]\nsymbol = \"cobol \"\n\n[conda]\nsymbol = \"conda \"\n\n[crystal]\nsymbol = \"cr \"\n\n[cmake]\nsymbol = \"cmake \"\n\n[daml]\nsymbol = \"daml \"\n\n[dart]\nsymbol = \"dart \"\n\n[deno]\nsymbol = \"deno \"\n\n[docker_context]\nsymbol = \"docker \"\n\n[dotnet]\nsymbol = \".NET \"\n\n[elixir]\nsymbol = \"exs \"\n\n[elm]\nsymbol = \"elm \"\n\n[fennel]\nsymbol = \"fnl \"\n\n[fossil_branch]\nsymbol = \"fossil \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"go \"\n\n[guix_shell]\nsymbol = \"guix \"\n\n[haskell]\nsymbol = \"hs \"\n\n[haxe]\nsymbol = \"hx \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[hostname]\nssh_symbol = \"ssh \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"jl \"\n\n[kotlin]\nsymbol = \"kt \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[meson]\nsymbol = \"meson \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[ocaml]\nsymbol = \"ml \"\n\n[opa]\nsymbol = \"opa \"\n\n[os.symbols]\nAlpine = \"alp \"\nAmazon = \"amz \"\nAndroid = \"andr \"\nArch = \"rch \"\nCentos = \"cent \"\nDebian = \"deb \"\nDragonfly = \"dfbsd \"\nEmscripten = \"emsc \"\nEndeavouros = \"ndev \"\nFedora = \"fed \"\nFreeBSD = \"fbsd \"\nGaruda = \"garu \"\nGentoo = \"gent \"\nHaikuOS = \"haiku \"\niOS = \"ios \"\nKali = \"kali \"\nMac = \"mac \"\nLinux = \"lnx \"\nManjaro = \"mjo \"\nNixOS = \"nix \"\nOpenBSD = \"obsd \"\nopenSUSE = \"osuse \"\nOracle = \"orc \"\nPop = \"pop \"\nPorteus = \"pteus \"\nRasperryPi = \"rasp \"\nRedhat = \"rhl \"\nRedHatEnterprise = \"rhel \"\nVoid = \"void \"\nWindows = \"win \"\n\n[package]\nsymbol = \"pkg \"\n\n[perl]\nsymbol = \"pl \"\n\n[php]\nsymbol = \"php \"\n\n[pijul_channel]\nsymbol = \"pijul \"\n\n[pulumi]\nsymbol = \"pulumi \"\n\n[purescript]\nsymbol = \"purs \"\n\n[python]\nsymbol = \"py \"\n\n[raku]\nsymbol = \"raku \"\n\n[ruby]\nsymbol = \"rb \"\n\n[rust]\nsymbol = \"rs \"\n\n[scala]\nsymbol = \"scala \"\n\n[solidity]\nsymbol = \"solidity \"\n\n[spack]\nsymbol = \"spack \"\n\n[status]\nsymbol = \"x \"\n\n[sudo]\nsymbol = \"sudo \"\n\n[swift]\nsymbol = \"swift \"\n\n[terraform]\nsymbol = \"tf \"\n\n[zig]\nsymbol = \"zig \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Module in Starship Prompt\nDESCRIPTION: Configuration example for customizing the Julia module symbol in Starship Prompt's starship.toml configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Applying No Nerd Font Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'no-nerd-font' preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Metrics Module in Starship\nDESCRIPTION: Example configuration for the git_metrics module in Starship prompt. Customizes the style for added lines and format of the module display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Character Module Configuration Changes in TOML\nDESCRIPTION: Shows the migration of character module properties to new success_symbol and error_symbol format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nerror_symbol = \"[‚úñ](bold red)\"\n```\n\n----------------------------------------\n\nTITLE: Customizing the Character module with custom error shapes in Starship\nDESCRIPTION: TOML configuration example showing how to customize the Character module in Starship prompt with different symbols for success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-prompt in Bash\nDESCRIPTION: Shows how to implement a custom pre-prompt function in Bash to display a rocket emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Solidity Module Format in Starship Prompt\nDESCRIPTION: Configuration example for the Solidity module which displays the currently installed version of Solidity. This example modifies the format with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_98\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Git Metrics Display in Starship (TOML)\nDESCRIPTION: Configures the git_metrics module to show added and deleted lines with custom styles and formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[git_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Replacing Hostname with Nickname in Starship Configuration\nDESCRIPTION: Example configuration that replaces a specific system hostname with a nickname using the aliases option.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection (TOML)\nDESCRIPTION: Enables the Kubernetes module and configures it to only show in directories containing a 'k8s' file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module with mod_version\nDESCRIPTION: Extended Golang module configuration that includes both version and mod_version in the format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Language Module in Starship\nDESCRIPTION: TOML configuration for customizing how the Red programming language version is displayed in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship\nDESCRIPTION: Example configuration for the Crystal module in Starship prompt. It sets a custom format with a blue crystal emoji and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Formatting Container Information in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the format of the container module in Starship, adjusting how container information is displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Aliases in Starship\nDESCRIPTION: Configuration for defining Azure subscription aliases to display shortened versions of long subscription names in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Tcsh\nDESCRIPTION: Command to initialize Starship in Tcsh shell. Add this to the end of your ~/.tcshrc file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship\nDESCRIPTION: Example configuration for the PHP module in Starship prompt, customizing the format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Final Right Prompt Style in Bash with Ble.sh Framework\nDESCRIPTION: This Bash script configures the prompt_rps1_final option in Ble.sh to customize the right side of the transient prompt to display Starship's time module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Starship Package Module Configuration\nDESCRIPTION: Example configuration for customizing the Package module in Starship prompt. This changes the format and style of how package versions are displayed in the terminal prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Gleam Module Display in Starship\nDESCRIPTION: This configuration customizes how the Gleam programming language version is displayed in the Starship prompt, changing the format and color to make it more visually distinctive.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship\nDESCRIPTION: Configuration examples for the sudo module, including both standard and Windows-specific settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship TOML\nDESCRIPTION: This TOML configuration shows how to set a custom continuation prompt in Starship, which is displayed when the user enters an incomplete statement.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship TOML\nDESCRIPTION: Example configuration for the NATS module in Starship prompt, customizing the symbol display and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship\nDESCRIPTION: Example configuration for the Nim programming language module in Starship, showing how to customize its style and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt\nDESCRIPTION: Configures the Line Break module to create a single-line prompt instead of the default two-line prompt. This makes the entire prompt appear on one line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Symbol in Starship\nDESCRIPTION: This snippet configures the symbol used for the Elixir module in the Starship prompt. It sets the `symbol` option within the `[elixir]` section of the `starship.toml` configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n\n[elixir]\nsymbol = 'üîÆ '\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship\nDESCRIPTION: Example configuration for customizing the Daml SDK version display in Starship shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: TOML configuration for customizing how OPA version information is displayed in the Starship prompt. Uses a custom helmet emoji and red styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Log Location in PowerShell\nDESCRIPTION: PowerShell command to set a custom Starship cache directory location in Windows environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship\nDESCRIPTION: TOML configuration for customizing the Lua module display in Starship prompt with custom format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing how PHP version is displayed in the Starship prompt, using a custom format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship with TOML\nDESCRIPTION: Example configuration for the Jobs module in Starship prompt that customizes the symbol and thresholds for displaying background jobs information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Setting Kotlin Binary Path in Starship Prompt\nDESCRIPTION: Configures Starship to use a specific Kotlin compiler binary for version detection in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module in Starship - Binary Selection\nDESCRIPTION: TOML configuration example specifying Python binary selection for version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds in Starship\nDESCRIPTION: This snippet shows how to configure different display styles and symbols for various battery level thresholds in the Starship battery module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]] # 'bold yellow' style and üí¶ symbol when capacity is between 10% and 30%\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n\n# when capacity is over 30%, the battery indicator will not be displayed\n```\n\n----------------------------------------\n\nTITLE: Configuring Guix-shell Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Guix-shell module in Starship prompt. It disables the module and sets a custom format with a water buffalo emoji and yellow bold color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Shell Level Prompt in Starship (TOML)\nDESCRIPTION: This configuration creates a custom shell level prompt using the repeat and character modules. It produces a prompt like '‚ùØ‚ùØ‚ùØ' where the last character is colored based on the return status code.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in PowerShell\nDESCRIPTION: PowerShell command to set a custom configuration file location for starship by adding an environment variable to the PowerShell profile.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Module in Starship\nDESCRIPTION: TOML configuration for customizing the Ruby programming language module display in Starship prompt. Changes default diamond symbol to triangle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Rust programming language module display in Starship prompt. Shows how to modify the format and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module with Account and Project\nDESCRIPTION: Example configuration for the Google Cloud module to display both account and project information in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Module in Starship\nDESCRIPTION: This code snippet demonstrates how to configure the Raku module within the Starship prompt. It sets the format to display a Raku icon followed by the version, styled accordingly.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship\nDESCRIPTION: TOML configuration for customizing the Dart programming language prompt in Starship shell, using red coloring and a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Ruby module in Starship prompt. It modifies the symbol used to represent the Ruby language.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_100\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship\nDESCRIPTION: Configuration example for the Dart programming language module in Starship prompt, using custom symbol and red coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Replacing Hostname with Nickname in Starship (TOML)\nDESCRIPTION: Configuration to replace the system hostname with a custom nickname using aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Using Aliases to Replace Hostname with Nickname in Starship Prompt\nDESCRIPTION: A TOML configuration example that replaces a specific computer hostname with a more friendly nickname in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module (v0.45.0+)\nDESCRIPTION: Example of how to configure the command duration module in Starship version 0.45.0 and later using the format property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: TOML configuration for customizing the Open Policy Agent (OPA) prompt display with a helmet emoji and red styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Adding Pre-prompt Rocket Icon in Cmd\nDESCRIPTION: This Lua script defines a custom function to display a rocket emoji before the prompt is drawn in Cmd shell, using Clink's pre-prompt functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship Manually\nDESCRIPTION: Command to locate and remove the Starship binary, useful for manual uninstallation when Starship was installed using the install script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in PowerShell\nDESCRIPTION: Shows how to configure a transient prompt in PowerShell using Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Aliases in Starship\nDESCRIPTION: TOML configuration for replacing system hostname with a custom nickname\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Bash with Ble.sh\nDESCRIPTION: This Bash script shows how to set up and customize the transient prompt using Ble.sh framework and Starship. It configures both the left and right sides of the input prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to customize the continuation prompt with filled-in arrows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring OPA Module in Starship\nDESCRIPTION: Example configuration for customizing the OPA (Open Policy Agent) module in Starship, changing its format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring the Haxe Module in Starship Prompt Using TOML\nDESCRIPTION: A TOML configuration example for customizing the Haxe module in Starship prompt. This snippet changes the format of how the Haxe version is displayed in the terminal prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Nix Package Manager\nDESCRIPTION: Command for imperative installation of Starship using Nix package manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship\nDESCRIPTION: Customize the Lua module display in Starship prompt with a blue moon symbol and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship declaratively with home-manager in Nix\nDESCRIPTION: Nix configuration example showing how to enable and configure Starship using home-manager for a single user.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Konfiguration die nach ~/.config/starship.toml geschrieben wird\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring C Module Format in Starship Prompt\nDESCRIPTION: Example configuration for customizing the C module format in Starship prompt. This changes the display format for C compiler information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship with Home Manager\nDESCRIPTION: Declarative configuration for Starship using Nix Home Manager, including customizable settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the Plain Text Symbols preset for Starship. It replaces various Unicode symbols with plain text alternatives for each module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"aws \"\n\n[buf]\nsymbol = \"buf \"\n\n[c]\nsymbol = \"C \"\n\n[conda]\nsymbol = \"conda \"\n\n[dart]\nsymbol = \"dart \"\n\n[directory]\nread_only = \" ro\"\n\n[docker_context]\nsymbol = \"docker \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[fossil_branch]\nsymbol = \"fossil \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"go \"\n\n[guix_shell]\nsymbol = \"guix \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[haxe]\nsymbol = \"haxe \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[hostname]\nssh_symbol = \"ssh \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"julia \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[meson]\nsymbol = \"meson \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[os.symbols]\nAlpine = \"alpine \"\nAmazon = \"amazon \"\nAndroid = \"android \"\nArch = \"arch \"\nCentOS = \"centos \"\nDebian = \"debian \"\nDragonFly = \"dragonfly \"\nEmscripten = \"emscripten \"\nEndeavourOS = \"endeavouros \"\nFedora = \"fedora \"\nFreeBSD = \"freebsd \"\nGaruda = \"garuda \"\nGentoo = \"gentoo \"\nHardwareNodeOS = \"hardware node os \"\nIllumos = \"illumos \"\nLinux = \"linux \"\nMacos = \"macos \"\nManjaro = \"manjaro \"\nMariner = \"mariner \"\nMidnightBSD = \"midnightbsd \"\nMint = \"mint \"\nNetBSD = \"netbsd \"\nNixOS = \"nixos \"\nOpenBSD = \"openbsd \"\nOpenCloudOS = \"opencloudos \"\nopenEuler = \"openeuler \"\nOpenIndiana = \"openindiana \"\nOpenSUSE = \"opensuse \"\nOpenWrt = \"openwrt \"\nPop = \"pop \"\nRaspbian = \"raspbian \"\nRedhat = \"redhat \"\nRedHatEnterprise = \"redhat enterprise \"\nSolus = \"solus \"\nSUSE = \"suse \"\nUbuntu = \"ubuntu \"\nUnknown = \"unknown \"\nWindows = \"windows \"\n\n[package]\nsymbol = \"package \"\n\n[pijul_channel]\nsymbol = \"pijul \"\n\n[python]\nsymbol = \"python \"\n\n[rlang]\nsymbol = \"r \"\n\n[ruby]\nsymbol = \"ruby \"\n\n[rust]\nsymbol = \"rust \"\n\n[scala]\nsymbol = \"scala \"\n\n[spack]\nsymbol = \"spack \"\n\n[sudo]\nsymbol = \"sudo \"\n\n[swift]\nsymbol = \"swift \"\n\n[terraform]\nsymbol = \"terraform \"\n\n[zig]\nsymbol = \"zig \"\n```\n\n----------------------------------------\n\nTITLE: Customizing Vim Mode Indicator in Character Module\nDESCRIPTION: Sets a custom symbol for the vim command mode in the character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Jobs Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Jobs module in Starship prompt, customizing thresholds and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[jobs]\nsymbol = '+ '\nnumber_threshold = 4\nsymbol_threshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship\nDESCRIPTION: A TOML configuration example for customizing the Helm module in Starship prompt. This changes the format of how the Helm version appears in the terminal prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet shows how to configure the Kubernetes module in Starship, including custom formatting, enabling the module, and setting up context-specific styles.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Raku programming language version is displayed in the Starship prompt. Sets a custom format with an oyster emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Prompt Order Configuration\nDESCRIPTION: Previous configuration method using prompt_order array to specify module rendering order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Character Module Configuration with Custom Vim Shape\nDESCRIPTION: TOML configuration for customizing the character module's vim command mode indicator with a distinct 'V' symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Applying No Nerd Font Preset in Starship\nDESCRIPTION: Command to apply the No Nerd Font preset to Starship configuration. This will create or overwrite the starship.toml file in the user's config directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship\nDESCRIPTION: TOML configuration example for customizing the PHP module display in Starship prompt with custom symbol and color formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship\nDESCRIPTION: Example configuration for customizing the Crystal programming language prompt display in Starship shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version Display in Starship (TOML)\nDESCRIPTION: Example configuration for the Pulumi module that includes the Pulumi version in the prompt. This changes the format to show a ship emoji followed by the version and stack name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring .NET Module in Starship\nDESCRIPTION: TOML configuration for the .NET module in Starship prompt, showing custom symbol and style settings while disabling heuristic version detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Module (Rust Example)\nDESCRIPTION: Command to enable debug logs and output information for a specific Starship module (in this case, the Rust module) using the STARSHIP_LOG environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: TOML configuration for customizing the Deno runtime display in Starship shell, using green coloring and the default deno symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Applying Home Manager Configuration for Starship\nDESCRIPTION: Applies the configuration changes made in home.nix to enable Starship using Home Manager in Nix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Elixir module in Starship prompt, setting a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship\nDESCRIPTION: Configuration for the Elixir module showing custom symbol settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Detection in Starship\nDESCRIPTION: Overrides the detect_files property of the nodejs module to only show the bun runtime.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndetect_files = ['package.json', '.node-version', '!bunfig.toml', '!bun.lockb']\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Display in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Battery module display in Starship prompt, including symbols for different battery states and display thresholds.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]] # 'bold red' style and discharging_symbol when capacity is between 0% and 10%\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]] # 'bold yellow' style and üí¶ symbol when capacity is between 10% and 30%\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n\n# when capacity is over 30%, the battery indicator will not be displayed\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Scala module in Starship prompt. Sets a custom star emoji as the symbol for Scala.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing how Perl version is displayed in the Starship prompt, using a custom format and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Basic Bash Integration for Starship Prompt\nDESCRIPTION: Example showing how to integrate Starship with Bash shell by capturing status code and job count to generate the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Spack Module Display\nDESCRIPTION: Configuration for the Spack module that shows the current Spack environment. This example changes the format to use dimmed blue styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Kubernetes File Detection Configuration\nDESCRIPTION: Configuration to show Kubernetes module only in directories containing k8s files.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in PowerShell\nDESCRIPTION: Configures a transient prompt in PowerShell that displays the Starship character module. The prompt replaces the previous display with a custom string.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Metrics Module in Starship Prompt (TOML)\nDESCRIPTION: This example configures the Fossil Metrics module in Starship prompt. It customizes the added lines style and modifies the format of the metrics display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Open Policy Agent (OPA) module display in Starship shell prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Odin programming language module display in Starship shell prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset for Starship in Shell\nDESCRIPTION: This command installs the Jetpack preset for Starship by downloading the configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Dart Module in Starship\nDESCRIPTION: TOML configuration for customizing the Dart programming language version display in Starship prompt, using a custom symbol and red coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dart]\nformat = 'via [üî∞ $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Module to Display Subscription in Starship\nDESCRIPTION: Configuration for enabling and customizing the Azure module to display the current Azure subscription with custom styling and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Display\nDESCRIPTION: TOML configuration for customizing battery status symbols in the Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Shape\nDESCRIPTION: TOML configuration for customizing the vim command mode indicator in the character module, using 'V' as the symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship\nDESCRIPTION: Configuration for the sudo credentials cache display module, including style and symbol customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Java module in Starship prompt, setting a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Context-Specific Kubernetes Settings (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the Kubernetes module's appearance based on specific context patterns, including style, symbol, and alias settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[[kubernetes.contexts]]\ncontext_pattern = \"production\"\nuser_pattern = \"admin_user\"\nstyle = \"bold red\"\ncontext_alias = \"prod\"\nuser_alias = \"admin\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \".*openshift.*\"\nstyle = \"green\"\nsymbol = \"üíî \"\ncontext_alias = \"openshift\"\n\n[[kubernetes.contexts]]\ncontext_pattern = \"gke_.*_(?P<cluster>[\\\\w-]+)\"\ncontext_alias = \"gke-$cluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Language Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Red programming language module symbol in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: Configuration example for the direnv module in Starship prompt, showing how to enable/disable the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Creating Pre-Command Display in Cmd\nDESCRIPTION: Lua function for Cmd shell that displays the command about to be executed by defining a pre-command function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Setting Character Module Without Custom Error Shape\nDESCRIPTION: Configures the character module to use the same symbol shape for both success and error states, with different colors.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Always Show Hostname\nDESCRIPTION: A TOML configuration example for always displaying the hostname in Starship prompt, regardless of SSH connection status. This customizes the format, color, and domain truncation options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Generating a Starship Bug Report\nDESCRIPTION: Command to create a GitHub issue template with debugging information for reporting bugs in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: Example configuration for the Odin programming language module in Starship prompt that customizes the format and enables commit information display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the Shell module in Starship prompt, including shell indicators, style, and enabling the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset Configuration (TOML)\nDESCRIPTION: TOML configuration for the 'No Empty Icons' preset. This configuration ensures that toolset icons are only displayed when their version information can be determined.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-empty-icons.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Gruvbox Rainbow Preset in TOML for Starship\nDESCRIPTION: This TOML configuration defines the Gruvbox Rainbow preset for Starship. It includes custom formatting, colors, and module configurations for various elements of the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/gruvbox-rainbow.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\\\n[](#98971a)\\\n$os\\\n$username\\\n[](bg:#d79921 fg:#98971a)\\\n$directory\\\n[](fg:#d79921 bg:#458588)\\\n$git_branch\\\n$git_status\\\n[](fg:#458588 bg:#b16286)\\\n$c\\\n$elixir\\\n$elm\\\n$golang\\\n$gradle\\\n$haskell\\\n$java\\\n$julia\\\n$nodejs\\\n$nim\\\n$rust\\\n$scala\\\n[](fg:#b16286 bg:#689d6a)\\\n$docker_context\\\n[](fg:#689d6a bg:#1d2021)\\\n$time\\\n[ ](fg:#1d2021)\\\n\"\n\n# Disable the blank line at the start of the prompt\n# add_newline = false\n\n# You can also replace your username with a neat symbol like   or disable this\n# and use the os module below\n[username]\nshow_always = true\nstyle_user = \"bg:#98971a\"\nstyle_root = \"bg:#98971a\"\nformat = '[$user ]($style)'\ndisabled = false\n\n# An alternative to the username module which displays a symbol that\n# represents the current operating system\n[os]\nstyle = \"bg:#98971a\"\ndisabled = true # Disabled by default\n\n[directory]\nstyle = \"bg:#d79921\"\nformat = \"[ $path ]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n# Here is how you can shorten some long paths by text replacement\n# similar to mapped_locations in Oh My Posh:\n[directory.substitutions]\n\"Documents\" = \" \"\n\"Downloads\" = \" \"\n\"Music\" = \" \"\n\"Pictures\" = \" \"\n# Keep in mind that the order matters. For example:\n# \"Important Documents\" = \"  \"\n# will not be replaced, because \"Documents\" was already substituted before.\n# So either put \"Important Documents\" before \"Documents\" or use the substituted version:\n# \"Important  \" = \"  \"\n\n[c]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[docker_context]\nsymbol = \" \"\nstyle = \"bg:#689d6a\"\nformat = '[ $symbol $context ]($style)'\n\n[elixir]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[elm]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[git_branch]\nsymbol = \"\"\nstyle = \"bg:#458588\"\nformat = '[ $symbol $branch ]($style)'\n\n[git_status]\nstyle = \"bg:#458588\"\nformat = '[$all_status$ahead_behind ]($style)'\n\n[golang]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[gradle]\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[haskell]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[java]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[julia]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nodejs]\nsymbol = \"\"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[nim]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[rust]\nsymbol = \"\"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[scala]\nsymbol = \" \"\nstyle = \"bg:#b16286\"\nformat = '[ $symbol ($version) ]($style)'\n\n[time]\ndisabled = false\ntime_format = \"%R\" # Hour:Minute Format\nstyle = \"bg:#1d2021\"\nformat = '[ ‚ô• $time ]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship\nDESCRIPTION: Configuration example for the Mojo programming language module in Starship prompt, showing format customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Subscription Display in Starship Prompt\nDESCRIPTION: This snippet shows how to enable and configure the Azure module in Starship to display the current Azure subscription name with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = 'on [$symbol($subscription)]($style) '\nsymbol = 'Û∞†Ö '\nstyle = 'blue bold'\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Module in Starship\nDESCRIPTION: Custom format configuration for the Erlang module display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n[erlang]\nformat = 'via [e $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset Configuration (TOML)\nDESCRIPTION: Full TOML configuration for the Jetpack preset in Starship. This includes various module settings and custom format strings for the prompt layout.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$cmd_duration$jobs\"\n\n[character]\nsuccess_symbol = \"[>](bold green)\"\nerror_symbol = \"[x>](bold red)\"\nvimcmd_symbol = \"[<](bold green)\"\n\n[directory]\ntruncation_length = 3\ntruncate_to_repo = true\nformat = \"[$path]($style)[$read_only]($read_only_style) \"\n\n[git_branch]\nformat = \"[$symbol$branch]($style) \"\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style) )'\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\n\n[cmd_duration]\nmin_time = 500\nformat = \"[$duration]($style) \"\n\n[jobs]\nsymbol = \"\"\nformat = \"[$symbol$number]($style) \"\n\n[aws]\nsymbol = \"  \"\n\n[conda]\nsymbol = \" \"\n\n[dart]\nsymbol = \" \"\n\n[docker_context]\nsymbol = \" \"\n\n[elixir]\nsymbol = \" \"\n\n[elm]\nsymbol = \" \"\n\n[golang]\nsymbol = \" \"\n\n[hg_branch]\nsymbol = \" \"\n\n[java]\nsymbol = \" \"\n\n[julia]\nsymbol = \" \"\n\n[nim]\nsymbol = \" \"\n\n[nix_shell]\nsymbol = \" \"\n\n[nodejs]\nsymbol = \" \"\n\n[package]\nsymbol = \" \"\n\n[perl]\nsymbol = \" \"\n\n[php]\nsymbol = \" \"\n\n[python]\nsymbol = \" \"\n\n[ruby]\nsymbol = \" \"\n\n[rust]\nsymbol = \" \"\n\n[swift]\nsymbol = \"ÔØ£ \"\n```\n\n----------------------------------------\n\nTITLE: Battery Status Configuration\nDESCRIPTION: Configuration for customizing battery status symbols in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientRightPrompt with Time Module in Cmd\nDESCRIPTION: This code defines a custom transient right prompt function for Cmd using Clink. It displays the time module from Starship on the right side of the prompt when transient prompts are enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt (TOML)\nDESCRIPTION: This configuration disables the line break module in Starship, making the prompt a single line instead of two lines.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Symbols in Starship\nDESCRIPTION: This configuration customizes the symbols used for different battery states in the Starship battery module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in Lua\nDESCRIPTION: Sets a custom location for the Starship configuration file in Lua using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship\nDESCRIPTION: Customize the Mercurial branch module with a plant symbol and custom formatting for branch names.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Customizing TransientPrompt Left Side Display in Cmd with Clink\nDESCRIPTION: This Lua script configures the transient prompt's left side in Cmd shell using Clink. It defines a custom function that replaces the default prompt with Starship's character module when the transient prompt is active.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Kubernetes File Detection Configuration\nDESCRIPTION: Configuration to only show Kubernetes module in directories containing a k8s file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Symbol in Starship\nDESCRIPTION: This snippet configures the symbol for the Fennel module in the Starship prompt. It overrides the default `symbol` option within the `[fennel]` section of the `starship.toml` configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n[fennel]\nsymbol = '‚´∞ '\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nim programming language version display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset with Starship CLI\nDESCRIPTION: Command to install the Jetpack preset configuration to the user's Starship config directory using the starship CLI tool.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module Symbols in TOML\nDESCRIPTION: Default symbol configuration for the OS module in Starship. This table maps each supported operating system to its corresponding display symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Language Module in Starship\nDESCRIPTION: Configuration example for the Red programming language module in Starship prompt, replacing the default triangle symbol with a red circle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Runtime Display\nDESCRIPTION: TOML configuration for customizing how the Bun JavaScript runtime version is displayed\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Directory Truncation in Starship Prompt (TOML)\nDESCRIPTION: This TOML snippet demonstrates how to configure the directory module in Starship to truncate long paths. It sets the truncation length to 8 and defines a custom truncation symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[directory]\ntruncation_length = 8\ntruncation_symbol = '‚Ä¶/'\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration\nDESCRIPTION: TOML configuration file that defines the Pure preset appearance and behavior for Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pure-preset.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Command Shell in Starship\nDESCRIPTION: Demonstrates how to specify a custom shell with appropriate parameters for executing commands in Starship custom modules, particularly focusing on PowerShell configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_117\n\nLANGUAGE: toml\nCODE:\n```\nshell = ['pwsh', '-Command', '-']\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: Example configuration for customizing the PureScript module format in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Language Module in Starship\nDESCRIPTION: TOML configuration for customizing how the Ruby programming language version is displayed in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the Local IP module in Starship, including display conditions, formatting, and style settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Vlang Module in Starship\nDESCRIPTION: Example configuration for the V language module in Starship prompt. This snippet customizes the format to display the V version with a blue bold style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_113\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Meson module in Starship prompt. It enables the module, sets a custom truncation symbol, and modifies the style and symbol for displaying Meson project information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: Example of customizing the PureScript module in Starship prompt with a custom format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship\nDESCRIPTION: Configuration example for customizing the Elm module format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Advanced Battery Display Configuration\nDESCRIPTION: Multiple threshold configurations for battery display with custom symbols and styles.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]]\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: Sample configuration for the docker_context module in Starship prompt. This customizes the format to show the Docker context with a whale emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship\nDESCRIPTION: TOML configuration for customizing how OpenStack cloud and project information is displayed in the Starship prompt. Uses cloud emoji and yellow styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship (TOML)\nDESCRIPTION: Example configuration for customizing the Shell module in Starship prompt. It modifies indicators for different shells, changes the style, and enables the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Bracketed Segments Configuration\nDESCRIPTION: The preset file content is referenced here using a VuePress include directive.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/bracketed-segments.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/bracketed-segments.toml\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n personalizada del archivo en Bash\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de configuraci√≥n de Starship utilizando la variable de entorno STARSHIP_CONFIG.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Format in Starship\nDESCRIPTION: This snippet configures the format of the Elm module in the Starship prompt. It sets the `format` option within the `[elm]` section of the `starship.toml` configuration file to display the Elm version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n[elm]\nformat = 'via [Óò¨ $version](cyan bold) '\n\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Starship Configuration File in Bash/Sh\nDESCRIPTION: Command to create the directory and initial configuration file for Starship prompt customization in the default location (~/.config/starship.toml).\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Module in Starship\nDESCRIPTION: Configuration for the Fennel module showing custom symbol settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n[fennel]\nsymbol = '‚´∞ '\n```\n\n----------------------------------------\n\nTITLE: Configuring git_status with sync count in v0.45.0\nDESCRIPTION: Example configuration to show branch sync counts in git_status module using the new ahead, behind, and diverged properties in Starship v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Module in Starship (TOML)\nDESCRIPTION: This example demonstrates how to customize the Solidity module in Starship, including setting a custom format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship\nDESCRIPTION: TOML configuration for customizing the Lua module display in Starship prompt with custom format and symbol\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship (TOML)\nDESCRIPTION: Configuration for enabling the sudo module in Starship shell prompt specifically for Windows environments, which is disabled by default since Windows has no default sudo.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Example Fill Module Output\nDESCRIPTION: Shows the resulting prompt display when using the Fill module configuration with custom symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: text\nCODE:\n```\nAA -------------------------------------------- BB -------------------------------------------- CC\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n personalizada del archivo en PowerShell\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de configuraci√≥n de Starship en PowerShell utilizando una variable de entorno.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientRightPrompt in Fish with Time Module\nDESCRIPTION: This Fish script customizes the right side of the transient prompt to display Starship's time module using the starship_transient_rprompt_func function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Customizing TransientRightPrompt in Cmd with Time Module\nDESCRIPTION: This Lua script defines the starship_transient_rprompt_func to customize the right side of the transient prompt in Cmd shell, displaying the time module from Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module in Starship Prompt (TOML)\nDESCRIPTION: These snippets demonstrate various configurations for the Google Cloud module in Starship prompt, including displaying account and project, active config name, and using aliases for regions and projects.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = '[$symbol$active]($style) '\nstyle = 'bold yellow'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nsymbol = 'Ô∏èüá¨Ô∏è '\n[gcloud.region_aliases]\nus-central1 = 'uc1'\nasia-northeast1 = 'an1'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n[gcloud.project_aliases]\nvery-long-project-name = 'vlpn'\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Aliases in Starship (TOML)\nDESCRIPTION: This snippet shows how to set aliases for Azure subscription names in Starship. It creates a shorthand alias for a long subscription name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Customizing Meson Module in Starship (TOML)\nDESCRIPTION: This configuration customizes the Meson module in Starship. It enables the module, sets a custom truncation symbol, changes the display symbol, and applies a bold dimmed green style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset for Starship (Shell)\nDESCRIPTION: Command to install the Jetpack preset for Starship prompt. This will create or overwrite the Starship configuration file at ~/.config/starship.toml.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship\nDESCRIPTION: TOML configuration example for customizing the OpenStack cloud platform module display in Starship shell prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_85\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Module in Starship\nDESCRIPTION: Configuration for customizing the Fennel language module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fennel]\nsymbol = '‚´∞ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship Prompt with TOML\nDESCRIPTION: Example TOML configuration for customizing the sudo module in Starship prompt. Shows how to change the style, symbol, and enable the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Module in Starship\nDESCRIPTION: TOML configuration example for customizing the shell indicator module in Starship prompt. Sets custom indicators for different shells with cyan bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_103\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shell]\nfish_indicator = 'Û∞à∫ '\npowershell_indicator = '_'\nunknown_indicator = 'mystery shell'\nstyle = 'cyan bold'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Module Format\nDESCRIPTION: TOML configuration for customizing how the Bun runtime version is displayed in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship\nDESCRIPTION: A TOML configuration example for customizing the Haxe module in Starship prompt. This changes the format of how the Haxe version appears in the terminal prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Starship\nDESCRIPTION: Configuration examples for displaying environment variables including single and multiple variable displays.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\n----------------------------------------\n\nTITLE: Customizing Singularity Module Format in Starship Prompt\nDESCRIPTION: Configuration example for the Singularity module which shows the current Singularity container image. This customizes the format with an emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_97\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Format Configuration\nDESCRIPTION: New configuration method using format string to specify module rendering order and structure.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Bash/Zsh\nDESCRIPTION: Defines a function to set the window title in bash and zsh shells. The function can be customized with variables like $USER, $HOSTNAME, or $PWD.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; DEIN_FENSTERTITEL_HIER \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dotnet Module in Starship\nDESCRIPTION: Sample configuration for the dotnet module in Starship prompt. This customizes the symbol to a net emoji and changes the style color to green while disabling the faster heuristic detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship Prompt with TOML\nDESCRIPTION: Example TOML configuration for customizing the Haxe module in Starship shell prompt. This snippet demonstrates how to change the format of the Haxe version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Julia module in Starship prompt, setting a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship (TOML)\nDESCRIPTION: Example configuration for the VCSH module in Starship prompt, setting a custom symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Symbols in Starship Prompt with TOML\nDESCRIPTION: Default configuration for OS module symbols in Starship prompt. This TOML configuration defines symbols for various operating systems that will be displayed in the terminal prompt when the OS module is enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version in Starship Shell Prompt\nDESCRIPTION: Configuration example for customizing the Pulumi module in Starship prompt without showing the version for faster load times.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for PowerShell\nDESCRIPTION: This PowerShell command initializes Starship. It should be added to the PowerShell profile configuration file to enable Starship on shell startup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/guide/README.md#2025-04-19_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Buf Module Display in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Buf module display in Starship prompt, showing the installed version of Buf.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Setting Up Right Prompt in Fish\nDESCRIPTION: Creates a custom right-side prompt in Fish shell displaying the command execution time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Module in Starship\nDESCRIPTION: TOML configuration for customizing the Erlang module format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[erlang]\nformat = 'via [e $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 prompt_order Configuration in TOML\nDESCRIPTION: Example configuration showing how to define the module display order using the `prompt_order` array in Starship versions before v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Module in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Ruby module in Starship prompt. It sets a custom triangle symbol for displaying the Ruby version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Customizing Guix-shell Module (TOML)\nDESCRIPTION: Disables the Guix-shell module and sets a custom format with a different symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: No Runtime Versions Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration disables version display for various language runtimes and tools in the Starship prompt. It includes settings for languages like Node.js, Python, Ruby, and others.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\nformat = '[ $symbol($version) ]($style)'\n\n[rust]\nformat = '[ $symbol($version) ]($style)'\n\n[java]\nformat = '[ $symbol($version) ]($style)'\n\n[kotlin]\nformat = '[ $symbol($version) ]($style)'\n\n[php]\nformat = '[ $symbol($version) ]($style)'\n\n[python]\nformat = '[ $symbol($version) ]($style)'\n\n[ruby]\nformat = '[ $symbol($version) ]($style)'\n\n[go]\nformat = '[ $symbol($version) ]($style)'\n\n[dart]\nformat = '[ $symbol($version) ]($style)'\n\n[lua]\nformat = '[ $symbol($version) ]($style)'\n\n[perl]\nformat = '[ $symbol($version) ]($style)'\n\n[julia]\nformat = '[ $symbol($version) ]($style)'\n\n[scala]\nformat = '[ $symbol($version) ]($style)'\n\n[swift]\nformat = '[ $symbol($version) ]($style)'\n\n[dotnet]\nformat = '[ $symbol($version)(üéØ $tfm) ]($style)'\n\n[ocaml]\nformat = '[ $symbol($version) ]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Xonsh\nDESCRIPTION: Configuration lines to add to ~/.xonshrc to initialize Starship in Xonsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.xonshrc\n\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Custom OS Configuration Example\nDESCRIPTION: Example showing how to customize the OS module format and style in Starship\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Cmd with Clink\nDESCRIPTION: Lua script for initializing Starship in Windows Cmd using Clink (v1.2.30+)\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\n-- starship.lua\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship\nDESCRIPTION: Example configuration for the Perl module in Starship prompt, customizing the format and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-Prompt Function in Bash with Starship\nDESCRIPTION: This Bash script demonstrates how to define a custom function that runs before each prompt is displayed. It creates a function that prints a rocket emoji and assigns it to starship_precmd_user_func to integrate with Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing the Mercurial Branch module in Starship prompt. This sets a custom format with a seedling emoji, sets the truncation length to 4 characters, and removes the truncation symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Setting Azure Subscription Aliases\nDESCRIPTION: TOML configuration for creating aliases for long Azure subscription names in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship\nDESCRIPTION: Customize the Meson module with a custom truncation symbol and green styling for displaying project information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Customizing C Module Format in Starship\nDESCRIPTION: Sets a custom format for the C module to display compiler name and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: TOML configuration for customizing the OCaml module display in Starship prompt with a camel emoji and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_68\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module without Version in Starship\nDESCRIPTION: TOML configuration for Starship's Terraform module that displays only the workspace name without version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_105\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in Fish with Character Module\nDESCRIPTION: This Fish script enables transient prompt functionality and customizes it to display Starship's character module on the left side using the starship_transient_prompt_func function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Symbols in Starship\nDESCRIPTION: Default symbol configuration table for the OS module that maps operating system types to their display symbols. Includes symbols for major Linux distributions, BSD variants, macOS, and Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Customizing TransientPrompt Right Side Display in Cmd with Clink\nDESCRIPTION: This Lua script configures the transient prompt's right side in Cmd shell using Clink. It defines a custom function that displays the time module from Starship on the right side when transient prompt is active.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Rust programming language module display in Starship prompt. Sets custom format with gear emoji and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Lua Module Configuration\nDESCRIPTION: Configuration for displaying Lua version information in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Gleam Module in Starship (TOML)\nDESCRIPTION: Example configuration for customizing the Gleam module in Starship prompt. It sets a custom format and color for displaying the Gleam version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Hiding Hostname in Remote tmux Sessions (TOML)\nDESCRIPTION: Configuration to hide the hostname in remote tmux sessions using environment variable detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Styling Nim Module in Starship Prompt\nDESCRIPTION: Example configuration for the Nim module in Starship prompt, changing the style and symbol used for displaying the Nim compiler version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display in Starship\nDESCRIPTION: Basic battery module configuration defining symbols for different battery states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration\nDESCRIPTION: Command to install the Pure preset configuration for Starship prompt into the user's configuration directory\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring the Meson Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing the Meson module in Starship prompt. This enables the module, changes the truncation symbol, modifies the display symbol, and sets a green styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Starship\nDESCRIPTION: TOML configuration examples for displaying environment variables in Starship prompt, showing both single and multiple variable configurations\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship Prompt (TOML)\nDESCRIPTION: Sets a custom symbol for the Kotlin module in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Language Module in Starship\nDESCRIPTION: TOML configuration for customizing the Red programming language module display in Starship prompt. Sets custom red circle symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: Example configuration for the Docker context module showing custom format and styling\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Language Module in Starship\nDESCRIPTION: Configuration example for the Ruby programming language module in Starship prompt, replacing the default diamond symbol with a triangle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname for TMux Sessions\nDESCRIPTION: TOML configuration for hiding hostname in remote TMux sessions using environment variable detection\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Ion\nDESCRIPTION: Configuration lines to add to Ion shell initrc file to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/ion/initrc\n\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt order in Starship pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt order was configured in Starship versions before v0.45.0 using the 'prompt_order' array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Path Support in WSL\nDESCRIPTION: TOML configuration for using Windows Starship executable on Windows paths in WSL environment.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship\nDESCRIPTION: Example configuration for the Lua module in Starship prompt, customizing the format to display the Lua version with a moon symbol in bold blue.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Ion\nDESCRIPTION: Initialization code for Ion shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/ion/initrc\n\neval $(starship init ion)\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration file that defines the Pure-like appearance for Starship prompt, referenced from external file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/pure-preset.toml\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship with Bash\nDESCRIPTION: Configuration to add to ~/.bashrc for enabling Starship in Bash shell\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init bash)\"\n```\n\n----------------------------------------\n\nTITLE: Setting Kotlin Binary Path in Starship Configuration (TOML)\nDESCRIPTION: Specifies the Kotlin compiler binary path to get the installed version for the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Language Module in Starship\nDESCRIPTION: TOML configuration for customizing how the Raku programming language version is displayed in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship Prompt\nDESCRIPTION: A TOML configuration example for customizing the Rust module in Starship prompt. This configuration changes the format to display the Rust version with a gear emoji instead of the default crab symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_97\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: Example configuration for customizing the PureScript module format in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship (TOML)\nDESCRIPTION: Configuration to enable the sudo module on Windows in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring R Language Module in Starship\nDESCRIPTION: TOML configuration for customizing how the R programming language version is displayed in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship\nDESCRIPTION: TOML configuration for customizing the Daml SDK version display in Starship shell, using bright green coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Gleam Module Style\nDESCRIPTION: TOML configuration example for customizing the Gleam programming language module display in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PowerShell Pre-Command for Starship\nDESCRIPTION: PowerShell function to set window title before each command execution and initialize Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring the C compiler module in Starship with TOML\nDESCRIPTION: Example TOML configuration for the C compiler module in Starship prompt, showing how to customize the format to display the compiler name and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: Configuration example for the direnv module in Starship showing how to enable/disable the module\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Local IP Module in Starship Prompt (TOML)\nDESCRIPTION: Configures the Local IP module to show the IP address in a custom format and style, even when not in an SSH session.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: This TOML configuration example shows how to customize the PureScript module display format in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Module Format in Starship\nDESCRIPTION: This snippet demonstrates how to customize the format of the Bun module in Starship, changing the symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship Terminal Prompt (TOML)\nDESCRIPTION: Example configuration for customizing the Perl module appearance in Starship prompt. This changes the format to use an oyster emoji before displaying the Perl version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: Nushell Command Line Parameter Update\nDESCRIPTION: Updates the Nushell parameter passing syntax to use '=' instead of space for command line parameters\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_14\n\nLANGUAGE: nushell\nCODE:\n```\nUse `=` instead of space to pass command line parameters\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: TOML configuration example for customizing the PureScript module display format in Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration\nDESCRIPTION: TOML configuration file that defines the Pure preset settings for Starship prompt, imported from external file\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pure-preset.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module Symbols in Starship\nDESCRIPTION: Default symbols table for the OS module in Starship prompt that maps operating system types to their respective symbols. This configuration can be customized in the starship.toml file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: TOML configuration to set a custom continuation prompt in Starship, which is displayed for incomplete statements.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring command duration format in Starship v0.45.0 (TOML)\nDESCRIPTION: Example of how the command duration format is configured in Starship v0.45.0, replacing the previous 'prefix' with a 'format' string.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Language Module in Starship\nDESCRIPTION: Configuration example for the Raku programming language module in Starship prompt, customizing the format with a shellfish emoji instead of the default butterfly.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Starship Multiline String Examples\nDESCRIPTION: Demonstration of multiline string formatting options in Starship configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# with literal string\nformat = '''\n\n\\$'''\n\n# with multiline basic string\nformat = \"\"\"\n\n\\\\$\"\"\"\n\n# with basic string\nformat = \"\\n\\\\$\"\n```\n\n----------------------------------------\n\nTITLE: Testing Unicode and Emoji Support in Terminal\nDESCRIPTION: Commands to test if the terminal correctly displays Unicode characters and emojis, which is crucial for Starship's proper functioning.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Symbol in Starship\nDESCRIPTION: This configuration changes the default symbol used in the Buf module for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Haxe module in Starship prompt, customizing the format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Module in Starship\nDESCRIPTION: Example configuration for the Solidity programming language version indicator module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_107\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Level Prompt with SHLVL and Repeat Option (TOML)\nDESCRIPTION: Configuration example showing how to create a multi-level prompt using the SHLVL module with the repeat feature for visual indication of nesting level.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship\nDESCRIPTION: Command to locate and remove the Starship binary, useful for uninstalling Starship when it was installed via the install script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt order in Starship pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt order was configured using 'prompt_order' array in versions prior to v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Tokyo Night Preset for Starship\nDESCRIPTION: Command to install the Tokyo Night preset configuration into the Starship config file. This will write the preset settings to ~/.config/starship.toml.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/tokyo-night.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset tokyo-night -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Tokyo Night Preset for Starship\nDESCRIPTION: Command to install the Tokyo Night preset for Starship, saving the configuration to the user's Starship TOML file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/tokyo-night.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset tokyo-night -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship\nDESCRIPTION: Example configuration for the Zig module in Starship prompt, customizing the lightning symbol used before displaying the Zig version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example demonstrating how to customize the continuation prompt with filled-in arrows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module with Version in Starship\nDESCRIPTION: TOML configuration for Starship's Terraform module that includes the Terraform version in the prompt format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_104\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module Symbols in TOML\nDESCRIPTION: Default symbols table for the OS module, mapping operating systems to their corresponding symbols. This can be customized in the Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ja-JP/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship (TOML)\nDESCRIPTION: Example configuration for the sudo module in Starship prompt, customizing the style, symbol and enabling it.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Direnv Module in Starship\nDESCRIPTION: Configuration example for the direnv module in Starship shell prompt, showing how to disable the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship (TOML)\nDESCRIPTION: Customizes the format of the Elm module in the Starship prompt, displaying the version in cyan bold.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell\nDESCRIPTION: Creates an Invoke-Starship-PreCommand function to set the window title in PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd ``a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Module Format in Starship (TOML)\nDESCRIPTION: This snippet shows how to customize the format of the Bun module in Starship. It changes the color and emoji used to represent the Bun JavaScript runtime.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Continuation Prompt in Starship\nDESCRIPTION: This TOML configuration shows how to customize the continuation prompt in Starship, which is displayed for incomplete statements in supported shells.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring .NET Module in Starship\nDESCRIPTION: Configuration example for the .NET module showing custom symbol and style settings with disabled heuristic detection\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship\nDESCRIPTION: TOML configuration for customizing the Crystal programming language module display in Starship prompt, showing version with a crystal emoji and blue coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-command in Cmd using Lua\nDESCRIPTION: Demonstrates how to implement a custom pre-command function in Cmd shell to display the command being executed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Customizing Singularity Container Display in Starship (TOML)\nDESCRIPTION: Configuration for the Singularity module that displays the current Singularity container with a custom emoji prefix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Vagrant module in Starship prompt, setting a custom format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship\nDESCRIPTION: TOML configuration for customizing the Meson development environment display with custom truncation and styling\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Command Duration Module Configuration\nDESCRIPTION: Updated command duration module configuration using the new format property with variable substitution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring V Language Module in Starship\nDESCRIPTION: Example configuration for the Vlang module in Starship prompt, customizing how V language version information is displayed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_109\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration file for the Jetpack preset that defines the prompt layout and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$cmd_duration$time\"\nadd_newline = false\n\n[character]\nsuccess_symbol = \"[>](bold)\" \nerror_symbol = \"[>](bold red)\"\nvimcmd_symbol = \"[<](bold green)\"\nvimcmd_replace_one_symbol = \"[<](bold purple)\"\nvimcmd_replace_symbol = \"[<](bold purple)\"\nvimcmd_visual_symbol = \"[<](bold yellow)\"\n\n[directory]\nstyle = \"bold blue\"\nformat = \"[ $path]($style)\"\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\n\n[git_branch]\nformat = \" [$symbol$branch]($style)\"\nsymbol = \"\"\nstyle = \"bold purple\"\n\n[git_status]\nformat = \"([$all_status$ahead_behind]($style))\"\nstyle = \"bold purple\"\nconflicted = \"Û∞âÄ\"\nahead =\"\"\nbehind = \"\"\ndiverged = \"\"\nup_to_date = \"\"\nuntracked = \"\"\nstaged = \"\"\nmodified = \"\"\nrenamed = \"Û∞ëï\"\ndeleted = \"\"\n\n[cmd_duration]\nformat = \"[$duration]($style)\"\nstyle = \"bold yellow\"\n\n[time]\nformat = \"[$time]($style)\"\nstyle = \"bold\"\ndisabled = false\ntime_format = \"%R\"\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Golang Module Configuration\nDESCRIPTION: Example TOML configuration showing how to use the mod_version variable in the Golang module format. This displays both the Go version and the Go directive version from go.mod.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Location in Bash\nDESCRIPTION: Sets a custom location for the Starship cache directory using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Setting Battery Display Threshold and Style in Starship\nDESCRIPTION: Configuration for the battery module's display threshold that defines when the battery indicator appears and how it's styled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Display in Starship\nDESCRIPTION: Customizes the display of local IP address in the prompt with custom format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title to Current Directory in Bash/Zsh\nDESCRIPTION: Example of setting the window title to the current directory name in bash or zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Loading No Empty Icons Preset Configuration\nDESCRIPTION: TOML configuration reference that defines the No Empty Icons preset behavior for Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-empty-icons.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Branch Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet shows the configuration for the Fossil Branch module in Starship prompt. It sets a custom symbol and truncation options for the branch name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_branch]\nsymbol = 'ü¶é '\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Customizing Spack Environment Display in Starship (TOML)\nDESCRIPTION: Configuration example for the Spack module to display the current Spack environment with dimmed blue styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Applying home-manager Configuration for Starship\nDESCRIPTION: Command to apply the home-manager configuration changes after adding Starship settings to the home.nix file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing the Julia module in Starship prompt by changing the symbol displayed before the Julia version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Singularity Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to customize the Singularity module in Starship, including setting a custom format and emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring cmd_duration module in Starship pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how the cmd_duration module was configured using 'prefix' in versions prior to v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ru-RU/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset Configuration\nDESCRIPTION: Command to install the Jetpack preset configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Zig module in Starship prompt, customizing the symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Branch Tracking Indicators in Starship\nDESCRIPTION: TOML configuration for showing ahead/behind count of tracked Git branches. Customizes the display format for diverged, ahead, and behind states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: Example configuration for the Open Policy Agent (OPA) module in Starship prompt that customizes the display format with a helmet emoji and red styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Battery Display Threshold Configuration\nDESCRIPTION: Configuration for setting battery level display thresholds and styles in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]]\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Final Prompt Style in Bash with Ble.sh Framework\nDESCRIPTION: This Bash script configures the prompt_ps1_final option in Ble.sh to customize the left side of the transient prompt to display Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Spack Module in Starship\nDESCRIPTION: Example configuration for the Spack environment module with custom color formatting\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Symbols in TOML\nDESCRIPTION: Default symbol mappings for different operating systems used by the OS module. Defines emoji symbols for each supported OS type.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Right Prompt in Starship\nDESCRIPTION: Example of configuring a minimal left prompt and moving all other modules to the right prompt using Starship's TOML configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Lua Module in Starship Prompt (TOML)\nDESCRIPTION: This configuration customizes the appearance of the Lua module in the Starship prompt, including the format and symbol used.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module with Version\nDESCRIPTION: Configuration for displaying Terraform workspace information including version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-command Execution in Cmd\nDESCRIPTION: Sets up pre-command execution handling in Cmd shell to display the command being executed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Guix-shell Module in Starship\nDESCRIPTION: Example configuration for the Guix-shell module in Starship prompt. It disables the module and sets a custom format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Styling Solidity Version Display in Starship Prompt (TOML)\nDESCRIPTION: Custom configuration for the Solidity module that changes the display format of the Solidity compiler version in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the local IP module in Starship, including format, style, and visibility settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Migrating module prefix/suffix to format (pre-v0.45.0 example)\nDESCRIPTION: Example of the previous prefix configuration for the cmd_duration module in Starship before v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Indicators in Starship\nDESCRIPTION: TOML configuration for customizing Git status indicators including conflict markers, ahead/behind status, and file state indicators. Sets custom emoji-based status symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Display in Starship\nDESCRIPTION: This snippet briefly mentions the Git status module and highlights considerations for its performance, especially on Windows systems within WSL.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Node.js Module in Starship\nDESCRIPTION: TOML configuration for customizing the Node.js version display with custom format and emoji\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nodejs]\nformat = 'via [ü§ñ $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Applying home-manager configuration for Starship in Nix\nDESCRIPTION: This command applies the home-manager configuration, including the Starship settings, on a Nix system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Customizing Git Commit Module in Starship (TOML)\nDESCRIPTION: This configuration customizes the git_commit module to show a shorter commit hash and adds a custom tag symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Lua module in Starship prompt. It sets a custom format and symbol for displaying Lua version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration defines the Plain Text Symbols preset for Starship. It sets various module symbols to plain text alternatives, making the prompt more compatible with environments that don't support Unicode characters.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"aws \"\n\n[bun]\nsymbol = \"bun \"\n\n[c]\nsymbol = \"C \"\n\n[cobol]\nsymbol = \"cobol \"\n\n[conda]\nsymbol = \"conda \"\n\n[crystal]\nsymbol = \"cr \"\n\n[cmake]\nsymbol = \"cmake \"\n\n[daml]\nsymbol = \"daml \"\n\n[dart]\nsymbol = \"dart \"\n\n[deno]\nsymbol = \"deno \"\n\n[docker_context]\nsymbol = \"docker \"\n\n[dotnet]\nsymbol = \".NET \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[erlang]\nsymbol = \"erl \"\n\n[fennel]\nsymbol = \"fnl \"\n\n[fossil_branch]\nsymbol = \"fossil \"\n\n[gcloud]\nsymbol = \"gcloud \"\n\n[git_branch]\nsymbol = \"git \"\n\n[git_commit]\ncommit_hash_length = 8\ntag_symbol = \" tag \"\n\n[git_status]\nahead = \">\"\nbehind = \"<\"\ndiverged = \"<>\"\nrenamed = \"r\"\ndeleted = \"x\"\n\n[golang]\nsymbol = \"go \"\n\n[gradle]\nsymbol = \"gradle \"\n\n[guix_shell]\nsymbol = \"guix \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[haxe]\nsymbol = \"haxe \"\n\n[helm]\nsymbol = \"helm \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"jl \"\n\n[kotlin]\nsymbol = \"kt \"\n\n[kubernetes]\nsymbol = \"k8s \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[meson]\nsymbol = \"meson \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[ocaml]\nsymbol = \"ml \"\n\n[opa]\nsymbol = \"opa \"\n\n[os.symbols]\nAlpine = \"alp \"\nAmazon = \"amz \"\nAndroid = \"andr \"\nArch = \"rch \"\nCentos = \"cent \"\nDebian = \"deb \"\nDragonfly = \"dfbsd \"\nEmscripten = \"emsc \"\nEndeavouros = \"ndev \"\nFedora = \"fed \"\nFreeBSD = \"fbsd \"\nGaruda = \"garu \"\nGentoo = \"gent \"\nHaikuOS = \"haiku \"\nIllumos = \"lum \"\niOS = \"ios \"\nLinux = \"lnx \"\nMacOS = \"mac \"\nManjaro = \"mjo \"\nMariner = \"mrn \"\nMidnightBSD = \"mid \"\nMint = \"mint \"\nNixOS = \"nix \"\nNobara = \"nobara \"\nOpenBSD = \"obsd \"\nopenSUSE = \"osuse \"\nOracleLinux = \"orac \"\nPop = \"pop \"\nPostmarketOS = \"pmos \"\nRaspbian = \"rasp \"\nRedhat = \"rhl \"\nRedHatEnterprise = \"rhel \"\nSabayon = \"sbn \"\nSerenityOS = \"srnty \"\nShipmOS = \"shpm \"\nSLES = \"sles \"\nSolus = \"sol \"\nSteamOS = \"steam \"\nSunOS = \"sun \"\nUnknown = \"unk \"\nWindows = \"win \"\n\n[package]\nsymbol = \"pkg \"\n\n[perl]\nsymbol = \"pl \"\n\n[php]\nsymbol = \"php \"\n\n[pijul_channel]\nsymbol = \"pijul \"\n\n[pulumi]\nsymbol = \"pulumi \"\n\n[purescript]\nsymbol = \"purs \"\n\n[python]\nsymbol = \"py \"\n\n[raku]\nsymbol = \"raku \"\n\n[ruby]\nsymbol = \"rb \"\n\n[rust]\nsymbol = \"rs \"\n\n[scala]\nsymbol = \"scala \"\n\n[spack]\nsymbol = \"spack \"\n\n[status]\nsymbol = \"x \"\nformat = '[$symbol$status]($style) '\nsuccess_symbol = \"v \"\n\n[sudo]\nsymbol = \"sudo \"\n\n[swift]\nsymbol = \"swift \"\n\n[terraform]\nsymbol = \"tf \"\n\n[zig]\nsymbol = \"zig \"\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration file defines the settings for the 'No Empty Icons' preset in Starship. It specifies which module icons should only be shown when their version can be determined.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)'\nsymbol = 'Û∞∏è '\n\n[bun]\nformat = 'via [$symbol($version )]($style)'\n\n[c]\nformat = 'via [$symbol($version(-$name) )]($style)'\n\n[cmake]\nformat = 'via [$symbol($version )]($style)'\n\n[cmd_duration]\nformat = 'took [$duration]($style)'\n\n[cobol]\nformat = 'via [$symbol($version )]($style)'\n\n[conda]\nformat = 'via [$symbol$environment]($style)'\n\n[crystal]\nformat = 'via [$symbol($version )]($style)'\n\n[daml]\nformat = 'via [$symbol($version )]($style)'\n\n[dart]\nformat = 'via [$symbol($version )]($style)'\n\n[deno]\nformat = 'via [$symbol($version )]($style)'\n\n[docker_context]\nformat = 'via [$symbol$context]($style)'\n\n[dotnet]\nformat = 'via [$symbol($version )(üéØ $tfm )]($style)'\n\n[elixir]\nformat = 'via [$symbol($version \\(OTP $otp_version\\) )]($style)'\n\n[elm]\nformat = 'via [$symbol($version )]($style)'\n\n[erlang]\nformat = 'via [$symbol($version )]($style)'\n\n[fennel]\nformat = 'via [$symbol($version )]($style)'\n\n[fossil_branch]\nformat = 'on [$symbol$branch]($style)'\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($region\\))]($style)'\n\n[git_branch]\nformat = 'on [$symbol$branch(:$remote_branch)]($style)'\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style))'\n\n[golang]\nformat = 'via [$symbol($version )]($style)'\n\n[gradle]\nformat = 'via [$symbol($version )]($style)'\n\n[guix_shell]\nformat = 'via [$symbol]($style)'\n\n[haskell]\nformat = 'via [$symbol($version )]($style)'\n\n[haxe]\nformat = 'via [$symbol($version )]($style)'\n\n[helm]\nformat = 'via [$symbol($version )]($style)'\n\n[hg_branch]\nformat = 'on [$symbol$branch]($style)'\n\n[java]\nformat = 'via [$symbol($version )]($style)'\n\n[julia]\nformat = 'via [$symbol($version )]($style)'\n\n[kotlin]\nformat = 'via [$symbol($version )]($style)'\n\n[kubernetes]\nformat = 'on [$symbol$context( \\($namespace\\))]($style)'\n\n[lua]\nformat = 'via [$symbol($version )]($style)'\n\n[meson]\nformat = 'via [$symbol$project]($style)'\n\n[nim]\nformat = 'via [$symbol($version )]($style)'\n\n[nix_shell]\nformat = 'via [$symbol$state( \\($name\\))]($style)'\n\n[nodejs]\nformat = 'via [$symbol($version )]($style)'\n\n[ocaml]\nformat = 'via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)'\n\n[opa]\nformat = 'via [$symbol($version )]($style)'\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style)'\n\n[os]\nformat = '[$symbol]($style)'\n\n[package]\nformat = 'is [$symbol$version]($style)'\n\n[perl]\nformat = 'via [$symbol($version )]($style)'\n\n[php]\nformat = 'via [$symbol($version )]($style)'\n\n[pulumi]\nformat = 'via [$symbol$stack]($style)'\n\n[purescript]\nformat = 'via [$symbol($version )]($style)'\n\n[python]\nformat = 'via [$symbol($version )(\\($virtualenv\\) )]($style)'\n\n[raku]\nformat = 'via [$symbol($version-$vm_version )]($style)'\n\n[red]\nformat = 'via [$symbol($version )]($style)'\n\n[ruby]\nformat = 'via [$symbol($version )]($style)'\n\n[rust]\nformat = 'via [$symbol($version )]($style)'\n\n[scala]\nformat = 'via [$symbol($version )]($style)'\n\n[spack]\nformat = 'via [$symbol$environment]($style)'\n\n[sudo]\nformat = '[as $symbol]'\n\n[swift]\nformat = 'via [$symbol($version )]($style)'\n\n[terraform]\nformat = 'via [$symbol$workspace]($style)'\n\n[time]\nformat = 'at [$time]($style)'\n\n[username]\nformat = '[$user]($style)'\n\n[vagrant]\nformat = 'via [$symbol($version )]($style)'\n\n[vlang]\nformat = 'via [$symbol($version )]($style)'\n\n[zig]\nformat = 'via [$symbol($version )]($style)'\n\n[solidity]\nformat = 'via [$symbol($version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship\nDESCRIPTION: Example configuration for the Mercurial Branch module in Starship prompt, customizing the format, truncation length, and removing the truncation symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the Zig language module in a Starship prompt, customizing the symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Fish\nDESCRIPTION: Configuration lines to add to Fish shell configuration file to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.config/fish/config.fish\n\nstarship init fish | source\n```\n\n----------------------------------------\n\nTITLE: Configuring Ruby Module in Starship\nDESCRIPTION: This example demonstrates configuring the Ruby module within the Starship prompt. It customizes the symbol displayed by the Ruby module to a triangle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n\n# ~/.config/starship.toml\n\n[ruby]\nsymbol = 'üî∫ '\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the cmd_duration module in Starship. It sets a minimum time threshold and customizes the format of the duration display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Custom Module with Argument-Based Command Execution\nDESCRIPTION: Demonstrates custom module configuration using command execution via arguments instead of stdin, with PowerShell and specific extension filtering\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst']\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset with Starship\nDESCRIPTION: Command to install the Jetpack preset configuration to the user's Starship configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Applying System-Wide Starship Installation with NixOS\nDESCRIPTION: Updates the system configuration to install Starship system-wide after adding it to environment.systemPackages in configuration.nix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship\nDESCRIPTION: Configuration example for the Swift module showing custom format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL with Repeat Characters\nDESCRIPTION: Advanced SHLVL configuration using repeat and repeat_offset to create a cascading prompt character pattern.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_105\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module Format in Starship\nDESCRIPTION: Example configuration for the Mojo module in Starship prompt, customizing the format to display version and hash information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Changing Window Title in Bash and Zsh with Starship\nDESCRIPTION: Shows how to change the window title in Bash and Zsh shells using Starship. It includes examples for setting the title to reflect the current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Feature: AWS Display Enhancement\nDESCRIPTION: Adds an option to force AWS display in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_16\n\nLANGUAGE: rust\nCODE:\n```\nadd option to force AWS display\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Mercurial Branch module in Starship prompt. It sets a custom format, truncation length, and truncation symbol for displaying Mercurial branch information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship (TOML)\nDESCRIPTION: Sets a custom symbol for the Kotlin module in Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Custom Module with PowerShell Time Command and Extension Filter\nDESCRIPTION: Configuration for a custom module that runs a time command specifically for .pst files using PowerShell with specific shell parameters\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst']\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n```\n\n----------------------------------------\n\nTITLE: No Nerd Font Preset Configuration File\nDESCRIPTION: TOML configuration file that defines the Starship prompt settings without requiring Nerd Fonts, using only emoji and powerline symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-nerd-font.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: TOML configuration example for the docker_context module in Starship prompt. This customizes the format to display the Docker context with a whale emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship\nDESCRIPTION: Example of configuring the Perl module in Starship prompt with custom format and emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship TOML\nDESCRIPTION: Custom configuration for the Nim programming language module in Starship prompt, changing the style and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Configuring R Module in Starship (TOML)\nDESCRIPTION: Example configuration for the R module in Starship prompt. It sets a custom format for displaying the R version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_97\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nix-shell environment display with custom messages and format\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Symbol\nDESCRIPTION: TOML configuration for customizing the Buf module symbol in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-shell Module in Starship\nDESCRIPTION: Configuration example for the Nix-shell module in Starship with custom formatting for pure and impure shells.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n personalizada del archivo en Cmd con Lua\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de configuraci√≥n de Starship en Cmd utilizando Lua para modificar la variable de entorno.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Module in Starship\nDESCRIPTION: TOML configuration for customizing the Fennel module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fennel]\nsymbol = '‚´∞ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Environment Detection in Starship\nDESCRIPTION: TOML configuration for controlling hostname display based on environment variables, specifically for tmux sessions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\ndetect_env_vars = ['!TMUX', 'SSH_CONNECTION']\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship\nDESCRIPTION: TOML configuration for enabling and customizing the memory usage display with custom threshold and styling\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Setting Up DEBUG Trap in Bash for Pre-Command Functions\nDESCRIPTION: Bash configuration to properly set up a DEBUG trap that displays a rocket emoji before executing commands while maintaining Starship compatibility.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Conda Module Configuration in TOML\nDESCRIPTION: Example configuration for the conda module demonstrating format customization\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[conda]\nformat = '[$symbol$environment](dimmed green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nix-Shell Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nix-Shell environment display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nix_shell]\ndisabled = true\nimpure_msg = '[impure shell](bold red)'\npure_msg = '[pure shell](bold green)'\nunknown_msg = '[unknown shell](bold yellow)'\nformat = 'via [‚òÉÔ∏è $state( \\($name\\))](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset in Starship\nDESCRIPTION: Command to install the Pastel Powerline preset for Starship by downloading it to the user's configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship\nDESCRIPTION: Configuration example for the Crystal programming language module in Starship prompt, showing custom formatting with blue coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: No Runtime Versions Preset TOML Configuration for Starship\nDESCRIPTION: Complete TOML configuration for the No Runtime Versions preset. This configuration explicitly disables version display for various language runtimes by setting their disabled property to true.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\ndisabled = true\n\n[conda]\ndisabled = true\n\n[dart]\ndisabled = true\n\n[dotnet]\ndisabled = true\n\n[elixir]\ndisabled = true\n\n[elm]\ndisabled = true\n\n[golang]\ndisabled = true\n\n[haskell]\ndisabled = true\n\n[java]\ndisabled = true\n\n[julia]\ndisabled = true\n\n[nodejs]\ndisabled = true\n\n[nim]\ndisabled = true\n\n[ocaml]\ndisabled = true\n\n[php]\ndisabled = true\n\n[purescript]\ndisabled = true\n\n[python]\ndisabled = true\n\n[ruby]\ndisabled = true\n\n[rust]\ndisabled = true\n\n[scala]\ndisabled = true\n\n[swift]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring R Language Module in Starship\nDESCRIPTION: TOML configuration for customizing the R language module display in Starship prompt. Sets custom format and emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship with Cmd using Clink\nDESCRIPTION: Lua script to initialize Starship in Windows Command Prompt using Clink\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection in Starship\nDESCRIPTION: Enables the Kubernetes module and configures it to only display when k8s files are present in the directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_43\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Sample Starship Configuration in TOML\nDESCRIPTION: This TOML snippet demonstrates basic Starship configuration, including schema reference, newline addition, character symbol customization, and module disabling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n# Disable the package module, hiding it from the prompt completely\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Setting Current Directory as Window Title\nDESCRIPTION: Example of setting the current directory as the window title in bash or zsh configuration files.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship Imperatively with Nix\nDESCRIPTION: Installs Starship using the Nix package manager in an imperative way with nix-env command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version Display in Starship\nDESCRIPTION: Performance-optimized configuration for the Pulumi module in Starship prompt that omits the version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Username Module in Starship\nDESCRIPTION: TOML configuration for Starship's Username module that always shows the username with custom styling and username aliasing.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_107\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[username]\nstyle_user = 'white bold'\nstyle_root = 'black bold'\nformat = 'user: [$user]($style) '\ndisabled = false\nshow_always = true\naliases = { \"corpuser034g\" = \"matchai\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship\nDESCRIPTION: TOML configuration for customizing the NATS context display in Starship prompt with custom style and format\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title Function as Starship Precmd in Bash\nDESCRIPTION: This snippet shows how to integrate the window title change function with Starship in Bash by assigning it to the starship_precmd_user_func variable, allowing it to run before each prompt is displayed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: No-Nerd-Font Preset TOML Configuration\nDESCRIPTION: TOML configuration file content for the no-nerd-font preset, referenced from the public/presets/toml/no-nerd-font.toml file. Contains settings that avoid using Nerd Font symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-nerd-font.toml\n```\n\n----------------------------------------\n\nTITLE: AWS Region Display Configuration for Starship\nDESCRIPTION: Configuration for displaying only the AWS region in Starship prompt with region aliases and custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[aws]\nformat = 'on [$symbol$region]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in Bash/Zsh\nDESCRIPTION: Shell command to change the default configuration file location for starship using the STARSHIP_CONFIG environment variable in Bash or Zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Applying home-manager configuration for Starship in Nix\nDESCRIPTION: Command to apply the home-manager configuration changes for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Swift module in Starship prompt, showing custom formatting and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_107\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: TOML configuration for customizing the OPA module display in Starship prompt with a helmet emoji in bold red.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Display\nDESCRIPTION: TOML configuration for customizing the Buf build system symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship with TOML\nDESCRIPTION: Example configuration for the Odin programming language module in Starship. This snippet shows how to customize the Odin module format and enable showing the commit information as part of the version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Configuring direnv Module in Starship\nDESCRIPTION: TOML configuration example for the direnv module in Starship prompt. This configuration disables the direnv module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship Declaratively with Home Manager in Nix\nDESCRIPTION: This Nix configuration enables Starship and sets up custom configurations using the home-manager for a single user.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Shell Level Indicator in Starship (TOML)\nDESCRIPTION: This snippet configures the shell level indicator in Starship. It enables the shlvl module, sets a custom format, and defines a threshold for display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship\nDESCRIPTION: Configuration example for the NATS module in Starship, demonstrating how to customize its appearance in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module with Custom Symbol\nDESCRIPTION: Example configuration for customizing the Python module with a custom symbol and enabling pyenv version name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Mercurial Branch Module in Starship\nDESCRIPTION: TOML configuration for customizing the Mercurial branch display with custom format and truncation settings\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_76\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hg_branch]\nformat = 'on [üå± $branch](bold purple)'\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship Prompt (TOML)\nDESCRIPTION: Sets a custom symbol for the Kotlin module in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship\nDESCRIPTION: Example configuration for the Zig language module in Starship prompt. This snippet changes the default symbol to display before the Zig version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_115\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship\nDESCRIPTION: Configuration for the Swift module showing Swift version with custom formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset for Starship (Shell)\nDESCRIPTION: This command installs the Pure preset configuration for Starship, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Changing Window Title in Cmd with Starship\nDESCRIPTION: This Lua script shows how to change the window title in Cmd shell when using Starship. It uses the starship_preprompt_user_func to set the title before each prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME').. \": \"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: No Runtime Versions Preset Configuration (TOML)\nDESCRIPTION: TOML configuration for the 'no-runtime-versions' preset in Starship. It disables version display for various language runtimes and tools by setting their 'disabled' property to true.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndisabled = true\n\n[php]\ndisabled = true\n\n[ruby]\ndisabled = true\n\n[java]\ndisabled = true\n\n[kotlin]\ndisabled = true\n\n[golang]\ndisabled = true\n\n[python]\ndisabled = true\n\n[rust]\ndisabled = true\n\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Module in Starship\nDESCRIPTION: TOML configuration for customizing the Raku programming language module display in Starship prompt. Defines custom format and shell symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Installing Nerd Font Symbols Preset for Starship\nDESCRIPTION: This command installs the Nerd Font Symbols preset configuration for Starship. It saves the preset to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset nerd-font-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Setting Subscription Name Alias in Azure Module for Starship\nDESCRIPTION: This snippet demonstrates how to set an alias for a long subscription name in the Azure module configuration for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Testing UTF-8 and Nerd Font Support\nDESCRIPTION: Commands to test whether the terminal properly displays UTF-8 emoji characters and Powerline symbols, useful for troubleshooting font issues.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Changing Window Title in Cmd using Lua\nDESCRIPTION: Function to change the window title in Cmd using Starship's preprompt user function in Lua.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\":\\\\\"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module without Version\nDESCRIPTION: Configuration for displaying Terraform workspace information without version number for better performance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship with TOML\nDESCRIPTION: Configuration for enabling the sudo module specifically on Windows systems in Starship prompt, which requires explicitly setting allow_windows to true.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_111\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Always-Visible Hostname in Starship\nDESCRIPTION: TOML configuration for displaying hostname regardless of SSH status with custom formatting\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Cmd\nDESCRIPTION: Uses the starship_preprompt_user_func to set the window title in the Windows Command Prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME').. \": \"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Log Location in Cmd via Lua\nDESCRIPTION: Lua script for Windows Cmd to set a custom Starship cache directory using environment variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Customizing Local IP Display in Starship\nDESCRIPTION: Configuration for the Local IP module showing custom formatting and enabling the display regardless of SSH status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in PowerShell\nDESCRIPTION: Command to change the default Starship configuration file location using the STARSHIP_CONFIG environment variable in PowerShell for Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship Imperatively with Nix\nDESCRIPTION: This command installs Starship using the Nix package manager in an imperative manner.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Debug Trap Setup in Bash\nDESCRIPTION: Configures DEBUG trap mechanism in Bash for custom command execution handling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module with Version Display in Starship\nDESCRIPTION: TOML configuration for the Terraform module that includes both the version and workspace information in the display format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Module in Starship\nDESCRIPTION: TOML configuration for customizing the Julia module symbol in Starship shell prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Disabling Python Module Extension Detection in Starship\nDESCRIPTION: TOML configuration that prevents Starship's Python module from being triggered by .py extension files.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Version Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the Package Version module in Starship prompt. Shows how to customize the format and appearance of package version information in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Zig module in Starship prompt, customizing the symbol displayed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_111\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Disabling Guix-shell Module in Starship\nDESCRIPTION: Example showing how to disable the Guix-shell module and customize its format with a different emoji when it is enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Applying Plain Text Symbols Preset in Starship (Shell)\nDESCRIPTION: This command applies the Plain Text Symbols preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Customizing Continuation Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to customize the continuation prompt in Starship, which appears when entering multi-line input in supported shells.\nSOURCE: https://github.com/starship/starship/blob/master/docs/uk-UA/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# –ü–æ–¥–æ–≤–∂–µ–Ω–∏–π –≤–≤—ñ–¥ –ø–æ–∑–Ω–∞—á–∞—î—Ç—å—Å—è –¥–≤–æ–º–∞ —Å—Ç—Ä—ñ–ª–∫–∞–º–∏\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship (TOML)\nDESCRIPTION: Example configuration for the VCSH module in Starship prompt, setting a custom symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_110\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Module in Starship (TOML)\nDESCRIPTION: Sets up the Environment Variable module to display the SHELL variable with a default value.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet shows various configuration options for the Google Cloud module in Starship prompt, including displaying account and project, active config name, and using aliases for regions and projects.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n\n# Display active config name only\n[gcloud]\nformat = '[$symbol$active]($style) '\nstyle = 'bold yellow'\n\n# Display account and aliased region\n[gcloud]\nsymbol = 'Ô∏èüá¨Ô∏è '\n[gcloud.region_aliases]\nus-central1 = 'uc1'\nasia-northeast1 = 'an1'\n\n# Display account and aliased project\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($project\\))]($style) '\n[gcloud.project_aliases]\nvery-long-project-name = 'vlpn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship\nDESCRIPTION: Configuration example for customizing the Elixir module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Lua Module in Starship using TOML\nDESCRIPTION: Example configuration for the Lua module in Starship prompt. This customizes the format to display a moon emoji followed by the Lua version in bold blue text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[lua]\nformat = 'via [üåï $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: Example configuration for the OCaml module in Starship prompt that customizes the display format to show the OCaml version with a camel emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL for Older Linux Distributions\nDESCRIPTION: Command to install Starship compiled with MUSL instead of GLIBC, useful for compatibility with older Linux distributions like CentOS 6 or 7.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Format Configuration in TOML\nDESCRIPTION: Updated configuration using the new format property that allows for more customization of prompt rendering.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing the No Runtime Versions Preset in Starship\nDESCRIPTION: Command to install the No Runtime Versions preset which hides language runtime versions in the Starship prompt. This command downloads the preset and saves it to the Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship (TOML)\nDESCRIPTION: This configuration enables the sudo module on Windows systems in Starship prompt, which is disabled by default due to the lack of a native sudo command on Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Stapling Notarization Ticket to Package\nDESCRIPTION: Command to staple a notarization ticket to a package, which allows offline verification of the package's notarization status.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nxcrun stapler staple <package>\n```\n\n----------------------------------------\n\nTITLE: Configuring the character module with error_symbol in v0.45.0\nDESCRIPTION: Example configuration to use the older use_symbol_for_status behavior with the new error_symbol property in Starship v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nerror_symbol = \"[‚úñ](bold red)\"\n```\n\n----------------------------------------\n\nTITLE: Setting Current Directory in Window Title for Bash\nDESCRIPTION: Bash configuration that displays the current directory name in the terminal window title using Starship's pre-command hook.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up Custom Pre-prompt Commands in Bash\nDESCRIPTION: Implements custom pre-prompt functionality in Bash to display a rocket symbol before the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Symbols\nDESCRIPTION: TOML configuration for customizing battery status symbols in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version Display in Starship\nDESCRIPTION: Example configuration for displaying only the Pulumi stack without version information in the Starship prompt, using a custom symbol and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PHP Module in Starship\nDESCRIPTION: Example configuration for the PHP module in Starship prompt. It modifies the format and color used for displaying PHP version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[php]\nformat = 'via [üîπ $version](147 bold) '\n```\n\n----------------------------------------\n\nTITLE: Loading Bracketed Segments Configuration\nDESCRIPTION: Reference to the bracketed segments configuration file that gets loaded by the preset command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/bracketed-segments.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/bracketed-segments.toml\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Symbol in Starship (TOML)\nDESCRIPTION: This snippet demonstrates how to customize the symbol used for the Buf module in Starship. It changes the default buffalo symbol to a different emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Local IP Module Configuration\nDESCRIPTION: Configuration for displaying local IPv4 address in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in Cmd via Lua\nDESCRIPTION: Lua script to change the default Starship configuration file location using the STARSHIP_CONFIG environment variable for Windows Cmd.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux\nDESCRIPTION: Curl command to download and install Starship binary in the Termux environment with specific binary directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Metrics Module in Starship Prompt (TOML)\nDESCRIPTION: This example demonstrates how to configure the Fossil Metrics module in Starship prompt. It customizes the style for added lines and the format of the metrics display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_metrics]\nadded_style = 'bold blue'\nformat = '[+$added]($added_style)/[-$deleted]($deleted_style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Display Module\nDESCRIPTION: Configuration for displaying current local time with custom formatting and UTC offset settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n[time]\ndisabled = false\nformat = 'üïô[\\[ $time \\]]($style) '\ntime_format = '%T'\nutc_time_offset = '-5'\ntime_range = '10:00:00-14:00:00'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship Prompt\nDESCRIPTION: Sets a custom symbol for the Kotlin module in the Starship prompt by modifying the configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version in Starship\nDESCRIPTION: Example configuration for the Pulumi module in Starship prompt, excluding the Pulumi version from the display format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Version Display\nDESCRIPTION: Example configuration for customizing how package versions are displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: Example configuration for the PureScript module in Starship prompt, setting a custom format with bold white styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship\nDESCRIPTION: Example configuration for the Daml module in Starship prompt. It sets a custom format with a green 'D' and version number.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status in Starship\nDESCRIPTION: TOML configuration example for customizing git status indicators in Starship prompt, including custom symbols for different git states\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nconflicted = 'üè≥'\nahead = 'üèéüí®'\nbehind = 'üò∞'\ndiverged = 'üòµ'\nup_to_date = '‚úì'\nuntracked = 'ü§∑'\nstashed = 'üì¶'\nmodified = 'üìù'\nstaged = '[++\\($count\\)](green)'\nrenamed = 'üëÖ'\ndeleted = 'üóë'\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variable Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Environment Variable module in Starship prompt, displaying the SHELL variable with a default value.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship with TOML\nDESCRIPTION: Example configuration for the OCaml module in Starship. This snippet demonstrates how to customize the format of the OCaml module in the prompt to display the camel emoji and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Adding Function to Precmd Array in Zsh\nDESCRIPTION: Adds the window title function to the precmd_functions array in zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nprecmd_functions+=(set_win_title)\n```\n\n----------------------------------------\n\nTITLE: Customizing Gleam Programming Language Module in Starship Prompt\nDESCRIPTION: Example configuration for customizing how the Gleam programming language version appears in the Starship prompt, changing the format and color scheme.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nim programming language version display with custom symbol and style\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Symbol in Starship Using TOML\nDESCRIPTION: A TOML configuration example for customizing the Java module symbol in Starship prompt. This sets a custom star emoji as the Java symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset for Starship in Shell\nDESCRIPTION: This command installs the Pastel Powerline preset configuration for Starship prompt. It saves the preset to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Break in Starship\nDESCRIPTION: Disables the line break in the Starship prompt, making it single-line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship\nDESCRIPTION: Command to locate and remove the Starship binary for manual uninstallation.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: Example configuration for customizing the Deno runtime version display in Starship shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: Shows how to set a custom continuation prompt in Starship's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Cmd with Clink\nDESCRIPTION: This Lua script shows how to customize the transient prompt in Cmd shell using Clink and Starship. It defines functions to modify the left and right sides of the input prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\n\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Binary in Starship (TOML)\nDESCRIPTION: Specifies the Kotlin compiler binary to use for version detection in Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Location in Lua\nDESCRIPTION: Sets a custom location for the Starship cache directory in Lua using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: Example configuration for customizing the OCaml module display format in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_30\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration\nDESCRIPTION: Command to install the Pure preset configuration for Starship shell into the user's configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-Prompt Function in Cmd with Clink\nDESCRIPTION: This Lua script for Cmd shell defines a custom function that runs before the prompt is displayed. It demonstrates how to print a rocket emoji before each prompt by defining the starship_preprompt_user_func function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Bun Module in Starship\nDESCRIPTION: Configuration for the Bun module in Starship prompt, including custom formatting and detection overrides.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndetect_files = ['package.json', '.node-version', '!bunfig.toml', '!bun.lockb']\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Logging Location in PowerShell\nDESCRIPTION: PowerShell command to set a custom logging directory for starship by adding the STARSHIP_CACHE environment variable to the PowerShell profile.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship Without Sudo Privileges\nDESCRIPTION: Command to install Starship to a user-writable directory without requiring sudo privileges, using the install script's -b option to specify the installation path.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- -b ~/.local/bin\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Golang Module Configuration\nDESCRIPTION: Example showing how to incorporate the mod_version variable in the Golang module format to display both Go version and the version requirement from go.mod.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module in Starship\nDESCRIPTION: Configuration examples for the Terraform module showing workspace and version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Gleam Module Display in Starship (TOML)\nDESCRIPTION: This configuration snippet shows how to customize the display of the Gleam programming language module in Starship. It sets a custom format and color for the Gleam version indicator.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship\nDESCRIPTION: Example configuration for the NATS context module in Starship prompt, demonstrating format and style settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Configuring V Language Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the V language module in a Starship prompt, customizing the format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_100\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship\nDESCRIPTION: Sets the Kotlin symbol display in the Starship prompt to a custom emoji character.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Disabling Python Extension Detection in Starship\nDESCRIPTION: This configuration prevents the Python module from being triggered by files with the .py extension.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Customizing the Swift Module in Starship with TOML\nDESCRIPTION: Example configuration for the Swift module in Starship prompt that changes the format and appearance of the Swift version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_112\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Installing No Empty Icons Preset in Starship (Shell)\nDESCRIPTION: Command to apply the 'No Empty Icons' preset to your Starship configuration. This installs the preset to the specified configuration file path.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring gcloud Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to customize the gcloud module in Starship prompt. It sets a custom symbol for gcloud and defines region aliases.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nsymbol = 'Ô∏èüá¨Ô∏è '\n[gcloud.region_aliases]\nus-central1 = 'uc1'\nasia-northeast1 = 'an1'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Environment Variables in Starship (TOML)\nDESCRIPTION: Example configuration for displaying multiple environment variables in Starship prompt, including SHELL and USER.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module Configuration in TOML\nDESCRIPTION: Example configuration for customizing the OS module in Starship prompt. This snippet demonstrates how to enable the module, change its format and style, and customize symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_87\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship (TOML)\nDESCRIPTION: Configuration to enable the sudo module on Windows in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_106\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Swift Module Display\nDESCRIPTION: Configuration for customizing how the Swift programming language version is displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Tracking Status\nDESCRIPTION: TOML configuration for showing ahead/behind count of tracked git branches in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nahead = '‚á°${count}'\ndiverged = '‚áï‚á°${ahead_count}‚á£${behind_count}'\nbehind = '‚á£${count}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Zig Module in Starship\nDESCRIPTION: Example configuration for the Zig programming language module in Starship prompt, customizing the symbol displayed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_111\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[zig]\nsymbol = '‚ö°Ô∏è '\n```\n\n----------------------------------------\n\nTITLE: Jetpack preset configuration TOML for Starship\nDESCRIPTION: Complete TOML configuration file for the Jetpack preset that defines the minimalist prompt style, format, and behavior for various modules in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$time\"\nadd_newline = false\n\n[directory]\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\nstyle = \"bold blue\"\nformat = \"[$path]($style) \"\n\n[git_branch]\nformat = \"[$symbol$branch]($style) \"\nsymbol = \"\"\nstyle = \"bold purple\"\n\n[git_status]\nformat = \"([$all_status$ahead_behind]($style) )\"\nstyle = \"bold red\"\nconflicted = \"=\"\nahead = \"‚á°${count}\"\nbehind = \"‚á£${count}\"\ndiverged = \"‚áï\"\nuntracked = \"?\"\nstaged = \"+\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\n\n[character]\nsuccess_symbol = \"[Œª](bold green)\"\nerror_symbol = \"[Œª](bold red)\"\n\n[time]\nformat = \"[$time]($style)\"\nstyle = \"bold dimmed\"\ntime_format = \"%T\"\ndisabled = false\n\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Location in PowerShell\nDESCRIPTION: Sets a custom location for the Starship cache directory in PowerShell using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship with Xonsh\nDESCRIPTION: Python code to add to .xonshrc for enabling Starship in Xonsh shell\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/guide/README.md#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version in Starship Shell Prompt\nDESCRIPTION: Configuration example for enabling Pulumi version display in the Starship prompt, although it may impact load time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_86\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Rust module in Starship prompt. Sets a custom format using the gear emoji and red bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Changing Window Title in Cmd with Starship\nDESCRIPTION: Demonstrates how to change the window title in Cmd shell using Starship's preprompt function. It sets the title to include username, computer name, and current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')...\": \"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration Path in PowerShell\nDESCRIPTION: PowerShell command to set a custom Starship configuration file location using the STARSHIP_CONFIG environment variable in Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Configuring the Scala Module in Starship\nDESCRIPTION: Configuration example for customizing the Scala module in Starship prompt, changing the symbol used to represent Scala.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Memory Usage module in Starship prompt. It enables the module, sets a custom threshold, symbol, and style for displaying memory usage information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship for Cmd using Clink\nDESCRIPTION: Create a Lua script to initialize Starship for Windows Command Prompt using Clink.\nSOURCE: https://github.com/starship/starship/blob/master/docs/guide/README.md#2025-04-19_snippet_3\n\nLANGUAGE: lua\nCODE:\n```\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Memory Usage Module in Starship (TOML)\nDESCRIPTION: This snippet enables and customizes the Memory Usage module in Starship. It sets a custom symbol, style, and disables the usage threshold.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Module in Starship\nDESCRIPTION: This example demonstrates configuring the Red module in Starship. It customizes the symbol displayed by the Red module to a red circle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Cache Directory in Cmd via Lua\nDESCRIPTION: Lua script to change the default Starship cache directory using the STARSHIP_CACHE environment variable for Windows Cmd.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Tcsh\nDESCRIPTION: Initialization script for Tcsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.tcshrc\n\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship\nDESCRIPTION: TOML configuration for customizing the Elm module format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Elm Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Elm module in Starship prompt, customizing the format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elm]\nformat = 'via [ $version](cyan bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the VCSH repository module in a Starship prompt, customizing the symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Language Module in Starship\nDESCRIPTION: TOML configuration example for customizing how the Raku programming language module appears in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module in Starship\nDESCRIPTION: Configuration examples for the Terraform module, with and without version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $version$workspace]($style) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Swift Module Display in Starship Prompt\nDESCRIPTION: TOML configuration example for customizing the Swift module display format with a custom symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Updating Character module configuration in Starship v0.45.0\nDESCRIPTION: Changes to the default configuration of the Character module in Starship v0.45.0, including new properties and removed properties.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[character]\n-- symbol = \"‚ùØ\"\n-- error_symbol = \"‚úñ\"\n-- use_symbol_for_status = true\n-- vicmd_symbol = \"‚ùÆ\"\n++ success_symbol = \"[‚ùØ](bold green)\"\n++ error_symbol = \"[‚ùØ](bold red)\"\n++ vicmd_symbol = \"[‚ùÆ](bold green)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Binary Path in Starship\nDESCRIPTION: Specifies the Kotlin compiler binary path for version detection in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship\nDESCRIPTION: Example configuration for the shell level (SHLVL) module showing custom format and threshold settings\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_82\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module in Starship with Custom Symbol\nDESCRIPTION: Example configuration for the Python module in Starship prompt, changing the symbol to an emoji and enabling pyenv version name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_89\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Notarizing a Distribution Package\nDESCRIPTION: Command to submit a signed distribution package to Apple's notarization service using stored keychain credentials.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nxcrun notarytool submit <package.pkg> --keychain-profile \"AC_PASSWORD\" --wait\n```\n\n----------------------------------------\n\nTITLE: Configuring PureScript Module in Starship\nDESCRIPTION: A TOML configuration example for customizing the PureScript module format in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[purescript]\nformat = 'via [$symbol$version](bold white)'\n```\n\n----------------------------------------\n\nTITLE: Configuring direnv Module in Starship Prompt\nDESCRIPTION: Sample configuration to enable the direnv module in Starship prompt by setting the disabled flag to false in the starship.toml configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[direnv]\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Version Module in Starship Configuration\nDESCRIPTION: Example configuration for customizing the package version module in Starship prompt, including format and symbol customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ja-JP/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Installing Bracketed Segments Preset\nDESCRIPTION: Command to install the bracketed segments preset configuration to the Starship config file location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/bracketed-segments.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset bracketed-segments -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Starship Line Continuation Example\nDESCRIPTION: Example of using line continuation in multiline strings for formatting\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\nline1\\\nline1\\\nline1\nline2\\\nline2\\\nline2\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Cmd with Starship Character Module\nDESCRIPTION: Lua code for Cmd shell that customizes the transient prompt to display Starship's character module when prompt is simplified.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transitent_propt_func(empt)\n  return io.popen(\"starship module character\"\n    ...\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version Display in Starship (TOML)\nDESCRIPTION: Example configuration for the Pulumi module that omits the Pulumi version for faster performance. This only displays a ship emoji followed by the stack name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Context Module in Starship\nDESCRIPTION: Configuration example for the docker_context module in Starship, demonstrating custom format with emoji and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Pre-prompt and Pre-execution Commands in Bash\nDESCRIPTION: This Bash script shows how to create custom functions that run before the prompt is drawn and before a command is executed, integrating with Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Tcsh\nDESCRIPTION: Configuration lines to add to ~/.tcshrc to initialize Starship in Tcsh shell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.tcshrc\n\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship\nDESCRIPTION: TOML configuration for customizing the Daml SDK version display in Starship prompt, using bright green coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Memory Usage Module Configuration\nDESCRIPTION: Configuration for displaying system memory and swap usage information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[memory_usage]\ndisabled = false\nthreshold = -1\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo on Windows\nDESCRIPTION: Windows-specific configuration to enable sudo module functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: No Nerd Font Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration file defines the 'no-nerd-font' preset for Starship. It sets various symbols and configurations to ensure compatibility without Nerd Fonts installed.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Use custom format\nformat = \"\"\"\\n$directory$git_branch$git_state$git_status$package$golang$terraform$docker_context$python$docker_context$nodejs$rust$java$kotlin$haskell$dotnet\n[‚ùØ](bold green) \"\"\"\n\n# Disable the blank line at the start of the prompt\nadd_newline = false\n\n# You can also replace your username with a neat symbol like   or disable this\n# and use the os module below\n[username]\nshow_always = true\nstyle_user = \"blue bold\"\nstyle_root = \"black bold\"\nformat = \"user: [$user]($style) \"\ndisabled = false\n\n# An alternative to the username module which displays a symbol that\n# represents the current operating system\n[os]\nstyle = \"fg:#32cd32\"\ndisabled = true # Disabled by default\n\n[directory]\ntruncation_length = 3\ntruncation_symbol = \"‚Ä¶/\"\nhome_symbol = \" ~\"\nread_only_style = \"197\"\nread_only = \"  \"\nformat = \"[$path]($style)[$read_only]($read_only_style) \"\n\n[git_branch]\nsymbol = \" \"\ntruncation_length = 4\ntruncation_symbol = \"‚Ä¶\"\nformat = \"[$symbol$branch]($style) \"\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style) )'\nstyle = \"fg:#ff0000\"\nconflicted = \"=\"\nahead = \"‚Üë\"\nbehind = \"‚Üì\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\n\n[nodejs]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[rust]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[golang]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[php]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[time]\ndisabled = false\ntime_format = \"%R\" # Hour:Minute Format\nstyle = \"fg:#32cd32\"\nformat = '[$time]($style) '\n\n[docker_context]\nsymbol = \" \"\nformat = \"[$symbol$context]($style) \"\nstyle = \"blue bold\"\ndisabled = false\n\n[package]\nsymbol = \" \"\nformat = \"[$symbol$version]($style) \"\nstyle = \"208\"\n\n[java]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[kotlin]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[haskell]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[python]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n\n[terraform]\nsymbol = \"Û±Å¢ \"\nformat = \"[$symbol$workspace]($style) \"\n\n[dotnet]\nsymbol = \" \"\nformat = \"[$symbol($version )]($style)\"\n```\n\n----------------------------------------\n\nTITLE: Window Title Setup in PowerShell\nDESCRIPTION: Configures window title in PowerShell using pre-command function to display username, computer name and current path.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration for Starship\nDESCRIPTION: This command installs the Pure preset configuration for Starship by downloading the preset and saving it to the Starship configuration file location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Battery Display Thresholds in Starship Prompt\nDESCRIPTION: This snippet shows how to set up custom display thresholds and styles for the battery module in Starship, including different symbols for different charge levels.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n\n[[battery.display]]\nthreshold = 30\nstyle = 'bold yellow'\ndischarging_symbol = 'üí¶ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module with Custom Symbol in Starship\nDESCRIPTION: Example configuration for customizing the Python module in Starship by changing the symbol and enabling pyenv version name display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\nsymbol = 'üëæ '\npyenv_version_name = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship\nDESCRIPTION: Example configuration for the Haxe module in Starship prompt, showing how to customize its format with a bold orange color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Username Display\nDESCRIPTION: TOML configuration for showing Azure username instead of subscription in the Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Fill Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet demonstrates how to configure the Fill module in Starship prompt. It sets the fill symbol to a dash and styles it in bold green.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\nformat = 'AA $fill BB $fill CC'\n\n[fill]\nsymbol = '-'\nstyle = 'bold green'\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module Format in Starship\nDESCRIPTION: A TOML configuration example showing how to customize the format of the Perl module, which displays the current version of Perl with a custom symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Prompt Order in Starship (Pre-v0.45.0)\nDESCRIPTION: Example of how to configure the prompt order in Starship versions prior to 0.45.0 using the prompt_order array in TOML.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Displaying Starship Command Help\nDESCRIPTION: Shows how to display help information for the starship prompt command, which lists all available flags and options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell with Starship\nDESCRIPTION: This PowerShell function updates the terminal window title with user, computer name, and current directory information, then initializes Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/uk-UA/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship\nDESCRIPTION: Example configuration for the Vagrant module in Starship prompt, customizing its format and appearance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_108\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship\nDESCRIPTION: Configuration for the sudo module showing sudo credentials status with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\nLANGUAGE: toml\nCODE:\n```\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version in Starship\nDESCRIPTION: TOML configuration example for Pulumi module showing version information and custom ship emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship\nDESCRIPTION: TOML configuration for customizing the Mojo programming language module display in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Module in Starship\nDESCRIPTION: Example TOML configuration for customizing the Julia module symbol in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Line Break Module Configuration\nDESCRIPTION: Configuration for enabling/disabling line breaks in the prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring command duration prefix in Starship pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how the command duration prefix was configured in Starship versions before v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Starship Performance\nDESCRIPTION: Command to generate timing information for Starship modules, helping identify performance bottlenecks in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Creating a Starship Bug Report\nDESCRIPTION: Command to generate a GitHub issue with relevant system information for reporting bugs in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Creating Pre-Command Function in PowerShell\nDESCRIPTION: Implements a custom pre-command function in PowerShell to display a rocket symbol before command execution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Buf Module Symbol in Starship\nDESCRIPTION: This configuration changes the default symbol used in the Buf module of Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Module to Display Active Config Only\nDESCRIPTION: Example configuration for the Google Cloud module that only displays the active configuration name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gcloud]\nformat = '[$symbol$active]($style) '\nstyle = 'bold yellow'\n```\n\n----------------------------------------\n\nTITLE: Adding Pre-execution Command Display in Cmd\nDESCRIPTION: This Lua script defines a custom function that prints the command that's about to be executed in Cmd shell, utilizing Clink's pre-execution command functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_precmd_user_func(line)\n  print(\"Executing: \"..line)\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Cmd using Lua\nDESCRIPTION: Changes the window title in Cmd using the starship_preprompt_user_func function with Lua.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\":\"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Haxe module display format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt (TOML)\nDESCRIPTION: Configures the Line Break module to disable the line break, making the prompt a single line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Bash/Zsh\nDESCRIPTION: This function changes the terminal window title. It uses ANSI escape sequences to set the title and can be integrated with Starship's prompt rendering in bash or zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Applying No Empty Icons Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'No Empty Icons' preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Setting Up Transient Prompt in Fish Shell with Time Module\nDESCRIPTION: Configuration for Fish shell to enable transient prompt functionality with a custom function displaying the Starship time module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transent_rmpt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Pure Preset TOML Configuration\nDESCRIPTION: TOML configuration file contents that define the Pure preset settings for Starship prompt, including format, styling, and module configurations\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pure-preset.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Version Detection in Starship Prompt\nDESCRIPTION: Specifies which Kotlin binary to use when detecting the installed Kotlin version. This configuration uses the 'kotlinc' compiler binary to retrieve the version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Adding Function to Zsh Precmd Array\nDESCRIPTION: Adds the window title function to Zsh's precmd_functions array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nprecmd_functions+=(set_win_title)\n```\n\n----------------------------------------\n\nTITLE: Installing Bracketed Segments Preset Using Starship CLI\nDESCRIPTION: Command to install the bracketed segments preset configuration to the Starship config directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/bracketed-segments.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset bracketed-segments -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Crystal Module Configuration in TOML\nDESCRIPTION: Example configuration for the crystal module showing custom format and styling\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring cmd_duration module in v0.45.0 (TOML)\nDESCRIPTION: Example of how the cmd_duration module is configured using the new 'format' string in v0.45.0, replacing the previous 'prefix' property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Prerequisites for Starship on Termux\nDESCRIPTION: This command installs the 'getconf' package, which is a prerequisite for installing Starship on the Termux Android terminal emulator.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration implements the No Empty Icons preset for Starship. It sets various module configurations to ensure icons are only displayed when version information is available.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol($profile )(\\($region\\) )(\\[$duration\\] )]($style)'\n\n[bun]\nformat = 'via [$symbol($version )]($style)'\n\n[c]\nformat = 'via [$symbol($version(-$name) )]($style)'\n\n[cmake]\nformat = 'via [$symbol($version )]($style)'\n\n[cmd_duration]\nformat = 'took [$duration]($style)'\n\n[cobol]\nformat = 'via [$symbol($version )]($style)'\n\n[conda]\nformat = 'via [$symbol$environment]($style)'\n\n[crystal]\nformat = 'via [$symbol($version )]($style)'\n\n[daml]\nformat = 'via [$symbol($version )]($style)'\n\n[dart]\nformat = 'via [$symbol($version )]($style)'\n\n[deno]\nformat = 'via [$symbol($version )]($style)'\n\n[docker_context]\nformat = 'via [$symbol$context]($style)'\n\n[dotnet]\nformat = 'via [$symbol($version )(üéØ $tfm )]($style)'\n\n[elixir]\nformat = 'via [$symbol($version \\(OTP $otp_version\\) )]($style)'\n\n[elm]\nformat = 'via [$symbol($version )]($style)'\n\n[erlang]\nformat = 'via [$symbol($version )]($style)'\n\n[fennel]\nformat = 'via [$symbol($version )]($style)'\n\n[fossil_branch]\nformat = 'on [$symbol$branch]($style)'\n\n[gcloud]\nformat = 'on [$symbol$account(@$domain)(\\($region\\))]($style)'\n\n[git_branch]\nformat = 'on [$symbol$branch(:$remote_branch)]($style)'\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style))'\n\n[golang]\nformat = 'via [$symbol($version )]($style)'\n\n[gradle]\nformat = 'via [$symbol($version )]($style)'\n\n[guix_shell]\nformat = 'via [$symbol]($style)'\n\n[haskell]\nformat = 'via [$symbol($version )]($style)'\n\n[haxe]\nformat = 'via [$symbol($version )]($style)'\n\n[helm]\nformat = 'via [$symbol($version )]($style)'\n\n[hg_branch]\nformat = 'on [$symbol$branch]($style)'\n\n[java]\nformat = 'via [$symbol($version )]($style)'\n\n[julia]\nformat = 'via [$symbol($version )]($style)'\n\n[kotlin]\nformat = 'via [$symbol($version )]($style)'\n\n[kubernetes]\nformat = 'on [$symbol$context( \\($namespace\\))]($style)'\n\n[lua]\nformat = 'via [$symbol($version )]($style)'\n\n[meson]\nformat = 'via [$symbol$project]($style)'\n\n[nim]\nformat = 'via [$symbol($version )]($style)'\n\n[nix_shell]\nformat = 'via [$symbol$state( \\($name\\))]($style)'\n\n[nodejs]\nformat = 'via [$symbol($version )]($style)'\n\n[ocaml]\nformat = 'via [$symbol($version )(\\($switch_indicator$switch_name\\) )]($style)'\n\n[opa]\nformat = 'via [$symbol($version )]($style)'\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style)'\n\n[package]\nformat = 'is [$symbol$version]($style)'\n\n[perl]\nformat = 'via [$symbol($version )]($style)'\n\n[php]\nformat = 'via [$symbol($version )]($style)'\n\n[pulumi]\nformat = 'via [$symbol$stack]($style)'\n\n[purescript]\nformat = 'via [$symbol($version )]($style)'\n\n[python]\nformat = 'via [$symbol$pyenv_prefix($version )(\\($virtualenv\\) )]($style)'\n\n[raku]\nformat = 'via [$symbol($version-$vm_version )]($style)'\n\n[red]\nformat = 'via [$symbol($version )]($style)'\n\n[ruby]\nformat = 'via [$symbol($version )]($style)'\n\n[rust]\nformat = 'via [$symbol($version )]($style)'\n\n[scala]\nformat = 'via [$symbol($version )]($style)'\n\n[spack]\nformat = 'via [$symbol$environment]($style)'\n\n[sudo]\nformat = '[as $symbol]'\n\n[swift]\nformat = 'via [$symbol($version )]($style)'\n\n[terraform]\nformat = 'via [$symbol$workspace]($style)'\n\n[time]\nformat = 'at [$time]($style)'\n\n[vagrant]\nformat = 'via [$symbol($version )]($style)'\n\n[vlang]\nformat = 'via [$symbol($version )]($style)'\n\n[zig]\nformat = 'via [$symbol($version )]($style)'\n\n[solidity]\nformat = 'via [$symbol($version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship\nDESCRIPTION: Example configuration for the Golang module in Starship prompt. It sets a custom format using the Go version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Symbols in Starship\nDESCRIPTION: This configuration customizes the symbols used for different battery states in the Starship battery module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Customizing Scala Module in Starship Prompt with TOML\nDESCRIPTION: Configuration example for the Scala module in Starship prompt using TOML. This changes the default symbol to a star emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_97\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Creating Pre-Command Function in PowerShell\nDESCRIPTION: PowerShell function that displays a rocket emoji before the prompt using Starship's custom pre-command hook system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Spack Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to customize the Spack module in Starship, including setting a custom format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_104\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Module Extensions\nDESCRIPTION: Example showing how to disable Python module triggering for .py extension files.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship Prompt\nDESCRIPTION: Example configuration for the Nim programming language module in Starship prompt. This customizes the style to yellow and changes the symbol to a fishing emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_75\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Testing Unicode Symbol Display\nDESCRIPTION: These commands test if the terminal can correctly display Unicode emoji and Powerline symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship system-wide on NixOS\nDESCRIPTION: This command rebuilds the NixOS system configuration to include Starship, after adding it to the environment.systemPackages in configuration.nix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-command in PowerShell\nDESCRIPTION: Implements pre-command functionality in PowerShell to display a rocket symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship Shell Prompt\nDESCRIPTION: Configuration example for customizing the Perl module in Starship prompt with a custom symbol and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_84\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship Prompt with TOML\nDESCRIPTION: Configuration example for the SHLVL module which displays the current shell level. This example sets a custom format and threshold for when to show the shell level indicator.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Transient Prompt in PowerShell\nDESCRIPTION: Customizes the transient prompt in PowerShell to display Starship's character module. Defines the Invoke-Starship-TransientFunction to modify the prompt appearance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Aliases in TOML\nDESCRIPTION: Adds option to replace hostnames with aliases in the hostname module. This allows showing custom names instead of the actual system hostname.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[hostname]\naliases = { \"my-long-hostname\" = \"myhost\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Haxe module display in Starship prompt, showing how to format the version number and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship - Nickname Aliases\nDESCRIPTION: Example configuration to replace the actual hostname with a friendly nickname in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[hostname]\naliases = { \"Max's MacBook Pro\" = \"home\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship\nDESCRIPTION: TOML configuration for customizing the Mojo programming language module display in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Installing No Empty Icons Preset via Starship CLI\nDESCRIPTION: Command to install the No Empty Icons preset configuration to the Starship config file location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientRPrompt in Cmd with Lua\nDESCRIPTION: Shows how to customize the transient prompt's right side in Cmd shell using Lua to display command execution time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Configuration for Starship\nDESCRIPTION: Complete TOML configuration for the Plain Text Symbols preset. This configuration replaces Unicode symbols with plain text alternatives for various modules in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"aws \"\n\n[battery]\ncharging_symbol = \"charging \"\ndischarging_symbol = \"discharging \"\nfull_symbol = \"full \"\nempty_symbol = \"empty \"\n\n[cmake]\nsymbol = \"cmake \"\n\n[cmd_duration]\nsymbol = \"took \"\n\n[conda]\nsymbol = \"conda \"\n\n[crystal]\nsymbol = \"crystal \"\n\n[dart]\nsymbol = \"dart \"\n\n[deno]\nsymbol = \"deno \"\n\n[directory]\nread_only = \" ro\"\n\n[docker_context]\nsymbol = \"docker \"\n\n[dotnet]\nsymbol = \"dotnet \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[fossil_branch]\nsymbol = \"fossil \"\n\n[git_branch]\nsymbol = \"git \"\n\n[git_commit]\nsymbol = \"git \"\n\n[git_state]\nformat = '[$state( $progress_current/$progress_total)]($style) '\nrebase = \"rebase\"\nmerge = \"merge\"\ncherrypick = \"cherrypick\"\nbisect = \"bisect\"\nam = \"am\"\nam_or_rebase = \"am/rebase\"\n\n[git_status]\nconflicted = \"conflict\"\nahead = \"ahead\"\nbehind = \"behind\"\ndiverged = \"diverged\"\nuntracked = \"untracked\"\nstashed = \"stashed\"\nmodified = \"modified\"\nstaged = \"staged\"\nrenamed = \"renamed\"\ndeleted = \"deleted\"\n\n[golang]\nsymbol = \"go \"\n\n[guix_shell]\nsymbol = \"guix \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[haxe]\nsymbol = \"haxe \"\n\n[helm]\nsymbol = \"helm \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[hostname]\nssh_symbol = \"ssh \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"julia \"\n\n[kotlin]\nsymbol = \"kotlin \"\n\n[kubernetes]\nsymbol = \"kubernetes \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[meson]\nsymbol = \"meson \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[ocaml]\nsymbol = \"ocaml \"\n\n[os.symbols]\nAlpine = \"alpine \"\nAmazon = \"amazon \"\nAndroid = \"android \"\nArch = \"arch \"\nCentOS = \"centos \"\nDarwin = \"darwin \"\nDragonfly = \"dragonfly \"\nEndeavourOS = \"endeavouros \"\nFedora = \"fedora \"\nFreeBSD = \"freebsd \"\nGaruda = \"garuda \"\nGentoo = \"gentoo \"\nHaikuOS = \"haiku \"\nIllumos = \"illumos \"\nLinux = \"linux \"\nMacos = \"macos \"\nManjaro = \"manjaro \"\nMariner = \"mariner \"\nMidnightBSD = \"midnightbsd \"\nMint = \"mint \"\nNetBSD = \"netbsd \"\nNixOS = \"nixos \"\nOpenBSD = \"openbsd \"\nopenSUSE = \"opensuse \"\nPop = \"pop \"\nRaspbian = \"raspbian \"\nRedhat = \"redhat \"\nRedHatEnterprise = \"redhat \"\nSolus = \"solus \"\nSUSE = \"suse \"\nUbuntu = \"ubuntu \"\nUnknown = \"unknown \"\nWindows = \"windows \"\n\n[package]\nsymbol = \"package \"\n\n[perl]\nsymbol = \"perl \"\n\n[php]\nsymbol = \"php \"\n\n[pijul_channel]\nsymbol = \"pijul \"\n\n[pulumi]\nsymbol = \"pulumi \"\n\n[purescript]\nsymbol = \"purescript \"\n\n[python]\nsymbol = \"python \"\n\n[rlang]\nsymbol = \"rlang \"\n\n[ruby]\nsymbol = \"ruby \"\n\n[rust]\nsymbol = \"rust \"\n\n[scala]\nsymbol = \"scala \"\n\n[spack]\nsymbol = \"spack \"\n\n[status]\nsignal_symbol = \"signal \"\nformat = '[$symbol$status]($style) '\nsuccess_symbol = \"success\"\nnot_found_symbol = \"not found\"\nnot_executable_symbol = \"not executable\"\nsigint_symbol = \"sigint\"\nsigterm_symbol = \"sigterm\"\nsigquit_symbol = \"sigquit\"\naborting_symbol = \"aborting\"\n\n[sudo]\nsymbol = \"sudo \"\n\n[swift]\nsymbol = \"swift \"\n\n[terraform]\nsymbol = \"terraform \"\n\n[zig]\nsymbol = \"zig \"\n```\n\n----------------------------------------\n\nTITLE: Customizing Kubernetes Module in Starship Prompt (TOML)\nDESCRIPTION: Configures the Kubernetes module in Starship, including format, style, and context-specific settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_60\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Scala programming language module display in Starship prompt. Sets custom star emoji as the symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Customizing Bun Module Format in Starship\nDESCRIPTION: This snippet demonstrates how to customize the format of the Bun module in Starship, changing the symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[bun]\nformat = 'via [üçî $version](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL\nDESCRIPTION: Command for installing Starship on Linux distributions with older glibc versions using MUSL compilation.\nSOURCE: https://github.com/starship/starship/blob/master/docs/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Xonsh\nDESCRIPTION: Initialization script for Xonsh shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.xonshrc\n\nexecx($(starship init xonsh))\n```\n\n----------------------------------------\n\nTITLE: Meson Module Configuration\nDESCRIPTION: Configuration for displaying Meson developer environment status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Module Prefix Configuration\nDESCRIPTION: Previous method of configuring module prefix using prefix property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Version Display\nDESCRIPTION: Example configuration for customizing how package versions are displayed in the prompt, including format and styling options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_62\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Setting Up Pre-prompt Rocket Display in Cmd\nDESCRIPTION: Lua function for Cmd shell that displays a rocket emoji before the prompt by defining a custom pre-prompt function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Customizing Guix-shell Module in Starship\nDESCRIPTION: Example configuration for disabling and customizing the Guix-shell module display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Go Module in Starship (TOML)\nDESCRIPTION: Sets a custom format for the Go module in Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Advanced SHLVL Configuration with Character Module (TOML)\nDESCRIPTION: This example shows how to use the repeat and repeat_offset options along with the character module to create a custom prompt appearance based on SHLVL.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Local IP Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the display of the local IP address in the Starship prompt, including format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_72\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell\nDESCRIPTION: Implements window title change functionality for PowerShell using environment variables and current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Configuring V Language Module in Starship (TOML)\nDESCRIPTION: Example configuration for the V language module in Starship prompt, customizing the format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration\nDESCRIPTION: Command to install the Pure preset configuration for Starship shell prompt into the user's config directory\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship with Trace Logs\nDESCRIPTION: Command to enable trace-level logging for Starship when examining a specific module (using rust as an example).\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Git Status Module Configuration\nDESCRIPTION: Example of updated git status configuration with new ahead/behind/diverged properties.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in PowerShell with Character Module\nDESCRIPTION: Code to enable and customize the TransientPrompt feature in PowerShell, replacing standard prompts with a simple character using Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module without Version Display in Starship\nDESCRIPTION: TOML configuration for the Terraform module that shows only the workspace information without version details for better performance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Haxe Module in Starship Configuration\nDESCRIPTION: Example TOML configuration for customizing the Haxe module appearance in Starship prompt, setting a specific format with a bold orange-colored version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Bash/Zsh\nDESCRIPTION: Function to modify terminal window title with custom text or dynamic variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Command Duration Module Configuration in TOML\nDESCRIPTION: Legacy configuration showing prefix property for the command duration module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship\nDESCRIPTION: TOML configuration for customizing the Nim programming language version display with custom style and symbol\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_74\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module without Custom Error Shape in Starship\nDESCRIPTION: Example of customizing the character module in Starship with the same shape but different colors for success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Testing macOS Notarization Status with Shell Commands\nDESCRIPTION: Commands to verify if a file has been properly notarized for macOS distribution. Includes two different verification methods using codesign and spctl utilities.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\ncodesign --test-requirement=\"=notarized\" --verify --verbose <file>\n```\n\nLANGUAGE: shell\nCODE:\n```\nspctl -a -vvv -t install <file>\n```\n\n----------------------------------------\n\nTITLE: Installing Prerequisites for Termux\nDESCRIPTION: Command to install required getconf package on Termux before Starship installation.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration file contents for the Jetpack preset, defining the prompt's appearance and behavior. References an external file that contains the actual configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/jetpack.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientRightPrompt with Time Module in Bash using Ble.sh\nDESCRIPTION: This snippet configures the final right prompt state for transient prompts in Bash using the Ble.sh framework. It sets the final right prompt to display Starship's time module when transient prompts are enabled.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt format in Starship v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt format is configured using the new 'format' string in v0.45.0, replacing the previous 'prompt_order' array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ru-RU/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module in Starship\nDESCRIPTION: Example configuration for the OS module in Starship, enabling the module and customizing the format, style, and OS-specific symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration File Location in Cmd with Lua\nDESCRIPTION: Lua command for setting a custom starship configuration file location in Windows Cmd by modifying the starship.lua file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: Applying Plain Text Symbols Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'plain-text-symbols' preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Symbols in TOML\nDESCRIPTION: Defines symbols for different operating systems used in the Starship prompt customization\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\n```\n\n----------------------------------------\n\nTITLE: Checking Starship Performance with Timing Data\nDESCRIPTION: Command to generate timing data for Starship execution, showing which modules or commands may be causing performance issues.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Customizing Kubernetes Module in Starship Prompt (TOML)\nDESCRIPTION: Configures the Kubernetes module with custom format, style, and context-specific settings in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\nformat = 'on [‚õµ ($user on )($cluster in )$context \\($namespace\\)](dimmed green) '\ndisabled = false\ncontexts = [\n  { context_pattern = \"dev.local.cluster.k8s\", style = \"green\", symbol = \"üíî \" },\n]\n```\n\n----------------------------------------\n\nTITLE: Pure Preset Configuration in TOML Format\nDESCRIPTION: The complete TOML configuration for the Pure preset in Starship. This configuration emulates the look and behavior of the Pure prompt with specific settings for various modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/pure-preset.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Disable the newline at the start of the prompt\nadd_newline = false\n\n# A minimal left prompt\nformat = \"$directory$character\"\n\n# But still show status in the right prompt\nright_format = \"$all\"\n\n# Set 'pure' as a custom command to rendered after the directory\n[character]\nsuccess_symbol = \"[‚ùØ](purple)\"\nerror_symbol = \"[‚ùØ](red)\"\nvimcmd_symbol = \"[‚ùÆ](green)\"\n\n[directory]\nstyle = \"blue\"\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module in Starship\nDESCRIPTION: Examples of customizing the Character module in Starship prompt, including custom success and error symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚úó](bold red) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Fennel Module in Starship (TOML)\nDESCRIPTION: Changes the symbol used for the Fennel module in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fennel]\nsymbol = '‚´∞ '\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Performance with Timings\nDESCRIPTION: Command to analyze the execution time of Starship modules, useful for identifying performance bottlenecks when the prompt feels slow.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Local IP Module Configuration\nDESCRIPTION: Configuration for customizing the display of local IP address in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[localip]\nssh_only = false\nformat = '@[$localipv4](bold red) '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Battery Display Threshold Configuration\nDESCRIPTION: Default configuration for battery level threshold display with styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[[battery.display]]\nthreshold = 10\nstyle = 'bold red'\n```\n\n----------------------------------------\n\nTITLE: Enabling Sudo Module on Windows in Starship Prompt\nDESCRIPTION: TOML configuration for enabling the sudo module on Windows systems by setting allow_windows to true.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n# On windows\n# $HOME\\.starship\\config.toml\n\n[sudo]\nallow_windows = true\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Applying No Runtime Versions Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'no-runtime-versions' preset to the Starship configuration, writing it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship Command\nDESCRIPTION: Command to locate and remove the Starship binary when it was installed using the installation script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# Locate and delete the starship binary\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Font Configuration Test Commands\nDESCRIPTION: Commands to test system font configuration for emoji and powerline symbols support.\nSOURCE: https://github.com/starship/starship/blob/master/docs/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Installing prerequisites for Starship on Termux\nDESCRIPTION: This command installs the 'getconf' package, which is a prerequisite for installing Starship on the Termux Android terminal emulator.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux with Portage\nDESCRIPTION: Command to install Starship on Funtoo Linux using the Portage package manager from the core-kit repository.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration in Starship\nDESCRIPTION: Command to install the Pure preset configuration for Starship shell prompt. This preset emulates the look and behavior of the Pure prompt by Sindre Sorhus.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for PowerShell\nDESCRIPTION: Initialization script for PowerShell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Starship Uninstallation Command\nDESCRIPTION: Command to locate and remove the Starship binary from the system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship\nDESCRIPTION: TOML configuration for customizing the Mojo programming language module display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Azure Subscription Alias Configuration\nDESCRIPTION: Configuration for displaying Azure subscription aliases in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n de cach√© en Cmd con Lua\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de cach√© de Starship en Cmd utilizando Lua para modificar la variable de entorno.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Format Configuration in TOML\nDESCRIPTION: New format configuration replacing prompt_order, allowing for more granular prompt customization with explicit module placement.\nSOURCE: https://github.com/starship/starship/blob/master/docs/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Cmd using Starship Pre-Prompt Function\nDESCRIPTION: This Lua script for Cmd shell demonstrates how to change the window title to show username, computer name, and current directory using the starship_preprompt_user_func with console.settitle().\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\":\"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module with Version in Starship\nDESCRIPTION: Example configuration for the Pulumi module in Starship prompt, including the Pulumi version in the display format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[pulumi]\nformat = '[üõ• ($version )$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Displaying Username in Azure Module for Starship\nDESCRIPTION: This configuration sets up the Azure module in Starship to display the username instead of the subscription. It uses a custom format, symbol, and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Raku Module in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Raku module in Starship prompt. It sets a custom format using a shell emoji for displaying the Raku version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[raku]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship (TOML)\nDESCRIPTION: Example configuration for customizing the Scala module in Starship prompt. It changes the symbol used for displaying Scala version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_46\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Nix Package Manager\nDESCRIPTION: Command for imperative installation of Starship using Nix package manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration file defines the plain text symbols for various Starship modules, replacing Unicode characters with ASCII equivalents.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"aws \"\n\n[buf]\nsymbol = \"buf \"\n\n[c]\nsymbol = \"C \"\n\n[conda]\nsymbol = \"conda \"\n\n[dart]\nsymbol = \"dart \"\n\n[directory]\nread_only = \" ro\"\n\n[docker_context]\nsymbol = \"docker \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"go \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"julia \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[package]\nsymbol = \"pkg \"\n\n[python]\nsymbol = \"py \"\n\n[spack]\nsymbol = \"spack \"\n\n[rust]\nsymbol = \"rust \"\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Binary for Starship\nDESCRIPTION: This example shows how to configure Starship to only use the python3 binary when detecting Python versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Analyzing Starship Performance\nDESCRIPTION: This command runs Starship's timing analysis to identify slow modules or commands.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship timings\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship with TOML\nDESCRIPTION: Configuration example for customizing the OCaml module appearance in Starship prompt. Sets a custom format with a camel emoji symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in Bash\nDESCRIPTION: Sets a custom location for the Starship configuration file using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Disabling Guix-shell Module in Starship Prompt\nDESCRIPTION: Configuration example that disables the Guix-shell module in Starship and customizes its format to show an ox emoji in yellow bold color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: AWS Region Display Configuration\nDESCRIPTION: Configuration for displaying AWS region information with custom aliases in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol$region]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.region_aliases]\nap-southeast-2 = 'au'\nus-east-1 = 'va'\n```\n\n----------------------------------------\n\nTITLE: Testing Font and Glyph Support\nDESCRIPTION: Commands to test system support for emoji and powerline glyphs\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Module in Starship (TOML)\nDESCRIPTION: This snippet shows how to configure the container module in Starship. It customizes the format for displaying container information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version in Starship\nDESCRIPTION: Example of configuring the Pulumi module in Starship prompt without showing the Pulumi version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Erlang Module in Starship\nDESCRIPTION: Configuration example for customizing the Erlang module format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[erlang]\nformat = 'via [e $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset with Starship CLI\nDESCRIPTION: Command to install the Jetpack preset to the Starship configuration file using the starship command-line tool. This will save the preset to the ~/.config/starship.toml location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux\nDESCRIPTION: Installs Starship from the core-kit repository using the Portage package manager on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Module Symbols in TOML\nDESCRIPTION: Default symbols table for the OS module in Starship, mapping operating system types to their respective icons/symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n# This is the default symbols table.\n[os.symbols]\nAIX = \"‚ûø \"\nAlpaquita = \"üîî \"\nAlmaLinux = \"üí† \"\nAlpine = \"üèîÔ∏è \"\nAmazon = \"üôÇ \"\nAndroid = \"ü§ñ \"\nArch = \"üéóÔ∏è \"\nArtix = \"üéóÔ∏è \"\nCachyOS = \"üéóÔ∏è \"\nCentOS = \"üí† \"\nDebian = \"üåÄ \"\nDragonFly = \"üêâ \"\nEmscripten = \"üîó \"\nEndeavourOS = \"üöÄ \"\nFedora = \"üé© \"\nFreeBSD = \"üòà \"\nGaruda = \"ü¶Ö \"\nGentoo = \"üóúÔ∏è \"\nHardenedBSD = \"üõ°Ô∏è \"\nIllumos = \"üê¶ \"\nKali = \"üêâ \"\nLinux = \"üêß \"\nMabox = \"üì¶ \"\nMacos = \"üçé \"\nManjaro = \"ü•≠ \"\nMariner = \"üåä \"\nMidnightBSD = \"üåò \"\nMint = \"üåø \"\nNetBSD = \"üö© \"\nNixOS = \"‚ùÑÔ∏è \"\nNobara = \"üé© \"\nOpenBSD = \"üê° \"\nOpenCloudOS = \"‚òÅÔ∏è \"\nopenEuler = \"ü¶â \"\nopenSUSE = \"ü¶é \"\nOracleLinux = \"ü¶¥ \"\nPop = \"üç≠ \"\nRaspbian = \"üçì \"\nRedhat = \"üé© \"\nRedHatEnterprise = \"üé© \"\nRockyLinux = \"üí† \"\nRedox = \"üß™ \"\nSolus = \"‚õµ \"\nSUSE = \"ü¶é \"\nUbuntu = \"üéØ \"\nUltramarine = \"üî∑ \"\nUnknown = \"‚ùì \"\nUos = \"üê≤ \"\nVoid = \"  \"\nWindows = \"ü™ü \"\n```\n\n----------------------------------------\n\nTITLE: Installing Prerequisites for Termux\nDESCRIPTION: Command to install required dependencies for Starship on Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Branch Symbol in Starship\nDESCRIPTION: This snippet demonstrates how to customize the appearance of the Git branch in the Starship prompt by setting a symbol, truncation length, and ignored branches.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_branch]\nsymbol = 'üå± '\ntruncation_length = 4\ntruncation_symbol = ''\nignore_branches = ['master', 'main']\n```\n\n----------------------------------------\n\nTITLE: Configuring Elixir Module in Starship\nDESCRIPTION: TOML configuration for customizing the Elixir module symbol in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[elixir]\nsymbol = 'üîÆ '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Nix using Imperative Approach\nDESCRIPTION: Command to install Starship on Nix systems using the imperative nix-env command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: No Runtime Versions Preset TOML Configuration\nDESCRIPTION: TOML configuration that disables version display for various language runtimes and tools in the Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-runtime-versions.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Julia Symbol in Starship Using TOML\nDESCRIPTION: A TOML configuration example for customizing the Julia module symbol in Starship prompt. This sets a mathematics therefore symbol as the Julia symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_65\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[julia]\nsymbol = '‚à¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt format in Starship v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt format is configured in Starship v0.45.0 using the new 'format' string, which replaces the previous 'prompt_order' array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Submitting a Binary for Notarization\nDESCRIPTION: Command sequence to package a signed binary into a zip file and submit it to Apple's notarization service using stored keychain credentials, with the wait flag to block until completion.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nzip <archive.zip> <binary>\nxcrun notarytool submit <archive.zip> --keychain-profile \"AC_PASSWORD\" --wait\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset Configuration in TOML\nDESCRIPTION: Configuration file for the No Empty Icons preset in Starship. This TOML configuration ensures that toolset icons are only displayed when their version information can be determined.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-empty-icons.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring cmd_duration module in Starship v0.45.0 (TOML)\nDESCRIPTION: Example of how the cmd_duration module is configured using the new 'format' string in v0.45.0, replacing the previous 'prefix' property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ru-RU/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship Without Sudo\nDESCRIPTION: Example of how to install Starship to a user-writable directory without requiring sudo privileges.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- -b ~/.local/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship\nDESCRIPTION: Example configuration for customizing the OpenStack cloud platform module display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship\nDESCRIPTION: Example configuration for customizing the OPA (Open Policy Agent) module display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Applying System-wide NixOS Configuration\nDESCRIPTION: Command to rebuild and apply system-wide changes for Starship on NixOS.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: No Empty Icons Preset TOML Configuration\nDESCRIPTION: TOML configuration that defines the behavior for showing toolset icons only when version information is available\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-empty-icons.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-empty-icons.toml\n```\n\n----------------------------------------\n\nTITLE: Running Starship Help Command\nDESCRIPTION: Command to display help information for the Starship prompt command, showing available parameters and options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Adding Starship Preset Command\nDESCRIPTION: This commit introduces a new 'preset' command to Starship, allowing users to manage preset configurations.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n* Add starship preset command ([#4112](https://github.com/starship/starship/issues/4112)) ([c8a5adb](https://github.com/starship/starship/commit/c8a5adb412e98b07017ffa0edea5554b0a23b840))\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship Prompt (TOML)\nDESCRIPTION: Sets a custom symbol for the Kotlin module in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Window Title Function for Bash and Zsh\nDESCRIPTION: Bash/Zsh function to update the terminal window title dynamically, which can be used with Starship's pre-command hooks.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Binary for Version Detection (TOML)\nDESCRIPTION: Configuration to use only the 'python3' binary for detecting Python version in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_95\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Only use the `python3` binary to get the version.\npython_binary = 'python3'\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship\nDESCRIPTION: TOML configuration for customizing the Meson developer environment display in Starship prompt with custom truncation and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_70\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Buf Module Configuration\nDESCRIPTION: Custom symbol configuration for the Buf build tool module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[buf]\nsymbol = 'ü¶¨ '\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt Right Side Display in Fish Shell\nDESCRIPTION: This Fish shell script customizes the right side of the transient prompt to display Starship's time module. When enabled, this will show the time on the right side of the prompt when in transient mode.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Red module in Starship prompt. It changes the symbol used to represent the Red language.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_99\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Configuring OCaml Module in Starship\nDESCRIPTION: TOML configuration for customizing the OCaml prompt display in Starship shell with a camel emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_78\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[ocaml]\nformat = 'via [üê™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Nim Module in Starship\nDESCRIPTION: Configuration example for the Nim programming language module in Starship prompt, showing style and symbol customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[nim]\nstyle = 'yellow'\nsymbol = 'üé£ '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship using Chocolatey in PowerShell\nDESCRIPTION: This command installs Starship using the Chocolatey package manager on Windows. Chocolatey must be installed first.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Disabling File Extension Detection for Python Module in Starship\nDESCRIPTION: Example configuration for preventing the Python module from being triggered by files with the .py extension.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n de cach√© en Bash\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de cach√© de Starship utilizando la variable de entorno STARSHIP_CACHE.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Using Windows Starship in WSL for Git Status (TOML)\nDESCRIPTION: Configures the git_status module to use a Windows Starship executable for rendering Git status on Windows paths in WSL.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module with File Detection in Starship Prompt (TOML)\nDESCRIPTION: Configures the Kubernetes module to be shown only in directories containing a 'k8s' file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Cache Directory in PowerShell\nDESCRIPTION: Command to change the default Starship cache directory using the STARSHIP_CACHE environment variable in PowerShell for Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Installing Bracketed Segments Preset in Starship\nDESCRIPTION: Command to install the bracketed segments preset configuration to the Starship config file location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/presets/bracketed-segments.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset bracketed-segments -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring V Language Module in Starship (TOML)\nDESCRIPTION: Example configuration for the V language module in Starship prompt, customizing the format and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_109\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[vlang]\nformat = 'via [V $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Custom Pre-prompt in Cmd using Lua\nDESCRIPTION: Shows how to implement a custom pre-prompt function in Cmd shell to display a rocket emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configurando ubicaci√≥n de cach√© en PowerShell\nDESCRIPTION: Establece una ubicaci√≥n personalizada para el archivo de cach√© de Starship en PowerShell utilizando una variable de entorno.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Prompt Order Configuration in TOML\nDESCRIPTION: Example of the previous prompt_order configuration that used an array of module names to define rendering order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Catppuccin Powerline Preset for Starship\nDESCRIPTION: This command installs the Catppuccin Powerline preset for Starship. It saves the configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/catppuccin-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset catppuccin-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Module in Starship\nDESCRIPTION: Example TOML configuration for customizing the Java module symbol in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Cmd using Clink\nDESCRIPTION: Lua script to initialize Starship for Windows Command Prompt using Clink (v1.2.30+). This file should be saved as starship.lua in the Clink scripts directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_12\n\nLANGUAGE: lua\nCODE:\n```\n-- starship.lua\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Module Format in Starship\nDESCRIPTION: A TOML configuration example showing how to customize the format of the Package module, which displays the version of a package in the current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Red programming language version is displayed in the Starship prompt. Changes the default symbol to a red circle.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Installing Gruvbox Rainbow Preset for Starship in Shell\nDESCRIPTION: This command installs the Gruvbox Rainbow preset for Starship prompt, saving the configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/gruvbox-rainbow.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset gruvbox-rainbow -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Applying Home Manager Configuration in Nix\nDESCRIPTION: This command applies the Home Manager configuration changes, including the Starship setup.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Generating Starship Bug Report\nDESCRIPTION: Command to create a GitHub issue for reporting bugs in Starship, streamlining the process of providing necessary information to developers.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Applying System-wide Starship Installation on NixOS\nDESCRIPTION: This command rebuilds the NixOS system configuration, applying changes including the system-wide Starship installation.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Rust Module in Starship Prompt (TOML)\nDESCRIPTION: Customizes the format of the Rust module in Starship prompt to display the Rust version with a gear emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rust]\nformat = 'via [‚öôÔ∏è $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Setting Continuation Prompt in Starship\nDESCRIPTION: Example of customizing the continuation prompt in Starship's TOML configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A continuation prompt that displays two filled-in arrows\ncontinuation_prompt = '‚ñ∂‚ñ∂ '\n```\n\n----------------------------------------\n\nTITLE: Configuring C Module in Starship\nDESCRIPTION: TOML configuration for customizing the C compiler module in Starship prompt, defining a format pattern for displaying compiler name and version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Vagrant module in Starship prompt. Sets a custom format and style for displaying the Vagrant version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_113\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Hostname Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Hostname module in Starship prompt, showing the hostname always and customizing its appearance.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[hostname]\nssh_only = false\nformat = '[$ssh_symbol](bold blue) on [$hostname](bold red) '\ntrim_at = '.companyname.com'\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Adding Pre-prompt Display in Bash\nDESCRIPTION: Bash function to display a rocket emoji before the prompt using Starship's custom pre-command hook system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\nstarship_precmd_user_func=\"blastoff\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship declaratively using home-manager in Nix\nDESCRIPTION: This Nix configuration enables Starship and sets up custom settings using home-manager. It should be added to the home.nix file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Go Module Format in Starship\nDESCRIPTION: Example configuration for customizing the Go module display format in Starship prompt using a custom emoji and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Daml Module in Starship\nDESCRIPTION: Configuration example for the Daml SDK module in Starship prompt, featuring custom formatting with bright green coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[daml]\nformat = 'via [D $version](bold bright-green) '\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL with Repeat Characters\nDESCRIPTION: Advanced SHLVL configuration demonstrating repeat functionality to create multi-character prompts\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_83\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '[$symbol$shlvl]($style)'\nrepeat = true\nsymbol = '‚ùØ'\nrepeat_offset = 1\nthreshold = 0\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Environment Variables in Starship (TOML)\nDESCRIPTION: Demonstrates how to display multiple environment variables (SHELL and USER) in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL on Older Linux Distributions\nDESCRIPTION: Command to install Starship using a MUSL-compiled binary for compatibility with older glibc versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Customizing .NET Module Display in Starship\nDESCRIPTION: Configuration for customizing the .NET SDK version display in shell prompt, with custom symbol and style settings and disabled heuristic detection.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Loading Pastel Powerline Preset Configuration\nDESCRIPTION: Configuration file for the Pastel Powerline preset that defines the prompt layout, symbols, colors, and module settings. Includes custom formatting for various command line elements and path substitutions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/pastel-powerline.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/pastel-powerline.toml\n```\n\n----------------------------------------\n\nTITLE: Applying home-manager configuration for Starship\nDESCRIPTION: Command to apply the home-manager configuration changes for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Installing No Runtime Versions Preset for Starship\nDESCRIPTION: This command installs the 'no-runtime-versions' preset for Starship, saving the configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version\nDESCRIPTION: Configuration for showing Pulumi module without version information in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Applying Plain Text Symbols Preset in Starship (Shell)\nDESCRIPTION: This command applies the plain text symbols preset to the Starship configuration. It saves the preset to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Pre-prompt Commands in Cmd\nDESCRIPTION: Sets up custom pre-prompt commands in Cmd using Lua to display a rocket symbol before the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  print(\"üöÄ\")\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Testing Unicode Glyph Display\nDESCRIPTION: Commands to test if the terminal correctly displays Unicode glyphs, including an emoji and a Powerline symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\necho -e \"\\xf0\\x9f\\x90\\x8d\"\necho -e \"\\xee\\x82\\xa0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship\nDESCRIPTION: Example configuration for the OpenStack module in Starship prompt that customizes the display format showing the current cloud and project information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_77\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship (TOML)\nDESCRIPTION: Example configuration for the VCSH module in Starship prompt. Sets a custom format and symbol for displaying the active VCSH repository.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_115\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Applying Plain Text Symbols Preset in Starship (Shell)\nDESCRIPTION: This command applies the Plain Text Symbols preset to the Starship configuration. It saves the preset to the default Starship configuration file location.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt order in Starship pre-v0.45.0\nDESCRIPTION: Example of how prompt order was configured using 'prompt_order' array before Starship v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Rust Module\nDESCRIPTION: Command to enable debug logs and output information for the Rust module in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Installing Starship in Termux using install script\nDESCRIPTION: curl command to download and execute the Starship installation script, specifying the binary directory for Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Scala Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Scala programming language module display in Starship prompt. Demonstrates changing the module symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[scala]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Displaying Starship Help Information\nDESCRIPTION: Command to show all flags accepted by the starship prompt command for customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Shape in Starship\nDESCRIPTION: This TOML snippet configures the Character module in Starship to use a custom symbol 'V' for vim command mode, styled in bold green.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Package Module in TOML Configuration\nDESCRIPTION: Example configuration for the Package module in Starship, showing how to modify the format and symbol used when displaying package versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[package]\nformat = 'via [üéÅ $version](208 bold) '\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Path in PowerShell\nDESCRIPTION: This PowerShell command sets a custom location for the Starship cache directory using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CACHE = \"$HOME\\AppData\\Local\\Temp\"\n```\n\n----------------------------------------\n\nTITLE: Customizing the Swift Module Format in Starship\nDESCRIPTION: Example configuration for the Swift module in Starship that customizes the format of the Swift version indicator with a racing car emoji and red bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_98\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship Declaratively with Home Manager in Nix\nDESCRIPTION: Configures Starship in a declarative way using home-manager for Nix. This example shows how to enable Starship and define custom settings in home.nix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_5\n\nLANGUAGE: nix\nCODE:\n```\n{\n  programs.starship = {\n    enable = true;\n    # Configuration written to ~/.config/starship.toml\n    settings = {\n      # add_newline = false;\n\n      # character = {\n      #   success_symbol = \"[‚ûú](bold green)\";\n      #   error_symbol = \"[‚ûú](bold red)\";\n      # };\n\n      # package.disabled = true;\n    };\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Bash Shell Final Prompts\nDESCRIPTION: Configures final prompt appearance in Bash using Ble.sh framework, setting both left and right prompt displays.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Customizing Battery Module Symbols in Starship\nDESCRIPTION: Configuration for the battery module that customizes the symbols used to represent different battery states (full, charging, discharging).\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[battery]\nfull_symbol = 'üîã '\ncharging_symbol = '‚ö°Ô∏è '\ndischarging_symbol = 'üíÄ '\n```\n\n----------------------------------------\n\nTITLE: Configuring Singularity Module in Starship\nDESCRIPTION: Configuration example for the Singularity container module showing custom format with emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_106\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Applying No Runtime Versions Preset in Starship (Shell)\nDESCRIPTION: This command applies the 'no-runtime-versions' preset to the Starship configuration, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/no-runtimes.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-runtime-versions -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Musl Support\nDESCRIPTION: Command to install Starship using the musl build instead of glibc, useful for older Linux distributions like CentOS 6 or 7.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Configuring Windows Starship Executable for WSL (TOML)\nDESCRIPTION: This snippet demonstrates how to configure Starship to use a Windows executable for rendering git status when working with Windows paths in WSL (Windows Subsystem for Linux).\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_status]\nwindows_starship = '/mnt/c/Users/username/scoop/apps/starship/current/starship.exe'\n```\n\n----------------------------------------\n\nTITLE: Setting Up Right Prompt in Starship\nDESCRIPTION: TOML configuration example showing how to create a minimal left prompt while moving all other modules to the right prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n# A minimal left prompt\nformat = \"\"\"$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"$all\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Setting Bash Prompt with Starship\nDESCRIPTION: A basic example of how to set up Starship as the prompt in Bash. It captures the status code and number of background jobs before calling the starship prompt command.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Applying No Empty Icons Preset in Starship (Shell)\nDESCRIPTION: This command applies the No Empty Icons preset to the Starship configuration file. It modifies the behavior to display toolset icons only when version information can be determined.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Bracketed Segments Preset in Starship\nDESCRIPTION: Command to install the Bracketed Segments preset for Starship prompt, which saves the configuration to the user's Starship config file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/bracketed-segments.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset bracketed-segments -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Implementing Fish Shell Transient Prompt\nDESCRIPTION: Configures the transient prompt in Fish shell to display the character module. Shows how to customize the left side of the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with MUSL Support\nDESCRIPTION: Command to install Starship using MUSL instead of GLIBC for compatibility with older Linux distributions\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --platform unknown-linux-musl\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship with TOML\nDESCRIPTION: Configuration example for customizing the Open Policy Agent (OPA) module in Starship prompt. Uses a custom helmet emoji and bold red styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_58\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Binary Path in Starship Prompt (TOML)\nDESCRIPTION: Specifies the Kotlin compiler binary path for version detection in the Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_67\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Customizing the Character module for vim mode in Starship\nDESCRIPTION: TOML configuration example showing how to set a custom symbol for vim command mode in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship using Chocolatey in PowerShell\nDESCRIPTION: Command to install Starship using the Chocolatey package manager in PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status Module (v0.45.0+)\nDESCRIPTION: Example of how to configure the Git status module in Starship version 0.45.0 to show sync count, which replaces the show_sync_count property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/migrating-to-0.45.0/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Command Duration Module Configuration\nDESCRIPTION: Example of previous prefix configuration for the command duration module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux using Install Script\nDESCRIPTION: Command to download and run the Starship installation script on Termux, specifying the bin directory in the Termux file system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Running the macOS Package Build and Notarization Script\nDESCRIPTION: Command for executing the build and notarization script with the required parameters: the path to the release binary, the documentation directory, and the target architecture.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./install/macos_packages/build_and_notarize.sh target/release/starship docs x64\n```\n\n----------------------------------------\n\nTITLE: Configuring Gleam Language Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Gleam programming language module display format with a custom symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[gleam]\nformat = 'via [‚≠ê $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Jetpack Preset TOML Configuration\nDESCRIPTION: Complete TOML configuration file for the Jetpack preset, defining the prompt format and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/presets/jetpack.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n<<< @/public/presets/toml/jetpack.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring R Language Module in Starship\nDESCRIPTION: TOML configuration example for customizing the R language module appearance in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_93\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Module for Specific Files (TOML)\nDESCRIPTION: This configuration enables the Kubernetes module only in directories containing a 'k8s' file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kubernetes]\ndisabled = false\ndetect_files = ['k8s']\n```\n\n----------------------------------------\n\nTITLE: Configuring Golang Module in Starship\nDESCRIPTION: Configuration for the Golang module format in Starship shell prompt, showing version with a custom icon.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [üèéüí® $version](bold cyan) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Sudo Module in Starship (TOML)\nDESCRIPTION: This snippet demonstrates the configuration of the sudo module in Starship prompt. It sets a custom style and symbol for when sudo credentials are cached, and enables the module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_88\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[sudo]\nstyle = 'bold green'\nsymbol = 'üë©‚Äçüíª '\ndisabled = false\n```\n\n----------------------------------------\n\nTITLE: Configuring Meson Module in Starship\nDESCRIPTION: Example configuration for customizing the Meson module in Starship prompt, with settings for truncation symbol, custom symbol, and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_61\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[meson]\ndisabled = false\ntruncation_symbol = '--'\nsymbol = ' '\nstyle = 'bold dimmed green'\n```\n\n----------------------------------------\n\nTITLE: Dynamic Directory Title in Bash/Zsh\nDESCRIPTION: Sets the terminal window title to show current directory name.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset for Starship\nDESCRIPTION: Command to install the Pure preset for Starship shell prompt to the user's configuration directory. This writes the preset configuration to the starship.toml file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/vi-VN/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Module in Starship (TOML)\nDESCRIPTION: Example configuration for the Swift module in Starship prompt, customizing the format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[swift]\nformat = 'via [üèé  $version](red bold)'\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack preset for Starship\nDESCRIPTION: Command to install the Jetpack preset for Starship prompt. This downloads the preset configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Cmd with Clink and Starship\nDESCRIPTION: Shows how to set up and customize the transient prompt in Cmd using Clink and Starship. It includes examples for both left and right side prompt customization.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_prompt_func(prompt)\n  return io.popen(\"starship module character\"\n    ..\" --keymap=\"..rl.getvariable('keymap')\n  ):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Module in Starship with TOML\nDESCRIPTION: Example configuration for customizing the Java module in Starship prompt by changing the symbol displayed before the Java version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[java]\nsymbol = 'üåü '\n```\n\n----------------------------------------\n\nTITLE: Setting Bash Prompt with Starship\nDESCRIPTION: Example of how to set up Starship as a prompt in Bash, demonstrating basic integration with status code and job count.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Get the status code from the last command executed\nSTATUS=$?\n\n# Get the number of jobs running.\nNUM_JOBS=$(jobs -p | wc -l)\n\n# Set the prompt to the output of `starship prompt`\nPS1=\"$(starship prompt --status=$STATUS --jobs=$NUM_JOBS)\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Configuration Path in Cmd via Lua\nDESCRIPTION: Lua script for Windows Cmd to set a custom Starship configuration file location using environment variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CONFIG', 'C:\\\\Users\\\\user\\\\example\\\\non\\\\default\\\\path\\\\starship.toml')\n```\n\n----------------------------------------\n\nTITLE: No-Nerd-Font Preset TOML Configuration\nDESCRIPTION: TOML configuration file referenced but not shown in the snippet. This configuration would contain the preset settings that use only emoji and powerline symbols.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/no-nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/no-nerd-font.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset with Starship CLI\nDESCRIPTION: Command for installing the Jetpack preset configuration to the Starship configuration file using the starship CLI tool.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Nerd Font Symbols TOML Configuration\nDESCRIPTION: TOML configuration file content that defines the Nerd Font symbols for various Starship prompt modules. This configuration requires a Nerd Font to be installed and enabled in the terminal.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/nerd-font.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n@/public/presets/toml/nerd-font-symbols.toml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship Manually\nDESCRIPTION: Command to find and remove the Starship binary when it was installed using the installation script.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# ÊâæÂà∞Âπ∂‰∏îÂà†Èô§ Starship ‰∫åËøõÂà∂Êñá‰ª∂\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Replacing prefix/suffix with format in cmd_duration module\nDESCRIPTION: Shows migration from prefix property to format string in the cmd_duration module. The new format allows for variable substitution with $duration and $style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\n# $duration ‚Äì The command duration (e.g. \"15s\")\n# $style    ‚Äì The default style of the module (e.g. \"bold yellow\")\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Configuring Vagrant Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the Vagrant module in a Starship prompt, customizing the format and style.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_99\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vagrant]\nformat = 'via [‚ç± $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Chocolatey\nDESCRIPTION: Command to install Starship using the Chocolatey package manager on Windows.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Rust Module\nDESCRIPTION: This command enables trace logging for the Rust module in Starship for debugging purposes.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Applying System-wide Starship Configuration in NixOS\nDESCRIPTION: Command to rebuild and apply system-wide changes after adding Starship to the NixOS configuration.nix file under environment.systemPackages.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset in Starship\nDESCRIPTION: Command to install the Pastel Powerline preset configuration to the user's Starship configuration file. Requires Starship to be installed and a Nerd Font configured in the terminal.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt in Fish\nDESCRIPTION: Shows how to customize the transient prompt in Fish shell using Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_prompt_func\n  starship module character\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration in Starship\nDESCRIPTION: TOML configuration for customizing how command execution duration is displayed in the shell prompt, setting minimum time threshold and format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Custom Module with PowerShell Command and File Extension Filter\nDESCRIPTION: Shows configuration of a custom module using PowerShell command, with file extension detection and specific shell configuration\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/config/README.md#2025-04-19_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[custom.time]\ncommand = 'time /T'\ndetect_extensions = ['pst']\nshell = ['pwsh.exe', '-NoProfile', '-Command', '-']\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship\nDESCRIPTION: TOML configuration for customizing the NATS context display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Viewing Notarization History and Logs\nDESCRIPTION: Commands to retrieve notarization history and detailed logs for specific notarization attempts, which help troubleshoot any issues in the notarization process.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nxcrun notarytool history --keychain-profile \"AC_PASSWORD\"\nxcrun notarytool info <run-id> --keychain-profile \"AC_PASSWORD\"\nxcrun notarytool log <run-id> --keychain-profile \"AC_PASSWORD\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship with TOML\nDESCRIPTION: Example configuration for the OpenStack module in Starship. This snippet shows how to format the display of OpenStack cloud and project information in the prompt with a cloud emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_80\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Installing prerequisites for Starship on Termux\nDESCRIPTION: Command to install the required 'getconf' package on Termux before installing Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship\nDESCRIPTION: Command to locate and remove the Starship binary from the system\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/faq/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: Example configuration for customizing the Odin programming language module display in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Installing Nerd Font Symbols Preset for Starship\nDESCRIPTION: This command installs the Nerd Font Symbols preset configuration for Starship, saving it to the user's configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset nerd-font-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Installing Pure Preset Configuration\nDESCRIPTION: Command to download and install the Pure preset configuration file for Starship shell prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/presets/pure-preset.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pure-preset -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Using mod_version in Golang Module Configuration\nDESCRIPTION: Example of using the mod_version variable in the Golang module configuration for Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[golang]\nformat = 'via [$symbol($version )($mod_version )]($style)'\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt format in Starship v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt format is configured using the new 'format' string in v0.45.0, replacing the previous 'prompt_order' array.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship via Shell Script\nDESCRIPTION: Downloads and installs the latest version of Starship using a shell script\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Chocolatey on Windows\nDESCRIPTION: Installs the Starship prompt using the Chocolatey package manager for Windows. Requires Chocolatey to be installed first.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Enabling Transience for Cmd and PowerShell\nDESCRIPTION: This commit enables transient prompt functionality for Windows Command Prompt and PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n* Enable transience for Cmd and PowerShell ([#4143](https://github.com/starship/starship/issues/4143)) ([6e9c013](https://github.com/starship/starship/commit/6e9c013e60e59660cb7ae6289af5ed129ca85996))\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship to Hide Runtime Versions\nDESCRIPTION: This TOML configuration for Starship disables the display of version information for various language runtimes and tools. It sets the 'disabled' property to true for multiple modules to hide their version output in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndisabled = true\n\n[php]\ndisabled = true\n\n[rust]\ndisabled = true\n\n[java]\ndisabled = true\n\n[kotlin]\ndisabled = true\n\n[golang]\ndisabled = true\n\n[perl]\ndisabled = true\n\n[package]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux using curl\nDESCRIPTION: Command to download and install Starship on Termux using curl and specifying the binary directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Status module in Starship v0.45.0\nDESCRIPTION: Example of how to configure the Git Status module to show sync count in Starship v0.45.0, replacing the previous 'show_sync_count' property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/migrating-to-0.45.0/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Customizing OS Module in Starship Configuration\nDESCRIPTION: Example configuration for customizing the OS module in Starship prompt, including format, style, and custom symbols for specific operating systems.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ja-JP/config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[os]\nformat = \"on [($name )]($style)\"\nstyle = \"bold blue\"\ndisabled = false\n\n[os.symbols]\nWindows = \" \"\nArch = \"Arch is the best! \"\n```\n\n----------------------------------------\n\nTITLE: Configuring TransientPrompt Left Side in Bash with Ble.sh\nDESCRIPTION: This Bash script uses the Ble.sh framework to customize the transient prompt's left side to display Starship's character module. The prompt_ps1_final option controls what appears when the prompt is in transient mode.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break Module in Starship Prompt (TOML)\nDESCRIPTION: Configures the Starship prompt to display on a single line by disabling the line break module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Applying system-wide Starship installation with NixOS\nDESCRIPTION: Command to rebuild the NixOS system after adding Starship to the system packages in configuration.nix.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux\nDESCRIPTION: Command to install Starship using the Portage package manager on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Installing prerequisites for Starship on Termux\nDESCRIPTION: This command installs the required 'getconf' package on Termux before installing Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Configuring Jetpack Preset for Starship in TOML\nDESCRIPTION: This TOML configuration sets up the Jetpack preset for Starship prompt. It defines the prompt format, various module configurations, and custom symbols for a minimalist and informative command-line experience.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"$directory$git_branch$git_status$character\"\nright_format = \"$cmd_duration$time\"\nadd_newline = false\n\n[character]\nsuccess_symbol = \"[‚ùØ](bold green)\"\nerror_symbol = \"[‚ùØ](bold red)\"\n\n[directory]\nstyle = \"blue\"\ntruncation_length = 3\ntruncate_to_repo = true\n\n[git_branch]\nformat = \"[$symbol$branch]($style) \"\nsymbol = \"\"\nstyle = \"purple\"\n\n[git_status]\nformat = '([$all_status$ahead_behind]($style) )'\nconflicted = \"=\"\nahead = \"‚á°\"\nbehind = \"‚á£\"\ndiverged = \"‚áï\"\nup_to_date = \"\"\nuntracked = \"?\"\nstaged = \"+\"\nmodified = \"!\"\nrenamed = \"¬ª\"\ndeleted = \"‚úò\"\nstyle = \"red\"\n\n[cmd_duration]\nmin_time = 500\nformat = \"[$duration]($style)\"\nstyle = \"yellow\"\n\n[time]\ndisabled = false\nformat = '[$time]($style)'\ntime_format = \"%R\"\nstyle = \"bold white\"\nuse_12hr = false\n```\n\n----------------------------------------\n\nTITLE: Plain Text Symbols Preset Configuration for Starship\nDESCRIPTION: The full TOML configuration for the Plain Text Symbols preset. This configuration replaces Unicode symbols with plain text alternatives for various modules in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/plain-text.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nsymbol = \"AWS \"\n\n[battery]\ncharging_symbol = \"charging \"\ndischarging_symbol = \"battery \"\nfull_symbol = \"full \"\nempty_symbol = \"empty \"\n\n[buf]\nsymbol = \"buf \"\n\n[c]\nsymbol = \"C \"\n\n[character]\nsuccess_symbol = \"[>](bold green)\"\nerror_symbol = \"[x](bold red)\"\nvimcmd_symbol = \"[<](bold green)\"\nvimcmd_replace_one_symbol = \"[<](bold purple)\"\nvimcmd_replace_symbol = \"[<](bold purple)\"\nvimcmd_visual_symbol = \"[<](bold yellow)\"\n\n[cmake]\nsymbol = \"cmake \"\n\n[cobol]\nsymbol = \"cobol \"\n\n[conda]\nsymbol = \"conda \"\n\n[crystal]\nsymbol = \"cr \"\n\n[daml]\nsymbol = \"daml \"\n\n[dart]\nsymbol = \"dart \"\n\n[deno]\nsymbol = \"deno \"\n\n[directory]\nread_only = \" ro\"\n\n[docker_context]\nsymbol = \"docker \"\n\n[dotnet]\nsymbol = \".NET \"\n\n[elixir]\nsymbol = \"elixir \"\n\n[elm]\nsymbol = \"elm \"\n\n[fennel]\nsymbol = \"fennel \"\n\n[fossil_branch]\nsymbol = \"fossil \"\n\n[git_branch]\nsymbol = \"git \"\n\n[golang]\nsymbol = \"go \"\n\n[guix_shell]\nsymbol = \"guix \"\n\n[gradle]\nsymbol = \"gradle \"\n\n[haskell]\nsymbol = \"haskell \"\n\n[haxe]\nsymbol = \"haxe \"\n\n[helm]\nsymbol = \"helm \"\n\n[hg_branch]\nsymbol = \"hg \"\n\n[java]\nsymbol = \"java \"\n\n[julia]\nsymbol = \"julia \"\n\n[kotlin]\nsymbol = \"kt \"\n\n[kubernetes]\nsymbol = \"k8s \"\n\n[lua]\nsymbol = \"lua \"\n\n[memory_usage]\nsymbol = \"memory \"\n\n[meson]\nsymbol = \"meson \"\n\n[nim]\nsymbol = \"nim \"\n\n[nix_shell]\nsymbol = \"nix \"\n\n[nodejs]\nsymbol = \"nodejs \"\n\n[ocaml]\nsymbol = \"ml \"\n\n[opa]\nsymbol = \"opa \"\n\n[os.symbols]\nAlpine = \"alpine \"\nAmazon = \"amazon \"\nAndroid = \"android \"\nArch = \"arch \"\nCentOS = \"centos \"\nDarwin = \"darwin \"\nDragonfly = \"dragonfly \"\nEndeavourOS = \"endeavouros \"\nFedora = \"fedora \"\nFreeBSD = \"freebsd \"\nGaruda = \"garuda \"\nGentoo = \"gentoo \"\nHaikuOS = \"haiku \"\nIllumos = \"illumos \"\nLinux = \"linux \"\nMacOS = \"macos \"\nManjaro = \"manjaro \"\nMariner = \"mariner \"\nMidnightBSD = \"midnightbsd \"\nMint = \"mint \"\nNetBSD = \"netbsd \"\nNixOS = \"nixos \"\nOpenBSD = \"openbsd \"\nopenSUSE = \"opensuse \"\nPop = \"pop \"\nPostmarketOS = \"postmarketos \"\nRaspbian = \"raspbian \"\nRedhat = \"redhat \"\nRocky = \"rocky \"\nRedox = \"redox \"\nSolus = \"solus \"\nSUSE = \"SUSE \"\nUbuntu = \"ubuntu \"\nUnknown = \"unknown \"\nWindows = \"windows \"\n\n[package]\nsymbol = \"package \"\n\n[perl]\nsymbol = \"pl \"\n\n[php]\nsymbol = \"php \"\n\n[pijul_channel]\nsymbol = \"pijul \"\n\n[pulumi]\nsymbol = \"pulumi \"\n\n[purescript]\nsymbol = \"purs \"\n\n[python]\nsymbol = \"py \"\n\n[raku]\nsymbol = \"raku \"\n\n[red]\nsymbol = \"red \"\n\n[rlang]\nsymbol = \"R \"\n\n[ruby]\nsymbol = \"rb \"\n\n[rust]\nsymbol = \"rust \"\n\n[scala]\nsymbol = \"scala \"\n\n[spack]\nsymbol = \"spack \"\n\n[status]\nformat = '[$symbol$status]($style) '\nsymbol = \"status: \"\nsuccess_symbol = \"OK\"\n\n[sudo]\nsymbol = \"sudo \"\n\n[swift]\nsymbol = \"swift \"\n\n[terraform]\nsymbol = \"terraform \"\n\n[zig]\nsymbol = \"zig \"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship Prompt (TOML)\nDESCRIPTION: Configuration example for the OpenStack module in Starship prompt, which displays the current OpenStack cloud and project information with customized format, style, and symbol.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_81\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Disabling Python Module File Extension Detection (TOML)\nDESCRIPTION: Configuration to prevent the Python module from triggering based on .py file extensions in Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_96\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Starship\nDESCRIPTION: Basic configuration for displaying environment variables in the prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_29\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\n----------------------------------------\n\nTITLE: Customizing Solidity Module Display\nDESCRIPTION: Configuration for the Solidity module that displays the current Solidity version. This example changes the format string with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_102\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[solidity]\nformat = \"via [S $version](blue bold)\"\n```\n\n----------------------------------------\n\nTITLE: Applying home-manager configuration for Starship on Nix\nDESCRIPTION: This command applies the home-manager configuration changes, including the Starship setup, on a Nix system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Configuring Mojo Module in Starship TOML\nDESCRIPTION: Configuration for the Mojo programming language module in Starship prompt, customizing the display format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n[mojo]\nformat = 'via [mojo ($version )($hash )]($style)'\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Command Duration Module Configuration in TOML\nDESCRIPTION: Updated configuration using format string for command duration module, allowing for variable substitution and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux using Portage\nDESCRIPTION: This command uses the Portage package manager to install Starship from the core-kit on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Configuring C Compiler Module in Starship with TOML\nDESCRIPTION: Example of customizing the C compiler module format in Starship prompt configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[c]\nformat = 'via [$name $version]($style)'\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in Shell\nDESCRIPTION: This command sets a custom location for the Starship configuration file using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CONFIG=~/example/non/default/path/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Starting Starship Documentation Website in Development Mode\nDESCRIPTION: This code snippet demonstrates how to start the Starship documentation website in development mode using npm. This allows contributors to view their changes locally before submitting a pull request.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Denying Unknown Keys in Starship Schema\nDESCRIPTION: Modifies the Starship configuration schema to reject unknown keys. This change helps prevent configuration errors by disallowing unrecognized options.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\n**schema:** deny unknown keys ([#4270](https://github.com/starship/starship/issues/4270)) ([b5d3d8f](https://github.com/starship/starship/commit/b5d3d8fcf331cdff6d0e687dcdbac77351731475))\n```\n\n----------------------------------------\n\nTITLE: Installing Starship with Chocolatey in PowerShell\nDESCRIPTION: This command installs Starship using the Chocolatey package manager on Windows. Chocolatey must be installed as a prerequisite.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nchoco install starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship Initialization in PowerShell\nDESCRIPTION: Sets up Starship initialization in PowerShell, including setting the window title and invoking Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Signing a Distribution Package for macOS\nDESCRIPTION: Command to sign a distribution package with an Installer certificate, adding a timestamp for long-term validity of the signature.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nproductsign --timestamp --sign \"<Key ID>\" <input.pkg> <output.pkg>\n```\n\n----------------------------------------\n\nTITLE: Migrating from prompt_order to format in Starship (pre-v0.45.0)\nDESCRIPTION: Example of the previous prompt_order configuration approach used in Starship before v0.45.0, which defined modules as an array in the order they should be rendered.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Azure Username Display Configuration\nDESCRIPTION: Configuration for displaying Azure username in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Cache Path in Lua\nDESCRIPTION: This Lua script sets a custom location for the Starship cache directory using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_7\n\nLANGUAGE: lua\nCODE:\n```\nos.setenv('STARSHIP_CACHE', 'C:\\\\Users\\\\user\\\\AppData\\\\Local\\\\Temp')\n```\n\n----------------------------------------\n\nTITLE: Markdown Project Documentation\nDESCRIPTION: Markdown content containing project documentation including sponsorship information, code signing policy, and license details.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/guide/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## ‚ù§Ô∏è Sponsors\n\nSupport this project by [becoming a sponsor](https://github.com/sponsors/starship). Your name or logo will show up here with a link to your website.\n\n## üîí Code Signing Policy\n\nFree code signing provided by [SignPath.io](https://signpath.io), certificate by [SignPath Foundation](https://signpath.org).\n\nCode Signing Roles:\n\n- Reviewers: [Astronauts](https://github.com/orgs/starship/teams/astronauts)\n- Approvers and Authors: [Mission Control](https://github.com/orgs/starship/teams/mission-control)\n\nThis program will not transfer any information to other networked systems unless specifically requested by the user or the person installing or operating it.\n\n<p align=\"center\">\n    <br>\n    <img width=\"100\" src=\"https://raw.githubusercontent.com/starship/starship/master/media/icon.png\" alt=\"Starship rocket icon\">\n</p>\n\n## üìù License\n\nCopyright ¬© 2019-present, [Starship Contributors](https://github.com/starship/starship/graphs/contributors).<br /> This project is [ISC](https://github.com/starship/starship/blob/master/LICENSE) licensed.\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Commit Module in Starship\nDESCRIPTION: Example configuration for the git_commit module in Starship prompt. Customizes the commit hash length and tag symbol display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_44\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[git_commit]\ncommit_hash_length = 4\ntag_symbol = 'üîñ '\n```\n\n----------------------------------------\n\nTITLE: Disabling Python Module File Extension Detection\nDESCRIPTION: Example configuration for the Python module in Starship prompt that disables detection based on .py file extensions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_91\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[python]\n# Don't trigger for files with the py extension\ndetect_extensions = []\n```\n\n----------------------------------------\n\nTITLE: Configuring Odin Module in Starship\nDESCRIPTION: TOML configuration for customizing the Odin module display in Starship prompt with a custom icon and commit information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_69\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[odin]\nformat = 'via [Û∞π© ($version )]($style)'\nshow_commit = true\n```\n\n----------------------------------------\n\nTITLE: Displaying Current Directory in Terminal Tab Title\nDESCRIPTION: This Bash/Zsh script changes the terminal window title to show the current directory name. It integrates with Starship by setting the function as the precmd user function.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \"$PWD\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Prompt Order Configuration in TOML\nDESCRIPTION: Example showing the legacy prompt_order array configuration used before v0.45.0 to specify module rendering order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Disabling Guix-shell Module in Starship Configuration\nDESCRIPTION: Example configuration for customizing the Guix-shell module in Starship prompt. Disables the module and sets a custom format with an ox emoji and yellow bold styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_57\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[guix_shell]\ndisabled = true\nformat = 'via [üêÇ](yellow bold) '\n```\n\n----------------------------------------\n\nTITLE: Git Status Configuration Changes in TOML\nDESCRIPTION: Illustrates the transition from show_sync_count to separate ahead/behind/diverged properties for git status.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Log Location in Bash/Sh\nDESCRIPTION: Shell command to customize the Starship log file location using the STARSHIP_CACHE environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Executing External Commands in Starship Modules\nDESCRIPTION: Example of how to execute external commands in Starship modules using the context.exec_cmd function, which allows for mocking command output during testing.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse super::{Context, Module, ModuleConfig};\n\nuse crate::configs::php::PhpConfig;\nuse crate::formatter::StringFormatter;\n\n\npub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n   // Here `output` will be either the stdout of the called command or the function\n   // will exit if the called program was not installed or could not be run.\n   let output = context.exec_cmd(\"my_command\", &[\"first_arg\", \"second_arg\"])?.stdout;\n\n   // Then you can happily use the output\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux\nDESCRIPTION: This command uses the Portage package manager to install Starship from the core-kit on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Custom Module with Argument-Based Command Execution\nDESCRIPTION: Example of a custom module demonstrating alternative command execution method by explicitly disabling stdin usage\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/config/README.md#2025-04-19_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n[custom.time-as-arg]\ncommand = 'time /T'\ndetect_extensions = ['pst']\nshell = ['pwsh.exe', '-NoProfile', '-Command']\nuse_stdin = false\n```\n\n----------------------------------------\n\nTITLE: Applying Home Manager Configuration\nDESCRIPTION: Command to apply the Starship configuration changes in home-manager.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Files for Absolute Paths in Starship\nDESCRIPTION: Example of setting up test files in a temporary directory when testing modules that use absolute paths, ensuring tests remain portable and isolated.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\n#[test]\nfn test_testfile() {\n    let renderer = ModuleRenderer::new(\"mymodule\");\n\n    let root_path = renderer.root_path();\n\n    // This creates `$TEMPDIR/run/test/testfile`\n\n    let mut absolute_test_file = PathBuf::from(root_path);\n\n    absolute_test_file.push(\"run\");\n    absolute_test_file.push(\"test\");\n    std::fs::DirBuilder::new()\n        .recursive(true)\n        .create(&absolute_test_file)?;\n\n    absolute_test_file.push(\"testfile\");\n    std::fs::File::create(&absolute_test_file)?;\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Directory-based Window Title\nDESCRIPTION: Example implementation showing how to display current directory name in the window title.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; $(basename \\\"$PWD\\\") \\007\"\n}\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Container Module Configuration in TOML\nDESCRIPTION: Configuration example for the container module showing format customization\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[container]\nformat = '[$symbol \\[$name\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Disabling Line Break in Starship Prompt (TOML)\nDESCRIPTION: Disables the line break module in Starship, making the prompt a single line.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_63\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[line_break]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Installing Plain Text Symbols Preset with Starship CLI\nDESCRIPTION: This command installs the Plain Text Symbols preset for Starship prompt to the user's configuration file. It will replace any existing configuration in the specified path.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/presets/plain-text.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset plain-text-symbols -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Starship Config Path in PowerShell\nDESCRIPTION: Sets a custom location for the Starship configuration file in PowerShell using an environment variable.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$ENV:STARSHIP_CONFIG = \"$HOME\\example\\non\\default\\path\\starship.toml\"\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStack Module in Starship Prompt (TOML)\nDESCRIPTION: Configuration example for the OpenStack module in Starship prompt. Shows how to customize the format, style, and symbol used for displaying OpenStack cloud information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_71\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[openstack]\nformat = 'on [$symbol$cloud(\\($project\\))]($style) '\nstyle = 'bold yellow'\nsymbol = '‚òÅÔ∏è '\n```\n\n----------------------------------------\n\nTITLE: Configuring Transient Right Prompt in Cmd\nDESCRIPTION: Sets up a custom right-side transient prompt in Cmd using Lua to display the command execution time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Creando archivo de configuraci√≥n de Starship en Bash\nDESCRIPTION: Crea el directorio de configuraci√≥n y el archivo starship.toml para iniciar la configuraci√≥n de Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdir -p ~/.config && touch ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Command Duration Module Configuration\nDESCRIPTION: Example of the previous prefix configuration for the command duration module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship imperatively using Nix\nDESCRIPTION: This command installs Starship using the Nix package manager in an imperative way.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnix-env -iA nixos.starship\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module with Custom Vim Shape\nDESCRIPTION: TOML configuration for customizing the command prompt character when in Vim mode\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nvimcmd_symbol = '[V](bold green) '\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Starship Documentation Website\nDESCRIPTION: This snippet shows how to install the necessary dependencies for running the Starship documentation website locally. It uses npm to install the required packages in the /docs directory.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship\nDESCRIPTION: This command locates and removes the Starship binary from the system.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsh -c 'rm \"$(command -v 'starship')\"'\n```\n\n----------------------------------------\n\nTITLE: Enabling Left and Right Transience in Fish Shell\nDESCRIPTION: Implements left and right transience support for the Fish shell integration. This feature likely affects how the prompt is displayed and updated in Fish.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\n**fish:** Enable left and right transience ([#4204](https://github.com/starship/starship/issues/4204)) ([06281c2](https://github.com/starship/starship/commit/06281c268d74a85d5b28e953bea251a2115f5568))\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Cache Directory in Bash/Sh\nDESCRIPTION: Command to change the default Starship cache directory using the STARSHIP_CACHE environment variable in Bash/Sh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nexport STARSHIP_CACHE=~/.starship/cache\n```\n\n----------------------------------------\n\nTITLE: Adding Window Title Function to Zsh Precmd Functions\nDESCRIPTION: This Zsh-specific code adds the window title change function to the precmd_functions array, ensuring it runs before each prompt is displayed in Zsh shells.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nprecmd_functions+=(set_win_title)\n```\n\n----------------------------------------\n\nTITLE: Implementing Pre-execution Commands in Bash using DEBUG Trap\nDESCRIPTION: This Bash script uses the DEBUG trap mechanism to run a custom function before each command execution. It must be set up before initializing Starship to ensure proper functionality.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nfunction blastoff(){\n    echo \"üöÄ\"\n}\ntrap blastoff DEBUG     # Trap DEBUG *before* running starship\nset -o functrace\neval $(starship init bash)\nset +o functrace\n```\n\n----------------------------------------\n\nTITLE: Supporting Pipestatus Separator Formatting\nDESCRIPTION: Adds support for formatting the separator in pipestatus output. This allows users to customize how multiple exit statuses are displayed in the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: rust\nCODE:\n```\n**status:** Support formatting of pipestatus separator ([#4264](https://github.com/starship/starship/issues/4264)) ([6e35dfa](https://github.com/starship/starship/commit/6e35dfa85aeebb3f714389a9286623dc0f60d799))\n```\n\n----------------------------------------\n\nTITLE: Installing Prerequisites for Starship on Termux\nDESCRIPTION: Installs the required dependency 'getconf' for Starship on the Termux Android terminal emulator.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Configuring R Module in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the R module in Starship prompt. It sets a custom format for displaying the R version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[rlang]\nformat = 'with [üìê $version](blue bold) '\n```\n\n----------------------------------------\n\nTITLE: Adding Meson DevEnv Indicator Module\nDESCRIPTION: Adds a new module to Starship that provides an indicator for Meson development environments. This allows users to see when they are working within a Meson project.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\n**module:** Add a meson devenv indicator ([#4389](https://github.com/starship/starship/issues/4389)) ([355800f](https://github.com/starship/starship/commit/355800f8147b1755a5289dc679e2147abd662daf))\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module in Starship\nDESCRIPTION: Basic configuration for the Deno module in Starship prompt, setting a custom format with emoji and version display in green bold text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Setting Precmd Function for Bash\nDESCRIPTION: Sets the window title function as a precmd function for Starship in bash.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Character module configuration changes in v0.45.0\nDESCRIPTION: Shows the migration from the old character module properties to the new symbol-based configuration that unifies error handling and styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nerror_symbol = \"[‚úñ](bold red)\"\n```\n\n----------------------------------------\n\nTITLE: Pre-v0.45.0 Prompt Order Configuration in TOML\nDESCRIPTION: Example of the previous prompt_order configuration using an array of module names to define render order.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Bash Final Prompts\nDESCRIPTION: Sets up custom final prompts in Bash using Ble.sh framework options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_ps1_final='$(starship module character)'\n```\n\nLANGUAGE: bash\nCODE:\n```\nbleopt prompt_rps1_final='$(starship module time)'\n```\n\n----------------------------------------\n\nTITLE: Debugging Starship Rust Module\nDESCRIPTION: Command to enable trace logging and debug output for the Rust module in Starship, useful for troubleshooting issues.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nenv STARSHIP_LOG=trace starship module rust\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Elvish\nDESCRIPTION: Configuration lines to add to Elvish rc file to initialize Starship. Requires Elvish v0.18 or higher.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.elvish/rc.elv\n\neval (starship init elvish)\n```\n\n----------------------------------------\n\nTITLE: Storing Notarization Credentials in Keychain\nDESCRIPTION: Command to securely store Apple notarization credentials in the keychain, including Apple ID, team ID, and app-specific password for later use in notarization scripts.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nxcrun notarytool store-credentials \"<AUTH_ITEM_NAME>\" --apple-id \"<apple-id>\" --password \"<password>\" --team-id \"<team-id>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Fill Module in Starship Prompt (TOML)\nDESCRIPTION: This snippet demonstrates how to configure the Fill module in Starship prompt. It sets the fill symbol to a dash and styles it in bold green.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\nformat = 'AA $fill BB $fill CC'\n\n[fill]\nsymbol = '-'\nstyle = 'bold green'\n```\n\n----------------------------------------\n\nTITLE: Migrating Module Prefix/Suffix to Format in TOML\nDESCRIPTION: Demonstrates the change from prefix/suffix properties to format strings for module customization in cmd_duration module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Module Format Configuration\nDESCRIPTION: New method of configuring module output using format string with variables.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Character Module Configuration Changes\nDESCRIPTION: Diff showing the changes in character module configuration between versions.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/migrating-to-0.45.0/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = \"[‚ùØ](bold green)\"\nerror_symbol = \"[‚ùØ](bold red)\"\nvicmd_symbol = \"[‚ùÆ](bold green)\"\n```\n\n----------------------------------------\n\nTITLE: Applying system-wide Starship installation on NixOS\nDESCRIPTION: This command rebuilds the NixOS system configuration, including the system-wide Starship installation.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Installing Pastel Powerline Preset for Starship in Shell\nDESCRIPTION: This command installs the Pastel Powerline preset configuration for Starship. It saves the preset to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/pastel-powerline.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset pastel-powerline -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version in Starship\nDESCRIPTION: TOML configuration example for Pulumi module without version display, using custom symbol and formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_92\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: Adding Precmd Function for Zsh\nDESCRIPTION: Adds the window title function to the precmd_functions array in zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nprecmd_functions+=(set_win_title)\n```\n\n----------------------------------------\n\nTITLE: Migrating to format in Starship v0.45.0\nDESCRIPTION: Example of the new format configuration approach introduced in Starship v0.45.0, which uses a string with module variables to define the prompt layout.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/migrating-to-0.45.0/README.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\nformat = \"\"\"\\\n  $username\\\n  $hostname\\\n  $directory\\\n  $git_branch\\\n  $git_commit\\\n  $git_state\\\n  $git_status\\\n  $cmd_duration\\\n  $custom\\\n  $line_break\\\n  $jobs\\\n  $battery\\\n  $time\\\n  $character\\\n  \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Duration Module (Pre-v0.45.0)\nDESCRIPTION: Example of how to configure the command duration module in Starship versions prior to 0.45.0 using the prefix property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Feature: Command Duration Notification\nDESCRIPTION: Makes the notify feature optional for command duration module to improve compatibility with nix darwin\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_17\n\nLANGUAGE: rust\nCODE:\n```\nmake notify feature optional (compat with nix darwin)\n```\n\n----------------------------------------\n\nTITLE: Using Absolute Filenames in Starship Modules\nDESCRIPTION: Example of how to work with absolute filenames in Starship modules using context_path() function, which handles path abstraction for testing environments.\nSOURCE: https://github.com/starship/starship/blob/master/CONTRIBUTING.md#2025-04-19_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nuse crate::utils::context_path;\n\npub fn module<'a>(context: &'a Context) -> Option<Module<'a>> {\n    if !context_path(context, \"/run/test/testfile\").exists() {\n        return None\n    }\n    // ..\n}\n```\n\n----------------------------------------\n\nTITLE: Building a Component Package for macOS\nDESCRIPTION: Command to create a component package (.pkg) file from a prepared directory structure, specifying the package identifier and version number.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npkgbuild --identifier com.starshipprompt.starship --version \"<version>\" --root <pkgdir> output.pkg\n```\n\n----------------------------------------\n\nTITLE: Setting Precmd Function in Bash\nDESCRIPTION: Sets the window title function as the precmd function for Starship in bash.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/advanced-config/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nstarship_precmd_user_func=\"set_win_title\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Character Module without Custom Error Shape\nDESCRIPTION: TOML configuration for the character module using the same shape (‚ûú) but different colors to indicate success and error states.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n[character]\nsuccess_symbol = '[‚ûú](bold green) '\nerror_symbol = '[‚ûú](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Username Display\nDESCRIPTION: TOML configuration for showing Azure username instead of subscription in the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure]\ndisabled = false\nformat = \"on [$symbol($username)]($style) \"\nsymbol = \"Û∞†Ö \"\nstyle = \"blue bold\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt for Starship Project\nDESCRIPTION: This robots.txt configuration allows all web crawlers unrestricted access to the entire Starship project website. It specifies a wildcard user-agent and does not disallow any paths.\nSOURCE: https://github.com/starship/starship/blob/master/docs/public/robots.txt#2025-04-19_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Customizing NATS Module Display in Starship\nDESCRIPTION: Example configuration for the NATS module in Starship prompt, adjusting the format to show only the symbol with custom styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_64\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Configuring prompt order in Starship pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how prompt order was configured using 'prompt_order' array in versions prior to v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ru-RU/migrating-to-0.45.0/README.md#2025-04-19_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\nprompt_order = [\n  \"username\",\n  \"hostname\",\n  \"directory\",\n  \"git_branch\",\n  \"git_commit\",\n  \"git_state\",\n  \"git_status\",\n  \"cmd_duration\",\n  \"custom\",\n  \"line_break\",\n  \"jobs\",\n  \"battery\",\n  \"time\",\n  \"character\",\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux\nDESCRIPTION: Command to install Starship using the emerge package manager on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Finding Available Signing Keys on macOS\nDESCRIPTION: Command to list all available code signing identities in the keychain, which helps identify the keys needed for application and installer signing.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsecurity find-identity -p basic -v\n```\n\n----------------------------------------\n\nTITLE: Installing No Nerd Font Preset in Starship\nDESCRIPTION: Command to install the no-nerd-font preset configuration for Starship prompt into the user's configuration directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation\nDESCRIPTION: Markdown formatted changelog entries documenting version releases, bug fixes, features and performance improvements for the Starship project\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **direnv:** replace nonexistent \"orange\" color with \"bright-yellow\" ([#5969](https://github.com/starship/starship/issues/5969)) ([478d5cc])\n* **dotnet:** Remove duplicate v in dotnet version  ([#6060](https://github.com/starship/starship/issues/6060)) ([52a89a5])\n* improve non-msvc windows support by bumping stable dependencies ([#5989](https://github.com/starship/starship/issues/5989)) ([50a6b84])\n* **k8s:** don't trigger if scan config is set but env vars are not ([#5979](https://github.com/starship/starship/issues/5979)) ([8c75822])\n* **preset:** fix typo in Open Policy Agent module format string ([#6118](https://github.com/starship/starship/issues/6118)) ([eba9748])\n\n### Performance Improvements\n\n* **k8s:** Improve performance of kubeconfig module ([#6032](https://github.com/starship/starship/issues/6032)) ([fae92b2])\n```\n\n----------------------------------------\n\nTITLE: Installing Jetpack Preset using Starship CLI\nDESCRIPTION: Command to install the Jetpack preset configuration to the local Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/presets/jetpack.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset jetpack -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulumi Module without Version in Starship\nDESCRIPTION: Example configuration for the Pulumi module in Starship prompt, excluding the Pulumi version from the format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_66\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n[pulumi]\nsymbol = 'üõ• '\nformat = '[$symbol$stack]($style) '\n```\n\n----------------------------------------\n\nTITLE: v0.45.0 Command Duration Module Configuration\nDESCRIPTION: Updated format configuration for command duration module using variable substitution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nformat = \"took [$duration]($style) \"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Starship\nDESCRIPTION: Command to locate and delete the Starship binary as part of the uninstallation process.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n# Locate and delete the starship binary\nsh -c 'rm \"$(command -v \\'starship\\')\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Terraform Module without Version in Starship\nDESCRIPTION: Configuration example for the Terraform module in Starship prompt that excludes the Terraform version. This shows only the workspace information with a custom emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_109\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[terraform]\nformat = '[üèéüí® $workspace]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Deno Module Display in Starship\nDESCRIPTION: TOML configuration for customizing how the Deno version is displayed in the Starship prompt. Sets the format to show the Deno dinosaur emoji followed by the version number in green bold text.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/config/README.md#2025-04-19_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[deno]\nformat = 'via [ü¶ï $version](green bold) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Gruvbox Rainbow Preset for Starship (TOML)\nDESCRIPTION: This TOML configuration defines the Gruvbox Rainbow preset for Starship, including color schemes, formatting, and module settings for various elements of the prompt.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/gruvbox-rainbow.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Get editor completions based on the config schema\n\"$schema\" = 'https://starship.rs/config-schema.json'\n\n# Inserts a blank line between shell prompts\nadd_newline = true\n\n# A minimal left prompt\nformat = \"\"\"\n$directory\\\n$git_branch\\\n$git_state\\\n$git_status\\\n$cmd_duration\\\n$line_break\\\n$character\"\"\"\n\n# move the rest of the prompt to the right\nright_format = \"\"\"\n$time\\\n$status\\\n$os\\\n$container\\\n$shell\\\n\"\"\"\n\n# Replace the '‚ùØ' symbol in the prompt with '‚ûú'\n[character] # The name of the module we are configuring is 'character'\nsuccess_symbol = '[‚ûú](bold green)' # The 'success_symbol' segment is being set to '‚ûú' with the color 'bold green'\n\n[time]\ndisabled = false\ntime_format = '%r'\nformat = '[$time ](bold #a89984)'\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold #a89984)'  \n\n[directory]\ntruncation_length = 3\nformat = '[$path](bold #458588)[$read_only](bold #d3869b) '\n\n[git_branch]\nformat = '[$branch](bold #d79921)'\n\n[git_status]\nformat = '[$all_status$ahead_behind](bold #b16286)'\n\n[git_state]\nformat = '\\([$state( $progress_current/$progress_total)]($style)\\) '\nstyle = 'bold #fe8019'\n\n[status]\ndisabled = false\nformat = '[$symbol $status]($style)'\nmap_symbol = true\n\n[os]\ndisabled = false\n\n[os.symbols]\nAlpine = \" \"\nArch = \" \"\nCentOS = \" \"\nDebian = \" \"\nFedora = \" \"\nLinux = \" \"\nmacOS = \" \"\nNixOS = \" \"\nRaspbian = \" \"\nUbuntu = \" \"\nWindows = \" \"\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Open Policy Agent Module in Starship with TOML\nDESCRIPTION: Example configuration for the Open Policy Agent (OPA) module in Starship. This snippet demonstrates how to customize the format with a helmet emoji and change the text style to bold red.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_79\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[opa]\nformat = 'via [‚õëÔ∏è  $version](bold red) '\n```\n\n----------------------------------------\n\nTITLE: Customizing Singularity Module Display\nDESCRIPTION: Configuration for the Singularity module that shows the current Singularity container image. This example adds an emoji to the display format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_101\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[singularity]\nformat = '[üì¶ \\[$env\\]]($style) '\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux\nDESCRIPTION: This command downloads and executes the Starship installation script, specifying the binary directory for Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: No Runtime Versions Preset Configuration (TOML)\nDESCRIPTION: This TOML configuration for Starship disables the display of various runtime versions in the prompt. It sets the 'disabled' flag to true for multiple language and tool modules.\nSOURCE: https://github.com/starship/starship/blob/master/docs/it-IT/presets/no-runtimes.md#2025-04-19_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n[nodejs]\ndisabled = true\n\n[php]\ndisabled = true\n\n[ruby]\ndisabled = true\n\n[java]\ndisabled = true\n\n[kotlin]\ndisabled = true\n\n[golang]\ndisabled = true\n\n[perl]\ndisabled = true\n\n[package]\ndisabled = true\n\n[openstack]\ndisabled = true\n\n[dotnet]\ndisabled = true\n\n[haskell]\ndisabled = true\n```\n\n----------------------------------------\n\nTITLE: Git Status module configuration for sync count\nDESCRIPTION: Shows how to configure the git_status module to display the number of commits ahead or behind the remote branch, replacing the show_sync_count property.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/migrating-to-0.45.0/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[git_status]\nahead = \"‚á°${count}\"\ndiverged = \"‚áï‚á°${ahead_count}‚á£${behind_count}\"\nbehind = \"‚á£${count}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring SHLVL Module in Starship Prompt (TOML)\nDESCRIPTION: Example configuration for the SHLVL module that displays the current shell level with a custom format.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_90\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[shlvl]\ndisabled = false\nformat = '$shlvl level(s) down'\nthreshold = 3\n```\n\n----------------------------------------\n\nTITLE: Window Title Change Function for Bash and Zsh\nDESCRIPTION: This function uses ANSI escape sequences to change the terminal window title. It can be reused in both Bash and Zsh shells and should be customized with relevant variables like $USER, $HOSTNAME, or $PWD.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/advanced-config/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; YOUR_WINDOW_TITLE_HERE \\007\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring User-Defined Color Palette in Starship\nDESCRIPTION: Adds support for user-defined color palettes in Starship configuration. This allows users to define custom colors that can be referenced throughout the configuration.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\nadd user-defined color palette ([#4209](https://github.com/starship/starship/issues/4209)) ([d93074d](https://github.com/starship/starship/commit/d93074d0569db4bafb1788aa3f39136b734b5370))\n```\n\n----------------------------------------\n\nTITLE: Implementing File Extension Exclusion for Module Triggering\nDESCRIPTION: This feature allows certain file extensions to prevent a module from triggering, providing more control over module behavior.\nSOURCE: https://github.com/starship/starship/blob/master/CHANGELOG.md#2025-04-19_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n* Add the ability to have some file extensions *prevent* a module from triggering ([#4043](https://github.com/starship/starship/issues/4043)) ([dd73447](https://github.com/starship/starship/commit/dd73447329e637ee207b1103ecb6a4bdbdc89324))\n```\n\n----------------------------------------\n\nTITLE: AWS Profile Display Configuration\nDESCRIPTION: Configuration for displaying AWS profile with custom aliases in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-CN/config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[aws]\nformat = 'on [$symbol$profile]($style) '\nstyle = 'bold blue'\nsymbol = 'üÖ∞ '\n[aws.profile_aliases]\nEnterprise_Naming_Scheme-voidstars = 'void**'\n```\n\n----------------------------------------\n\nTITLE: Configuring Kotlin Symbol in Starship Prompt\nDESCRIPTION: Sets a custom symbol for the Kotlin programming language in the Starship prompt. This configuration replaces the default Kotlin symbol with a 'K' emoji.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\nsymbol = 'üÖ∫ '\n```\n\n----------------------------------------\n\nTITLE: Customizing Dotnet Module in Starship Prompt\nDESCRIPTION: Configuration example for the dotnet module in Starship prompt, changing the symbol, style, and disabling heuristic version detection for more accurate but slower version reporting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[dotnet]\nsymbol = 'ü•Ö '\nstyle = 'green'\nheuristic = false\n```\n\n----------------------------------------\n\nTITLE: Codesigning a Binary for macOS\nDESCRIPTION: Command to sign a binary with a developer certificate, adding a timestamp and enabling the runtime hardening options required for notarization.\nSOURCE: https://github.com/starship/starship/blob/master/install/macos_packages/readme.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncodesign --timestamp --sign \"<Key ID>\" --verbose -f -o runtime <binary>\n```\n\n----------------------------------------\n\nTITLE: Customizing Spack Module Format in Starship Prompt\nDESCRIPTION: Configuration example for the Spack module which shows the current Spack environment. This example changes the format and styling to dimmed blue.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_99\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[spack]\nformat = '[$symbol$environment](dimmed blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring cmd_duration module pre-v0.45.0 (TOML)\nDESCRIPTION: Example of how the cmd_duration module was configured using 'prefix' in versions prior to v0.45.0.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/migrating-to-0.45.0/README.md#2025-04-19_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[cmd_duration]\nprefix = \"took \"\n```\n\n----------------------------------------\n\nTITLE: Implementing TransientPrompt in PowerShell with Starship\nDESCRIPTION: Demonstrates how to enable and customize the transient prompt feature in PowerShell using Starship. It shows how to replace the previous prompt with a custom string, specifically using Starship's character module.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-TransientFunction {\n  &starship module character\n}\n\nInvoke-Expression (&starship init powershell)\n\nEnable-TransientPrompt\n```\n\n----------------------------------------\n\nTITLE: Configuring Perl Module in Starship\nDESCRIPTION: Example configuration for the Perl module in Starship prompt. It customizes the format and symbol used for displaying Perl version information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/config/README.md#2025-04-19_snippet_37\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[perl]\nformat = 'via [ü¶™ $version]($style) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Crystal Module in Starship\nDESCRIPTION: TOML configuration for customizing the Crystal programming language prompt in Starship shell, setting a custom format with blue coloring.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[crystal]\nformat = 'via [‚ú® $version](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring VCSH Module in Starship\nDESCRIPTION: Example configuration for the VCSH module in Starship prompt, which displays the active VCSH repository.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/config/README.md#2025-04-19_snippet_110\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[vcsh]\nformat = '[üÜÖ $repo](bold blue) '\n```\n\n----------------------------------------\n\nTITLE: Configuring Fossil Branch Module in Starship\nDESCRIPTION: Example configuration for the Fossil Branch module that shows the active branch name. This configuration sets a custom symbol and truncation settings.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[fossil_branch]\nsymbol = 'ü¶é '\ntruncation_length = 4\ntruncation_symbol = ''\n```\n\n----------------------------------------\n\nTITLE: Configuring No Nerd Font Preset in Starship (Shell)\nDESCRIPTION: This command sets up the No Nerd Font preset for Starship, saving the configuration to the user's starship.toml file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/presets/no-nerd-font.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-nerd-font -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Module in Starship\nDESCRIPTION: Configuration for the time module showing current local time with custom formatting.\nSOURCE: https://github.com/starship/starship/blob/master/docs/de-DE/config/README.md#2025-04-19_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[time]\ndisabled = false\nformat = 'üïô[\\[ $time \\]]($style) '\ntime_format = '%T'\nutc_time_offset = '-5'\ntime_range = '10:00:00-14:00:00'\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Tcsh\nDESCRIPTION: Configuration snippet to add to the Tcsh shell configuration file (~/.tcshrc) to initialize Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\n# ~/.tcshrc\n\neval `starship init tcsh`\n```\n\n----------------------------------------\n\nTITLE: Configuring Haxe Module in Starship\nDESCRIPTION: Example configuration for customizing the Haxe module format with a custom symbol and color.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/config/README.md#2025-04-19_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[haxe]\nformat = \"via [‚åò $version](bold fg:202) \"\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Funtoo Linux using Portage\nDESCRIPTION: This command installs Starship from the core-kit using the Portage package manager on Funtoo Linux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ckb-IR/installing/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nemerge app-shells/starship\n```\n\n----------------------------------------\n\nTITLE: Setting Subscription Name Alias in Azure Module for Starship\nDESCRIPTION: This snippet demonstrates how to set up an alias for a long subscription name in the Azure module configuration for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pl-PL/config/README.md#2025-04-19_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[azure.subscription_aliases]\nvery-long-subscription-name = 'vlsn'\n```\n\n----------------------------------------\n\nTITLE: Configuring Red Module in Starship Prompt\nDESCRIPTION: TOML configuration for customizing the Red module in Starship prompt. It sets a custom red circle symbol for the Red programming language version display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_94\n\nLANGUAGE: TOML\nCODE:\n```\n# ~/.config/starship.toml\n\n[red]\nsymbol = 'üî¥ '\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in PowerShell\nDESCRIPTION: PowerShell profile configuration to set window title and initialize Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/advanced-config/README.md#2025-04-19_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd `a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Initializing Starship in Zsh\nDESCRIPTION: Command to initialize Starship in Zsh shell. Add this to the end of your ~/.zshrc file to enable the Starship prompt.\nSOURCE: https://github.com/starship/starship/blob/master/README.md#2025-04-19_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\neval \"$(starship init zsh)\"\n```\n\n----------------------------------------\n\nTITLE: Applying No Empty Icons Preset in Starship (Shell)\nDESCRIPTION: This command applies the No Empty Icons preset to the Starship configuration. It writes the preset configuration to the user's Starship configuration file.\nSOURCE: https://github.com/starship/starship/blob/master/docs/id-ID/presets/no-empty-icons.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nstarship preset no-empty-icons -o ~/.config/starship.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Cmd using Clink\nDESCRIPTION: Lua script for initializing Starship in Windows Command Prompt using Clink (v1.2.30+)\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/README.md#2025-04-19_snippet_11\n\nLANGUAGE: lua\nCODE:\n```\n-- starship.lua\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Installing Required Packages for Starship on Termux\nDESCRIPTION: Prerequisite command to install the getconf package on Termux before installing Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/zh-TW/installing/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npkg install getconf\n```\n\n----------------------------------------\n\nTITLE: Installing Starship system-wide on NixOS\nDESCRIPTION: Command to rebuild the NixOS system after adding Starship to the system packages in the configuration.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/installing/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nsudo nixos-rebuild switch\n```\n\n----------------------------------------\n\nTITLE: Implementing Right Prompt in Cmd with Lua\nDESCRIPTION: Sets up a custom right-side prompt in Cmd shell that displays the time of the last command execution.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/advanced-config/README.md#2025-04-19_snippet_2\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_transient_rprompt_func(prompt)\n  return io.popen(\"starship module time\"):read(\"*a\")\nend\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Generating Starship Bug Report\nDESCRIPTION: Command to create a GitHub issue for reporting bugs in Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Configuring Starship for Nushell\nDESCRIPTION: Initialization code for Nushell configuration (v0.96+ required)\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nmkdir ($nu.data-dir | path join \"vendor/autoload\")\nstarship init nu | save -f ($nu.data-dir | path join \"vendor/autoload/starship.nu\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Module in Starship\nDESCRIPTION: TOML configuration example for customizing the Helm module display format in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/config/README.md#2025-04-19_snippet_59\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[helm]\nformat = 'via [‚éà $version](bold white) '\n```\n\n----------------------------------------\n\nTITLE: Specifying Kotlin Binary for Version Detection (TOML)\nDESCRIPTION: Configures the Kotlin module to use the Kotlin Compiler binary for detecting the installed version.\nSOURCE: https://github.com/starship/starship/blob/master/docs/nl-NL/config/README.md#2025-04-19_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[kotlin]\n# Uses the Kotlin Compiler binary to get the installed version\nkotlin_binary = 'kotlinc'\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in CMD\nDESCRIPTION: Implements window title change functionality for Windows CMD using Lua with username, computer name and current directory.\nSOURCE: https://github.com/starship/starship/blob/master/docs/advanced-config/README.md#2025-04-19_snippet_16\n\nLANGUAGE: lua\nCODE:\n```\nfunction starship_preprompt_user_func(prompt)\n  console.settitle(os.getenv('USERNAME')..\"@\"..os.getenv('COMPUTERNAME')..\": \"..os.getcwd())\nend\n\nload(io.popen('starship init cmd'):read(\"*a\"))()\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in PowerShell\nDESCRIPTION: Creates a function called Invoke-Starship-PreCommand to set the window title in PowerShell.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n# edit $PROFILE\nfunction Invoke-Starship-PreCommand {\n  $host.ui.RawUI.WindowTitle = \"$env:USERNAME@$env:COMPUTERNAME`: $pwd ``a\"\n}\n\nInvoke-Expression (&starship init powershell)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Fish Shell Right Transient Prompt\nDESCRIPTION: Implements a custom right-side transient prompt in Fish shell to display the command execution time.\nSOURCE: https://github.com/starship/starship/blob/master/docs/fr-FR/advanced-config/README.md#2025-04-19_snippet_4\n\nLANGUAGE: fish\nCODE:\n```\nfunction starship_transient_rprompt_func\n  starship module time\nend\nstarship init fish | source\nenable_transience\n```\n\n----------------------------------------\n\nTITLE: Generating Starship Bug Report\nDESCRIPTION: Command to create a GitHub issue for reporting bugs in Starship, automating the collection of relevant information.\nSOURCE: https://github.com/starship/starship/blob/master/docs/tr-TR/faq/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nstarship bug-report\n```\n\n----------------------------------------\n\nTITLE: Configuring NATS Module in Starship Prompt\nDESCRIPTION: Example configuration for the NATS module in Starship prompt. This customizes the format to only show the symbol with bold purple styling.\nSOURCE: https://github.com/starship/starship/blob/master/docs/config/README.md#2025-04-19_snippet_73\n\nLANGUAGE: toml\nCODE:\n```\n[nats]\nformat = '[$symbol]($style)'\nstyle = 'bold purple'\n```\n\n----------------------------------------\n\nTITLE: Getting Starship Prompt Command Help\nDESCRIPTION: Command to display all flags accepted by the starship prompt command, useful for understanding available customization options.\nSOURCE: https://github.com/starship/starship/blob/master/docs/ar-SA/faq/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nstarship prompt --help\n```\n\n----------------------------------------\n\nTITLE: Command Duration Module Configuration in TOML\nDESCRIPTION: Configuration example for the cmd_duration module showing how to customize the minimum time and format\nSOURCE: https://github.com/starship/starship/blob/master/docs/ko-KR/config/README.md#2025-04-19_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[cmd_duration]\nmin_time = 500\nformat = 'underwent [$duration](bold yellow)'\n```\n\n----------------------------------------\n\nTITLE: Setting Window Title in Bash and Zsh\nDESCRIPTION: Defines a function to change the window title and sets it as a precmd function for Starship in Bash and Zsh.\nSOURCE: https://github.com/starship/starship/blob/master/docs/es-ES/advanced-config/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfunction set_win_title(){\n    echo -ne \"\\033]0; TU_TITULO_DE_VENTANA_AQUI \\007\"\n}\n```\n\nLANGUAGE: bash\nCODE:\n```\nstarship_precmd_user_func=\"set_win_title\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nprecmd_functions+=(set_win_title)\n```\n\n----------------------------------------\n\nTITLE: Installing Starship on Termux\nDESCRIPTION: Installs Starship on Termux using the official installation script, specifying the correct binary directory for Termux.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/installing/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sS https://starship.rs/install.sh | sh -s -- --bin-dir /data/data/com.termux/files/usr/bin\n```\n\n----------------------------------------\n\nTITLE: Customizing Docker Context Module in Starship Prompt\nDESCRIPTION: Example configuration for customizing the Docker context module in Starship prompt, changing the format and symbol used in the prompt display.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-BR/config/README.md#2025-04-19_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[docker_context]\nformat = 'via [üêã $context](blue bold)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Starship\nDESCRIPTION: Examples of configuring single and multiple environment variable displays in Starship prompt\nSOURCE: https://github.com/starship/starship/blob/master/docs/no-NO/config/README.md#2025-04-19_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n```\n\nLANGUAGE: toml\nCODE:\n```\n# ~/.config/starship.toml\n\n[env_var.SHELL]\nvariable = 'SHELL'\ndefault = 'unknown shell'\n[env_var.USER]\ndefault = 'unknown user'\n```\n\n----------------------------------------\n\nTITLE: Adding Pre-prompt Rocket Icon in PowerShell\nDESCRIPTION: This PowerShell function named Invoke-Starship-PreCommand displays a rocket emoji before the prompt, integrating with Starship's prompt rendering process.\nSOURCE: https://github.com/starship/starship/blob/master/docs/bn-BD/advanced-config/README.md#2025-04-19_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Invoke-Starship-PreCommand {\n    $host.ui.Write(\"üöÄ\")\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Home Manager Configuration\nDESCRIPTION: Command to apply the Home Manager configuration changes for Starship.\nSOURCE: https://github.com/starship/starship/blob/master/docs/pt-PT/installing/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nhome-manager switch\n```"
  }
]
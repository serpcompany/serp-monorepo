[
  {
    "owner": "wechat-miniprogram",
    "repo": "miniprogram-demo",
    "content": "TITLE: Tag Component TypeScript Interface\nDESCRIPTION: TypeScript interface definitions for Tag component props including style, closable, theme, variant and other customization options.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/tag/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagProps {\n  style?: Object;\n  customStyle?: Object;\n  closable?: boolean | Object;\n  disabled?: boolean;\n  icon?: string | Object;\n  maxWidth?: string | number;\n  shape?: 'square' | 'round' | 'mark';\n  size?: 'small' | 'medium' | 'large' | 'extra-large';\n  theme?: 'default' | 'primary' | 'warning' | 'danger' | 'success';\n  variant?: 'dark' | 'light' | 'outline' | 'light-outline';\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RadioOption Type in TypeScript\nDESCRIPTION: This snippet defines the RadioOption type used in the RadioGroup component. It can be a string, number, or an object with specific properties.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/radio/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype RadioOption = string | number | RadioOptionObj\ninterface RadioOptionObj {\n  label?: string;\n  value?: string | number;\n  readonly?: boolean;\n  disabled?: boolean;\n  allowUncheck?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing WeChat Mini Program Demo with NPM\nDESCRIPTION: Command to initialize the WeChat Mini Program demo project. After running this command, users need to open the WeChat Developer Tools and click on [Tools-Build npm] to complete the setup.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run init\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Props in Markdown\nDESCRIPTION: This snippet defines the properties available for the Icon component, including style, custom-style, color, name, prefix, and size. It specifies the type, default value, description, and whether each prop is required.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ncolor | String | - | \\- | N\nname | String | - | required | Y\nprefix | String | - | \\- | N\nsize | String / Number | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Empty Component Props in Markdown\nDESCRIPTION: This snippet defines the props for the Empty component, including style, custom-style, action, description, icon, and image. It specifies the type, default value, description, and whether each prop is required.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/empty/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Empty Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\naction | Slot | - | action block。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ndescription | String / Slot | - | empty component description。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\nicon | String / Object | - | \\- | N\nimage | String / Slot | - | image url, or Image component props, or custom any node you need.。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\n```\n\n----------------------------------------\n\nTITLE: CheckTag Component TypeScript Interface\nDESCRIPTION: TypeScript interface definitions for CheckTag component props including checked state, content, size options and variant styles.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/tag/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CheckTagProps {\n  style?: Object;\n  customStyle?: Object;\n  checked?: boolean;\n  defaultChecked?: boolean;\n  closable?: boolean;\n  content?: string | number | string[];\n  disabled?: boolean;\n  icon?: string | Object;\n  shape?: 'square' | 'round' | 'mark';\n  size?: 'small' | 'medium' | 'large';\n  variant?: 'dark' | 'light' | 'outline' | 'light-outline';\n}\n```\n\n----------------------------------------\n\nTITLE: Col and Row Props API Documentation\nDESCRIPTION: Markdown table documentation showing the available properties for Col and Row components, including style customization, offset, span, and gutter configurations.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/col/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Col Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\noffset | String / Number | - | \\- | N\nspan | String / Number | - | \\- | N\n\n\n### Row Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ngutter | String / Number | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for WeChat Mini Program Development\nDESCRIPTION: Command to install project dependencies in the miniprogram directory before contributing code. This ensures code style consistency across the project.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Defining RadioValue Type in TypeScript\nDESCRIPTION: This snippet defines the RadioValue type used in both Radio and RadioGroup components. It can be a string, number, or boolean.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/radio/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype RadioValue = string | number | boolean\n```\n\n----------------------------------------\n\nTITLE: Defining Collapse Value Type in TypeScript\nDESCRIPTION: TypeScript type definition for the Collapse component's value property, which accepts an array of strings or numbers.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/collapse/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ntype CollapseValue = Array<string | number>\n```\n\n----------------------------------------\n\nTITLE: Running Lint Checks for WeChat Mini Program Code\nDESCRIPTION: Command to run linting checks on the codebase to ensure code quality and adherence to the project's coding standards before submitting a PR.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Tag Component CSS Variables\nDESCRIPTION: CSS custom properties for styling Tag components, including colors, sizes, and border radius configurations.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/tag/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --td-tag-close-icon-color: @font-gray-3;\n  --td-tag-danger-color: @error-color;\n  --td-tag-danger-light-color: @error-color-1;\n  --td-tag-default-color: @bg-color-component;\n  --td-tag-default-font-color: @font-gray-1;\n  --td-tag-default-light-color: @bg-color-secondarycontainer;\n  --td-tag-disabled-background-color: @bg-color-component-disabled;\n  --td-tag-disabled-border-color: @component-border;\n  --td-tag-disabled-color: @font-gray-4;\n  --td-tag-extra-large-font-size: @font-size-base;\n  --td-tag-extra-large-height: 80rpx;\n  --td-tag-extra-large-icon-size: 32rpx;\n  --td-tag-extra-large-padding: 32rpx - 1px;\n  /* Additional variables omitted for brevity */\n}\n```\n\n----------------------------------------\n\nTITLE: Badge External Classes Table - Markdown\nDESCRIPTION: Table listing the external class names that can be used to customize the Badge component's appearance.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/badge/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | -\nt-class-content | -\nt-class-count | -\n```\n\n----------------------------------------\n\nTITLE: Importing the Image Component in WeChat Mini Program\nDESCRIPTION: Configuration for importing the t-image component globally in app.json or locally in page/component index.json files.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/image/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n    \"t-image\": \"tdesign-miniprogram/image/image\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Slider Component in WeChat Mini Program\nDESCRIPTION: Configuration code to import the Slider component either globally in app.json or locally in component/page index.json\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/slider/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-slider\": \"tdesign-miniprogram/slider/slider\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component in WeChat Mini Program\nDESCRIPTION: Code snippet showing how to import the Button component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/button/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-button\": \"tdesign-miniprogram/button/button\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Navbar Component in WeChat Mini Program\nDESCRIPTION: Configuration for importing the Navbar component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/navbar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-navbar\": \"tdesign-miniprogram/navbar/navbar\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Tabs with Popup Component in WeChat Mini Program\nDESCRIPTION: Implementation of Tabs within a Popup component, showing how to properly initialize the tabs slider track when used in a popup context.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/tabs/README.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n <t-popup visible=\"{{visible}}\" bind:visible-change=\"onVisibleChange\">\n  <t-tabs id=\"tabs\" defaultValue=\"{{0}}\" bind:change=\"onTabsChange\" bind:click=\"onTabsClick\" t-class=\"custom-tabs\">\n    <t-tab-panel label=\"标签页一\" value=\"0\">标签一内容</t-tab-panel>\n    <t-tab-panel label=\"标签页二\" value=\"1\">标签二内容</t-tab-panel>\n    <t-tab-panel label=\"标签页三\" value=\"2\">标签三内容</t-tab-panel>\n  </t-tabs>\n</t-popup>\n```\n\nLANGUAGE: js\nCODE:\n```\nPage({\n  data: {\n    visible: false\n  },\n  showPopup() {\n    this.setData({\n      visible: true\n    }, () => {\n      const tabs = this.selectComponent('tabs');\n\n      tabs.setTrack(); // 这一步很重要，因为小程序的无法正确执行生命周期，所以需要手动设置下 tabs 的滑块\n    })\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Importing the Empty Component in WeChat Mini Program\nDESCRIPTION: Configuration code to import the Empty component either globally in app.json or locally in a page/component's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/empty/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-empty\": \"tdesign-miniprogram/empty/empty\"\n}\n```\n\n----------------------------------------\n\nTITLE: Controlled Tabs Implementation in WeChat Mini Program\nDESCRIPTION: Example of controlled tabs implementation with value binding and change event handling. This allows for programmatic control of the currently active tab.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/tabs/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<t-tabs value=\"{{value}}\" bind:change=\"onTabsChange\">\n  <t-tab-panel label=\"标签页一\" value=\"0\">标签一内容</t-tab-panel>\n  <t-tab-panel label=\"标签页二\" value=\"1\">标签二内容</t-tab-panel>\n</t-tabs>\n```\n\nLANGUAGE: js\nCODE:\n```\nPage({\n  data: {\n    value: '0',\n  },\n  onTabsChange(e) {\n    this.setData({ value: e.detail.value })\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Checkbox Components in WeChat Mini Program\nDESCRIPTION: Configuration code to import the Checkbox and CheckboxGroup components globally in app.json or locally in page/component json files.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/checkbox/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-checkbox\": \"tdesign-miniprogram/checkbox/checkbox\",\n  \"t-checkbox-group\": \"tdesign-miniprogram/checkbox-group/checkbox-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Progress Component in WeChat Miniprogram\nDESCRIPTION: Code snippet showing how to import the Progress component in app.json or page.json configuration file for WeChat miniprogram.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/progress/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-progress\": \"tdesign-miniprogram/progress/progress\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sticky with Custom Container in WeChat Mini Program\nDESCRIPTION: This snippet demonstrates how to use the Sticky component with a specified container element.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n{{ container }}\n```\n\n----------------------------------------\n\nTITLE: Importing Tag Components in WeChat Miniprogram\nDESCRIPTION: JSON configuration for importing the Tag and CheckTag components in a WeChat miniprogram.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/tag/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"usingComponents\": {\n    \"t-tag\": \"tdesign-miniprogram/tag/tag\",\n    \"t-check-tag\": \"tdesign-miniprogram/check-tag/check-tag\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sticky with Offset in WeChat Mini Program\nDESCRIPTION: This snippet shows how to use the Sticky component with a custom offset from the top of the page.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n{{ offset }}\n```\n\n----------------------------------------\n\nTITLE: Generating Scripts from Proto Files\nDESCRIPTION: Command to run the svrkit script that generates necessary code files based on protocol buffer definitions in the ARModel directory.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n// ARModel 下\nnpm run svrkit\n```\n\n----------------------------------------\n\nTITLE: Basic Sticky Usage in WeChat Mini Program\nDESCRIPTION: This snippet demonstrates the basic usage of the Sticky component by wrapping content inside it.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{ base }}\n```\n\n----------------------------------------\n\nTITLE: Displaying Coverage Badges\nDESCRIPTION: HTML code for displaying coverage badges for lines, functions, statements, and branches.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/tag/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"coverages-badge\" style=\"margin-right: 10px\"><img src=\"https://img.shields.io/badge/coverages%3A%20lines-100%25-blue\" /></span><span class=\"coverages-badge\" style=\"margin-right: 10px\"><img src=\"https://img.shields.io/badge/coverages%3A%20functions-100%25-blue\" /></span><span class=\"coverages-badge\" style=\"margin-right: 10px\"><img src=\"https://img.shields.io/badge/coverages%3A%20statements-100%25-blue\" /></span><span class=\"coverages-badge\" style=\"margin-right: 10px\"><img src=\"https://img.shields.io/badge/coverages%3A%20branches-100%25-blue\" /></span>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Sticky Props in Markdown Table\nDESCRIPTION: This markdown table shows the available props for the Sticky component including style, custom-style, container, disabled, offset-top, and z-index properties. Each row details the prop name, type, default value, description, and whether it's required.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ncontainer | Function | - | \\- | N\ndisabled | Boolean | false | \\- | N\noffset-top | String / Number | 0 | \\- | N\nz-index | Number | 99 | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Slider Props in Markdown\nDESCRIPTION: This code snippet defines the properties (props) for the Slider component using a markdown table. It includes details such as prop names, types, default values, descriptions, and whether they are required.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/slider/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Slider Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ncolors | Array | [] | `deprecated`。Typescript：`Array<string>` | N\ndisabled | Boolean | undefined | \\- | N\ndisabled-color | Array | [] | `deprecated`。Typescript：`Array<string>` | N\nlabel | String / Boolean | false | Typescript：`string \\| boolean` | N\nmarks | Object / Array | {} | Typescript：`Record<number, string> \\| Array<number>` | N\nmax | Number | 100 | \\- | N\nmin | Number | 0 | \\- | N\nrange | Boolean | false | \\- | N\nshow-extreme-value | Boolean | false | \\- | N\nstep | Number | 1 | \\- | N\ntheme | String | default | `0.30.0`。options: default/capsule | N\nvalue | Number / Array | 0 | Typescript：`SliderValue` `type SliderValue = number \\| Array<number>`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/slider/type.ts) | N\ndefault-value | Number / Array | undefined | uncontrolled property。Typescript：`SliderValue` `type SliderValue = number \\| Array<number>`。[see more ts definition](https://github.com/Tencent/tdesign-miniprogram/tree/develop/src/slider/type.ts) | N\nvertical | Boolean | false | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Slider Events in Markdown\nDESCRIPTION: This code snippet defines the events that can be triggered by the Slider component using a markdown table. It includes event names, parameters, and descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/slider/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Slider Events\n\nname | params | description\n-- | -- | --\nchange | `(value: SliderValue)` | \\-\ndragend | `(value: SliderValue, e: TouchEvent)` | \\-\ndragstart | `(e: TouchEvent)` | \\-\n```\n\n----------------------------------------\n\nTITLE: Calling WXSvrkit Service\nDESCRIPTION: Example implementation of calling a WXSvrkit service with the generated utilities and proper configuration.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/wx-server-sdk-wxg-service/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst cloud = require('wx-server-sdk')\nconst wxgService = require('@tencent/wx-server-sdk-wxg-service')\n\ncloud.registerService(wxgService)\ncloud.init()\n\nconst svrkitUtils = require('./svrkit-utils.js')\n\nexports.main = async (event, context) => {\n\n  return await cloud.callWXSvrkit({\n    pbInstance: svrkitUtils.generate({\n      serviceName: 'MMBizWxaQbaseDemo',\n      funcName: 'EchoTest',\n      data: {\n        OpenTime: event.OpenTime || true,\n        IntData: event.IntData || 10,\n        StringData: event.StringData || 'default_string',\n        UintListData: event.UintListData || [1, 2, 3],\n        MessageData: event.MessageData || {\n          Data: 'default_data_string'\n        },\n      }\n    })\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Registering WXG Service SDK Plugin\nDESCRIPTION: Example of how to register the WXG service plugin with cloud SDK to enable internal API access.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/wx-server-sdk-wxg-service/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst cloud = require('wx-server-sdk')\nconst wxgService = require('@tencent/wx-server-sdk-wxg-service')\n\n// 将 wxg service 注册到 cloud 上，获得 callWXSvrkit, callTencentInnerAPI 等内部接口\ncloud.registerService(wxgService)\n\nexports.main = async (event, context) => {\n  // 现在可以使用 callWXSvrkit 等内部接口了\n  cloud.callWXSvrkit({\n    // ....\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Internal Tencent API\nDESCRIPTION: Example showing how to call internal Tencent services using callTencentInnerAPI with detailed request configuration.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/wx-server-sdk-wxg-service/README.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst cloud = require('wx-server-sdk')\nconst wxgService = require('@tencent/wx-server-sdk-wxg-service')\n\n// 将 wxg service 注册到 cloud 上，获得 callWXSvrkit 接口\ncloud.registerService(wxgService)\n\nexports.main = async (event, context) => {\n  const callResult = await cloud.callTencentInnerAPI({\n    cmdid: 12345,\n    modid: 67890,\n    path: '/aaa/bbb?xxx=1',\n    https: false,\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      x: 1,\n      y: 2,\n    }),\n    autoParse: true,\n  })\n\n  console.log(callResult)\n  return callResult\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Cloud Service Deployment Process\nDESCRIPTION: Step-by-step instructions for deploying updated cloud functions to the test environment, including installing dependencies and uploading all files to handle Tencent packages correctly.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/README.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. 安装 ARModel 下本地 npm 依赖\n\n2. 云函数环境切为 test环境\n\n3. ARModel 右键上传所有文件（由于有@tencent的子包）\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for ARModel Cloud Functions\nDESCRIPTION: Command to install the cloud-functions-tools package from Tencent's npm registry. This is required to work with the ARModel module.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n// ARModel 下\ntnpm install --save-dev @tencent/cloud-functions-tools@latest\n```\n\n----------------------------------------\n\nTITLE: 自定义图标样式定义（iconfont示例）\nDESCRIPTION: 使用iconfont创建自定义图标的CSS定义示例。包含字体声明、图标基础样式和具体图标的Unicode定义。文件后缀需要为.wxss才能在小程序中使用。\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/icon/README.md#2025-04-23_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@font-face {\n  font-family: 'icon';  // 使用自定义的字体名称\n  ···\n}\n\n.icon {\n  font-family: 'icon' !important;  // 字体名称\n  ···\n}\n\n.icon-a-0:before {  // icon 图标。注意 FontClass 前缀与 font-family 保持一致\n  content: '\\e64d';\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Icons with CSS in WeChat Miniprogram\nDESCRIPTION: Example of custom icon implementation using font-face with CSS. This shows how to define a custom icon font family and individual icons that can be used with the t-icon component.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/icon/README.md#2025-04-23_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@font-face {\n  font-family: 'icon';  // 使用自定义的字体名称\n  ···\n}\n\n.icon {\n  font-family: 'icon' !important;  // 字体名称\n  ···\n}\n\n.icon-a-0:before {  // icon 图标。注意 FontClass 前缀与 font-family 保持一致\n  content: '\\e64d';\n}\n```\n\n----------------------------------------\n\nTITLE: Proto File Definition\nDESCRIPTION: Protobuf message definitions for Svrkit service interface including request and response structures.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/wx-server-sdk-wxg-service/README.md#2025-04-23_snippet_3\n\nLANGUAGE: protobuf\nCODE:\n```\nmessage MessageData\n{\n\toptional string Data = 1;\n}\n\nmessage EchoTestRequest\n{\n\trequired bool        OpenTime = 1;\n\toptional int32       IntData = 2;\n\toptional string      StringData = 3;\n\trepeated uint32      UintListData = 4;\n\toptional MessageData MessageData = 5;\n}\n\nmessage EchoTestResponse\n{\n\toptional uint32      TimeStamp = 1;\n\toptional int32       IntRespData = 2;\n\toptional string      StringRespData = 3;\n\trepeated uint32      UintListRespData = 4;\n\toptional MessageData MessageRespData = 5;\n}\n\nmessage CheckWxaDeveloperRequest\n{\n\toptional uint32 appuin = 1;\n\toptional uint32 useruin = 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Svrkit Configuration File\nDESCRIPTION: Example configuration file for setting up Svrkit module with proto file definitions and service information.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/cloudfunctions/ARDemo/wx-server-sdk-wxg-service/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = [\n  {\n    proto: './proto/mmbizwxaqbasedemo.proto',\n    serviceName: 'MMBizWxaQbaseDemo',\n    magic: 18501,\n    functions: {\n      EchoTest: {\n        cmdid: 1,\n        req: 'EchoTestRequest',\n        res: 'EchoTestResponse',\n      },\n      CheckWxaDeveloper: {\n        cmdid: 2,\n        req: 'CheckWxaDeveloperRequest',\n      }\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Components in WeChat Mini Program\nDESCRIPTION: Configuration for importing the Tabs and TabPanel components in a WeChat Mini Program, either globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/tabs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-tabs\": \"tdesign-miniprogram/tabs/tabs\",\n  \"t-tab-panel\": \"tdesign-miniprogram/tab-panel/tab-panel\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Sticky Component in WeChat Mini Program\nDESCRIPTION: This snippet shows how to import the Sticky component globally in the app.json file or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-sticky\": \"tdesign-miniprogram/sticky/sticky\"\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Sticky Events in Markdown Table\nDESCRIPTION: This markdown table describes events available for the Sticky component, specifically the scroll event which provides scrollTop and isFixed parameters in its detail object. It includes a link to the TypeScript definition for more details.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nname | params | description\n-- | -- | --\nscroll | `(detail: { scrollTop: number, isFixed: boolean })` | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts)\n```\n\n----------------------------------------\n\nTITLE: Listing External CSS Classes for Sticky Component\nDESCRIPTION: This markdown table shows the external CSS classes that can be used with the Sticky component. It lists t-class and t-class-content as available class hooks for customizing the component's appearance.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/sticky/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\nt-class-content | \\-\n```\n\n----------------------------------------\n\nTITLE: Defining Slider External Classes in Markdown\nDESCRIPTION: This code snippet defines the external classes that can be used to customize the Slider component's appearance using a markdown table. It includes class names and their descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/slider/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Slider External Classes\n\nclassName | Description\n-- | --\nt-class | \\-\nt-class-bar | \\-\nt-class-bar-active | \\-\nt-class-bar-disabled | \\-\nt-class-cursor | \\-\n```\n\n----------------------------------------\n\nTITLE: Defining Slider CSS Variables in Markdown\nDESCRIPTION: This code snippet defines the CSS variables that can be used to customize the Slider component's styles using a markdown table. It includes variable names, default values, and descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/slider/README.en-US.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### CSS Variables\n\nThe component provides the following CSS variables, which can be used to customize styles.\nName | Default Value | Description \n-- | -- | --\n--td-slider-active-color | @brand-color | - \n--td-slider-bar-height | 8rpx | - \n--td-slider-bar-width | 8rpx | - \n--td-slider-capsule-bar-color | @bg-color-component | - \n--td-slider-capsule-bar-heihgt | 48rpx | - \n--td-slider-capsule-bar-width | 48rpx | - \n--td-slider-capsule-line-heihgt | 36rpx | - \n--td-slider-default-color | @bg-color-component | - \n--td-slider-default-color | @bg-color-component-disabled | - \n--td-slider-disabled-color | @brand-color-disabled | - \n--td-slider-disabled-text-color | @text-color-disabled | - \n--td-slider-dot-bg-color | #fff | - \n--td-slider-dot-color | @component-border | - \n--td-slider-dot-disabled-bg-color | #fff | - \n--td-slider-dot-disabled-border-color | #f3f3f3 | - \n--td-slider-dot-size | 40rpx | - \n--td-slider-text-color | @text-color-primary | - \n```\n\n----------------------------------------\n\nTITLE: Importing Cell Components in WeChat Mini Program\nDESCRIPTION: This snippet shows how to import the Cell and CellGroup components globally in the app.json file or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/cell/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-cell\": \"tdesign-miniprogram/cell/cell\",\n  \"t-cell-group\": \"tdesign-miniprogram/cell-group/cell-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Cell Component in WeChat Mini Program\nDESCRIPTION: Configuration snippet showing how to import the Cell and Cell-group components globally in app.json or locally in component/page json files\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/cell/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-cell\": \"tdesign-miniprogram/cell/cell\",\n  \"t-cell-group\": \"tdesign-miniprogram/cell-group/cell-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Badge Component in WeChat Mini Program\nDESCRIPTION: Configuration code to import the Badge component either globally in app.json or locally in a page/component's index.json\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/badge/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-badge\": \"tdesign-miniprogram/badge/badge\"\n}\n```\n\n----------------------------------------\n\nTITLE: Badge Properties Table - Markdown\nDESCRIPTION: Table defining the available properties for the Badge component, including their types, default values, and descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/badge/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ncolor | String | - | - | N\ncontent | String | - | - | N\ncount | String / Number / Slot | 0 | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ndot | Boolean | false | - | N\nmax-count | Number | 99 | - | N\noffset | Array | - | Typescript：`Array<string \\| number>` | N\nshape | String | circle | options: circle/square/bubble/ribbon | N\nshow-zero | Boolean | false | - | N\nsize | String | medium | options: medium/large | N\n```\n\n----------------------------------------\n\nTITLE: Badge CSS Variables Table - Markdown\nDESCRIPTION: Table defining the CSS variables available for customizing the Badge component's styles, including their default values and descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/badge/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-badge-basic-height | 32rpx | - \n--td-badge-basic-padding | 8rpx | - \n--td-badge-basic-width | 32rpx | - \n--td-badge-bg-color | @error-color | - \n--td-badge-border-radius | 4rpx | - \n--td-badge-bubble-border-radius | 20rpx 20rpx 20rpx 1px | - \n--td-badge-dot-size | 16rpx | - \n--td-badge-font-size | @font-size-xs | - \n--td-badge-font-weight | 600 | - \n--td-badge-large-font-size | @font-size-s | - \n--td-badge-large-height | 40rpx | - \n--td-badge-large-padding | 10rpx | - \n--td-badge-text-color | @font-white-1 | -\n```\n\n----------------------------------------\n\nTITLE: 引入 Icon 组件到微信小程序\nDESCRIPTION: 在微信小程序中引入Icon组件的配置代码。可以全局引入（在app.json中配置）或局部引入（在页面或组件的index.json中配置）。\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/icon/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-icon\": \"tdesign-miniprogram/icon/icon\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Icon Component in WeChat Miniprogram\nDESCRIPTION: Configuration code to import the t-icon component either globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/icon/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-icon\": \"tdesign-miniprogram/icon/icon\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Props in Markdown\nDESCRIPTION: This code snippet defines the properties available for the Icon component, including their names, types, default values, descriptions, and whether they are required.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon Props\n\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\ncolor | String | - | \\- | N\nname | String | - | required | Y\nprefix | String | - | \\- | N\nsize | String / Number | - | \\- | N\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Events in Markdown\nDESCRIPTION: This code snippet outlines the events that can be triggered by the Icon component, including their names, parameters, and descriptions.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon Events\n\nname | params | description\n-- | -- | --\nclick | \\- | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts)\n```\n\n----------------------------------------\n\nTITLE: Defining Icon External Classes in Markdown\nDESCRIPTION: This code snippet defines the external classes that can be applied to the Icon component for customization purposes.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon External Classes\n\nclassName | Description\n-- | --\nt-class | \\-\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Events in Markdown\nDESCRIPTION: This snippet outlines the events available for the Icon component. It includes the 'click' event and provides a link to the TypeScript definition for more details.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon Events\n\nname | params | description\n-- | -- | --\nclick | \\- | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts)\n```\n\n----------------------------------------\n\nTITLE: Defining Icon External Classes in Markdown\nDESCRIPTION: This snippet defines the external classes available for the Icon component. It includes the 't-class' external class.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/icon/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Icon External Classes\n\nclassName | Description\n-- | --\nt-class | \\-\n```\n\n----------------------------------------\n\nTITLE: Importing Divider Component in WeChat Mini Program\nDESCRIPTION: Shows how to import the Divider component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/divider/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-divider\": \"tdesign-miniprogram/divider/divider\"\n}\n```\n\n----------------------------------------\n\nTITLE: Divider Component Props Table in Markdown\nDESCRIPTION: Table defining the available properties for the Divider component, including style, alignment, content and layout options.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/divider/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nname | type | default | description | required\n-- | -- | -- | -- | --\nstyle | Object | - | CSS(Cascading Style Sheets) | N\ncustom-style | Object | - | CSS(Cascading Style Sheets)，used to set style on virtual component | N\nalign | String | center | options: left/right/center | N\ncontent | String / Slot | - | [see more ts definition](https://github.com/Tencent/tdesign-miniprogram/blob/develop/src/common/common.ts) | N\ndashed | Boolean | false | \\- | N\nlayout | String | horizontal | options: horizontal/vertical | N\n```\n\n----------------------------------------\n\nTITLE: Divider External Classes Reference in Markdown\nDESCRIPTION: Table documenting the external CSS classes that can be applied to the Divider component for custom styling.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/divider/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nclassName | Description\n-- | --\nt-class | \\-\nt-class-content | \\-\n```\n\n----------------------------------------\n\nTITLE: Divider CSS Variables Reference in Markdown\nDESCRIPTION: Table listing customizable CSS variables for the Divider component, including colors, font sizes, and line styles.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/divider/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Default Value | Description \n-- | -- | --\n--td-divider-color | @bg-color-component | - \n--td-divider-content-color | @font-gray-3 | - \n--td-divider-content-font-size | 24rpx | - \n--td-divider-content-line-height | 40rpx | - \n--td-divider-content-line-style | solid | -\n```\n\n----------------------------------------\n\nTITLE: Importing Image Component in WeChat Mini Program\nDESCRIPTION: Configuration to import the Image component globally in app.json or locally in a page's index.json file.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/image/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n    \"t-image\": \"tdesign-miniprogram/image/image\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Button Component in WeChat Mini Program\nDESCRIPTION: JSON configuration for importing the Button component either globally in app.json or locally in specific page/component index.json files.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/button/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-button\": \"tdesign-miniprogram/button/button\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Empty Component External Classes in Markdown\nDESCRIPTION: This snippet lists the external classes available for the Empty component, including t-class, t-class-description, and t-class-image.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/empty/README.en-US.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Empty External Classes\n\nclassName | Description\n-- | --\nt-class | \\-\nt-class-description | \\-\nt-class-image | \\-\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Variables for Empty Component in Markdown\nDESCRIPTION: This snippet defines the CSS variables provided by the Empty component for customizing styles. It includes variables for action margin, description color and font size, and icon color.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/empty/README.en-US.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### CSS Variables\n\nThe component provides the following CSS variables, which can be used to customize styles.\nName | Default Value | Description \n-- | -- | --\n--td-empty-action-margin-top | @spacer-4 | - \n--td-empty-description-color | @font-gray-3 | - \n--td-empty-description-font-size | @font-size-base | - \n--td-empty-description-line-height | 44rpx | - \n--td-empty-description-margin-top | @spacer-2 | - \n--td-empty-icon-color | @font-gray-3 | -\n```\n\n----------------------------------------\n\nTITLE: Indexes Component Type Definition (Typescript)\nDESCRIPTION: Type definition for the ListItem interface used in the Indexes component, showing the structure for list items with titles, indices, and children.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/indexes/README.en-US.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListItem { \n  title: string;\n  index: string;\n  children: { title: string; [key: string]: any} []\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Navbar Component in WeChat Miniprogram\nDESCRIPTION: Code snippet for importing the Navbar component in a WeChat Miniprogram. This can be done globally in the app.json file or locally in individual page or component index.json files.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/navbar/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-navbar\": \"tdesign-miniprogram/navbar/navbar\",\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Radio Components in WeChat Mini Program\nDESCRIPTION: Code snippet showing how to import the Radio and RadioGroup components in a WeChat Mini Program by configuring the usingComponents section in app.json or page's index.json.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageChatTool/components/tdesign-miniprogram/radio/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-radio\": \"tdesign-miniprogram/radio/radio\",\n  \"t-radio-group\": \"tdesign-miniprogram/radio-group/radio-group\"\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Search Component in WeChat Mini Program\nDESCRIPTION: Configures the search component for use in a WeChat Mini Program. This JSON snippet shows how to import the t-search component globally in app.json or locally in a page's index.json.\nSOURCE: https://github.com/wechat-miniprogram/miniprogram-demo/blob/master/miniprogram/packageAPI/components/tdesign-miniprogram/search/README.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"usingComponents\": {\n  \"t-search\": \"tdesign-miniprogram/search/search\"\n}\n```"
  }
]
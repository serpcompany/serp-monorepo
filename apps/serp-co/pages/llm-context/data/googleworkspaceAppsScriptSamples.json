[
  {
    "owner": "googleworkspace",
    "repo": "apps-script-samples",
    "content": "TITLE: Using Gemini Custom Function in Google Sheets\nDESCRIPTION: This snippet demonstrates how to use the custom 'gemini' function in a Google Sheets formula. It takes a range of cells and a prompt as parameters, allowing users to perform AI-powered operations on spreadsheet data.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/ai/custom-func-ai-studio/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\n=gemini(A1:A10,\"Extract colors from the product description\")\n```\n```\n\n----------------------------------------\n\nTITLE: Using a Gemini AI Custom Function in Google Sheets\nDESCRIPTION: Example of how to use the custom 'gemini' function in a Google Sheets formula. The function takes a range of cells and a prompt instructing what to do with the data, then processes it through the Gemini AI model.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/ai/custom_func_vertex/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\n=gemini(A1:A10,\"Extract colors from the product description\")\n```\n```\n\n----------------------------------------\n\nTITLE: Handling HTTP GET Requests in Google Apps Script Web App\nDESCRIPTION: Demonstrates the basic structure for handling HTTP GET requests in a Google Apps Script web application using doGet(e) function and templated HTML. Shows how to serve HTML content from a template file.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/templates/web-app/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction doGet(e) {\n  var template = HtmlService.createTemplateFromFile('Index');\n  return template.evaluate();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Google Cloud Project for Drive Add-on with AI Integration\nDESCRIPTION: Instructions for setting up a Google Cloud Project, enabling necessary APIs, configuring OAuth, and creating a service account for the Drive Add-on with AI integration.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/ai/drive-rename/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Create a Cloud Project\n   1. Enable the Vertex AI API\n   1. Enable Google Drive API\n   1. Configure OAuth consent screen\n   1. Create a Service Account and grant the role Service `Vertex AI User` role\n   1. Create a private key with type JSON. This will download the JSON file for use in the next section.\n```\n\n----------------------------------------\n\nTITLE: Configuring Apps Script Project for Drive Add-on\nDESCRIPTION: Steps to set up a standalone Apps Script project, link it to the Google Cloud Project, and configure necessary script properties for the Drive Add-on.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/ai/drive-rename/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open a standalone Apps Script project.\n   1. From Project Settings, change project to GCP project number of Cloud Project from step 1\n   1. Add a Script Property. Enter `model_id` as the property name and `gemini-pro` as the value. \n   1. Add a Script Property. Enter `project_location` as the property name and `us-central1` as the value. \n   1. Add a Script Property. Enter `service_account_key` as the property name and paste the JSON key from the service account as the value. \n1. Add `Google Drive API v3` advanced service.\n1. Add OAuth2 v43 Apps Script Library using the ID `1B7FSrk5Zi6L1rSxxTDgDEUsPzlukDsi4KGuTMorsTQHhGBzBkMun4iDF`.\n1. Add the project code to Apps Script\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Apps Script Add-on Installation Steps\nDESCRIPTION: Instructions for setting up and deploying the Salesforce integration add-on using clasp CLI tool, including OAuth2 configuration and testing steps.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/sheets/next18/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nclasp create <script name>\nclasp push\nclasp open\n```\n\n----------------------------------------\n\nTITLE: Setting Service Account Credentials in Apps Script\nDESCRIPTION: This snippet shows where to set the service account credentials in the AppAuthenticationUtils.gs file. It requires replacing the placeholder with the actual JSON private key of the created service account.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/chat/advanced-service/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst SERVICE_ACCOUNT = '{\"type\": \"service_account\", ...}';\n```\n\n----------------------------------------\n\nTITLE: Setting up OAuth2 Library in Apps Script\nDESCRIPTION: Instructions for adding the OAuth2 v43 Apps Script Library to the project. This library is essential for handling authentication in the add-on.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/ai/devdocs-link-preview/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Add OAuth2 v43 Apps Script Library using the ID `1B7FSrk5Zi6L1rSxxTDgDEUsPzlukDsi4KGuTMorsTQHhGBzBkMun4iDF`.\n```\n\n----------------------------------------\n\nTITLE: OAuth Scopes for Google Apps Script\nDESCRIPTION: Required OAuth scopes for accessing Google Documents and Presentations APIs. The scopes allow creating documents and reading the current presentation.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/slides/SpeakerNotesScript/README.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://www.googleapis.com/auth/documents\\nhttps://www.googleapis.com/auth/presentations.currentonly\n```\n\n----------------------------------------\n\nTITLE: Project Description for Employee Certificate Generator in Google Apps Script\nDESCRIPTION: Markdown description of a Google Apps Script project that creates and sends personalized appreciation certificates to employees. The repository links to the Google Developers documentation for additional implementation details.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/employee-certificate/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Send personalized appreciation certificates to employees\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/automations/employee-certificate) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Link to Google Developers Documentation\nDESCRIPTION: This snippet shows a Markdown-formatted link to the Google Developers documentation page for the news sentiment analysis sample in Apps Script.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/news-sentiment/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Connect to an external API: Analyze news headlines\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/automations/news-sentiment) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Building WebAssembly for Apps Script Project\nDESCRIPTION: Command-line instructions for installing dependencies and building the project that integrates Rust, Python, and WebAssembly with Apps Script.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/wasm/hello-world/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the WebAssembly Project with npm\nDESCRIPTION: Commands to install dependencies and build the project which integrates Rust, Python, and WebAssembly with Apps Script. This requires Node.js, Rust, and Binaryen as prerequisites.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/wasm/image-add-on/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building the Rust, Python, and WebAssembly Integration for Apps Script\nDESCRIPTION: Commands for installing dependencies and building the project. Requires Node.js, Rust, and Binaryen tools to be installed as prerequisites.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/wasm/python/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running ESLint Command for Repository\nDESCRIPTION: Shell command to run ESLint over the entire repository for code linting and automatic fixing of simple errors.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Calendar Timesheet Project Link\nDESCRIPTION: Markdown link to the official documentation on developers.google.com for the Calendar timesheet automation sample.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/calendar-timesheet/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Record time and activities in Calendar and Sheets\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/automations/calendar-timesheet) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Project Documentation Link in Markdown\nDESCRIPTION: Markdown link to the official Google Apps Script documentation for scheduling meetings through Google Chat\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/schedule-meetings/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Schedule meetings from Google Chat\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/chat-apps/schedule-meetings) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Linking to Google Apps Script Sample Documentation\nDESCRIPTION: This snippet provides a Markdown link to the Google Developers website where users can find additional details about the 'Respond to feedback' Apps Script sample.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/course-feedback-response/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Respond to feedback\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/automations/course-feedback-response) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Link in README\nDESCRIPTION: This snippet shows how to create a Markdown link to the official documentation for the equipment requests sample on the Google Developers website.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/equipment-requests/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[developers.google.com](https://developers.google.com/apps-script/samples/automations/equipment-requests)\n```\n\n----------------------------------------\n\nTITLE: Linking to Google Developers Documentation in Markdown\nDESCRIPTION: This snippet demonstrates how to create a hyperlink in Markdown format, directing users to the Google Developers website for more information about the timesheet automation script.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/timesheets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[developers.google.com](https://developers.google.com/apps-script/samples/automations/timesheets)\n```\n\n----------------------------------------\n\nTITLE: Referencing Google Apps Script Sample for Team Vacation Calendar\nDESCRIPTION: Markdown link to the Google Developers documentation page that contains additional details about the vacation calendar automation sample script.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/vacation-calendar/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Populate a team vacation calendar\n\nSee [developers.google.com](https://developers.google.com/apps-script/samples/automations/vacation-calendar) for additional details.\n```\n\n----------------------------------------\n\nTITLE: Referencing YouTube Tracker Sample in Markdown\nDESCRIPTION: This code snippet is a Markdown link that directs users to the Google Developers website for more information about the YouTube tracker Apps Script sample. It provides additional details and documentation for the script.\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/solutions/automations/youtube-tracker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[developers.google.com](https://developers.google.com/apps-script/samples/automations/youtube-tracker)\n```\n\n----------------------------------------\n\nTITLE: Forms API Documentation Link\nDESCRIPTION: A markdown link to the official Google Forms API documentation\nSOURCE: https://github.com/googleworkspace/apps-script-samples/blob/main/forms-api/snippets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Forms API](https://developers.google.com/forms/api/)\n```"
  }
]
[
  {
    "owner": "lucide-icons",
    "repo": "lucide",
    "content": "TITLE: Advanced Configuration with createIcons\nDESCRIPTION: Example showing how to use the createIcons function with additional options. Demonstrates how to add custom attributes like classes and adjust icon parameters such as stroke width and color.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport { createIcons } from 'lucide';\n\ncreateIcons({\n  attrs: {\n    class: ['my-custom-class', 'icon'],\n    'stroke-width': 1,\n    stroke: '#333'\n  },\n  nameAttr: 'data-lucide' // attribute for the icon name.\n});\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in Vue\nDESCRIPTION: Shows how to import and use Lucide icons in a Vue component. It demonstrates both default and named imports, and how to pass props for customization.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/how-to-use-icons.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\nimport { AlertTriangle } from 'lucide-vue-next';\nimport LucideSettings from 'lucide-vue-next/dist/esm/icons/settings';\n</script>\n\n<template>\n  <AlertTriangle color=\"red\" :size=\"48\" />\n  <LucideSettings color=\"blue\" :size=\"24\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in Svelte\nDESCRIPTION: Illustrates how to import and use Lucide icons in a Svelte component. It shows both default and named imports, and demonstrates passing props for customization.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/how-to-use-icons.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script>\nimport { AlertTriangle } from 'lucide-svelte';\nimport LucideSettings from 'lucide-svelte/dist/esm/icons/settings';\n</script>\n\n<AlertTriangle color=\"red\" size={48} />\n<LucideSettings color=\"blue\" size={24} />\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in React\nDESCRIPTION: Demonstrates how to import and use Lucide icons in a React component. It shows both default and named imports, as well as how to pass props for customization.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/how-to-use-icons.md#2025-04-10_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { AlertTriangle } from \"lucide-react\";\nimport LucideSettings from \"lucide-react/dist/esm/icons/settings\";\n\nconst App = () => {\n  return (\n    <div>\n      <AlertTriangle color=\"red\" size={48} />\n      <LucideSettings color=\"blue\" size={24} />\n    </div>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons with npm\nDESCRIPTION: Shows how to install Lucide icons using npm. This is a prerequisite step for using the icons in various JavaScript frameworks.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/how-to-use-icons.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install lucide\n```\n\n----------------------------------------\n\nTITLE: Using Lucide React Icons with Custom Props\nDESCRIPTION: Example of importing and using a Lucide React icon component (Camera) with custom color and size props. This demonstrates how to adjust the icon's appearance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Camera } from 'lucide-react';\n\n// Usage\nconst App = () => {\n  return <Camera color=\"red\" size={48} />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for React Applications\nDESCRIPTION: Commands to install the Lucide icon library for React applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-react\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Lucide Icons in Vue 3\nDESCRIPTION: Demonstrates how to import and use individual icons as Vue components with customizable props. This example shows importing the Camera icon and applying color and size attributes.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Camera } from 'lucide-vue-next';\n</script>\n\n<template>\n  <Camera\n    color=\"red\"\n    :size=\"32\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React with Package Managers\nDESCRIPTION: Commands for installing the Lucide React package using different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-react\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-react\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Lucide Icon in Svelte\nDESCRIPTION: Example of importing and using a Lucide icon component in a Svelte file.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import { Skull } from '@lucide/svelte';\n</script>\n\n<Skull />\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue Next with Package Managers\nDESCRIPTION: Shows different installation methods for adding lucide-vue-next to your project using various package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue Next with Package Managers\nDESCRIPTION: Shows different installation methods for adding lucide-vue-next to your project using various package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in Solid Components\nDESCRIPTION: Example of importing and using a Lucide icon component in a Solid application. Demonstrates passing props to customize the icon's appearance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Camera } from 'lucide-solid';\n\n// Usage\nconst App = () => {\n  return <Camera color=\"red\" size={48} />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue Using Package Managers\nDESCRIPTION: Different package manager commands to install lucide-vue dependency\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-vue\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue\n```\n\n----------------------------------------\n\nTITLE: Basic Lucide Icon Usage in Astro\nDESCRIPTION: Demonstrates the default usage of a Lucide icon in an Astro component by importing and using the Skull icon component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_1\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { Skull } from '@lucide/astro';\n---\n\n<Skull />\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte Package\nDESCRIPTION: Commands for installing the @lucide/svelte package using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun add @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte Package\nDESCRIPTION: Commands for installing the @lucide/svelte package using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @lucide/svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun add @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Using Lucide with ESModules\nDESCRIPTION: Examples showing how to implement Lucide using ESModules. Includes HTML markup with the data-lucide attribute and JavaScript code that imports and initializes icons, with both a comprehensive and recommended approach for tree-shaking.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!-- Your HTML file -->\n<i data-lucide=\"menu\"></i>\n```\n\nLANGUAGE: js\nCODE:\n```\nimport { createIcons, icons } from 'lucide';\n\n// Caution, this will import all the icons and bundle them.\ncreateIcons({ icons });\n\n// Recommended way, to include only the icons you need.\nimport { createIcons, Menu, ArrowRight, Globe } from 'lucide';\n\ncreateIcons({\n  icons: {\n    Menu,\n    ArrowRight,\n    Globe\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular Package\nDESCRIPTION: Package installation commands for different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm install lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm install lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nbun add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular Package\nDESCRIPTION: Package installation commands for different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm install lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn add lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm install lucide-angular\n```\n\nLANGUAGE: shell\nCODE:\n```\nbun add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Using lucide-static via CDN\nDESCRIPTION: HTML example showing how to use lucide-static directly from a CDN, including loading a single SVG icon and setting up the icon font.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- SVG file for a single icon -->\n<img src=\"https://unpkg.com/lucide-static@latest/icons/house.svg\" />\n\n<!-- Icon font -->\n<style>\n  @font-face {\n    font-family: 'LucideIcons';\n    src: url(https://unpkg.com/lucide-static@latest/font/Lucide.ttf) format('truetype');\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage with Unpkg CDN\nDESCRIPTION: Complete HTML example showing how to use Lucide icons with the unpkg CDN. The example demonstrates how to create icons using the data-lucide attribute and initialize them with the createIcons function.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<body>\n  <i data-lucide=\"volume-2\" class=\"my-class\"></i>\n  <i data-lucide=\"x\"></i>\n  <i data-lucide=\"menu\"></i>\n\n  <script src=\"https://unpkg.com/lucide@latest\"></script>\n  <script>\n    lucide.createIcons();\n  </script>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Preact using Package Managers\nDESCRIPTION: Shows how to install the Lucide Preact package using different package managers like pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Web Applications\nDESCRIPTION: Commands to install the Lucide icon library for web applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide\n```\n\n----------------------------------------\n\nTITLE: Including Lucide via CDN\nDESCRIPTION: HTML script tags to include Lucide library via CDN, with options for both development and production versions.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- Development version -->\n<script src=\"https://unpkg.com/lucide@latest/dist/umd/lucide.js\"></script>\n\n<!-- Production version -->\n<script src=\"https://unpkg.com/lucide@latest\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using Dynamic Icon Component in React\nDESCRIPTION: Example of using the DynamicIcon component to load icons dynamically by name. This is useful for applications that need to display icons based on data from a CMS or database.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { DynamicIcon } from 'lucide-react/dynamic';\n\nconst App = () => (\n  <DynamicIcon name=\"camera\" color=\"red\" size={48} />\n);\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide React Icons\nDESCRIPTION: Example showing how to apply SVG attributes as props to a Lucide React icon component. This demonstrates setting the size and fill color of the Camera icon.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// Usage\nconst App = () => {\n  return <Camera size={48} fill=\"red\" />;\n};\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide React Icons\nDESCRIPTION: Example showing how to apply SVG attributes as props to a Lucide React icon component. This demonstrates setting the size and fill color of the Camera icon.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// Usage\nconst App = () => {\n  return <Camera size={48} fill=\"red\" />;\n};\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide Icons\nDESCRIPTION: Shows how to use SVG presentation attributes as props for styling the icon. This example demonstrates applying a fill color to the Camera component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <Camera fill=\"red\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide Icons\nDESCRIPTION: Shows how to use SVG presentation attributes as props for styling the icon. This example demonstrates applying a fill color to the Camera component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <Camera fill=\"red\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Importing Lucide Icons Directly\nDESCRIPTION: Example of importing a Lucide icon directly from the icons directory for faster builds.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_3\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import CircleAlert from '@lucide/svelte/icons/circle-alert';\n</script>\n\n<CircleAlert color=\"#ff3e98\" />\n```\n\n----------------------------------------\n\nTITLE: Using the Generic Icon Component\nDESCRIPTION: Example showing how to use the generic icon component in a React Native application.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport Icon from './Icon';\n\nconst App = () => {\n  return <Icon name=\"home\" />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Solid with Package Managers\nDESCRIPTION: Commands for installing the lucide-solid package using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Customizing Icon Properties\nDESCRIPTION: Example of using props to customize icon appearance with size, color, and stroke width.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<i-lucide name=\"home\" [size]=\"48\" color=\"red\" [strokeWidth]=\"1\"></i-lucide>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Astro with Package Managers\nDESCRIPTION: Installation commands for adding the Lucide Astro package using different package managers. Includes options for pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide Icons in Preact\nDESCRIPTION: Shows how to apply SVG attributes directly to Lucide icon components in Preact, demonstrating the flexibility in styling SVG elements.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// Usage\nconst App = () => {\n  return <Camera fill=\"red\" stroke-linejoin=\"bevel\" />;\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide with Package Managers\nDESCRIPTION: Different commands to install the Lucide icon library using various package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide\n```\n\n----------------------------------------\n\nTITLE: Custom Element Binding with Attributes\nDESCRIPTION: Example showing how to create a Lucide icon with custom attributes such as classes and styling parameters, then add it to the DOM as a custom element.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nimport { createElement, Menu } from 'lucide';\n\nconst menuIcon = createElement(Menu, {\n  class: ['my-custom-class', 'icon'],\n  'stroke-width': 1,\n  stroke: '#333'\n}); // Returns HTMLElement (svg)\n\n// Append HTMLElement in the DOM\nconst myApp = document.getElementById('app');\nmyApp.appendChild(menuIcon);\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React Native Package\nDESCRIPTION: Package installation commands for different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install lucide-react-native\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add lucide-react-native\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install lucide-react-native\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun add lucide-react-native\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component\nDESCRIPTION: Example of using the Icon component to render a custom icon from Lucide lab. This demonstrates how to use icons that are not part of the main Lucide library.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Icon } from 'lucide-react';\nimport { burger } from '@lucide/lab';\n\nconst App = () => (\n  <Icon iconNode={burger} />\n);\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component\nDESCRIPTION: Example of using the Icon component to render a custom icon from Lucide lab. This demonstrates how to use icons that are not part of the main Lucide library.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react.md#2025-04-10_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Icon } from 'lucide-react';\nimport { burger } from '@lucide/lab';\n\nconst App = () => (\n  <Icon iconNode={burger} />\n);\n```\n\n----------------------------------------\n\nTITLE: Using the Icon Component with Lucide Lab\nDESCRIPTION: Demonstrates how to use the generic Icon component to render icons from Lucide lab. This approach allows using icons that are not part of the main library by passing the iconNode prop.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Icon } from 'lucide-vue-next';\nimport { burger } from '@lucide/lab';\n</script>\n\n<template>\n  <Icon :iconNode=\"burger\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using the Icon Component with Lucide Lab\nDESCRIPTION: Demonstrates how to use the generic Icon component to render icons from Lucide lab. This approach allows using icons that are not part of the main library by passing the iconNode prop.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Icon } from 'lucide-vue-next';\nimport { burger } from '@lucide/lab';\n</script>\n\n<template>\n  <Icon :iconNode=\"burger\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component in Preact\nDESCRIPTION: Demonstrates how to use the Icon component to render icons from Lucide lab or custom icons that are not part of the main Lucide library.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Icon } from 'lucide-preact';\nimport { burger } from '@lucide/lab';\n\nconst App = () => (\n  <Icon iconNode={burger} />\n);\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component\nDESCRIPTION: Example of using the Icon component to render icons from Lucide lab or custom icons.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_9\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\nimport { Icon } from '@lucide/svelte';\nimport { burger, sausage } from '@lucide/lab';\n</script>\n\n<Icon iconNode={burger} />\n<Icon iconNode={sausage} color=\"red\"/>\n```\n\n----------------------------------------\n\nTITLE: Vue Component Template Structure\nDESCRIPTION: Defines the template structure for the icon detail page, including preview sections, metadata, and code examples.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/[name].md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<div :class=\"$style.layout\">\n  <div :class=\"$style.iconPreviews\">\n    <IconPreview\n      id=\"previewer\"\n      :name=\"params.name\"\n      :iconNode=\"params.iconNode\"\n      :class=\"$style.preview\"\n    />\n    <IconPreviewSmall\n      :name=\"params.name\"\n      :iconNode=\"params.iconNode\"\n       :class=\"$style.smallPreview\"\n    />\n  </div>\n  <!-- Additional template content -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using SVG Files as Images in HTML\nDESCRIPTION: HTML example showing how to include an SVG icon as an image element.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!-- SVG file for a single icon -->\n<img src=\"~lucide-static/icons/house.svg\" />\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons\nDESCRIPTION: Example of importing and using icons from Lucide lab collection.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { LucideAngularModule } from 'lucide-angular';\nimport { burger } from '@lucide/lab';\n\n@NgModule({\n  imports: [\n    LucideAngularModule.pick({ burger })\n  ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Using the SVG Sprite in HTML\nDESCRIPTION: HTML examples showing how to use the SVG sprite, including direct image reference and SVG use element.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<!-- Icon Sprite, not recommended for production! -->\n<img src=\"lucide-static/sprite.svg#house\" />\n\n<!-- or -->\n<svg\n  width=\"24\"\n  height=\"24\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-width=\"2\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n>\n  <use href=\"#alert-triangle\" />\n</svg>\n\n<svg>\n  ...sprite svg\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Using the Generic Icon Component in Preact\nDESCRIPTION: Demonstrates how to use the generic Icon component to render a specific Lucide icon (home) in a Preact application.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport Icon from './Icon';\n\nconst App = () => {\n  return <Icon name=\"home\" />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab for Extended Icons\nDESCRIPTION: Example showing how to use icons from Lucide lab, which is a collection of additional icons not included in the main Lucide library. Demonstrates the same implementation pattern as standard icons.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nimport { burger } from '@lucide/lab';\n\ncreateIcons({\n  icons: {\n    burger\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons with Vanilla JavaScript\nDESCRIPTION: Demonstrates how to use Lucide icons with vanilla JavaScript. It shows how to create an icon element, set attributes, and append it to the DOM.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/how-to-use-icons.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createIcons, AlertTriangle } from 'lucide';\n\n// Creates an icon and appends it to the body\nconst icon = AlertTriangle.toSvg({\n  color: 'red',\n  size: 48\n});\ndocument.body.innerHTML += icon;\n\n// Replaces all placeholder elements that have the data-lucide attribute\ncreateIcons({\n  icons: {\n    AlertTriangle\n  },\n  nameAttr: 'data-lucide' // attribute to use for icon name, optional\n  attrs: {  // attributes to add to all icons, optional\n    'stroke-width': 1.5\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Installing lucide-static with Various Package Managers\nDESCRIPTION: Code snippets showing how to install the lucide-static package using different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-static\n```\n\n----------------------------------------\n\nTITLE: Customizing Lucide Icon with Props\nDESCRIPTION: Demonstration of passing additional props to customize the appearance of a Lucide icon.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import { Camera } from '@lucide/svelte';\n</script>\n\n<Camera color=\"#ff3e98\" />\n```\n\n----------------------------------------\n\nTITLE: Installing lucide-static with Various Package Managers\nDESCRIPTION: Code snippets showing how to install the lucide-static package using different package managers including pnpm, yarn, npm, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-static\n```\n\n----------------------------------------\n\nTITLE: Using the Generic Icon Component\nDESCRIPTION: Example of how to use the generic Icon component by passing the icon name as a prop, despite its performance implications.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_8\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport LucideIcon from './LucideIcon.astro';\n---\n\n<LucideIcon name=\"Menu\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Lucide Icons Directly from Directory\nDESCRIPTION: Alternative method of importing Lucide icons directly from the icons directory to resolve potential Vite loading issues.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Camera from 'lucide-solid/icons/camera';\n\n// Usage\nconst App = () => {\n  return <Camera color=\"red\" size={48} />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Using SVG Files as Background Images in CSS\nDESCRIPTION: CSS example showing how to use an SVG icon as a background image.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.house-icon {\n  background-image: url(~lucide-static/icons/house.svg);\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Lucide Icons with Props in Astro\nDESCRIPTION: Shows how to pass additional props to customize a Lucide icon, specifically changing the color of a Camera icon.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_2\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { Camera } from '@lucide/astro';\n---\n\n<Camera color=\"#ff3e98\" />\n```\n\n----------------------------------------\n\nTITLE: Importing SVG Files as Strings in JavaScript\nDESCRIPTION: JavaScript example showing how to import an SVG icon as a string.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport arrowRightIcon from 'lucide-static/icons/arrow-right';\n\n// return string of an SVG\n```\n\n----------------------------------------\n\nTITLE: Custom Element Binding with Lucide\nDESCRIPTION: Example of how to create and bind a Lucide icon as a custom HTML element. Shows how to generate an SVG element programmatically and append it to the DOM.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nimport { createElement, Menu } from 'lucide';\n\nconst menuIcon = createElement(Menu); // Returns HTMLElement (svg)\n\n// Append HTMLElement in the DOM\nconst myApp = document.getElementById('app');\nmyApp.appendChild(menuIcon);\n```\n\n----------------------------------------\n\nTITLE: Using CSS-defined SVG Properties with XML\nDESCRIPTION: XML example showing how to use CSS-defined properties with SVG elements.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  class=\"lucide-icon\"\n>\n<use\n    href=\"#alert-triangle\"\n  />\n</svg>\n<svg>\n  ...sprite svg\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Custom Props Application for Lucide Icons\nDESCRIPTION: Example demonstrating how to apply custom SVG attributes as props to a Lucide icon component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// Usage\nconst App = () => {\n  return <Camera fill=\"red\" />;\n};\n```\n\n----------------------------------------\n\nTITLE: Importing Icon Font with CSS\nDESCRIPTION: CSS example showing how to import the Lucide icon font.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n@import ('~lucide-static/font/lucide.css');\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React Native with npm\nDESCRIPTION: Command to install the Lucide React Native package using npm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react-native/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-react-native\n```\n\n----------------------------------------\n\nTITLE: Configuring Standalone Component\nDESCRIPTION: Implementation example for using Lucide icons in a standalone Angular component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Component } from '@angular/core';\nimport { LucideAngularModule, FileIcon } from 'lucide-angular';\n\n@Component({\n  standalone: true,\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  imports: [LucideAngularModule]\n})\nexport class AppComponent {\n  readonly FileIcon = FileIcon;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Icon Font in HTML\nDESCRIPTION: HTML example showing how to use the Lucide icon font.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"icon-house\"></div>\n```\n\n----------------------------------------\n\nTITLE: Creating JSON Metadata for Lucide Icons\nDESCRIPTION: This JSON template specifies the metadata structure for each Lucide icon, including contributors, tags, and categories. It uses a schema for validation and standardization.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/icon-design-guide.md#2025-04-10_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"$schema\": \"../icon.schema.json\",\n  \"contributors\": [\n    \"github-username\",\n    \"another-github-username\"\n  ],\n  \"tags\": [\n    \"foo\",\n    \"bar\"\n  ],\n  \"categories\": [\n    \"devices\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Frame Size in Figma for Lucide Icons\nDESCRIPTION: Instructions for creating a 24x24 pixel frame in Figma for designing individual icons. This frame size is crucial for maintaining consistency with the Featherity design guidelines.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/figma-guide.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Click the frame button (or press `F`)\n2. Draw a 24x24 frame (or edit it afterwards from the design window)\n```\n\n----------------------------------------\n\nTITLE: Applying Custom SVG Attributes to Lucide Icon\nDESCRIPTION: Example of passing SVG attributes as props to customize the icon's appearance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_4\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import { Phone } from '@lucide/svelte';\n</script>\n\n<Phone fill=\"#333\" />\n```\n\n----------------------------------------\n\nTITLE: Exporting Lucide Icons from Figma\nDESCRIPTION: Steps to export the completed icon from Figma as an SVG file. This process ensures the icon is saved in the correct format for use in the Lucide project.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/figma-guide.md#2025-04-10_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Select the frame\n2. Open the *Export* tab on the right\n3. Set the file type as SVG\n4. Press export\n```\n\n----------------------------------------\n\nTITLE: Applying Custom SVG Attributes to Lucide Icons\nDESCRIPTION: Example of passing custom SVG attributes as props to a Lucide icon component for flexible styling.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n// Usage\nconst App = () => {\n  return <Camera fill=\"red\" stroke-linejoin=\"bevel\" />;\n};\n```\n\n----------------------------------------\n\nTITLE: Copying Lucide Icons as SVG from Figma\nDESCRIPTION: Alternative method to export the icon by copying its source as SVG directly from Figma. This allows for quick integration into other workflows or documents.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/figma-guide.md#2025-04-10_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n1. Select the frame\n2. Right click it\n3. Click on *Copy/Paste as*\n4. Click on *Copy as SVG*\n```\n\n----------------------------------------\n\nTITLE: Direct Icon Import for Optimized Performance\nDESCRIPTION: Demonstrates importing icons directly from the icons directory for faster builds and load times, showing the CircleAlert icon as an example.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_3\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport CircleAlert from '@lucide/astro/icons/circle-alert';\n---\n\n<CircleAlert color=\"#ff3e98\" />\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Absolute Stroke Width Styling with Sandpack in Vue\nDESCRIPTION: This snippet uses the Sandpack component to create an interactive example of absolute stroke width styling for icons in React. It includes the necessary setup and dependencies.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/global-styling.md#2025-04-10_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<Sandpack\n  template=\"react\"\n  :theme=\"sandpackTheme\"\n  :files=\"globalAbsoluteStrokewidthExample\"\n  :customSetup='{\n    dependencies: {\n      \"lucide-react\": \"latest\"\n    }\n  }'\n  :options=\"{\n    editorHeight: 300,\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Generic Icon Component Implementation\nDESCRIPTION: Example of creating a generic icon component that can load any Lucide icon dynamically, with a warning about bundle size implications.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { icons } from 'lucide-react-native';\n\nconst Icon = ({ name, color, size }) => {\n  const LucideIcon = icons[name];\n\n  return <LucideIcon color={color} size={size} />;\n};\n\nexport default Icon;\n```\n\n----------------------------------------\n\nTITLE: Creating Accessible Icons with Bootstrap\nDESCRIPTION: This HTML snippet demonstrates how to create an accessible icon using Bootstrap's visually-hidden class for screen readers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/accessibility.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div>\n  <i data-lucide=\"phone\" aria-hidden=\"true\"></i>\n  <span class=\"visually-hidden\">Phone number</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in Templates\nDESCRIPTION: HTML template examples showing different ways to include Lucide icons using component tags.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<lucide-angular name=\"file\" class=\"my-icon\"></lucide-angular>\n<lucide-icon name=\"home\" class=\"my-icon\"></lucide-icon>\n<i-lucide name=\"menu\" class=\"my-icon\"></i-lucide>\n<span-lucide name=\"user-check\" class=\"my-icon\"></span-lucide>\n```\n\nLANGUAGE: html\nCODE:\n```\n<lucide-angular [img]=\"FileIcon\" class=\"my-icon\"></lucide-angular>\n<lucide-icon [img]=\"FileIcon\" class=\"my-icon\"></lucide-icon>\n<i-lucide [img]=\"FileIcon\" class=\"my-icon\"></i-lucide>\n<span-lucide [img]=\"FileIcon\" class=\"my-icon\"></span-lucide>\n```\n\n----------------------------------------\n\nTITLE: Disabling IDE Autocompletion for Lucide Imports\nDESCRIPTION: Configuration for VSCode that turns off autocompletion for Lucide packages to prevent automatic imports with default naming styles.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"typescript.preferences.autoImportFileExcludePatterns\": [\n    \"lucide-react\", // or\n    \"lucide-preact\", // or\n    \"lucide-react-native\", // or\n    \"lucide-vue-next\",\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Base SVG Properties with CSS\nDESCRIPTION: CSS example showing how to define base properties for SVG icons.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n.lucide-icon {\n  width: 24px;\n  height: 24px;\n  stroke: currentColor;\n  fill: none;\n  stroke-width: 2;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Module Declaration for Vue Import Styles\nDESCRIPTION: TypeScript declaration file for customizing Lucide import name styles in Vue applications, allowing either prefixed or suffixed naming conventions.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\ndeclare module \"lucide-vue-next\" {\n  // Prefixed import names\n  export * from \"lucide-vue-next/dist/lucide-vue-next.prefixed\";\n  // or\n  // Suffixed import names\n  export * from \"lucide-vue-next/dist/lucide-vue-next.suffixed\";\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Integration with Lucide Icons in Svelte 4\nDESCRIPTION: Example of using Lucide icons with TypeScript in Svelte 4, demonstrating type-safe icon usage with svelte:component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_6\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\"ts\">\n  import { Home, Library, Cog, type Icon } from '@lucide/svelte';\n  import type { ComponentType } from 'svelte';\n\n  type MenuItem = {\n    name: string;\n    href: string;\n    icon: ComponentType<Icon>;\n  };\n\n  const menuItems: MenuItem[] = [\n    {\n      name: 'Home',\n      href: '/',\n      icon: Home\n    },\n    {\n      name: 'Blog',\n      href: '/blog',\n      icon: Library\n    },\n    {\n      name: 'Projects',\n      href: '/projects',\n      icon: Cog\n    }\n  ];\n</script>\n\n{#each menuItems as item}\n  <a href={item.href}>\n    <svelte:component this={item.icon} />\n    <span>{item.name}</span>\n  </a>\n{/each}\n```\n\n----------------------------------------\n\nTITLE: Importing Sandpack Components and Configuration Files\nDESCRIPTION: Setup script that imports necessary components from sandpack-vue3 and local configuration files for demo examples.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/basics/color.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Sandpack } from 'sandpack-vue3'\nimport sandpackTheme from '../../.vitepress/theme/sandpackTheme.json'\nimport buttonExampleFiles from './examples/button-example/files.ts'\nimport iconColorExampleFiles from './examples/color-icon/files.ts'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using the Generic Icon Component in Solid\nDESCRIPTION: Example of using the custom generic Icon component to render a Lucide icon by name.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport Icon from './Icon';\n\nconst App = () => {\n  return <Icon name=\"home\" />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Vue Component Setup and Imports\nDESCRIPTION: Initializes Vue component dependencies and utility functions for icon name formatting and version comparison.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/[name].md#2025-04-10_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<script setup>\nimport { computed } from 'vue'\nimport { useData } from 'vitepress'\nimport IconPreview from '~/.vitepress/theme/components/icons/IconPreview.vue'\nimport IconPreviewSmall from '~/.vitepress/theme/components/icons/IconPreviewSmall.vue'\nimport IconInfo from '~/.vitepress/theme/components/icons/IconInfo.vue'\nimport IconContributors from '~/.vitepress/theme/components/icons/IconContributors.vue'\nimport IconShowcase from '~/.vitepress/theme/components/icons/IconShowcase.vue'\nimport RelatedIcons from '~/.vitepress/theme/components/icons/RelatedIcons.vue'\nimport CodeGroup from '~/.vitepress/theme/components/base/CodeGroup.vue'\nimport Badge from '~/.vitepress/theme/components/base/Badge.vue'\nimport Label from '~/.vitepress/theme/components/base/Label.vue'\nimport { data } from './codeExamples.data'\nimport { toCamelCase, toPascalCase } from '@lucide/shared'\nimport { satisfies } from 'semver'\n```\n\n----------------------------------------\n\nTITLE: Dynamic Icon Rendering with TypeScript\nDESCRIPTION: Demonstrates how to use TypeScript types with Lucide icons to create a dynamic menu system with different icons for each menu item.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_5\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { Home, Library, Cog, type Icon as IconType } from '@lucide/astro';\n\ntype MenuItem = {\n  name: string;\n  href: string;\n  icon: typeof IconType;\n};\n\nconst menuItems: MenuItem[] = [\n  {\n    name: 'Home',\n    href: '/',\n    icon: Home,\n  },\n  {\n    name: 'Blog',\n    href: '/blog',\n    icon: Library,\n  },\n  {\n    name: 'Projects',\n    href: '/projects',\n    icon: Cog,\n  },\n];\n---\n\n{\n  menuItems.map((item) => (\n    <a href={item.href}>\n      <item.icon />\n      <span>{item.name}</span>\n    </a>\n  ))\n}\n```\n\n----------------------------------------\n\nTITLE: CSS Styling Module\nDESCRIPTION: Defines responsive CSS styles for the icon detail page layout, including grid structure and media queries for different screen sizes.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/[name].md#2025-04-10_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n<style module>\n  .preview {\n    grid-area: preview;\n    margin-bottom: 24px;\n    max-width: 240px;\n    width: 240px;\n    flex-shrink: 0;\n  }\n\n  .layout {\n    align-items: flex-start;\n  }\n\n  /* Additional styles */\n</style>\n```\n\n----------------------------------------\n\nTITLE: Styling Icons with CSS\nDESCRIPTION: CSS example for styling Lucide icons using custom classes.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_5\n\nLANGUAGE: css\nCODE:\n```\nsvg.my-icon {\n    width: 12px;\n    height: 12px;\n    stroke-width: 3;\n}\n```\n\n----------------------------------------\n\nTITLE: Including External Markdown Content\nDESCRIPTION: HTML comment directive to include external markdown content from a parent directory using a dynamic name variable.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/lab/[name].md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!--@include: ../[name].md -->\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Icon Buttons in React with TSX\nDESCRIPTION: This snippet demonstrates correct and incorrect ways to implement accessible icon buttons using React components. It shows how to properly use aria-label and visually hidden text for accessibility.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/accessibility.md#2025-04-10_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n// Don't do this\n<button>\n  <Plus aria-label=\"Plus icon\"/>\n  Add document\n</button>\n\n// Do this, just leave it\n<button>\n  <Plus/>\n  Add document\n</button>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n// Don't do this\n<button class=\"btn-icon\">\n  <Home/>\n</button>\n\n// Don't do this either\n<button class=\"btn-icon\">\n  <Home aria-label=\"Home icon\"/>\n</button>\n\n// This works but might not be the best solution, see below\n<button aria-label=\"Go to home\" class=\"btn-icon\">\n  <Home/>\n</button>\n\n// Do this instead\n<button class=\"btn-icon\">\n  <Home/>\n  <span class=\"visually-hidden\">Go to home</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Vue Component Setup with Icon Integration\nDESCRIPTION: Sets up a Vue component that imports icons data and custom components for displaying an icon overview. Uses composables to handle external library integration.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/index.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { computed } from 'vue'\nimport { data } from './icons.data.ts'\nimport IconsOverview from '~/.vitepress/theme/components/icons/IconsOverview.vue'\nimport PageContainer from '~/.vitepress/theme/components/PageContainer.vue'\nimport useIconsWithExternalLibs from '~/.vitepress/theme/composables/useIconsWithExternalLibs'\n\nconst icons = useIconsWithExternalLibs(data.icons)\n</script>\n\n<div class=\"VPDoc content\">\n  <PageContainer>\n    <IconsOverview :icons=\"icons\" />\n  </PageContainer>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Radix UI's Accessible Icon Component in React\nDESCRIPTION: This example shows how to use Radix UI's AccessibleIcon component to create an accessible icon with a label in a React application.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/accessibility.md#2025-04-10_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ArrowRightIcon } from 'lucide-react';\nimport { AccessibleIcon } from '@radix-ui/react-accessible-icon';\n\n<AccessibleIcon label=\"Next item\">\n  <ArrowRightIcon />\n</AccessibleIcon>\n```\n\n----------------------------------------\n\nTITLE: Rendering Lucide Icons Categories UI with Vue Components\nDESCRIPTION: This HTML/Vue template renders the icon categories overview by using custom components. It creates a structured layout with VPDoc and PageContainer components and passes the necessary data props to the IconsCategoryOverview component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/categories.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<div class=\"VPDoc content\">\n  <PageContainer>\n    <IconsCategoryOverview\n      :categories=\"categoriesData.categories\"\n      :icons=\"icons\"\n      :iconCategories=\"categoriesData.iconCategories\"\n    />\n  </PageContainer>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Icons with Tailwind CSS\nDESCRIPTION: This HTML example shows how to create an accessible icon using Tailwind CSS's sr-only class for screen reader text.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/accessibility.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div>\n  <i data-lucide=\"phone\" aria-hidden=\"true\"></i>\n  <span class=\"sr-only\">Phone number</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting up Vue components for Lucide Showcase\nDESCRIPTION: Imports the PageContainer and ShowcaseList Vue components to be used in the page layout.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/showcase.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport PageContainer from '.vitepress/theme/components/PageContainer.vue'\nimport ShowcaseList from '.vitepress/theme/components/showcase/ShowcaseList.vue'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing Icons with Different Name Styles in React\nDESCRIPTION: Demonstrates how the same icon can be imported using different naming conventions in Lucide, including the standard name, suffixed name, and prefixed name.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n// These are all the same icon\nimport {\n  Home,\n  HomeIcon,\n  LucideHome,\n} from \"lucide-react\";\n```\n\n----------------------------------------\n\nTITLE: Rendering Lucide Showcase page structure\nDESCRIPTION: Defines the HTML structure for the showcase page, using the imported Vue components within a content container.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/showcase.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"VPDoc content\">\n  <PageContainer>\n    <ShowcaseList />\n  </PageContainer>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Module Declaration for React Import Styles\nDESCRIPTION: TypeScript declaration file for customizing Lucide import name styles in React applications, allowing either prefixed or suffixed naming conventions.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\ndeclare module \"lucide-react\" {\n  // Prefixed import names\n  export * from \"lucide-react/dist/lucide-react.prefixed\";\n  // or\n  // Suffixed import names\n  export * from \"lucide-react/dist/lucide-react.suffixed\";\n}\n```\n\n----------------------------------------\n\nTITLE: Styling the Lucide Showcase container\nDESCRIPTION: Applies CSS styling to the container element, setting maximum width and centering it on the page.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/showcase.md#2025-04-10_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n<style scoped>\n.container {\n  margin: 0 auto;\n  max-width: 1200px;\n}\n</style>\n```\n\n----------------------------------------\n\nTITLE: Custom Module Declaration for Preact Import Styles\nDESCRIPTION: TypeScript declaration file for customizing Lucide import name styles in Preact applications, allowing either prefixed or suffixed naming conventions.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\ndeclare module \"lucide-preact\" {\n  // Prefixed import names\n  export * from \"lucide-preact/dist/lucide-preact.prefixed\";\n  // or\n  // Suffixed import names\n  export * from \"lucide-preact/dist/lucide-preact.suffixed\";\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Frontmatter in Lucide Icons Documentation\nDESCRIPTION: Sets up the VitePress page configuration with layout specification and outline parameters for the packages page.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/packages.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: page\noutline: 2\noutlineTitle: Packages\n---\n```\n\n----------------------------------------\n\nTITLE: Custom Module Declaration for React Native Import Styles\nDESCRIPTION: TypeScript declaration file for customizing Lucide import name styles in React Native applications, allowing either prefixed or suffixed naming conventions.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/aliased-names.md#2025-04-10_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\ndeclare module \"lucide-react-native\" {\n  // Prefixed import names\n  export * from \"lucide-react-native/dist/lucide-react-native.prefixed\";\n  // or\n  // Suffixed import names\n  export * from \"lucide-react-native/dist/lucide-react-native.suffixed\";\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Vue Components for Packages Page\nDESCRIPTION: Sets up the script section that imports necessary Vue components for the packages page, including a PageContainer and the PackageList component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/packages.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport PageContainer from '.vitepress/theme/components/PageContainer.vue'\nimport PackageList from '.vitepress/theme/components/packages/PackageList.vue'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Sandpack Examples for Lucide Icons in Vue\nDESCRIPTION: Initial setup script that imports Sandpack components and example files to demonstrate different icon sizing techniques in Lucide icons.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/basics/sizing.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Sandpack } from 'sandpack-vue3'\nimport sandpackTheme from '../../.vitepress/theme/sandpackTheme.json'\nimport sizeIconExample from './examples/size-icon-example/files.ts'\nimport sizeIconCssExample from './examples/size-icon-css-example/files.ts'\nimport sizeIconFontExample from './examples/size-icon-font-example/files.ts'\nimport sizeIconTailwind from './examples/size-icon-tailwind-example/files.ts'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Structuring the Packages Page Layout in HTML\nDESCRIPTION: Defines the HTML structure for the packages page using VitePress document container and custom components for content organization.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/packages.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"VPDoc content\">\n  <PageContainer>\n    <PackageList />\n  </PageContainer>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Stroke Width Documentation in Vue\nDESCRIPTION: Setup script for a Vue component that imports Sandpack for displaying interactive code examples and various configuration files for stroke width demonstrations.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/basics/stroke-width.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Sandpack } from 'sandpack-vue3'\nimport sandpackTheme from '../../.vitepress/theme/sandpackTheme.json'\nimport strokeWidth from './examples/stroke-width-icon/files.ts'\nimport absoluteStrokeWidth from './examples/absolute-stroke-width-icon/files.ts'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring VitePress Homepage Layout in YAML\nDESCRIPTION: YAML configuration for the VitePress homepage layout including head metadata, hero section settings, and feature descriptions with associated icons.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/index.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlayout: home\nmarkdownStyles: false\n\nhead:\n  - - link\n    - rel: canonical\n      content: https://lucide.dev/\n\nhero:\n  name: |\n    Beautiful &\n    consistent icons\n  tagline: Made by the community.\n  image:\n    src: /favicon.svg\n    alt: VueUse\n  actions:\n    - theme: brand\n      text: View all icons\n      link: icons/\n    - theme: alt\n      text: Get Started\n      link: guide/\n    - theme: alt\n      text: GitHub\n      link: https://github.com/lucide-icons/lucide\n```\n\n----------------------------------------\n\nTITLE: Importing Components and Examples in Vue\nDESCRIPTION: This snippet sets up the necessary imports for the Vue component, including Sandpack for code examples and custom theme and example files.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/global-styling.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Sandpack } from 'sandpack-vue3'\nimport sandpackTheme from '../../.vitepress/theme/sandpackTheme.json'\nimport globalIconCssExample from './examples/global-styling-css-example/files.ts'\nimport globalAbsoluteStrokewidthExample from './examples/global-styling-absolute-strokewidth-example/files.ts'\n\n</script>\n```\n\n----------------------------------------\n\nTITLE: Vue Component Import Setup\nDESCRIPTION: Script setup block importing Vue components used in the homepage layout.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/index.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport HomePackagesSection from './.vitepress/theme/components/home/HomePackagesSection.vue'\nimport HomeIconCustomizer from './.vitepress/theme/components/home/HomeIconCustomizer.vue'\nimport HomeTeamSection from './.vitepress/theme/components/home/HomeTeamSection.vue'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Global Icon CSS Styling with Sandpack in Vue\nDESCRIPTION: This snippet shows how to use the Sandpack component to create an interactive example of global icon CSS styling in React. It sets up dependencies and configuration options for the example.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/global-styling.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<Sandpack\n  template=\"react\"\n  :theme=\"sandpackTheme\"\n  :files=\"globalIconCssExample\"\n  :customSetup='{\n    dependencies: {\n      \"lucide-react\": \"latest\"\n    }\n  }'\n  :options=\"{\n    editorHeight: 300,\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Homepage Component Layout Structure\nDESCRIPTION: HTML structure defining the layout of main homepage components.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/index.md#2025-04-10_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<HomePackagesSection />\n<HomeIconCustomizer />\n<HomeTeamSection />\n```\n\n----------------------------------------\n\nTITLE: Vue Component Import Setup\nDESCRIPTION: Script setup block importing Sandpack component and related configuration files for the documentation example.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/filled-icons.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { Sandpack } from 'sandpack-vue3'\nimport sandpackTheme from '../../.vitepress/theme/sandpackTheme.json'\nimport sizeIconExample from './examples/filled-icon-example/files.ts'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Lucide Docs\nDESCRIPTION: Command to install project dependencies using pnpm package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Install dependencies\npnpm install\n```\n\n----------------------------------------\n\nTITLE: HTML Logo and Badge Display Structure\nDESCRIPTION: HTML structure for displaying the Lucide logo, badges, and navigation links in the repository README.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/README.md#2025-04-10_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/lucide-icons/lucide#gh-light-mode-only\">\n    <img src=\"https://lucide.dev/lucide-logo-repo.svg#gh-light-mode-only\" alt=\"Lucide - Beautiful & consistent icon toolkit made by the community. Open-source project and a fork of Feather Icons.\" width=\"480\">\n  </a>\n  <a href=\"https://github.com/lucide-icons/lucide#gh-dark-mode-only\">\n    <img src=\"https://lucide.dev/lucide-logo-repo-dark.svg#gh-dark-mode-only\" alt=\"Lucide - Beautiful & consistent icon toolkit made by the community. Open-source project and a fork of Feather Icons.\" width=\"480\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Sandpack Component Implementation\nDESCRIPTION: Vue template implementation of Sandpack component for demonstrating filled icons usage with React. Configures dependencies, theme, and layout options.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/advanced/filled-icons.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<Sandpack\n  template=\"react\"\n  :theme=\"sandpackTheme\"\n  :files=\"sizeIconExample\"\n  :customSetup='{\n    dependencies: {\n      \"lucide-react\": \"latest\"\n    }\n  }'\n  :options=\"{\n    editorHeight: 480,\n    editorWidthPercentage: 60,\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Building Documentation Site\nDESCRIPTION: Command to build the documentation site for production deployment\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Build docs\npnpm docs:build\n```\n\n----------------------------------------\n\nTITLE: Defining Global SVG Attributes for Lucide Icons\nDESCRIPTION: This XML snippet demonstrates the standard attributes applied to all Lucide icons, including viewport size, stroke properties, and fill settings.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/icon-design-guide.md#2025-04-10_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-width=\"2\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n>\n  <!-- SVGElements -->\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Building a Specific Lucide Package\nDESCRIPTION: Command to build a specific package within the Lucide project. This script includes cleaning the dist directory, generating icon files, types, and building for each format.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/CONTRIBUTING.md#2025-04-10_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\npnpm [package-name] build\n```\n\n----------------------------------------\n\nTITLE: Configuring Pen Tool Settings in Figma for Lucide Icons\nDESCRIPTION: Specific settings for the pen tool in Figma to ensure the icon design aligns with the Feather Icons style. These settings include vector corner radius and stroke properties.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/design/figma-guide.md#2025-04-10_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSet the following:\n1. Vector\n   1. Corner radius: 2px\n2. Stroke\n   1. Stroke width: 2px\n   2. Stroke alignment: center\n```\n\n----------------------------------------\n\nTITLE: Running Tests for a Lucide Package\nDESCRIPTION: Command to run unit tests with Jest for a specific package in the Lucide project. This ensures that package APIs work as expected.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/CONTRIBUTING.md#2025-04-10_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\npnpm [package-name] test\n```\n\n----------------------------------------\n\nTITLE: Setting up Vue components and data for Lucide Icons Categories\nDESCRIPTION: This script block initializes the necessary data and components for displaying icon categories in a Lucide Icons page. It imports data from external TypeScript files, imports custom Vue components, and sets up the icons with external libraries using a custom composable.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/categories.md#2025-04-10_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { data } from './icons.data.ts'\nimport { data as categoriesData } from './categories.data.ts'\nimport PageContainer from '../.vitepress/theme/components/PageContainer.vue'\nimport IconsCategoryOverview from '../.vitepress/theme/components/icons/IconsCategoryOverview.vue'\nimport useIconsWithExternalLibs from '~/.vitepress/theme/composables/useIconsWithExternalLibs'\n\nconst icons = useIconsWithExternalLibs(data.icons)\n</script>\n```\n\n----------------------------------------\n\nTITLE: Running Test Watcher for Lucide Package Development\nDESCRIPTION: Command to run the test watcher for a specific package, which is recommended when making changes to ensure continuous testing.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/CONTRIBUTING.md#2025-04-10_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\npnpm [package-name] test:watch\n```\n\n----------------------------------------\n\nTITLE: Configuring VitePress Page Layout with YAML Frontmatter\nDESCRIPTION: YAML frontmatter configuration that disables various page elements like footer, edit links, and navigation while enabling the sidebar.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/icons/lab/[name].md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: doc\nfooter: false\naside: false\neditLink: false\nnext: false\nprev: false\nsidebar: true\n---\n```\n\n----------------------------------------\n\nTITLE: Linking Lucide Package for Local Testing\nDESCRIPTION: Commands to build and link a Lucide package (e.g., lucide-react) for local testing in another project. This allows testing of changes before publishing.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/CONTRIBUTING.md#2025-04-10_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n# in packages/lucide-react\n\nnpm run build &&\nnpm link\n\n# in your local project\n\nnpm link lucide-react\n```\n\n----------------------------------------\n\nTITLE: Styling the Packages Page Container with CSS\nDESCRIPTION: Applies scoped CSS styling to the page container, setting maximum width and centering the content for optimal display of the packages list.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/packages.md#2025-04-10_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n<style scoped>\n.container {\n  margin: 0 auto;\n  max-width: 1200px;\n}\n\n</style>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React with PNPM\nDESCRIPTION: Command to install the Lucide React package using PNPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-react\n```\n\n----------------------------------------\n\nTITLE: Including LICENSE File in VitePress Markdown\nDESCRIPTION: This snippet demonstrates how to include an external file (LICENSE) into a VitePress markdown page using the @include directive. The directive is placed within HTML comments to be processed by VitePress's build system.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/license.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!--@include: ../LICENSE -->\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React with NPM\nDESCRIPTION: Command to install the Lucide React package using NPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-react\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Lucide Icons Documentation\nDESCRIPTION: This YAML front matter sets the 'aside' property to false, likely used to control the layout or display of the contributing guidelines page.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/contributing.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\naside: false\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with Yarn\nDESCRIPTION: Command to install the lucide-vue-next package using Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue-next/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Building API Server\nDESCRIPTION: Command to build the API server for production deployment\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# Build api\npnpm build:api\n```\n\n----------------------------------------\n\nTITLE: Including External Contributing Guidelines in HTML\nDESCRIPTION: This HTML comment includes the content of the CONTRIBUTING.md file from the parent directory, allowing for centralized maintenance of contributing guidelines across the project.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/contributing.md#2025-04-10_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!--@include: ../CONTRIBUTING.md -->\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with Bun\nDESCRIPTION: Command to install the lucide-vue-next package using Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue-next/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Starting Development Servers\nDESCRIPTION: Commands to start both the documentation and API development servers using pnpm\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Start docs dev server\npnpm docs:dev\n\n# Start api dev server\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with Yarn\nDESCRIPTION: Command to install the Lucide Vue package using Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM for Lucide Development\nDESCRIPTION: Command to install project dependencies using PNPM, including workspace packages. This is a crucial first step for setting up the development environment for Lucide.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/CONTRIBUTING.md#2025-04-10_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with pnpm\nDESCRIPTION: Command to install the Lucide Svelte icon library using the pnpm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-svelte/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons via NPM\nDESCRIPTION: Command to install the Lucide icon library using NPM package manager. This is the primary installation method for JavaScript/Node.js projects.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/comment-markup.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with npm\nDESCRIPTION: Command to install the Lucide Svelte icon library using the npm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-svelte/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons via PNPM\nDESCRIPTION: Command to install the Lucide icon library using PNPM package manager as another alternative installation method.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/comment-markup.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular with PNPM\nDESCRIPTION: Command to install Lucide Angular package using PNPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-angular/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons via CDN\nDESCRIPTION: HTML script tag for importing Lucide icons library from a CDN (Content Delivery Network). This allows using the library without installing it locally.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/comment-markup.md#2025-04-10_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/lucide@latest\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular with NPM\nDESCRIPTION: Command to install Lucide Angular package using NPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-angular/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Creating Lucide Icons with JavaScript\nDESCRIPTION: JavaScript example showing how to create a Lucide icon by using the createIcons function. This demonstrates the basic usage of the library in a JavaScript environment.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/comment-markup.md#2025-04-10_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nlucide.createIcons();\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Preact using pnpm\nDESCRIPTION: Command to install the Lucide Preact package using the pnpm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-preact/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide with Yarn\nDESCRIPTION: Command to install Lucide package using Yarn package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Preact using Bun\nDESCRIPTION: Command to install the Lucide Preact package using the Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-preact/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide with Bun\nDESCRIPTION: Command to install Lucide package using Bun package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide with PNPM\nDESCRIPTION: Command to install Lucide package using PNPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide\n```\n\n----------------------------------------\n\nTITLE: Implementing Lucide via CDN\nDESCRIPTION: HTML script tags for including Lucide via CDN, with both development and production versions available\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide/README.md#2025-04-10_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!-- Development version -->\n<script src=\"https://unpkg.com/lucide@latest/dist/umd/lucide.js\"></script>\n\n<!-- Production version -->\n<script src=\"https://unpkg.com/lucide@latest\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide with NPM\nDESCRIPTION: Command to install Lucide package using NPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React with Yarn\nDESCRIPTION: Command to install the Lucide React package using Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-react\n```\n\n----------------------------------------\n\nTITLE: Installing lucide-static using package managers\nDESCRIPTION: Commands for installing the lucide-static package using various package managers including pnpm, npm, yarn, and bun.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-static/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-static\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React with Bun\nDESCRIPTION: Command to install the Lucide React package using Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-react\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Solid with pnpm\nDESCRIPTION: Command to install the Lucide Solid icon library using pnpm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-solid/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with PNPM\nDESCRIPTION: Command to install the lucide-vue-next package using PNPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue-next/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Solid with npm\nDESCRIPTION: Command to install the Lucide Solid icon library using npm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-solid/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with NPM\nDESCRIPTION: Command to install the lucide-vue-next package using NPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue-next/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React Native with bun\nDESCRIPTION: Command to install the Lucide React Native package using bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react-native/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-react-native\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with pnpm\nDESCRIPTION: Command to install the Lucide Vue package using pnpm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-vue\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Header\nDESCRIPTION: Package name and brief description of the @lucide/build-icons internal build package\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/tools/build-icons/README.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @lucide/build-icons\\n\\nA internal used package to build icon code files for the lucide icon library packages.\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with npm\nDESCRIPTION: Command to install the Lucide Vue package using npm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons via Yarn\nDESCRIPTION: Command to install the Lucide icon library using Yarn package manager as an alternative to NPM.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/comment-markup.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add lucide\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Vue with Bun\nDESCRIPTION: Command to install the Lucide Vue package using Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-vue/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Vue Applications\nDESCRIPTION: Commands to install the Lucide icon library for Vue applications using different package managers. For Vue 2, use the 'lucide-vue' package.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-vue-next\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-vue-next\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with PNPM\nDESCRIPTION: Command to install the Lucide icon library for Svelte applications using PNPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/svelte/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Angular Applications\nDESCRIPTION: Commands to install the Lucide icon library for Angular applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-angular\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-angular\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-angular\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with NPM\nDESCRIPTION: Command to install the Lucide icon library for Svelte applications using NPM package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/svelte/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Static Usage\nDESCRIPTION: Commands to install the Lucide icon library for static usage, including SVG files, SVG Sprite, Icon Fonts, and static SVG strings export in Common JS modules.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-static\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-static\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with Yarn\nDESCRIPTION: Command to install the Lucide icon library for Svelte applications using Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/svelte/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Basic Lucide Icon Usage in React Native\nDESCRIPTION: Example showing how to import and use a Lucide icon component with custom props for color and size.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Camera } from 'lucide-react-native';\n\n// Usage\nconst App = () => {\n  return <Camera color=\"red\" size={48} />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Svelte with Bun\nDESCRIPTION: Command to install the Lucide icon library for Svelte applications using Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/svelte/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add @lucide/svelte\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component\nDESCRIPTION: Implementation example for using custom icons from Lucide lab using the Icon component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-react-native.md#2025-04-10_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Icon } from 'lucide-react-native';\nimport { burger } from '@lucide/lab';\n\nconst App = () => (\n  <Icon iconNode={burger} />\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Solid with Yarn\nDESCRIPTION: Command to install the Lucide Solid icon library using Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-solid/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Applying SVG Attributes to Lucide Icons\nDESCRIPTION: Example showing how to apply SVG presentation attributes as props to customize a Phone icon with fill color.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_4\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { Phone } from '@lucide/astro';\n---\n\n<Phone fill=\"#333\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Solid with Bun\nDESCRIPTION: Command to install the Lucide Solid icon library using Bun package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-solid/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Lab Icons with Icon Component\nDESCRIPTION: Shows how to use icons from Lucide lab (icons not in the main library) by utilizing the Icon component with custom iconNode props.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_6\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { Icon } from '@lucide/astro';\nimport { burger, sausage } from '@lucide/lab';\n---\n\n<Icon iconNode={burger} />\n<Icon iconNode={sausage} color=\"red\"/>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Preact using npm\nDESCRIPTION: Command to install the Lucide Preact package using the npm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-preact/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Creating a Generic Icon Component (Not Recommended)\nDESCRIPTION: Implementation of a generic icon component that can load any Lucide icon by name. This approach is not recommended as it imports all icons and increases bundle size.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-astro.md#2025-04-10_snippet_7\n\nLANGUAGE: astro\nCODE:\n```\n---\nimport { icons, type IconProps } from '@lucide/astro';\n\ninterface Props extends IconProps {\n  name: keyof typeof icons;\n}\n\nconst { name, ...restProps } = Astro.props;\nconst Icon = icons[name];\n---\n\n<Icon {...restProps} />\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Preact using Yarn\nDESCRIPTION: Command to install the Lucide Preact package using the Yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-preact/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Basic Lucide Icon Component Implementation\nDESCRIPTION: Example of importing and using a Camera icon component with custom props for color and size\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue.md#2025-04-10_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <Camera color=\"red\" :size=\"32\" />\n</template>\n\n<script>\n  import { Camera } from 'lucide-vue';\n\n  export default {\n    name: 'My Component',\n    components: { Camera }\n  };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons with PNPM\nDESCRIPTION: Command to install the Lucide icon library for Astro using PNPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/astro/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: Generic Icon Component Implementation\nDESCRIPTION: Example of creating a generic icon component that can load any icon dynamically (not recommended due to bundle size implications)\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue.md#2025-04-10_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <component :is=\"icon\" />\n</template>\n\n<script>\n  import * as icons from 'lucide-vue';\n\n  export default {\n    props: {\n      name: {\n        type: String,\n        required: true\n      }\n    },\n    computed: {\n      icon() {\n        return icons[this.name];\n      }\n    }\n  };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons with NPM\nDESCRIPTION: Command to install the Lucide icon library for Astro using NPM package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/astro/README.md#2025-04-10_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: Using Generic Icon Component\nDESCRIPTION: Example of how to use the generic icon component in a Vue application\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue.md#2025-04-10_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <div id=\"app\">\n    <Icon name=\"Airplay\" />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons with Yarn\nDESCRIPTION: Command to install the Lucide icon library for Astro using Yarn package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/astro/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: TypeScript Integration with Lucide Icons in Svelte 5\nDESCRIPTION: Example of using Lucide icons with TypeScript in Svelte 5, demonstrating type-safe icon usage in a menu component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_5\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\"ts\">\n  import { Home, Library, Cog, type Icon as IconType } from '@lucide/svelte';\n\n  type MenuItem = {\n    name: string;\n    href: string;\n    icon: typeof IconType;\n  };\n\n  const menuItems: MenuItem[] = [\n    {\n      name: 'Home',\n      href: '/',\n      icon: Home\n    },\n    {\n      name: 'Blog',\n      href: '/blog',\n      icon: Library\n    },\n    {\n      name: 'Projects',\n      href: '/projects',\n      icon: Cog\n    }\n  ];\n</script>\n\n{#each menuItems as item}\n  {@const Icon = item.icon}\n  <a href={item.href}>\n    <Icon />\n    <span>{item.name}</span>\n  </a>\n{/each}\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Icons with Bun\nDESCRIPTION: Command to install the Lucide icon library for Astro using Bun package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/astro/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: JSDoc Type Annotations for Lucide Icons in Svelte 4\nDESCRIPTION: Example of using JSDoc to type Lucide icons in Svelte 4, providing type safety without TypeScript and using svelte:component.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_8\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import { Home, Library, Cog } from '@lucide/svelte';\n\n  /**\n   * @typedef {Object} MenuItem\n   * @property {string} name\n   * @property {string} href\n   * @property {import('svelte').ComponentType<import('@lucide/svelte').Icon>} icon\n   */\n\n  /** @type {MenuItem[]} */\n  const menuItems = [\n    {\n      name: 'Home',\n      href: '/',\n      icon: Home,\n    },\n    {\n      name: 'Blog',\n      href: '/blog',\n      icon: Library,\n    },\n    {\n      name: 'Projects',\n      href: '/projects',\n      icon: Cog,\n    }\n  ];\n</script>\n\n{#each menuItems as item}\n  <a href={item.href}>\n   <svelte:component this={item.icon} />\n    <span>{item.name}</span>\n  </a>\n{/each}\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React Native with pnpm\nDESCRIPTION: Command to install the Lucide React Native package using pnpm package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react-native/README.md#2025-04-10_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm add lucide-react-native\n```\n\n----------------------------------------\n\nTITLE: Generic Icon Component for Svelte 5 (Not Recommended)\nDESCRIPTION: Example of creating a generic icon component in Svelte 5 that can load any Lucide icon. Note: This approach is not recommended due to performance implications.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-svelte.md#2025-04-10_snippet_10\n\nLANGUAGE: svelte\nCODE:\n```\n<script>\n  import * as icons from '@lucide/svelte';\n  let { name } = $props();\n\n  const Icon = icons[name];\n</script>\n\n<Icon {...props} />\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide React Native with yarn\nDESCRIPTION: Command to install the Lucide React Native package using yarn package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-react-native/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-react-native\n```\n\n----------------------------------------\n\nTITLE: Configuring LucideAngularModule in NgModule\nDESCRIPTION: Example of importing and configuring LucideAngularModule with specific icons in an Angular module.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { LucideAngularModule, File, Home, Menu, UserCheck } from 'lucide-angular';\n\n@NgModule({\n  imports: [\n    LucideAngularModule.pick({File, Home, Menu, UserCheck})\n  ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular with Yarn\nDESCRIPTION: Command to install Lucide Angular package using Yarn package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-angular/README.md#2025-04-10_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Injecting Additional Icon Providers\nDESCRIPTION: Example of providing additional custom icons using LUCIDE_ICONS injection token.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { LUCIDE_ICONS, LucideIconProvider } from 'lucide-angular';\nimport { MyIcon } from './icons/my-icon';\n\nconst myIcons = {MyIcon};\n\n@NgModule({\n  providers: [\n    {provide: LUCIDE_ICONS, multi: true, useValue: new LucideIconProvider(myIcons)},\n  ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide Angular with Bun\nDESCRIPTION: Command to install Lucide Angular package using Bun package manager\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/packages/lucide-angular/README.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-angular\n```\n\n----------------------------------------\n\nTITLE: Loading All Icons\nDESCRIPTION: Example showing how to import all Lucide icons, with a warning about increased build size.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-angular.md#2025-04-10_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { icons } from 'lucide-angular';\n\n...\n\nLucideAngularModule.pick(icons)\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Svelte Applications\nDESCRIPTION: Commands to install the Lucide icon library for Svelte applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-svelte\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-svelte\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-svelte\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-svelte\n```\n\n----------------------------------------\n\nTITLE: Using Lucide Icons in Preact Components\nDESCRIPTION: Demonstrates how to import and use a Lucide icon (Camera) as a Preact component, including passing props to customize the icon's appearance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Camera } from 'lucide-preact';\n\n// Usage\nconst App = () => {\n  return <Camera color=\"red\" size={48} />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Solid Applications\nDESCRIPTION: Commands to install the Lucide icon library for Solid applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-solid\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-solid\n```\n\n----------------------------------------\n\nTITLE: Creating a Generic Icon Component in Preact\nDESCRIPTION: Shows how to create a generic Icon component that can load any Lucide icon dynamically. Note that this method imports all icons and may impact performance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-preact.md#2025-04-10_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { icons } from 'lucide-preact';\n\nconst Icon = ({ name, color, size }) => {\n  const LucideIcon = icons[name];\n\n  return <LucideIcon color={color} size={size} />;\n};\n\nexport default Icon;\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Preact Applications\nDESCRIPTION: Commands to install the Lucide icon library for Preact applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\npnpm install lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install lucide-preact\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add lucide-preact\n```\n\n----------------------------------------\n\nTITLE: Tree-shaking Lucide Icons\nDESCRIPTION: Example of how to implement tree-shaking with Lucide to reduce bundle size by only importing and using specific icons that are needed in the application.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide.md#2025-04-10_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nimport { createIcons, Menu, ArrowRight, Globe } from 'lucide';\n\ncreateIcons({\n  icons: {\n    Menu,\n    ArrowRight,\n    Globe\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Astro Applications\nDESCRIPTION: Commands to install the Lucide icon library for Astro applications using different package managers.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\npnpm install @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @lucide/astro\n```\n\nLANGUAGE: sh\nCODE:\n```\nbun add @lucide/astro\n```\n\n----------------------------------------\n\nTITLE: Using Custom Icons with Lucide Icon Component\nDESCRIPTION: Demonstration of using the Icon component to render custom icons from Lucide lab or other sources.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Icon } from 'lucide-solid';\nimport { burger, sausage } from '@lucide/lab';\n\nconst App = () => (\n  <Icon iconNode={sausage} color=\"red\"/>\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Lucide for Flutter Applications\nDESCRIPTION: Command to install the Lucide icon library for Flutter applications using the Flutter package manager.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/installation.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nflutter pub add lucide_icons\n```\n\n----------------------------------------\n\nTITLE: Creating a Generic Icon Component for Lucide\nDESCRIPTION: Implementation of a generic Icon component that can render any Lucide icon by name. Note: This approach imports all icons and may impact performance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-solid.md#2025-04-10_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { icons, type LucideProps } from 'lucide-solid';\nimport { splitProps } from 'solid-js';\nimport { Dynamic } from 'solid-js/web';\n\ninterface IconProps extends LucideProps {\n  name: keyof typeof icons;\n}\n\nconst Icon = (props: IconProps) => {\n  const [local, others] = splitProps(props, [\"name\"]);\n\n  return <Dynamic component={icons[local.name]} {...others} />\n};\n\nexport default Icon;\n```\n\n----------------------------------------\n\nTITLE: Importing Icons in Node.js\nDESCRIPTION: JavaScript example showing how to import Lucide icons in a Node.js project.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_10\n\nLANGUAGE: js\nCODE:\n```\nconst { messageSquare } = require('lucide-static/lib');\n```\n\n----------------------------------------\n\nTITLE: Complete Node.js Express Example with Lucide Icons\nDESCRIPTION: Full JavaScript example showing how to use Lucide icons in an Express.js application.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-static.md#2025-04-10_snippet_11\n\nLANGUAGE: js\nCODE:\n```\nconst express = require('express');\nconst { messageSquare } = require('lucide-static/lib');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <title>Page Title</title>\n      </head>\n      <body>\n        <h1>Lucide Icons</h1>\n        <p>This is a lucide icon ${messageSquare}</p>\n\n      </body>\n    </html>\n  `);\n});\n\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Generic Icon Component in Vue 3\nDESCRIPTION: Shows how to create a generic Icon component that can render different icons based on their name. Note that this approach imports all icons, which can significantly increase bundle size and affect performance.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { computed } from 'vue';\nimport * as icons from \"lucide-vue-next\";\n\nconst props = defineProps({\n  name: {\n    type: String,\n    required: true\n  },\n  size: Number,\n  color: String,\n  strokeWidth: Number,\n  defaultClass: String\n})\n\nconst icon = computed(() => icons[props.name]);\n</script>\n\n<template>\n  <component\n    :is=\"icon\"\n    :size=\"size\"\n    :color=\"color\"\n    :stroke-width=\"strokeWidth\" :default-class=\"defaultClass\"\n  />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using a Generic Icon Component in Vue 3\nDESCRIPTION: Demonstrates how to use the generic Icon component in a Vue application by specifying the icon name as a prop. This example renders the Airplay icon.\nSOURCE: https://github.com/lucide-icons/lucide/blob/main/docs/guide/packages/lucide-vue-next.md#2025-04-10_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <div id=\"app\">\n    <Icon name=\"Airplay\" />\n  </div>\n</template>\n```"
  }
]
[
  {
    "owner": "tunnckocore",
    "repo": "ethereum-jsonrpc-api-docs",
    "content": "TITLE: Sending Ethereum Transactions with eth_sendTransaction\nDESCRIPTION: Creates and sends a new transaction or contract creation. Requires an unlocked account. Uses the same transaction object structure as eth_signTransaction.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_1\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_sendTransaction\",\n  \"params\": [{\n    \"from\": \"ADDRESS\",\n    \"to\": \"ADDRESS\",\n    \"gas\": \"QUANTITY\",\n    \"gasPrice\": \"QUANTITY\",\n    \"value\": \"QUANTITY\",\n    \"data\": \"DATA\",\n    \"nonce\": \"QUANTITY\"\n  }],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Ethereum Transactions with eth_signTransaction\nDESCRIPTION: Signs a transaction without sending it to the network. Requires an unlocked account. Supports both legacy and EIP-1559 transaction types.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_0\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_signTransaction\",\n  \"params\": [{\n    \"from\": \"ADDRESS\",\n    \"to\": \"ADDRESS\",\n    \"gas\": \"QUANTITY\",\n    \"gasPrice\": \"QUANTITY\",\n    \"maxFeePerGas\": \"QUANTITY\",\n    \"maxPriorityFeePerGas\": \"QUANTITY\",\n    \"value\": \"QUANTITY\",\n    \"data\": \"DATA\",\n    \"nonce\": \"QUANTITY\",\n    \"chainId\": \"QUANTITY\",\n    \"accessList\": []\n  }],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Raw Ethereum Transactions with eth_sendRawTransaction\nDESCRIPTION: Submits a pre-signed transaction to the network. Supports EIP-4844 blob transactions, which must include blobs, commitments, and proofs.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_2\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_sendRawTransaction\",\n  \"params\": [\"DATA\"],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Ethereum Contract Calls with eth_call\nDESCRIPTION: Executes a new message call immediately without creating a transaction on the blockchain. Useful for reading contract data or simulating transactions.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_3\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_call\",\n  \"params\": [\n    {\n      \"from\": \"ADDRESS\",\n      \"to\": \"ADDRESS\",\n      \"gas\": \"QUANTITY\",\n      \"gasPrice\": \"QUANTITY\",\n      \"value\": \"QUANTITY\",\n      \"data\": \"DATA\"\n    },\n    \"QUANTITY|TAG\"\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Estimating Ethereum Transaction Gas with eth_estimateGas\nDESCRIPTION: Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The estimate may be significantly more than the amount of gas actually used by the transaction.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_4\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_estimateGas\",\n  \"params\": [\n    {\n      \"from\": \"ADDRESS\",\n      \"to\": \"ADDRESS\",\n      \"value\": \"QUANTITY\",\n      \"data\": \"DATA\"\n    },\n    \"QUANTITY|TAG\"\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Ethereum Transaction Receipt Method Documentation\nDESCRIPTION: Detailed documentation for eth_getTransactionReceipt method that returns transaction receipt information including gas usage, logs, and transaction status.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n### `eth_getTransactionReceipt`\n\n*   **Description**: Returns the receipt of a transaction by transaction hash. Note: The receipt is not available for pending transactions.\n*   **Parameters**:\n    1.  `TRANSACTION HASH` - Hash of a transaction.\n*   **Returns**: `Object | null` - A transaction receipt object, or `null` if no receipt was found\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ethereum Transaction Information by Hash with eth_getTransactionByHash\nDESCRIPTION: Returns detailed information about a transaction requested by transaction hash. Includes support for EIP-1559 and EIP-4844 transaction types.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_7\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_getTransactionByHash\",\n  \"params\": [\"TRANSACTION HASH\"],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ethereum Block Information by Hash with eth_getBlockByHash\nDESCRIPTION: Returns detailed information about a block by its hash. Includes options for full transaction objects or just transaction hashes.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_5\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_getBlockByHash\",\n  \"params\": [\n    \"BLOCK HASH\",\n    false\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ethereum Block Information by Number with eth_getBlockByNumber\nDESCRIPTION: Returns information about a block by block number. Supports latest, earliest, and pending block tags. Includes options for full transaction objects or just transaction hashes.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_6\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_getBlockByNumber\",\n  \"params\": [\n    \"QUANTITY|TAG\",\n    false\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Ethereum Filter Methods Documentation\nDESCRIPTION: Documentation for filter-related methods including creating, managing and querying filters for logs, blocks and pending transactions.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n### `eth_newFilter`\n\n*   **Description**: Creates a filter object, based on filter options, to notify when the state changes (logs).\n*   **Parameters**:\n    1.  `Object` - The filter options\n*   **Returns**: `QUANTITY` - A filter ID.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Block Receipts with eth_getBlockReceipts\nDESCRIPTION: Returns all transaction receipts for a specified block. Accepts a block number or special tags (latest, earliest, pending) and returns an array of receipt objects or null if the block is not found.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n### `eth_getBlockReceipts`\n\n*   **Description**: Returns the receipts for all transactions in a specified block.\n*   **Parameters**:\n    1.  `QUANTITY | TAG` - Integer block number, or the string `\"latest\"`, `\"earliest\"` or `\"pending\"`.\n*   **Returns**: `Array<Object> | null` - An array of transaction receipt objects (same structure as `eth_getTransactionReceipt`), or `null` if the block is not found.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ethereum Transaction by Block Hash and Index with eth_getTransactionByBlockHashAndIndex\nDESCRIPTION: Returns information about a transaction by block hash and transaction index position. Useful for retrieving transactions from a known block.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_8\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_getTransactionByBlockHashAndIndex\",\n  \"params\": [\n    \"BLOCK HASH\",\n    \"QUANTITY\"\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ethereum Transaction by Block Number and Index with eth_getTransactionByBlockNumberAndIndex\nDESCRIPTION: Returns information about a transaction by block number and transaction index position. Supports block number or latest, earliest, and pending tags.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_9\n\nLANGUAGE: JSON-RPC\nCODE:\n```\n{\n  \"method\": \"eth_getTransactionByBlockNumberAndIndex\",\n  \"params\": [\n    \"QUANTITY|TAG\",\n    \"QUANTITY\"\n  ],\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Ethereum Access List and Proof Methods Documentation\nDESCRIPTION: Documentation for methods related to EIP-2930 access lists and Merkle proof generation for accounts and storage.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n### `eth_createAccessList`\n\n*   **Description**: Creates an EIP-2930 access list for a transaction.\n*   **Parameters**:\n    1.  `Object` - The transaction object\n    2.  `QUANTITY | TAG` - Integer block number or tag\n*   **Returns**: `Object` - Access list object\n```\n\n----------------------------------------\n\nTITLE: Ethereum Proof-of-Work Methods Documentation\nDESCRIPTION: Documentation for Proof-of-Work related methods including getting work, submitting solutions, and reporting hashrates. Note: These methods are likely deprecated post-Merge.\nSOURCE: https://github.com/tunnckocore/ethereum-jsonrpc-api-docs/blob/master/ethereum-jsonrpc-api.md#2025-04-18_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n### `eth_getWork`\n\n*   **Description**: Returns the hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n*   **Parameters**: None\n*   **Returns**: `Array<DATA>` - Array with current block header pow-hash, seed hash, and boundary condition.\n```"
  }
]
[
  {
    "owner": "sebastianbergmann",
    "repo": "phpunit",
    "content": "TITLE: Installing PHPUnit from PHAR Archive in Bash\nDESCRIPTION: Shows how to download and verify a PHPUnit PHAR file. The user must replace 'X.Y' with the desired version number. The code demonstrates downloading the PHAR file with wget and checking its version with php.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ wget https://phar.phpunit.de/phpunit-X.Y.phar\n\n$ php phpunit-X.Y.phar --version\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Test Suite with Bash Commands\nDESCRIPTION: Commands for running different components of PHPUnit's test suite. These commands allow developers to run all tests, unit tests only, end-to-end tests, or PHAR-specific tests.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./phpunit\n```\n\nLANGUAGE: bash\nCODE:\n```\n./phpunit --testsuite unit\n```\n\nLANGUAGE: bash\nCODE:\n```\n./phpunit --testsuite end-to-end\n```\n\nLANGUAGE: bash\nCODE:\n```\nant phar-snapshot run-phar-specific-tests\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Basic Usage Syntax\nDESCRIPTION: The basic command syntax for running PHPUnit tests, showing how to specify directories or files to test.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/_files/output-cli-help-color.txt#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nphpunit [options] <directory|file> ...\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Code Coverage Command-Line Options\nDESCRIPTION: This snippet lists the available command-line options for configuring code coverage reporting in PHPUnit. It includes options for different output formats, file locations, and specific coverage analysis settings.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/_files/output-cli-help-color.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n--coverage-clover <file>          Write code coverage report in Clover XML\n                                     format to file\n  --coverage-cobertura <file>       Write code coverage report in Cobertura\n                                     XML format to file\n  --coverage-crap4j <file>          Write code coverage report in Crap4J XML\n                                     format to file\n  --coverage-html <dir>             Write code coverage report in HTML format\n                                     to directory\n  --coverage-php <file>             Write serialized code coverage data to\n                                     file\n  --coverage-text=<file>            Write code coverage report in text format\n                                     to file [default: standard output]\n  --only-summary-for-coverage-text  Option for code coverage report in text\n                                     format: only show summary\n  --show-uncovered-for-coverage-text Option for code coverage report in text\n                                     format: show uncovered files\n  --coverage-xml <dir>              Write code coverage report in XML format\n                                     to directory\n  --warm-coverage-cache             Warm static analysis cache\n  --coverage-filter <dir>           Include <dir> in code coverage reporting\n  --path-coverage                   Report path coverage in addition to line\n                                     coverage\n  --disable-coverage-ignore         Disable metadata for ignoring code\n                                     coverage\n  --no-coverage                     Ignore code coverage reporting configured\n                                     in the XML configuration file\n```\n\n----------------------------------------\n\nTITLE: Installing PHAR Utils with Composer\nDESCRIPTION: Command to install the PHAR Utils library via Composer package manager.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/build/scripts/phar-set-timestamps/vendor/seld/phar-utils/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require seld/phar-utils\n```\n\n----------------------------------------\n\nTITLE: Loading a PHAR File with Timestamps Constructor\nDESCRIPTION: Initializes the Timestamps class by loading a PHAR file into memory. This is required before manipulating timestamps in the PHAR.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/build/scripts/phar-set-timestamps/vendor/seld/phar-utils/README.md#2025-04-23_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n__construct($pharFile)\n```\n\n----------------------------------------\n\nTITLE: Updating PHAR File Timestamps\nDESCRIPTION: Updates each file's unix timestamps in the PHAR so the PHAR signature can be produced in a reproducible manner. Optionally accepts a custom timestamp value.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/build/scripts/phar-set-timestamps/vendor/seld/phar-utils/README.md#2025-04-23_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nupdateTimestamps($timestamp = null)\n```\n\n----------------------------------------\n\nTITLE: Saving PHAR with Updated Signature\nDESCRIPTION: Saves the updated PHAR file with an updated signature. The signature algorithm must be one of Phar::MD5, Phar::SHA1, Phar::SHA256, or Phar::SHA512.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/build/scripts/phar-set-timestamps/vendor/seld/phar-utils/README.md#2025-04-23_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nsave($path, $signatureAlgo = '')\n```\n\n----------------------------------------\n\nTITLE: Linting PHP Files in a PHAR Archive\nDESCRIPTION: Static method that lints all PHP files inside a given PHAR with the current PHP version to check for syntax errors.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/build/scripts/phar-set-timestamps/vendor/seld/phar-utils/README.md#2025-04-23_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nLinter::lint($pharFile)\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Command Line Interface Usage\nDESCRIPTION: Basic usage syntax for running PHPUnit from the command line to execute tests on specified directories or files.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/_files/output-cli-usage.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nphpunit [options] <directory|file> ...\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Miscellaneous Command-Line Options\nDESCRIPTION: This snippet shows the miscellaneous command-line options for PHPUnit. It includes options for displaying help information, version details, and version compatibility checks.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/_files/output-cli-help-color.txt#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n-h|--help                         Prints this usage information\n  --version                         Prints the version and exits\n  --atleast-version <min>           Checks that version is greater than <min>\n                                     and exits\n  --check-version                   Checks whether PHPUnit is the latest\n                                     version and exits\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Test Results Output\nDESCRIPTION: Terminal output showing successful test execution results from PHPUnit, indicating 1 passing test with 1 assertion and 1 issue that was ignored due to baseline configuration.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/successful_test_with_baseline_ignored_issue.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nOK (1 test, 1 assertion)\n\n1 issue was ignored by baseline.\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Test Results with Incomplete Test\nDESCRIPTION: Sample output from PHPUnit showing test execution results with one incomplete test. The output includes the test method name, a message about why the test is incomplete, and a summary of test statistics.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/incomplete_test.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 incomplete test:\n\n1) FooTest::testBar\nmessage\n\n%A\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Incomplete: 1.\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Test Output with Warning\nDESCRIPTION: This snippet shows the output of a PHPUnit test run where a single test (FooTest::testBar) triggered a warning. It includes the warning message, file location, and a summary of the test execution results.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/successful_test_with_phpunit_warning.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1 test triggered 1 PHPUnit warning:\n\n1) FooTest::testBar\nmessage\n\n%s:%i\n\nWARNINGS!\nTests: 1, Assertions: 1, Warnings: 1.\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Test Result with Risky Test\nDESCRIPTION: This snippet shows the output of a PHPUnit test run where one test was marked as risky. It includes the test name, associated messages, file location, and a summary of the test execution results.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/risky_test_with_multiple_reasons_with_multi_line_messages_windows.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 risky test:\n\n1) FooTest::testBar\n* message\nmessage\nmessage\n\n* message\nmessage\nmessage\n\n%s:%i\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Duration Configuration JSON\nDESCRIPTION: JSON structure storing test execution times for PHPUnit test methods. Records duration in seconds for multiple test methods across different test fixtures, including TestWithDifferentDurations and ExampleTest classes.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/execution-order/_files/TestWithDifferentDurations.phpunit.result.cache.txt#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"version\":1,\"defects\":[],\"times\":{\"PHPUnit\\\\TestFixture\\\\TestWithDifferentDurations::testOne\":2.006,\"PHPUnit\\\\TestFixture\\\\TestWithDifferentDurations::testTwo\":0,\"PHPUnit\\\\TestFixture\\\\TestWithDifferentDurations::testThree\":3.001,\"PHPUnit\\\\TestFixture\\\\ExampleTest::testOne\":2.006,\"PHPUnit\\\\TestFixture\\\\ExampleTest::testTwo\":3.001,\"PHPUnit\\\\TestFixture\\\\ExampleTest::testThree\":0}}\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Execution Output with Deprecation Warning\nDESCRIPTION: Test execution output showing one test that generated a PHP deprecation warning. The output shows the deprecation was triggered twice by the testBar method in FooTest class.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/successful_test_with_php_deprecation_multiple.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1 test triggered 1 PHP deprecation:\n\n1) Foo.php:1\nmessage\n\nTriggered by:\n\n* FooTest::testBar (2 times)\n  FooTest.php:1\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Deprecations: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Output Format with Errors and Risky Tests\nDESCRIPTION: A sample PHPUnit console output showing how errors and risky tests are reported. The output includes the test class and method names, error messages, and a summary of test results. The %A and %s:%i are placeholders for variable output in PHPUnit's test output expectations.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/errored_test_that_is_risky.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThere was 1 error:\n\n1) FooTest::testBar\nException: message\n\n%A\n\n--\n\nThere was 1 risky test:\n\n1) FooTest::testBar\nmessage\n\n%s:%i\n\nERRORS!\nTests: 1, Assertions: 1, Errors: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: Formatting PHPUnit Test Output with Risky Test Result\nDESCRIPTION: Standardized output format from PHPUnit test runner showing a risky test result with multiple message blocks. Includes test name, warning messages, and final test execution summary statistics.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/risky_test_with_multiple_reasons_with_multi_line_messages.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThere was 1 risky test:\n\n1) FooTest::testBar\n* message\n  message\n  message\n\n* message\n  message\n  message\n\n%s:%i\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Version Reference Link\nDESCRIPTION: Markdown link for comparing PHPUnit versions 12.1 to main branch on GitHub.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/ChangeLog-12.2.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[12.2.0]: https://github.com/sebastianbergmann/phpunit/compare/12.1...main\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Error Output Format in Plain Text\nDESCRIPTION: A sample of PHPUnit's error output format showing a test failure. The output shows an error in a test named 'testBar' in the 'FooTest' class with a simple exception message. The '%A' placeholder indicates where additional error details would appear in actual output.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/errored_test.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 error:\n\n1) FooTest::testBar\nException: message\n\n%A\n\nERRORS!\nTests: 1, Assertions: 1, Errors: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Result Output - Risky Test\nDESCRIPTION: Terminal output from PHPUnit test runner showing one risky test in FooTest class. The test passed but was marked as risky, likely due to output being produced during the test or other PHPUnit risky test conditions.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/risky_test_single_line_message.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 risky test:\n\n1) FooTest::testBar\nmessage\n\nFooTest.php:1\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: Displaying PHPUnit Test Output with Failures and Risky Tests\nDESCRIPTION: This snippet shows the standard output format from PHPUnit when a test fails and is also marked as risky. It includes the failure message, test name, and a summary of test statistics at the end.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/failed_test_that_is_risky.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 failure:\n\n1) FooTest::testBar\nFailed asserting that false is true.\n\n%A\n\n--\n\nThere was 1 risky test:\n\n1) FooTest::testBar\nmessage\n\n%s:%i\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Output with Risky Test\nDESCRIPTION: Example of PHPUnit console output showing a risky test result. The output includes the test name (FooTest::testBar), associated messages, file location placeholder, and a summary of test execution statistics indicating 1 test was run with 1 assertion and 1 risky test.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/risky_test_with_multiple_reasons_with_single_line_messages.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThere was 1 risky test:\n\n1) FooTest::testBar\n* message\n\n* message\n\n%s:%i\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Risky: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Results JSON for MultiDependencyTest\nDESCRIPTION: JSON structure containing test execution results for the MultiDependencyTest class. It includes defects (with test 'testFive' marked as defective with status 1) and execution times for five test methods, all showing 0 seconds execution time.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/end-to-end/execution-order/_files/MultiDependencyTest_result_cache.txt#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"version\":1,\"defects\":{\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testFive\":1},\"times\":{\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testOne\":0,\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testTwo\":0,\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testThree\":0,\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testFour\":0,\"PHPUnit\\\\TestFixture\\\\MultiDependencyTest::testFive\":0}}\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Error Output\nDESCRIPTION: Standard PHPUnit test runner output showing test execution results, including the failing test case 'FooTest::testBar', error location in 'Foo.php', and overall test statistics.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/successful_test_with_error.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n1 test triggered 1 error:\n\n1) Foo.php:1\nmessage\n\nTriggered by:\n\n* FooTest::testBar\n  FooTest.php:1\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Errors: 1.\n```\n\n----------------------------------------\n\nTITLE: PHPUnit Test Execution Output with Warning\nDESCRIPTION: Console output from a PHPUnit test execution showing a warning triggered in FooTest::testBar, along with test statistics summary. Shows 1 test executed with 1 assertion and 1 warning.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/unit/TextUI/Output/Default/expectations/successful_test_with_php_warning.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n1 test triggered 1 PHP warning:\n\n1) Foo.php:1\nmessage\n\nTriggered by:\n\n* FooTest::testBar\n  FooTest.php:1\n\nOK, but there were issues!\nTests: 1, Assertions: 1, Warnings: 1.\n```\n\n----------------------------------------\n\nTITLE: Storing PHPUnit Test Results in JSON Format\nDESCRIPTION: JSON structure storing PHPUnit test execution metrics including defects and timing information. The file tracks failed tests with status codes and execution duration for each test case, with special focus on tests involving dependencies and data providers.\nSOURCE: https://github.com/sebastianbergmann/phpunit/blob/main/tests/_files/DataproviderExecutionOrderTest_result_cache.txt#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": 1,\n  \"defects\": {\n    \"tests\\/end-to-end\\/regression\\/GitHub\\/3396\\/issue-3396-test.phpt\": 3,\n    \"MultiDependencyExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 3,\n    \"MultiDependencyExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 3,\n    \"DataproviderExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 3,\n    \"DataproviderExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 3\n  },\n  \"times\": {\n    \"tests\\/end-to-end\\/regression\\/GitHub\\/3396\\/issue-3396-test.phpt\": 0.115,\n    \"MultiDependencyExecutionOrderTest::testFirstTestThatAlwaysWorks\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+2=3\\\"\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"2+1=3\\\"\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 0.003,\n    \"MultiDependencyExecutionOrderTest::testTestInTheMiddleThatAlwaysWorks\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+2=3\\\"\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"2+1=3\\\"\": 0,\n    \"MultiDependencyExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 0,\n    \"DataproviderExecutionOrderTest::testFirstTestThatAlwaysWorks\": 0.002,\n    \"DataproviderExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+2=3\\\"\": 0,\n    \"DataproviderExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"2+1=3\\\"\": 0,\n    \"DataproviderExecutionOrderTest::testAddNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 0.001,\n    \"DataproviderExecutionOrderTest::testTestInTheMiddleThatAlwaysWorks\": 0,\n    \"DataproviderExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+2=3\\\"\": 0,\n    \"DataproviderExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"2+1=3\\\"\": 0,\n    \"DataproviderExecutionOrderTest::testAddMoreNumbersWithADataprovider with data set \\\"1+1=3\\\"\": 0\n  }\n}\n```"
  }
]
[
  {
    "owner": "webflow",
    "repo": "js-webflow-api",
    "content": "TITLE: Retrieving Access Token for OAuth\nDESCRIPTION: This snippet demonstrates how to retrieve the access token using the WebflowClient.getAccessToken method. It requires the client_id, client_secret, and authorization_code obtained during the OAuth flow.  The resulting access token is used to authenticate subsequent API calls.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from \"webflow-api\";\n\nconst accessToken = WebflowClient.getAccessToken({\n  clientId: \"your_client_id\", \n  clientSecret: \"your_client_secret\",\n  code: \"your_authorization_code\"\n});\n```\n\n----------------------------------------\n\nTITLE: Instantiating Webflow Client with Access Token\nDESCRIPTION: This snippet demonstrates how to instantiate the WebflowClient using an access token. This is the standard way to authenticate API calls after retrieving an access token through OAuth or other means.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from \"webflow-api\";\n\nconst webflow = WebflowClient({ accessToken });\n```\n\n----------------------------------------\n\nTITLE: Using WebflowClient for API calls\nDESCRIPTION: This snippet demonstrates how to import the WebflowClient, initialize it with an access token, and then use it to interact with the Webflow Sites API.  It lists sites, gets a site by ID, retrieves custom domains and publishes a site.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from \"webflow-api\";\n\nconst webflow = new WebflowClient({ accessToken });\n\n// Env. variables\n// in format of string, e.g.: \"639656400769508adc12fe42\"\nconst site_id = process.env.SITE_ID;\nconst custom_domain_id_1 = process.env.CUSTOM_DOMAIN_ID_1;\nconst custom_domain_id_2 = process.env.CUSTOM_DOMAIN_ID_2;\n\n// Sites\n\n// List Sites\nconst sites = await webflow.sites.list();\n\n// Get Site\nconst site = await webflow.sites.get(\"site_id\");\n\n// Get Custom Domains\nconst customDomains = await webflow.sites.getCustomDomain(site_id);\n\n// Publish Site\nconst site = await webflow.sites.publish(site_id, {\n  customDomains: [custom_domain_id_1, custom_domain_id_2],\n  publishToWebflowSubdomain: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Generating Authorize URL for OAuth\nDESCRIPTION: This snippet shows how to generate the authorization URL for the Webflow OAuth flow. It uses the WebflowClient.authorizeURL method, passing required parameters such as state, scope, clientId, and redirectUri. The output is the URL that the user needs to visit to authorize the application.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from \"webflow-api\";\n\nconst authorizeUrl = WebflowClient.authorizeURL({\n    state: \"your_state\",\n    scope: \"sites:read\",\n    clientId: \"your_client_id\",\n    redirectUri: \"your_redirect_uri\",\n});\n\nconsole.log(authorizeUrl);\n```\n\n----------------------------------------\n\nTITLE: Create Collection Item - Typescript\nDESCRIPTION: This snippet demonstrates how to create an item in a collection using the Webflow API client. It requires the `CMS:write` scope. The function takes the collection ID and item creation request as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_71\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.createItem(\"580e63fc8c9a982ac9b8b745\", {\n    isArchived: false,\n    isDraft: false,\n    fieldData: {\n        name: \"Pan Galactic Gargle Blaster Recipe\",\n        slug: \"pan-galactic-gargle-blaster\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Item in Collection Webflow API with TypeScript\nDESCRIPTION: This snippet demonstrates how to update an existing item in a collection using the Webflow API. It requires the `CMS:write` scope. The `updateItem` function accepts `collectionId`, `itemId`, and an object containing the fields to be updated, such as `isArchived`, `isDraft`, and `fieldData`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_81\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.updateItem(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\", {\n    isArchived: false,\n    isDraft: false,\n    fieldData: {\n        name: \"Pan Galactic Gargle Blaster Recipe\",\n        slug: \"pan-galactic-gargle-blaster\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: List Collection Items - Typescript\nDESCRIPTION: This snippet demonstrates how to list all items within a collection using the Webflow API client. It requires the `CMS:read` scope. The function takes the collection ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_70\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.listItems(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Create Webhook in Webflow\nDESCRIPTION: This snippet shows how to create a new webhook using the `client.webhooks.create` method. It requires the site ID and a request object containing the webhook details, such as trigger type and URL. The method returns a `Webflow.Webhook` object representing the created webhook. The required scope is `sites:write`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_35\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.webhooks.create(\"580e63e98c9a982ac9b8b741\", {\n    id: \"582266e0cd48de0f0e3c6d8b\",\n    triggerType: \"form_submission\",\n    url: \"https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f\",\n    workspaceId: \"4f4e46fd476ea8c507000001\",\n    siteId: \"562ac0395358780a1f5e6fbd\",\n    lastTriggered: \"2023-02-08T23:59:28Z\",\n    createdOn: \"2022-11-08T23:59:28Z\",\n});\n```\n\n----------------------------------------\n\nTITLE: Get Authorized User Info via Token - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves information about the authorized user using the client's token. It requires the `authorized_user:read` scope and returns a `Webflow.AuthorizedUser` object.  The function is asynchronous and requires a bearer token.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.token.authorizedBy();\n```\n\n----------------------------------------\n\nTITLE: Listing Products with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to retrieve all products for a site using the Webflow API client. It uses the `list` method, requiring the site's unique identifier (`siteId`).  Use `limit` and `offset` to page through all products with subsequent requests. This operation requires the `ecommerce:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_51\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Create a Collection - Webflow API (TypeScript)\nDESCRIPTION: This snippet creates a new collection for a specified site. It requires the `cms:write` scope.  The function takes a site ID and a set of parameters defining the collection's properties and returns a `Webflow.Collection` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.create(\"580e63e98c9a982ac9b8b741\", {\n    displayName: \"Blog Posts\",\n    singularName: \"Blog Post\",\n    slug: \"posts\",\n    fields: [\n        {\n            isRequired: true,\n            type: \"PlainText\",\n            displayName: \"Title\",\n            helpText: \"The title of the blog post\",\n        },\n        {\n            isRequired: true,\n            type: \"RichText\",\n            displayName: \"Content\",\n            helpText: \"The content of the blog post\",\n        },\n        {\n            isRequired: true,\n            type: \"Reference\",\n            displayName: \"Author\",\n            helpText: \"The author of the blog post\",\n            metadata: {\n                collectionId: \"23cc2d952d4e4631ffd4345d2743db4e\",\n            },\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Update Inventory - Typescript\nDESCRIPTION: This snippet demonstrates how to update the current inventory levels for a particular SKU item using the Webflow API client. Updates may be absolute or incremental. It requires the `ecommerce:write` scope. The function takes the collection ID, item ID, and inventory update request as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_65\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.inventory.update(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\", {\n    inventoryType: \"infinite\",\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Live Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to create a new collection item in Webflow and immediately publish it to the live site using the client.collections.items.createItemLive method. It requires the collectionId, isArchived, isDraft, and fieldData.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_75\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.createItemLive(\"580e63fc8c9a982ac9b8b745\", {\n    isArchived: false,\n    isDraft: false,\n    fieldData: {\n        name: \"Pan Galactic Gargle Blaster Recipe\",\n        slug: \"pan-galactic-gargle-blaster\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Live Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to retrieve a list of all published (live) items from a specified Webflow CMS collection using the client.collections.items.listItemsLive method.  The method requires the collectionId as a string.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_74\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.listItemsLive(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Getting a Specific Collection Item in Webflow using Typescript\nDESCRIPTION: This code snippet shows how to retrieve the details of a specific collection item in Webflow using the client.collections.items.getItem method. It takes the collectionId and the itemId as parameters to identify the desired item.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_79\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.getItem(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Updating Live Item in Collection Webflow API with TypeScript\nDESCRIPTION: This snippet updates a live item in a collection and publishes the updates to the live site via Webflow API. It requires the `CMS:write` scope. The `updateItemLive` function takes `collectionId`, `itemId`, and an object containing the fields to be updated, such as `isArchived`, `isDraft`, and `fieldData`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_84\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.updateItemLive(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\", {\n    isArchived: false,\n    isDraft: false,\n    fieldData: {\n        name: \"Pan Galactic Gargle Blaster Recipe\",\n        slug: \"pan-galactic-gargle-blaster\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: Inviting a User with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to create and invite a new user by email to a specific site using the Webflow API client. It uses the `invite` method, requiring the site's unique identifier (`siteId`) and an object containing the user's email and access groups. This operation requires the `users:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_49\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.users.invite(\"580e63e98c9a982ac9b8b741\", {\n    email: \"some.one@home.com\",\n    accessGroups: [\"webflowers\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Get Form Details in Webflow\nDESCRIPTION: This snippet shows how to retrieve details about a given form using the `client.forms.get` method. It requires the form ID as a parameter. The method returns a `Webflow.Form` object containing the form details. The required scope is `forms:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_39\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.get(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Refund Order - Typescript\nDESCRIPTION: This snippet shows how to refund an order using the Webflow API client. This API will reverse a Stripe charge and refund an order back to a customer and set the order's status to `refunded`. It requires the `ecommerce:write` scope. The function takes the site ID and order ID as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_63\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.refund(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: Get Site Details - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves details for a specific site. It requires the `sites:read` scope and takes a site ID as input. The function returns a `Webflow.Site` object containing the site's details.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.get(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Updating Page Settings in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to update page-level metadata, including SEO and Open Graph fields, using the Webflow API.  It requires the `pages:write` scope and takes the page ID and a request body containing the updated settings as parameters.  Consideration must be given to the Advanced or Enterprise Localization add-on when updating `slug` in secondary locales.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.updatePageSettings(\"63c720f9347c2139b248e552\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n    body: {\n        id: \"6596da6045e56dee495bcbba\",\n        siteId: \"6258612d1ee792848f805dcf\",\n        title: \"Guide to the Galaxy\",\n        slug: \"guide-to-the-galaxy\",\n        createdOn: \"2024-03-11T10:42:00Z\",\n        lastUpdated: \"2024-03-11T10:42:42Z\",\n        archived: false,\n        draft: false,\n        canBranch: true,\n        isBranch: false,\n        seo: {\n            title: \"The Ultimate Hitchhiker's Guide to the Galaxy\",\n            description:\n                \"Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels.\",\n        },\n        openGraph: {\n            title: \"Explore the Cosmos with The Ultimate Guide\",\n            titleCopied: false,\n            description: \"Dive deep into the mysteries of the universe with your guide to everything galactic.\",\n            descriptionCopied: false,\n        },\n        localeId: \"653fd9af6a07fc9cfd7a5e57\",\n        publishedPath: \"/en-us/guide-to-the-galaxy\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Robots.txt in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to replace the robots.txt configuration for a site using the Webflow API. It requires the `site_config:write` scope. The configuration includes rules for various user agents and the sitemap URL.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_95\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.robotsTxt.put(\"580e63e98c9a982ac9b8b741\", {\n    rules: [\n        {\n            userAgent: \"googlebot\",\n            allows: [\"/public\"],\n            disallows: [\"/vogon-poetry\", \"/total-perspective-vortex\"],\n        },\n    ],\n    sitemap: \"https://heartofgold.ship/sitemap.xml\",\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Static Page Content in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to update content on a static page in secondary locales using the Webflow API. It supports updating up to 1000 nodes in a single request.  It requires the `pages:write` scope and prior knowledge of content node IDs. It is specifically designed for localized pages, and a valid secondary locale ID must be provided.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.updateStaticContent(\"63c720f9347c2139b248e552\", {\n    localeId: \"localeId\",\n    nodes: [\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad623\",\n            text: \"<h1>The Hitchhiker's Guide to the Galaxy</h1>\",\n        },\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad627\",\n            text: \"<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>\",\n        },\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad629\",\n            propertyOverrides: [\n                {\n                    propertyId: \"7dd14c08-2e96-8d3d-2b19-b5c03642a0f0\",\n                    text: \"<div><h1>Time is an <em>illusion</em></h1></div>\",\n                },\n                {\n                    propertyId: \"7dd14c08-2e96-8d3d-2b19-b5c03642a0f1\",\n                    text: \"Life, the Universe and Everything\",\n                },\n            ],\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Live Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to update one or more live items (up to 100) in a Webflow CMS collection, using the client.collections.items.updateItemsLive method. The code takes the collectionId and an array of items with updated fields. This updates the published items on the live site.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_77\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.updateItemsLive(\"580e63fc8c9a982ac9b8b745\", {\n    items: [\n        {\n            id: \"66f6ed9576ddacf3149d5ea6\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca5\",\n            fieldData: {\n                name: \"Ne Paniquez Pas\",\n                slug: \"ne-paniquez-pas\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5ea6\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca4\",\n            fieldData: {\n                name: \"No Entrar en P\\u00E1nico\",\n                slug: \"no-entrar-en-panico\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5eaa\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca5\",\n            fieldData: {\n                name: \"Au Revoir et Merci pour Tous les Poissons\",\n                slug: \"au-revoir-et-merci\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5eaa\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca4\",\n            fieldData: {\n                name: \"Hasta Luego y Gracias por Todo el Pescado\",\n                slug: \"hasta-luego-y-gracias\",\n            },\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Item from Collection Webflow API with TypeScript\nDESCRIPTION: This snippet shows how to delete an item from a specific collection using the Webflow API. It requires the `CMS:write` scope. The function `deleteItem` takes a `collectionId` and an `itemId` as input, both of which are unique identifiers.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_80\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.deleteItem(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Updating a SKU for a Product with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update an existing SKU for a product using the Webflow API. It requires the `ecommerce:write` scope. Updating a SKU sets the product type to 'Advanced'.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_56\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.updateSku(\"580e63e98c9a982ac9b8b741\", \"580e63fc8c9a982ac9b8b745\", \"5e8518516e147040726cc415\", {\n    sku: {}\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Bulk CMS Items in Webflow\nDESCRIPTION: Shows how to create multiple CMS items across different locales using `client.collections.items.createItems()`.  It demonstrates setting properties like `cmsLocaleIds`, `isArchived`, `isDraft`, and `fieldData` for the new items.  The example provides a blueprint for creating localized content.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/MIGRATION.md#_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst newItems = client.collections.items.createItems(collectionId, {\n            cmsLocaleIds: [primaryCmsLocaleId, secondaryCmsLocaleId],\n            isArchived: false,\n            isDraft: false,\n            fieldData: {\n                name: \"My Item For Multiple Locales\",\n                slug: \"my-item\",\n                \"plain-text\": \"foo\",\n            },\n        });\n```\n\n----------------------------------------\n\nTITLE: Update Order Fulfillment Status - Typescript\nDESCRIPTION: This snippet demonstrates how to update an order's status to unfulfilled using the Webflow API client. It requires the `ecommerce:write` scope. The function takes the site ID and order ID as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_62\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.updateUnfulfill(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: List Webhooks in Webflow\nDESCRIPTION: This snippet demonstrates how to list all app-created webhooks registered for a given site using the `client.webhooks.list` method. It requires the site ID as a parameter. The method returns a `Webflow.WebhookList` object. The required scope is `sites:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.webhooks.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: List Sites - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves a list of all sites accessible with the provided access token. It requires the `sites:read` scope. The function returns a `Webflow.Sites` object containing the list of sites.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.list();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Webflow Collection\nDESCRIPTION: Demonstrates how to delete a Webflow collection using the `client.collections.delete()` method, replacing the previously used `client.collections.deleteCollection()` function. Requires the `collectionId` to identify the collection to be deleted.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/MIGRATION.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclient.collections.delete(collectionId)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Webflow Collection Field\nDESCRIPTION: Illustrates how to delete a Webflow collection field using the `client.collections.fields.delete()` method. Requires both `collectionId` and `fieldId` parameters to specify the collection and the field within that collection to be deleted.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/MIGRATION.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nclient.collections.fields.delete(collectionId, fieldId)\n```\n\n----------------------------------------\n\nTITLE: Creating a Product and SKU with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to create a new product and its default SKU using the Webflow API. It requires the `ecommerce:write` scope. The product type will be set to 'Advanced' upon creation.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_52\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.create(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting Live Item from Collection Webflow API with TypeScript\nDESCRIPTION: This snippet retrieves details of a live item from a collection using the Webflow API. It needs the `CMS:read` scope. The `getItemLive` function requires the `collectionId` and `itemId` as parameters to identify the item.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_82\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.getItemLive(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Creating a SKU for a Product with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to create a new SKU for a product using the Webflow API. It requires the `ecommerce:write` scope. Creating a SKU sets the product type to 'Advanced'.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_55\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.createSku(\"580e63e98c9a982ac9b8b741\", \"580e63fc8c9a982ac9b8b745\", {\n    skus: [{}]\n});\n```\n\n----------------------------------------\n\nTITLE: Get Custom Code for a Site - Webflow API (TypeScript)\nDESCRIPTION: Retrieves all scripts applied to a specified Webflow site. The scripts must be registered to the site before they can be applied. Requires the `custom_code:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_99\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.scripts.getCustomCode(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Updating Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to update one or more items in a Webflow CMS collection using the client.collections.items.updateItems method. It takes the collectionId and an object containing an array of items to update, each with its id, cmsLocaleId, and fieldData.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_73\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.updateItems(\"580e63fc8c9a982ac9b8b745\", {\n    items: [\n        {\n            id: \"66f6ed9576ddacf3149d5ea6\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca5\",\n            fieldData: {\n                name: \"Ne Paniquez Pas\",\n                slug: \"ne-paniquez-pas\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5ea6\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca4\",\n            fieldData: {\n                name: \"No Entrar en P\\u00E1nico\",\n                slug: \"no-entrar-en-panico\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5eaa\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca5\",\n            fieldData: {\n                name: \"Au Revoir et Merci pour Tous les Poissons\",\n                slug: \"au-revoir-et-merci\",\n            },\n        },\n        {\n            id: \"66f6ed9576ddacf3149d5eaa\",\n            cmsLocaleId: \"66f6e966c9e1dc700a857ca4\",\n            fieldData: {\n                name: \"Hasta Luego y Gracias por Todo el Pescado\",\n                slug: \"hasta-luego-y-gracias\",\n            },\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Handling Webflow API Errors\nDESCRIPTION: This snippet shows how to handle errors thrown by the Webflow SDK. It uses a try-catch block to catch exceptions, specifically checking for Webflow.ForbiddenError and Webflow.BadRequestError to handle specific error cases.  It assumes that the 'webflow' library has been installed and that 'accessToken' has been defined.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient, Webflow } from 'webflow';\nconst webflow = new WebflowClient({ accessToken: 'your_access_token' });\n\ntry {\n  const sites = await webflow.sites.get(...);\n} catch (e) {\n  if (e instanceof Webflow.ForbiddenError) {\n    console.log(e.body.message);\n  } else if (e instanceof Webflow.BadRequestError) {\n    console.log(e.body.message);\n  } else {\n    throw e;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to update a user's information by ID for a site using the Webflow API client. It uses the `update` method, requiring the site's unique identifier (`siteId`), the user's unique identifier (`userId`), and an object containing the fields to update. The `email` and `password` fields cannot be updated using this endpoint. This operation requires the `users:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_48\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.users.update(\"580e63e98c9a982ac9b8b741\", \"580e63e98c9a982ac9b8b741\", {\n    data: {\n        name: \"Some One\",\n        acceptPrivacy: false,\n        acceptCommunications: false,\n    },\n    accessGroups: [\"webflowers\", \"platinum\", \"free-tier\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Create Collection Field - Typescript\nDESCRIPTION: This snippet demonstrates how to create a custom field in a collection using the Webflow API client. Slugs must be all lowercase letters without spaces. It requires the `cms:write` scope. The function takes the collection ID and field creation request as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_67\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.fields.create(\"580e63fc8c9a982ac9b8b745\", {\n    isEditable: true,\n    isRequired: false,\n    type: \"RichText\",\n    displayName: \"Post Body\",\n    helpText: \"Add the body of your post here\",\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting a User by ID with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to delete a user by ID for a site using the Webflow API client. It uses the `delete` method, requiring both the site's unique identifier (`siteId`) and the user's unique identifier (`userId`).  This operation requires the `users:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_47\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.users.delete(\"580e63e98c9a982ac9b8b741\", \"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting a User by ID with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to retrieve a specific user by ID for a site using the Webflow API client. It uses the `get` method, requiring both the site's unique identifier (`siteId`) and the user's unique identifier (`userId`). This operation requires the `users:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_46\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.users.get(\"580e63e98c9a982ac9b8b741\", \"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Listing Orders for a Site with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to retrieve a list of all orders for a given site using the Webflow API. It requires the `ecommerce:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_57\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Get Collection Details - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves the full details of a collection using its ID. It requires the `cms:read` scope and takes a collection ID as input. The function returns a `Webflow.Collection` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.get(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Update Component Content - Typescript\nDESCRIPTION: This snippet demonstrates how to update the content of a component in a specific locale using the Webflow API client. It requires a site ID, component ID, and a locale ID. It also includes node updates with text and property overrides. The maximum nodes that can be updated is 1000.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.components.updateContent(\"580e63e98c9a982ac9b8b741\", \"8505ba55-ef72-629e-f85c-33e4b703d48b\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n    nodes: [\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad623\",\n            text: \"<h1>The Hitchhiker's Guide to the Galaxy</h1>\",\n        },\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad627\",\n            text: \"<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>\",\n        },\n        {\n            nodeId: \"a245c12d-995b-55ee-5ec7-aa36a6cad629\",\n            propertyOverrides: [\n                {\n                    propertyId: \"7dd14c08-2e96-8d3d-2b19-b5c03642a0f0\",\n                    text: \"<div><h1>Time is an <em>illusion</em></h1></div>\",\n                },\n                {\n                    propertyId: \"7dd14c08-2e96-8d3d-2b19-b5c03642a0f1\",\n                    text: \"Life, the Universe and Everything\",\n                },\n            ],\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Page Metadata in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to retrieve metadata information for a single page using the Webflow API.  It requires the `pages:read` scope and takes the page ID as a parameter, along with optional request parameters such as locale ID.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.getMetadata(\"63c720f9347c2139b248e552\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Form Submissions with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to list form submissions for a specific form using the Webflow API client. It uses the `listSubmissions` method, requiring the form's unique identifier (`formId`).  The `forms:read` scope is required for this operation.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_40\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.listSubmissions(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Upserting Custom Code to Page Webflow API with TypeScript\nDESCRIPTION: This snippet applies scripts to a page using the Webflow API. It requires the `custom_code:write` scope. The `upsertCustomCode` function takes `pageId` and an object containing an array of scripts to be applied, including their `id`, `location`, `version`, and `attributes`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_87\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.scripts.upsertCustomCode(\"63c720f9347c2139b248e552\", {\n    scripts: [\n        {\n            id: \"cms_slider\",\n            location: \"header\",\n            version: \"1.0.0\",\n            attributes: {\n                \"my-attribute\": \"some-value\",\n            },\n        },\n        {\n            id: \"alert\",\n            location: \"header\",\n            version: \"0.0.1\",\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Publish a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet publishes a site to one or more domains. It requires the `sites:write` scope and has a rate limit of one successful publish queue per minute. The function takes a site ID and returns a `Webflow.SitesPublishResponse` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.publish(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: List Collections for a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves a list of all collections within a specified site. It requires the `cms:read` scope and takes a site ID as input. The function returns a `Webflow.CollectionList` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting a Form Submission with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to retrieve information about a specific form submission using the Webflow API client. It uses the `getSubmission` method, requiring the form submission's unique identifier (`formSubmissionId`). The `forms:read` scope is necessary for this operation.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_41\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.getSubmission(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Deleting Custom Code from Page Webflow API with TypeScript\nDESCRIPTION: This snippet deletes custom code block from a page using the Webflow API. It needs the `custom_code:write` scope. The `deleteCustomCode` function takes `pageId` as an argument, which represents the unique identifier of the page from which the custom code will be removed.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_88\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.scripts.deleteCustomCode(\"63c720f9347c2139b248e552\");\n```\n\n----------------------------------------\n\nTITLE: Configuring API Request Retries\nDESCRIPTION: This snippet shows how to configure the number of retries for API requests. It passes a maxRetries option to the webflow.sites.get method, overriding the default retry behavior. It assumes that the 'webflow' library has been installed.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from 'webflow';\n\nconst sites = await webflow.sites.get(..., {\n  maxRetries: 10 // override the retries\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Page Content in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to retrieve the content from a static page using the Webflow API.  It includes text nodes, image nodes, and component instances. It requires the `pages:read` scope and takes the page ID as a parameter, along with optional request parameters such as locale ID.  If no locale ID is provided, the API will return content from the primary locale.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.getContent(\"63c720f9347c2139b248e552\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n});\n```\n\n----------------------------------------\n\nTITLE: Update Asset in Webflow\nDESCRIPTION: This snippet shows how to update details of an asset using the `client.assets.update` method. It requires the asset ID as a parameter, and accepts an optional request object containing updated asset properties. The method returns a `Webflow.Asset` object containing the updated asset details. The required scope is `assets:write`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.update(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Get Asset Details in Webflow\nDESCRIPTION: This snippet shows how to retrieve details about an asset using the `client.assets.get` method. It requires the asset ID as a parameter. The method returns a `Webflow.Asset` object containing the asset details. The required scope is `assets:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.get(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Deleting Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to delete one or more items from a specified collection in Webflow using the client.collections.items.deleteItems method. The method requires the collectionId as input, which is the unique identifier for the target collection.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_72\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.deleteItems(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Listing Pages in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to retrieve a list of all pages associated with a specific site using the Webflow API.  It requires the `pages:read` scope and takes the site ID as a parameter, along with optional request parameters such as locale ID.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.list(\"580e63e98c9a982ac9b8b741\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n});\n```\n\n----------------------------------------\n\nTITLE: Updating a Form Submission with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to update hidden fields on a form submission using the Webflow API client. It uses the `updateSubmission` method and requires the form submission's unique identifier (`formSubmissionId`). This operation requires the `forms:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_43\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.updateSubmission(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting Component Content in Webflow using TypeScript\nDESCRIPTION: This snippet demonstrates how to retrieve the static content from a component definition using the Webflow API.  It includes text nodes, image nodes, and nested component instances. It requires the `components:read` scope and takes the site ID and component ID as parameters, along with optional request parameters such as locale ID. If no locale ID is provided, the API returns content that can be localized from the primary locale.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.components.getContent(\"580e63e98c9a982ac9b8b741\", \"8505ba55-ef72-629e-f85c-33e4b703d48b\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Product by ID from Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to retrieve a single product and its associated SKUs by providing its ID and the site ID using the Webflow API. It requires the `ecommerce:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_53\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.get(\"580e63e98c9a982ac9b8b741\", \"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Get Asset Folder Details in Webflow\nDESCRIPTION: This snippet shows how to retrieve details about a specific asset folder using the `client.assets.getFolder` method. It requires the asset folder ID as a parameter. The method returns a `Webflow.AssetFolder` object containing the folder details. The required scope is `assets:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_33\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.getFolder(\"6390c49774a71f0e3c1a08ee\");\n```\n\n----------------------------------------\n\nTITLE: List Inventory - Typescript\nDESCRIPTION: This snippet demonstrates how to list the current inventory levels for a particular SKU item using the Webflow API client. It requires the `ecommerce:read` scope. The function takes the collection ID and item ID as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_64\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.inventory.list(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Get Ecommerce Settings - Typescript\nDESCRIPTION: This snippet demonstrates how to retrieve ecommerce settings for a site using the Webflow API client. It requires the `ecommerce:read` scope. The function takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_66\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.ecommerce.getSettings(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: List Registered Scripts - Typescript\nDESCRIPTION: This snippet shows how to retrieve a list of scripts registered to a specific site using the Webflow API client. It requires the site ID as a parameter. A site can have a maximum of 800 registered scripts.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.scripts.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Delete Custom Code from a Site - Webflow API (TypeScript)\nDESCRIPTION: Removes scripts from a Webflow site that were applied by the application. This does not remove the scripts from the site's registered scripts. Requires the `custom_code:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_101\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.scripts.deleteCustomCode(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Delete Collection Field - Typescript\nDESCRIPTION: This snippet demonstrates how to delete a custom field in a collection using the Webflow API client. It requires the `cms:write` scope. The function takes the collection ID and field ID as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_68\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.fields.delete(\"580e63fc8c9a982ac9b8b745\", \"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Updating an Order with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update an existing order's comment, shippingProvider, and/or shippingTracking using the Webflow API. It requires the `ecommerce:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_59\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.update(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: Update a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet updates an existing site. It requires an Enterprise workspace and the `sites:write` scope. The function takes a site ID and a set of parameters for the update and returns a `Webflow.Site` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.update(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Listing Redirects in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to fetch a list of URL redirect rules configured for a specific site using the Webflow API. It requires an Enterprise workspace and the `sites:read` scope. The function takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_89\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.redirects.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Update Collection Field - Typescript\nDESCRIPTION: This snippet demonstrates how to update a custom field in a collection using the Webflow API client. It requires the `cms:write` scope. The function takes the collection ID, field ID, and field update request as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_69\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.fields.update(\"580e63fc8c9a982ac9b8b745\", \"580e63fc8c9a982ac9b8b745\", {\n    isRequired: false,\n    displayName: \"Post Body\",\n    helpText: \"Add the body of your post here\",\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Form Submissions by Site with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to list form submissions for a specific site using the Webflow API client. It uses the `listSubmissionsBySite` method, requiring the site's unique identifier (`siteId`) and optionally an `elementId`. This operation requires the `forms:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_44\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.listSubmissionsBySite(\"580e63e98c9a982ac9b8b741\", {\n    elementId: \"18259716-3e5a-646a-5f41-5dc4b9405aa0\",\n});\n```\n\n----------------------------------------\n\nTITLE: List Asset Folders in Webflow\nDESCRIPTION: This snippet demonstrates how to list asset folders within a given site using the `client.assets.listFolders` method. It requires the site ID as a parameter. The method returns a `Webflow.AssetFolderList` object containing the list of asset folders. The required scope is `assets:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.listFolders(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Installing Webflow API with npm\nDESCRIPTION: This command installs the webflow-api package using npm. It's a necessary first step before using the SDK in your JavaScript project.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install webflow-api\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Order by ID from Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to retrieve a single order by providing its ID and the site ID using the Webflow API. It requires the `ecommerce:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_58\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.get(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: Listing Pages with Locale ID in Webflow\nDESCRIPTION: Demonstrates how to list pages for a specific site using the `client.pages.list()` method. The `locale` query parameter has been changed to `localeId`. This code shows how to retrieve pages based on a locale identifier.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/MIGRATION.md#_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nclient.pages.list(siteId, { localeId: \"65427cf400e02b306eaa04a0\" })\n```\n\n----------------------------------------\n\nTITLE: Deleting Live Collection Items in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to remove one or more items (up to 100) from the live Webflow site, setting their isDraft property to true, using the client.collections.items.deleteItemsLive method. The only required parameter is the collectionId.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_76\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.deleteItemsLive(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Getting Robots.txt in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to retrieve the robots.txt configuration for a site using the Webflow API. It requires the `site_config:read` scope.  The function takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_94\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.robotsTxt.get(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Publishing Item Webflow API with TypeScript\nDESCRIPTION: This snippet publishes an item or multiple items using Webflow API. It requires the `cms:write` scope. The `publishItem` function takes `collectionId` and an object containing array of `itemIds` to be published.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_85\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.publishItem(\"580e63fc8c9a982ac9b8b745\", {\n    itemIds: [\"itemIds\"],\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Redirect in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update a URL redirection rule from a site using the Webflow API. It requires an Enterprise workspace and the `sites:write` scope. It takes site ID, redirect ID, and the redirect object with updated values.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_92\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.redirects.update(\"580e63e98c9a982ac9b8b741\", \"66c4cb9a20cac35ed19500e6\", {\n    id: \"42e1a2b7aa1a13f768a0042a\",\n    fromUrl: \"/mostly-harmless\",\n    toUrl: \"/earth\",\n});\n```\n\n----------------------------------------\n\nTITLE: Listing Access Groups with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to list access groups for a specific site using the Webflow API client. It uses the `list` method, requiring the site's unique identifier (`siteId`). This operation requires the `users:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_50\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.accessGroups.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting Site Plan in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to get the site plan details for a specified site using the Webflow API. It requires an Enterprise workspace and the `sites:read` scope. The function takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_93\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.plans.getSitePlan(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Updating a Product using Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update an existing product using the Webflow API. It requires the `ecommerce:write` scope.  Updating a product sets the product type to 'Advanced'.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_54\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.products.update(\"580e63e98c9a982ac9b8b741\", \"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Updating an Order to Fulfilled with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update an order's status to fulfilled using the Webflow API. It requires the `ecommerce:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_60\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.updateFulfill(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: Creating Collection Items with Locales in Webflow using Typescript\nDESCRIPTION: This code snippet demonstrates how to create new collection items in multiple locales in Webflow using the client.collections.items.createItems method.  It requires the collectionId, an array of cmsLocaleIds, isArchived, isDraft, and fieldData. This is useful for localized content management.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_78\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.createItems(\"580e63fc8c9a982ac9b8b745\", {\n    cmsLocaleIds: [\"66f6e966c9e1dc700a857ca3\", \"66f6e966c9e1dc700a857ca4\", \"66f6e966c9e1dc700a857ca5\"],\n    isArchived: false,\n    isDraft: false,\n    fieldData: {\n        name: \"Don\\u2019t Panic\",\n        slug: \"dont-panic\",\n    },\n});\n```\n\n----------------------------------------\n\nTITLE: Updating an Order to Unfulfilled with Webflow API (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update an order's status to unfulfilled using the Webflow API. It requires the `ecommerce:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_61\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.orders.updateUnfulfill(\"580e63e98c9a982ac9b8b741\", \"5e8518516e147040726cc415\");\n```\n\n----------------------------------------\n\nTITLE: List Forms in Webflow\nDESCRIPTION: This snippet shows how to list forms for a given site using the `client.forms.list` method. It requires the site ID as a parameter.  The method returns a `Webflow.FormList` object. The required scope is `forms:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_38\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Get Custom Domains for a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves a list of custom domains associated with a site. It requires the `sites:read` scope and takes a site ID as input. The function returns a `Webflow.Domains` object containing the list of domains.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.getCustomDomain(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Listing Users for a Site with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to get a list of users for a site using the Webflow API client. It uses the `list` method, requiring the site's unique identifier (`siteId`). This operation requires the `users:read` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_45\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.users.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Introspect Authorization Token - Webflow API (TypeScript)\nDESCRIPTION: This snippet retrieves information about the authorization token itself. It is an asynchronous function that requires a bearer token from a Data Client App and returns a `Webflow.Authorization` object. Access to this endpoint requires a bearer token from a [Data Client App](/data/docs/getting-started-data-clients).\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.token.introspect();\n```\n\n----------------------------------------\n\nTITLE: Creating Redirect in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to add a new URL redirection rule to a site using the Webflow API. It requires an Enterprise workspace and the `sites:write` scope. It defines a source path (`fromUrl`) and its corresponding destination path (`toUrl`).\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_90\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.redirects.create(\"580e63e98c9a982ac9b8b741\", {\n    id: \"42e1a2b7aa1a13f768a0042a\",\n    fromUrl: \"/mostly-harmless\",\n    toUrl: \"/earth\",\n});\n```\n\n----------------------------------------\n\nTITLE: Create a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet creates a new site within a specified workspace. It requires an Enterprise workspace and the `workspace:write` scope. The function takes a workspace ID and a set of parameters for the new site and returns a `Webflow.Site` object.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.create(\"580e63e98c9a982ac9b8b741\", {\n    name: \"The Hitchhiker's Guide to the Galaxy\",\n});\n```\n\n----------------------------------------\n\nTITLE: Update Component Properties - Typescript\nDESCRIPTION: This snippet demonstrates updating the default property values of a component in a specific locale. It uses the Webflow API client and requires a site ID, component ID, and locale ID. It also includes an array of properties to update.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.components.updateProperties(\"580e63e98c9a982ac9b8b741\", \"8505ba55-ef72-629e-f85c-33e4b703d48b\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n    properties: [\n        {\n            propertyId: \"a245c12d-995b-55ee-5ec7-aa36a6cad623\",\n            text: \"The Hitchhiker\\u2019s Guide to the Galaxy\",\n        },\n        {\n            propertyId: \"a245c12d-995b-55ee-5ec7-aa36a6cad627\",\n            text: \"<div><h3>Dont Panic!</h3><p>Always know where your towel is.</p></div>\",\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: List Custom Code Blocks - Webflow API (TypeScript)\nDESCRIPTION: Retrieves a list of scripts applied to a specific Webflow site and/or individual pages within that site. Requires the `custom_code:read` scope and that the scripts be registered beforehand.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_102\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.scripts.listCustomCodeBlocks(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Create Asset in Webflow\nDESCRIPTION: This snippet demonstrates how to create an asset in Webflow using the `client.assets.create` method. It requires a site ID, file name, and file hash. The method returns a response with `uploadUrl` and `uploadDetails` that are used in a subsequent POST request to Amazon S3 to complete the upload. The required scope is `assets:write`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.create(\"580e63e98c9a982ac9b8b741\", {\n    fileName: \"file.png\",\n    fileHash: \"3c7d87c9575702bc3b1e991f4d3c638e\",\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Live Item from Collection Webflow API with TypeScript\nDESCRIPTION: This snippet shows how to delete a live item from a site using the Webflow API. It needs the `CMS:write` scope. Removing a published item will unpublish the item from the live site and set it to draft.  The function `deleteItemLive` takes a `collectionId` and an `itemId` as input.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_83\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.items.deleteItemLive(\"580e63fc8c9a982ac9b8b745\", \"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Patching Robots.txt in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to update the robots.txt configuration for a site using the Webflow API. It requires the `site_config:write` scope.  This is similar to put but likely allows for partial updates.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_97\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.robotsTxt.patch(\"580e63e98c9a982ac9b8b741\", {\n    rules: [\n        {\n            userAgent: \"googlebot\",\n            allows: [\"/public\"],\n            disallows: [\"/vogon-poetry\", \"/total-perspective-vortex\"],\n        },\n    ],\n    sitemap: \"https://heartofgold.ship/sitemap.xml\",\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring API Request Timeout\nDESCRIPTION: This snippet shows how to configure the timeout for API requests. It passes a timeoutInSeconds option to the webflow.sites.get method, overriding the default timeout.  It assumes that the 'webflow' library has been installed.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { WebflowClient } from 'webflow';\n\nconst sites = await webflow.sites.get(..., {\n  timeoutInSeconds: 30 // override the timeout\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Redirect in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to remove a URL redirection rule from a site using the Webflow API. It requires an Enterprise workspace and the `sites:write` scope. The function takes the site ID and redirect ID as parameters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_91\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.redirects.delete(\"580e63e98c9a982ac9b8b741\", \"66c4cb9a20cac35ed19500e6\");\n```\n\n----------------------------------------\n\nTITLE: Get Component Properties - Typescript\nDESCRIPTION: This snippet illustrates how to retrieve the properties of a component using the Webflow API client.  It requires a site ID and a component ID.  Optionally, a locale ID can be provided. If no localeId is included, the API returns localizable properties from the Primary locale.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.components.getProperties(\"580e63e98c9a982ac9b8b741\", \"8505ba55-ef72-629e-f85c-33e4b703d48b\", {\n    localeId: \"65427cf400e02b306eaa04a0\",\n});\n```\n\n----------------------------------------\n\nTITLE: Delete a Collection - Webflow API (TypeScript)\nDESCRIPTION: This snippet deletes a collection using its ID. It requires the `cms:write` scope and takes a collection ID as input. The function returns void.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.collections.delete(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Listing Components in Webflow using TypeScript\nDESCRIPTION: This snippet shows how to retrieve a list of all components associated with a specific site using the Webflow API.  It requires the `components:read` scope and takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.components.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Getting Custom Code from Page Webflow API with TypeScript\nDESCRIPTION: This snippet retrieves all scripts applied to a specific page using the Webflow API. It needs the `custom_code:read` scope. The `getCustomCode` function takes `pageId` as an argument, which is the unique identifier of the page.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_86\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.pages.scripts.getCustomCode(\"63c720f9347c2139b248e552\");\n```\n\n----------------------------------------\n\nTITLE: Apply Registered Scripts to a Site - Webflow API (TypeScript)\nDESCRIPTION: Applies registered scripts to a Webflow site by its ID. The scripts must first be registered via the 'Register Script' endpoints. Requires the `custom_code:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_100\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.scripts.upsertCustomCode(\"580e63e98c9a982ac9b8b741\", {\n    scripts: [\n        {\n            id: \"cms_slider\",\n            location: \"header\",\n            version: \"1.0.0\",\n            attributes: {\n                \"my-attribute\": \"some-value\",\n            },\n        },\n        {\n            id: \"alert\",\n            location: \"header\",\n            version: \"0.0.1\",\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: Get Webhook Details in Webflow\nDESCRIPTION: This snippet shows how to retrieve details about a specific webhook using the `client.webhooks.get` method. It requires the webhook ID as a parameter. The method returns a `Webflow.Webhook` object containing the webhook details. The required scope is `sites:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_36\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.webhooks.get(\"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Delete a Site - Webflow API (TypeScript)\nDESCRIPTION: This snippet deletes a site. It requires an Enterprise workspace and the `sites:write` scope. The function takes a site ID as input and returns void.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.delete(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Deleting Robots.txt Rules in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to remove specific rules for a user-agent in a site's `robots.txt` file using the Webflow API. To delete all rules for a user-agent, provide an empty rule set. It requires the `site_config:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_96\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.robotsTxt.delete(\"580e63e98c9a982ac9b8b741\", {\n    rules: [\n        {\n            userAgent: \"*\",\n            allows: [\"/public\"],\n            disallows: [\"/bubbles\"],\n        },\n    ],\n});\n```\n\n----------------------------------------\n\nTITLE: List Assets - Typescript\nDESCRIPTION: This snippet shows how to retrieve a list of assets uploaded to a specific site using the Webflow API client. It only requires the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.list(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Create Asset Folder in Webflow\nDESCRIPTION: This snippet shows how to create an asset folder within a given site using the `client.assets.createFolder` method. It requires the site ID and a request object containing the folder's display name. The method returns a `Webflow.AssetFolder` object representing the created folder. The required scope is `assets:write`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.createFolder(\"580e63e98c9a982ac9b8b741\", {\n    displayName: \"my asset folder\",\n});\n```\n\n----------------------------------------\n\nTITLE: Register Hosted Script - Typescript\nDESCRIPTION: This snippet demonstrates registering a hosted script to a specific site using the Webflow API client. It requires the site ID, hosted location, integrity hash, version, and display name.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.scripts.registerHosted(\"580e63e98c9a982ac9b8b741\", {\n    hostedLocation: \"hostedLocation\",\n    integrityHash: \"integrityHash\",\n    version: \"version\",\n    displayName: \"displayName\",\n});\n```\n\n----------------------------------------\n\nTITLE: Register Inline Script - Typescript\nDESCRIPTION: This snippet demonstrates registering an inline script to a specific site using the Webflow API client. It requires the site ID, source code, version, and display name.  Inline scripts are limited to 2000 characters.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.scripts.registerInline(\"580e63e98c9a982ac9b8b741\", {\n    sourceCode: \"alert('hello world');\",\n    version: \"0.0.1\",\n    displayName: \"Alert\",\n});\n```\n\n----------------------------------------\n\nTITLE: Delete Asset in Webflow\nDESCRIPTION: This snippet shows how to delete an asset using the `client.assets.delete` method. It requires the asset ID as a parameter. This method returns void. The required scope is `assets:write`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.assets.delete(\"580e63fc8c9a982ac9b8b745\");\n```\n\n----------------------------------------\n\nTITLE: Delete Webhook in Webflow\nDESCRIPTION: This snippet shows how to remove a webhook using the `client.webhooks.delete` method. It requires the webhook ID as a parameter. This method returns void. The required scope is `sites:read`.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_37\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.webhooks.delete(\"580e64008c9a982ac9b8b754\");\n```\n\n----------------------------------------\n\nTITLE: Deleting a Form Submission with Webflow API (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to delete a form submission using the Webflow API client. It uses the `deleteSubmission` method, requiring the form submission's unique identifier (`formSubmissionId`). This operation requires the `forms:write` scope.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_42\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.forms.deleteSubmission(\"580e63e98c9a982ac9b8b741\");\n```\n\n----------------------------------------\n\nTITLE: Installing Webflow API with yarn\nDESCRIPTION: This command installs the webflow-api package using yarn. It's a necessary first step before using the SDK in your JavaScript project.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn add webflow-api\n```\n\n----------------------------------------\n\nTITLE: Listing Activity Logs in Webflow (TypeScript)\nDESCRIPTION: This snippet demonstrates how to retrieve activity logs for a specific site using the Webflow API. It requires an Enterprise workspace and the `site_activity:read` scope. The function takes the site ID as a parameter.\nSOURCE: https://github.com/webflow/js-webflow-api/blob/master/reference.md#_snippet_98\n\nLANGUAGE: typescript\nCODE:\n```\nawait client.sites.activityLogs.list(\"580e63e98c9a982ac9b8b741\");\n```"
  }
]
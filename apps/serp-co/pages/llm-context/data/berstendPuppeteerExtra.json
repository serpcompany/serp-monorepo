[
  {
    "owner": "berstend",
    "repo": "puppeteer-extra",
    "content": "TITLE: Quickstart Example: Using Stealth Plugin with Playwright-Extra\nDESCRIPTION: Demonstrates how to use playwright-extra as a drop-in replacement for Playwright, incorporating the stealth plugin to hide automation.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst { chromium } = require('playwright-extra')\n\nconst stealth = require('puppeteer-extra-plugin-stealth')()\n\nchromium.use(stealth)\n\nchromium.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n\n  console.log('Testing the stealth plugin..')\n  await page.goto('https://bot.sannysoft.com', { waitUntil: 'networkidle' })\n  await page.screenshot({ path: 'stealth.png', fullPage: true })\n\n  console.log('All done, check the screenshot. ✨')\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Puppeteer Extra with Stealth Plugin\nDESCRIPTION: JavaScript example demonstrating how to use the stealth plugin with puppeteer-extra to launch a browser, visit a page, and take a screenshot.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// puppeteer-extra is a drop-in replacement for puppeteer,\n// it augments the installed puppeteer with plugin functionality\nconst puppeteer = require('puppeteer-extra')\n\n// add stealth plugin and use defaults (all evasion techniques)\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\npuppeteer.use(StealthPlugin())\n\n// puppeteer usage as normal\npuppeteer.launch({ headless: true }).then(async browser => {\n  console.log('Running tests..')\n  const page = await browser.newPage()\n  await page.goto('https://bot.sannysoft.com')\n  await page.waitForTimeout(5000)\n  await page.screenshot({ path: 'testresult.png', fullPage: true })\n  await browser.close()\n  console.log(`All done, check the screenshot. ✨`)\n})\n```\n\n----------------------------------------\n\nTITLE: Quickstart example with stealth and adblocker plugins\nDESCRIPTION: A complete example showing how to use puppeteer-extra with the stealth and adblocker plugins. Demonstrates visiting websites and taking screenshots.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// puppeteer-extra is a drop-in replacement for puppeteer,\n// it augments the installed puppeteer with plugin functionality.\n// Any number of plugins can be added through `puppeteer.use()`\nconst puppeteer = require('puppeteer-extra')\n\n// Add stealth plugin and use defaults (all tricks to hide puppeteer usage)\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\npuppeteer.use(StealthPlugin())\n\n// Add adblocker plugin to block all ads and trackers (saves bandwidth)\nconst AdblockerPlugin = require('puppeteer-extra-plugin-adblocker')\npuppeteer.use(AdblockerPlugin({ blockTrackers: true }))\n\n// That's it, the rest is puppeteer usage as normal 😊\npuppeteer.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n  await page.setViewport({ width: 800, height: 600 })\n\n  console.log(`Testing adblocker plugin..`)\n  await page.goto('https://www.vanityfair.com')\n  await page.waitForTimeout(1000)\n  await page.screenshot({ path: 'adblocker.png', fullPage: true })\n\n  console.log(`Testing the stealth plugin..`)\n  await page.goto('https://bot.sannysoft.com')\n  await page.waitForTimeout(5000)\n  await page.screenshot({ path: 'stealth.png', fullPage: true })\n\n  console.log(`All done, check the screenshots. ✨`)\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Puppeteer with Stealth Plugin in JavaScript\nDESCRIPTION: Example of importing and using the puppeteer-extra-plugin-stealth plugin with all evasions enabled. The code initializes a browser in headless mode, navigates to a test page, and takes a screenshot of the results.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\n// Enable stealth plugin with all evasions\npuppeteer.use(require('puppeteer-extra-plugin-stealth')())\n;(async () => {\n  // Launch the browser in headless mode and set up a page.\n  const browser = await puppeteer.launch({\n    args: ['--no-sandbox'],\n    headless: true\n  })\n  const page = await browser.newPage()\n\n  // Navigate to the page that will perform the tests.\n  const testUrl =\n    'https://intoli.com/blog/' +\n    'not-possible-to-block-chrome-headless/chrome-headless-test.html'\n  await page.goto(testUrl)\n\n  // Save a screenshot of the results.\n  const screenshotPath = '/tmp/headless-test-result.png'\n  await page.screenshot({ path: screenshotPath })\n  console.log('have a look at the screenshot:', screenshotPath)\n\n  await browser.close()\n})()\n```\n\n----------------------------------------\n\nTITLE: Installing Complete Puppeteer Extra Setup\nDESCRIPTION: Command to install the complete setup including puppeteer, puppeteer-extra, and the stealth plugin.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer puppeteer-extra puppeteer-extra-plugin-stealth\n# - or -\nnpm install puppeteer puppeteer-extra puppeteer-extra-plugin-stealth\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Puppeteer Extra in JavaScript\nDESCRIPTION: Demonstrates how to import puppeteer-extra as a drop-in replacement for regular puppeteer in JavaScript. It shows the standard require syntax and how to add plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\n\n// Add plugins\npuppeteer.use(...)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage with JavaScript\nDESCRIPTION: Complete JavaScript example showing how to use the reCAPTCHA plugin with puppeteer-extra. It demonstrates configuring the plugin with a 2captcha provider and using the page.solveRecaptchas() method to automatically solve captchas.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// puppeteer-extra is a drop-in replacement for puppeteer,\n// it augments the installed puppeteer with plugin functionality\nconst puppeteer = require('puppeteer-extra')\n\n// add recaptcha plugin and provide it your 2captcha token (= their apiKey)\n// 2captcha is the builtin solution provider but others would work as well.\n// Please note: You need to add funds to your 2captcha account for this to work\nconst RecaptchaPlugin = require('puppeteer-extra-plugin-recaptcha')\npuppeteer.use(\n  RecaptchaPlugin({\n    provider: {\n      id: '2captcha',\n      token: 'XXXXXXX' // REPLACE THIS WITH YOUR OWN 2CAPTCHA API KEY ⚡\n    },\n    visualFeedback: true // colorize reCAPTCHAs (violet = detected, green = solved)\n  })\n)\n\n// puppeteer usage as normal\npuppeteer.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n  await page.goto('https://www.google.com/recaptcha/api2/demo')\n\n  // That's it, a single line of code to solve reCAPTCHAs 🎉\n  await page.solveRecaptchas()\n\n  await Promise.all([\n    page.waitForNavigation(),\n    page.click(`#recaptcha-demo-submit`)\n  ])\n  await page.screenshot({ path: 'response.png', fullPage: true })\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Puppeteer Extra in TypeScript/ES6\nDESCRIPTION: Shows how to import puppeteer-extra as a module in TypeScript or ES6 environments. It demonstrates the import syntax and adding plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer-extra'\n\n// Add plugins\npuppeteer.use(...)\n```\n\n----------------------------------------\n\nTITLE: Accessing Result Object Properties in JavaScript\nDESCRIPTION: Demonstrates how to destructure the result object returned by the solveRecaptchas method, which contains information about found, filtered, and solved captchas.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nconst {\n  captchas,\n  filtered,\n  solutions,\n  solved,\n  error\n} = await page.solveRecaptchas()\n```\n\n----------------------------------------\n\nTITLE: Simple Proxy Usage with Playwright\nDESCRIPTION: Example showing how to configure a single default proxy for all browser connections using Playwright. The code demonstrates initializing the plugin, launching a browser, and verifying the outbound IP.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// playwright-extra is a drop-in replacement for playwright,\n// it augments the installed playwright with plugin functionality\n// Note: Instead of chromium you can use firefox and webkit as well.\nconst { chromium } = require('playwright-extra')\n\n// Configure and add the proxy router plugin with a default proxy\nconst ProxyRouter = require('@extra/proxy-router')\nchromium.use(\n  ProxyRouter({\n    proxies: { DEFAULT: 'http://user:pass@proxyhost:port' },\n  })\n)\n\n// That's it, the default proxy will be used and proxy authentication handled automatically\nchromium.launch({ headless: false }).then(async (browser) => {\n  const page = await browser.newPage()\n  await page.goto('https://canhazip.com', { waitUntil: 'domcontentloaded' })\n  const ip = await page.evaluate('document.body.innerText')\n  console.log('Outbound IP:', ip)\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Using multiple puppeteer instances with different plugins\nDESCRIPTION: Example demonstrating how to create multiple puppeteer-extra instances with different plugin configurations using addExtra.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst vanillaPuppeteer = require('puppeteer')\n\nconst { addExtra } = require('puppeteer-extra')\nconst AnonymizeUA = require('puppeteer-extra-plugin-anonymize-ua')\n\nasync function main() {\n  const pptr1 = addExtra(vanillaPuppeteer)\n  pptr1.use(\n    AnonymizeUA({\n      customFn: ua => 'Hello1/' + ua.replace('Chrome', 'Beer')\n    })\n  )\n\n  const pptr2 = addExtra(vanillaPuppeteer)\n  pptr2.use(\n    AnonymizeUA({\n      customFn: ua => 'Hello2/' + ua.replace('Chrome', 'Beer')\n    })\n  )\n\n  await checkUserAgent(pptr1)\n  await checkUserAgent(pptr2)\n}\n\nmain()\n\nasync function checkUserAgent(pptr) {\n  const browser = await pptr.launch({ headless: true })\n  const page = await browser.newPage()\n  await page.goto('https://httpbin.org/headers', {\n    waitUntil: 'domcontentloaded'\n  })\n  const content = await page.content()\n  console.log(content)\n  await browser.close()\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Proxy Routing with Playwright\nDESCRIPTION: Advanced example demonstrating how to use multiple proxies and route connections dynamically based on the host. Features include connection blocking, direct connections, and specialized proxy routing by domain.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// playwright-extra is a drop-in replacement for playwright,\n// it augments the installed playwright with plugin functionality\n// Note: Instead of chromium you can use firefox and webkit as well.\nconst { chromium } = require('playwright-extra')\n\n// Configure the proxy router plugin\nconst ProxyRouter = require('@extra/proxy-router')\nconst proxyRouter = ProxyRouter({\n  // define the available proxies (replace this with your proxies)\n  proxies: {\n    // the default browser proxy, can be `null` as well for direct connections\n    DEFAULT: 'http://user:pass@proxyhost:port',\n    // optionally define more proxies you can use in `routeByHost`\n    // you can use whatever names you'd like for them\n    DATACENTER: 'http://user:pass@proxyhost2:port',\n    RESIDENTIAL_US: 'http://user:pass@proxyhost3:port',\n  },\n  // optional function for flexible proxy routing\n  // if this is not specified the `DEFAULT` proxy will be used for all connections\n  routeByHost: async ({ host }) => {\n    if (['pagead2.googlesyndication.com', 'fonts.gstatic.com'].includes(host)) {\n      return 'ABORT' // block connection to certain hosts\n    }\n    if (host.includes('google')) {\n      return 'DIRECT' // use a direct connection for all google domains\n    }\n    if (host.endsWith('.tile.openstreetmap.org')) {\n      return 'DATACENTER' // route heavy images through datacenter proxy\n    }\n    if (host === 'canhazip.com') {\n      return 'RESIDENTIAL_US' // special proxy for this domain\n    }\n    // everything else will use `DEFAULT` proxy\n  },\n})\n\n// Add the plugin\nchromium.use(proxyRouter)\n\n// Launch a browser and run some IP checks\nchromium.launch({ headless: true }).then(async (browser) => {\n  const page = await browser.newPage()\n\n  await page.goto('https://showmyip.com/', { waitUntil: 'domcontentloaded' })\n  const ip1 = await page.evaluate(\"document.querySelector('#ipv4').innerText\")\n  console.log('Outbound IP #1:', ip1)\n  // => 77.191.128.0 (the DEFAULT proxy)\n\n  await page.goto('https://canhazip.com', { waitUntil: 'domcontentloaded' })\n  const ip2 = await page.evaluate('document.body.innerText')\n  console.log('Outbound IP #2:', ip2)\n  // => 104.179.129.27 (the RESIDENTIAL_US proxy)\n\n  console.log(proxyRouter.stats.connectionLog) // list of connections (host => proxy name)\n  // { id: 0, proxy: 'DIRECT', host: 'accounts.google.com' },\n  // { id: 1, proxy: 'DEFAULT', host: 'www.showmyip.com' },\n  // { id: 2, proxy: 'ABORT', host: 'pagead2.googlesyndication.com' },\n  // { id: 3, proxy: 'DEFAULT', host: 'unpkg.com' },\n  // ...\n\n  console.log(proxyRouter.stats.byProxy) // bytes used by proxy\n  // {\n  //   DATACENTER: 441734,\n  //   DEFAULT: 125823,\n  //   DIRECT: 100457,\n  //   RESIDENTIAL_US: 4764,\n  //   ABORT: 0\n  // }\n\n  console.log(proxyRouter.stats.byHost) // bytes used by host\n  // {\n  //   'a.tile.openstreetmap.org': 150685,\n  //   'c.tile.openstreetmap.org': 147054,\n  //   'b.tile.openstreetmap.org': 143995,\n  //   'unpkg.com': 57621,\n  //   'www.googletagmanager.com': 49572,\n  //   'www.showmyip.com': 40408,\n  // ...\n\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Using puppeteer-extra-plugin-repl in JavaScript\nDESCRIPTION: Example of how to use the puppeteer-extra-plugin-repl with puppeteer-extra. It demonstrates launching a browser, navigating to a page, and starting interactive REPL sessions for both page and browser instances.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-repl/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('puppeteer-extra-plugin-repl')())\n\npuppeteer.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n  await page.goto('https://example.com')\n\n  // Start an interactive REPL here with the `page` instance.\n  await page.repl()\n  // Afterwards start REPL with the `browser` instance.\n  await browser.repl()\n\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Solving Captchas with Playwright and Firefox\nDESCRIPTION: Demonstrates how to use the recaptcha plugin with playwright-extra and Firefox to automatically solve captchas.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { firefox } from 'playwright-extra'\n\nimport RecaptchaPlugin from 'puppeteer-extra-plugin-recaptcha'\nfirefox.use(\n  RecaptchaPlugin({\n    provider: {\n      id: '2captcha',\n      token: process.env.TWOCAPTCHA_TOKEN || 'YOUR_API_KEY'\n    }\n  })\n)\n\nfirefox.launch({ headless: false }).then(async browser => {\n  const context = await browser.newContext()\n  const page = await context.newPage()\n  const url = 'https://www.google.com/recaptcha/api2/demo'\n  await page.goto(url, { waitUntil: 'networkidle' })\n\n  console.log('Solving captchas..')\n  await page.solveRecaptchas()\n\n  await Promise.all([\n    page.waitForNavigation({ waitUntil: 'networkidle' }),\n    page.click(`#recaptcha-demo-submit`)\n  ])\n\n  const content = await page.content()\n  const isSuccess = content.includes('Verification Success')\n  console.log('Done', { isSuccess })\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra using npm or yarn\nDESCRIPTION: Commands for installing puppeteer-extra and its dependencies using npm or yarn package managers. Shows how to install with a specific puppeteer version.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer puppeteer-extra\n# - or -\nnpm install puppeteer puppeteer-extra\n\n# puppeteer-extra works with any puppeteer version:\nyarn add puppeteer@2.0.0 puppeteer-extra\n```\n\n----------------------------------------\n\nTITLE: Integrating puppeteer-extra with chrome-aws-lambda\nDESCRIPTION: Example demonstrating how to use puppeteer-extra with chrome-aws-lambda for serverless environments, particularly with the stealth plugin.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst chromium = require('chrome-aws-lambda')\nconst { addExtra } = require('puppeteer-extra')\nconst puppeteerExtra = addExtra(chromium.puppeteer)\n\nconst launch = async () => {\n  puppeteerExtra\n    .launch({\n      args: chromium.args,\n      defaultViewport: chromium.defaultViewport,\n      executablePath: await chromium.executablePath,\n      headless: chromium.headless\n    })\n    .then(async browser => {\n      const page = await browser.newPage()\n      await page.goto('https://www.spacejam.com/archive/spacejam/movie/jam.htm')\n      await page.waitForTimeout(10 * 1000)\n      await browser.close()\n    })\n}\n\nlaunch() // Launch Browser\n```\n\n----------------------------------------\n\nTITLE: TypeScript Implementation Example\nDESCRIPTION: Example showing how to use the reCAPTCHA plugin with TypeScript, demonstrating the plugin's type-safety and integration with puppeteer-extra. Includes proper type imports and configuration.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// `puppeteer-extra` and the recaptcha plugin are written in TS,\n// hence you get perfect type support out of the box :)\n\nimport puppeteer from 'puppeteer-extra'\nimport RecaptchaPlugin from 'puppeteer-extra-plugin-recaptcha'\n\npuppeteer.use(\n  RecaptchaPlugin({\n    provider: {\n      id: '2captcha',\n      token: 'ENTER_YOUR_2CAPTCHA_API_KEY_HERE'\n    }\n  })\n)\n\n// Puppeteer usage as normal (headless is \"false\" just for this demo)\npuppeteer.launch({ headless: false }).then(async browser => {\n  const page = await browser.newPage()\n  await page.goto('https://www.google.com/recaptcha/api2/demo')\n\n  // Even this `Puppeteer.Page` extension is recognized and fully type safe 🎉\n  await page.solveRecaptchas()\n\n  await Promise.all([\n    page.waitForNavigation(),\n    page.click(`#recaptcha-demo-submit`)\n  ])\n  await page.screenshot({ path: 'response.png', fullPage: true })\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Using addExtra with Vanilla Puppeteer in TypeScript/ES6\nDESCRIPTION: Demonstrates how to use the addExtra function to augment a vanilla puppeteer instance with extra plugin functionality in TypeScript or ES6. It shows importing both puppeteer and addExtra as modules, then patching puppeteer.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteerVanilla from 'puppeteer'\nimport { addExtra } from 'puppeteer-extra'\n\n// Patch provided puppeteer and add plugins\nconst puppeteer = addExtra(puppeteerVanilla)\npuppeteer.use(...)\n```\n\n----------------------------------------\n\nTITLE: Using Block Resources Plugin with Dynamic Configuration\nDESCRIPTION: Comprehensive example showing how to dynamically manage blocked resource types during browser automation. This demonstrates adding and removing different resource types for different websites.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-block-resources/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst blockResourcesPlugin = require('puppeteer-extra-plugin-block-resources')()\npuppeteer.use(blockResourcesPlugin)\n\nconst browser = await puppeteer.launch({ headless: false })\nconst page = await browser.newPage()\n\nblockResourcesPlugin.blockedTypes.add('image')\nawait page.goto('http://www.msn.com/', {waitUntil: 'domcontentloaded'})\n\nblockResourcesPlugin.blockedTypes.add('stylesheet')\nblockResourcesPlugin.blockedTypes.add('other') // e.g. favicon\nawait page.goto('http://news.ycombinator.com', {waitUntil: 'domcontentloaded'})\n\nblockResourcesPlugin.blockedTypes.delete('stylesheet')\nblockResourcesPlugin.blockedTypes.delete('other')\nblockResourcesPlugin.blockedTypes.add('media')\nblockResourcesPlugin.blockedTypes.add('script')\nawait page.goto('http://www.youtube.com', {waitUntil: 'domcontentloaded'})\n```\n\n----------------------------------------\n\nTITLE: Using Puppeteer User Preferences Plugin\nDESCRIPTION: Example showing how to use the plugin to set custom Chrome preferences like default font size. The code demonstrates importing the plugin, configuring user preferences, and launching the browser.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-user-preferences/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('puppeteer-extra-plugin-user-preferences')({userPrefs: {\n  webkit: {\n    webprefs: {\n      default_font_size: 22\n    }\n  }\n}}))\nconst browser = await puppeteer.launch()\n```\n\n----------------------------------------\n\nTITLE: Using Different Browsers with Playwright-Extra\nDESCRIPTION: Example of using different browsers (chromium, firefox, webkit) with playwright-extra and plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { chromium, firefox, webkit } from 'playwright-extra'\n\nchromium.use(plugin)\nfirefox.use(plugin)\nwebkit.use(plugin)\n```\n\n----------------------------------------\n\nTITLE: Using puppeteer-extra with TypeScript\nDESCRIPTION: TypeScript example showing how to use puppeteer-extra with the adblocker and stealth plugins, including proper imports.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer-extra'\n\nimport AdblockerPlugin from 'puppeteer-extra-plugin-adblocker'\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\n\npuppeteer.use(AdblockerPlugin()).use(StealthPlugin())\n\npuppeteer\n  .launch({ headless: false, defaultViewport: null })\n  .then(async browser => {\n    const page = await browser.newPage()\n    await page.goto('https://bot.sannysoft.com')\n    await page.waitForTimeout(5000)\n    await page.screenshot({ path: 'stealth.png', fullPage: true })\n    await browser.close()\n  })\n```\n\n----------------------------------------\n\nTITLE: Using puppeteer-extra-plugin-anonymize-ua with Puppeteer Extra in JavaScript\nDESCRIPTION: Example of how to use the puppeteer-extra-plugin-anonymize-ua with Puppeteer Extra. It demonstrates default usage and using a custom function for User-Agent replacement.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-anonymize-ua/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('puppeteer-extra-plugin-anonymize-ua')())\n// or\npuppeteer.use(require('puppeteer-extra-plugin-anonymize-ua')({\n  customFn: (ua) => 'MyCoolAgent/' + ua.replace('Chrome', 'Beer')}\n))\nconst browser = await puppeteer.launch()\n```\n\n----------------------------------------\n\nTITLE: Using Stealth Plugin with Custom Options in Playwright\nDESCRIPTION: Example of using the stealth plugin with playwright-extra and custom options for evasion techniques.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { chromium } from 'playwright-extra'\n\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\nchromium.use(StealthPlugin())\n\nchromium.plugins.setDependencyDefaults('stealth/evasions/webgl.vendor', {\n  vendor: 'Bob',\n  renderer: 'Alice'\n})\n\nchromium.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n\n  console.log('Testing the webgl spoofing feature of the stealth plugin..')\n  await page.goto('https://webglreport.com', { waitUntil: 'networkidle' })\n  await page.screenshot({ path: 'webgl.png', fullPage: true })\n\n  console.log('All done, check the screenshot. ✨')\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Integrating puppeteer-extra with Kikobeats/browserless\nDESCRIPTION: Example showing how to use puppeteer-extra with the Kikobeats/browserless library, which provides a puppeteer-like interface for Headless production scenarios.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\npuppeteer.use(StealthPlugin())\n\nconst browserless = require('browserless')({ puppeteer })\n\nconst saveBufferToFile = (buffer, fileName) => {\n  const wstream = require('fs').createWriteStream(fileName)\n  wstream.write(buffer)\n  wstream.end()\n}\n\nbrowserless\n  .screenshot('https://bot.sannysoft.com', { device: 'iPhone 6' })\n  .then(buffer => {\n    const fileName = 'screenshot.png'\n    saveBufferToFile(buffer, fileName)\n    console.log(`your screenshot is here: `, fileName)\n  })\n```\n\n----------------------------------------\n\nTITLE: Using Puppeteer Extra Plugin Flash with Puppeteer\nDESCRIPTION: Example demonstrating how to use the Flash plugin with puppeteer-extra to enable Flash support. The code launches a non-headless browser instance and navigates to a website that contains Flash content.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-flash/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('puppeteer-extra-plugin-flash')())\n;(async () => {\n  const browser = await puppeteer.launch({ headless: false })\n  const page = await browser.newPage()\n  await page.goto('http://ultrasounds.com', { waitUntil: 'domcontentloaded' })\n})()\n```\n\n----------------------------------------\n\nTITLE: Installing @extra/proxy-router with Yarn or NPM\nDESCRIPTION: Commands to install the @extra/proxy-router plugin using either Yarn or NPM package managers.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @extra/proxy-router\n# - or -\nnpm install @extra/proxy-router\n```\n\n----------------------------------------\n\nTITLE: Adblocker Plugin Options Interface\nDESCRIPTION: TypeScript interface definition showing all available configuration options for the adblocker plugin, including options to block trackers, block annoyances, and configure caching behavior.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PluginOptions {\n  /** Whether or not to block trackers (in addition to ads). Default: false */\n  blockTrackers: boolean\n  /** Whether or not to block trackers and other annoyances, including cookie\n      notices. Default: false */\n  blockTrackersAndAnnoyances: boolean\n  /** Persist adblocker engine cache to disk for speedup. Default: true */\n  useCache: boolean\n  /** Optional custom directory for adblocker cache files. Default: undefined */\n  cacheDir?: string\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Window Outer Dimensions in Puppeteer Extra\nDESCRIPTION: This code snippet defines a Plugin class that extends PuppeteerExtraPlugin. It fixes missing window.outerWidth and window.outerHeight in headless mode and sets the viewport to match window size, unless specified by the user.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/window.outerdimensions/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n\n  get name() {\n    return 'stealth/evasions/window.outerdimensions'\n  }\n\n  async onPageCreated(page) {\n    await page.evaluateOnNewDocument(() => {\n      try {\n        if (window.outerWidth && window.outerHeight) {\n          return // nothing to do here\n        }\n        const windowFrame = 85 // probably OS and WM dependent\n        window.outerWidth = window.innerWidth\n        window.outerHeight = window.innerHeight + windowFrame\n      } catch (err) {}\n    })\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using puppeteer-extra-plugin-repl without extending native classes\nDESCRIPTION: Example of using the puppeteer-extra-plugin-repl without extending native Puppeteer classes. It demonstrates how to use the plugin's repl method directly with page and plugin instances.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-repl/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst repl = require('puppeteer-extra-plugin-repl')({ addToPuppeteerClass: false })\npuppeteer.use(repl)\n\npuppeteer.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n  await page.goto('https://example.com')\n\n  // Start an interactive REPL here with the `page` instance.\n  await repl.repl(page)\n  // Afterwards start REPL with the `repl` instance itself. 🐴\n  await repl.repl(repl)\n\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Integrating puppeteer-extra with puppeteer-cluster\nDESCRIPTION: Example showing how to use puppeteer-extra with puppeteer-cluster to create a cluster of puppeteer workers with plugin support.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst { Cluster } = require('puppeteer-cluster')\nconst vanillaPuppeteer = require('puppeteer')\n\nconst { addExtra } = require('puppeteer-extra')\nconst Stealth = require('puppeteer-extra-plugin-stealth')\nconst Recaptcha = require('puppeteer-extra-plugin-recaptcha')\n\nasync function main() {\n  // Create a custom puppeteer-extra instance using `addExtra`,\n  // so we could create additional ones with different plugin config.\n  const puppeteer = addExtra(vanillaPuppeteer)\n  puppeteer.use(Stealth())\n  puppeteer.use(Recaptcha())\n\n  // Launch cluster with puppeteer-extra\n  const cluster = await Cluster.launch({\n    puppeteer,\n    maxConcurrency: 2,\n    concurrency: Cluster.CONCURRENCY_CONTEXT\n  })\n\n  // Define task handler\n  await cluster.task(async ({ page, data: url }) => {\n    await page.goto(url)\n\n    const { hostname } = new URL(url)\n    const { captchas } = await page.findRecaptchas()\n    console.log(`Found ${captchas.length} captcha on ${hostname}`)\n\n    await page.screenshot({ path: `${hostname}.png`, fullPage: true })\n  })\n\n  // Queue any number of tasks\n  cluster.queue('https://bot.sannysoft.com')\n  cluster.queue('https://www.google.com/recaptcha/api2/demo')\n  cluster.queue('http://www.wikipedia.org/')\n\n  await cluster.idle()\n  await cluster.close()\n  console.log(`All done, check the screenshots. ✨`)\n}\n\n// Let's go\nmain().catch(console.warn)\n```\n\n----------------------------------------\n\nTITLE: Configuring UserAgentOverride Plugin for Puppeteer Extra in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the UserAgentOverride plugin with puppeteer-extra. It shows how to remove the default user-agent-override evasion and add a custom one with specific user agent and locale settings.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/user-agent-override/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\n\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\nconst stealth = StealthPlugin()\n// Remove this specific stealth plugin from the default set\nstealth.enabledEvasions.delete('user-agent-override')\npuppeteer.use(stealth)\n\n// Stealth plugins are just regular `puppeteer-extra` plugins and can be added as such\nconst UserAgentOverride = require('puppeteer-extra-plugin-stealth/evasions/user-agent-override')\n// Define custom UA and locale\nconst ua = UserAgentOverride({\n  userAgent: 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)',\n  locale: 'de-DE,de'\n})\npuppeteer.use(ua)\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Chrome Runtime Evasion in JavaScript\nDESCRIPTION: Class definition for a PuppeteerExtraPlugin that mocks the chrome.runtime object when it's not available, such as when running in headless mode on secure sites.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.runtime/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nclass: Plugin\n```\n\n----------------------------------------\n\nTITLE: Customizing Enabled Evasions in Puppeteer Stealth Plugin\nDESCRIPTION: Example demonstrating how to selectively disable specific evasion techniques from the stealth plugin. This allows for fine-tuning which detection prevention methods are used.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Remove specific evasion from enabled ones dynamically\nconst pluginStealth = require('puppeteer-extra-plugin-stealth')()\npluginStealth.enabledEvasions.delete('console.debug')\npuppeteer.use(pluginStealth)\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Iframe Content Window Evasion in JavaScript\nDESCRIPTION: This code snippet defines a Plugin class that extends PuppeteerExtraPlugin to fix the HEADCHR_IFRAME detection issue. It specifically targets the problem with iframe.contentWindow.chrome, focusing on srcdoc-powered iframes due to a Chromium bug.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/iframe.contentWindow/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n  // ... rest of the class implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Using a Specific Evasion Plugin Directly in Puppeteer\nDESCRIPTION: Example showing how to bypass the main stealth module and require a specific evasion plugin directly. This approach provides more granular control over which evasion techniques are applied.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// bypass main module and require a specific stealth plugin directly:\npuppeteer.use(\n  require('puppeteer-extra-plugin-stealth/evasions/console.debug')()\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Navigator.Languages Plugin Class for Puppeteer-Extra\nDESCRIPTION: A class that extends PuppeteerExtraPlugin to modify navigator.languages in the browser. It accepts an options object with a 'languages' array property that defaults to ['en-US', 'en'].\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.languages/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin {\n  constructor (opts = {}) {\n    this.opts = opts\n    const defaults = { languages: ['en-US', 'en'] }\n    this.opts = { ...defaults, ...this.opts }\n  }\n\n  /* ... implementation ... */\n}\n```\n\n----------------------------------------\n\nTITLE: Converting from Playwright to Puppeteer Usage\nDESCRIPTION: Diff showing the necessary changes to convert the Playwright example to work with Puppeteer instead. Only import and method calls need to be changed while the core logic stays the same.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n- const { chromium } = require('playwright-extra')\n+ const puppeteer = require('puppeteer-extra')\n// ...\n- chromium.use(proxyRouter)\n+ puppeteer.use(proxyRouter)\n// ...\n- chromium.launch()\n+ puppeteer.launch()\n// ...\n```\n\n----------------------------------------\n\nTITLE: Creating a Hello World Plugin for puppeteer-extra\nDESCRIPTION: Example of creating a basic plugin for puppeteer-extra that logs when a page is created and the browser's user agent.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// hello-world-plugin.js\nconst { PuppeteerExtraPlugin } = require('puppeteer-extra-plugin')\n\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n\n  get name() {\n    return 'hello-world'\n  }\n\n  async onPageCreated(page) {\n    this.debug('page created', page.url())\n    const ua = await page.browser().userAgent()\n    this.debug('user agent', ua)\n  }\n}\n\nmodule.exports = function(pluginConfig) {\n  return new Plugin(pluginConfig)\n}\n\n// foo.js\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('./hello-world-plugin')())\n;(async () => {\n  const browser = await puppeteer.launch({ headless: false })\n  const page = await browser.newPage()\n  await page.goto('http://example.com', { waitUntil: 'domcontentloaded' })\n  await browser.close()\n})()\n```\n\n----------------------------------------\n\nTITLE: Manual Control Flow for RecaptchaSolver in JavaScript\nDESCRIPTION: Shows the step-by-step process that page.solveRecaptchas() implements internally, allowing for more granular control over the captcha solving workflow.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nlet { captchas, filtered, error } = await page.findRecaptchas()\nlet { solutions, error } = await page.getRecaptchaSolutions(captchas)\nlet { solved, error } = await page.enterRecaptchaSolutions(solutions)\n```\n\n----------------------------------------\n\nTITLE: Implementing onPageCreated Method in Puppeteer Extra Plugin\nDESCRIPTION: Example of implementing the onPageCreated method in a Puppeteer Extra plugin. This method is called when a new page is created and can be used to modify the page, such as changing the user agent.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nasync onPageCreated (page) {\n  let ua = await page.browser().userAgent()\n  if (this.opts.stripHeadless) {\n    ua = ua.replace('HeadlessChrome/', 'Chrome/')\n  }\n  this.debug('new ua', ua)\n  await page.setUserAgent(ua)\n}\n```\n\n----------------------------------------\n\nTITLE: Ensuring Captcha is Present Before Solving in JavaScript\nDESCRIPTION: Demonstrates how to ensure a captcha is fully loaded on the page before attempting to solve it by waiting for the captcha iframe to be present in the DOM.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_11\n\nLANGUAGE: js\nCODE:\n```\nawait page.waitForSelector('iframe[src*=\"recaptcha/\"]')\nawait page.solveRecaptchas()\n```\n\n----------------------------------------\n\nTITLE: TypeScript & ESM Usage with Playwright-Extra\nDESCRIPTION: Example of using playwright-extra with TypeScript and ESM, demonstrating type support and stealth plugin usage.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { chromium } from 'playwright-extra'\n\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\n\nchromium.use(StealthPlugin())\n\nchromium.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n\n  console.log('Testing the stealth plugin..')\n  await page.goto('https://bot.sannysoft.com', { waitUntil: 'networkidle' })\n  await page.screenshot({ path: 'stealth.png', fullPage: true })\n\n  console.log('All done, check the screenshot. ✨')\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: REPL Session Commands in JavaScript\nDESCRIPTION: Example REPL session commands demonstrating various operations that can be performed on a page instance, such as navigation, clicking elements, and evaluating JavaScript.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-repl/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n> page.url()\n// => https://example.com\n> page.click('a')\n> page.url()\n// => https://www.iana.org/domains/reserved\n> page.content()\n// => <!DOCTYPE html><html><head> ...\n> page.goto('https://google.com')\n> page.type('input', 'what is the answer to life the universe and everything')\n> page.click('input[type=submit]')\n> page.url()\n// => https://www.google.com/search?source=hp&ei=u9oXW5HpO8a ...\n> page.evaluate(() => document.querySelector('h3 a').textContent)\n// => Question 42 (The Impossible Quiz) - The Impossible Quiz Wiki - Fandom\n```\n\n----------------------------------------\n\nTITLE: Installing playwright-extra and Playwright\nDESCRIPTION: Commands to install playwright-extra and Playwright using yarn or npm package managers.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add playwright playwright-extra\n# - or -\nnpm install playwright playwright-extra\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Instances with Different Plugins\nDESCRIPTION: Demonstrates how to create multiple independent instances of playwright-extra with different plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport playwright from 'playwright'\nimport { addExtra } from 'playwright-extra'\n\nconst chromium1 = addExtra(playwright.chromium)\nconst chromium2 = addExtra(playwright.chromium)\n\nchromium1.use(onePlugin)\nchromium2.use(anotherPlugin)\n// chromium1 and chromium2 are independent\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Output for Playwright-Extra\nDESCRIPTION: Commands to enable debug output for playwright-extra and puppeteer-extra on macOS/Linux and Windows.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# macOS/Linux (Bash)\nDEBUG=playwright-extra*,puppeteer-extra* node myscript.js\n\n# Windows (Powershell)\n$env:DEBUG='playwright-extra*,puppeteer-extra*';node myscript.js\n```\n\n----------------------------------------\n\nTITLE: Installing Stealth Plugin for Playwright-Extra\nDESCRIPTION: Commands to install the stealth plugin for use with playwright-extra using yarn or npm.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-stealth\n# - or -\nnpm install puppeteer-extra-plugin-stealth\n```\n\n----------------------------------------\n\nTITLE: Accessing Available Evasions in Puppeteer Stealth Plugin\nDESCRIPTION: Example showing how to access the list of available evasions in the stealth plugin. This is useful when you need to know what evasion techniques are available for configuration.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst pluginStealth = require('puppeteer-extra-plugin-stealth')()\nconsole.log(pluginStealth.availableEvasions) // => Set { 'user-agent', 'console.debug' }\npuppeteer.use(pluginStealth)\n```\n\n----------------------------------------\n\nTITLE: Configuring puppeteer-extra-plugin-devtools with custom authentication\nDESCRIPTION: Shows how to initialize the plugin with custom authentication credentials for securing the public DevTools tunnel.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst devtools = require('puppeteer-extra-plugin-devtools')({\n  auth: { user: 'francis', pass: 'president' }\n})\npuppeteer.use(devtools)\n\npuppeteer.launch().then(async browser => {\n  console.log('tunnel url:', (await devtools.createTunnel(browser)).url)\n  // => tunnel url: https://devtools-tunnel-n9aogqwx3d.localtunnel.me\n})\n```\n\n----------------------------------------\n\nTITLE: Generating Native-like Function Strings in JavaScript\nDESCRIPTION: This utility function generates a cross-browser toString result that mimics native code. It's used to create convincing native-looking function representations.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nmakeNativeString(name?)\n```\n\n----------------------------------------\n\nTITLE: Preloading Function Copies Cache in JavaScript\nDESCRIPTION: This function preloads a cache of function copies and data to prevent potential snooping of internal proxy functions. It's executed once per execution context for security.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\npreloadCache()\n```\n\n----------------------------------------\n\nTITLE: Configuring Adblocker Plugin Options\nDESCRIPTION: JavaScript example showing how to configure the adblocker plugin with custom options, specifically enabling tracker blocking before applying it to Puppeteer.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst AdblockerPlugin = require('puppeteer-extra-plugin-adblocker')\nconst adblocker = AdblockerPlugin({\n  blockTrackers: true // default: false\n})\npuppeteer.use(adblocker)\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Proxy Router Options\nDESCRIPTION: Defines the configuration options for the proxy router, including proxy definitions, routing functions, and server settings. This interface allows users to configure multiple named proxies and define routing logic based on request hosts.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ProxyRouterOpts {\n  /**\n   * A dictionary of proxies to be made available to the browser and router.\n   *\n   * An optional entry named `DEFAULT` will be used for all requests, unless overriden by `routeByHost`.\n   * If the `DEFAULT` entry is omitted no proxy will be used by default.\n   *\n   * The value of an entry can be a string (format: `http://user:pass@proxyhost:port`) or `null` (direct connection).\n   * Proxy authentication is handled automatically by the router.\n   *\n   * @example\n   * proxies: {\n   *   DEFAULT: \"http://user:pass@proxyhost:port\", // use this proxy by default\n   *   RESIDENTIAL_US: \"http://user:pass@proxyhost2:port\" // use this for specific hosts with `routeByHost`\n   * }\n   */\n  proxies?: {\n    /**\n     * The default proxy for the browser (format: `http://user:pass@proxyhost:port`),\n     * if omitted or `null` no proxy will be used by default\n     */\n    DEFAULT?: string | null\n    /**\n     * Any other custom proxy names which can be used for routing later\n     * (e.g. `'DATACENTER_US': 'http://user:pass@proxyhost:port'`)\n     */\n    [key: string]: string | null\n  }\n\n  /**\n   * An optional function to allow proxy routing based on the target host of the request.\n   *\n   * A return value of nothing, `null` or `DEFAULT` will result in the DEFAULT proxy being used as configured.\n   * A return value of `DIRECT` will result in no proxy being used.\n   * A return value of `ABORT` will cancel/block this request.\n   *\n   * Any other string as return value is assumed to be a reference to the configured `proxies` dict.\n   *\n   * @note The browser will most often establish only a single proxy connection per host.\n   *\n   * @example\n   * routeByHost: async ({ host }) => {\n   *   if (host.includes('google')) { return \"DIRECT\" }\n   *   return 'RESIDENTIAL_US'\n   * }\n   *\n   */\n  routeByHost?: RouteByHostFn\n  /** Collect traffic and connection stats, default: true */\n  collectStats?: boolean\n  /** Don't print any proxy connection errors to stderr, default: false */\n  muteProxyErrors?: boolean\n  /** Suppress proxy errors for specific hosts */\n  muteProxyErrorsForHost?: string[]\n  /** Options for the local proxy-chain server  */\n  proxyServerOpts?: ProxyServerOpts\n  /**\n   * Optionally exempt hosts from going through a proxy, even our internal routing proxy.\n   *\n   * Examples:\n   * `.com` or `chromium.org` or `.domain.com`\n   *\n   * @see\n   * https://chromium.googlesource.com/chromium/src/+/HEAD/net/docs/proxy.md#proxy-bypass-rules\n   * https://www-archive.mozilla.org/quality/networking/docs/aboutno_proxy_for.html\n   */\n  proxyBypassList?: string[]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing sendMessageHandler for Chrome Runtime in JavaScript\nDESCRIPTION: Method that mocks the chrome.runtime.sendMessage functionality to prevent detection of headless browser mode.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.runtime/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nsendMessageHandler()\n```\n\n----------------------------------------\n\nTITLE: Extending PuppeteerExtraPlugin for Navigator Hardware Concurrency Modification\nDESCRIPTION: A plugin class that extends PuppeteerExtraPlugin to modify the navigator.hardwareConcurrency property in the browser. It accepts an optional configuration object to customize the reported number of CPU cores, defaulting to 4 if not specified.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.hardwareConcurrency/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass: Plugin(https://github.com/berstend/puppeteer-extra/blob/9534845cc95088e65c2d53bfb029263976fc9add/packages/puppeteer-extra-plugin-stealth/evasions/navigator.hardwareConcurrency/index.js#L16-L37)\n```\n\n----------------------------------------\n\nTITLE: Using Puppeteer Extra Plugin with Custom Method\nDESCRIPTION: Example of using a Puppeteer Extra plugin with a custom method. This snippet demonstrates how to use a plugin method that takes a browser instance as a parameter.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst fancyPlugin = require('puppeteer-extra-plugin-fancy')()\npuppeteer.use(fancyPlugin)\nconst browser = await puppeteer.launch()\nawait fancyPlugin.killBrowser(browser)\n```\n\n----------------------------------------\n\nTITLE: Parsing Media Codec Input in JavaScript\nDESCRIPTION: This function normalizes input strings for media codec types and codecs. It handles various formats of input to ensure consistent processing for codec spoofing.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/media.codecs/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvideo / webm\ncodecs = 'vp8, vorbis'\nvideo / mp4\ncodecs = 'avc1.42E01E'\naudio / x - m4a\naudio / ogg\ncodecs = 'vorbis'\n```\n\n----------------------------------------\n\nTITLE: Modifying Object toString Results in JavaScript\nDESCRIPTION: This helper function modifies the toString() result of a provided object. It's useful for creating consistent string representations of modified objects or functions.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\npatchToString(obj, str)\n```\n\n----------------------------------------\n\nTITLE: Stripping Proxy from Error Stacks in JavaScript\nDESCRIPTION: This function wraps a JS Proxy Handler and removes its presence from error stack traces when traps throw errors. It helps maintain stealth by preventing the detection of JS Proxies in error stacks.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nstripProxyFromErrors(handler)\n```\n\n----------------------------------------\n\nTITLE: Replacing Object Properties Stealthily in JavaScript\nDESCRIPTION: This function replaces the property of an object in a stealthy way, often working on the prototype to avoid leaving traces. It's useful for modifying browser APIs without detection.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nreplaceProperty(obj, propName, descriptorOverrides)\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Output for proxy-router\nDESCRIPTION: Commands to enable debug logging for the proxy-router plugin on both macOS/Linux and Windows environments.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# macOS/Linux (Bash)\nDEBUG=*proxy-router* node myscript.js\n\n# Windows (Powershell)\n$env:DEBUG='*proxy-router*';node myscript.js\n```\n\n----------------------------------------\n\nTITLE: Replacing Properties with Proxies in JavaScript\nDESCRIPTION: This all-in-one method replaces a property with a JS Proxy using the provided handler. It applies various stealth techniques and is meant for modifying native Browser APIs.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nreplaceWithProxy(obj, propName, handler)\n```\n\n----------------------------------------\n\nTITLE: Creating multiple tunnels for a browser fleet\nDESCRIPTION: Demonstrates how to create separate DevTools tunnels for multiple browser instances running concurrently, with custom authentication.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst devtools = require('puppeteer-extra-plugin-devtools')()\ndevtools.setAuthCredentials('bob', 'swordfish')\npuppeteer.use(devtools)\n;(async () => {\n  const browserFleet = await Promise.all(\n    [...Array(3)].map(slot => puppeteer.launch())\n  )\n  for (const [index, browser] of browserFleet.entries()) {\n    const { url } = await devtools.createTunnel(browser)\n    console.info(`Browser ${index}'s devtools frontend can be found at: ${url}`)\n  }\n})()\n// =>\n// Browser 0's devtools frontend can be found at: https://devtools-tunnel-fzenb4zuav.localtunnel.me\n// Browser 1's devtools frontend can be found at: https://devtools-tunnel-qe2t5rghme.localtunnel.me\n// Browser 2's devtools frontend can be found at: https://devtools-tunnel-pp83sdi4jo.localtunnel.me\n```\n\n----------------------------------------\n\nTITLE: Defining WebDriver Evasion Plugin Class\nDESCRIPTION: A Puppeteer plugin class that extends PuppeteerExtraPlugin to remove the navigator.webdriver property. This helps avoid detection of automated browser instances by removing a key identifier.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.webdriver/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin\n```\n\n----------------------------------------\n\nTITLE: TypeScript & ESM Import Examples for Playwright\nDESCRIPTION: Example of importing and using the proxy-router plugin with Playwright in TypeScript or ESM (ECMAScript modules) environments.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// You can use any browser: chromium, firefox, webkit\nimport { firefox } from 'playwright-extra'\nimport ProxyRouter from '@extra/proxy-router'\n// ...\nfirefox.use(proxyRouter)\n```\n\n----------------------------------------\n\nTITLE: Setting authentication credentials for the DevTools tunnel\nDESCRIPTION: Shows how to set basic authentication credentials for securing the public DevTools tunnel after plugin initialization.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst devtools = require('puppeteer-extra-plugin-devtools')()\npuppeteer.use(devtools)\n\npuppeteer.launch().then(async browser => {\n  devtools.setAuthCredentials('bob', 'swordfish')\n  const tunnel = await devtools.createTunnel(browser)\n})\n```\n\n----------------------------------------\n\nTITLE: Class Definition for Navigator Permissions Evasion Plugin in JavaScript\nDESCRIPTION: A class that extends PuppeteerExtraPlugin to bypass navigator.permissions detection. This plugin is part of the puppeteer-extra-plugin-stealth package and helps evade browser automation detection.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.permissions/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript & ESM Import Examples for Puppeteer\nDESCRIPTION: Example of importing and using the proxy-router plugin with Puppeteer in TypeScript or ESM (ECMAScript modules) environments.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport puppeteer from 'puppeteer-extra'\nimport ProxyRouter from '@extra/proxy-router'\n// ...\npuppeteer.use(proxyRouter)\n```\n\n----------------------------------------\n\nTITLE: Modifying Puppeteer Launch Options in beforeLaunch Hook\nDESCRIPTION: Example of using the beforeLaunch hook to modify Puppeteer launch options, such as adding a Flash plugin path.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nasync beforeLaunch (options) {\n  if (this.opts.flashPluginPath) {\n    options.args.push(`--ppapi-flash-path=${this.opts.flashPluginPath}`)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Handling Browser Launch Arguments in JavaScript\nDESCRIPTION: This class extends PuppeteerExtraPlugin to handle browser launch arguments that may reveal automation. It strips certain arguments when launching the browser to mimic a regular browser more closely.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/defaultArgs/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n\n  get name() {\n    return 'stealth/evasions/defaultArgs'\n  }\n\n  async onPageCreated(page) {\n    // Empty for now\n  }\n\n  beforeLaunch(options = {}) {\n    // Empty for now\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript imports for puppeteer-cluster integration\nDESCRIPTION: Import statements for using puppeteer-extra with puppeteer-cluster in a TypeScript environment.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Cluster } from 'puppeteer-cluster'\nimport vanillaPuppeteer from 'puppeteer'\n\nimport { addExtra } from 'puppeteer-extra'\nimport Stealth from 'puppeteer-extra-plugin-stealth'\nimport Recaptcha from 'puppeteer-extra-plugin-recaptcha'\n```\n\n----------------------------------------\n\nTITLE: Using Debug Logger in puppeteer-extra Plugins\nDESCRIPTION: Example of using the built-in debug logger in a puppeteer-extra plugin, which automatically namespaces the output.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nthis.debug('hello world')\n// will output e.g. 'puppeteer-extra-plugin:anonymize-ua hello world'\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Puppeteer Extra Stealth\nDESCRIPTION: Template class definition for creating stealth plugins in Puppeteer Extra. The class extends PuppeteerExtraPlugin and accepts optional configuration options. This serves as a base template for implementing detection evasion plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_template/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Site Isolation for Cross-Origin Iframes in Puppeteer\nDESCRIPTION: Shows how to configure Puppeteer to disable site isolation, which allows accessing and solving captchas within cross-origin iframes.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: js\nCODE:\n```\npuppeteer.launch({\n  args: [\n    '--disable-features=IsolateOrigins,site-per-process,SitePerProcess',\n    '--flag-switches-begin --disable-site-isolation-trials --flag-switches-end'\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing afterLaunch Method in Puppeteer Extra Plugin\nDESCRIPTION: Example of implementing the afterLaunch method in a Puppeteer Extra plugin. This method is called after the browser has been launched and can be used to perform actions or log information about the launched browser instance.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nasync afterLaunch (browser, opts) {\n  this.debug('browser has been launched', opts.options)\n}\n```\n\n----------------------------------------\n\nTITLE: Using addExtra with Vanilla Puppeteer in JavaScript\nDESCRIPTION: Illustrates how to use the addExtra function to augment a vanilla puppeteer instance with extra plugin functionality in JavaScript. It shows importing both puppeteer and addExtra, then patching puppeteer.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteerVanilla = require('puppeteer')\nconst { addExtra } = require('puppeteer-extra')\n\n// Patch provided puppeteer and add plugins\nconst puppeteer = addExtra(puppeteerVanilla)\npuppeteer.use(...)\n```\n\n----------------------------------------\n\nTITLE: Setting Up TypeScript Project for Playwright-Extra\nDESCRIPTION: Step-by-step commands to set up a TypeScript project for use with playwright-extra, including necessary dependencies and configuration.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/playwright-extra/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Optional: If you don't have yarn yet\nnpm i --global yarn\n\n# Optional: Create new package.json if it's a new project\nyarn init -y\n\n# Add basic typescript dependencies\nyarn add --dev typescript @types/node esbuild esbuild-register\n\n# Bootstrap a tsconfig.json\nyarn tsc --init --target ES2020 --lib ES2020 --module commonjs --rootDir src --outDir dist\n\n# Add dependencies used in the quick start example\nyarn add playwright playwright-extra puppeteer-extra-plugin-stealth\n\n# Create source folder for the .ts files\nmkdir src\n\n# Now place the example code above in `src/index.ts`\n\n# Run the typescript code without the need of compiling it first\nnode -r esbuild-register src/index.ts\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra plugins\nDESCRIPTION: Commands for installing necessary plugins used in the quickstart example, specifically the stealth and adblocker plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-stealth puppeteer-extra-plugin-adblocker\n# - or -\nnpm install puppeteer-extra-plugin-stealth puppeteer-extra-plugin-adblocker\n```\n\n----------------------------------------\n\nTITLE: Redirecting toString Requests in JavaScript\nDESCRIPTION: This function redirects toString requests from one object to another. It's useful for maintaining the appearance of unmodified objects while actually using proxies.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nredirectToString(proxyObj, originalObj)\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer Extra Plugin Adblocker\nDESCRIPTION: Commands to install the adblocker plugin along with its dependencies using either Yarn or npm package managers.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-adblocker\n# - or -\nnpm install puppeteer-extra-plugin-adblocker\n```\n\n----------------------------------------\n\nTITLE: Mocking Chrome Runtime with Proxy in JavaScript\nDESCRIPTION: Example of using mockWithProxy to create a proxy-based mock of chrome.runtime.sendMessage function\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nmockWithProxy(\n  chrome.runtime,\n  'sendMessage',\n  function sendMessage() {},\n  proxyHandler\n)\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer Extra reCAPTCHA Plugin\nDESCRIPTION: Commands to install the puppeteer-extra-plugin-recaptcha package using either yarn or npm. Also includes installation commands for all required dependencies for first-time users.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-recaptcha\n# - or -\nnpm install puppeteer-extra-plugin-recaptcha\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer puppeteer-extra puppeteer-extra-plugin-recaptcha\n# - or -\nnpm install puppeteer puppeteer-extra puppeteer-extra-plugin-recaptcha\n```\n\n----------------------------------------\n\nTITLE: Creating Stealth Proxy for Navigator MimeTypes in JavaScript\nDESCRIPTION: Example of using createProxy to create a stealthified JS Proxy for navigator mimeTypes\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\ncreateProxy(navigator.mimeTypes.__proto__.namedItem, proxyHandler) // => Proxy\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Output\nDESCRIPTION: Command showing how to run a script with DEBUG environment variable to enable detailed debug output from puppeteer-extra and its plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nDEBUG=puppeteer-extra,puppeteer-extra-plugin:* node myscript.js\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Defaults in JavaScript\nDESCRIPTION: Example of defining default options for a puppeteer-extra plugin, which can be overridden by users during instantiation.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nget defaults () {\n  return {\n    stripHeadless: true,\n    makeWindows: true,\n    customFn: null\n  }\n}\n\n// Users can overwrite plugin defaults during instantiation:\npuppeteer.use(require('puppeteer-extra-plugin-foobar')({ makeWindows: false }))\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Dependencies in JavaScript\nDESCRIPTION: Example of specifying dependencies for a puppeteer-extra plugin, which will be automatically required by puppeteer-extra.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nget dependencies () {\n  return new Set(['user-preferences'])\n}\n// Will ensure the 'puppeteer-extra-plugin-user-preferences' plugin is loaded.\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer with @extra/proxy-router\nDESCRIPTION: Commands to install Puppeteer along with the proxy-router plugin for first-time users.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer puppeteer-extra @extra/proxy-router\n# - or -\nnpm install puppeteer puppeteer-extra @extra/proxy-router\n```\n\n----------------------------------------\n\nTITLE: Accessing Plugin Options in JavaScript\nDESCRIPTION: Example of accessing plugin options, which are typically a merge of default options and user-defined options.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nget defaults () { return { foo: \"bar\" } }\n\nasync onPageCreated (page) {\n  this.debug(this.opts.foo) // => bar\n}\n```\n\n----------------------------------------\n\nTITLE: Plugin Options Interface in TypeScript\nDESCRIPTION: Defines the TypeScript interface for the plugin's configuration options, including visual feedback, error handling, and various solver behaviors.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\ninterface PluginOptions {\n  /** Visualize reCAPTCHAs based on their state */\n  visualFeedback: boolean // default: true\n  /** Throw on errors instead of returning them in the error property */\n  throwOnError: boolean // default: false\n  /** Only solve captchas and challenges visible in the browser viewport */\n  solveInViewportOnly: boolean // default: false\n  /** Solve scored based captchas with no challenge (e.g. reCAPTCHA v3) */\n  solveScoreBased: boolean // default: false\n  /** Solve invisible captchas that have no active challenge */\n  solveInactiveChallenges: boolean // default: false\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling debug output for puppeteer-extra\nDESCRIPTION: Command to run a script with debug output enabled for puppeteer-extra and its plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nDEBUG=puppeteer-extra,puppeteer-extra-plugin:* node myscript.js\n```\n\n----------------------------------------\n\nTITLE: Splitting Object Path String in JavaScript\nDESCRIPTION: Example of using splitObjPath to parse a dot notation path string into object name and property name\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nsplitObjPath(`HTMLMediaElement.prototype.canPlayType`)\n// => {objName: \"HTMLMediaElement.prototype\", propName: \"canPlayType\"}\n```\n\n----------------------------------------\n\nTITLE: CLI Usage Options\nDESCRIPTION: Available command-line options for customizing the extraction process including exclusion, inclusion, and minification settings\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/extract-stealth-evasions/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npx extract-stealth-evasions -h\nUsage: extract-stealth-evasions [options]\n\nOptions:\n  --version      Show version number                                   [boolean]\n  -e, --exclude  Exclude evasion (repeat for multiple)\n  -i, --include  Include evasion (repeat for multiple)\n  -l, --list     List available evasions\n  -h, --help     Show help                                             [boolean]\n  -m, --minify   Minify the output                     [boolean] [default: true]\n```\n\n----------------------------------------\n\nTITLE: Local Installation Commands\nDESCRIPTION: Commands for installing and running the tool locally using yarn\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/extract-stealth-evasions/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\nnode index.js\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-repl with Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-repl package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-repl/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-repl\n```\n\n----------------------------------------\n\nTITLE: Setting Up the Lerna Monorepo for Puppeteer-Extra Development\nDESCRIPTION: Commands to set up the initial development environment for the puppeteer-extra monorepo, including installing dependencies, bootstrapping packages, and building TypeScript sources.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Install deps\nyarn\n\n# Bootstrap the packages in the current Lerna repo.\n# Installs all of their dependencies and links any cross-dependencies.\nyarn bootstrap\n\n# Build all TypeScript sources\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin with Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin\n```\n\n----------------------------------------\n\nTITLE: Importing PuppeteerExtraPlugin in JavaScript\nDESCRIPTION: Shows how to import the PuppeteerExtraPlugin class in JavaScript, including the breaking change in v3.0.1 that switched to a named export.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Before\nconst PuppeteerExtraPlugin = require('puppeteer-extra-plugin')\n\n// After (>= v3.0.1)\nconst { PuppeteerExtraPlugin } = require('puppeteer-extra-plugin')\n```\n\n----------------------------------------\n\nTITLE: Managing Dependencies in Puppeteer-Extra Lerna Monorepo\nDESCRIPTION: Commands for managing dependencies across packages in the monorepo, including adding and removing packages, updating project-wide dependencies, and handling package-specific dependencies.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Install debug in all packages\nyarn lerna add debug\n\n# Install fs-extra to puppeteer-extra-plugin-user-data-dir\nyarn lerna add fs-extra --scope=puppeteer-extra-plugin-user-data-dir\n\n# Remove dependency\n# https://github.com/lerna/lerna/issues/833\nyarn lerna exec --concurrency 1 'yarn remove fs-extra; echo 0'\n\n# Run test in all packages\nyarn test\n\n# Update JSDoc based documentation in markdown files\nyarn docs\n\n# Upgrade project wide deps like puppeteer\n# (We keep the devDependency version blurry)\nrm -rf node_modules\nrm -rf yarn.lock\nyarn\nyarn lerna bootstrap\n\n# Update deps within packages (interactive)\nyarn lernaupdate\n\n# If in doubt :-(\nyarn lerna exec \"rm -f yarn.lock; rm -rf node_modules; echo 0\"\nrm -f yarn.lock &&  rm -rf node_modules && yarn cache clean\n\n# Run tests of specific package\ncd packages/puppeteer-extra-plugin-stealth\nyarn test\n\n# Run tests of specific stealth evasion\ncd packages/puppeteer-extra-plugin-stealth\nyarn ava -v ./evasions/user-agent-override/index.test.js\n\n# Test a local monorepo package in an outside folder as it would've been installed from the registry\n# Change PACKAGE_DIR to the path of this monorepo and PACKAGE to the package you wish to install\nPACKAGE=puppeteer-extra PACKAGE_DIR=/Users/foo/puppeteer-extra/packages && yarn remove $(echo $PACKAGE); true && rm -f $(pwd)/$(echo $PACKAGE)-latest.tgz && yarn --cwd $(echo $PACKAGE_DIR)/$(echo $PACKAGE) pack --filename $(pwd)/$(echo $PACKAGE)-latest.tgz && YARN_CACHE_FOLDER=/tmp/yarn yarn add file:$(pwd)/$(echo $PACKAGE)-latest.tgz && rm -rf /tmp/yarn\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-click-and-wait with yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-click-and-wait package using yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-click-and-wait/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-click-and-wait\n```\n\n----------------------------------------\n\nTITLE: Specifying Plugin Requirements in JavaScript\nDESCRIPTION: Example of defining requirements for a puppeteer-extra plugin, such as needing to run last or requiring data from other plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nget requirements () {\n  return new Set(['runLast', 'dataFromPlugins'])\n}\n```\n\n----------------------------------------\n\nTITLE: Installing via NPX Command\nDESCRIPTION: Simple command to extract stealth evasions using npx without installation requirements\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/extract-stealth-evasions/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx extract-stealth-evasions\n```\n\n----------------------------------------\n\nTITLE: Exposing and Consuming Plugin Data in JavaScript\nDESCRIPTION: Example of how plugins can expose data and how other plugins can consume this data using the getDataFromPlugins method.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// plugin1.js\nget data () {\n  return [\n    {\n      name: 'userPreferences',\n      value: { foo: 'bar' }\n    },\n    {\n      name: 'userPreferences',\n      value: { hello: 'world' }\n    }\n  ]\n\n// plugin2.js\nget requirements () { return new Set(['dataFromPlugins']) }\n\nasync beforeLaunch () {\n  const prefs = this.getDataFromPlugins('userPreferences').map(d => d.value)\n  this.debug(prefs) // => [ { foo: 'bar' }, { hello: 'world' } ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright with @extra/proxy-router\nDESCRIPTION: Commands to install Playwright along with the proxy-router plugin for first-time users.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/plugin-proxy-router/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add playwright playwright-extra @extra/proxy-router\n# - or -\nnpm install playwright playwright-extra @extra/proxy-router\n```\n\n----------------------------------------\n\nTITLE: Loading Stealth Evasions via CDN\nDESCRIPTION: JavaScript one-liner to dynamically load the stealth evasions script from gitCDN into the browser\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/extract-stealth-evasions/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.body.appendChild(Object.assign(document.createElement('script'), {src: 'https://gitcdn.xyz/repo/berstend/puppeteer-extra/stealth-js/stealth.min.js'}))\n```\n\n----------------------------------------\n\nTITLE: Using Adblocker Plugin with Puppeteer in JavaScript\nDESCRIPTION: JavaScript example showing how to use the adblocker plugin with puppeteer-extra to automatically block ads while browsing. The example demonstrates loading Google search results and taking a screenshot.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// puppeteer-extra is a drop-in replacement for puppeteer,\n// it augments the installed puppeteer with plugin functionality\nconst puppeteer = require('puppeteer-extra')\n\n// Add adblocker plugin, which will transparently block ads in all pages you\n// create using puppeteer.\nconst { DEFAULT_INTERCEPT_RESOLUTION_PRIORITY } = require('puppeteer')\nconst AdblockerPlugin = require('puppeteer-extra-plugin-adblocker')\npuppeteer.use(\n  AdblockerPlugin({\n    // Optionally enable Cooperative Mode for several request interceptors\n    interceptResolutionPriority: DEFAULT_INTERCEPT_RESOLUTION_PRIORITY\n  })\n)\n\n// puppeteer usage as normal\npuppeteer.launch({ headless: true }).then(async browser => {\n  const page = await browser.newPage()\n  // Visit a page, ads are blocked automatically!\n  await page.goto('https://www.google.com/search?q=rent%20a%20car')\n\n  await page.waitForTimeout(5 * 1000)\n  await page.screenshot({ path: 'response.png', fullPage: true })\n\n  console.log(`All done, check the screenshots. ✨`)\n  await browser.close()\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin Class for Chrome App Evasion in JavaScript\nDESCRIPTION: A Plugin class that extends PuppeteerExtraPlugin to mock the chrome.app object in headless browser environments. It accepts optional configuration options and injects code to create a fake chrome.app object with appropriate properties and methods.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.app/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass: [Plugin](https://github.com/berstend/puppeteer-extra/blob/e6133619b051febed630ada35241664eba59b9fa/packages/puppeteer-extra-plugin-stealth/evasions/chrome.app/index.js#L11-L97)\n```\n\n----------------------------------------\n\nTITLE: Publishing Puppeteer-Extra Packages to NPM\nDESCRIPTION: Commands for publishing updated packages to NPM, including verification steps to ensure everything is properly set up before publishing and post-publishing fixes for dependency links.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# make sure you're signed into npm before publishing\n# yarn publishing is broken so lerna uses npm\nnpm whoami\n\n# ensure everything is up2date and peachy\nyarn\nyarn bootstrap\nyarn lerna link\nyarn build\nyarn test\n\n# Phew, let's publish these packages!\n# - Will publish all changed packages\n# - Will ask for new pkg version per package\n# - Will updated inter-package dependency versions automatically\nyarn lerna publish\n\n# Fix new dependency version symlinks\nyarn bootstrap && yarn lerna link\n```\n\n----------------------------------------\n\nTITLE: Defining Chrome LoadTimes Plugin Class\nDESCRIPTION: Plugin class that extends PuppeteerExtraPlugin to mock the chrome.loadTimes function. It creates a functional mock using the WebPerformance API to maintain compatibility with deprecated but still existing Chrome-specific timing APIs. Uses PerformanceTiming API intentionally instead of Navigation Timing Level 2 API.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.loadTimes/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Navigator Vendor Plugin with Puppeteer Extra\nDESCRIPTION: Example showing how to configure and use the navigator.vendor plugin with puppeteer-extra. Demonstrates removing the default stealth plugin configuration and adding a custom vendor value.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.vendor/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\n\nconst StealthPlugin = require('puppeteer-extra-plugin-stealth')\nconst stealth = StealthPlugin()\n// Remove this specific stealth plugin from the default set\nstealth.enabledEvasions.delete('navigator.vendor')\npuppeteer.use(stealth)\n\n// Stealth plugins are just regular `puppeteer-extra` plugins and can be added as such\nconst NavigatorVendorPlugin = require('puppeteer-extra-plugin-stealth/evasions/navigator.vendor')\nconst nvp = NavigatorVendorPlugin({ vendor: 'Apple Computer, Inc.' }) // Custom vendor\npuppeteer.use(nvp)\n```\n\n----------------------------------------\n\nTITLE: Navigator Plugins Stealth Plugin Implementation in JavaScript\nDESCRIPTION: A plugin class that extends PuppeteerExtraPlugin to emulate navigator.mimeTypes and navigator.plugins in headless mode. The implementation creates functional mocks that match regular headful Chrome behavior with proper cross-referencing between mimeTypes and plugins.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/navigator.plugins/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    // Implementation details not shown in the documentation\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Plugin Class Definition for WebGL Vendor/Renderer Modification\nDESCRIPTION: Class definition for a Puppeteer Extra plugin that extends PuppeteerExtraPlugin. The plugin allows customization of WebGL vendor and renderer strings, defaulting to Intel-based values to avoid detection of headless mode. Accepts optional configuration for vendor and renderer strings.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/webgl.vendor/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor (opts = {}) {\n    super({\n      vendor: 'Intel Inc.',\n      renderer: 'Intel Iris OpenGL Engine',\n      ...opts\n    })\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Class Definition for SourceURL Stealth Evasion Plugin\nDESCRIPTION: This code defines a Plugin class that extends PuppeteerExtraPlugin to strip sourceURL annotations from scripts injected by Puppeteer. This helps prevent detection of automation by removing identifying information from stacktraces.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/sourceurl/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nclass: [Plugin](https://github.com/berstend/puppeteer-extra/blob/e6133619b051febed630ada35241664eba59b9fa/packages/puppeteer-extra-plugin-stealth/evasions/sourceurl/index.js#L9-L58)\n```\n\n----------------------------------------\n\nTITLE: Using Adblocker Plugin with Puppeteer in TypeScript\nDESCRIPTION: TypeScript example demonstrating how to integrate the adblocker plugin with puppeteer-extra. This example shows how to enable tracker blocking and visit a website with non-headless browser.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer-extra'\nimport Adblocker from 'puppeteer-extra-plugin-adblocker'\n\npuppeteer.use(Adblocker({ blockTrackers: true }))\n\npuppeteer\n  .launch({ headless: false, defaultViewport: null })\n  .then(async browser => {\n    const page = await browser.newPage()\n    await page.goto('https://www.vanityfair.com')\n    await page.waitForTimeout(60 * 1000)\n    await browser.close()\n  })\n```\n\n----------------------------------------\n\nTITLE: Using puppeteer-extra-plugin-font-size with Default Options\nDESCRIPTION: Example of how to use the font-size plugin with puppeteer-extra. It shows how to import the plugin, add it to puppeteer, and launch the browser with default or custom font size settings.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-font-size/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\npuppeteer.use(require('puppeteer-extra-plugin-font-size')())\n// or\npuppeteer.use(require('puppeteer-extra-plugin-font-size')({defaultFontSize: 18}))\nconst browser = await puppeteer.launch()\n```\n\n----------------------------------------\n\nTITLE: Basic usage of puppeteer-extra-plugin-devtools\nDESCRIPTION: Demonstrates how to use the devtools plugin with puppeteer-extra to create a tunnel to a headless browser instance and access its DevTools remotely.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst devtools = require('puppeteer-extra-plugin-devtools')()\npuppeteer.use(devtools)\n\npuppeteer\n  .launch({ headless: true, defaultViewport: null })\n  .then(async browser => {\n    console.log('Start')\n    const tunnel = await devtools.createTunnel(browser)\n    console.log(tunnel.url)\n\n    const page = await browser.newPage()\n    await page.goto('https://example.com')\n    console.log('All setup.')\n  })\n```\n\n----------------------------------------\n\nTITLE: Solving Captchas in Iframes with JavaScript\nDESCRIPTION: Demonstrates how to solve captchas that appear within iframes by iterating through child frames and applying the solveRecaptchas method to each frame.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: js\nCODE:\n```\n// Loop over all potential frames on that page\nfor (const frame of page.mainFrame().childFrames()) {\n  // Attempt to solve any potential captchas in those frames\n  await frame.solveRecaptchas()\n}\n```\n\n----------------------------------------\n\nTITLE: Using clickAndWaitForNavigation in Puppeteer\nDESCRIPTION: Example demonstrating how to use the clickAndWaitForNavigation method provided by the plugin. This method simplifies the common pattern of waiting for navigation after clicking an element, compared to the more verbose Promise.all approach.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-click-and-wait/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nawait page.clickAndWaitForNavigation('input#submitData')\n\n// as opposed to:\n\nawait Promise.all([\n  page.waitForNavigation(waitOptions),\n  page.click('input#submitData', clickOptions),\n])\n```\n\n----------------------------------------\n\nTITLE: Mock Implementation of chrome.csi in Puppeteer Extra Stealth Plugin\nDESCRIPTION: A plugin class that extends PuppeteerExtraPlugin to mock the deprecated chrome.csi function when running in headless mode. It uses the WebPerformance API to create a functional replacement that matches Chromium's internal implementation.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.csi/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nclass Plugin extends PuppeteerExtraPlugin {\n  constructor(opts = {}) {\n    super(opts)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Plugin Methods to Existing Browser Pages in JavaScript\nDESCRIPTION: Shows how to manually add the recaptcha solver plugin methods to pre-existing browser pages when not using browser.newPage().\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_10\n\nLANGUAGE: js\nCODE:\n```\nconst recaptcha = RecaptchaPlugin()\nconst pages = await browser.pages()\nfor (const page in pages) {\n  // Add plugin methods to existing pages\n  await recaptcha.onPageCreated(page)\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a DevTools URL for a specific page\nDESCRIPTION: Demonstrates how to get a DevTools frontend deep link for a specific page in the browser, allowing direct access to that page's inspector.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst page = await browser.newPage()\nconst tunnel = await devtools.createTunnel(browser)\nconsole.log(tunnel.getUrlForPage(page))\n// => https://devtools-tunnel-bmkjg26zmr.localtunnel.me/devtools/inspector.html?ws(...)\n```\n\n----------------------------------------\n\nTITLE: Sanitizing Error Stack Traces in JavaScript\nDESCRIPTION: This function removes error lines from stack traces up to and including a specified anchor line. It's useful for cleaning up error messages to hide certain implementation details.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nstripErrorWithAnchor(err, anchor)\n```\n\n----------------------------------------\n\nTITLE: TypeScript Usage of Puppeteer Extra with Stealth Plugin\nDESCRIPTION: TypeScript example showing how to use the stealth plugin with puppeteer-extra, leveraging type support.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer-extra'\nimport StealthPlugin from 'puppeteer-extra-plugin-stealth'\n\npuppeteer\n  .use(StealthPlugin())\n  .launch({ headless: true })\n  .then(async browser => {\n    const page = await browser.newPage()\n    await page.goto('https://bot.sannysoft.com')\n    await page.waitForTimeout(5000)\n    await page.screenshot({ path: 'stealth.png', fullPage: true })\n    await browser.close()\n  })\n```\n\n----------------------------------------\n\nTITLE: Debugging Puppeteer Extra with Environment Variables in Bash\nDESCRIPTION: Shows how to enable debug logging for puppeteer-extra and its plugins by setting the DEBUG environment variable before running a script.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-recaptcha/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nDEBUG=puppeteer-extra,puppeteer-extra-plugin:* node myscript.js\n```\n\n----------------------------------------\n\nTITLE: Defining Plugin class for User Data Directory management in JavaScript\nDESCRIPTION: This code snippet defines a Plugin class that extends PuppeteerExtraPlugin. It manages user data directories for Chromium-based browsers. The class accepts optional configuration options.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-user-data-dir/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nPlugin(opts = {})\n```\n\n----------------------------------------\n\nTITLE: Installing Full Puppeteer Setup with Adblocker\nDESCRIPTION: Commands to install the complete setup including Puppeteer, puppeteer-extra, and the adblocker plugin using either Yarn or npm package managers.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-adblocker/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer puppeteer-extra puppeteer-extra-plugin-adblocker\n# - or -\nnpm install puppeteer puppeteer-extra puppeteer-extra-plugin-adblocker\n```\n\n----------------------------------------\n\nTITLE: Importing Specific Evasion Plugin in Puppeteer Extra\nDESCRIPTION: This code snippet demonstrates how to bypass the main module and require a specific evasion plugin in puppeteer-extra. It uses the console.debug evasion plugin as an example.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\npuppeteer.use(\n  require('puppeteer-extra-plugin-stealth/evasions/console.debug')()\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing connectHandler for Chrome Runtime in JavaScript\nDESCRIPTION: Method that mocks the chrome.runtime.connect functionality as documented in Chrome's extension API. This prevents detection of headless browser mode.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/chrome.runtime/readme.md#2025-04-23_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconnectHandler()\n```\n\n----------------------------------------\n\nTITLE: Getting the local DevTools URL\nDESCRIPTION: Demonstrates how to retrieve the local DevTools frontend URL for a browser instance, useful for local debugging scenarios.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst puppeteer = require('puppeteer-extra')\nconst devtools = require('puppeteer-extra-plugin-devtools')()\npuppeteer.use(devtools)\n\npuppeteer.launch().then(async browser => {\n  console.log(devtools.getLocalDevToolsUrl(browser))\n  // => http://localhost:55952\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Block Resources Plugin with Static Configuration\nDESCRIPTION: Example of initializing the block resources plugin with predefined resource types to block when setting up Puppeteer.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-block-resources/readme.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst { DEFAULT_INTERCEPT_RESOLUTION_PRIORITY } = require('puppeteer')\npuppeteer.use(require('puppeteer-extra-plugin-block-resources')({\n  blockedTypes: new Set(['image', 'stylesheet']),\n  // Optionally enable Cooperative Mode for several request interceptors\n  interceptResolutionPriority: DEFAULT_INTERCEPT_RESOLUTION_PRIORITY\n}))\n```\n\n----------------------------------------\n\nTITLE: Making Nested Functions Native in JavaScript\nDESCRIPTION: This function recursively applies native-like toString results to all nested functions of an object. It's useful for maintaining consistency in modified objects.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\npatchToStringNested(obj)\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-user-data-dir using Yarn\nDESCRIPTION: This command installs the puppeteer-extra-plugin-user-data-dir package using Yarn package manager. It adds the plugin as a dependency to the project.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-user-data-dir/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-user-data-dir\n```\n\n----------------------------------------\n\nTITLE: Closing a DevTools tunnel\nDESCRIPTION: Shows how to manually close a DevTools tunnel when it's no longer needed. Tunnels automatically close when the script exits.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst tunnel = await devtools.createTunnel(browser)\ntunnel.close()\n```\n\n----------------------------------------\n\nTITLE: Getting the public tunnel URL\nDESCRIPTION: Shows how to access the public DevTools tunnel URL after creating a tunnel for a browser instance.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst tunnel = await devtools.createTunnel(browser)\nconsole.log(tunnel.url)\n// => https://devtools-tunnel-sdoqqj95vg.localtunnel.me\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer Extra Plugin Stealth with npm/yarn\nDESCRIPTION: Command to install the stealth plugin package using either yarn or npm package managers.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-stealth\n# - or -\nnpm install puppeteer-extra-plugin-stealth\n```\n\n----------------------------------------\n\nTITLE: Replacing WebGL Method with Proxy in JavaScript\nDESCRIPTION: Example of using replaceObjPathWithProxy to replace a WebGL method with a proxied version\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-stealth/evasions/_utils/readme.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nreplaceObjPathWithProxy(\n  'WebGLRenderingContext.prototype.getParameter',\n  proxyHandler\n)\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-anonymize-ua with Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-anonymize-ua package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-anonymize-ua/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-anonymize-ua\n```\n\n----------------------------------------\n\nTITLE: Using repl method standalone in JavaScript\nDESCRIPTION: Example of using the repl method standalone to inspect an arbitrary object or class instance.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-repl/readme.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst repl = require('puppeteer-extra-plugin-repl')()\nawait repl.repl(<object or class instance to inspect>)\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-font-size via Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-font-size package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-font-size/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-font-size\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-block-resources with Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-block-resources package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-block-resources/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-block-resources\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer User Preferences Plugin\nDESCRIPTION: Command to install the puppeteer-extra-plugin-user-preferences package using yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-user-preferences/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-user-preferences\n```\n\n----------------------------------------\n\nTITLE: Installing Puppeteer Extra Plugin Flash via Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-flash package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-flash/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-flash\n```\n\n----------------------------------------\n\nTITLE: Installing puppeteer-extra-plugin-devtools with Yarn\nDESCRIPTION: Command to install the puppeteer-extra-plugin-devtools package using Yarn package manager.\nSOURCE: https://github.com/berstend/puppeteer-extra/blob/master/packages/puppeteer-extra-plugin-devtools/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add puppeteer-extra-plugin-devtools\n```"
  }
]
[
  {
    "owner": "hnvn",
    "repo": "flutter_image_cropper",
    "content": "TITLE: Configuring Image Cropper with Platform-Specific Settings\nDESCRIPTION: Example showing how to configure ImageCropper with platform-specific UI settings for Android, iOS, and Web. Demonstrates setting up aspect ratio presets and custom toolbar configurations.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:image_cropper/image_cropper.dart';\n\nCroppedFile croppedFile = await ImageCropper().cropImage(\n    sourcePath: imageFile.path,\n    uiSettings: [\n      AndroidUiSettings(\n        toolbarTitle: 'Cropper',\n        toolbarColor: Colors.deepOrange,\n        toolbarWidgetColor: Colors.white,\n        aspectRatioPresets: [\n          CropAspectRatioPreset.original,\n          CropAspectRatioPreset.square,\n          CropAspectRatioPresetCustom(),\n        ],\n      ),\n      IOSUiSettings(\n        title: 'Cropper',\n        aspectRatioPresets: [\n          CropAspectRatioPreset.original,\n          CropAspectRatioPreset.square,\n          CropAspectRatioPresetCustom(),\n        ],\n      ),\n      WebUiSettings(\n        context: context,\n      ),\n    ],\n  );\n\nclass CropAspectRatioPresetCustom implements CropAspectRatioPresetData {\n  @override\n  (int, int)? get data => (2, 3);\n\n  @override\n  String get name => '2x3 (customized)';\n}\n```\n\n----------------------------------------\n\nTITLE: Using ImageCropper with Platform-Specific Settings\nDESCRIPTION: Example demonstrating how to use ImageCropper with platform-specific UI settings for Android, iOS and Web. Shows configuration of toolbar, aspect ratios and other platform-specific options.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/README.md#2025-04-22_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:image_cropper/image_cropper.dart';\n\nCroppedFile croppedFile = await ImageCropper().cropImage(\n    sourcePath: imageFile.path,\n    uiSettings: [\n      AndroidUiSettings(\n        toolbarTitle: 'Cropper',\n        toolbarColor: Colors.deepOrange,\n        toolbarWidgetColor: Colors.white,\n        aspectRatioPresets: [\n          CropAspectRatioPreset.original,\n          CropAspectRatioPreset.square,\n          CropAspectRatioPresetCustom(),\n        ],\n      ),\n      IOSUiSettings(\n        title: 'Cropper',\n        aspectRatioPresets: [\n          CropAspectRatioPreset.original,\n          CropAspectRatioPreset.square,\n          CropAspectRatioPresetCustom(), // IMPORTANT: iOS supports only one custom aspect ratio in preset list\n        ],\n      ),\n      WebUiSettings(\n        context: context,\n      ),\n    ],\n  );\n\nclass CropAspectRatioPresetCustom implements CropAspectRatioPresetData {\n  @override\n  (int, int)? get data => (2, 3);\n\n  @override\n  String get name => '2x3 (customized)';\n}\n```\n\n----------------------------------------\n\nTITLE: Adding UCropActivity to AndroidManifest.xml\nDESCRIPTION: Adds the UCropActivity to the Android manifest file, which is required for the image cropper to function on Android. It sets the screen orientation and theme for the activity.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<activity\n  android:name=\"com.yalantis.ucrop.UCropActivity\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"/>\n```\n\n----------------------------------------\n\nTITLE: Adding UCropActivity to AndroidManifest.xml for Android\nDESCRIPTION: This XML snippet shows how to declare the UCropActivity in the AndroidManifest.xml file, which is required for the image cropper to function on Android.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/README.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<activity\n  android:name=\"com.yalantis.ucrop.UCropActivity\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Cropper Dialog in Flutter\nDESCRIPTION: Example implementation of a custom cropper dialog widget with required initialization and crop function calls. Shows how to properly structure a custom dialog builder with necessary cropping functionality.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nclass CropperDialog extends StatefulWidget {\n  ...\n}  \n\nclass _CropperDialogState extends State<CropperDialog> {\n  @override\n  void initState() {\n    super.initState();\n    /// IMPORTANT: must to call this function\n    widget.initCropper();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Dialog(\n      child: Column(\n        children: [\n          ...\n          cropper,\n          ...\n          TextButton(\n            onPressed: () async {\n              /// IMPORTANT: to call crop() function and return\n              /// result data to plugin, for example:\n              final result = await crop();\n              Navigator.of(context).pop(result);\n            },\n            child: Text('Crop'),\n          )\n        ]\n      ),\n    );\n  }\n}\n\nWebUiSettings(\n  ...\n  customDialogBuilder: (cropper, initCropper, crop, rotate, scale) {\n    return CropperDialog(\n      cropper: cropper,\n      initCropper: initCropper,\n      crop: crop,\n      rotate: rotate,\n      scale: scale,\n    );\n  },\n  ...\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Web Cropper Dialog in Flutter\nDESCRIPTION: Example showing how to implement a custom cropper dialog for web platform using WebDialogBuilder. Demonstrates required initialization and crop function calls.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/README.md#2025-04-22_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\n  class CropperDialog extends StatefulWidget {\n    ...\n  }  \n\n  class _CropperDialogState extends State<CropperDialog> {\n    @override\n    void initState() {\n      super.initState();\n      /// IMPORTANT: must to call this function\n      widget.initCropper();\n    }\n\n    @override\n    Widget build(BuildContext context) {\n      Dialog(\n        child: Column(\n          children: [\n            ...\n            cropper,\n            ...\n            TextButton(\n              onPressed: () async {\n                /// IMPORTANT: to call crop() function and return\n                /// result data to plugin, for example:\n                final result = await crop();\n                Navigator.of(context).pop(result);\n              },\n              child: Text('Crop'),\n            )\n          ]\n        ),\n      );\n    }\n  }\n\n  WebUiSettings(\n    ...\n    customDialogBuilder: (cropper, initCropper, crop, rotate, scale) {\n      return CropperDialog(\n        cropper: cropper,\n        initCropper: initCropper,\n        crop: crop,\n        rotate: rotate,\n        scale: scale,\n      );\n    },\n    ...\n  )\n```\n\n----------------------------------------\n\nTITLE: Android UI Settings Properties Table in Markdown\nDESCRIPTION: Markdown table documenting all available properties of the AndroidUiSettings class, including property names, descriptions, and their respective types. This table provides a comprehensive reference for customizing the Android image cropper UI.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                    | Description                                                                                                | Type                            |\n| --------------------------- | ---------------------------------------------------------------------------------------------------------- | ------------------------------- |\n| `toolbarTitle`              | desired text for Toolbar title                                                                             | String                          |\n| `toolbarColor`              | desired color of the Toolbar                                                                               | Color                           |\n| `statusBarColor`            | desired color of status                                                                                    | Color                           |\n| `toolbarWidgetColor`        | desired color of Toolbar text and buttons (default is darker orange)                                       | Color                           |\n| `backgroundColor`           | desired background color that should be applied to the root view                                           | Color                           |\n| `activeControlsWidgetColor` | desired resolved color of the active and selected widget and progress wheel middle line (default is white) | Color                           |\n| `dimmedLayerColor`          | desired color of dimmed area around the crop bounds                                                        | Color                           |\n| `cropFrameColor`            | desired color of crop frame                                                                                | Color                           |\n| `cropGridColor`             | desired color of crop grid/guidelines                                                                      | Color                           |\n| `cropFrameStrokeWidth`      | desired width of crop frame line in pixels                                                                 | int                             |\n| `cropGridRowCount`          | crop grid rows count                                                                                       | int                             |\n| `cropGridColumnCount`       | crop grid columns count                                                                                    | int                             |\n| `cropGridStrokeWidth`       | desired width of crop grid lines in pixels                                                                 | int                             |\n| `showCropGrid`              | set to true if you want to see a crop grid/guidelines on top of an image                                   | bool                            |\n| `lockAspectRatio`           | set to true if you want to lock the aspect ratio of crop bounds with a fixed value (locked by default)     | bool                            |\n| `hideBottomControls`        | set to true to hide the bottom controls (shown by default)                                                 | bool                            |\n| `initAspectRatio`           | desired aspect ratio is applied (from the list of given aspect ratio presets) when starting the cropper    | CropAspectRatioPreset           |\n| `cropStyle`                 | controls the style of crop bounds, it can be rectangle or circle style (default is `CropStyle.rectangle`). | CropStyle                       |\n| `aspectRatioPresets`        | controls the list of aspect ratios in the crop menu view.                                                  | List<CropAspectRatioPresetData> |\n```\n\n----------------------------------------\n\nTITLE: Defining AndroidUiSettings Properties for Image Cropper in Markdown\nDESCRIPTION: This snippet presents a markdown table detailing the properties of the AndroidUiSettings class used for customizing the Android UI in the Image Cropper library. It includes property names, descriptions, and data types for various UI elements such as toolbar, colors, crop frame, and aspect ratio settings.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Property                    | Description                                                                                                | Type                            |\n| --------------------------- | ---------------------------------------------------------------------------------------------------------- | ------------------------------- |\n| `toolbarTitle`              | desired text for Toolbar title                                                                             | String                          |\n| `toolbarColor`              | desired color of the Toolbar                                                                               | Color                           |\n| `statusBarColor`            | desired color of status                                                                                    | Color                           |\n| `toolbarWidgetColor`        | desired color of Toolbar text and buttons (default is darker orange)                                       | Color                           |\n| `backgroundColor`           | desired background color that should be applied to the root view                                           | Color                           |\n| `activeControlsWidgetColor` | desired resolved color of the active and selected widget and progress wheel middle line (default is white) | Color                           |\n| `dimmedLayerColor`          | desired color of dimmed area around the crop bounds                                                        | Color                           |\n| `cropFrameColor`            | desired color of crop frame                                                                                | Color                           |\n| `cropGridColor`             | desired color of crop grid/guidelines                                                                      | Color                           |\n| `cropFrameStrokeWidth`      | desired width of crop frame line in pixels                                                                 | int                             |\n| `cropGridRowCount`          | crop grid rows count                                                                                       | int                             |\n| `cropGridColumnCount`       | crop grid columns count                                                                                    | int                             |\n| `cropGridStrokeWidth`       | desired width of crop grid lines in pixels                                                                 | int                             |\n| `showCropGrid`              | set to true if you want to see a crop grid/guidelines on top of an image                                   | bool                            |\n| `lockAspectRatio`           | set to true if you want to lock the aspect ratio of crop bounds with a fixed value (locked by default)     | bool                            |\n| `hideBottomControls`        | set to true to hide the bottom controls (shown by default)                                                 | bool                            |\n| `initAspectRatio`           | desired aspect ratio is applied (from the list of given aspect ratio presets) when starting the cropper    | CropAspectRatioPreset           |\n| `cropStyle`                 | controls the style of crop bounds, it can be rectangle or circle style (default is `CropStyle.rectangle`). | CropStyle                       |\n| `aspectRatioPresets`        | controls the list of aspect ratios in the crop menu view.                                                  | List<CropAspectRatioPresetData> |\n```\n\n----------------------------------------\n\nTITLE: Adding Cropper.js Resources to Web index.html\nDESCRIPTION: Includes the necessary CSS and JavaScript files for Cropper.js in the head section of the web/index.html file. This is required for the image cropper to function on the Web platform.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<head>\n  ....\n\n  <!-- cropperjs -->\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.css\" />\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.min.js\"></script>\n\n  ....\n</head>\n```\n\n----------------------------------------\n\nTITLE: Adding Cropper.js dependencies to web/index.html for Web support\nDESCRIPTION: This HTML snippet demonstrates how to include the required Cropper.js CSS and JavaScript files in the web/index.html file for Web platform support.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  ....\n\n  <!-- cropperjs -->\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.css\" />\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.2/cropper.min.js\"></script>\n\n  ....\n</head>\n```\n\n----------------------------------------\n\nTITLE: Adding Ucrop.CropTheme Style to Android values/styles.xml\nDESCRIPTION: XML code to add a custom crop theme style to the Android styles.xml file. This is required for migration to version 9.0.0 to support edge-to-edge functionality.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<resources>\n  ....\n  <style name=\"Ucrop.CropTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\"/> <!--add this line-->\n</resources>\n```\n\n----------------------------------------\n\nTITLE: Creating values-v35/styles.xml for Android Edge-to-Edge Support\nDESCRIPTION: XML configuration to create a new styles.xml file specifically for API level 35+ that opts out of edge-to-edge enforcement for the crop activity.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n  <style name=\"Ucrop.CropTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n      <item name=\"android:windowOptOutEdgeToEdgeEnforcement\">true</item>\n  </style>\n</resources>\n```\n\n----------------------------------------\n\nTITLE: Updating UCropActivity Declaration in AndroidManifest.xml\nDESCRIPTION: XML modification for AndroidManifest.xml to update the theme of UCropActivity to use the custom Ucrop.CropTheme style.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<activity\n  android:name=\"com.yalantis.ucrop.UCropActivity\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@style/Ucrop.CropTheme\"/> <!--this line is updated-->\n```\n\n----------------------------------------\n\nTITLE: Implementing ImageCropperPlugin for Web in Dart\nDESCRIPTION: This code snippet defines an ImageCropperPlugin class for web implementation. It overrides the cropImage method to handle image cropping in web environments, utilizing the MethodChannel for communication.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_for_web/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Dart\nCODE:\n```\nimport 'dart:async';\nimport 'dart:html' as html;\n\nimport 'package:flutter/services.dart';\nimport 'package:flutter_web_plugins/flutter_web_plugins.dart';\n\nclass ImageCropperPlugin extends ImageCropperPlatform {\n  static void registerWith(Registrar registrar) {\n    final MethodChannel channel = MethodChannel(\n      'plugins.hunghd.vn/image_cropper',\n      const StandardMethodCodec(),\n      registrar,\n    );\n\n    final pluginInstance = ImageCropperPlugin();\n    channel.setMethodCallHandler(pluginInstance.handleMethodCall);\n  }\n\n  @override\n  Future<String?> cropImage({\n    required String sourcePath,\n    int? maxWidth,\n    int? maxHeight,\n    CropAspectRatio? aspectRatio,\n    List<CropAspectRatioPreset>? aspectRatioPresets,\n    CropStyle cropStyle = CropStyle.rectangle,\n    ImageCompressFormat compressFormat = ImageCompressFormat.jpg,\n    int compressQuality = 90,\n    List<PlatformUiSettings>? uiSettings,\n    String? croppedImagePath,\n  }) async {\n    // Web implementation\n    return null;\n  }\n\n  Future<dynamic> handleMethodCall(MethodCall call) async {\n    switch (call.method) {\n      case 'cropImage':\n        final String? imagePath = await cropImage(\n          sourcePath: call.arguments['source_path'],\n          maxWidth: call.arguments['max_width'],\n          maxHeight: call.arguments['max_height'],\n          aspectRatio: call.arguments['aspect_ratio'] != null\n              ? CropAspectRatio(\n                  ratioX: call.arguments['aspect_ratio']['ratio_x'],\n                  ratioY: call.arguments['aspect_ratio']['ratio_y'],\n                )\n              : null,\n          cropStyle: CropStyle.values[call.arguments['crop_style']],\n          compressFormat: ImageCompressFormat\n              .values[call.arguments['compress_format']],\n          compressQuality: call.arguments['compress_quality'],\n          uiSettings: call.arguments['ui_settings'],\n        );\n        return imagePath;\n      default:\n        throw PlatformException(\n          code: 'Unimplemented',\n          details:\n              'image_cropper for web doesn\\'t implement the method ${call.method}',\n        );\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 7.1.0 Changes in Markdown\nDESCRIPTION: Lists the changes in version 7.1.0, including a bug fix for Flutter WASM.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 7.1.0\n\n* fix bug on Flutter WASM [#567](https://github.com/hnvn/flutter_image_cropper/pull/567)\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 7.0.0 Changes in Markdown\nDESCRIPTION: Details the changes in version 7.0.0, including relaxed Flutter version constraints and a new iOS setting.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 7.0.0\n\n* relax flutter version constraints\n* iOS: introduce `iOSUiSettings.embedInNavigationController` to support add2app environments\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 6.1.0 Changes in Markdown\nDESCRIPTION: Lists the changes in version 6.1.0, including API replacements and increased Dart SDK constraints.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.1.0\n\n* replace deprecated API (`UnmodifiableUint8ListView` by `asUnmodifiableView`)\n* increase Dart SDK constraints (`>=3.3.0`)\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 6.0.3 Changes in Markdown\nDESCRIPTION: Details a bug fix for the Web platform in version 6.0.3, specifically for the WebDialogBuilder.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.0.3\n\n* Web: fix the issue of `WebDialogBuilder`, should return `Widget` instead of `Dialog`\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 6.0.2 Changes in Markdown\nDESCRIPTION: Lists a bug fix for the Web platform in version 6.0.2 related to container size.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.0.2\n\n* Web: fix bug cropper not get correct container's size\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 6.0.1 Changes in Markdown\nDESCRIPTION: Details the addition of a new property in WebThemeData for version 6.0.1.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.0.1\n\n* add `backIcon` property in `WebThemeData` to support customization of `AppBar.leading` in `CropperPage`\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 6.0.0 Changes in Markdown\nDESCRIPTION: Lists major changes in version 6.0.0, including refactoring of classes and support for customized aspect ratio presets.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.0.0\n\n* refactor `WebUiSettings` class to support new JS library\n* move `cropStyle` and `aspectRatioPresets` into `AndroidUiSettings` and `IOSUiSettings` for sake of clean and clarity\n* refactor `CropAspectRatioPreset` to support customized aspect ratio preset\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 5.0.0 Changes in Markdown\nDESCRIPTION: Notes the upgrade of the 'http' package to version 1.0.0 in version 5.0.0.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## 5.0.0\n\n* upgrade `http` to v1.0.0\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 4.0.0 Changes in Markdown\nDESCRIPTION: Lists changes in version 4.0.0, including SDK constraint updates and CHANGELOG refactoring.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## 4.0.0\n\n* update SKD constraint\n* refactor CHANGELOG\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 3.0.3 Changes in Markdown\nDESCRIPTION: Notes the addition of localization support for the Web platform in version 3.0.3.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.3\n\n* support localization on Web\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 3.0.2 Changes in Markdown\nDESCRIPTION: Mentions a correction to the WebSettings model in version 3.0.2.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.2\n\n* correct `WebSettings` model\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 3.0.1 Changes in Markdown\nDESCRIPTION: Notes corrections to default values of WebUiSettings in version 3.0.1.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.1\n\n* correct default values of `WebUiSettings`\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 3.0.0 Changes in Markdown\nDESCRIPTION: Details a breaking change in version 3.0.0 regarding the relocation of setting models.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n## 3.0.0\n\n* **BREAKING CHANGE**: move all setting models to platform interface packages\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 2.0.0-beta.1 Changes in Markdown\nDESCRIPTION: Lists a breaking change in version 2.0.0-beta.1 related to result models and web support.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.0-beta.1\n\n* **BREAKING CHANGE**: update result models to support web, replace `File` by `CroppedFile`\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 2.0.0-beta Changes in Markdown\nDESCRIPTION: Notes the migration to federated plugins in version 2.0.0-beta.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_platform_interface/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.0-beta\n\n* migrate to federated plugins\n```\n\n----------------------------------------\n\nTITLE: Updating Android Activity Theme for Edge-to-Edge Workaround (Before)\nDESCRIPTION: The previous XML configuration for UCropActivity in AndroidManifest.xml before implementing the edge-to-edge workaround in version 8.1.0.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<activity\n  android:name=\"com.yalantis.ucrop.UCropActivity\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"/>\n```\n\n----------------------------------------\n\nTITLE: Updating Android Activity Theme for Edge-to-Edge Workaround (After)\nDESCRIPTION: The updated XML configuration for UCropActivity in AndroidManifest.xml after implementing the edge-to-edge workaround in version 8.1.0.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<activity\n  android:name=\"com.yalantis.ucrop.UCropActivity\"\n  android:screenOrientation=\"portrait\"\n  android:theme=\"@style/Ucrop.CropTheme\"/> <!-- This line is updated -->\n```\n\n----------------------------------------\n\nTITLE: Markdown Version History\nDESCRIPTION: Changelog entries detailing version updates, dependency changes, and feature additions for the Flutter Image Cropper web plugin.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper_for_web/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 6.1.0\n\n* update to the latest `image_cropper_platform_interface`\n\n## 6.0.2\n\n* correct constraints of flutter version (>= 3.22.0)\n\n## 6.0.1\n\n* use >=0.5.0 < 2.0.0 version range for package:web.\n\n## 6.0.0\n\n* upgrade `web` dependency\n* relax flutter version constraints\n* ugrapde `platform_intefrace` dependency\n\n## 5.0.4\n\n* support image compress type (jpg or png)\n\n## 5.0.3\n\n* update to the latest `image_cropper_platform_interface`\n\n## 5.0.2\n\n* improve cropper UI\n\n## 5.0.1\n\n* fix bug cropper not get correct container's size\n* improve cropper UI\n\n## 5.0.0\n\n* refactor plugin to use `Cropperjs` instead of `croppie`\n* **BREAKING CHANGES**: `WebUiSettings` is totally re-implemented. See plugin document for more details\n\n## 4.0.0\n\n* upgrade JS package to v0.7\n\n## 3.0.0\n\n* upgrade `http` to v1.0.0\n\n## 2.0.0\n\n* update SDK constraint\n* refactor CHANGELOG\n\n## 1.0.3\n\n* support localization on Web\n\n## 1.0.2\n\n* correct `WebSettings` model\n\n## 1.0.1\n\n* correct default values of `WebUiSettings`\n\n## 1.0.0\n\n* **BREAKING CHANGE**: move all setting models to platform interface packages\n\n## 0.0.4\n\n* correct importing JS library\n\n## 0.0.3\n\n* fix missing pubspec config\n\n## 0.0.2\n\n* support rotate image\n\n## 0.0.1\n\n* initial release for web support\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Workspace Command for Flutter iOS Project\nDESCRIPTION: Terminal command to open the Flutter project's Xcode workspace for modifying launch screen assets through the Xcode interface.\nSOURCE: https://github.com/hnvn/flutter_image_cropper/blob/master/image_cropper/example/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopen ios/Runner.xcworkspace\n```"
  }
]
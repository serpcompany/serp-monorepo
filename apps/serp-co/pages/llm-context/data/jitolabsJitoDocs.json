[
  {
    "owner": "jito-labs",
    "repo": "jito-docs",
    "content": "TITLE: Docker Host Network ShredStream Setup\nDESCRIPTION: Docker command for running ShredStream proxy with host networking, recommended for optimal performance. Configures authentication, regions, and destination endpoints.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d \\\n--name jito-shredstream-proxy \\\n--rm \\\n--env RUST_LOG=info \\\n--env BLOCK_ENGINE_URL=https://mainnet.block-engine.jito.wtf \\\n--env AUTH_KEYPAIR=my_keypair.json \\\n--env DESIRED_REGIONS=amsterdam,ny \\\n--env DEST_IP_PORTS=127.0.0.1:8001,10.0.0.1:8001 \\\n--network host \\\n-v $(pwd)/my_keypair.json:/app/my_keypair.json \\\njitolabs/jito-shredstream-proxy shredstream\n```\n\n----------------------------------------\n\nTITLE: Native ShredStream Installation\nDESCRIPTION: Commands for cloning and running ShredStream proxy natively using Cargo, with configuration for block engine URL, authentication, and destination endpoints.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/jito-labs/shredstream-proxy.git --recurse-submodules\n\nRUST_LOG=info cargo run --release --bin jito-shredstream-proxy -- shredstream \\\n    --block-engine-url https://mainnet.block-engine.jito.wtf \\\n    --auth-keypair my_keypair.json \\\n    --desired-regions amsterdam,ny \\\n    --dest-ip-ports 127.0.0.1:8001,10.0.0.1:8001\n```\n\n----------------------------------------\n\nTITLE: Docker Bridge Network ShredStream Setup\nDESCRIPTION: Docker command for running ShredStream proxy with bridge networking, suitable for environments where host networking is unavailable. Includes manual port exposure.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d \\\n--name jito-shredstream-proxy \\\n--rm \\\n--env RUST_LOG=info \\\n--env BLOCK_ENGINE_URL=https://mainnet.block-engine.jito.wtf \\\n--env AUTH_KEYPAIR=my_keypair.json \\\n--env DESIRED_REGIONS=amsterdam,ny \\\n--env SRC_BIND_PORT=20000 \\\n--env DEST_IP_PORTS=172.17.0.1:8001,10.0.0.1:8001 \\\n--network bridge \\\n-p 20000:20000/udp \\\n-v $(pwd)/my_keypair.json:/app/my_keypair.json \\\njitolabs/jito-shredstream-proxy shredstream\n```\n\n----------------------------------------\n\nTITLE: Finding TVU Port on Solana RPC\nDESCRIPTION: Script to determine the TVU port on a machine running a Solana RPC node using a specified ledger directory.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport LEDGER_DIR=MY_LEDGER_DIR; bash -c \"$(curl -fsSL https://raw.githubusercontent.com/jito-labs/shredstream-proxy/master/scripts/get_tvu_port.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Finding Remote TVU Port\nDESCRIPTION: Script to determine the TVU port on a remote machine by specifying the host address and port.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport HOST=http://1.2.3.4:8899; bash -c \"$(curl -fsSL https://raw.githubusercontent.com/jito-labs/shredstream-proxy/master/scripts/get_tvu_port.sh)\"\n```\n\n----------------------------------------\n\nTITLE: InfluxDB Shred Count Query\nDESCRIPTION: SQL query to monitor ShredStream performance by checking the number of shred packets received in the last hour using InfluxDB.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/lowlatencytxnfeed.md#2025-04-23_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT shred_count FROM \"shred_fetch\" WHERE time > now() - 1h\n```\n\n----------------------------------------\n\nTITLE: Building Jito Labs Documentation\nDESCRIPTION: This snippet demonstrates the process of building the Jito Labs documentation using Sphinx. It includes changing to the docs directory, cleaning previous builds, generating HTML, and opening the result in Firefox.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd ./jito-docs/docs\nmake clean\nmake html\nfirefox build/html/index.html\n```\n\n----------------------------------------\n\nTITLE: Installing Jito Labs Documentation Dependencies\nDESCRIPTION: This snippet shows the commands to install the required dependencies for building the Jito Labs documentation. It uses pip to install Sphinx and additional requirements from a requirements.txt file.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install sphinx\npip install -r ./docs/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Sphinx Documentation Table of Contents\nDESCRIPTION: Sphinx toctree directive defining the documentation structure with links to low latency transaction sending and block updates sections.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/index.md#2025-04-23_snippet_0\n\nLANGUAGE: restructuredtext\nCODE:\n```\n{toctree}\n:maxdepth: 6\n:hidden:\n\n⚡ Low Latency Transaction Send <lowlatencytxnsend>\n➤ Low Latency Block Updates (ShredStream) <lowlatencytxnfeed>\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: This snippet defines the rules for web crawlers accessing the site. It allows all user agents unrestricted access and specifies the location of the sitemap file.\nSOURCE: https://github.com/jito-labs/jito-docs/blob/main/docs/source/robots.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nAllow: /\n\nSitemap: https://docs.jito.wtf/sitemap.xml\n```"
  }
]
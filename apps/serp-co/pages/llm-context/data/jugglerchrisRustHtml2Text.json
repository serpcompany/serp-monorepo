[
  {
    "owner": "jugglerchris",
    "repo": "rust-html2text",
    "content": "TITLE: Converting HTML to Plain Text using Configurable API in Rust\nDESCRIPTION: Example demonstrating the lower-level, more configurable API using the config::plain() method to convert HTML to plain text with error handling.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nuse html2text::config;\n\nlet html = b\"\n       <ul>\n         <li>Item one</li>\n         <li>Item two</li>\n         <li>Item three</li>\n       </ul>\";\n\nassert_eq!(\n    config::plain()\n           .string_from_read(&html[..], 20)\n           .unwrap(),\n    \"\\\n* Item one\n* Item two\n* Item three\n\");\n```\n\n----------------------------------------\n\nTITLE: Converting HTML List to Plain Text using from_read in Rust\nDESCRIPTION: Example showing how to use the simple from_read() function to convert an HTML unordered list to formatted plain text with a specified width of 20 characters.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse html2text::from_read;\nlet html = b\"\n       <ul>\n         <li>Item one</li>\n         <li>Item two</li>\n         <li>Item three</li>\n       </ul>\";\nassert_eq!(from_read(&html[..], 20).unwrap(),\n           \"\\\n* Item one\n* Item two\n* Item three\n\");\n```\n\n----------------------------------------\n\nTITLE: Interactive HTML to Text Converter Demo Interface\nDESCRIPTION: HTML template for the demo interface, including configuration checkboxes for CSS and color options, and a textarea for entering HTML that will be converted to plain text. The interface includes event handlers to update the output when input changes.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/pages/index.markdown#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<noscript>\n<h2 class=\"warning\">This demo page requires javascript (and WASM) to work.</h2>\n</noscript>\n\n<input type=\"checkbox\" id=\"conf_css\" checked=true onchange=\"update_html()\">CSS\n<input type=\"checkbox\" id=\"conf_colour\" checked=true onchange=\"update_html()\">Colour\n\n<textarea id=\"input_html\" onchange=\"update_html()\" oninput=\"update_html()\">\n<html>\n<style>\n.green {\n    color: #4f4;\n}\n</style>\n<body>\n  <h1>Hi there</h1>\n  <p>This is some simple text</p>\n  <ol>\n    <li>Item one</li>\n    <li><s>Item two</s></li>\n    <li class=\"green\">Item three</li>\n  </ol>\n<table>\n    <tr><th>Heading 1</th><th>Heading 2</th><th>Heading 3</th></tr>\n    <tr><td>Data 1</td><td>Data 2</td><td>Data 3</td></tr>\n    <tr><td colspan=3>Hello there</td></tr>\n</table>\n</body></html>\n</textarea>\n\n<div id=\"lib\"></div>\n```\n\n----------------------------------------\n\nTITLE: Importing and Initializing WASM Module for HTML to Text Conversion\nDESCRIPTION: This JavaScript module imports the html2text WebAssembly module, initializes it, and makes the bindings available globally for use in the demo. It also dispatches a custom event to signal that the application has started.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/pages/index.markdown#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport init, * as bindings from '/rust-html2text/assets/html2text-web-demo.js';\nconst wasm = await init({ module_or_path: '/rust-html2text/assets/html2text-web-demo_bg.wasm' });\n\nwindow.wasmBindings = bindings;\n\ndispatchEvent(new CustomEvent(\"TrunkApplicationStarted\", {detail: {wasm}}));\n```\n\n----------------------------------------\n\nTITLE: Running the html2text Example CLI Tool\nDESCRIPTION: Command line example showing how to use the html2text example program to convert HTML input from stdin to plain text.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ cargo run --example html2text < foo.html\n[...]\n```\n\n----------------------------------------\n\nTITLE: Running the html2term Interactive HTML Viewer Example\nDESCRIPTION: Command line example demonstrating how to use the html2term example program, which provides an interactive console HTML viewer with support for reading keys from stdin.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ cargo run --example html2term foo.html\n[...]\n```\n\n----------------------------------------\n\nTITLE: Migrating RenderTree Usage in Rust\nDESCRIPTION: Example showing migration from deprecated RenderTree render methods to the new config-based rendering approach. Demonstrates both the old and new way of rendering HTML to plain text.\nSOURCE: https://github.com/jugglerchris/rust-html2text/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n// Old approach\nlet text = html2text::parse(html)?\n    .render_plain(80)?\n    .into_string()?;\n```\n\nLANGUAGE: rust\nCODE:\n```\n// New approach\nlet text = html2text::config::plain()\n    .render_to_string(html2text::parse(html)?)?\n```"
  }
]
[
  {
    "owner": "basecamp",
    "repo": "kamal-site",
    "content": "TITLE: Using the Kamal Deploy Command with Options\nDESCRIPTION: Shows the usage pattern and available options for the 'kamal deploy' command, including skipping push, verbosity controls, version targeting, host/role selection, configuration file options, and hook management.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/deploy.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUsage:\n  kamal deploy\n\nOptions:\n  -P, [--skip-push]                                  # Skip image build and push\n                                                     # Default: false\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Kamal Deploy Command Usage and Options\nDESCRIPTION: Command-line interface documentation for the kamal deploy command. Shows available options including skip-push, verbose logging, version specification, host targeting, role selection, config file paths, and hook management.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/deploy.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUsage:\n  kamal deploy\n\nOptions:\n  -P, [--skip-push]                                  # Skip image build and push\n                                                     # Default: false\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Setting Run Directory\nDESCRIPTION: Specifies the directory to store Kamal runtime files on the host, defaults to .kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nrun_directory: /etc/kamal\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Name in Kamal\nDESCRIPTION: Defines the required service name that serves as the container name prefix.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservice: myapp\n```\n\n----------------------------------------\n\nTITLE: Configuring Kamal Deployment in YAML\nDESCRIPTION: Example of a basic Kamal deployment configuration file (config/deploy.yml). It specifies the service name, Docker image, target servers, registry credentials, builder architecture, and environment variables.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/index.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservice: hey\nimage: 37s/hey\nservers:\n  - 192.168.0.1\n  - 192.168.0.2\nregistry:\n  username: registry-user-name\n  password:\n    - KAMAL_REGISTRY_PASSWORD\nbuilder:\n  arch: amd64\nenv:\n  secret:\n    - RAILS_MASTER_KEY\n```\n\n----------------------------------------\n\nTITLE: Complete Kamal Environment Configuration Example\nDESCRIPTION: A comprehensive example showing how to configure environment variables in Kamal with clear values, secrets, and tag-specific settings for different server roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  clear:\n    MYSQL_USER: app\n  secret:\n    - MYSQL_PASSWORD\n  tags:\n    monitoring:\n      MYSQL_USER: monitoring\n    replica:\n      clear:\n        MYSQL_USER: readonly\n      secret:\n        - READONLY_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Defining Build Secrets in Kamal\nDESCRIPTION: Example showing how to set up a build secret (GITHUB_TOKEN) in Kamal for use during Docker image building. This includes both the secrets file and deployment configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# .kamal/secrets\n\nGITHUB_TOKEN=$(gh config get -h github.com oauth_token)\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Secrets in .kamal/secrets File\nDESCRIPTION: Demonstrates how to use Kamal secrets commands with command substitution in the .kamal/secrets file to fetch and extract secrets.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# .kamal/secrets\n\nSECRETS=$(kamal secrets fetch ...)\n\nREGISTRY_PASSWORD=$(kamal secrets extract REGISTRY_PASSWORD $SECRETS)\nDB_PASSWORD=$(kamal secrets extract DB_PASSWORD $SECRETS)\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal Configuration Settings with 'kamal config' Command\nDESCRIPTION: This command displays the current Kamal configuration in YAML format. The output includes deployment roles, host servers, repository information, SSH connection options, builder settings, accessories configuration, logging options, and healthcheck parameters.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/config.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal config\n---\n:roles:\n- web\n- workers\n:hosts:\n- server1\n- server2\n- server3\n:primary_host: server1\n:version: 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n:repository: registry:4443/app\n:absolute_image: registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac\n:service_with_version: app-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n:volume_args: []\n:ssh_options:\n  :user: root\n  :port: 22\n  :keepalive: true\n  :keepalive_interval: 30\n  :log_level: :fatal\n:sshkit: {}\n:builder:\n  multiarch: false\n  args:\n    COMMIT_SHA: 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n:accessories:\n  busybox:\n    service: custom-busybox\n    image: registry:4443/busybox:1.36.0\n    cmd: sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1; done'\n    roles:\n    - web\n:logging:\n- \"--log-opt\"\n- max-size=\"10m\"\n:healthcheck:\n  path: \"/up\"\n  port: 3000\n  max_attempts: 7\n  exposed_port: 3999\n  cord: \"/tmp/kamal-cord\"\n  log_lines: 50\n  cmd: wget -qO- http://localhost > /dev/null || exit 1\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Image Name\nDESCRIPTION: Specifies the Docker image name to be pushed to the configured registry.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nimage: my-image\n```\n\n----------------------------------------\n\nTITLE: Initializing Kamal Deployment Configuration\nDESCRIPTION: Command to initialize Kamal deployment by creating required configuration files including deploy.yml, .env file, and hooks directory structure. This sets up the basic scaffolding needed to start deploying applications with Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/init.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal init\nCreated configuration file in config/deploy.yml\nCreated .env file\nCreated sample hooks in .kamal/hooks\n```\n\n----------------------------------------\n\nTITLE: Kamal Accessory Boot Example\nDESCRIPTION: Demonstrates the process of booting all accessories across multiple servers, including pre-connect hooks, directory creation, Docker login, and container deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/accessory.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal accessory boot all\nRunning the pre-connect hook...\n  INFO [bd04b11b] Running /usr/bin/env .kamal/hooks/pre-connect on localhost\n  INFO [bd04b11b] Finished in 0.003 seconds with exit status 0 (successful).\n  INFO [681a028b] Running /usr/bin/env mkdir -p .kamal on server2\n  INFO [e3495d1d] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [e7c5c159] Running /usr/bin/env mkdir -p .kamal on server3\n  INFO [e3495d1d] Finished in 0.170 seconds with exit status 0 (successful).\n  INFO [681a028b] Finished in 0.182 seconds with exit status 0 (successful).\n  INFO [e7c5c159] Finished in 0.185 seconds with exit status 0 (successful).\n  INFO [83153af3] Running /usr/bin/env mkdir -p .kamal/locks on server1\n  INFO [83153af3] Finished in 0.028 seconds with exit status 0 (successful).\nAcquiring the deploy lock...\n  INFO [416a654c] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server1\n  INFO [3fb56559] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server2\n  INFO [3fb56559] Finished in 0.065 seconds with exit status 0 (successful).\n  INFO [416a654c] Finished in 0.080 seconds with exit status 0 (successful).\n  INFO [2705083f] Running docker run --name custom-busybox --detach --restart unless-stopped --log-opt max-size=\"10m\" --env-file .kamal/env/accessories/custom-busybox.env --label service=\"custom-busybox\" registry:4443/busybox:1.36.0 sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1; done' on server2\n  INFO [3cb3adb6] Running docker run --name custom-busybox --detach --restart unless-stopped --log-opt max-size=\"10m\" --env-file .kamal/env/accessories/custom-busybox.env --label service=\"custom-busybox\" registry:4443/busybox:1.36.0 sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1; done' on server1\n  INFO [3cb3adb6] Finished in 0.552 seconds with exit status 0 (successful).\n  INFO [2705083f] Finished in 0.566 seconds with exit status 0 (successful).\nReleasing the deploy lock...\n```\n\n----------------------------------------\n\nTITLE: Accessing Build Secrets in Dockerfile\nDESCRIPTION: Demonstrates how to use build secrets in a Dockerfile using the --mount=type=secret syntax. This example uses a GitHub token for private repository access during bundle installation.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n# Copy Gemfiles\nCOPY Gemfile Gemfile.lock ./\n\n# Install dependencies, including private repositories via access token\n# Then remove bundle cache with exposed GITHUB_TOKEN\nRUN --mount=type=secret,id=GITHUB_TOKEN \\\n  BUNDLE_GITHUB__COM=x-access-token:$(cat /run/secrets/GITHUB_TOKEN) \\\n  bundle install && \\\n  rm -rf /usr/local/bundle/cache\n```\n\n----------------------------------------\n\nTITLE: Installing Kamal via Ruby Gem\nDESCRIPTION: Global installation of Kamal using Ruby's package manager gem\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/installation/index.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngem install kamal\n```\n\n----------------------------------------\n\nTITLE: Basic Kamal Servers Block\nDESCRIPTION: Demonstrates the basic YAML structure for defining servers in Kamal configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/roles.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n```\n\n----------------------------------------\n\nTITLE: Running Kamal Setup Command\nDESCRIPTION: Command to initiate the Kamal setup process, which prepares the servers and deploys the application. This command performs various tasks including Docker installation, image building, and container management.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/index.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nkamal setup\n```\n\n----------------------------------------\n\nTITLE: Advanced Worker Role Configuration\nDESCRIPTION: Shows comprehensive role configuration including custom command, resource limits, logging, proxy settings, labels, environment variables, and asset path specifications.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/roles.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  workers:\n    hosts:\n      - 172.1.0.3\n      - 172.1.0.4: experiment1\n    cmd: \"bin/jobs\"\n    options:\n      memory: 2g\n      cpus: 4\n    logging:\n      ...\n    proxy:\n      ...\n    labels:\n      my-label: workers\n    env:\n      ...\n    asset_path: /public\n```\n\n----------------------------------------\n\nTITLE: Kamal Build Push Example\nDESCRIPTION: Demonstrates a complete build push operation including pre-connect hooks, directory creation, lock acquisition, Docker build process, and image pushing to registry with detailed debug output.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/build.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal build push\nRunning the pre-connect hook...\n  INFO [92ebc200] Running /usr/bin/env .kamal/hooks/pre-connect on localhost\n  INFO [92ebc200] Finished in 0.004 seconds with exit status 0 (successful).\n  INFO [cbbad07e] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [e6ac30e7] Running /usr/bin/env mkdir -p .kamal on server3\n  INFO [a1adae3a] Running /usr/bin/env mkdir -p .kamal on server2\n  INFO [cbbad07e] Finished in 0.145 seconds with exit status 0 (successful).\n  INFO [a1adae3a] Finished in 0.179 seconds with exit status 0 (successful).\n  INFO [e6ac30e7] Finished in 0.182 seconds with exit status 0 (successful).\n  INFO [c6242009] Running /usr/bin/env mkdir -p .kamal/locks on server1\n  INFO [c6242009] Finished in 0.009 seconds with exit status 0 (successful).\nAcquiring the deploy lock...\n  INFO [427ae9bc] Running docker --version on localhost\n  INFO [427ae9bc] Finished in 0.039 seconds with exit status 0 (successful).\nRunning the pre-build hook...\n  INFO [2f120630] Running /usr/bin/env .kamal/hooks/pre-build on localhost\n  INFO [2f120630] Finished in 0.004 seconds with exit status 0 (successful).\n  INFO [ad386911] Running /usr/bin/env git archive --format=tar HEAD | docker build -t registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac -t registry:4443/app:latest --label service=\"app\" --build-arg [REDACTED] --file Dockerfile - && docker push registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac && docker push registry:4443/app:latest on localhost\n DEBUG [ad386911] Command: /usr/bin/env git archive --format=tar HEAD | docker build -t registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac -t registry:4443/app:latest --label service=\"app\" --build-arg [REDACTED] --file Dockerfile - && docker push registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac && docker push registry:4443/app:latest\n DEBUG [ad386911] \t#0 building with \"default\" instance using docker driver\n DEBUG [ad386911]\n DEBUG [ad386911] \t#1 [internal] load remote build context\n DEBUG [ad386911] \t#1 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#2 copy /context /\n DEBUG [ad386911] \t#2 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#3 [internal] load metadata for registry:4443/nginx:1-alpine-slim\n DEBUG [ad386911] \t#3 DONE 0.0s\n DEBUG [ad386911]\n DEBUG [ad386911] \t#4 [1/5] FROM registry:4443/nginx:1-alpine-slim@sha256:558cdef0693faaa02c0b81c21b5d6f4b4fe24e3ac747581f3e6e8f5c4032db58\n DEBUG [ad386911] \t#4 DONE 0.0s\n DEBUG [ad386911]\n DEBUG [ad386911] \t#5 [4/5] RUN mkdir -p /usr/share/nginx/html/versions && echo \"version\" > /usr/share/nginx/html/versions/75bf6fa40b975cbd8aec05abf7164e0982f185ac\n DEBUG [ad386911] \t#5 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#6 [2/5] COPY default.conf /etc/nginx/conf.d/default.conf\n DEBUG [ad386911] \t#6 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#7 [3/5] RUN echo 75bf6fa40b975cbd8aec05abf7164e0982f185ac > /usr/share/nginx/html/version\n DEBUG [ad386911] \t#7 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#8 [5/5] RUN mkdir -p /usr/share/nginx/html/versions && echo \"hidden\" > /usr/share/nginx/html/versions/.hidden\n DEBUG [ad386911] \t#8 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#9 exporting to image\n DEBUG [ad386911] \t#9 exporting layers done\n DEBUG [ad386911] \t#9 writing image sha256:ed9205d697e5f9f735e84e341a19a3d379b9b4a8dc5d04b6219bda29e6126489 done\n DEBUG [ad386911] \t#9 naming to registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac done\n DEBUG [ad386911] \t#9 naming to registry:4443/app:latest done\n DEBUG [ad386911] \t#9 DONE 0.0s\n DEBUG [ad386911] \tThe push refers to repository [registry:4443/app]\n DEBUG [ad386911] \t7e49189613ab: Preparing\n DEBUG [ad386911] \t054c18a8e0a6: Preparing\n DEBUG [ad386911] \t1552c04abfaa: Preparing\n DEBUG [ad386911] \t36f2f66132ea: Preparing\n DEBUG [ad386911] \td5e2fb5f3301: Preparing\n DEBUG [ad386911] \t8fde05710e93: Preparing\n DEBUG [ad386911] \tfdf572380e92: Preparing\n DEBUG [ad386911] \ta031a04401d0: Preparing\n DEBUG [ad386911] \tecb78d985cad: Preparing\n DEBUG [ad386911] \t3e0e830ccd77: Preparing\n DEBUG [ad386911] \t7c504f21be85: Preparing\n DEBUG [ad386911] \tfdf572380e92: Waiting\n DEBUG [ad386911] \ta031a04401d0: Waiting\n DEBUG [ad386911] \tecb78d985cad: Waiting\n DEBUG [ad386911] \t3e0e830ccd77: Waiting\n DEBUG [ad386911] \t7c504f21be85: Waiting\n DEBUG [ad386911] \t8fde05710e93: Waiting\n DEBUG [ad386911] \t054c18a8e0a6: Layer already exists\n DEBUG [ad386911] \t7e49189613ab: Layer already exists\n DEBUG [ad386911] \t36f2f66132ea: Layer already exists\n DEBUG [ad386911] \td5e2fb5f3301: Layer already exists\n DEBUG [ad386911] \t1552c04abfaa: Layer already exists\n DEBUG [ad386911] \t8fde05710e93: Layer already exists\n DEBUG [ad386911] \tfdf572380e92: Layer already exists\n DEBUG [ad386911] \ta031a04401d0: Layer already exists\n DEBUG [ad386911] \t3e0e830ccd77: Layer already exists\n DEBUG [ad386911] \tecb78d985cad: Layer already exists\n DEBUG [ad386911] \t7c504f21be85: Layer already exists\n DEBUG [ad386911] \t75bf6fa40b975cbd8aec05abf7164e0982f185ac: digest: sha256:68e534dab98fc7c65c8e2353f6414e9c6c812481deea8d57ae6b0b0140ec40d5 size: 2604\n DEBUG [ad386911] \tThe push refers to repository [registry:4443/app]\n DEBUG [ad386911] \t7e49189613ab: Preparing\n DEBUG [ad386911] \t054c18a8e0a6: Preparing\n DEBUG [ad386911] \t1552c04abfaa: Preparing\n DEBUG [ad386911] \t36f2f66132ea: Preparing\n DEBUG [ad386911] \td5e2fb5f3301: Preparing\n DEBUG [ad386911] \t8fde05710e93: Preparing\n DEBUG [ad386911] \tfdf572380e92: Preparing\n DEBUG [ad386911] \ta031a04401d0: Preparing\n DEBUG [ad386911] \tecb78d985cad: Preparing\n DEBUG [ad386911] \t3e0e830ccd77: Preparing\n DEBUG [ad386911] \t7c504f21be85: Preparing\n DEBUG [ad386911] \tfdf572380e92: Waiting\n DEBUG [ad386911] \ta031a04401d0: Waiting\n DEBUG [ad386911] \tecb78d985cad: Waiting\n DEBUG [ad386911] \t3e0e830ccd77: Waiting\n DEBUG [ad386911] \t7c504f21be85: Waiting\n DEBUG [ad386911] \t8fde05710e93: Waiting\n DEBUG [ad386911] \t36f2f66132ea: Layer already exists\n DEBUG [ad386911] \t7e49189613ab: Layer already exists\n DEBUG [ad386911] \t054c18a8e0a6: Layer already exists\n DEBUG [ad386911] \t1552c04abfaa: Layer already exists\n DEBUG [ad386911] \td5e2fb5f3301: Layer already exists\n DEBUG [ad386911] \t8fde05710e93: Layer already exists\n DEBUG [ad386911] \tfdf572380e92: Layer already exists\n DEBUG [ad386911] \ta031a04401d0: Layer already exists\n DEBUG [ad386911] \tecb78d985cad: Layer already exists\n DEBUG [ad386911] \t3e0e830ccd77: Layer already exists\n DEBUG [ad386911] \t7c504f21be85: Layer already exists\n DEBUG [ad386911] \tlatest: digest: sha256:68e534dab98fc7c65c8e2353f6414e9c6c812481deea8d57ae6b0b0140ec40d5 size: 2604\n  INFO [ad386911] Finished in 0.502 seconds with exit status 0 (successful).\nReleasing the deploy lock...\n```\n\n----------------------------------------\n\nTITLE: Basic Server Configuration in YAML\nDESCRIPTION: Basic configuration showing how to specify multiple servers in Kamal. All servers will be implicitly assigned to the 'web' role.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/servers.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  - 172.0.0.1\n  - 172.0.0.2\n  - 172.0.0.3\n```\n\n----------------------------------------\n\nTITLE: Secret and Clear Environment Variables Configuration\nDESCRIPTION: Configuration showing how to separate clear and secret environment variables. Secrets are stored in an env file on the host and are only updated during specific commands.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/environment-variables.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  clear:\n    DB_USER: app\n  secret:\n    - DB_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Name in Kamal\nDESCRIPTION: Defines the required service name which is used as the container name prefix.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservice: myapp\n```\n\n----------------------------------------\n\nTITLE: Listing Kamal App Subcommands in Bash\nDESCRIPTION: This snippet shows the output of running 'kamal app' command, listing all available subcommands for managing applications deployed with Kamal. It includes operations for booting, executing commands, viewing logs, and managing containers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/app.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app\nCommands:\n  kamal app boot              # Boot app on servers (or reboot app if already running)\n  kamal app containers        # Show app containers on servers\n  kamal app details           # Show details about app containers\n  kamal app exec [CMD]        # Execute a custom command on servers within the app container (use --help to show options)\n  kamal app help [COMMAND]    # Describe subcommands or one specific subcommand\n  kamal app images            # Show app images on servers\n  kamal app logs              # Show log lines from app on servers (use --help to show options)\n  kamal app remove            # Remove app containers and images from servers\n  kamal app stale_containers  # Detect app stale containers\n  kamal app start             # Start existing app container on servers\n  kamal app stop              # Stop app container on servers\n  kamal app version           # Show app version currently running on servers\n```\n\n----------------------------------------\n\nTITLE: Defining Build Arguments in Kamal\nDESCRIPTION: Sets arguments that are passed to the Docker build process with --build-arg flags. Used to inject configuration values into the build process.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n  args:\n    ENVIRONMENT: production\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Artifact Registry in YAML for Kamal\nDESCRIPTION: YAML configuration for using GCP Artifact Registry as the container registry in Kamal. It specifies the server, username (_json_key_base64), and references the base64 encoded service account key as the password.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/docker-registry.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: <your registry region>-docker.pkg.dev\n  username: _json_key_base64\n  password:\n    - KAMAL_REGISTRY_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Advanced Worker Role Configuration\nDESCRIPTION: Demonstrates a complete worker role configuration including custom command, resource limits, healthcheck, logging, labels, environment variables, and asset path settings.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/roles.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  workers:\n    hosts:\n      - 172.1.0.3\n      - 172.1.0.4: experiment1\n    traefik: true\n    cmd: \"bin/jobs\"\n    options:\n      memory: 2g\n      cpus: 4\n    healthcheck:\n      ...\n    logging:\n      ...\n    labels:\n      my-label: workers\n    env:\n      ...\n    asset_path: /public\n```\n\n----------------------------------------\n\nTITLE: Initializing Kamal Deployment Configuration\nDESCRIPTION: Demonstrates the use of the kamal init command to create the initial deployment configuration. Creates a deploy.yml configuration file, secrets file, and sample hooks directory structure.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/init.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal init\nCreated configuration file in config/deploy.yml\nCreated .kamal/secrets file\nCreated sample hooks in .kamal/hooks\n```\n\n----------------------------------------\n\nTITLE: Configuring Secret Environment Variables in Kamal\nDESCRIPTION: Shows how to define both clear and secret environment variables in Kamal configuration. Secret variables are stored in an env file on the host rather than passed directly to containers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  clear:\n    DB_USER: app\n  secret:\n    - DB_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Cache in Kamal\nDESCRIPTION: Sets up caching for Docker builds to speed up subsequent builds. Supports 'gha' (GitHub Actions) or 'registry' types, with additional options for cache mode and registry image.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  cache:\n    type: registry\n    options: mode=max\n    image: kamal-app-build-cache\n```\n\n----------------------------------------\n\nTITLE: Basic Kamal Deployment Configuration\nDESCRIPTION: Sample YAML configuration for Kamal deployment showing service name, image, servers, registry credentials, and environment variables\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/installation/index.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nservice: hey\nimage: 37s/hey\nservers:\n  - 192.168.0.1\n  - 192.168.0.2\nregistry:\n  username: registry-user-name\n  password:\n    - KAMAL_REGISTRY_PASSWORD\nenv:\n  secret:\n    - RAILS_MASTER_KEY\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Registry with Environment Variable Token in Kamal\nDESCRIPTION: YAML configuration for setting up a Docker registry in Kamal using environment variables for authentication. This example uses DigitalOcean's registry and references DOCKER_REGISTRY_TOKEN for both username and password.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/docker-registry.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: registry.digitalocean.com\n  username:\n    - DOCKER_REGISTRY_TOKEN\n  password:\n    - DOCKER_REGISTRY_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote and Local Builders for Multi-Arch Builds in Kamal\nDESCRIPTION: This YAML configuration sets up a local builder for ARM64 architecture and a remote builder for AMD64 architecture, enabling efficient multi-arch builds for deployments on different platforms.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  local:\n    arch: arm64\n    host: unix:///Users/<%= `whoami`.strip %>/.docker/run/docker.sock\n  remote:\n    arch: amd64\n    host: ssh://root@192.168.0.1\n```\n\n----------------------------------------\n\nTITLE: Initializing Healthcheck Configuration in YAML\nDESCRIPTION: Base configuration structure for defining healthcheck settings in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nhealthcheck:\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal CLI Help Output in Bash\nDESCRIPTION: This snippet shows the output of running 'kamal help' command in a bash terminal. It lists all available Kamal commands with brief descriptions and displays global options that can be used across commands.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/help.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal help\n  kamal accessory           # Manage accessories (db/redis/search)\n  kamal app                 # Manage application\n  kamal audit               # Show audit log from servers\n  kamal build               # Build application image\n  kamal config              # Show combined config (including secrets!)\n  kamal deploy              # Deploy app to servers\n  kamal details             # Show details about all containers\n  kamal docs [SECTION]      # Show Kamal configuration documentation\n  kamal help [COMMAND]      # Describe available commands or one specific command\n  kamal init                # Create config stub in config/deploy.yml and env stub in .env\n  kamal lock                # Manage the deploy lock\n  kamal proxy               # Manage kamal-proxy\n  kamal prune               # Prune old application images and containers\n  kamal redeploy            # Deploy app to servers without bootstrapping servers, starting kamal-proxy, pruning, and registry login\n  kamal registry            # Login and -out of the image registry\n  kamal remove              # Remove kamal-proxy, app, accessories, and registry session from servers\n  kamal rollback [VERSION]  # Rollback app to VERSION\n  kamal secrets             # Helpers for extracting secrets\n  kamal server              # Bootstrap servers with curl and Docker\n  kamal setup               # Setup all accessories, push the env, and deploy app to servers\n  kamal upgrade             # Upgrade from Kamal 1.x to 2.0\n  kamal version             # Show Kamal version\n\nOptions:\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Audit Command\nDESCRIPTION: This command displays the last 50 commands executed on each server in the Kamal deployment setup. It shows command execution timestamps, user info, and actions like pushing env files, pulling images, booting apps, and pruning containers/images.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/audit.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal audit\n kamal audit\n  INFO [1ec52bf7] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server2\n  INFO [54911c10] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server1\n  INFO [2f3d32d0] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server3\n  INFO [2f3d32d0] Finished in 0.232 seconds with exit status 0 (successful).\nApp Host: server3\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [workers] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n\n  INFO [54911c10] Finished in 0.232 seconds with exit status 0 (successful).\nApp Host: server1\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [web] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n\n  INFO [1ec52bf7] Finished in 0.233 seconds with exit status 0 (successful).\nApp Host: server2\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [web] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n```\n\n----------------------------------------\n\nTITLE: Sending Deployment Notification using Bash and cURL\nDESCRIPTION: This bash script uses cURL to send a deployment notification to a Basecamp chatbot. It includes environment variables set by Kamal to provide context about the deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/hooks/post-deploy.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/usr/bin/env bash\ncurl -q -d content=\"[My App] ${KAMAL_PERFORMER} Rolled back to version ${KAMAL_VERSION}\" https://3.basecamp.com/XXXXX/integrations/XXXXX/buckets/XXXXX/chats/XXXXX/lines\n```\n\n----------------------------------------\n\nTITLE: Environment Variables in .env File Format\nDESCRIPTION: Example of .env file format for storing sensitive environment variables like passwords and registry credentials. These files should not be checked into Git.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/environment-variables.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nKAMAL_REGISTRY_PASSWORD=pw\nDB_PASSWORD=secret123\n```\n\n----------------------------------------\n\nTITLE: Initializing Traefik Configuration in YAML\nDESCRIPTION: This snippet shows the basic structure for configuring Traefik in the root configuration file. It serves as the starting point for all Traefik-related settings in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik:\n```\n\n----------------------------------------\n\nTITLE: Viewing Kamal CLI Help Documentation\nDESCRIPTION: This command displays the full help documentation for the Kamal CLI tool, showing all available commands and global options. The output includes commands for managing applications, accessories, deployments, and more, along with various flags that can be used across commands.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/view-all-commands.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal --help\nCommands:\n  kamal accessory           # Manage accessories (db/redis/search)\n  kamal app                 # Manage application\n  kamal audit               # Show audit log from servers\n  kamal build               # Build application image\n  kamal config              # Show combined config (including secrets!)\n  kamal deploy              # Deploy app to servers\n  kamal details             # Show details about all containers\n  kamal docs [SECTION]      # Show Kamal configuration documentation\n  kamal help [COMMAND]      # Describe available commands or one specific command\n  kamal init                # Create config stub in config/deploy.yml and env stub in .env\n  kamal lock                # Manage the deploy lock\n  kamal proxy               # Manage kamal-proxy\n  kamal prune               # Prune old application images and containers\n  kamal redeploy            # Deploy app to servers without bootstrapping servers, starting kamal-proxy, pruning, and registry login\n  kamal registry            # Login and -out of the image registry\n  kamal remove              # Remove kamal-proxy, app, accessories, and registry session from servers\n  kamal rollback [VERSION]  # Rollback app to VERSION\n  kamal secrets             # Helpers for extracting secrets\n  kamal server              # Bootstrap servers with curl and Docker\n  kamal setup               # Setup all accessories, push the env, and deploy app to servers\n  kamal upgrade             # Upgrade from Kamal 1.x to 2.0\n  kamal version             # Show Kamal version\n\nOptions:\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Role-Based Server Configuration in YAML\nDESCRIPTION: Example structure for complex deployments using different server roles, showing web and workers as separate role configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/servers.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  web:\n    ...\n  workers:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Starting a Rails console in a new container with Kamal\nDESCRIPTION: Initiates an interactive Rails console session in a new container created from the most recent application image.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i 'bin/rails console'\n```\n\n----------------------------------------\n\nTITLE: Listing Kamal Accessory Subcommands\nDESCRIPTION: Shows the available subcommands for the 'kamal accessory' command, including options for booting, managing, and executing commands on accessory services.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/accessory.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal accessory\nCommands:\n  kamal accessory boot [NAME]        # Boot new accessory service on host (use NAME=all to boot all accessories)\n  kamal accessory details [NAME]     # Show details about accessory on host (use NAME=all to show all accessories)\n  kamal accessory exec [NAME] [CMD]  # Execute a custom command on servers (use --help to show options)\n  kamal accessory help [COMMAND]     # Describe subcommands or one specific subcommand\n  kamal accessory logs [NAME]        # Show log lines from accessory on host (use --help to show options)\n  kamal accessory reboot [NAME]      # Reboot existing accessory on host (stop container, remove container, start new container; use NAME=all to boot all accessories)\n  kamal accessory remove [NAME]      # Remove accessory container, image and data directory from host (use NAME=all to remove all accessories)\n  kamal accessory restart [NAME]     # Restart existing accessory container on host\n  kamal accessory start [NAME]       # Start existing accessory container on host\n  kamal accessory stop [NAME]        # Stop existing accessory container on host\n```\n\n----------------------------------------\n\nTITLE: Defining Accessories in YAML Configuration\nDESCRIPTION: This snippet shows how to define an accessory named 'mysql' in the Kamal configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\naccessories:\n  mysql:\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Registry in YAML for Kamal\nDESCRIPTION: YAML configuration for setting up a custom registry (e.g., DigitalOcean) in Kamal. It demonstrates how to specify the server, username, and password, including the use of environment variables for secrets.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/docker-registry.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: registry.digitalocean.com\n  username:\n    - DOCKER_REGISTRY_TOKEN\n  password:\n    - DOCKER_REGISTRY_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Basic Server Configuration in YAML\nDESCRIPTION: Simple configuration for identical servers that will be implicitly assigned to the 'web' role. Lists three servers by their IP addresses.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/servers.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  - 172.0.0.1\n  - 172.0.0.2\n  - 172.0.0.3\n```\n\n----------------------------------------\n\nTITLE: Kamal Lock Management Example Workflow\nDESCRIPTION: Demonstrates a complete workflow of checking lock status, acquiring a lock with a message, verifying the lock details, and releasing the lock. Shows the command output including server operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/lock.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal lock status\n  INFO [f085f083] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [f085f083] Finished in 0.146 seconds with exit status 0 (successful).\nThere is no deploy lock\n$ kamal lock acquire -m \"Maintenance in progress\"\n  INFO [d9f63437] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [d9f63437] Finished in 0.138 seconds with exit status 0 (successful).\nAcquired the deploy lock\n$ kamal lock status\n  INFO [9315755d] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [9315755d] Finished in 0.130 seconds with exit status 0 (successful).\nLocked by: Deployer at 2024-04-05T08:32:46Z\nVersion: 75bf6fa40b975cbd8aec05abf7164e0982f185ac\nMessage: Maintenance in progress\n$ kamal lock release\n  INFO [7d5718a8] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [7d5718a8] Finished in 0.137 seconds with exit status 0 (successful).\nReleased the deploy lock\n$ kamal lock status\n  INFO [f5900cc8] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [f5900cc8] Finished in 0.132 seconds with exit status 0 (successful).\nThere is no deploy lock\n```\n\n----------------------------------------\n\nTITLE: Listing Kamal Environment Variables in Bash\nDESCRIPTION: This snippet shows the environment variables available to Kamal hooks for detailed deployment reporting. These variables provide information about the deployment process, performer, service, and targets.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/hooks/overview.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nKAMAL_RECORDED_AT\nKAMAL_PERFORMER\nKAMAL_SERVICE\nKAMAL_SERVICE_VERSION\nKAMAL_VERSION\nKAMAL_HOSTS\nKAMAL_COMMAND\nKAMAL_SUBCOMMAND\nKAMAL_DESTINATION\nKAMAL_ROLE\n```\n\n----------------------------------------\n\nTITLE: Configuring Multistage Builder Cache in Kamal\nDESCRIPTION: Examples of configuring Docker multistage build cache options in Kamal to speed up builds. Shows how to use GitHub Actions cache or Registry cache with various configuration options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Using GHA cache\nbuilder:\n  cache:\n    type: gha\n\n# Using Registry cache\nbuilder:\n  cache:\n    type: registry\n\n# Using Registry cache with different cache image\nbuilder:\n  cache:\n    type: registry\n    # default image name is <image>-build-cache\n    image: application-cache-image\n\n# Using Registry cache with additional cache-to options\nbuilder:\n  cache:\n    type: registry\n    options: mode=max,image-manifest=true,oci-mediatypes=true\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Run Options for Accessory in YAML\nDESCRIPTION: This snippet illustrates how to set additional Docker run options for an accessory, such as restart policy and CPU limits.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n    options:\n      restart: always\n      cpus: 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Fixed Group Size Boot Strategy in Kamal\nDESCRIPTION: Configuration for booting containers on a fixed number of hosts simultaneously. This example boots 2 hosts at a time with a 10 second delay between groups.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/booting.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nboot:\n  limit: 2\n  wait: 10\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS ECR Registry with Dynamic Token Generation in Kamal\nDESCRIPTION: YAML configuration for AWS ECR registry that uses ERB to dynamically generate authentication tokens via AWS CLI. This approach solves the 12-hour token expiration issue by generating a fresh token on deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/docker-registry.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: <your aws account id>.dkr.ecr.<your aws region id>.amazonaws.com\n  username: AWS\n  password: <%= %x(aws ecr get-login-password) %>\n```\n\n----------------------------------------\n\nTITLE: Bootstrapping Ubuntu Server for Non-Root Kamal Usage\nDESCRIPTION: This snippet shows the commands needed to prepare an Ubuntu server for use with Kamal when using a non-root user. It updates the system, installs necessary packages, and adds the user to the docker group.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt update\nsudo apt upgrade -y\nsudo apt install -y docker.io curl git\nsudo usermod -a -G docker app\n```\n\n----------------------------------------\n\nTITLE: Executing a Rollback in Kamal\nDESCRIPTION: Command to perform a rollback to a specific version by providing the commit hash to the 'kamal rollback' command. This will stop the current container and start a new one using the specified image version.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/rollback.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkamal rollback e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n```\n\n----------------------------------------\n\nTITLE: Kamal Traefik CLI Commands Overview\nDESCRIPTION: Comprehensive list of available Traefik management commands in Kamal CLI. These commands allow for complete lifecycle management of Traefik containers including deployment, monitoring, and maintenance operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/traefik.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal traefik\nCommands:\n  kamal traefik boot            # Boot Traefik on servers\n  kamal traefik details         # Show details about Traefik container from servers\n  kamal traefik help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal traefik logs            # Show log lines from Traefik on servers\n  kamal traefik reboot          # Reboot Traefik on servers (stop container, remove container, start new container)\n  kamal traefik remove          # Remove Traefik container and image from servers\n  kamal traefik restart         # Restart existing Traefik container on servers\n  kamal traefik start           # Start existing Traefik container on servers\n  kamal traefik stop            # Stop existing Traefik container on servers\n```\n\n----------------------------------------\n\nTITLE: Build Arguments Configuration - YAML\nDESCRIPTION: Defines build-time variables passed to Docker build process.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n  args:\n    ENVIRONMENT: production\n```\n\n----------------------------------------\n\nTITLE: Complete Environment Variables Configuration Example\nDESCRIPTION: Comprehensive example showing all environment variable configuration options including clear values, secrets, and tagged environments.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/environment-variables.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  clear:\n    MYSQL_USER: app\n  secret:\n    - MYSQL_PASSWORD\n  tags:\n    monitoring:\n      MYSQL_USER: monitoring\n    replica:\n      clear:\n        MYSQL_USER: readonly\n      secret:\n        - READONLY_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal Secrets Commands\nDESCRIPTION: Shows the available Kamal secrets commands including extract, fetch, help, and print operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal secrets\nCommands:\n  kamal secrets extract                                                     # Extract a single secret from the results of a fetch call\n  kamal secrets fetch [SECRETS...] --account=ACCOUNT -a, --adapter=ADAPTER  # Fetch secrets from a vault\n  kamal secrets help [COMMAND]                                              # Describe subcommands or one specific subcommand\n  kamal secrets print                                                       # Print the secrets (for debugging)\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from GCP Secret Manager\nDESCRIPTION: Examples of fetching secrets from GCP Secret Manager, including using different projects, accounts, and secret versions.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch a secret with an explicit project name, credentials, and secret version:\nkamal secrets fetch --adapter=gcp --account=default --from=default my-secret/latest\n\n# The project name can be added as a prefix to the secret name instead of using --from:\nkamal secrets fetch --adapter=gcp --account=default default/my-secret/latest\n\n# The 'latest' version is used by default, so it can be omitted as well:\nkamal secrets fetch --adapter=gcp --account=default default/my-secret\n\n# If the default project is used, the prefix can also be left out entirely, leading to the simplest\n# way to fetch a secret using the default project and credentials, and the latest version of the\n# secret:\nkamal secrets fetch --adapter=gcp --account=default my-secret\n\n# Multiple secrets can be fetched at the same time.\n# Fetch `my-secret` and `another-secret` from the project `my-project`:\nkamal secrets fetch --adapter=gcp \\\n  --account=default \\\n  --from=my-project \\\n  my-secret another-secret\n\n# Secrets can be fetched from multiple projects at the same time.\n# Fetch from multiple projects, using default to refer to the default project:\nkamal secrets fetch --adapter=gcp \\\n  --account=default \\\n  default/my-secret my-project/another-secret\n\n# Specific secret versions can be fetched.\n# Fetch version 123 of the secret `my-secret` in the default project (the default behavior is to\n# fetch `latest`)\nkamal secrets fetch --adapter=gcp \\\n  --account=default \\\n  default/my-secret/123\n\n# Credentials other than the default can also be used.\n# Fetch a secret using the `user@example.com` credentials:\nkamal secrets fetch --adapter=gcp \\\n  --account=user@example.com \\\n  my-secret\n\n# Service account impersonation and delegation chains are available.\n# Fetch a secret as `user@example.com`, impersonating `service-account@example.com` with\n# `delegate@example.com` as a delegate\nkamal secrets fetch --adapter=gcp \\\n  --account=\"user@example.com|delegate@example.com,service-account@example.com\" \\\n  my-secret\n```\n\n----------------------------------------\n\nTITLE: Setting Build Target in Kamal\nDESCRIPTION: Specifies a build target stage in multi-stage Dockerfiles. If not set, the default target from the Dockerfile will be used.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  target: production\n```\n\n----------------------------------------\n\nTITLE: Logging in and out of Docker registry using Kamal CLI\nDESCRIPTION: This code snippet demonstrates how to use the 'kamal registry' command to log in and out of a Docker registry across multiple servers. It shows the output of successful login and logout operations, including execution times and status for each server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/registry.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal registry login\n  INFO [60171eef] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on localhost\n  INFO [60171eef] Finished in 0.069 seconds with exit status 0 (successful).\n  INFO [427368d0] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server1\n  INFO [4c4ab467] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server3\n  INFO [f985bed4] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server2\n  INFO [427368d0] Finished in 0.232 seconds with exit status 0 (successful).\n  INFO [f985bed4] Finished in 0.234 seconds with exit status 0 (successful).\n  INFO [4c4ab467] Finished in 0.245 seconds with exit status 0 (successful).\n$ kamal registry logout\n  INFO [72b94e74] Running docker logout registry:4443 on server2\n  INFO [d096054d] Running docker logout registry:4443 on server1\n  INFO [8488da90] Running docker logout registry:4443 on server3\n  INFO [72b94e74] Finished in 0.142 seconds with exit status 0 (successful).\n  INFO [8488da90] Finished in 0.179 seconds with exit status 0 (successful).\n  INFO [d096054d] Finished in 0.183 seconds with exit status 0 (successful).\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Reference for Kamal Hooks\nDESCRIPTION: List of environment variables available to Kamal hooks for deployment reporting and automation. These variables provide context about the deployment process, including timing, performer, service details, and command information.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/hooks/overview.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nKAMAL_RECORDED_AT=2023-04-14T17:07:31Z\nKAMAL_PERFORMER=$(whoami)\nKAMAL_SERVICE=app\nKAMAL_SERVICE_VERSION=app@150b24f\nKAMAL_VERSION=<full-version>\nKAMAL_HOSTS=host1,host2\nKAMAL_COMMAND=<command>\nKAMAL_SUBCOMMAND=<subcommand>\nKAMAL_DESTINATION=staging\nKAMAL_ROLE=web\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Builder for Single-Arch Builds in Kamal\nDESCRIPTION: This YAML configuration sets up a remote builder targeting only AMD64 architecture, useful for deploying on x86 64-bit systems when developing on ARM64 platforms without needing local ARM64 builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  remote:\n    arch: amd64\n    host: ssh://root@192.168.0.1\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Builder in Kamal\nDESCRIPTION: Sets up a remote builder connection string. Used by Kamal for builds that don't match the local architecture of the deployment host.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  remote: ssh://docker@docker-builder\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Registry Login and Logout Commands\nDESCRIPTION: Examples of using kamal registry login to authenticate with Docker registries and kamal registry logout to remove authentication credentials across multiple servers. The output shows the commands executing on localhost and remote servers with timestamps and execution status.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/registry.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal registry login\n  INFO [60171eef] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on localhost\n  INFO [60171eef] Finished in 0.069 seconds with exit status 0 (successful).\n  INFO [427368d0] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server1\n  INFO [4c4ab467] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server3\n  INFO [f985bed4] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server2\n  INFO [427368d0] Finished in 0.232 seconds with exit status 0 (successful).\n  INFO [f985bed4] Finished in 0.234 seconds with exit status 0 (successful).\n  INFO [4c4ab467] Finished in 0.245 seconds with exit status 0 (successful).\n$ kamal registry logout\n  INFO [72b94e74] Running docker logout registry:4443 on server2\n  INFO [d096054d] Running docker logout registry:4443 on server1\n  INFO [8488da90] Running docker logout registry:4443 on server3\n  INFO [72b94e74] Finished in 0.142 seconds with exit status 0 (successful).\n  INFO [8488da90] Finished in 0.179 seconds with exit status 0 (successful).\n  INFO [d096054d] Finished in 0.183 seconds with exit status 0 (successful).\n```\n\n----------------------------------------\n\nTITLE: Referencing Build Secrets in Kamal Config\nDESCRIPTION: YAML configuration showing how to reference build secrets in the Kamal deployment configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# config/deploy.yml\n\nbuilder:\n  secrets:\n    - GITHUB_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Volumes\nDESCRIPTION: Specifies additional volumes to be mounted into the container, including host path and container path mappings.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n  - /path/on/host:/path/in/container:ro\n```\n\n----------------------------------------\n\nTITLE: Using Build Secrets in Dockerfile\nDESCRIPTION: Example of how to use a build secret (GITHUB_TOKEN) in a Dockerfile to access private repositories during bundle installation, with proper secret handling.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_8\n\nLANGUAGE: dockerfile\nCODE:\n```\n# Copy Gemfiles\nCOPY Gemfile Gemfile.lock ./\n\n# Install dependencies, including private repositories via access token (then remove bundle cache with exposed GITHUB_TOKEN)\nRUN --mount=type=secret,id=GITHUB_TOKEN \\\n  BUNDLE_GITHUB__COM=x-access-token:$(cat /run/secrets/GITHUB_TOKEN) \\\n  bundle install && \\\n  rm -rf /usr/local/bundle/cache\n```\n\n----------------------------------------\n\nTITLE: Implementing Basecamp notification post-deploy hook in Bash\nDESCRIPTION: Script demonstrating how to send deployment notifications to a Basecamp chatbot using curl. Uses environment variables KAMAL_PERFORMER and KAMAL_VERSION to include deployment details in the notification.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/hooks/post-deploy.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/usr/bin/env bash\ncurl -q -d content=\"[My App] ${KAMAL_PERFORMER} Rolled back to version ${KAMAL_VERSION}\" https://3.basecamp.com/XXXXX/integrations/XXXXX/buckets/XXXXX/chats/XXXXX/lines\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Cache in Kamal\nDESCRIPTION: These YAML configurations show how to set up build caches using either GitHub Actions or a Docker registry, which can significantly speed up builds by reusing cached layers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# Using GHA cache\nbuilder:\n  cache:\n    type: gha\n\n# Using Registry cache\nbuilder:\n  cache:\n    type: registry\n\n# Using Registry cache with different cache image\nbuilder:\n  cache:\n    type: registry\n    # default image name is <image>-build-cache\n    image: application-cache-image\n\n# Using Registry cache with additional cache-to options\nbuilder:\n  cache:\n    type: registry\n    options: mode=max,image-manifest=true,oci-mediatypes=true\n```\n\n----------------------------------------\n\nTITLE: Kamal Build Command Overview\nDESCRIPTION: Lists all available subcommands under the kamal build command, including create, deliver, dev, details, pull, push and remove operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/build.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal build\nCommands:\n  kamal build create          # Create a build setup\n  kamal build deliver         # Build app and push app image to registry then pull image on servers\n  kamal build dev             # Build using the working directory, tag it as dirty, and push to local image store.\n  kamal build details         # Show build setup\n  kamal build help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal build pull            # Pull app image from registry onto servers\n  kamal build push            # Build and push app image to registry\n  kamal build remove          # Remove build setup\n```\n\n----------------------------------------\n\nTITLE: Executing a Rollback Command in Kamal\nDESCRIPTION: Command to perform a rollback to a specific version by providing the commit hash identifier. This stops the current container and starts a new one using the specified previous image version.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/rollback.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkamal rollback e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n```\n\n----------------------------------------\n\nTITLE: Bootstrapping Kamal Server in Bash\nDESCRIPTION: Demonstrates the command to set up Docker on the host servers for running Kamal applications. This command checks for Docker installation and installs it if not present.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/server.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server bootstrap\n```\n\n----------------------------------------\n\nTITLE: Generating Environment Variables with 1Password Integration in ERB\nDESCRIPTION: Template for generating .env file using 1Password CLI to retrieve secrets. The template authenticates with 1Password, fetches various secrets like GitHub token, registry password, and application keys using the session token.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/envify.md#2025-04-23_snippet_0\n\nLANGUAGE: erb\nCODE:\n```\n<% if (session_token = `op signin --account my-one-password-account --raw`.strip) != \"\" %># Generated by kamal envify\nGITHUB_TOKEN=<%= `gh config get -h github.com oauth_token`.strip %>\nKAMAL_REGISTRY_PASSWORD=<%= `op read \"op://Vault/Docker Hub/password\" -n --session  #{session_token}` %>\nRAILS_MASTER_KEY=<%= `op read \"op://Vault/My App/RAILS_MASTER_SECRET\" -n --session #{session_token}` %>\nMYSQL_ROOT_PASSWORD=<%= `op read \"op://Vault/My App/MYSQL_ROOT_PASSWORD\" -n --session #{session_token}` %>\n<% else raise ArgumentError, \"Session token missing\" end %>\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from Bitwarden Secrets Manager\nDESCRIPTION: Examples of fetching secrets from Bitwarden Secrets Manager, including all secrets and from specific projects.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch all secrets that the machine account has access to\nkamal secrets fetch --adapter bitwarden-sm all\n\n# Fetch secrets from a project\nkamal secrets fetch --adapter bitwarden-sm MyProjectID/all\n\n# Extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Logging in and out of Docker Registry with Kamal CLI\nDESCRIPTION: Example showing the login and logout process using Kamal CLI across multiple servers. The command executes Docker login/logout operations in parallel on multiple target servers, displaying timing and status information for each operation.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/remove.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal registry login\n  INFO [60171eef] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on localhost\n  INFO [60171eef] Finished in 0.069 seconds with exit status 0 (successful).\n  INFO [427368d0] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server1\n  INFO [4c4ab467] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server3\n  INFO [f985bed4] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server2\n  INFO [427368d0] Finished in 0.232 seconds with exit status 0 (successful).\n  INFO [f985bed4] Finished in 0.234 seconds with exit status 0 (successful).\n  INFO [4c4ab467] Finished in 0.245 seconds with exit status 0 (successful).\n$ kamal registry logout\n  INFO [72b94e74] Running docker logout registry:4443 on server2\n  INFO [d096054d] Running docker logout registry:4443 on server1\n  INFO [8488da90] Running docker logout registry:4443 on server3\n  INFO [72b94e74] Finished in 0.142 seconds with exit status 0 (successful).\n  INFO [8488da90] Finished in 0.179 seconds with exit status 0 (successful).\n  INFO [d096054d] Finished in 0.183 seconds with exit status 0 (successful).\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Arguments in Kamal\nDESCRIPTION: This YAML configuration shows how to set build arguments in Kamal, which can be used to pass non-secret values to the Dockerfile during image construction.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  args:\n    RUBY_VERSION: 3.2.0\n```\n\n----------------------------------------\n\nTITLE: Using Remote Builder for Multi-Arch in Kamal\nDESCRIPTION: Configuration for building multi-architecture images in Kamal. This setup builds the matching architecture locally and the other architecture remotely, optimizing build performance.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  arch:\n    - amd64\n    - arm64\n  remote: ssh://root@192.168.0.1\n```\n\n----------------------------------------\n\nTITLE: Configuring Fixed Group Boot Limits in Kamal\nDESCRIPTION: Configuration for booting containers on a fixed number of hosts simultaneously. This example sets up deployment to occur on 2 hosts at a time with a 10-second delay between groups.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/booting.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nboot:\n  limit: 2\n  wait: 10\n```\n\n----------------------------------------\n\nTITLE: Basic Builder Configuration - YAML\nDESCRIPTION: Starting point for builder configuration in Kamal's deployment file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n```\n\n----------------------------------------\n\nTITLE: Configuring Kamal Docker Alias for macOS\nDESCRIPTION: Sets up a shell alias that allows running Kamal through Docker on macOS, mounting the current working directory and forwarding SSH authentication socket.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/dockerized.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nalias kamal='docker run -it --rm -v \"${PWD}:/workdir\" -v \"/run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock\" -e SSH_AUTH_SOCK=\"/run/host-services/ssh-auth.sock\" -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/basecamp/kamal:latest'\n```\n\n----------------------------------------\n\nTITLE: Running Interactive Bash Session in Existing Container with Kamal\nDESCRIPTION: This command starts an interactive bash session in the currently running application container. The '-i' flag enables interactive mode and '--reuse' specifies to use the existing container rather than creating a new one.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i --reuse bash\n```\n\n----------------------------------------\n\nTITLE: Using Build Arguments in Dockerfile with Kamal\nDESCRIPTION: This Dockerfile snippet demonstrates how to use a build argument (RUBY_VERSION) passed from Kamal to specify the Ruby version for the base image.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_10\n\nLANGUAGE: dockerfile\nCODE:\n```\nARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION-slim as base\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenSSH Config File Usage in Kamal\nDESCRIPTION: This YAML snippet demonstrates how to control the loading of OpenSSH config files in Kamal, which can be set to true, false, or a specific file path.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  config: true\n```\n\n----------------------------------------\n\nTITLE: SSL Configuration - YAML\nDESCRIPTION: Enables automatic HTTPS via Let's Encrypt. Requires single server deployment and proper host configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  ssl: true\n```\n\n----------------------------------------\n\nTITLE: Running Rails commands on all servers with Kamal\nDESCRIPTION: Executes 'rails about' on all configured servers, showing detailed information about the Rails environment on each.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec 'bin/rails about'\nApp Host: 192.168.0.1\nAbout your application's environment\nRails version             7.1.0.alpha\nRuby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\nRubyGems version          3.3.26\nRack version              2.2.5\nMiddleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper\nApplication root          /rails\nEnvironment               production\nDatabase adapter          sqlite3\nDatabase schema version   20221231233303\n\nApp Host: 192.168.0.2\nAbout your application's environment\nRails version             7.1.0.alpha\nRuby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\nRubyGems version          3.3.26\nRack version              2.2.5\nMiddleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper\nApplication root          /rails\nEnvironment               production\nDatabase adapter          sqlite3\nDatabase schema version   20221231233303\n```\n\n----------------------------------------\n\nTITLE: Kamal Docker Alias Setup for macOS\nDESCRIPTION: Shell alias configuration for running Kamal through Docker on macOS systems, with volume mounts for workdir, SSH authentication, and Docker socket\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/installation/index.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nalias kamal='docker run -it --rm -v \"${PWD}:/workdir\" -v \"/run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock\" -e SSH_AUTH_SOCK=\"/run/host-services/ssh-auth.sock\" -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/basecamp/kamal:latest'\n```\n\n----------------------------------------\n\nTITLE: Executing Commands on All Servers in Bash\nDESCRIPTION: Demonstrates running a custom command ('date') on all servers configured in Kamal. The output shows the command execution details and results from each server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/server.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec \"date\"\nRunning 'date' on 867.53.0.9...\n  INFO [e79c62bb] Running /usr/bin/env date on 867.53.0.9\n  INFO [e79c62bb] Finished in 0.247 seconds with exit status 0 (successful).\nApp Host: 867.53.0.9\nThu Jun 13 08:06:19 AM UTC 2024\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Port in Kamal (YAML)\nDESCRIPTION: YAML configuration to set a custom SSH port for Kamal. This overrides the default port 22.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nport: \"2222\"\n```\n\n----------------------------------------\n\nTITLE: Basic Environment Variables Configuration in YAML\nDESCRIPTION: Simple key-value configuration for setting environment variables directly in Kamal configuration file. These variables are passed to Docker run command during deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/environment-variables.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  DATABASE_HOST: mysql-db1\n  DATABASE_PORT: 3306\n```\n\n----------------------------------------\n\nTITLE: Specifying SSH Private Key Files in Kamal\nDESCRIPTION: This YAML snippet demonstrates how to specify an array of private key file paths for SSH authentication in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  keys: [ \"~/.ssh/id.pem\" ]\n```\n\n----------------------------------------\n\nTITLE: Setting Build Context in Kamal\nDESCRIPTION: Defines the build context for Docker builds. By default, uses a clean Git clone, but can be configured to use local directory for development with uncommitted changes.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  context: .\n```\n\n----------------------------------------\n\nTITLE: Running Kamal Details Command with Quiet Flag\nDESCRIPTION: Example of using the 'kamal details -q' command to display container information across multiple servers. The output shows Traefik proxy containers running on server1 and server2, application web containers on server1 and server2, application workers on server3, and custom busybox containers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/details.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal details -q\nTraefik Host: server2\nCONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS                NAMES\nb220af815ea7   registry:4443/traefik:v2.10   \"/entrypoint.sh --pr…\"   52 minutes ago   Up 52 minutes   0.0.0.0:80->80/tcp   traefik\n\nTraefik Host: server1\nCONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS                NAMES\ne0abb837120a   registry:4443/traefik:v2.10   \"/entrypoint.sh --pr…\"   52 minutes ago   Up 52 minutes   0.0.0.0:80->80/tcp   traefik\n\nApp Host: server2\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS                    PORTS     NAMES\n3ec7c8122988   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes (healthy)   80/tcp    app-web-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nApp Host: server1\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS                    PORTS     NAMES\n32ae39c98b29   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes (healthy)   80/tcp    app-web-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nApp Host: server3\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS          PORTS     NAMES\ndf8990876d14   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes   80/tcp    app-workers-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nCONTAINER ID   IMAGE                          COMMAND                   CREATED          STATUS          PORTS     NAMES\n14857a6cb6b1   registry:4443/busybox:1.36.0   \"sh -c 'echo \\\"Starti…\"   42 minutes ago   Up 42 minutes             custom-busybox\nCONTAINER ID   IMAGE                          COMMAND                   CREATED          STATUS          PORTS     NAMES\n17f3ff88ff9f   registry:4443/busybox:1.36.0   \"sh -c 'echo \\\"Starti…\"   42 minutes ago   Up 42 minutes             custom-busybox\n```\n\n----------------------------------------\n\nTITLE: Adding Traefik as a Kamal Accessory in Configuration\nDESCRIPTION: YAML configuration to set up Traefik as a Kamal accessory in deploy.yml. It configures Traefik to listen on port 80, use the Docker provider for service discovery, and mount the Docker socket to allow container inspection.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/continuing-to-use-traefik.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\naccessories:\n  traefik:\n    service: traefik\n    image: traefik:v2.10\n    port: 80\n    cmd: \"--providers.docker\"\n    options:\n      volume:\n        - \"/var/run/docker.sock:/var/run/docker.sock\"\n    roles:\n      - web\n```\n\n----------------------------------------\n\nTITLE: Running Interactive Commands on Server in Bash\nDESCRIPTION: Demonstrates how to start an interactive session on a server using the '--interactive' flag. This example launches a bash shell that allows for direct interaction with the server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/server.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec --interactive \"/bin/bash\"\nRunning '/bin/bash' on 867.53.0.9 interactively...\nroot@server:~#\n```\n\n----------------------------------------\n\nTITLE: Specifying SSH Key Files in Kamal (YAML)\nDESCRIPTION: YAML configuration to specify an array of private key file paths for SSH authentication in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkeys: [ \"~/.ssh/id.pem\" ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Percentage-Based Boot Limits in Kamal\nDESCRIPTION: Configuration for booting containers on a percentage of hosts simultaneously. This example configures deployment to occur on 25% of hosts at a time with a 2-second delay between groups.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/booting.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nboot:\n  limit: 25%\n  wait: 2\n```\n\n----------------------------------------\n\nTITLE: Executing Command on All Kamal Servers in Bash\nDESCRIPTION: Shows how to run a custom command (in this case, 'date') on all servers managed by Kamal. The output includes the command execution details and the result from the server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/server.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec \"date\"\nRunning 'date' on 867.53.0.9...\n  INFO [e79c62bb] Running /usr/bin/env date on 867.53.0.9\n  INFO [e79c62bb] Finished in 0.247 seconds with exit status 0 (successful).\nApp Host: 867.53.0.9\nThu Jun 13 08:06:19 AM UTC 2024\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal Configuration Settings with the kamal config Command\nDESCRIPTION: This example shows how to use the `kamal config` command to display the current configuration settings for a Kamal deployment. The output includes information about roles, hosts, SSH options, builder settings, accessories, and logging configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/config.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal config\n---\n:roles:\n- web\n:hosts:\n- vm1\n- vm2\n:primary_host: vm1\n:version: 505f4f60089b262c693885596fbd768a6ab663e9\n:repository: registry:4443/app\n:absolute_image: registry:4443/app:505f4f60089b262c693885596fbd768a6ab663e9\n:service_with_version: app-505f4f60089b262c693885596fbd768a6ab663e9\n:volume_args: []\n:ssh_options:\n  :user: root\n  :port: 22\n  :keepalive: true\n  :keepalive_interval: 30\n  :log_level: :fatal\n:sshkit: {}\n:builder:\n  driver: docker\n  arch: arm64\n  args:\n    COMMIT_SHA: 505f4f60089b262c693885596fbd768a6ab663e9\n:accessories:\n  busybox:\n    service: custom-busybox\n    image: registry:4443/busybox:1.36.0\n    cmd: sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1;\n      done'\n    roles:\n    - web\n:logging:\n- \"--log-opt\"\n- max-size=\"10m\"\n```\n\n----------------------------------------\n\nTITLE: Bootstrapping Ubuntu Server for Kamal (Shell)\nDESCRIPTION: Commands to prepare an Ubuntu server for use with Kamal, including updating packages, installing Docker, and adding a user to the docker group.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt update\nsudo apt upgrade -y\nsudo apt install -y docker.io curl git\nsudo usermod -a -G docker app\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Kamal Lock Command Workflow\nDESCRIPTION: Illustrates a complete workflow of using the 'kamal lock' command, including checking status, acquiring a lock with a message, and releasing the lock.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/lock.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal lock status\n  INFO [f085f083] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [f085f083] Finished in 0.146 seconds with exit status 0 (successful).\nThere is no deploy lock\n$ kamal lock acquire -m \"Maintanence in progress\"\n  INFO [d9f63437] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [d9f63437] Finished in 0.138 seconds with exit status 0 (successful).\nAcquired the deploy lock\n$ kamal lock status\n  INFO [9315755d] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [9315755d] Finished in 0.130 seconds with exit status 0 (successful).\nLocked by: Deployer at 2024-04-05T08:32:46Z\nVersion: 75bf6fa40b975cbd8aec05abf7164e0982f185ac\nMessage: Maintanence in progress\n$ kamal lock release\n  INFO [7d5718a8] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [7d5718a8] Finished in 0.137 seconds with exit status 0 (successful).\nReleased the deploy lock\n$ kamal lock status\n  INFO [f5900cc8] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [f5900cc8] Finished in 0.132 seconds with exit status 0 (successful).\nThere is no deploy lock\n```\n\n----------------------------------------\n\nTITLE: Providing Raw SSH Key Data in Kamal (YAML)\nDESCRIPTION: YAML configuration to provide raw private key data in PEM format for SSH authentication in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkey_data: [ \"-----BEGIN OPENSSH PRIVATE KEY-----\" ]\n```\n\n----------------------------------------\n\nTITLE: Running Interactive Bash Session in New Container with Kamal\nDESCRIPTION: This command starts an interactive bash session in a new container created from the most recent application image. The '-i' flag enables interactive mode, allowing users to execute commands in a shell environment within the container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i bash\n```\n\n----------------------------------------\n\nTITLE: Kamal Proxy Commands Overview\nDESCRIPTION: Lists all available proxy-related commands in Kamal, including boot, configuration management, logs, and container management operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/proxy.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal proxy\nCommands:\n  kamal proxy boot            # Boot proxy on servers\n  kamal proxy boot_config <set|get|reset>  # Manage kamal-proxy boot configuration\n  kamal proxy details         # Show details about proxy container from servers\n  kamal proxy help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal proxy logs            # Show log lines from proxy on servers\n  kamal proxy reboot          # Reboot proxy on servers (stop container, remove container, start new container)\n  kamal proxy remove          # Remove proxy container and image from servers\n  kamal proxy restart         # Restart existing proxy container on servers\n  kamal proxy start           # Start existing proxy container on servers\n  kamal proxy stop            # Stop existing proxy container on servers\n```\n\n----------------------------------------\n\nTITLE: Simple Role Host Configuration with Tags\nDESCRIPTION: Demonstrates how to configure web server roles with host IPs and optional tags for environment variables.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/roles.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  web:\n    - 172.1.0.1\n    - 172.1.0.2: experiment1\n    - 172.1.0.2: [ experiment1, experiment2 ]\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from 1Password\nDESCRIPTION: Examples of fetching secrets from 1Password using different vault and item configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch from item `MyItem` in the vault `MyVault`\nkamal secrets fetch --adapter 1password --account myaccount --from MyVault/MyItem REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch from sections of item `MyItem` in the vault `MyVault`\nkamal secrets fetch --adapter 1password --account myaccount --from MyVault/MyItem common/REGISTRY_PASSWORD production/DB_PASSWORD\n\n# Fetch from separate items MyItem, MyItem2\nkamal secrets fetch --adapter 1password --account myaccount --from MyVault MyItem/REGISTRY_PASSWORD MyItem2/DB_PASSWORD\n\n# Fetch from multiple vaults\nkamal secrets fetch --adapter 1password --account myaccount MyVault/MyItem/REGISTRY_PASSWORD MyVault2/MyItem2/DB_PASSWORD\n\n# All three of these will extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract MyItem/REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract MyVault/MyItem/REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Configuring kamal-proxy Boot Options for Traefik Integration\nDESCRIPTION: This pre-deploy hook script configures kamal-proxy to work with Traefik by disabling direct port publishing and adding necessary Traefik routing labels. It ensures kamal-proxy is properly set up when deploying to a new host.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/continuing-to-use-traefik.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n#!/bin/sh\nkamal proxy boot_config set \\\n  --publish false \\\n  --docker_options label=traefik.http.services.kamal_proxy.loadbalancer.server.scheme=http \\\n                   label=traefik.http.routers.kamal_proxy.rule=PathPrefix\\(\\`/\\`\\)\n```\n\n----------------------------------------\n\nTITLE: Viewing Available Rollback Containers in Kamal\nDESCRIPTION: Example output of the 'kamal app containers -q' command that shows available containers for rollback across multiple hosts, including their container IDs, images, command, creation time, status, ports and names.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/rollback.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nApp Host: 192.168.0.1\nCONTAINER ID   IMAGE                                                                         COMMAND                    CREATED          STATUS                      PORTS      NAMES\n1d3c91ed1f51   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   \"/rails/bin/docker-e...\"   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123\n539f26b28369   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   \"/rails/bin/docker-e...\"   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n\nApp Host: 192.168.0.2\nCONTAINER ID   IMAGE                                                                         COMMAND                    CREATED          STATUS                      PORTS      NAMES\nbadb1aa51db4   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   \"/rails/bin/docker-e...\"   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123\n6f170d1172ae   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   \"/rails/bin/docker-e...\"   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n```\n\n----------------------------------------\n\nTITLE: Defining Logging Configuration Structure in YAML\nDESCRIPTION: Basic YAML structure for defining logging configuration in Kamal deployment files. This is the parent key under which driver and options are specified.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/logging.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlogging:\n```\n\n----------------------------------------\n\nTITLE: Builder Cache Configuration - YAML\nDESCRIPTION: Sets up build caching using either GitHub Actions or registry with custom options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  cache:\n    type: registry\n    options: mode=max\n    image: kamal-app-build-cache\n```\n\n----------------------------------------\n\nTITLE: Kamal Accessory Command Reference\nDESCRIPTION: Lists all available commands for managing Kamal accessories, including operations for booting, stopping, restarting, and managing accessory services.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/accessory.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal accessory\nCommands:\n  kamal accessory boot [NAME]        # Boot new accessory service on host (use NAME=all to boot all accessories)\n  kamal accessory details [NAME]     # Show details about accessory on host (use NAME=all to show all accessories)\n  kamal accessory exec [NAME] [CMD]  # Execute a custom command on servers (use --help to show options)\n  kamal accessory help [COMMAND]     # Describe subcommands or one specific subcommand\n  kamal accessory logs [NAME]        # Show log lines from accessory on host (use --help to show options)\n  kamal accessory reboot [NAME]      # Reboot existing accessory on host (stop container, remove container, start new container; use NAME=all to boot all accessories)\n  kamal accessory remove [NAME]      # Remove accessory container, image and data directory from host (use NAME=all to remove all accessories)\n  kamal accessory restart [NAME]     # Restart existing accessory container on host\n  kamal accessory start [NAME]       # Start existing accessory container on host\n  kamal accessory stop [NAME]        # Stop existing accessory container on host\n```\n\n----------------------------------------\n\nTITLE: Setting Up Deployment Servers in Kamal\nDESCRIPTION: Defines the servers to deploy to, with optional custom roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Using Remote Builder for Single-Arch in Kamal\nDESCRIPTION: Configuration for using a remote AMD64 host to natively build images when deploying from an ARM64 machine. This speeds up the build process compared to using QEMU emulation.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  arch: amd64\n  remote: ssh://root@192.168.0.1\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Kamal YAML Configuration\nDESCRIPTION: Defines environment variables directly in the Kamal configuration file. These variables are passed to the Docker run command during deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  DATABASE_HOST: mysql-db1\n  DATABASE_PORT: 3306\n```\n\n----------------------------------------\n\nTITLE: Build Secrets Usage - Dockerfile\nDESCRIPTION: Example of using build secrets in a Dockerfile for private repository access.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n# Copy Gemfiles\nCOPY Gemfile Gemfile.lock ./\n\n# Install dependencies, including private repositories via access token\n# Then remove bundle cache with exposed GITHUB_TOKEN)\nRUN --mount=type=secret,id=GITHUB_TOKEN \\\n  BUNDLE_GITHUB__COM=x-access-token:$(cat /run/secrets/GITHUB_TOKEN) \\\n  bundle install && \\\n  rm -rf /usr/local/bundle/cache\n```\n\n----------------------------------------\n\nTITLE: Configuring Healthcheck Interval in YAML\nDESCRIPTION: Specifies the time interval between consecutive health checks. Default is 1 second.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  interval: 10s\n```\n\n----------------------------------------\n\nTITLE: Configuring Cron Container in YAML for Kamal\nDESCRIPTION: This YAML configuration sets up a specific container for running Cron jobs. It specifies the server, host, and command to execute. The command reads the crontab file and starts the cron daemon in the foreground.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/cron.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  cron:\n    hosts:\n      - 192.168.0.1\n    cmd:\n      bash -c \"cat config/crontab | crontab - && cron -f\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Registry for Accessory in YAML\nDESCRIPTION: Illustrates how to set a specific Docker registry for an accessory using YAML anchors.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  <<: *specific-registry\n```\n\n----------------------------------------\n\nTITLE: Setting Up GitHub Actions for Kamal Cache\nDESCRIPTION: Configuration for GitHub Actions workflow to enable buildx and expose authentication for the GHA cache used by Kamal builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Set up Docker Buildx for cache\n  uses: docker/setup-buildx-action@v3\n\n- name: Expose GitHub Runtime for cache\n  uses: crazy-max/ghaction-github-runtime@v3\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag-based Environment Variables in Kamal\nDESCRIPTION: Demonstrates how to set environment variables for specific tagged hosts in Kamal. This allows for different environment configurations depending on server roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  tags:\n    <tag1>:\n      MYSQL_USER: monitoring\n    <tag2>:\n      clear:\n        MYSQL_USER: readonly\n      secret:\n        - MYSQL_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal CLI Commands and Options\nDESCRIPTION: Shows all available Kamal commands and global options. Includes commands for managing applications, accessories, environment files, deployments, and server configuration. Details various flags and options for customizing command execution.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/view-all-commands.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal --help\nCommands:\n  kamal accessory           # Manage accessories (db/redis/search)\n  kamal app                 # Manage application\n  kamal audit               # Show audit log from servers\n  kamal build               # Build application image\n  kamal config              # Show combined config (including secrets!)\n  kamal deploy              # Deploy app to servers\n  kamal details             # Show details about all containers\n  kamal env                 # Manage environment files\n  kamal envify              # Create .env by evaluating .env.erb (or .env.staging.erb -> .env.staging when using -d staging)\n  kamal help [COMMAND]      # Describe available commands or one specific command\n  kamal init                # Create config stub in config/deploy.yml and env stub in .env\n  kamal lock                # Manage the deploy lock\n  kamal prune               # Prune old application images and containers\n  kamal redeploy            # Deploy app to servers without bootstrapping servers, starting Traefik, pruning, and registry login\n  kamal registry            # Login and -out of the image registry\n  kamal remove              # Remove Traefik, app, accessories, and registry session from servers\n  kamal rollback [VERSION]  # Rollback app to VERSION\n  kamal server              # Bootstrap servers with curl and Docker\n  kamal setup               # Setup all accessories, push the env, and deploy app to servers\n  kamal traefik             # Manage Traefik load balancer\n  kamal version             # Show Kamal version\n\nOptions:\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Defining Base Logging Configuration in YAML\nDESCRIPTION: Sets up the base logging configuration structure in Kamal's configuration file. This can be specified at the root level or for specific roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/logging.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nlogging:\n```\n\n----------------------------------------\n\nTITLE: Build Secrets Configuration - YAML\nDESCRIPTION: Configures build secrets that are read from environment variables.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n  secrets:\n    - SECRET1\n    - SECRET2\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Healthcheck Attempts in YAML\nDESCRIPTION: Defines the maximum number of health check attempts before failing. Attempts are made with increasing intervals starting at 1 second.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  max_attempts: 3\n```\n\n----------------------------------------\n\nTITLE: Defining Accessory Hosts in YAML\nDESCRIPTION: Demonstrates different ways to specify hosts for an accessory: single host, multiple hosts, or by roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n    host: mysql-db1\n    hosts:\n      - mysql-db1\n      - mysql-db2\n    roles:\n      - mysql\n```\n\n----------------------------------------\n\nTITLE: Defining a Worker Healthcheck Anchor in YAML for Kamal Configuration\nDESCRIPTION: Creates a reusable healthcheck configuration block that can be referenced elsewhere in the Kamal deploy.yml file. The anchor is defined with 'x-' prefix and includes health command, start period, retries, and interval settings.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/anchors.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nx-worker-healthcheck: &worker-healthcheck\n  health-cmd: bin/worker-healthcheck\n  health-start-period: 5s\n  health-retries: 5\n  health-interval: 5s\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Setup Command\nDESCRIPTION: The 'kamal setup' command performs three main tasks: installing Docker on all servers if not already present, booting all accessories, and deploying the application using the 'kamal deploy' command.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/setup.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# kamal setup\n\nKamal setup will run everything required to deploy an application to a fresh host.\n\nIt will:\n\n1. Install Docker on all servers, if it has permission and it is not already installed.\n2. Boot all accessories.\n3. Deploy the app (see [`kamal deploy`](../deploy)).\n```\n\n----------------------------------------\n\nTITLE: Running Kamal 2 Upgrade Command\nDESCRIPTION: Command to perform an in-place upgrade from Kamal 1.9.x to Kamal 2, with an optional destination parameter.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal upgrade [-d <DESTINATION>]\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Logging Driver in YAML\nDESCRIPTION: Specifies the logging driver to be used by Docker, set via the --log-driver flag. Example shows configuration for json-file driver.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/logging.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  driver: json-file\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Secrets in Kamal\nDESCRIPTION: This YAML configuration demonstrates how to pass build secrets, such as a GitHub token, to the Kamal builder for use during image construction.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  secrets:\n    - GITHUB_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Setting Log Line Limit in YAML\nDESCRIPTION: Configures the number of log lines to display when healthcheck fails. Default is 50 lines.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  log_lines: 100\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS ECR Registry in YAML for Kamal\nDESCRIPTION: YAML configuration for using AWS ECR as the container registry in Kamal. It uses ERB to dynamically generate the ECR access token using the AWS CLI, which is required due to the 12-hour token expiration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/docker-registry.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: <your aws account id>.dkr.ecr.<your aws region id>.amazonaws.com\n  username: AWS\n  password: <%= %x(aws ecr get-login-password) %>\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from AWS Secrets Manager\nDESCRIPTION: Examples of fetching secrets from AWS Secrets Manager, including from specific items and multiple items.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch passwords\nkamal secrets fetch --adapter aws_secrets_manager --account default REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from an item\nkamal secrets fetch --adapter aws_secrets_manager --account default --from myapp/ REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from multiple items\nkamal secrets fetch --adapter aws_secrets_manager --account default myapp/REGISTRY_PASSWORD myapp/DB_PASSWORD\n\n# Extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract MyItem/REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Build Cloud in Kamal\nDESCRIPTION: Sets up Docker Build Cloud integration for remote building. Requires specifying the organization and builder name to use for cloud builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n  driver: cloud org-name/builder-name\n```\n\n----------------------------------------\n\nTITLE: Using Local Builder for Single-Arch in Kamal\nDESCRIPTION: Configuration for building images locally for a single architecture using a local buildx instance.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  arch: amd64\n```\n\n----------------------------------------\n\nTITLE: Request/Response Buffering Configuration - YAML\nDESCRIPTION: Controls proxy buffering behavior for requests and responses, including size limits and memory allocation.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  buffering:\n    requests: true\n    responses: true\n    max_request_body: 40_000_000\n    max_response_body: 0\n    memory: 2_000_000\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Proxy Command in Kamal (YAML)\nDESCRIPTION: YAML configuration to set a custom proxy command for SSH connections in Kamal, useful for older SSH versions.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nproxy_command: \"ssh -W %h:%p user@proxy\"\n```\n\n----------------------------------------\n\nTITLE: Adding Container Labels\nDESCRIPTION: Defines additional labels to be added to the Docker container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  my-label: my-value\n```\n\n----------------------------------------\n\nTITLE: Tagged Environment Variables Configuration\nDESCRIPTION: Example of using tags to add specific environment variables to different hosts. Shows both simple and complex configurations with clear and secret values.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/environment-variables.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  tags:\n    <tag1>:\n      MYSQL_USER: monitoring\n    <tag2>:\n      clear:\n        MYSQL_USER: readonly\n      secret:\n        - MYSQL_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from Doppler\nDESCRIPTION: Examples of fetching secrets from Doppler, including from specific projects and configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch passwords\nkamal secrets fetch --adapter doppler --from my-project/prd REGISTRY_PASSWORD DB_PASSWORD\n\n# The project/config pattern is also supported in this way\nkamal secrets fetch --adapter doppler my-project/prd/REGISTRY_PASSWORD my-project/prd/DB_PASSWORD\n\n# Extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract DB_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Referencing Build Arguments in Dockerfile\nDESCRIPTION: Shows how to use build arguments defined in the Kamal configuration within a Dockerfile. Arguments are accessed with $ syntax after being defined with ARG.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION-slim as base\n```\n\n----------------------------------------\n\nTITLE: Healthcheck Configuration - YAML\nDESCRIPTION: Configures health check behavior including interval, path, and timeout settings.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  healthcheck:\n    interval: 3\n    path: /health\n    timeout: 3\n```\n\n----------------------------------------\n\nTITLE: Server Tagging Configuration in YAML\nDESCRIPTION: Demonstrates how to tag servers for custom environment variables. Servers can have single tags or multiple tags in an array format.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/servers.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  - 172.0.0.1\n  - 172.0.0.2: experiments\n  - 172.0.0.3: [ experiments, three ]\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Run Options for Accessory in YAML\nDESCRIPTION: Illustrates how to set additional Docker run options for an accessory, such as restart policy and CPU limits.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n    options:\n      restart: always\n      cpus: 2\n```\n\n----------------------------------------\n\nTITLE: Setting SSH Log Level in Kamal (YAML)\nDESCRIPTION: YAML configuration to set the SSH log level in Kamal. Useful for debugging SSH connection issues.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nlog_level: debug\n```\n\n----------------------------------------\n\nTITLE: Setting Container Stop Wait Time\nDESCRIPTION: Defines how long to wait for a container to stop before killing it, in seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nstop_wait_time: 60\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Build Push Command\nDESCRIPTION: This snippet demonstrates the execution of the 'kamal build push' command, which builds the app image, pushes it to the registry, and displays detailed output of the process including Docker build steps and layer pushing.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/build.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal build push\nRunning the pre-connect hook...\n  INFO [92ebc200] Running /usr/bin/env .kamal/hooks/pre-connect on localhost\n  INFO [92ebc200] Finished in 0.004 seconds with exit status 0 (successful).\n  INFO [cbbad07e] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [e6ac30e7] Running /usr/bin/env mkdir -p .kamal on server3\n  INFO [a1adae3a] Running /usr/bin/env mkdir -p .kamal on server2\n  INFO [cbbad07e] Finished in 0.145 seconds with exit status 0 (successful).\n  INFO [a1adae3a] Finished in 0.179 seconds with exit status 0 (successful).\n  INFO [e6ac30e7] Finished in 0.182 seconds with exit status 0 (successful).\n  INFO [c6242009] Running /usr/bin/env mkdir -p .kamal/locks on server1\n  INFO [c6242009] Finished in 0.009 seconds with exit status 0 (successful).\nAcquiring the deploy lock...\n  INFO [427ae9bc] Running docker --version on localhost\n  INFO [427ae9bc] Finished in 0.039 seconds with exit status 0 (successful).\nRunning the pre-build hook...\n  INFO [2f120630] Running /usr/bin/env .kamal/hooks/pre-build on localhost\n  INFO [2f120630] Finished in 0.004 seconds with exit status 0 (successful).\n  INFO [ad386911] Running /usr/bin/env git archive --format=tar HEAD | docker build -t registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac -t registry:4443/app:latest --label service=\"app\" --build-arg [REDACTED] --file Dockerfile - && docker push registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac && docker push registry:4443/app:latest on localhost\n DEBUG [ad386911] Command: /usr/bin/env git archive --format=tar HEAD | docker build -t registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac -t registry:4443/app:latest --label service=\"app\" --build-arg [REDACTED] --file Dockerfile - && docker push registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac && docker push registry:4443/app:latest\n DEBUG [ad386911] \t#0 building with \"default\" instance using docker driver\n DEBUG [ad386911]\n DEBUG [ad386911] \t#1 [internal] load remote build context\n DEBUG [ad386911] \t#1 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#2 copy /context /\n DEBUG [ad386911] \t#2 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#3 [internal] load metadata for registry:4443/nginx:1-alpine-slim\n DEBUG [ad386911] \t#3 DONE 0.0s\n DEBUG [ad386911]\n DEBUG [ad386911] \t#4 [1/5] FROM registry:4443/nginx:1-alpine-slim@sha256:558cdef0693faaa02c0b81c21b5d6f4b4fe24e3ac747581f3e6e8f5c4032db58\n DEBUG [ad386911] \t#4 DONE 0.0s\n DEBUG [ad386911]\n DEBUG [ad386911] \t#5 [4/5] RUN mkdir -p /usr/share/nginx/html/versions && echo \"version\" > /usr/share/nginx/html/versions/75bf6fa40b975cbd8aec05abf7164e0982f185ac\n DEBUG [ad386911] \t#5 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#6 [2/5] COPY default.conf /etc/nginx/conf.d/default.conf\n DEBUG [ad386911] \t#6 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#7 [3/5] RUN echo 75bf6fa40b975cbd8aec05abf7164e0982f185ac > /usr/share/nginx/html/version\n DEBUG [ad386911] \t#7 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#8 [5/5] RUN mkdir -p /usr/share/nginx/html/versions && echo \"hidden\" > /usr/share/nginx/html/versions/.hidden\n DEBUG [ad386911] \t#8 CACHED\n DEBUG [ad386911]\n DEBUG [ad386911] \t#9 exporting to image\n DEBUG [ad386911] \t#9 exporting layers done\n DEBUG [ad386911] \t#9 writing image sha256:ed9205d697e5f9f735e84e341a19a3d379b9b4a8dc5d04b6219bda29e6126489 done\n DEBUG [ad386911] \t#9 naming to registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac done\n DEBUG [ad386911] \t#9 naming to registry:4443/app:latest done\n DEBUG [ad386911] \t#9 DONE 0.0s\n DEBUG [ad386911] \tThe push refers to repository [registry:4443/app]\n DEBUG [ad386911] \t7e49189613ab: Preparing\n DEBUG [ad386911] \t054c18a8e0a6: Preparing\n DEBUG [ad386911] \t1552c04abfaa: Preparing\n DEBUG [ad386911] \t36f2f66132ea: Preparing\n DEBUG [ad386911] \td5e2fb5f3301: Preparing\n DEBUG [ad386911] \t8fde05710e93: Preparing\n DEBUG [ad386911] \tfdf572380e92: Preparing\n DEBUG [ad386911] \ta031a04401d0: Preparing\n DEBUG [ad386911] \tecb78d985cad: Preparing\n DEBUG [ad386911] \t3e0e830ccd77: Preparing\n DEBUG [ad386911] \t7c504f21be85: Preparing\n DEBUG [ad386911] \tfdf572380e92: Waiting\n DEBUG [ad386911] \ta031a04401d0: Waiting\n DEBUG [ad386911] \tecb78d985cad: Waiting\n DEBUG [ad386911] \t3e0e830ccd77: Waiting\n DEBUG [ad386911] \t7c504f21be85: Waiting\n DEBUG [ad386911] \t8fde05710e93: Waiting\n DEBUG [ad386911] \t054c18a8e0a6: Layer already exists\n DEBUG [ad386911] \t7e49189613ab: Layer already exists\n DEBUG [ad386911] \t36f2f66132ea: Layer already exists\n DEBUG [ad386911] \td5e2fb5f3301: Layer already exists\n DEBUG [ad386911] \t1552c04abfaa: Layer already exists\n DEBUG [ad386911] \t8fde05710e93: Layer already exists\n DEBUG [ad386911] \tfdf572380e92: Layer already exists\n DEBUG [ad386911] \ta031a04401d0: Layer already exists\n DEBUG [ad386911] \t3e0e830ccd77: Layer already exists\n DEBUG [ad386911] \tecb78d985cad: Layer already exists\n DEBUG [ad386911] \t7c504f21be85: Layer already exists\n DEBUG [ad386911] \t75bf6fa40b975cbd8aec05abf7164e0982f185ac: digest: sha256:68e534dab98fc7c65c8e2353f6414e9c6c812481deea8d57ae6b0b0140ec40d5 size: 2604\n DEBUG [ad386911] \tThe push refers to repository [registry:4443/app]\n DEBUG [ad386911] \t7e49189613ab: Preparing\n DEBUG [ad386911] \t054c18a8e0a6: Preparing\n DEBUG [ad386911] \t1552c04abfaa: Preparing\n DEBUG [ad386911] \t36f2f66132ea: Preparing\n DEBUG [ad386911] \td5e2fb5f3301: Preparing\n DEBUG [ad386911] \t8fde05710e93: Preparing\n DEBUG [ad386911] \tfdf572380e92: Preparing\n DEBUG [ad386911] \ta031a04401d0: Preparing\n DEBUG [ad386911] \tecb78d985cad: Preparing\n DEBUG [ad386911] \t3e0e830ccd77: Preparing\n DEBUG [ad386911] \t7c504f21be85: Preparing\n DEBUG [ad386911] \tfdf572380e92: Waiting\n DEBUG [ad386911] \ta031a04401d0: Waiting\n DEBUG [ad386911] \tecb78d985cad: Waiting\n DEBUG [ad386911] \t3e0e830ccd77: Waiting\n DEBUG [ad386911] \t7c504f21be85: Waiting\n DEBUG [ad386911] \t8fde05710e93: Waiting\n DEBUG [ad386911] \t36f2f66132ea: Layer already exists\n DEBUG [ad386911] \t7e49189613ab: Layer already exists\n DEBUG [ad386911] \t054c18a8e0a6: Layer already exists\n DEBUG [ad386911] \t1552c04abfaa: Layer already exists\n DEBUG [ad386911] \td5e2fb5f3301: Layer already exists\n DEBUG [ad386911] \t8fde05710e93: Layer already exists\n DEBUG [ad386911] \tfdf572380e92: Layer already exists\n DEBUG [ad386911] \ta031a04401d0: Layer already exists\n DEBUG [ad386911] \tecb78d985cad: Layer already exists\n DEBUG [ad386911] \t3e0e830ccd77: Layer already exists\n DEBUG [ad386911] \t7c504f21be85: Layer already exists\n DEBUG [ad386911] \tlatest: digest: sha256:68e534dab98fc7c65c8e2353f6414e9c6c812481deea8d57ae6b0b0140ec40d5 size: 2604\n  INFO [ad386911] Finished in 0.502 seconds with exit status 0 (successful).\nReleasing the deploy lock...\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from Bitwarden\nDESCRIPTION: Examples of fetching secrets from Bitwarden, including from specific items and multiple items.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch passwords\nkamal secrets fetch --adapter bitwarden --account email@example.com REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from an item\nkamal secrets fetch --adapter bitwarden --account email@example.com --from MyItem REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from multiple items\nkamal secrets fetch --adapter bitwarden --account email@example.com MyItem/REGISTRY_PASSWORD MyItem2/DB_PASSWORD\n\n# Extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract MyItem/REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Setting Target Architectures in Kamal\nDESCRIPTION: Specifies which CPU architectures to build Docker images for. Supports both amd64 and arm64 architectures, and can be configured as a single value or an array.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  arch:\n    - amd64\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Path for Bridging Deployments\nDESCRIPTION: Sets up asset bridging across deployments to avoid 404s during deployments by specifying a path that will be replaced with a mapped volume.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nasset_path: /path/to/assets\n```\n\n----------------------------------------\n\nTITLE: Configuring Port Mappings for Accessory in YAML\nDESCRIPTION: Demonstrates how to set up port mappings for an accessory, including host IP binding.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n    port: \"127.0.0.1:3306:3306\"\n```\n\n----------------------------------------\n\nTITLE: Setting Healthcheck Command in YAML\nDESCRIPTION: Defines the command to be executed for health checking. Default command uses curl to verify HTTP endpoint accessibility.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  cmd: \"curl -f http://localhost\"\n```\n\n----------------------------------------\n\nTITLE: Setting Additional Traefik Arguments in YAML\nDESCRIPTION: This configuration block specifies additional arguments to be passed to the Traefik container. It includes settings for entrypoints, forwarded headers, and access logging.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  args:\n    entryPoints.http.address: \":80\"\n    entryPoints.http.forwardedHeaders.insecure: true\n    accesslog: true\n    accesslog.format: json\n```\n\n----------------------------------------\n\nTITLE: Remote Build Configuration - YAML\nDESCRIPTION: Defines remote build settings with architecture and SSH connection details.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  remote:\n    arch: arm64\n    host: ssh://docker@docker-builder\n```\n\n----------------------------------------\n\nTITLE: Fetching Secrets from LastPass\nDESCRIPTION: Examples of fetching secrets from LastPass, including from specific folders and multiple folders.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/secrets.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Fetch passwords\nkamal secrets fetch --adapter lastpass --account email@example.com REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from a folder\nkamal secrets fetch --adapter lastpass --account email@example.com --from MyFolder REGISTRY_PASSWORD DB_PASSWORD\n\n# Fetch passwords from multiple folders\nkamal secrets fetch --adapter lastpass --account email@example.com MyFolder/REGISTRY_PASSWORD MyFolder2/DB_PASSWORD\n\n# Extract the secret\nkamal secrets extract REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\nkamal secrets extract MyFolder/REGISTRY_PASSWORD <SECRETS-FETCH-OUTPUT>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Kamal Secrets in YAML\nDESCRIPTION: Example of a .kamal/secrets file used to set environment variables for Kamal. It shows how to set the registry password and Rails master key for deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/index.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nKAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD\nRAILS_MASTER_KEY=$(cat config/master.key)\n```\n\n----------------------------------------\n\nTITLE: Setting SSH Log Level in Kamal\nDESCRIPTION: This YAML snippet demonstrates how to set the SSH log level in Kamal, which defaults to 'fatal' but can be set to 'debug' for troubleshooting connection issues.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  log_level: debug\n```\n\n----------------------------------------\n\nTITLE: Role-Based Server Configuration in YAML\nDESCRIPTION: Example of role-based server configuration for complex deployments, showing web and workers roles structure.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/servers.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  web:\n    ...\n  workers:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Healthcheck Port in YAML\nDESCRIPTION: Specifies the port number to use for health checking. Default port is 3000.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  port: \"80\"\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Traefik in YAML\nDESCRIPTION: This configuration block is a placeholder for setting environment variables for the Traefik container. Specific variables would be defined based on the deployment requirements.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  env:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Dockerfile Path Configuration - YAML\nDESCRIPTION: Sets custom Dockerfile path instead of default 'Dockerfile'.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  dockerfile: Dockerfile.production\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Artifact Registry in Kamal\nDESCRIPTION: YAML configuration for GCP Artifact Registry that uses a base64-encoded service account key for authentication. This setup requires the KAMAL_REGISTRY_PASSWORD environment variable to be set with the encoded key value.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/docker-registry.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  server: <your registry region>-docker.pkg.dev\n  username: _json_key_base64\n  password:\n    - KAMAL_REGISTRY_PASSWORD\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Args in Kamal\nDESCRIPTION: Example of how to configure non-secret build arguments in Kamal's deployment configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  args:\n    RUBY_VERSION: 3.2.0\n```\n\n----------------------------------------\n\nTITLE: Kamal Proxy Boot Configuration Commands\nDESCRIPTION: Details the boot configuration commands and options for kamal-proxy, including port publishing, log size limits, and Docker container options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/proxy.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal proxy boot_config\nCommands:\n  kamal proxy boot_config set [OPTIONS]\n  kamal proxy boot_config get\n  kamal proxy boot_config reset\n\nOptions for 'set':\n      [--publish], [--no-publish], [--skip-publish]   # Publish the proxy ports on the host\n                                                      # Default: true\n      [--http-port=N]                                 # HTTP port to publish on the host\n                                                      # Default: 80\n      [--https-port=N]                                # HTTPS port to publish on the host\n                                                      # Default: 443\n      [--log-max-size=LOG_MAX_SIZE]                   # Max size of proxy logs\n                                                      # Default: 10m\n      [--docker-options=option=value option2=value2]  # Docker options to pass to the proxy container\n```\n\n----------------------------------------\n\nTITLE: Basic YAML Server Configuration Structure\nDESCRIPTION: Shows the basic structure for defining servers in Kamal configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/roles.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n```\n\n----------------------------------------\n\nTITLE: Disabling Traefik Publishing in YAML\nDESCRIPTION: This configuration option allows for disabling the publishing of the Traefik container. When set to false, the Traefik container will not be exposed on the host network.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  publish: false\n```\n\n----------------------------------------\n\nTITLE: Build Target Configuration - YAML\nDESCRIPTION: Specifies the build target stage in multi-stage Dockerfiles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n  target: production\n```\n\n----------------------------------------\n\nTITLE: Setting Up GitHub Actions for Kamal Build Cache\nDESCRIPTION: This YAML configuration shows how to set up Docker Buildx and expose GitHub Runtime for cache in a GitHub Actions workflow, enabling the use of GHA cache in Kamal builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- name: Set up Docker Buildx for cache\n  uses: docker/setup-buildx-action@v3\n\n- name: Expose GitHub Runtime for cache\n  uses: crazy-max/ghaction-github-runtime@v3\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Secrets in Kamal\nDESCRIPTION: Defines secrets that will be available during the build process. Secrets are read from .kamal/secrets and can be accessed securely during the build.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n  secrets:\n    - SECRET1\n    - SECRET2\n```\n\n----------------------------------------\n\nTITLE: Validating Registry Configuration in Kamal\nDESCRIPTION: Shell command to validate registry configuration by attempting to log in to the configured registry. This helps verify that credentials and settings are correctly configured before deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/docker-registry.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkamal registry login\n```\n\n----------------------------------------\n\nTITLE: Installing Kamal via Ruby Gem\nDESCRIPTION: Command to install Kamal globally using Ruby's package manager, gem. This requires a Ruby environment to be available on the system.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/index.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngem install kamal\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional Volumes for Accessory in YAML\nDESCRIPTION: This snippet illustrates how to specify additional volumes to be mounted in the accessory container, without creating or copying them beforehand.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n    volumes:\n      - /path/to/mysql-logs:/var/log/mysql\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Image for Accessory in YAML\nDESCRIPTION: Shows how to specify the Docker image to use for an accessory, including version tag.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n    image: mysql:8.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Accessory in YAML\nDESCRIPTION: This snippet shows the structure for setting environment variables for an accessory, which will be passed to the container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n    env:\n      ...\n```\n\n----------------------------------------\n\nTITLE: Setting Max Concurrent SSH Connections in YAML\nDESCRIPTION: Configures the maximum number of concurrent SSH connection starts. This is useful when deploying to a large number of servers to prevent connection issues. The default is 30, but this example sets it to 10.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/sshkit.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  max_concurrent_starts: 10\n```\n\n----------------------------------------\n\nTITLE: Generating Environment Variables with Bitwarden Integration in ERB\nDESCRIPTION: Template for generating .env file using Bitwarden CLI to retrieve secrets. The template authenticates with Bitwarden and fetches secrets using the session token and note IDs.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/envify.md#2025-04-23_snippet_1\n\nLANGUAGE: erb\nCODE:\n```\n<% if (session_token=`bw unlock --raw`.strip) != \"\" %># Generated by kamal envify\nSOME_SECRET=<%= `bw get notes 123123123-1232-4224-222f-234234234234 --session #{session_token}` %>\n<% else raise ArgumentError, \"session_token token missing\" end %>\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH for Docker Builds in Kamal\nDESCRIPTION: Sets up SSH agent socket or keys to expose to the Docker build process. Useful for accessing private repositories or resources during build.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n  ssh: default=$SSH_AUTH_SOCK\n```\n\n----------------------------------------\n\nTITLE: Mounting Volumes in Kamal\nDESCRIPTION: Configures additional volumes to mount into the container, including read-only options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n  - /path/on/host:/path/in/container:ro\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Prune Commands in Bash\nDESCRIPTION: This snippet shows the usage of the 'kamal prune' command and its subcommands. It includes options for pruning all unused resources, containers, images, and accessing help for specific subcommands.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/prune.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal help prune\nCommands:\n  kamal prune all             # Prune unused images and stopped containers\n  kamal prune containers      # Prune all stopped containers, except the last n (default 5)\n  kamal prune help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal prune images          # Prune unused images\n```\n\n----------------------------------------\n\nTITLE: Setting SSH User in Kamal Configuration\nDESCRIPTION: This YAML snippet demonstrates how to set a custom SSH user (defaulting to 'root') in the Kamal configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  user: app\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Image for Accessory in YAML\nDESCRIPTION: This snippet shows how to specify the Docker image to use for an accessory, including the option to use a specific registry.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n    image: mysql:8.0\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Kamal Version\nDESCRIPTION: Defines the minimum version of Kamal required to deploy this configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nminimum_version: 1.3.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Run Options for Traefik in YAML\nDESCRIPTION: This configuration sets additional options for the Docker run command when starting the Traefik container. In this example, it limits the CPU usage of the container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  options:\n    cpus: 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Cron Server in YAML for Kamal\nDESCRIPTION: This YAML configuration sets up a specific container for running Cron jobs. It defines the server, host, and command to execute. The command loads environment variables and the crontab file, then starts the cron daemon.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/cron.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  cron:\n    hosts:\n      - 192.168.0.1\n    cmd:\n      bash -c \"(env && cat config/crontab) | crontab - && cron -f\"\n```\n\n----------------------------------------\n\nTITLE: Copying Files to Accessory Container in YAML\nDESCRIPTION: Demonstrates how to specify files to be copied from the local machine to the accessory container, including ERB template support.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n    files:\n      - config/my.cnf.erb:/etc/mysql/my.cnf\n      - config/myoptions.cnf:/etc/mysql/myoptions.cnf\n```\n\n----------------------------------------\n\nTITLE: Setting Max Concurrent Starts for SSHKit in YAML\nDESCRIPTION: Configures the maximum number of concurrent SSH connection starts. This is useful when deploying to a large number of servers to prevent connection issues.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/sshkit.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  max_concurrent_starts: 10\n```\n\n----------------------------------------\n\nTITLE: Setting SSH User in Kamal Configuration (YAML)\nDESCRIPTION: YAML configuration to set the SSH user for Kamal. This overrides the default 'root' user.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nuser: app\n```\n\n----------------------------------------\n\nTITLE: Configuring Accessory Hosts in YAML\nDESCRIPTION: This snippet illustrates different ways to specify hosts for an accessory, including single host, multiple hosts, or roles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n    host: mysql-db1\n    hosts:\n      - mysql-db1\n      - mysql-db2\n    roles:\n      - mysql\n```\n\n----------------------------------------\n\nTITLE: Providing Raw SSH Private Key Data in Kamal\nDESCRIPTION: This YAML snippet shows how to include raw private key data in PEM format directly in the Kamal configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  key_data: [ \"-----BEGIN OPENSSH PRIVATE KEY-----\" ]\n```\n\n----------------------------------------\n\nTITLE: Local Build Configuration - YAML\nDESCRIPTION: Specifies architecture and Docker socket for local builds when multiarch is enabled.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  local:\n    arch: amd64\n    host: /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Setting Deploy Timeout in Kamal\nDESCRIPTION: Configures how long to wait for a container to become ready, with a default of 30 seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\ndeploy_timeout: 10\n```\n\n----------------------------------------\n\nTITLE: Referencing a YAML Anchor in Kamal Server Configuration\nDESCRIPTION: Demonstrates how to use a previously defined anchor in a server configuration block. This example applies the worker healthcheck configuration to a worker server using the YAML merge key (<<:) and the anchor reference (*worker-healthcheck).\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/anchors.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  worker:\n    hosts:\n      - 867.53.0.9\n    cmd: bin/jobs\n    options:\n      <<: *worker-healthcheck\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Accessory Structure in YAML\nDESCRIPTION: Shows the basic structure for defining an accessory named 'mysql' in the Kamal configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\naccessories:\n  mysql:\n```\n\n----------------------------------------\n\nTITLE: Validating Registry Configuration in Kamal\nDESCRIPTION: Shell command to validate the registry configuration in Kamal by attempting to log in to the configured registry.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/docker-registry.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkamal registry login\n```\n\n----------------------------------------\n\nTITLE: Setting SSH Proxy Host in Kamal\nDESCRIPTION: This YAML snippet demonstrates how to configure a proxy host for SSH connections in Kamal, using the format <host> or <user>@<host>.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  proxy: root@proxy-host\n```\n\n----------------------------------------\n\nTITLE: Multiarch Build Configuration - YAML\nDESCRIPTION: Disables multiarch build support which is enabled by default.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  multiarch: false\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Logging Options in YAML\nDESCRIPTION: Defines specific options for the logging driver, passed to Docker via --log-opt. Example shows setting maximum log file size to 100MB.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/logging.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  options:\n    max-size: 100m\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Keys Only Option in Kamal (YAML)\nDESCRIPTION: YAML configuration to use only specified private keys for SSH authentication in Kamal, ignoring ssh-agent identities.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkeys_only: false\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Run Directory in Kamal\nDESCRIPTION: Configures a directory to store Kamal runtime files on the host, defaulting to '.kamal'.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nrun_directory: /etc/kamal\n```\n\n----------------------------------------\n\nTITLE: Encoding GCP Service Account Key for Artifact Registry\nDESCRIPTION: Shell command to base64 encode a GCP service account JSON key file for use with Artifact Registry authentication. The command removes newlines to ensure proper formatting of the encoded credential.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/docker-registry.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbase64 -i /path/to/key.json | tr -d \"\\\\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Keys-Only Authentication in Kamal\nDESCRIPTION: This YAML snippet shows how to enable keys-only authentication in Kamal, which forces the use of only specified private keys even if ssh-agent offers more identities.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  keys_only: false\n```\n\n----------------------------------------\n\nTITLE: Setting SSH Proxy Host in Kamal (YAML)\nDESCRIPTION: YAML configuration to specify a proxy host for SSH connections in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/ssh.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nproxy: root@proxy-host\n```\n\n----------------------------------------\n\nTITLE: Disabling Multi-Arch Builds in Kamal\nDESCRIPTION: This YAML configuration disables multi-arch builds, which can speed up the build process when developing and deploying on the same architecture or when using a CI server with matching architecture.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  multiarch: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Builder Architecture in Kamal\nDESCRIPTION: Demonstrates how to specify single and multi-architecture builds in Kamal's builder configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# single arch\nbuilder:\n  arch: amd64\n\n# multi arch\nbuilder:\n  arch:\n    - amd64\n    - arm64\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Logging Options in YAML\nDESCRIPTION: Defines specific options for the selected logging driver. This example sets the maximum log file size to 100 megabytes using the max-size parameter.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/logging.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  options:\n    max-size: 100m\n```\n\n----------------------------------------\n\nTITLE: Setting Up Proxy in Kamal\nDESCRIPTION: Placeholder for kamal-proxy configuration, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nproxy:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Alias for Rails Console\nDESCRIPTION: This shell command demonstrates how to use the previously defined 'console' alias in Kamal. It provides a shorter way to execute the Rails console command.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/aliases.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkamal console\n```\n\n----------------------------------------\n\nTITLE: Configuring Pool Idle Timeout for SSHKit in YAML\nDESCRIPTION: Sets the idle timeout for SSH connections in the pool. This helps avoid reconnection storms after periods of inactivity, such as during image building or CI waiting.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/sshkit.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  pool_idle_timeout: 300\n```\n\n----------------------------------------\n\nTITLE: Setting Builder Options in Kamal\nDESCRIPTION: Placeholder for builder configuration, which is detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Builder for Single-Arch Builds in Kamal\nDESCRIPTION: This YAML configuration sets up a local builder for AMD64 architecture without specifying a host, allowing Kamal to build the image using a local buildx instance for specific architecture deployments.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  remote:\n    arch: amd64\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy App Port\nDESCRIPTION: Sets the application port for the kamal-proxy service.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nproxy:\n  app_port: 3000\n```\n\n----------------------------------------\n\nTITLE: Configuring Port Mappings for Accessory in YAML\nDESCRIPTION: This snippet demonstrates how to set up port mappings for an accessory, specifying the host and container ports.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n    port: \"127.0.0.1:3306:3306\"\n```\n\n----------------------------------------\n\nTITLE: Logging Configuration - YAML\nDESCRIPTION: Specifies which request and response headers should be logged by the proxy.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n  logging:\n    request_headers:\n      - Cache-Control\n      - X-Forwarded-Proto\n    response_headers:\n      - X-Request-ID\n      - X-Request-Start\n```\n\n----------------------------------------\n\nTITLE: Enabling SBOM Generation in Kamal\nDESCRIPTION: Configures Software Bill of Materials (SBOM) generation for Docker builds. Can be set to a boolean value to enable/disable or to specific configuration options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n  sbom: true\n```\n\n----------------------------------------\n\nTITLE: Executing commands on primary server with Kamal\nDESCRIPTION: Runs a command to display the Ruby version from a file, but only on the primary server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec --primary 'cat .ruby-version'\nApp Host: 192.168.0.1\n3.1.3\n```\n\n----------------------------------------\n\nTITLE: Specifying Traefik Docker Image in YAML\nDESCRIPTION: This configuration sets the Traefik Docker image to be used. It allows for version control of the Traefik instance running in the deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  image: traefik:v2.9\n```\n\n----------------------------------------\n\nTITLE: Specifying Minimum Kamal Version\nDESCRIPTION: Sets the minimum version of Kamal required to deploy this configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nminimum_version: 1.3.0\n```\n\n----------------------------------------\n\nTITLE: Simple Role Configuration with Host Tags\nDESCRIPTION: Shows how to configure simple server roles with IP addresses and optional tags for custom environment variables.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/roles.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  web:\n    - 172.1.0.1\n    - 172.1.0.2: experiment1\n    - 172.1.0.2: [ experiment1, experiment2 ]\n```\n\n----------------------------------------\n\nTITLE: Kamal 1 Environment Variable Configuration\nDESCRIPTION: Legacy example showing how environment variables were referenced in deploy.yml using Kamal 1.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/secrets-changes.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# .env\nSERVER_IP=127.0.0.1\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# config/deploy.yml\nservers\n  - <%= ENV[\"SERVER_IP\"] %>\n```\n\n----------------------------------------\n\nTITLE: Setting Remote Builder Configuration\nDESCRIPTION: Shows how to configure remote builders in Kamal with optional local build disabling.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  arch: amd64\n  remote: ssh://docker@docker-builder\n```\n\n----------------------------------------\n\nTITLE: Tagged Server Configuration in YAML\nDESCRIPTION: Configuration showing how to tag servers for custom environment variables. Demonstrates both single tag and multiple tag syntax.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/servers.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  - 172.0.0.1\n  - 172.0.0.2: experiments\n  - 172.0.0.3: [ experiments, three ]\n```\n\n----------------------------------------\n\nTITLE: Defining Additional Volumes for Accessory in YAML\nDESCRIPTION: Illustrates how to specify additional volumes to be mounted in the accessory container without prior creation or copying.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n    volumes:\n      - /path/to/mysql-logs:/var/log/mysql\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Readiness Delay\nDESCRIPTION: Sets how many seconds to wait for a container to boot after it is running, defaulting to 7 seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nreadiness_delay: 4\n```\n\n----------------------------------------\n\nTITLE: Setting Container Retention in Kamal\nDESCRIPTION: Configures how many old containers and images are retained after deployments, with a default of 5.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nretain_containers: 3\n```\n\n----------------------------------------\n\nTITLE: Defining Primary Role\nDESCRIPTION: Sets the primary role for the deployment, defaults to web if not specified.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nprimary_role: workers\n```\n\n----------------------------------------\n\nTITLE: Kamal 2 Environment Variable Configuration\nDESCRIPTION: Updated example showing how to manually load .env file and use environment variables in deploy.yml using Kamal 2.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/secrets-changes.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# .env\nSERVER_IP=127.0.0.1\n```\n\nLANGUAGE: yaml\nCODE:\n```\n# config/deploy.yml\n\n<% require \"dotenv\"; Dotenv.load(\".env\") %>\n\nservers\n  - <%= ENV[\"SERVER_IP\"] %>\n```\n\n----------------------------------------\n\nTITLE: Copying Files to Accessory Container in YAML\nDESCRIPTION: This snippet demonstrates how to specify files to be copied from the local machine to the accessory container, including support for ERB templates.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n    files:\n      - config/my.cnf.erb:/etc/mysql/my.cnf\n      - config/myoptions.cnf:/etc/mysql/myoptions.cnf\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom SSH Proxy Command in Kamal\nDESCRIPTION: This YAML snippet shows how to set a custom proxy command for SSH connections in Kamal, which is useful for older SSH versions.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  proxy_command: \"ssh -W %h:%p user@proxy\"\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Command for Accessory in YAML\nDESCRIPTION: Shows how to set a custom command to run in the accessory container instead of the default.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n    cmd: \"bin/mysqld\"\n```\n\n----------------------------------------\n\nTITLE: Host Configuration - YAML\nDESCRIPTION: Configuration for specifying which hosts the proxy will route to the application. Supports single host or multiple hosts format.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  host: foo.example.com\n  hosts:\n    - foo.example.com\n    - bar.example.com\n```\n\n----------------------------------------\n\nTITLE: Allowing Empty Roles in Kamal\nDESCRIPTION: Configures whether roles with no servers are allowed, which defaults to false.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nallow_empty_roles: false\n```\n\n----------------------------------------\n\nTITLE: Setting Destination Requirement\nDESCRIPTION: Configures whether deployments require a destination to be specified, defaults to false.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nrequire_destination: true\n```\n\n----------------------------------------\n\nTITLE: Executing Ruby Version File Check on Primary Server with Kamal\nDESCRIPTION: This command runs 'cat .ruby-version' only on the primary server managed by Kamal. It fetches and displays the contents of the .ruby-version file which specifies the Ruby version required for the application.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec --primary 'cat .ruby-version'\nApp Host: 192.168.0.1\n3.1.3\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Logging Driver in YAML\nDESCRIPTION: Specifies the logging driver to be used by Docker containers. This example shows setting the json-file driver, which is passed to Docker using the --log-driver flag.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/logging.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  driver: json-file\n```\n\n----------------------------------------\n\nTITLE: Configuring Kamal Docker Alias for Linux\nDESCRIPTION: Sets up a shell alias that allows running Kamal through Docker on Linux, mounting the current working directory and forwarding SSH authentication.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/installation/dockerized.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nalias kamal='docker run -it --rm -v \"${PWD}:/workdir\" -v \"${SSH_AUTH_SOCK}:/ssh-agent\" -v /var/run/docker.sock:/var/run/docker.sock -e \"SSH_AUTH_SOCK=/ssh-agent\" ghcr.io/basecamp/kamal:latest'\n```\n\n----------------------------------------\n\nTITLE: Configuring Drain Timeout in Kamal\nDESCRIPTION: Sets how long to wait for a container to drain, with a default of 30 seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\ndrain_timeout: 10\n```\n\n----------------------------------------\n\nTITLE: Enabling Provenance Attestations in Kamal\nDESCRIPTION: Configures provenance attestations for Docker builds. Can be set to a boolean value or to specific configuration options like mode=max.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n  provenance: mode=max\n```\n\n----------------------------------------\n\nTITLE: Setting Primary Role in Kamal\nDESCRIPTION: Changes the primary deployment role from the default 'web' to another role.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nprimary_role: workers\n```\n\n----------------------------------------\n\nTITLE: Configuring Percentage-Based Boot Strategy in Kamal\nDESCRIPTION: Configuration for booting containers on a percentage of hosts simultaneously. This example boots 25% of hosts at a time with a 2 second delay between groups.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/booting.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nboot:\n  limit: 25%\n  wait: 2\n```\n\n----------------------------------------\n\nTITLE: Running Rails Runner Command on Primary Server with Kamal\nDESCRIPTION: This command executes a Rails runner script on the primary server to display the application's configured time zone. It uses the shorthand '-p' flag to specify the primary server and demonstrates how to run Ruby code within the Rails environment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec -p 'bin/rails runner \"puts Rails.application.config.time_zone\"'\nUTC\n```\n\n----------------------------------------\n\nTITLE: Build Context Configuration - YAML\nDESCRIPTION: Specifies the build context directory for Docker builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  context: .\n```\n\n----------------------------------------\n\nTITLE: Running Rails runner on primary server with Kamal\nDESCRIPTION: Executes a Rails runner command on the primary server to display the application's configured time zone.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec -p 'bin/rails runner \"puts Rails.application.config.time_zone\"'\nUTC\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Port in Kamal\nDESCRIPTION: This YAML snippet shows how to set a custom SSH port (defaulting to 22) in the Kamal configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/ssh.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  port: \"2222\"\n```\n\n----------------------------------------\n\nTITLE: Initializing SSHKit Configuration in YAML\nDESCRIPTION: Defines the top-level SSHKit configuration block in the Kamal configuration file. This is where all SSHKit-related options are specified.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/sshkit.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsshkit:\n```\n\n----------------------------------------\n\nTITLE: Setting Asset Path for Bridging\nDESCRIPTION: Configures the path for asset bridging across deployments to handle CSS and JS file version transitions.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nasset_path: /path/to/assets\n```\n\n----------------------------------------\n\nTITLE: Requiring Deployment Destinations in Kamal\nDESCRIPTION: Forces deployments to specify a destination, which defaults to false if not set.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nrequire_destination: true\n```\n\n----------------------------------------\n\nTITLE: Controlling Local Build Behavior in Kamal\nDESCRIPTION: Determines whether local architecture builds should use the local builder. When set to false, Kamal will always use the remote builder regardless of architecture match.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n  local: true\n```\n\n----------------------------------------\n\nTITLE: Bootstrapping Docker on Servers in Bash\nDESCRIPTION: Runs the 'kamal server bootstrap' command to set up Docker on hosts. This command checks if Docker is installed and attempts to install it via get.docker.com if needed.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/server.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server bootstrap\n```\n\n----------------------------------------\n\nTITLE: Setting Healthcheck Path in YAML\nDESCRIPTION: Defines the HTTP path to use for health checking. Default path is /up.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  path: /health\n```\n\n----------------------------------------\n\nTITLE: Starting a bash session in a new container with Kamal\nDESCRIPTION: Initiates an interactive bash session in a new container created from the most recent application image.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i bash\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Hooks Path in Kamal\nDESCRIPTION: Configures a custom path for deployment hooks, which defaults to '.kamal/hooks' if not specified.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nhooks_path: /user_home/kamal/hooks\n```\n\n----------------------------------------\n\nTITLE: Adding Labels to Accessory in YAML\nDESCRIPTION: Shows how to add Docker labels to an accessory container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n    labels:\n      app: myapp\n```\n\n----------------------------------------\n\nTITLE: Header Forwarding Configuration - YAML\nDESCRIPTION: Controls forwarding of X-Forwarded-For and X-Forwarded-Proto headers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  forward_headers: true\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Connection Idle Timeout in YAML\nDESCRIPTION: Sets the idle timeout for SSH connections in the connection pool. This helps avoid reconnection storms after periods of inactivity. The default is 900 seconds, but this example sets it to 300 seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/sshkit.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  pool_idle_timeout: 300\n```\n\n----------------------------------------\n\nTITLE: Executing Commands on Primary Server in Bash\nDESCRIPTION: Shows how to run a command specifically on the primary server using the '--primary' flag with 'kamal server exec'. This targets only the designated primary server in the configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/server.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec --primary \"date\"\nRunning 'date' on 867.53.0.9...\n  INFO [8bbeb21a] Running /usr/bin/env date on 867.53.0.9\n  INFO [8bbeb21a] Finished in 0.265 seconds with exit status 0 (successful).\nApp Host: 867.53.0.9\nThu Jun 13 08:07:09 AM UTC 2024\n```\n\n----------------------------------------\n\nTITLE: Configuring Hooks Path\nDESCRIPTION: Specifies the path to deployment hooks, with a default value of .kamal/hooks.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nhooks_path: /user_home/kamal/hooks\n```\n\n----------------------------------------\n\nTITLE: Executing Command on Primary Kamal Server in Bash\nDESCRIPTION: Demonstrates running a custom command (again, 'date') specifically on the primary server managed by Kamal. The --primary flag is used to target only the primary server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/server.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec --primary \"date\"\nRunning 'date' on 867.53.0.9...\n  INFO [8bbeb21a] Running /usr/bin/env date on 867.53.0.9\n  INFO [8bbeb21a] Finished in 0.265 seconds with exit status 0 (successful).\nApp Host: 867.53.0.9\nThu Jun 13 08:07:09 AM UTC 2024\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Build Driver in Kamal\nDESCRIPTION: Specifies which Docker build driver to use. Defaults to docker-container, but can be set to plain docker for compatibility.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n  driver: docker\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Healthchecks\nDESCRIPTION: Defines healthcheck settings for proxy roles including path, interval, and timeout parameters.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nproxy:\n  healthcheck:\n    path: /health\n    interval: 2\n    timeout: 2\n```\n\n----------------------------------------\n\nTITLE: Application Port Configuration - YAML\nDESCRIPTION: Specifies the port on which the application container is exposed. Defaults to port 80.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  app_port: 3000\n```\n\n----------------------------------------\n\nTITLE: Global Deployment Timeouts Configuration\nDESCRIPTION: Sets global timeout values for container deployment, request completion, and readiness checks.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# how long to wait for new containers to boot\ndeploy_timeout: 20\n\n# how long to wait for requests to complete before stopping old containers\n# Replaces stop_wait_time\ndrain_timeout: 20\n\n# how long to wait for 'non-proxy role' containers without healthchecks to stay in the running state\nreadiness_delay: 10\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Help Command with Output in Bash\nDESCRIPTION: This snippet demonstrates the output of running the 'kamal help' command. It displays all available kamal commands with brief descriptions and lists all global options that can be used with kamal commands, including verbosity controls, version targeting, host filtering, and configuration options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/help.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal help\nCommands:\n  kamal accessory           # Manage accessories (db/redis/search)\n  kamal app                 # Manage application\n  kamal audit               # Show audit log from servers\n  kamal build               # Build application image\n  kamal config              # Show combined config (including secrets!)\n  kamal deploy              # Deploy app to servers\n  kamal details             # Show details about all containers\n  kamal env                 # Manage environment files\n  kamal envify              # Create .env by evaluating .env.erb (or .env.staging.erb -> .env.staging when using -d staging)\n  kamal help [COMMAND]      # Describe available commands or one specific command\n  kamal init                # Create config stub in config/deploy.yml and env stub in .env\n  kamal lock                # Manage the deploy lock\n  kamal prune               # Prune old application images and containers\n  kamal redeploy            # Deploy app to servers without bootstrapping servers, starting Traefik, pruning, and registry login\n  kamal registry            # Login and -out of the image registry\n  kamal remove              # Remove Traefik, app, accessories, and registry session from servers\n  kamal rollback [VERSION]  # Rollback app to VERSION\n  kamal server              # Bootstrap servers with curl and Docker\n  kamal setup               # Setup all accessories, push the env, and deploy app to servers\n  kamal traefik             # Manage Traefik load balancer\n  kamal version             # Show Kamal version\n\nOptions:\n  -v, [--verbose], [--no-verbose], [--skip-verbose]  # Detailed logging\n  -q, [--quiet], [--no-quiet], [--skip-quiet]        # Minimal logging\n      [--version=VERSION]                            # Run commands against a specific app version\n  -p, [--primary], [--no-primary], [--skip-primary]  # Run commands only on primary host instead of all\n  -h, [--hosts=HOSTS]                                # Run commands on these hosts instead of all (separate by comma, supports wildcards with *)\n  -r, [--roles=ROLES]                                # Run commands on these roles instead of all (separate by comma, supports wildcards with *)\n  -c, [--config-file=CONFIG_FILE]                    # Path to config file\n                                                     # Default: config/deploy.yml\n  -d, [--destination=DESTINATION]                    # Specify destination to be used for config file (staging -> deploy.staging.yml)\n  -H, [--skip-hooks]                                 # Don't run hooks\n                                                     # Default: false\n```\n\n----------------------------------------\n\nTITLE: Running Rails Information Command on All Servers with Kamal\nDESCRIPTION: This command executes 'bin/rails about' on all servers managed by Kamal. It displays detailed information about the Rails environment on each server, including Rails version, Ruby version, middleware, database adapter, and other configuration details.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec 'bin/rails about'\nApp Host: 192.168.0.1\nAbout your application's environment\nRails version             7.1.0.alpha\nRuby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\nRubyGems version          3.3.26\nRack version              2.2.5\nMiddleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper\nApplication root          /rails\nEnvironment               production\nDatabase adapter          sqlite3\nDatabase schema version   20221231233303\n\nApp Host: 192.168.0.2\nAbout your application's environment\nRails version             7.1.0.alpha\nRuby version              ruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\nRubyGems version          3.3.26\nRack version              2.2.5\nMiddleware                ActionDispatch::HostAuthorization, Rack::Sendfile, ActionDispatch::Static, ActionDispatch::Executor, Rack::Runtime, Rack::MethodOverride, ActionDispatch::RequestId, ActionDispatch::RemoteIp, Rails::Rack::Logger, ActionDispatch::ShowExceptions, ActionDispatch::DebugExceptions, ActionDispatch::Callbacks, ActionDispatch::Cookies, ActionDispatch::Session::CookieStore, ActionDispatch::Flash, ActionDispatch::ContentSecurityPolicy::Middleware, ActionDispatch::PermissionsPolicy::Middleware, Rack::Head, Rack::ConditionalGet, Rack::ETag, Rack::TempfileReaper\nApplication root          /rails\nEnvironment               production\nDatabase adapter          sqlite3\nDatabase schema version   20221231233303\n```\n\n----------------------------------------\n\nTITLE: Installing Kamal 1.9.0 with gem\nDESCRIPTION: Command to install Kamal version 1.9.0 using the Ruby gem installer, which is recommended as an intermediate step before upgrading to Kamal 2.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngem install kamal --version 1.9.0\n```\n\n----------------------------------------\n\nTITLE: Executing Interactive Command on Kamal Server in Bash\nDESCRIPTION: Shows how to run an interactive command ('/bin/bash' in this case) on a Kamal-managed server. The --interactive flag is used to start an interactive session on the server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/server.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server exec --interactive \"/bin/bash\"\nRunning '/bin/bash' on 867.53.0.9 interactively...\nroot@server:~#\n```\n\n----------------------------------------\n\nTITLE: Configuring Kamal Alias for System Information\nDESCRIPTION: This YAML configuration snippet shows how to define an alias in Kamal for executing a system command. It creates an alias named 'uname' that runs the 'uname -a' command on the web server with specific flags.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/aliases.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\naliases:\n  uname: app exec -p -q -r web \"uname -a\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Accessories in Kamal\nDESCRIPTION: Placeholder for additional services that run in Docker alongside the main application.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\naccessories:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Basic Proxy Configuration Structure - YAML\nDESCRIPTION: The root-level proxy configuration structure in Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nproxy:\n```\n\n----------------------------------------\n\nTITLE: Kamal Docker Alias Setup for Linux\nDESCRIPTION: Shell alias configuration for running Kamal through Docker on Linux systems, with volume mounts for workdir, SSH agent, and Docker socket\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/installation/index.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nalias kamal='docker run -it --rm -v \"${PWD}:/workdir\" -v \"${SSH_AUTH_SOCK}:/ssh-agent\" -v /var/run/docker.sock:/var/run/docker.sock -e \"SSH_AUTH_SOCK=/ssh-agent\" ghcr.io/basecamp/kamal:latest'\n```\n\n----------------------------------------\n\nTITLE: Listing Kamal App Commands in Bash\nDESCRIPTION: Output of the 'kamal app' command showing all available subcommands for managing running applications. These commands include operations for container and image management, executing commands on servers, viewing logs, and controlling application lifecycle.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/app.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app\nCommands:\n  kamal app boot              # Boot app on servers (or reboot app if already running)\n  kamal app containers        # Show app containers on servers\n  kamal app details           # Show details about app containers\n  kamal app exec [CMD]        # Execute a custom command on servers (use --help to show options)\n  kamal app help [COMMAND]    # Describe subcommands or one specific subcommand\n  kamal app images            # Show app images on servers\n  kamal app logs              # Show log lines from app on servers (use --help to show options)\n  kamal app remove            # Remove app containers and images from servers\n  kamal app stale_containers  # Detect app stale containers\n  kamal app start             # Start existing app container on servers\n  kamal app stop              # Stop app container on servers\n  kamal app version           # Show app version currently running on servers\n```\n\n----------------------------------------\n\nTITLE: Forcing Remote Builder Usage\nDESCRIPTION: Configuration to force Kamal to exclusively use remote builders by disabling local builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  arch: amd64\n  local: false\n  remote: ssh://docker@docker-builder\n```\n\n----------------------------------------\n\nTITLE: Initializing SSHKit Configuration Block in YAML\nDESCRIPTION: Defines the starting point for SSHKit configuration in the Kamal configuration file. This block will contain all SSHKit-specific options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/sshkit.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsshkit:\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Upgrade Command\nDESCRIPTION: Shows the command to upgrade a Kamal-managed application from version 1.x to 2.0. This command initiates the upgrade process for the app running under Kamal.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/upgrade.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nkamal upgrade\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Network for Accessory in YAML\nDESCRIPTION: Shows how to specify a custom network for the accessory container, overriding the default 'kamal' network.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n    network: custom\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Registry in Kamal\nDESCRIPTION: Placeholder for Docker registry configuration, which is detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nregistry:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Retention\nDESCRIPTION: Specifies how many old containers and images to retain, defaults to 5.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nretain_containers: 3\n```\n\n----------------------------------------\n\nTITLE: Applying Additional Labels to Traefik Container in YAML\nDESCRIPTION: This configuration block adds custom labels to the Traefik container. These labels can be used for routing rules, service definitions, and other Traefik-specific configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n  labels:\n    traefik.http.routers.catchall.entryPoints: http\n    traefik.http.routers.catchall.rule: PathPrefix(`/`)\n    traefik.http.routers.catchall.service: unavailable\n    traefik.http.routers.catchall.priority: \"1\"\n    traefik.http.services.unavailable.loadbalancer.server.port: \"0\"\n```\n\n----------------------------------------\n\nTITLE: Initial Kamal Setup Command\nDESCRIPTION: Command to perform initial Kamal setup which includes server configuration, Docker installation, and application deployment\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/installation/index.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkamal setup\n```\n\n----------------------------------------\n\nTITLE: Using Kamal env push to deploy environment files to servers\nDESCRIPTION: This example demonstrates the output of running `kamal env push`, which creates necessary directories on servers, acquires a deploy lock, uploads environment files for different roles and services, and then releases the lock. The command shows environment files being distributed to multiple servers including app-web, app-workers, traefik, and custom accessories.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/env.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal env push\nRunning the pre-connect hook...\n  INFO [96564f07] Running /usr/bin/env .kamal/hooks/pre-connect on localhost\n  INFO [96564f07] Finished in 0.005 seconds with exit status 0 (successful).\n  INFO [da7d250d] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [18892986] Running /usr/bin/env mkdir -p .kamal on server2\n  INFO [0ed28dd9] Running /usr/bin/env mkdir -p .kamal on server3\n  INFO [0ed28dd9] Finished in 0.198 seconds with exit status 0 (successful).\n  INFO [da7d250d] Finished in 0.199 seconds with exit status 0 (successful).\n  INFO [18892986] Finished in 0.199 seconds with exit status 0 (successful).\n  INFO [860aaeb1] Running /usr/bin/env mkdir -p .kamal/locks on server1\n  INFO [860aaeb1] Finished in 0.047 seconds with exit status 0 (successful).\nAcquiring the deploy lock...\n  INFO [f0dc3fac] Running /usr/bin/env mkdir -p .kamal/env/roles on server3\n  INFO [bb61f315] Running /usr/bin/env mkdir -p .kamal/env/roles on server2\n  INFO [067e5ff6] Running /usr/bin/env mkdir -p .kamal/env/roles on server1\n  INFO [f0dc3fac] Finished in 0.045 seconds with exit status 0 (successful).\n  INFO [bb61f315] Finished in 0.050 seconds with exit status 0 (successful).\n  INFO [067e5ff6] Finished in 0.053 seconds with exit status 0 (successful).\n  INFO Uploading .kamal/env/roles/app-workers.env 100.0%\n  INFO Uploading .kamal/env/roles/app-web.env 100.0%\n  INFO Uploading .kamal/env/roles/app-web.env 100.0%\n  INFO [c6da2e19] Running /usr/bin/env mkdir -p .kamal/env/traefik on server1\n  INFO [dafd2ca4] Running /usr/bin/env mkdir -p .kamal/env/traefik on server2\n  INFO [dafd2ca4] Finished in 0.008 seconds with exit status 0 (successful).\n  INFO [c6da2e19] Finished in 0.042 seconds with exit status 0 (successful).\n  INFO Uploading .kamal/env/traefik/traefik.env 100.0%\n  INFO Uploading .kamal/env/traefik/traefik.env 100.0%\n  INFO [eee3dae0] Running /usr/bin/env mkdir -p .kamal/env/accessories on server1\n  INFO [23d6641b] Running /usr/bin/env mkdir -p .kamal/env/accessories on server2\n  INFO [23d6641b] Finished in 0.006 seconds with exit status 0 (successful).\n  INFO [eee3dae0] Finished in 0.043 seconds with exit status 0 (successful).\n  INFO Uploading .kamal/env/accessories/custom-busybox.env 100.0%\n  INFO Uploading .kamal/env/accessories/custom-busybox.env 100.0%\nReleasing the deploy lock...\n```\n\n----------------------------------------\n\nTITLE: Configuring Cord File Path in YAML\nDESCRIPTION: Specifies the path for the cord file used in zero-downtime deployments. Default is /tmp/kamal-cord.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/healthchecks.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  cord: /cord\n```\n\n----------------------------------------\n\nTITLE: Mounting Directories in Accessory Container using YAML\nDESCRIPTION: Shows how to specify directories to be created on the host and mounted into the accessory container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n    directories:\n      - mysql-logs:/var/log/mysql\n```\n\n----------------------------------------\n\nTITLE: Response Timeout Configuration - YAML\nDESCRIPTION: Sets the request timeout duration. Default is 30 seconds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/proxy.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n  response_timeout: 10\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal Server Commands in Bash\nDESCRIPTION: Shows the available subcommands for the 'kamal server' command, including bootstrap, exec, and help options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/server.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server\nCommands:\n  kamal server bootstrap       # Set up Docker to run Kamal apps\n  kamal server exec            # Run a custom command on the server (use --help to show options)\n  kamal server help [COMMAND]  # Describe subcommands or one specific subcommand\n```\n\n----------------------------------------\n\nTITLE: Setting Traefik Host Port in YAML\nDESCRIPTION: This configuration specifies the host port on which the Traefik container will be published. It determines the port through which traffic will be routed to the application.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/traefik.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n  host_port: \"8080\"\n```\n\n----------------------------------------\n\nTITLE: Testing Kamal 2 Configuration\nDESCRIPTION: Command to validate the Kamal 2 configuration after updating the configuration files.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal config\n```\n\n----------------------------------------\n\nTITLE: Executing Kamal Details Command in Bash\nDESCRIPTION: This snippet demonstrates how to run the 'kamal details' command with the quiet (-q) option. It displays container information for Traefik and application instances across multiple servers, including container IDs, images, statuses, and port mappings.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/details.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal details -q\nTraefik Host: server2\nCONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS                NAMES\nb220af815ea7   registry:4443/traefik:v2.10   \"/entrypoint.sh --pr…\"   52 minutes ago   Up 52 minutes   0.0.0.0:80->80/tcp   traefik\n\nTraefik Host: server1\nCONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS                NAMES\ne0abb837120a   registry:4443/traefik:v2.10   \"/entrypoint.sh --pr…\"   52 minutes ago   Up 52 minutes   0.0.0.0:80->80/tcp   traefik\n\nApp Host: server2\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS                    PORTS     NAMES\n3ec7c8122988   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes (healthy)   80/tcp    app-web-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nApp Host: server1\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS                    PORTS     NAMES\n32ae39c98b29   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes (healthy)   80/tcp    app-web-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nApp Host: server3\nCONTAINER ID   IMAGE                                                        COMMAND                  CREATED          STATUS          PORTS     NAMES\ndf8990876d14   registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac   \"/docker-entrypoint.…\"   52 minutes ago   Up 52 minutes   80/tcp    app-workers-75bf6fa40b975cbd8aec05abf7164e0982f185ac\n\nCONTAINER ID   IMAGE                          COMMAND                   CREATED          STATUS          PORTS     NAMES\n14857a6cb6b1   registry:4443/busybox:1.36.0   \"sh -c 'echo \\\"Starti…\"   42 minutes ago   Up 42 minutes             custom-busybox\nCONTAINER ID   IMAGE                          COMMAND                   CREATED          STATUS          PORTS     NAMES\n17f3ff88ff9f   registry:4443/busybox:1.36.0   \"sh -c 'echo \\\"Starti…\"   42 minutes ago   Up 42 minutes             custom-busybox\n```\n\n----------------------------------------\n\nTITLE: Viewing Kamal Server Command Options in Bash\nDESCRIPTION: Displays the available subcommands for the 'kamal server' command, including bootstrap, exec, and help options.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/server.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal server\nCommands:\n  kamal server bootstrap       # Set up Docker to run Kamal apps\n  kamal server exec            # Run a custom command on the server (use --help to show options)\n  kamal server help [COMMAND]  # Describe subcommands or one specific subcommand\n```\n\n----------------------------------------\n\nTITLE: Using Build Args in Dockerfile\nDESCRIPTION: Example of how to reference build arguments defined in Kamal's configuration within a Dockerfile.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_10\n\nLANGUAGE: dockerfile\nCODE:\n```\nARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION-slim as base\n```\n\n----------------------------------------\n\nTITLE: Setting Accessory Service Name in YAML\nDESCRIPTION: Demonstrates how to set a custom service name for an accessory, which is used in the service label.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/accessories.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    service: mysql\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Kamal\nDESCRIPTION: Placeholder for environment variables configuration, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Defining Kamal Alias for Rails Console\nDESCRIPTION: This YAML configuration snippet defines an alias for the Rails console command in Kamal. It creates a shortcut named 'console' for the app exec command with specific parameters.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/aliases.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\naliases:\n  console: app exec -i --reuse \"bin/rails console\"\n```\n\n----------------------------------------\n\nTITLE: Performing a Rolling Upgrade to Kamal 2\nDESCRIPTION: Command to perform a rolling upgrade to Kamal 2 to minimize downtime, upgrading one host at a time.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal upgrade --rolling [-d <DESTINATION>]\n```\n\n----------------------------------------\n\nTITLE: Running Kamal Audit Command\nDESCRIPTION: This snippet demonstrates how to use the 'kamal audit' command to view the latest commands executed on each server in a Kamal deployment. The command displays the most recent 50 entries from the audit log on each server, showing actions like pushing env files, pulling images, booting app versions, and pruning containers and images.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/audit.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal audit\n kamal audit\n  INFO [1ec52bf7] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server2\n  INFO [54911c10] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server1\n  INFO [2f3d32d0] Running /usr/bin/env tail -n 50 .kamal/app-audit.log on server3\n  INFO [2f3d32d0] Finished in 0.232 seconds with exit status 0 (successful).\nApp Host: server3\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [workers] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n\n  INFO [54911c10] Finished in 0.232 seconds with exit status 0 (successful).\nApp Host: server1\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [web] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n\n  INFO [1ec52bf7] Finished in 0.233 seconds with exit status 0 (successful).\nApp Host: server2\n[2024-04-05T07:14:23Z] [user] Pushed env files\n[2024-04-05T07:14:29Z] [user] Pulled image with version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:45Z] [user] [web] Booted app version 75bf6fa40b975cbd8aec05abf7164e0982f185ac\n[2024-04-05T07:14:53Z] [user] Tagging registry:4443/app:75bf6fa40b975cbd8aec05abf7164e0982f185ac as the latest image\n[2024-04-05T07:14:53Z] [user] Pruned containers\n[2024-04-05T07:14:53Z] [user] Pruned images\n```\n\n----------------------------------------\n\nTITLE: Setting Builder Driver\nDESCRIPTION: Specifies the builder driver configuration in Kamal, with Docker as an option.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n  driver: docker\n```\n\n----------------------------------------\n\nTITLE: Customizing Dockerfile and Context in Kamal\nDESCRIPTION: Examples showing how to specify a different Dockerfile, build context, or both when building Docker images with Kamal. Useful for monorepos or projects with multiple Dockerfiles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builder-examples.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Use a different Dockerfile\nbuilder:\n  dockerfile: Dockerfile.xyz\n\n# Set context\nbuilder:\n  context: \"..\"\n\n# Set Dockerfile and context\nbuilder:\n  dockerfile: \"../Dockerfile.xyz\"\n  context: \"..\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Builder Configuration in Kamal YAML\nDESCRIPTION: The base structure for defining builder configurations in Kamal. All builder options go under this key in the root configuration file.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nbuilder:\n```\n\n----------------------------------------\n\nTITLE: Adding Container Labels in Kamal\nDESCRIPTION: Adds additional labels to the Docker container.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nlabels:\n  my-label: my-value\n```\n\n----------------------------------------\n\nTITLE: Adding Labels to Accessory in YAML\nDESCRIPTION: This snippet shows how to add custom labels to an accessory, which can be used for organization or identification purposes.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n    labels:\n      app: myapp\n```\n\n----------------------------------------\n\nTITLE: Sample Basecamp notification output\nDESCRIPTION: Example of the formatted message that appears in Basecamp chat after the post-deploy hook executes.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/hooks/post-deploy.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n[My App] [dhh] Rolled back to version d264c4e92470ad1bd18590f04466787262f605de\n```\n\n----------------------------------------\n\nTITLE: Checking Kamal Version via Command Line\nDESCRIPTION: Demonstrates how to check the installed version of Kamal using the version command. Returns a simple version number output.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/version.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal version\n1.8.1\n```\n\n----------------------------------------\n\nTITLE: Upgrading Specific Hosts to Kamal 2\nDESCRIPTION: Command to upgrade specific hosts to Kamal 2 by providing a comma-separated list of IP addresses.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal upgrade -h 127.0.0.1[,127.0.0.2]\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Dockerfile in Kamal\nDESCRIPTION: Sets a custom Dockerfile path instead of using the default 'Dockerfile' in the root directory. Useful for maintaining multiple build configurations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/builders.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n  dockerfile: Dockerfile.production\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kamal Version using Command Line\nDESCRIPTION: This command returns the version number of the installed Kamal deployment tool. It's a simple way to check which version you are currently using.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/version.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal version\n2.5.2\n```\n\n----------------------------------------\n\nTITLE: Setting Up Logging in Kamal\nDESCRIPTION: Placeholder for Docker logging configuration, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nlogging:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Empty Roles Setting\nDESCRIPTION: Controls whether roles with no servers are allowed, defaults to false.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nallow_empty_roles: false\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Command for Accessory in YAML\nDESCRIPTION: This snippet shows how to set a custom command to run in the accessory container, overriding the default command.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n    cmd: \"bin/mysqld\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Redirect in YAML\nDESCRIPTION: This YAML configuration disables search functionality for the current page and sets up a redirect to the main documentation page located at '/v1/docs/'.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /v1/docs/\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Kamal Lock Command Usage\nDESCRIPTION: Shows the available subcommands for the 'kamal lock' command, including acquire, release, and status operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/lock.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal lock\nCommands:\n  kamal lock acquire -m, --message=MESSAGE  # Acquire the deploy lock\n  kamal lock help [COMMAND]                 # Describe subcommands or one specific subcommand\n  kamal lock release                        # Release the deploy lock\n  kamal lock status                         # Report lock status\n```\n\n----------------------------------------\n\nTITLE: Build Arguments Usage - Dockerfile\nDESCRIPTION: Example of using build arguments in a Dockerfile.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION-slim as base\n```\n\n----------------------------------------\n\nTITLE: Configuring Aliases in Kamal\nDESCRIPTION: Placeholder for alias configuration, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\naliases:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Options in Kamal\nDESCRIPTION: Placeholder for SSH configuration options, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nssh:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Mounting Directories for Accessory in YAML\nDESCRIPTION: This snippet shows how to specify directories to be mounted into the accessory container, which will be created on the host before mounting.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n    directories:\n      - mysql-logs:/var/log/mysql\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Page Redirect in YAML\nDESCRIPTION: This YAML front matter block configures a Jekyll page to disable search indexing and set up a redirect to the view-all-commands documentation page in the v1 documentation section.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /v1/docs/commands/view-all-commands/\n---\n```\n\n----------------------------------------\n\nTITLE: Booting All Kamal Accessories\nDESCRIPTION: Demonstrates the process of booting all accessory services using the 'kamal accessory boot all' command. It shows the steps of running pre-connect hooks, creating directories, acquiring deploy locks, logging into Docker registry, and starting containers.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/accessory.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal accessory boot all\nRunning the pre-connect hook...\n  INFO [bd04b11b] Running /usr/bin/env .kamal/hooks/pre-connect on localhost\n  INFO [bd04b11b] Finished in 0.003 seconds with exit status 0 (successful).\n  INFO [681a028b] Running /usr/bin/env mkdir -p .kamal on server2\n  INFO [e3495d1d] Running /usr/bin/env mkdir -p .kamal on server1\n  INFO [e7c5c159] Running /usr/bin/env mkdir -p .kamal on server3\n  INFO [e3495d1d] Finished in 0.170 seconds with exit status 0 (successful).\n  INFO [681a028b] Finished in 0.182 seconds with exit status 0 (successful).\n  INFO [e7c5c159] Finished in 0.185 seconds with exit status 0 (successful).\n  INFO [83153af3] Running /usr/bin/env mkdir -p .kamal/locks on server1\n  INFO [83153af3] Finished in 0.028 seconds with exit status 0 (successful).\nAcquiring the deploy lock...\n  INFO [416a654c] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server1\n  INFO [3fb56559] Running docker login registry:4443 -u [REDACTED] -p [REDACTED] on server2\n  INFO [3fb56559] Finished in 0.065 seconds with exit status 0 (successful).\n  INFO [416a654c] Finished in 0.080 seconds with exit status 0 (successful).\n  INFO [2705083f] Running docker run --name custom-busybox --detach --restart unless-stopped --log-opt max-size=\"10m\" --env-file .kamal/env/accessories/custom-busybox.env --label service=\"custom-busybox\" registry:4443/busybox:1.36.0 sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1; done' on server2\n  INFO [3cb3adb6] Running docker run --name custom-busybox --detach --restart unless-stopped --log-opt max-size=\"10m\" --env-file .kamal/env/accessories/custom-busybox.env --label service=\"custom-busybox\" registry:4443/busybox:1.36.0 sh -c 'echo \"Starting busybox...\"; trap exit term; while true; do sleep 1; done' on server1\n  INFO [3cb3adb6] Finished in 0.552 seconds with exit status 0 (successful).\n  INFO [2705083f] Finished in 0.566 seconds with exit status 0 (successful).\nReleasing the deploy lock...\n```\n\n----------------------------------------\n\nTITLE: Setting Non-Proxy Role Healthchecks\nDESCRIPTION: Configures custom Docker healthchecks for non-proxy roles using options configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/configuration-changes.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n  web:\n    ...\n  jobs:\n    options:\n      health-cmd: bin/jobs-healthy\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Redirect in YAML\nDESCRIPTION: This YAML frontmatter snippet disables search functionality for the current page and sets up a redirect to the Kamal documentation hooks overview page. It uses the 'redirect_to' key to specify the target URL.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/hooks/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /docs/hooks/overview/\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring SSHKit in Kamal\nDESCRIPTION: Placeholder for SSHKit configuration options, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nsshkit:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Setting Service Name for Accessory in YAML\nDESCRIPTION: This snippet demonstrates how to set a custom service name for an accessory, which is used in the service label.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/accessories.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    service: mysql\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Redirect in YAML for Kamal Site\nDESCRIPTION: This YAML configuration disables search functionality for the page and sets up a redirect to the configuration overview documentation. It uses the 'redirect_to' key to specify the target URL.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsearch: false\nredirect_to:\n  - /v1/docs/configuration/overview/\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Kamal 2 with gem\nDESCRIPTION: Command to install the latest version of Kamal (version 2) using the Ruby gem installer.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngem install kamal\n```\n\n----------------------------------------\n\nTITLE: Example Docker Container Status with Traefik and kamal-proxy\nDESCRIPTION: Sample output of the docker ps command showing the deployed containers: the application container, kamal-proxy, and Traefik. It demonstrates the expected container setup after successful deployment.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/continuing-to-use-traefik.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ docker ps\nCONTAINER ID   IMAGE                                                                     COMMAND                  CREATED              STATUS              PORTS                               NAMES\n3729c50d9d94   registry:4443/app_with_traefik:30482914d55f9ca5e4302dd2d050e424d29d8f74   \"/docker-entrypoint.…\"   11 seconds ago       Up 10 seconds       80/tcp                              app_with_traefik-web-30482914d55f9ca5e4302dd2d050e424d29d8f74\n3c87e1c649e3   basecamp/kamal-proxy:v0.4.0                                               \"kamal-proxy run\"        12 seconds ago       Up 11 seconds       80/tcp, 443/tcp                     kamal-proxy\n609a18d8ecd7   traefik:v2.10                                                             \"/entrypoint.sh --pr…\"   About a minute ago   Up About a minute   0.0.0.0:80->80/tcp, :::80->80/tcp   traefik\n```\n\n----------------------------------------\n\nTITLE: Kamal Lock Command Overview\nDESCRIPTION: Shows the available lock-related commands in Kamal, including options to acquire, release, and check lock status.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/lock.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal lock\nCommands:\n  kamal lock acquire -m, --message=MESSAGE  # Acquire the deploy lock\n  kamal lock help [COMMAND]                 # Describe subcommands or one specific subcommand\n  kamal lock release                        # Release the deploy lock\n  kamal lock status                         # Report lock status\n```\n\n----------------------------------------\n\nTITLE: Setting up Jekyll Page Redirect with Front Matter in YAML\nDESCRIPTION: A YAML front matter block that configures a Jekyll page to redirect visitors to another URL. It disables search indexing with 'search: false' and sets up an automatic redirect to '/docs/commands/view-all-commands/'.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /docs/commands/view-all-commands/\n---\n```\n\n----------------------------------------\n\nTITLE: Running Interactive Rails Console in New Container with Kamal\nDESCRIPTION: This command starts an interactive Rails console in a new container created from the most recent application image. The '-i' flag enables interactive mode, allowing users to interact with the Rails application using the console interface.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i 'bin/rails console'\n```\n\n----------------------------------------\n\nTITLE: Starting a bash session in the current container with Kamal\nDESCRIPTION: Initiates an interactive bash session in the currently running application container using the --reuse flag.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkamal app exec -i --reuse bash\n```\n\n----------------------------------------\n\nTITLE: Initializing Search Results Page Structure in HTML\nDESCRIPTION: Sets up the basic HTML structure for the search results page, including a title and a container for search results.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/search/index.md#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<h1 id=\"search-query\">Search results for <mark></mark></h1>\n\n<div id=\"search-results\"></div>\n```\n\n----------------------------------------\n\nTITLE: Testing Kamal 2 Configuration for Multiple Destinations\nDESCRIPTION: Commands to test Kamal 2 configuration for different deployment destinations using the -d flag.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/overview.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal config -d staging\n$ kamal config -d beta\n```\n\n----------------------------------------\n\nTITLE: Populating Search Data with Jekyll and JavaScript\nDESCRIPTION: Uses Jekyll's Liquid templating to generate a JavaScript object (window.store) containing searchable page data. It filters pages marked for search and within the 'v1/docs/' path.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/search/index.md#2025-04-23_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script>\n  window.store = {\n{% assign pages = site.pages | where: 'search', true %}\n{% for page in pages %}\n  {% if page.path contains 'v1/docs/'  %}\n    \"{{ page.url | slugify }}\": {\n      \"title\": \"{{ page.title | smartify | xml_escape }}\",\n      \"content\": {{ page.content | markdownify | strip_html | strip_newlines | jsonify }},\n      \"section\": \"{{ page.url }}\".split(\"/\").filter(element => element !== \"\").slice(2).join(\"/\"),\n      \"url\": \"{{ page.url | xml_escape }}\"\n    }{% unless forloop.last %},{% endunless %}\n  {% endif %}\n{% endfor %}\n  };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Viewing Container Details for Rollback in Kamal\nDESCRIPTION: Example output of the 'kamal app containers -q' command showing all containers including old ones that can be used as rollback targets. The output displays container IDs, images, status, and other details for multiple application hosts.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/rollback.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nApp Host: 192.168.0.1\nCONTAINER ID   IMAGE                                                                         COMMAND                    CREATED          STATUS                      PORTS      NAMES\n1d3c91ed1f51   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   \"/rails/bin/docker-e...\"   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123\n539f26b28369   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   \"/rails/bin/docker-e...\"   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n\nApp Host: 192.168.0.2\nCONTAINER ID   IMAGE                                                                         COMMAND                    CREATED          STATUS                      PORTS      NAMES\nbadb1aa51db4   registry.digitalocean.com/user/app:6ef8a6a84c525b123c5245345a8483f86d05a123   \"/rails/bin/docker-e...\"   19 minutes ago   Up 19 minutes               3000/tcp   chat-6ef8a6a84c525b123c5245345a8483f86d05a123\n6f170d1172ae   registry.digitalocean.com/user/app:e5d9d7c2b898289dfbc5f7f1334140d984eedae4   \"/rails/bin/docker-e...\"   31 minutes ago   Exited (1) 27 minutes ago              chat-e5d9d7c2b898289dfbc5f7f1334140d984eedae4\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Front Matter for Page Redirection in YAML\nDESCRIPTION: YAML front matter configuration for a Jekyll page that disables search indexing and redirects visitors to the installation documentation page.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /docs/installation/\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Readiness Delay\nDESCRIPTION: Sets the number of seconds to wait for a container to boot after running, applies to containers without healthcheck.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/overview.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nreadiness_delay: 4\n```\n\n----------------------------------------\n\nTITLE: Example Basecamp Notification Output\nDESCRIPTION: This snippet shows the expected output format of the deployment notification in Basecamp. It includes the app name, the person who performed the action, and the version deployed.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/hooks/post-deploy.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n[My App] [dhh] Rolled back to version d264c4e92470ad1bd18590f04466787262f605de\n```\n\n----------------------------------------\n\nTITLE: Building Search Data Store with Jekyll Liquid Templating\nDESCRIPTION: Creates a JavaScript data store containing searchable content from the site pages. Uses Jekyll's Liquid templating to filter pages marked as searchable, exclude the v1 directory, and transform page content into a searchable JSON structure.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/search/index.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\n  window.store = {\n{% assign pages = site.pages | where: 'search', true %}\n{% for page in pages %}\n  {% if page.path contains 'docs/' %}\n    {% unless page.path contains 'v1/' %}\n      \"{{ page.url | slugify }}\": {\n        \"title\": \"{{ page.title | smartify | xml_escape }}\",\n        \"content\": {{ page.content | markdownify | strip_html | normalize_whitespace | jsonify }},\n        \"section\": \"{{ page.url }}\".split(\"/\").filter(element => element !== \"\").slice(1).join(\"/\"),\n        \"url\": \"{{ page.url | xml_escape }}\"\n      }{% unless forloop.last %},{% endunless %}\n    {% endunless %}\n  {% endif %}\n{% endfor %}\n  };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Executing Rails Console Command in Kamal\nDESCRIPTION: This snippet shows how to use Kamal to execute a Rails console command in the deployed application. It uses the app exec command with interactive and reuse flags.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/aliases.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nkamal app exec -i --reuse \"bin/rails console\"\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Redirection in Basecamp Kamal Site\nDESCRIPTION: This YAML front matter disables search functionality and sets up a redirect to the configuration overview documentation page. It's typically used in static site generators to control page behavior.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /docs/configuration/overview/\n---\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Search Results Page\nDESCRIPTION: Defines the HTML structure for displaying search results, including a heading that shows the search query and a container for the results.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/search/index.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h1 id=\"search-query\">Search results for <mark></mark></h1>\n\n<div id=\"search-results\"></div>\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running Kamal Site Development Server in Bash\nDESCRIPTION: Commands to install Ruby dependencies using Bundler and start a Jekyll development server with live reload functionality for the Kamal site project.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbundle install\nbundle exec jekyll serve --livereload\n```\n\n----------------------------------------\n\nTITLE: Configuring Boot Options in Kamal\nDESCRIPTION: Placeholder for container boot configuration, detailed in a separate document.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nboot:\n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Settings for Kamal Site\nDESCRIPTION: Basic YAML configuration that disables the search feature and redirects to the installation documentation path /v1/docs/installation/.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsearch: false\nredirect_to:\n  - /v1/docs/installation/\n```\n\n----------------------------------------\n\nTITLE: Secret File Configuration in Kamal 2\nDESCRIPTION: Example showing how to configure secrets in .kamal/secrets using environment variables and command substitution with dotenv.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/secrets-changes.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# .kamal/secrets\n\nSECRET_FROM_ENV=$SECRET_FROM_ENV\nSECRET_FROM_COMMAND=$(op read ...)\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Headers\nDESCRIPTION: Markdown sections defining the structure of the proxy changes documentation.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/proxy-changes.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Proxy Changes\n---\n\n# Kamal 2: Proxy Changes\n```\n\n----------------------------------------\n\nTITLE: Configuring Search and Redirect in YAML Front Matter\nDESCRIPTION: This YAML front matter disables search functionality and sets up a redirect to the Kamal documentation hooks overview page. It's typically used in static site generators to control page behavior.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/hooks/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /v1/docs/hooks/overview/\n---\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Dockerfile and Context in Kamal Builder\nDESCRIPTION: These YAML configurations demonstrate how to specify a custom Dockerfile, build context, or both when configuring the Kamal builder, useful for projects with non-standard structures or multiple Dockerfiles.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Use a different Dockerfile\nbuilder:\n  dockerfile: Dockerfile.xyz\n\n# Set context\nbuilder:\n  context: \"..\"\n\n# Set Dockerfile and context\nbuilder:\n  dockerfile: \"../Dockerfile.xyz\"\n  context: \"..\"\n```\n\n----------------------------------------\n\nTITLE: Using Build Secrets in Dockerfile with Kamal\nDESCRIPTION: This Dockerfile snippet shows how to use a build secret (GITHUB_TOKEN) passed from Kamal to install dependencies from private repositories during image construction.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builder-examples.md#2025-04-23_snippet_8\n\nLANGUAGE: dockerfile\nCODE:\n```\n# Copy Gemfiles\nCOPY Gemfile Gemfile.lock ./\n\n# Install dependencies, including private repositories via access token (then remove bundle cache with exposed GITHUB_TOKEN)\nRUN --mount=type=secret,id=GITHUB_TOKEN \\\n  BUNDLE_GITHUB__COM=x-access-token:$(cat /run/secrets/GITHUB_TOKEN) \\\n  bundle install && \\\n  rm -rf /usr/local/bundle/cache\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Prune Commands for Container and Image Management\nDESCRIPTION: This bash snippet demonstrates the various subcommands available under the 'kamal prune' command. It includes options for pruning all unused resources, only containers, only images, and accessing help for these commands.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/prune.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal help prune\nCommands:\n  kamal prune all             # Prune unused images and stopped containers\n  kamal prune containers      # Prune all stopped containers, except the last n (default 5)\n  kamal prune help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal prune images          # Prune unused images\n```\n\n----------------------------------------\n\nTITLE: Executing Ruby Version Check on All Servers with Kamal\nDESCRIPTION: This command runs 'ruby -v' on all servers managed by Kamal. It displays the Ruby version information for each server in the deployment, showing the installed Ruby version and platform details.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec 'ruby -v'\nApp Host: 192.168.0.1\nruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\n\nApp Host: 192.168.0.2\nruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\n```\n\n----------------------------------------\n\nTITLE: Listing Kamal Build Subcommands\nDESCRIPTION: This snippet shows the available subcommands for the 'kamal build' command, including create, deliver, details, pull, push, and remove operations.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/commands/build.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal build\nCommands:\n  kamal build create          # Create a build setup\n  kamal build deliver         # Build app and push app image to registry then pull image on servers\n  kamal build details         # Show build setup\n  kamal build help [COMMAND]  # Describe subcommands or one specific subcommand\n  kamal build pull            # Pull app image from registry onto servers\n  kamal build push            # Build and push app image to registry\n  kamal build remove          # Remove build setup\n```\n\n----------------------------------------\n\nTITLE: Executing commands on all servers with Kamal\nDESCRIPTION: Runs a Ruby version check command on all configured servers, displaying the output from each server.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/commands/running-commands-on-servers.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kamal app exec 'ruby -v'\nApp Host: 192.168.0.1\nruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\n\nApp Host: 192.168.0.2\nruby 3.1.3p185 (2022-11-24 revision 1a6b16756e) [x86_64-linux]\n```\n\n----------------------------------------\n\nTITLE: Generating Base64 Encoded GCP Service Account Key\nDESCRIPTION: Shell command to generate a base64 encoded GCP service account key and append it to the .env file. This is used for authentication with GCP Artifact Registry.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/docker-registry.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\necho \"KAMAL_REGISTRY_PASSWORD=$(base64 -i /path/to/key.json)\" | tr -d \"\\\\n\"  >> .env\n```\n\n----------------------------------------\n\nTITLE: Using Kamal Secret Helpers for Password Management\nDESCRIPTION: Shows how to use Kamal's secret helpers to fetch and extract secrets from password managers for use in your configuration.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nSECRETS=$(kamal secrets fetch ...)\n\nREGISTRY_PASSWORD=$(kamal secrets extract REGISTRY_PASSWORD $SECRETS)\nDB_PASSWORD=$(kamal secrets extract DB_PASSWORD $SECRETS)\n```\n\n----------------------------------------\n\nTITLE: Configuring Jekyll Redirect in YAML\nDESCRIPTION: YAML front matter configuration that disables search indexing for this page and sets up a redirect to the upgrading overview documentation page.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/upgrading/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch: false\nredirect_to:\n  - /docs/upgrading/overview/\n---\n```\n\n----------------------------------------\n\nTITLE: Using Variable and Command Substitution in Kamal Secrets Files\nDESCRIPTION: Demonstrates how to set secret variables in the .kamal/secrets file using variable substitution and command substitution for sensitive values.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/environment-variables.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nKAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD\nRAILS_MASTER_KEY=$(cat config/master.key)\n```\n\n----------------------------------------\n\nTITLE: Specifying Docker Image Name in Kamal\nDESCRIPTION: Sets the Docker image name that will be pushed to the configured registry.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/docs/configuration/overview.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nimage: my-image\n```\n\n----------------------------------------\n\nTITLE: SSH Configuration - YAML\nDESCRIPTION: Configures SSH agent socket exposure for Docker builds.\nSOURCE: https://github.com/basecamp/kamal-site/blob/main/v1/docs/configuration/builders.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n  ssh: default=$SSH_AUTH_SOCK\n```"
  }
]
[
  {
    "owner": "feige996",
    "repo": "unibest",
    "content": "TITLE: Creating Reusable API Service Functions in TypeScript\nDESCRIPTION: TypeScript code showing how to define reusable API service functions in a dedicated service file, with interfaces for response types and simplified request methods.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { http, httpGet } from '@/utils/http'\nexport interface IFooItem {\n  id: string\n  name: string\n}\n\n/** GET 请求 */\nexport const getFooAPI = (name: string) => {\n  return http<IFooItem>({\n    url: `/foo`,\n    method: 'GET',\n    query: { name },\n  })\n}\n\n/** GET 请求 - 再次简化，看大家是否喜欢这种简化 */\nexport const getFooAPI2 = (name: string) => {\n  return httpGet<IFooItem>('/foo', { name })\n}\n```\n\n----------------------------------------\n\nTITLE: Complete API Request Examples in TypeScript for UniBest\nDESCRIPTION: Comprehensive examples showing various HTTP request implementations including GET and POST methods with different parameter types and header configurations.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n/** GET 请求 */\nexport const getFooAPI = (name: string) => {\n  return http.get<IFooItem>('/foo', { name })\n}\n/** GET 请求；支持 传递 header 的范例 */\nexport const getFooAPI2 = (name: string) => {\n  return http.get<IFooItem>('/foo', { name }, { 'Content-Type-100': '100' })\n}\n\n/** POST 请求 */\nexport const postFooAPI = (name: string) => {\n  return http.post<IFooItem>('/foo', { name })\n}\n/** POST 请求；需要传递 query 参数的范例；微信小程序经常有同时需要query参数和body参数的场景 */\nexport const postFooAPI2 = (name: string) => {\n  return http.post<IFooItem>('/foo', { name })\n}\n/** POST 请求；支持 传递 header 的范例 */\nexport const postFooAPI3 = (name: string) => {\n  return http.post<IFooItem>('/foo', { name }, { name }, { 'Content-Type-100': '100' })\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Header Support in HTTP Request Functions for UniBest\nDESCRIPTION: TypeScript implementation showing how to add custom headers to HTTP requests in the UniBest framework for both GET and POST methods.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n/** GET 请求 */\nexport const getFooAPI = (name: string) => {\n  return http.get<IFooItem>('/foo', { name }, { 'Content-Type': 'multipart/form-data' })\n}\n\n/** POST 请求 */\nexport const postFooAPI = (name: string) => {\n  return http.post<IFooItem>('/foo', { name }, { name }, { 'Content-Type': 'multipart/form-data' })\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-Backend URL Handling Implementation in TypeScript\nDESCRIPTION: TypeScript code showing how to implement support for multiple backend URLs through a proxy mapping system that modifies request URLs based on prefixes.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// 可以写一个映射对象，如：\nconst proxyMap = {\n  cms:'http://localhost:8080/cms',\n  ums:'http://localhost:8080/ums',\n}\n\n// 拦截器部分（上图箭头部分）修改如下\nObject.keys(proxyMap).forEach(key=>{\n  if(options.url.startsWith(`/${key}`)){\n    options.url = proxyMap[key] + options.url\n  }\n}\n\n// 接口调用的地方使用如下格式：\nexport const getFooAPI = (name: string) => {\n  return http<IFooItem>({\n    url: `/cms/foo`, // 看这里，前缀不用！！！\n    method: 'GET',\n    query: { name },\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pinia with Persistence for UniApp\nDESCRIPTION: Code that configures Pinia store with persistence support for UniApp by customizing the storage API to use uni.getStorageSync and uni.setStorageSync instead of localStorage.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nimport { createPinia } from 'pinia'\nimport { createPersistedState } from 'pinia-plugin-persistedstate' // 数据持久化\n\nconst store = createPinia()\nstore.use(\n  createPersistedState({\n    storage: {\n      getItem: uni.getStorageSync, // 看这里\n      setItem: uni.setStorageSync, // 看这里\n    },\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Using useRequest Hook for One-Time API Requests in TypeScript\nDESCRIPTION: TypeScript code demonstrating how to use the useRequest hook for one-time API requests, which handles loading, error, and data states automatically.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n<script setup>\ntype IFooItem = { name: string }\nconst { loading, error, data, run } = useRequest<IFooItem>(() => httpGet('/foo', { name: '菲鸽' }))\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Reusable API Requests in TypeScript for UniBest\nDESCRIPTION: TypeScript implementation for reusable API requests that imports a service function from a dedicated service directory instead of using inline requests.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n<script setup>\nimport { getFooAPI, IFooItem } from '@/service/index/foo' // 看这里\nconst { loading, error, data, run } = useRequest<IFooItem>(() => getFooAPI('菲鸽'))\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining a Persistent Pinia Store\nDESCRIPTION: Example of defining a Pinia store with count state and associated methods. The store is configured for persistence with the persist: true option.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport const useCountStore = defineStore(\n  'count',\n  () => {\n    const count = ref(0)\n    const increment = () => {\n      count.value++\n    }\n    const decrement = () => {\n      count.value--\n    }\n    const reset = () => {\n      count.value = 0\n    }\n    return {\n      count,\n      decrement,\n      increment,\n      reset,\n    }\n  },\n  {\n    // 如果需要持久化就写 true, 不需要持久化就写 false（或者去掉这个配置项）\n    persist: true,\n  },\n)\n```\n\n----------------------------------------\n\nTITLE: Using useUpload Hook for Image Upload in TypeScript\nDESCRIPTION: TypeScript implementation showing how to use the useUpload hook to handle image uploads with automatic loading and data state management.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n<script lang=\"ts\" setup>\nconst { loading, data, run } = useUpload<string>({ user: '菲鸽' })\n</script>\n```\n\n----------------------------------------\n\nTITLE: Using Uni Platform Variables in JavaScript\nDESCRIPTION: Demonstrates how to check and use Uni platform variables to determine the current runtime environment.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/12-env.md#2025-04-23_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nexport const platform = __UNI_PLATFORM__\nexport const isH5 = __UNI_PLATFORM__ === 'h5'\nexport const isApp = __UNI_PLATFORM__ === 'app'\nexport const isMp = __UNI_PLATFORM__.startsWith('mp-')\nconst PLATFORM = {\n  platform,\n  isH5,\n  isApp,\n  isMp,\n}\nexport default PLATFORM\n```\n\n----------------------------------------\n\nTITLE: Using Pinia Store in a Vue Component\nDESCRIPTION: Vue component example showing how to import and use a Pinia store. The component displays the count value and provides buttons to increment, decrement, and reset the count.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <view class=\"flex justify-center items-center text-blue-500 mt-4 mb-4\">\n    <view class=\"w-20\">Count: {{ countStore.count }}</view>\n    <button class=\"ml-2 mr-2\" @click=\"countStore.decrement\">-1</button>\n    <button class=\"ml-2 mr-2\" @click=\"countStore.increment\">+1</button>\n    <button class=\"ml-2 mr-2\" @click=\"countStore.reset\">重置</button>\n  </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useCountStore } from '@/store'\n\nconst countStore = useCountStore()\n</script>\n```\n\n----------------------------------------\n\nTITLE: Accessing Vite Environment Variables in JavaScript\nDESCRIPTION: Demonstrates how to access Vite environment variables using import.meta.env, showing that only VITE_ prefixed variables are accessible.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/12-env.md#2025-04-23_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconsole.log(import.meta.env.VITE_SOME_KEY) // \"123\"\nconsole.log(import.meta.env.DB_PASSWORD) // undefined\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables in .env Files\nDESCRIPTION: Shows the structure of environment variables defined in .env files with examples of both exposed (VITE_) and private variables.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/12-env.md#2025-04-23_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nVITE_SOME_KEY=123\nDB_PASSWORD=foobar\n```\n\n----------------------------------------\n\nTITLE: Configuring Uni Plugins in Vite Config\nDESCRIPTION: Shows how to configure uni plugins in the vite.config.ts file, including setting up page exclusions and subpackages.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nUniPages({\n  exclude: ['**/components/**/**.*'],\n  subPackages: ['src/pages-sub'], // 是个数组，可以配置多个，但不能为 `src/pages` 里面的子目录\n})\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration for API Base URL\nDESCRIPTION: Environment variable configuration sample showing how to set the base URL for API requests in the UniBest framework.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nVITE_SERVER_BASEURL = 'https://ukw0y1.laf.run'\n```\n\n----------------------------------------\n\nTITLE: Complete SP-Editor Implementation with Event Handlers\nDESCRIPTION: Full implementation of the SP-Editor rich text editor component including route configuration, all event handlers for input processing, content initialization, image uploading, and exporting HTML content.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/15-faq.md#2025-04-23_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<route lang=\"json5\">\n{\n  layout: 'demo',\n  style: { navigationBarTitleText: '富文本' },\n}\n</route>\n\n<template>\n  <view class=\"home\">\n    <view class=\"editor-box\">\n      <sp-editor\n        :toolbar-config=\"{\n          excludeKeys: ['direction', 'date', 'lineHeight', 'letterSpacing', 'listCheck'],\n          iconSize: '18px',\n        }\"\n        @init=\"initEditor\"\n        @input=\"inputOver\"\n        @upinImage=\"upinImage\"\n        @overMax=\"overMax\"\n        @addLink=\"addLink\"\n        @exportHtml=\"exportHtml\"\n      ></sp-editor>\n    </view>\n  </view>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\n\nconst editorIns = ref(null)\n\n/**\n * 获取输入内容\n * @param {Object} e {html,text} 内容的html文本，和text文本\n */\nfunction inputOver(e) {\n  // 可以在此处获取到编辑器已编辑的内容\n  console.log('==== inputOver :', e)\n}\n\n/**\n * 超出最大内容限制\n * @param {Object} e {html,text} 内容的html文本，和text文本\n */\nfunction overMax(e) {\n  // 若设置了最大字数限制，可在此处触发超出限制的回调\n  console.log('==== overMax :', e)\n}\n\n/**\n * 编辑器就绪\n * @param {Object} editor 编辑器实例，你可以自定义调用editor实例的方法\n * @tutorial editor组件 https://uniapp.dcloud.net.cn/component/editor.html#editor-%E7%BB%84%E4%BB%B6\n * @tutorial 相关api https://uniapp.dcloud.net.cn/api/media/editor-context.html\n */\nfunction initEditor(editor) {\n  editorIns.value = editor // 保存编辑器实例\n  // 保存编辑器实例后，可以在此处获取后端数据，并赋值给编辑器初始化内容\n  preRender()\n}\n\nfunction preRender() {\n  setTimeout(() => {\n    // 异步获取后端数据后，初始化编辑器内容\n    editorIns.value.setContents({\n      html: `<div>&nbsp;&nbsp;猫猫<img src=\"https://img.yzcdn.cn/vant/cat.jpeg\"/></div>`,\n    })\n  }, 1000)\n}\n\n/**\n * 直接运行示例工程插入图片无法正常显示的看这里\n * 因为插件默认采用云端存储图片的方式\n * 以$emit('upinImage', tempFiles, this.editorCtx)的方式回调\n * @param {Object} tempFiles\n * @param {Object} editorCtx\n */\nfunction upinImage(tempFiles, editorCtx) {\n  /**\n   * 本地临时插入图片预览\n   * 注意：这里仅是示例本地图片预览，因为需要将图片先上传到云端，再将图片插入到编辑器中\n   * 正式开发时，还请将此处注释，并解开下面 使用 uniCloud.uploadFile 上传图片的示例方法 的注释\n   * @tutorial https://uniapp.dcloud.net.cn/api/media/editor-context.html#editorcontext-insertimage\n   */\n  // #ifdef MP-WEIXIN\n  // 注意微信小程序的图片路径是在tempFilePath字段中\n  editorCtx.insertImage({\n    src: tempFiles[0].tempFilePath,\n    width: '80%', // 默认不建议铺满宽度100%，预留一点空隙以便用户编辑\n    success: function () {},\n  })\n  // #endif\n\n  // #ifndef MP-WEIXIN\n  editorCtx.insertImage({\n    src: tempFiles[0].path,\n    width: '80%', // 默认不建议铺满宽度100%，预留一点空隙以便用户编辑\n    success: function () {},\n  })\n  // #endif\n\n  /**\n   * 使用 uniCloud.uploadFile 上传图片的示例方法（可适用多选上传）\n   * 正式开发环境中，请将上面 本地临时插入图片预览 注释后，模仿以下写法\n   */\n  // tempFiles.forEach(async (item) => {\n  //   uni.showLoading({\n  //     title: '上传中请稍后',\n  //     mask: true\n  //   })\n  //   let upfile = await uniCloud.uploadFile({\n  //     filePath: item.path,\n  //     // 同名会导致报错 policy_does_not_allow_file_overwrite\n  //     // cloudPath可由 想要存储的文件夹/文件名 拼接，若不拼文件夹名则默认存储在cloudstorage文件夹中\n  //     cloudPath: `cloudstorage/${item.name}`,\n  //     cloudPathAsRealPath: true\n  //   })\n  //   editorCtx.insertImage({\n  //     src: upfile.fileID,\n  //     width: '80%', // 默认不建议铺满宽度100%，预留一点空隙以便用户编辑\n  //     success: function () {\n  //       uni.hideLoading()\n  //     }\n  //   })\n  // })\n}\n\n/**\n * 导出 - toolbar需要开启export工具\n * @param {string} e 导出的html内容\n */\nfunction exportHtml(e) {\n  uni.navigateTo({\n    url: '/pages/out/out',\n    success(res) {\n      // 传至导出页面解析即可\n      res.eventChannel.emit('e-transmit-html', {\n        data: e,\n      })\n    },\n  })\n}\n\n/**\n * 添加超链接\n * @param {Object} e { text: '链接描述', href: '链接地址' }\n */\nfunction addLink(e) {\n  console.log('==== addLink :', e)\n}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration for Upload Base URL in UniBest\nDESCRIPTION: Environment variable configuration for setting the image upload base URL in the UniBest framework.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_11\n\nLANGUAGE: text\nCODE:\n```\nVITE_UPLOAD_BASEURL = 'https://ukw0y1.laf.run/upload'\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Modes in package.json Scripts\nDESCRIPTION: Shows how to define different mode configurations in npm scripts to load specific environment files.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/12-env.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n\"scripts\": {\n    \"dev\": \"uni\",\n    \"dev-dev\": \"uni --mode development\",\n    \"dev-test\": \"uni --mode test\",\n    \"dev-prod\": \"uni --mode production\",\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple State with ref\nDESCRIPTION: Example of creating a simple state management solution using Vue's ref API. Defines both global and local count variables and an increment function.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\n// 全局状态\nconst globalCount = ref(1)\nexport function useCount() {\n  // 本地状态\n  const localCount = ref(1)\n  function increment() {\n    globalCount.value++\n    localCount.value++\n  }\n  return {\n    globalCount,\n    localCount,\n    increment,\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Route and Template in Vue Component\nDESCRIPTION: Demonstrates how to use the route-block syntax to set page configuration and a basic template structure in a Vue component for uni-app.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<route lang=\"json5\">\n{\n  layout: 'demo',\n  style: {\n    navigationBarTitleText: '标题',\n  },\n}\n</route>\n\n<template>\n  <view class=\"text-green-500\">菲鸽，你好，我喜欢你！</view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using ref-based State in a Vue Component\nDESCRIPTION: Vue component demonstrating how to import and use a simple state management module based on ref. Shows the global and local count values with an increment button.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport useCount from './useCount.ts'\nconst { globalCount, localCount, increment } = useCount()\n</script>\n\n<template>\n  <button @click=\"increment()\">\n    {{ globalCount }}\n    {{ localCount }}\n  </button>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using WOT-UI Message Component in TypeScript\nDESCRIPTION: Demonstrates how to use the message component from WOT-Design-Uni in a TypeScript file. The code imports the useMessage hook and shows a simple implementation to display a message when a function is triggered.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/15-faq.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useMessage } from 'wot-design-uni'\n\nconst message = useMessage()\nconst handleClick = () => {\n  // 顺便测试 message 的使用\n  message.show('显示隐藏切换')\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing One-Time Request Template in HTML for UniBest\nDESCRIPTION: HTML template for a one-time request implementation showing a button to trigger the request and conditional rendering for loading state, error state, and success data display.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <button @click=\"run\">请求</button>\n  <view v-if=\"loading\" class=\"text-blue h-10\">请求中...</view>\n  <view v-if=\"error\" class=\"text-red h-10\">请求错误</view>\n  <view v-else class=\"text-green h-10\">{{ JSON.stringify(data) }}</view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Icon and Color Implementation in TypeScript and HTML\nDESCRIPTION: Demonstrates how to implement dynamic icon names and colors using TypeScript reactive variables and HTML bindings.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst iconName = ref<string>('contact')\nconst colorName = ref<string>('red')\nonLoad(() => {\n  setTimeout(() => {\n    iconName.value = 'chat'\n    colorName.value = 'green'\n  }, 1000)\n})\n```\n\nLANGUAGE: html\nCODE:\n```\n<uni-icons :type=\"iconName\" :color=\"colorName\" class=\"text-green w-8\"></uni-icons>\n```\n\n----------------------------------------\n\nTITLE: Implementing WOT-UI Toast and Message Box in Vue Layout\nDESCRIPTION: Shows how to implement WOT-UI's toast and message-box components in a default layout file. This pattern ensures these UI elements are available throughout the application without requiring imports in every component.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/15-faq.md#2025-04-23_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<!-- src/layouts/default.vue -->\n<template>\n  <view>\n    <slot />\n    <wd-toast />\n    <wd-message-box />\n  </view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Using reactive-based State in a Vue Component\nDESCRIPTION: Vue component demonstrating how to import and use a simple state management module based on reactive. Shows the count value with an increment button.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { countStore } from './count.ts'\n</script>\n\n<template>\n  <button @click=\"countStore.increment()\">\n    {{ countStore.count }}\n  </button>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Layout in Vue Component\nDESCRIPTION: Shows the structure of a custom layout component in Vue, which can include common elements like navigation bars and tabbars.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_5\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <view>\n    <!-- 这里可以写通用的布局，比如导航栏，tabbar等 -->\n    <!-- slot里面装的就是子页面的内容 -->\n    <slot />\n  </view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Dynamic UnoCSS Icons Implementation in TypeScript and HTML\nDESCRIPTION: Demonstrates how to implement dynamic UnoCSS Icons using TypeScript reactive variables and HTML class bindings.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst iconName = ref<string>('i-carbon-car')\nonLoad(() => {\n  setTimeout(() => {\n    iconName.value = 'i-carbon-user-avatar'\n  }, 1000)\n})\n```\n\nLANGUAGE: html\nCODE:\n```\n<view :class=\"iconName\" />\n```\n\n----------------------------------------\n\nTITLE: Adding uni-ui Configuration to pages.config.ts\nDESCRIPTION: Diff showing the addition of uni-ui related configuration to the easycom.custom section in pages.config.ts file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\neasycom: {\n  autoscan: true,\n  custom: {\n+   '^uni-(.*)': '@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue',\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: Adding uv-ui Configuration to pages.config.ts\nDESCRIPTION: Diff showing the addition of uv-ui related configuration to the easycom.custom section in pages.config.ts file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\neasycom: {\n  autoscan: true,\n  custom: {\n+   '^uv-(.*)': '@climblee/uv-ui/components/uv-$1/uv-$1.vue',\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: Image Upload Template Implementation in HTML for UniBest\nDESCRIPTION: HTML template for image upload functionality showing a button to trigger image selection and upload, along with conditional rendering for loading state and image display.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <view class=\"p-4 text-center\">\n    <wd-button @click=\"run\">选择图片并上传</wd-button>\n    <view v-if=\"loading\" class=\"text-blue h-10\">上传...</view>\n    <template v-else>\n      <view class=\"m-2\">上传后返回的图片地址：</view>\n      <view class=\"m-2\">{{ data }}</view>\n      <view class=\"h-80 w-full\">\n        <image v-if=\"data\" :src=\"data\" mode=\"scaleToFill\" />\n      </view>\n    </template>\n  </view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Implementing UnoCSS Icons in HTML\nDESCRIPTION: Shows how to use UnoCSS Icons by applying the appropriate class name. UnoCSS Icons support color changes through class names.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<view class=\"i-carbon-user-avatar text-red\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing SP-Editor Rich Text Component in Vue\nDESCRIPTION: Basic implementation of the SP-Editor rich text editor component from the Uni-App plugin marketplace. Shows the component with toolbar configuration and event handlers for initialization, input, image uploading, and content export.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/15-faq.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<template>\n  <view class=\"home\">\n    <view class=\"editor-box\">\n      <sp-editor\n        :toolbar-config=\"{\n          excludeKeys: ['direction', 'date', 'lineHeight', 'letterSpacing', 'listCheck'],\n          iconSize: '18px',\n        }\"\n        @init=\"initEditor\"\n        @input=\"inputOver\"\n        @upinImage=\"upinImage\"\n        @overMax=\"overMax\"\n        @addLink=\"addLink\"\n        @exportHtml=\"exportHtml\"\n      ></sp-editor>\n    </view>\n  </view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple State with reactive\nDESCRIPTION: Example of creating a simple state management solution using Vue's reactive API. Defines a count property and an increment method.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/9-state.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nexport const countStore = reactive({\n  count: 0,\n  increment() {\n    this.count++\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing uni-ui Icons in HTML\nDESCRIPTION: Demonstrates the usage of uni-ui Icons with different color settings. Note that uni-ui Icons color can only be set through the color attribute, and UnoCSS settings are ineffective.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<uni-icons type=\"contact\" size=\"30\"></uni-icons>\n<uni-icons type=\"contact\" size=\"30\" color=\"red\"></uni-icons>\n<uni-icons type=\"contact\" size=\"30\" class=\"text-green\"></uni-icons>\n<uni-icons type=\"contact\" size=\"30\" color=\"red\" class=\"text-green\"></uni-icons>\n```\n\n----------------------------------------\n\nTITLE: Configuring Home Page in Vue Component\nDESCRIPTION: Demonstrates how to set up the home page using the route-block syntax in a Vue component, including custom navigation style and title.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<route lang=\"json5\" type=\"home\">\n{\n  style: {\n    navigationStyle: 'custom',\n    navigationBarTitleText: '首页',\n  },\n}\n</route>\n<template>\n  <div>\n    <h1>欢迎使用 unibest</h1>\n    <h4>unibest 是最好的 uniapp 开发模板</h4>\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Implementing wot-ui Icons in HTML\nDESCRIPTION: Shows how to use wot-ui Icons with different color settings. wot-ui Icons color can be set through both the color attribute and UnoCSS, with the color attribute having higher priority.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<wd-icon name=\"add-circle\"></wd-icon>\n<wd-icon name=\"add-circle\" color=\"red\"></wd-icon>\n<wd-icon name=\"add-circle\" class=\"text-green\"></wd-icon>\n<wd-icon name=\"add-circle\" class=\"text-green\" color=\"red\"></wd-icon>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Layout in Vue Component\nDESCRIPTION: Demonstrates how to specify a custom layout for a page using the route-block syntax in a Vue component.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<route lang=\"json5\">\n{\n  layout: 'demo',\n  style: {\n    navigationBarTitleText: '关于',\n  },\n}\n</route>\n```\n\n----------------------------------------\n\nTITLE: Implementing iconfont Icons in HTML\nDESCRIPTION: Illustrates how to use iconfont Icons by applying the appropriate class names. iconfont Icons support color changes through class names.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<view class=\"m-4\">\n  <text mr-2>iconfont:</text>\n  <i class=\"iconfont icon-package text-red\"></i>\n  <i class=\"iconfont icon-chat text-red\"></i>\n  <i class=\"iconfont icon-my text-red\"></i>\n</view>\n```\n\n----------------------------------------\n\nTITLE: Adding uni-ui Types to tsconfig.json\nDESCRIPTION: Diff showing the addition of uni-ui type definitions to the compilerOptions.types array in tsconfig.json file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n\"types\": [\n    \"@dcloudio/types\",\n    \"@types/wechat-miniprogram\",\n+   \"@uni-helper/uni-ui-types\",\n    \"./components.d.ts\",\n    \"./global.d.ts\"\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring About Page in Vue Component\nDESCRIPTION: Shows how to set up a regular page (about page) using the route-block syntax in a Vue component, including navigation bar title.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/3-plugin.md#2025-04-23_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<route lang=\"json5\">\n{\n  style: {\n    navigationBarTitleText: '关于',\n  },\n}\n</route>\n<template>\n  <view>\n    <view>通过 `/pages/about` 来访问这个页面</view>\n  </view>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Importing iconfont CSS for uniapp\nDESCRIPTION: This CSS snippet imports the iconfont font face and defines the necessary classes for using iconfont icons in a uniapp project. It includes the font-face declaration and individual icon classes.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/other/iconfont/iconfont.md#2025-04-23_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n@font-face {\n  font-family: iconfont; /* Project id 4032028 */\n  src:\n    url('//at.alicdn.com/t/c/font_4032028_mbcuy517h6.woff2?t=1713685013355') format('woff2'),\n    url('//at.alicdn.com/t/c/font_4032028_mbcuy517h6.woff?t=1713685013355') format('woff'),\n    url('//at.alicdn.com/t/c/font_4032028_mbcuy517h6.ttf?t=1713685013355') format('truetype');\n}\n\n.iconfont {\n  font-family: iconfont !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-facebook::before {\n  content: '\\e87d';\n}\n\n.icon-twitter::before {\n  content: '\\e646';\n}\n\n.icon-telegram::before {\n  content: '\\f245';\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Random Real Image Placeholder in Vue\nDESCRIPTION: Code example for adding a random real image with dimensions of 400x200 pixels using the picsum.photos service with a random parameter to ensure unique images are displayed.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/other/image/image.md#2025-04-23_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<image src=\"https://picsum.photos/400/200?random=1\"></image>\n```\n\n----------------------------------------\n\nTITLE: Implementing Solid Color Placeholder Image in Vue\nDESCRIPTION: Code example for adding a solid color placeholder image with dimensions of 400x200 pixels, blue background (#3c9cff), and white text (#fff) using the placeholder.com service.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/other/image/image.md#2025-04-23_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<image src=\"https://via.placeholder.com/400x200.png/3c9cff/fff\"></image>\n```\n\n----------------------------------------\n\nTITLE: Adding Header Support to HTTP Utility Functions in TypeScript\nDESCRIPTION: Code diff showing modifications needed to add header support to httpGet and httpPost utility functions in versions prior to v2.6.2 of the UniBest framework.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/8-request.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * GET 请求\n * @param url 后台地址\n * @param query 请求query参数\n+ * @param header 请求头，默认为json格式\n * @returns\n */\nexport const httpGet = <T>(\n  url: string,\n  query?: Record<string, any>,\n+  header?: Record<string, any>,\n) => {\n  return http<T>({\n    url,\n    query,\n    method: 'GET',\n+    header,\n  })\n}\n\n/**\n * POST 请求\n * @param url 后台地址\n * @param data 请求body参数\n * @param query 请求query参数，post请求也支持query，很多微信接口都需要\n+ * @param header 请求头，默认为json格式\n * @returns\n */\nexport const httpPost = <T>(\n  url: string,\n  data?: Record<string, any>,\n  query?: Record<string, any>,\n+  header?: Record<string, any>,\n) => {\n  return http<T>({\n    url,\n    query,\n    data,\n    method: 'POST',\n+    header,\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Adding uv-ui Types to tsconfig.json\nDESCRIPTION: Diff showing the addition of uv-ui type definitions to the compilerOptions.types array in tsconfig.json file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n\"types\": [\n  \"@dcloudio/types\",\n  \"@types/wechat-miniprogram\",\n+ \"@ttou/uv-typings/shim\",\n+ \"@ttou/uv-typings/v2\",\n  \"./components.d.ts\",\n  \"./global.d.ts\"\n]\n```\n\n----------------------------------------\n\nTITLE: Removing wot-ui Types from tsconfig.json\nDESCRIPTION: Diff showing the removal of wot-design-uni type definitions from the compilerOptions.types array in tsconfig.json file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n\"types\": [\n    \"@dcloudio/types\",\n    \"@types/wechat-miniprogram\",\n-   \"wot-design-uni/global.d.ts\",\n    \"./components.d.ts\",\n    \"./global.d.ts\"\n]\n```\n\n----------------------------------------\n\nTITLE: Removing wot-ui Configuration from pages.config.ts\nDESCRIPTION: Diff showing the removal of wot-ui related configuration from the easycom.custom section in pages.config.ts file.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\neasycom: {\n    autoscan: true,\n    custom: {\n-     '^wd-(.*)': 'wot-design-uni/components/wd-$1/wd-$1.vue',\n    },\n},\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint and Prettier for Unibest Project in JavaScript\nDESCRIPTION: This configuration file sets up ESLint and Prettier rules for the Unibest project. It extends recommended configurations, defines custom rules, and specifies file patterns to ignore.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nmodule.exports = {\n  root: true,\n  env: {\n    browser: true,\n    node: true,\n  },\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n    'plugin:vue/vue3-recommended',\n    'plugin:prettier/recommended',\n  ],\n  parser: 'vue-eslint-parser',\n  parserOptions: {\n    parser: '@typescript-eslint/parser',\n    ecmaVersion: 2020,\n    sourceType: 'module',\n  },\n  plugins: ['@typescript-eslint'],\n  rules: {\n    'vue/multi-word-component-names': 'off',\n    '@typescript-eslint/no-explicit-any': 'off',\n    '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],\n    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',\n  },\n  ignorePatterns: ['**/libs/**'],\n}\n```\n\n----------------------------------------\n\nTITLE: Downgrading Uni-Pages Plugin to Fix JSON Parsing Error\nDESCRIPTION: Terminal command to resolve the '[plugin:uni:mp-using-component] Unexpected token S in JSON at position 208' error by downgrading the uni-pages plugin to version 0.2.20.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/15-faq.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @uni-helper/vite-plugin-uni-pages@0.2.20\n```\n\n----------------------------------------\n\nTITLE: Installing uv-ui Package with pnpm\nDESCRIPTION: Command to install the @climblee/uv-ui package using pnpm package manager.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\npnpm add @climblee/uv-ui\n```\n\n----------------------------------------\n\nTITLE: Installing uni-ui Package with pnpm\nDESCRIPTION: Command to install the @dcloudio/uni-ui package using pnpm package manager.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\npnpm add @dcloudio/uni-ui\n```\n\n----------------------------------------\n\nTITLE: Uninstalling wot-design-uni Package with pnpm\nDESCRIPTION: Command to uninstall the wot-design-uni package from the project using pnpm package manager.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/7-ui.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npnpm un wot-design-uni\n```\n\n----------------------------------------\n\nTITLE: Visitor Statistics Container Implementation in HTML\nDESCRIPTION: HTML markup for displaying site visitor statistics including page views, unique visitors, and per-page view counts using the busuanzi service.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/index.md#2025-04-23_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class='busuanzi_container'>\n  <span id=\"busuanzi_container_site_pv\">\n  本站总访问量<span id=\"busuanzi_value_site_pv\"></span>次\n  </span>\n  <span id=\"busuanzi_container_site_uv\">\n  本站总访客数<span id=\"busuanzi_value_site_uv\"></span>人\n  </span>\n  <span id=\"busuanzi_container_page_pv\">\n  本文总阅读量<span id=\"busuanzi_value_page_pv\"></span>次\n  </span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing uv-ui Icons in HTML\nDESCRIPTION: Illustrates the usage of uv-ui Icons with different color settings. Similar to uni-ui Icons, uv-ui Icons color can only be set through the color attribute, and UnoCSS settings are ineffective.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/base/5-icons.md#2025-04-23_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<uv-icon name=\"home\"></uv-icon>\n<uv-icon name=\"home\" color=\"red\"></uv-icon>\n<uv-icon name=\"home\" class=\"text-green\"></uv-icon>\n<uv-icon name=\"home\" color=\"red\" class=\"text-green\"></uv-icon>\n```\n\n----------------------------------------\n\nTITLE: ICP Registration Link Container\nDESCRIPTION: HTML markup for displaying the ICP registration number with a link to the official ICP registration verification website.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/index.md#2025-04-23_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"icp_container\">\n<a href=\"https://beian.miit.gov.cn/\" target=\"_blank\">粤ICP备2024160998号</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring VitePress Home Page Layout in YAML\nDESCRIPTION: This YAML configuration defines the structure and content for the home page of a VitePress documentation site. It includes a hero section with title, tagline, and action buttons, as well as a features section highlighting key aspects of the Unibest framework.\nSOURCE: https://github.com/feige996/unibest/blob/main/docs/index.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# https://vitepress.dev/reference/default-theme-home-page\nlayout: home\n\nhero:\n  name: 'unibest'\n  text: '最好的 uniapp 框架'\n  tagline: '开箱即用，提供舒适开发体验'\n  image:\n    src: /logo.svg\n    alt: unibest\n  actions:\n    - theme: brand\n      text: 介绍\n      link: /base/1-introduction\n    - theme: alt\n      text: 快速开始\n      link: /base/2-start\n    - theme: brand\n      text: 🥤 打赏\n      link: /advanced/rewards/rewards\n    - theme: alt\n      text: 常见问题\n      link: /base/14-faq\n\nfeatures:\n  - icon: 🎯\n    title: 多平台覆盖\n    details: 支持 微信小程序、H5、APP 和 支付宝小程序、钉钉小程序、抖音小程序等平台。\n  - icon: ⚡️\n    title: Vue3 + Vite5 + Pnpm + TypeScript\n    details: Vue3 + Vite5 + Pnpm + TypeScript 最强组合，飞一般的编码体验，同时支持 js 编写\n  - icon: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"#0065a9\" d=\"m29.01 5.03l-5.766-2.776a1.742 1.742 0 0 0-1.989.338L2.38 19.8a1.166 1.166 0 0 0-.08 1.647c.025.027.05.053.077.077l1.541 1.4a1.165 1.165 0 0 0 1.489.066L28.142 5.75A1.158 1.158 0 0 1 30 6.672v-.067a1.748 1.748 0 0 0-.99-1.575\"/><path fill=\"#007acc\" d=\"m29.01 26.97l-5.766 2.777a1.745 1.745 0 0 1-1.989-.338L2.38 12.2a1.166 1.166 0 0 1-.08-1.647c.025-.027.05-.053.077-.077l1.541-1.4A1.165 1.165 0 0 1 5.41 9.01l22.732 17.24A1.158 1.158 0 0 0 30 25.328v.072a1.749 1.749 0 0 1-.99 1.57\"/><path fill=\"#1f9cf0\" d=\"M23.244 29.747a1.745 1.745 0 0 1-1.989-.338A1.025 1.025 0 0 0 23 28.684V3.316a1.024 1.024 0 0 0-1.749-.724a1.744 1.744 0 0 1 1.989-.339l5.765 2.772A1.748 1.748 0 0 1 30 6.6v18.8a1.748 1.748 0 0 1-.991 1.576Z\"/></svg>\n    title: 拥抱宇宙最强编辑器 VS Code\n    details: 使用你最熟悉的 VS Code，无需切换编辑器，告别 HBuilderX 糟糕的编码体验\n  - icon: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><g stroke-width=\".13\"><path fill=\"#858585\" d=\"M17.007 23.491a6.52 6.52 0 1 1 13.04 0a6.52 6.52 0 0 1-13.04 0\"/><path fill=\"#ccc\" d=\"M17.007 8.51a6.52 6.52 0 0 1 13.04 0v5.867c0 .36-.292.652-.652.652H17.659a.652.652 0 0 1-.652-.652z\"/><path fill=\"#4d4d4d\" d=\"M14.993 23.491a6.52 6.52 0 1 1-13.04 0v-5.868c0-.36.292-.652.652-.652h11.736c.36 0 .652.292.652.652z\"/></g></svg>\n    title: UnoCSS + UnoCSS Icons\n    details: 高性能原子化 CSS 引擎 UnoCSS，还有 100000+ 图标为你所用，无需额外引入外链\n  - icon: 📦\n    title: 开箱即用的功能和组件\n    details: pinia、API自动导入、请求拦截、路由拦截、字体图标、SVG、UI库、多语言、自定义tabbar...\n```"
  }
]
[
  {
    "owner": "fortra",
    "repo": "impacket",
    "content": "TITLE: Installing Impacket using pipx\nDESCRIPTION: Command to install the latest stable release of Impacket using pipx. This is the recommended method for system-wide installation.\nSOURCE: https://github.com/fortra/impacket/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m pipx install impacket\n```\n\n----------------------------------------\n\nTITLE: Installing Impacket development version\nDESCRIPTION: Command to install the development version of Impacket from the local directory after downloading and extracting the package from the master branch.\nSOURCE: https://github.com/fortra/impacket/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m pipx install .\n```\n\n----------------------------------------\n\nTITLE: SMB 3.1.1 Support in Python\nDESCRIPTION: Added support for SMB 3.1.1 protocol in Client SMB Connections, enabling more secure and feature-rich SMB communications.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_5\n\nLANGUAGE: Python\nCODE:\n```\n# SMB 3.1.1 connection\nfrom impacket.smbconnection import SMBConnection\nconn = SMBConnection(host, preferredDialect=\"SMB3_1_1\")\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for Impacket\nDESCRIPTION: This snippet enumerates the required Python packages for the Impacket project. It includes libraries for various functionalities such as ASN.1 handling, cryptography, LDAP operations, and web interfaces. Some packages have specific version requirements or constraints.\nSOURCE: https://github.com/fortra/impacket/blob/master/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsetuptools\nsix\ncharset_normalizer\npyasn1>=0.2.3\npyasn1_modules\npycryptodomex\npyOpenSSL==24.0.0\nldap3>=2.5,!=2.5.2,!=2.5.0,!=2.6\nldapdomaindump>=0.9.0\nflask>=1.0\npyreadline3;sys_platform == 'win32'\n```\n\n----------------------------------------\n\nTITLE: Interactive LDAP Shell in Python\nDESCRIPTION: Added an interactive shell for performing LDAP operations, allowing manual execution of basic LDAP tasks.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\n# Interactive LDAP shell\nldap_shell = LDAPShell(connection)\nldap_shell.cmdloop()\n```\n\n----------------------------------------\n\nTITLE: Keytab File Handling in Python\nDESCRIPTION: Added implementation for working with keytab files, which store long-term keys for Kerberos authentication.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\n# Keytab file handling\nfrom impacket.krb5.keytab import Keytab\nkeytab = Keytab()\nkeytab.loadFile('file.keytab')\n```\n\n----------------------------------------\n\nTITLE: Importing and Exporting Kirbi Tickets in Python\nDESCRIPTION: New methods added to the CCache class for importing and exporting kirbi (KRB-CRED) formatted tickets.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n# New methods in CCache class\nimport_kirbi()\nexport_kirbi()\n```\n\n----------------------------------------\n\nTITLE: Enumerating VSS Snapshots in SMB Connections\nDESCRIPTION: Added FSCTL_SRV_ENUMERATE_SNAPSHOTS functionality to SMBConnection class for listing Volume Shadow Copy snapshots.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\n# Added to SMBConnection class\nFSCTL_SRV_ENUMERATE_SNAPSHOTS\n```\n\n----------------------------------------\n\nTITLE: Building Impacket Docker image\nDESCRIPTION: Docker command to build an Impacket image using the provided Dockerfile.\nSOURCE: https://github.com/fortra/impacket/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t \"impacket:latest\" .\n```\n\n----------------------------------------\n\nTITLE: Running Impacket Docker container\nDESCRIPTION: Docker command to run an interactive Impacket container based on the previously built image.\nSOURCE: https://github.com/fortra/impacket/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm \"impacket:latest\"\n```\n\n----------------------------------------\n\nTITLE: Installing Testing Requirements for Impacket\nDESCRIPTION: Command to install the necessary Python packages for testing Impacket, including tox and other requirements specified in the requirements-test.txt file.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m pip install tox -r requirements-test.txt\n```\n\n----------------------------------------\n\nTITLE: Running Remote Test Cases with pytest for Impacket\nDESCRIPTION: Command to run all remote test cases using pytest for the Impacket library.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npytest -m \"remote\"\n```\n\n----------------------------------------\n\nTITLE: Running Local Test Cases with pytest for Impacket\nDESCRIPTION: Command to run all local test cases (not marked as remote) using pytest for the Impacket library.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npytest -m \"not remote\"\n```\n\n----------------------------------------\n\nTITLE: Running pytest with specific remote configuration files\nDESCRIPTION: Commands demonstrating how to run pytest with different configuration files for testing against various Windows environments using the --remote-config parameter.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ pytest --remote-config=tests/dcetests-win2016.cfg\n$ pytest --remote-config=tests/dcetests-win2019.cfg\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Test Dependencies\nDESCRIPTION: Lists the required Python packages for testing the Impacket project. This includes pytest for running unit tests and pytest-cov for measuring code coverage during test execution.\nSOURCE: https://github.com/fortra/impacket/blob/master/requirements-test.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npytest\npytest-cov\n```\n\n----------------------------------------\n\nTITLE: Running Tests with tox for Impacket\nDESCRIPTION: Command to run all local test cases across multiple Python versions using tox for the Impacket library.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntox -- -m \"not remote\"\n```\n\n----------------------------------------\n\nTITLE: Measuring Test Coverage for Impacket\nDESCRIPTION: Command to run tests with coverage measurement using pytest-cov plugin for the Impacket library.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npytest --cov --cov-config=tox.ini\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test Cases with pytest for Impacket\nDESCRIPTION: Example command to run only LDAP-related test cases using pytest's keyword expressions for the Impacket library.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npytest -k \"ldap\"\n```\n\n----------------------------------------\n\nTITLE: Timestamped Logging in Python\nDESCRIPTION: Implementation of timestamped logging for improved debugging and event tracking.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\n# Example of timestamped logging\nlogging.basicConfig(format='%(asctime)s - %(message)s', level=logging.INFO)\n```\n\n----------------------------------------\n\nTITLE: Network Protocol Decoder Implementation\nDESCRIPTION: Reference to ImpactDecoder file implementing EAPOL, BOOTP, and DHCP packet decoders.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_8\n\nLANGUAGE: Python\nCODE:\n```\nimpacket/ImpactDecoder.py\n```\n\n----------------------------------------\n\nTITLE: LDAP String Filter Implementation\nDESCRIPTION: Reference to LDAP engine location implementing extensibleMatch string filter parsing and paging support.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_7\n\nLANGUAGE: Python\nCODE:\n```\nimpacket/ldap\n```\n\n----------------------------------------\n\nTITLE: Importing PAC Module in Kerberos Implementation\nDESCRIPTION: Reference to the new MS-PAC implementation file location in the Impacket library's Kerberos module.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_6\n\nLANGUAGE: Python\nCODE:\n```\nimpacket/krb5/pac.py\n```\n\n----------------------------------------\n\nTITLE: Structure Implementation Reference\nDESCRIPTION: Reference to the core structure implementation file used in NetBIOS layer improvements.\nSOURCE: https://github.com/fortra/impacket/blob/master/ChangeLog.md#2025-04-23_snippet_9\n\nLANGUAGE: Python\nCODE:\n```\nimpacket/structure.py\n```\n\n----------------------------------------\n\nTITLE: Installing Active Directory Domain Services\nDESCRIPTION: PowerShell command to install Active Directory Domain Services and management tools on the Windows Server for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-WindowsFeature -name AD-Domain-Services -IncludeManagementTools\n```\n\n----------------------------------------\n\nTITLE: Signing LDAP Service Certificate for LDAPS\nDESCRIPTION: Bash command to sign the LDAP service certificate with the CA for LDAPS configuration in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nopenssl x509 -req -days 365 -in ldapcert.csr -CA ca_public.crt -CAkey ca_private.key -extfile v3ext.txt -set_serial 01 -out ldapcert.crt\n```\n\n----------------------------------------\n\nTITLE: Creating LDAP Service Certificate Request\nDESCRIPTION: PowerShell command to create a certificate request for the LDAP service on the Domain Controller for LDAPS configuration in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_16\n\nLANGUAGE: powershell\nCODE:\n```\ncertreq -new request.inf ldapcert.csr\n```\n\n----------------------------------------\n\nTITLE: Installing Signed LDAP Certificate on Domain Controller\nDESCRIPTION: PowerShell command to install the signed LDAP service certificate on the Domain Controller for LDAPS configuration in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_18\n\nLANGUAGE: powershell\nCODE:\n```\ncertreq -accept ldapcert.crt\n```\n\n----------------------------------------\n\nTITLE: Importing CA Certificate on Domain Controller for LDAPS\nDESCRIPTION: PowerShell command to import the CA public certificate into the Domain Controller's certificate store for LDAPS configuration in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_15\n\nLANGUAGE: powershell\nCODE:\n```\nImport-Certificate -FilePath ca_public.crt -CertStoreLocation 'Cert:\\LocalMachine\\Root' -Verbose\n```\n\n----------------------------------------\n\nTITLE: Creating CA Private Key and Certificate for LDAPS\nDESCRIPTION: Bash commands to create a Certificate Authority (CA) private key and public certificate for configuring LDAPS on the Domain Controller for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nopenssl genrsa -aes256 -out ca_private.key 4096\nopenssl req -new -x509 -days 3650 -key ca_private.key -out ca_public.crt\n```\n\n----------------------------------------\n\nTITLE: Promoting Windows Server to Domain Controller\nDESCRIPTION: PowerShell commands to promote a Windows Server 2012 R2 to a Domain Controller with specified domain name and recovery password for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n$DomainName = \"<Domain Name>\"\n$NetBIOSName = \"<NetBIOS Name>\"\n$RecoveryPassword = \"<Recovery Password>\"\n$SecureRecoveryPassword = ConvertTo-SecureString $RecoveryPassword -AsPlainText -Force\nInstall-ADDSForest -DomainName $DomainName -InstallDns -SafeModeAdministratorPassword $SecureRecoveryPassword -DomainNetbiosName $NetBIOSName -SkipPreChecks\n```\n\n----------------------------------------\n\nTITLE: Creating Domain Admin User for Impacket Testing\nDESCRIPTION: PowerShell commands to create a new Domain User with administrative rights, enable AES Kerberos encryption, and add the user to the Domain Admins group for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\n$AdminUserName = \"<Admin User Name>\"\n$AdminAccountName = \"<Admin Account Name>\"\n$AdminUserPassword = \"<Admin User Password>\"\n$SecureAdminUserPassword = ConvertTo-SecureString $AdminUserPassword -AsPlainText -Force\nNew-ADUser -Name $AdminUserName -SamAccountName $AdminAccountName -UserPrincipalName $AdminAccountName@$DomainName -AccountPassword $SecureAdminUserPassword -Enabled $true -ChangePasswordAtLogon $false  -KerberosEncryptionType RC4,AES128,AES256\nAdd-ADGroupMember -Identity \"Domain Admins\" -Members <Account Name>\n```\n\n----------------------------------------\n\nTITLE: Configuring DHCP Server on Domain Controller\nDESCRIPTION: PowerShell commands to create DHCP administration groups, authorize the server, and set DNS credentials for the DHCP server used in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nnetsh dhcp add securitygroups\nRestart-Service dhcpserver\nAdd-DhcpServerInDC -DnsName <Server Name> -IPAddress <IP Address>\n$Credential = Get-Credential\nSet-DhcpServerDnsCredential -Credential $Credential -ComputerName <Server Name>\n```\n\n----------------------------------------\n\nTITLE: Installing DHCP Services on Domain Controller\nDESCRIPTION: PowerShell command to install DHCP services and management tools on the Domain Controller for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nInstall-WindowsFeature -name DHCP -IncludeManagementTools\n```\n\n----------------------------------------\n\nTITLE: Disabling Windows Firewall for Active Directory Testing\nDESCRIPTION: PowerShell command to disable the Windows Firewall on all profiles for the Domain Controller used in Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nSet-NetFirewallProfile -Profile Domain, Public, Private -Enabled False\n```\n\n----------------------------------------\n\nTITLE: Setting Administrator Password for Domain Controller\nDESCRIPTION: PowerShell commands to set a new password for the Administrator account on the Windows Server used for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\n$AdminPassword = \"<Admin Password>\"\n$Admin=[adsi](\"WinNT://$env:COMPUTERNAME/Administrator, user\")\n$Admin.psbase.invoke(\"setpassword\", $AdminPassword)\n```\n\n----------------------------------------\n\nTITLE: Enabling Remote Registry Service on Domain Controller\nDESCRIPTION: PowerShell command to start the Remote Registry service on the Domain Controller for Impacket testing.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\nStart-Service RemoteRegistry\n```\n\n----------------------------------------\n\nTITLE: Installing Mimilib service with Mimikatz\nDESCRIPTION: Command to install the Mimilib service on a target Domain Controller by running Mimikatz with elevated privileges.\nSOURCE: https://github.com/fortra/impacket/blob/master/TESTING.md#2025-04-23_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nmimikatz # rpc::server\n```"
  }
]
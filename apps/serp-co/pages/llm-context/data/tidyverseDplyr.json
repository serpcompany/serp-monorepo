[
  {
    "owner": "tidyverse",
    "repo": "dplyr",
    "content": "TITLE: Using group_by() for Grouping Data in R\nDESCRIPTION: Example of group_by() function which organizes data into groups for subsequent operations. It now preserves attributes unrelated to grouping and handles ordered factors correctly with .drop=FALSE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_25\n\nLANGUAGE: r\nCODE:\n```\ngroup_by(.drop = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Joining Tables with Named Variables in R dplyr\nDESCRIPTION: Example showing how to join tables using different variable names across tables using the by parameter in join functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_73\n\nLANGUAGE: R\nCODE:\n```\ninner_join(x, y, c(\"a\", \"b\", \"c\" = \"d\"))\n```\n\n----------------------------------------\n\nTITLE: Using group_split() to split data into groups\nDESCRIPTION: Examples of group_split() which is similar to base::split() but operates on existing groups or creates splits based on specified columns.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_44\n\nLANGUAGE: r\nCODE:\n```\nstarwars %>%\n  group_by(species, homeworld) %>%\n  group_split()\n\nstarwars %>%\n  group_split(species, homeworld)\n```\n\n----------------------------------------\n\nTITLE: Installing Development Version of dplyr from GitHub\nDESCRIPTION: Demonstrates how to install the development version of dplyr directly from GitHub using the pak package, useful for accessing unreleased bug fixes or features.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n# install.packages(\"pak\")\npak::pak(\"tidyverse/dplyr\")\n```\n\n----------------------------------------\n\nTITLE: Creating In-Memory SQLite Database in R\nDESCRIPTION: Demonstrates how to create a session-local in-memory SQLite database using src_memdb() and create a new table in that database using memdb_frame().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_62\n\nLANGUAGE: R\nCODE:\n```\nsrc_memdb()\nmemdb_frame()\n```\n\n----------------------------------------\n\nTITLE: Applying Functions to Columns with summarise_all() and mutate_all() in R\nDESCRIPTION: summarise_all() and mutate_all() apply a function to all columns, replacing summarise_each() and mutate_each().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_60\n\nLANGUAGE: R\nCODE:\n```\nsummarise_all()\nmutate_all()\n```\n\n----------------------------------------\n\nTITLE: Basic dplyr Operations with Star Wars Dataset\nDESCRIPTION: Demonstrates the core dplyr functions using the starwars dataset. Examples include filtering rows by species, selecting specific columns, calculating BMI, sorting by mass, and performing grouped summaries.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nlibrary(dplyr)\n\nstarwars %>% \n  filter(species == \"Droid\")\n#> # A tibble: 6 × 14\n#>   name   height  mass hair_color skin_color  eye_color birth_year sex   gender  \n#>   <chr>   <int> <dbl> <chr>      <chr>       <chr>          <dbl> <chr> <chr>   \n#> 1 C-3PO     167    75 <NA>       gold        yellow           112 none  masculi…\n#> 2 R2-D2      96    32 <NA>       white, blue red               33 none  masculi…\n#> 3 R5-D4      97    32 <NA>       white, red  red               NA none  masculi…\n#> 4 IG-88     200   140 none       metal       red               15 none  masculi…\n#> 5 R4-P17     96    NA none       silver, red red, blue         NA none  feminine\n#> # ℹ 1 more row\n#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#> #   vehicles <list>, starships <list>\n\nstarwars %>% \n  select(name, ends_with(\"color\"))\n#> # A tibble: 87 × 4\n#>   name           hair_color skin_color  eye_color\n#>   <chr>          <chr>      <chr>       <chr>    \n#> 1 Luke Skywalker blond      fair        blue     \n#> 2 C-3PO          <NA>       gold        yellow   \n#> 3 R2-D2          <NA>       white, blue red      \n#> 4 Darth Vader    none       white       yellow   \n#> 5 Leia Organa    brown      light       brown    \n#> # ℹ 82 more rows\n\nstarwars %>% \n  mutate(name, bmi = mass / ((height / 100)  ^ 2)) %>%\n  select(name:mass, bmi)\n#> # A tibble: 87 × 4\n#>   name           height  mass   bmi\n#>   <chr>           <int> <dbl> <dbl>\n#> 1 Luke Skywalker    172    77  26.0\n#> 2 C-3PO             167    75  26.9\n#> 3 R2-D2              96    32  34.7\n#> 4 Darth Vader       202   136  33.3\n#> 5 Leia Organa       150    49  21.8\n#> # ℹ 82 more rows\n\nstarwars %>% \n  arrange(desc(mass))\n#> # A tibble: 87 × 14\n#>   name      height  mass hair_color skin_color eye_color birth_year sex   gender\n#>   <chr>      <int> <dbl> <chr>      <chr>      <chr>          <dbl> <chr> <chr> \n#> 1 Jabba De…    175  1358 <NA>       green-tan… orange         600   herm… mascu…\n#> 2 Grievous     216   159 none       brown, wh… green, y…       NA   male  mascu…\n#> 3 IG-88        200   140 none       metal      red             15   none  mascu…\n#> 4 Darth Va…    202   136 none       white      yellow          41.9 male  mascu…\n#> 5 Tarfful      234   136 brown      brown      blue            NA   male  mascu…\n#> # ℹ 82 more rows\n#> # ℹ 5 more variables: homeworld <chr>, species <chr>, films <list>,\n#> #   vehicles <list>, starships <list>\n\nstarwars %>%\n  group_by(species) %>%\n  summarise(\n    n = n(),\n    mass = mean(mass, na.rm = TRUE)\n  ) %>%\n  filter(\n    n > 1,\n    mass > 50\n  )\n#> # A tibble: 9 × 3\n#>   species      n  mass\n#>   <chr>    <int> <dbl>\n#> 1 Droid        6  69.8\n#> 2 Gungan       3  74  \n#> 3 Human       35  81.3\n#> 4 Kaminoan     2  88  \n#> 5 Mirialan     2  53.1\n#> # ℹ 4 more rows\n```\n\n----------------------------------------\n\nTITLE: Error Handling in dplyr Verb Functions\nDESCRIPTION: Demonstrates how dplyr verbs (mutate, transmute, summarise, filter, arrange, select, slice) handle errors by providing informative error messages. Each example attempts to add a string to a number, which causes a non-numeric argument error that is enriched with contextual information.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nmutate(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\ntransmute(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\nsummarise(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\nsummarise(group_by(mtcars, cyl), 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\nfilter(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\narrange(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\nselect(mtcars, 1 + \"\")\n```\n\nLANGUAGE: r\nCODE:\n```\nslice(mtcars, 1 + \"\")\n```\n\n----------------------------------------\n\nTITLE: Using .by argument with summarise() in R\nDESCRIPTION: New approach using the experimental .by argument within summarise() to perform per-operation grouping. This eliminates the need for explicit ungrouping and preserves the original ordering of the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\nstarwars %>%\n  summarise(\n    mean_height = mean(height),\n    .by = c(species, homeworld)\n  )\n```\n\n----------------------------------------\n\nTITLE: Database Connection Example in R using DBI\nDESCRIPTION: Shows the recommended way to connect to a database using DBI directly instead of dplyr src functions. Creates an in-memory SQLite database, writes data to it, and creates a dplyr table reference.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_51\n\nLANGUAGE: R\nCODE:\n```\nlibrary(dplyr)\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\nDBI::dbWriteTable(con, \"mtcars\", mtcars)\n\nmtcars2 <- tbl(con, \"mtcars\")\nmtcars2\n```\n\n----------------------------------------\n\nTITLE: Using top_frac() for proportional row selection\nDESCRIPTION: Example of the top_frac() function, which is a shorthand for selecting the top proportion of rows using top_n() with a proportional calculation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_40\n\nLANGUAGE: r\nCODE:\n```\ntop_frac(data, proportion)\n```\n\n----------------------------------------\n\nTITLE: Implementing case_when() for Vectorized Conditional Statements in R\nDESCRIPTION: case_when() provides a general vectorised if + else if functionality.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_54\n\nLANGUAGE: R\nCODE:\n```\ncase_when()\n```\n\n----------------------------------------\n\nTITLE: Demonstrating if_any() and if_all() Consistency in R\nDESCRIPTION: Example showing the consistent behavior of if_any() and if_all() with any() and all() functions, including handling of empty inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nif_any()\nif_all()\n```\n\n----------------------------------------\n\nTITLE: Creating Data Frames with data_frame() in R dplyr\nDESCRIPTION: Shows usage of data_frame() function which creates data frames without coercing column types or modifying column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_75\n\nLANGUAGE: R\nCODE:\n```\ndata_frame()\n```\n\n----------------------------------------\n\nTITLE: Using relocate() to Move Columns in R\nDESCRIPTION: Shows the relocate() verb which makes it easy to move columns around within a data frame, with support for renaming the relocated columns in the same operation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_30\n\nLANGUAGE: r\nCODE:\n```\nrelocate()\n```\n\n----------------------------------------\n\nTITLE: Using select() for Column Selection in R\nDESCRIPTION: Example of select() function which allows you to subset and rename columns, now with support for handling duplicate variables when renaming to match a grouping variable name.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_23\n\nLANGUAGE: r\nCODE:\n```\nselect()\n```\n\n----------------------------------------\n\nTITLE: Using group_map() for group-wise operations\nDESCRIPTION: Example of group_map() which iterates on groups of a grouped data frame, allowing operations on each group separately and returning a combined result.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_45\n\nLANGUAGE: r\nCODE:\n```\nmtcars %>%\n  group_by(cyl) %>%\n  group_map(~ head(.x, 2L))\n```\n\n----------------------------------------\n\nTITLE: Using do() with Named Arguments for Model Storage in R\nDESCRIPTION: Example of using do() with a named argument to store models as list-variables in the output data frame. This approach is useful for model fitting and analysis by group.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_78\n\nLANGUAGE: R\nCODE:\n```\nlibrary(dplyr)\nmodels <- mtcars %>% group_by(cyl) %>% do(lm = lm(mpg ~ wt, data = .))\nmodels %>% summarise(rsq = summary(lm)$r.squared)\n```\n\n----------------------------------------\n\nTITLE: Using c_across() for Column Selection in R\nDESCRIPTION: Example of c_across() function which allows you to select multiple columns and combine their values, similar to across() but returns a vector rather than operating on each column separately.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_18\n\nLANGUAGE: r\nCODE:\n```\nc_across()\n```\n\n----------------------------------------\n\nTITLE: Using select() with Named Arguments in R\nDESCRIPTION: Demonstrates the enhanced power of select() in dplyr, allowing renaming of existing variables using named arguments and selection of variables based on their names using new functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_84\n\nLANGUAGE: R\nCODE:\n```\nselect(new_name = old_name, starts_with(\"prefix\"), ends_with(\"suffix\"), contains(\"substring\"), matches(\"pattern\"), num_range(\"x\", 1:5))\n```\n\n----------------------------------------\n\nTITLE: Using top_n() Function with Negative Values in R\nDESCRIPTION: Example showing how to select bottom n values with top_n() by passing a negative value to the n parameter, allowing for selection of smallest values instead of largest.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_70\n\nLANGUAGE: R\nCODE:\n```\ntop_n(x, -n)\n```\n\n----------------------------------------\n\nTITLE: Using across() in dplyr verbs for column-wise operations in R\nDESCRIPTION: Demonstrates the new across() function that can be used inside summarise(), mutate(), and other verbs to apply a function to a selection of columns. This allows for more flexible and concise column-wise operations.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_35\n\nLANGUAGE: R\nCODE:\n```\nacross()\n```\n\n----------------------------------------\n\nTITLE: Using c_across() for row-wise operations in dplyr in R\nDESCRIPTION: Introduces the new c_across() function for use in summarise() and mutate() with row-wise data frames. It simplifies operations like computing row-wise means of numeric variables.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_36\n\nLANGUAGE: R\nCODE:\n```\nc_across()\n```\n\n----------------------------------------\n\nTITLE: Using if_else() for Type-Safe Conditional Operations in R\nDESCRIPTION: if_else() is a vectorised if statement that is stricter, faster, and more predictable than ifelse(). In SQL it translates to a CASE statement.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_55\n\nLANGUAGE: R\nCODE:\n```\nif_else()\n```\n\n----------------------------------------\n\nTITLE: Using case_when() with Default Value in R\nDESCRIPTION: Demonstrates the new .default argument in case_when() for specifying a default value more explicitly and readably than using TRUE ~. This approach is recommended as future versions may deprecate unsafe recycling of LHS inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\nx <- c(\"little\", \"unknown\", \"small\", \"missing\", \"large\")\n\ncase_when(\n  x %in% c(\"little\", \"small\") ~ \"one\",\n  x %in% c(\"big\", \"large\") ~ \"two\",\n  x %in% c(\"missing\", \"unknown\") ~ NA\n)\n```\n\n----------------------------------------\n\nTITLE: Combining Data with union_all() in R and SQL\nDESCRIPTION: union_all() method maps to UNION ALL for SQL sources, bind_rows() for data frames/tbl_dfs, and combine() for vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_59\n\nLANGUAGE: R\nCODE:\n```\nunion_all()\n```\n\n----------------------------------------\n\nTITLE: Using nest_join() to create nested data structures\nDESCRIPTION: Example of nest_join() which creates a list column of matching rows, equivalent to inner_join followed by unnest from tidyr.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_42\n\nLANGUAGE: r\nCODE:\n```\nband_members %>% nest_join(band_instruments)\n```\n\n----------------------------------------\n\nTITLE: Scoped Filter with Lambda Example in R\nDESCRIPTION: Shows how to use scoped filter variants with functions and purrr-like lambda expressions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_49\n\nLANGUAGE: r\nCODE:\n```\nmtcars %>% filter_at(vars(hp, vs), ~ . %% 2 == 0)\n```\n\n----------------------------------------\n\nTITLE: Cross-join using empty by parameter\nDESCRIPTION: Example showing how to perform a cross-join between two tables by specifying an empty character vector for the by parameter, a new feature in dplyr joins.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_39\n\nLANGUAGE: r\nCODE:\n```\nleft_join(df1, df2, by = character())\n```\n\n----------------------------------------\n\nTITLE: Using bind_cols() with Name Repair in R\nDESCRIPTION: Shows the bind_cols() function with the .name_repair argument which is passed to vctrs::vec_cbind() to control how duplicate column names are handled during binding.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_32\n\nLANGUAGE: r\nCODE:\n```\nbind_cols(.name_repair= )\n```\n\n----------------------------------------\n\nTITLE: Installing dplyr Package in R\nDESCRIPTION: Shows how to install the dplyr package, either as part of the tidyverse collection or individually. Installation is performed using the install.packages() function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n# The easiest way to get dplyr is to install the whole tidyverse:\ninstall.packages(\"tidyverse\")\n\n# Alternatively, install just dplyr:\ninstall.packages(\"dplyr\")\n```\n\n----------------------------------------\n\nTITLE: Using group_trim() to drop unused factor levels\nDESCRIPTION: Example of group_trim() which drops unused levels of factors that are used as grouping variables, helping to clean up grouped data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_41\n\nLANGUAGE: r\nCODE:\n```\ndata %>% group_by(factor_column) %>% group_trim()\n```\n\n----------------------------------------\n\nTITLE: Example dplyr rows_append usage\nDESCRIPTION: Example of the new rows_append() function for inserting arbitrary rows while preserving data type, mentioned in documentation but code not shown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_15\n\n\n\n----------------------------------------\n\nTITLE: Testing Group Output Messages\nDESCRIPTION: Demonstrates how summarise() handles grouped output and provides appropriate messages about grouping structure.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\ntibble(x = 1, y = 2) %>% \n  group_by(x, y) %>% \n  summarise()\n```\n\n----------------------------------------\n\nTITLE: Demonstrating slice_*() Error Handling in R\nDESCRIPTION: Example showing improved error handling in slice_*() functions when n argument is not named and dplyr:: prefix is used.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_*()\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() with Pre-grouped Data\nDESCRIPTION: Demonstrates reframe() behavior with pre-grouped data frames\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nout <- reframe(gdf, x = mean(x))\n```\n\n----------------------------------------\n\nTITLE: Using if_any() and if_all() for Filtering in R\nDESCRIPTION: Shows the if_any() and if_all() predicates that can be used with filter() to test whether any or all columns satisfy a condition. These functions accept a column selection and predicate.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_19\n\nLANGUAGE: r\nCODE:\n```\nif_any()\nif_all()\n```\n\n----------------------------------------\n\nTITLE: Using pick() with Empty Selection in R\nDESCRIPTION: Example demonstrating pick() returning a 1 row, 0 column tibble when ... evaluates to an empty selection, improving compatibility with tidyverse recycling rules.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\npick()\n```\n\n----------------------------------------\n\nTITLE: Using filter() with Inline Expressions in R\nDESCRIPTION: Example of filter() function with inlined if_any() and if_all() expressions, which improves performance with grouped data frames by optimizing the filtering operation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_21\n\nLANGUAGE: r\nCODE:\n```\nfilter()\n```\n\n----------------------------------------\n\nTITLE: Using add_count() for Counting in R\nDESCRIPTION: Shows the add_count() function which adds a column with the count of observations for each group. It's a wrapper around mutate() and count().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_20\n\nLANGUAGE: r\nCODE:\n```\nadd_count()\n```\n\n----------------------------------------\n\nTITLE: Customizing Column Names in dplyr summarise_each and mutate_each in R\nDESCRIPTION: Shows how to force inclusion of both function and variable names in the output of summarise_each() and mutate_each().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_68\n\nLANGUAGE: R\nCODE:\n```\nsummarise_each(mtcars, funs(mean = mean), everything())\n```\n\n----------------------------------------\n\nTITLE: Preserving Grouping Variables in R dplyr select()\nDESCRIPTION: Tests the select() function's behavior with grouped data frames, ensuring that grouping variables are preserved and a message is displayed when they are not explicitly selected.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/select.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nres <- select(df, x)\n```\n\nLANGUAGE: R\nCODE:\n```\nexpect_equal(df %>% select(a = c), tibble(b = 2, a = 3) %>% group_by(b))\n```\n\nLANGUAGE: R\nCODE:\n```\nexpect_equal(df %>% select(b = c), tibble(a = 1, b = 3) %>% group_by(a))\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() Recycling Error\nDESCRIPTION: Demonstrates error handling when attempting to recycle vectors of incompatible lengths within reframe()\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nreframe(df, x = 1:2, y = 3:5)\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() Multiple Group Columns\nDESCRIPTION: Shows usage of reframe() with multiple grouping columns\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nout <- reframe(df, x = mean(x), .by = c(a, b))\n```\n\n----------------------------------------\n\nTITLE: Using across() with Formula Environment in R\nDESCRIPTION: Shows how across() uses the formula environment when inlining formulas, allowing proper variable resolution in the context where the formula was created.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_17\n\nLANGUAGE: r\nCODE:\n```\nacross()\n```\n\n----------------------------------------\n\nTITLE: Group By Factor Levels Example in R\nDESCRIPTION: Demonstrates the new .drop argument in group_by() function which allows grouping based on factor levels, including empty groups when .drop=FALSE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_46\n\nLANGUAGE: r\nCODE:\n```\n# 3 groups\ntibble(\n  x = 1:2,\n  f = factor(c(\"a\", \"b\"), levels = c(\"a\", \"b\", \"c\"))\n) %>%\n  group_by(f, .drop = FALSE)\n\n# the order of the grouping variables matter\ndf <- tibble(\n  x = c(1,2,1,2),\n  f = factor(c(\"a\", \"b\", \"a\", \"b\"), levels = c(\"a\", \"b\", \"c\"))\n)\ndf %>% group_by(f, x, .drop = FALSE)\ndf %>% group_by(x, f, .drop = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Using between() with Custom Output Type in R\nDESCRIPTION: Example of using the new ptype argument in between() function to specify desired output type, useful for ordered factors and complex types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nbetween(ptype = )\n```\n\n----------------------------------------\n\nTITLE: Using inner_join() with keep Parameter in R\nDESCRIPTION: Example of inner_join() function with the new keep parameter that allows controlling which duplicate join columns to keep in the output, for consistency with other joining functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_29\n\nLANGUAGE: r\nCODE:\n```\ninner_join(keep= )\n```\n\n----------------------------------------\n\nTITLE: Testing bind_cols() Name Repair Functionality in R\nDESCRIPTION: Tests how bind_cols() handles column name conflicts when binding data frames with identical column names. It demonstrates automatic name repair by appending suffixes to duplicate column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-cols.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nbound <- bind_cols(df, df)\n```\n\n----------------------------------------\n\nTITLE: Collecting Warnings in Ungrouped dplyr Operations with last_dplyr_warnings()\nDESCRIPTION: Demonstrates how warnings are generated in ungrouped data frames when using mutate() with a function that produces warnings. The warnings are collected and can be retrieved using last_dplyr_warnings().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\n# Ungrouped\ndf %>% mutate(x = f()) %>% invisible()\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings()\n```\n\n----------------------------------------\n\nTITLE: Testing Group By Error Messages\nDESCRIPTION: Tests various error scenarios in group_by() and ungroup() operations including unknown columns, invalid arguments, and non-existent variables\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-by.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\ndf <- tibble(x = 1, y = 2)\n(expect_error(df %>% group_by(unknown)))\n(expect_error(df %>% ungroup(x)))\n(expect_error(df %>% group_by(x, y) %>% ungroup(z)))\n(expect_error(df %>% group_by(z = a + 1)))\n```\n\n----------------------------------------\n\nTITLE: Testing Various Error Scenarios in mutate() (R)\nDESCRIPTION: This snippet tests multiple error scenarios in mutate(), including referencing removed columns, using functions as values, incompatible vector types across groups, and size mismatches. It ensures proper error messages are generated for each case.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\ntbl <- tibble(x = 1:2, y = 1:2)\n(expect_error(tbl %>% mutate(y = NULL, a = sum(y))))\n(expect_error(tbl %>% group_by(x) %>% mutate(y = NULL, a = sum(y))))\n(expect_error(tibble(x = 1) %>% mutate(y = mean)))\n\n# ... (additional error scenarios)\n```\n\n----------------------------------------\n\nTITLE: Using dplyr_col_select() in R\nDESCRIPTION: Shows the dplyr_col_select() function which is used internally for column selection operations, with improvements to preserve attributes for bare data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_24\n\nLANGUAGE: r\nCODE:\n```\ndplyr_col_select()\n```\n\n----------------------------------------\n\nTITLE: Replacing Values with NA using na_if() in R\nDESCRIPTION: na_if() makes it easy to replace a certain value with an NA. In SQL it is translated to NULL_IF.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_56\n\nLANGUAGE: R\nCODE:\n```\nna_if()\n```\n\n----------------------------------------\n\nTITLE: Using setequal() with Compatible Data Frames in R\nDESCRIPTION: Example demonstrating the new requirement for setequal() to use compatible input data frames, similar to other set methods like setdiff() or intersect().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nsetequal()\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for across(), if_any(), and if_all() in R\nDESCRIPTION: This extensive set of snippets tests various error messages for `across()`, `if_any()`, and `if_all()` functions in different contexts, including invalid arguments and non-existent columns.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(across(where(is.numeric), 42))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(across(y, mean))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(res = across(where(is.numeric), 42))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(z = across(y, mean))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(res = sum(if_any(where(is.numeric), 42)))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(res = sum(if_all(~ mean(.x))))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(res = sum(if_any(~ mean(.x))))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(across()))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(c_across()))\n```\n\n----------------------------------------\n\nTITLE: Validating vector input requirement in lag() function in R\nDESCRIPTION: Tests that lag() correctly requires x to be a vector and provides a clear error message when a non-vector is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nlag(environment())\n```\n\n----------------------------------------\n\nTITLE: Testing rejection of deprecated or unknown arguments\nDESCRIPTION: Tests that all join functions properly reject deprecated or unknown arguments (like 'on' instead of 'by') with clear error messages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\ninner_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nleft_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nright_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nfull_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nnest_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nanti_join(df1, df2, on = \"a\")\n```\n\nLANGUAGE: r\nCODE:\n```\nsemi_join(df1, df2, on = \"a\")\n```\n\n----------------------------------------\n\nTITLE: Tidyeval Expression Interpolation in R with dplyr\nDESCRIPTION: Demonstrates the new tidyeval approach for non-standard evaluation in dplyr, showing how to interpolate values in contexts where dplyr usually works with expressions. Uses the quo() function to create a quoted expression and the !! operator to unquote it.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_52\n\nLANGUAGE: r\nCODE:\n```\nmy_var <- quo(homeworld)\n\nstarwars %>%\n  group_by(!!my_var) %>%\n  summarise_at(vars(height:mass), mean, na.rm = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecation Warnings\nDESCRIPTION: Demonstrates deprecation warnings for non-summary results that return multiple rows, suggesting the use of reframe() instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, x = which(x < 3))\n```\n\n----------------------------------------\n\nTITLE: Selecting Top Rows with top_n() Using Dynamic Expression in R\nDESCRIPTION: This snippet demonstrates using top_n() function with a dynamic expression n() * 0.5 to select the top half of rows from the mtcars dataset. The function automatically selects 'carb' as the ordering variable.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/top-n.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nres1 <- top_n(mtcars, n() * 0.5)\n```\n\n----------------------------------------\n\nTITLE: Group Data Access Examples in R\nDESCRIPTION: Demonstrates how to access grouping metadata using the new group_data() and group_rows() functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_50\n\nLANGUAGE: r\nCODE:\n```\n# the grouping metadata, as a tibble\ngroup_by(starwars, homeworld) %>%\n  group_data()\n\n# the indices\ngroup_by(starwars, homeworld) %>%\n  group_data() %>%\n  pull(.rows)\n\ngroup_by(starwars, homeworld) %>%\n  group_rows()\n```\n\n----------------------------------------\n\nTITLE: Checking Numeric Equality with Tolerance using near() in R\nDESCRIPTION: near(x, y) is a helper for abs(x - y) < tol, useful for comparing floating point numbers.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_57\n\nLANGUAGE: R\nCODE:\n```\nnear(x, y)\n```\n\n----------------------------------------\n\nTITLE: Using filter() with Multiple TRUE Conditions in R\nDESCRIPTION: Example showing that filter(x, TRUE, TRUE) simply returns x without modification, demonstrating the handling of multiple TRUE conditions in the filter function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_72\n\nLANGUAGE: R\nCODE:\n```\nfilter(x, TRUE, TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing mutate() with pick() on rowwise data\nDESCRIPTION: This snippet tests the behavior of mutate() with pick() on rowwise data, expecting an error due to size mismatch.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nmutate(rdf, z = pick(x, y))\n```\n\n----------------------------------------\n\nTITLE: Testing automatic common column detection in nest_join\nDESCRIPTION: Shows that nest_join automatically detects common columns when 'by' is not specified, emitting a message about the columns being joined.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nout <- nest_join(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Using slice_sample() with weight_by in R\nDESCRIPTION: Shows the slice_sample() function which randomly selects rows from a data frame, with optional weighting using the weight_by parameter to control selection probability.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_26\n\nLANGUAGE: r\nCODE:\n```\nslice_sample(weight_by= )\n```\n\n----------------------------------------\n\nTITLE: Using across() in filter() with logical vectors\nDESCRIPTION: Example demonstrating how across() can be used in filter() to apply logical tests to multiple columns. This was enabled by the enhancement to handle data frame results when all columns are logical vectors by reducing them with &.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_38\n\nLANGUAGE: r\nCODE:\n```\nfilter(data, across(c(col1, col2, col3), ~ . > 0))\n```\n\n----------------------------------------\n\nTITLE: Collecting Warnings in Grouped dplyr Operations with last_dplyr_warnings()\nDESCRIPTION: Shows how warnings are generated and collected when working with grouped data. When multiple warnings occur in different groups, dplyr summarizes them and provides access to all warnings through last_dplyr_warnings().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\n# Grouped\ndf %>% group_by(id) %>% mutate(x = f()) %>% invisible()\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings()\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific Warnings from dplyr Operations in R\nDESCRIPTION: This snippet shows how to access specific warnings from a collection of dplyr warnings. It retrieves warnings from different operations in the pipeline and displays their contents.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\nwarnings <- last_dplyr_warnings(Inf)\nwarnings[[1]]\n```\n\nLANGUAGE: R\nCODE:\n```\nwarnings[[33]]\n```\n\nLANGUAGE: R\nCODE:\n```\nwarnings[[65]]\n```\n\nLANGUAGE: R\nCODE:\n```\nwarnings[[97]]\n```\n\n----------------------------------------\n\nTITLE: Using group_by() with summarise() in R\nDESCRIPTION: Traditional approach to grouped operations in dplyr, where group_by() is used before summarise() to calculate mean height by species and homeworld. This approach requires explicit ungrouping afterward.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nstarwars %>%\n  group_by(species, homeworld) %>%\n  summarise(mean_height = mean(height))\n```\n\n----------------------------------------\n\nTITLE: Translating R Functions to SQL in dplyr\nDESCRIPTION: Shows how various R functions are translated to their SQL equivalents in dplyr SQL translation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_65\n\nLANGUAGE: R\nCODE:\n```\nis.na()\nif()\nis.null()\npmin()\npmax()\n```\n\n----------------------------------------\n\nTITLE: Testing mutate() Behavior with Zero Groups (R)\nDESCRIPTION: This snippet tests the behavior of mutate() when dealing with zero groups. It expects a warning about no non-missing arguments and returns an empty tibble.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, y = max(x))\n```\n\n----------------------------------------\n\nTITLE: Testing mutate() with pick_wrapper() on grouped data\nDESCRIPTION: This snippet tests the behavior of mutate() with a custom pick_wrapper() function on grouped data, attempting to select a non-existent grouping column.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, y = pick_wrapper(g))\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with One-Column Matrices in R\nDESCRIPTION: Shows that dplyr's filter() allows matrices with 1 column but issues a deprecation warning. Tests both regular and grouped data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(df, matrix(c(TRUE, FALSE), nrow = 2))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(gdf, matrix(c(TRUE, FALSE), nrow = 2))\n```\n\n----------------------------------------\n\nTITLE: Using bind_rows() in R\nDESCRIPTION: Shows the bind_rows() function which combines data frames by row, handling issues with list columns and using vctrs coercion rules for combining different column types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_22\n\nLANGUAGE: r\nCODE:\n```\nbind_rows()\n```\n\n----------------------------------------\n\nTITLE: Testing type compatibility errors in filtering joins\nDESCRIPTION: Tests error reporting when trying to join on columns with incompatible types in filtering joins, showing detailed error messages with the column types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(semi_join(x, y, by = join_by(a == b))))\n```\n\n----------------------------------------\n\nTITLE: Testing Broken '[' Implementation in R dplyr select()\nDESCRIPTION: Tests the behavior of select() when the underlying '[' operator implementation is broken or returns unexpected results. Checks for appropriate error messages in various scenarios.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/select.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(df1, 1:2)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(df1, 0)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(df1, 2)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(df1, 1)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(df2, 1)))\n```\n\n----------------------------------------\n\nTITLE: Selecting Columns with Predicate Functions using select_if() in R\nDESCRIPTION: select_if() allows selection of columns based on a predicate function. Only compatible with local sources.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_61\n\nLANGUAGE: R\nCODE:\n```\nselect_if()\n```\n\n----------------------------------------\n\nTITLE: Filter with Preserve Groups Example in R\nDESCRIPTION: Demonstrates the new .preserve argument in filter() which controls whether to keep or recalculate the grouping structure.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_48\n\nLANGUAGE: r\nCODE:\n```\ndf <- tibble(\n  x = c(1,2,1,2),\n  f = factor(c(\"a\", \"b\", \"a\", \"b\"), levels = c(\"a\", \"b\", \"c\"))\n) %>%\n  group_by(x, f, .drop = FALSE)\n\ndf %>% filter(x == 1)\ndf %>% filter(x == 1, .preserve = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Collecting Warnings in Main dplyr Verbs in R\nDESCRIPTION: This snippet demonstrates how warnings are collected and displayed when using multiple dplyr verbs in a pipeline. It includes filter, arrange, mutate, and summarise operations, each generating warnings.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\ninvisible(mtcars %>% rowwise() %>% filter(f()) %>% arrange(f()) %>% mutate(a = f()) %>%\n  summarise(b = f()))\n```\n\n----------------------------------------\n\nTITLE: Testing values_arg Validation in vec_case_when() in R\nDESCRIPTION: Verifies that the values_arg parameter must be a string, not another data type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(1), values_arg = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages in Column-wise Operations\nDESCRIPTION: Series of tests demonstrating error handling for invalid column selection, group operations, and function argument validation in dplyr's column-wise operations.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-mutate.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(mutate_at(tibble(), \"test\", ~1)))\n```\n\nLANGUAGE: R\nCODE:\n```\ntbl <- tibble(gr1 = rep(1:2, 4), gr2 = rep(1:2, each = 4), x = 1:8)\ntbl <- group_by(tbl, gr1)\n(expect_error(summarise_at(tbl, vars(gr1), mean)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(mutate_all(mtcars, length, 0, 0)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(mutate_all(mtcars, mean, na.rm = TRUE, na.rm = TRUE)))\n```\n\n----------------------------------------\n\nTITLE: Using coalesce() with Data Frames in R\nDESCRIPTION: Example of coalesce() function which returns the first non-missing value for each element, now with proper support for data frames as well as vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_33\n\nLANGUAGE: r\nCODE:\n```\ncoalesce()\n```\n\n----------------------------------------\n\nTITLE: Testing bind_cols() with Unnamed List Elements in R\nDESCRIPTION: Demonstrates how bind_cols() handles a list of unnamed vectors or scalars. The function automatically generates names for the unnamed columns with a standard pattern using '...n' format.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-cols.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ndf <- bind_cols(list(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Testing Incompatible Data Frames Error in dplyr Set Operations\nDESCRIPTION: This snippet tests the error handling when incompatible data frames are passed to dplyr set operations functions. It checks if the functions properly detect and report column number mismatches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nintersect(df1, df2)\nunion(df1, df2)\nunion_all(df1, df2)\nsetdiff(df1, df2)\nsymdiff(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Using dplyr Verbs with Named Arguments in R\nDESCRIPTION: Demonstrates how filter() now throws an error when supplied with named arguments, which is usually a typo.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_67\n\nLANGUAGE: R\nCODE:\n```\nfilter(df, x = 1)  # Incorrect\nfilter(df, x == 1) # Correct\n```\n\n----------------------------------------\n\nTITLE: Demonstrating group_by() Default Behavior in R\nDESCRIPTION: Shows that group_by() now defaults to add = FALSE, setting grouping variables rather than adding to existing ones. This change aligns with expected behavior for most users.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_80\n\nLANGUAGE: R\nCODE:\n```\ngroup_by(add = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing Return Value Validation\nDESCRIPTION: Tests error handling for invalid return values including environments, incompatible vectors, and recycling issues.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\ntibble(x = 1, y = c(1, 2, 2), z = runif(3)) %>% \n  summarise(a = rlang::env(a = 1))\n```\n\n----------------------------------------\n\nTITLE: Testing get_slice_size() input validation in R\nDESCRIPTION: These snippets test the input validation in get_slice_size() function, checking for mutually exclusive arguments and invalid input types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\nget_slice_size(n = 1, prop = 1)\n```\n\nLANGUAGE: R\nCODE:\n```\nget_slice_size(n = \"a\")\n```\n\nLANGUAGE: R\nCODE:\n```\nget_slice_size(prop = \"a\")\n```\n\n----------------------------------------\n\nTITLE: Collecting Warnings in Rowwise dplyr Operations with last_dplyr_warnings()\nDESCRIPTION: Demonstrates warning collection when using rowwise() operations in dplyr. Warnings are generated for each row where problematic operations occur and can be later inspected with last_dplyr_warnings().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n# Rowwise\ndf %>% rowwise() %>% mutate(x = f()) %>% invisible()\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings()\n```\n\n----------------------------------------\n\nTITLE: Handling Missing Values in Hybrid Functions in R\nDESCRIPTION: Demonstrates that hybrid versions of min, max, mean, var, sd, and sum now handle the na.rm argument in dplyr. This should result in significant performance improvements for these functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_83\n\nLANGUAGE: R\nCODE:\n```\nmin(..., na.rm = TRUE)\nmax(..., na.rm = TRUE)\nmean(..., na.rm = TRUE)\nvar(..., na.rm = TRUE)\nsd(..., na.rm = TRUE)\nsum(..., na.rm = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing Vector Length Validation in rename_with()\nDESCRIPTION: Demonstrates error handling when .fn returns a vector of incorrect length (3 instead of expected 2).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nrename_with(df, fn)\n```\n\n----------------------------------------\n\nTITLE: Testing is_compatible Function for Different Incompatibility Cases\nDESCRIPTION: This snippet tests the is_compatible function, which generates useful messages for different cases of data frame incompatibility. It covers various scenarios like type mismatches and column differences.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\ncat(is_compatible(tibble(x = 1), 1))\ncat(is_compatible(tibble(x = 1), tibble(x = 1, y = 2)))\ncat(is_compatible(tibble(x = 1, y = 1), tibble(y = 1, x = 1), ignore_col_order = FALSE))\ncat(is_compatible(tibble(x = 1), tibble(y = 1)))\ncat(is_compatible(tibble(x = 1), tibble(x = 1L), convert = FALSE))\ncat(is_compatible(tibble(x = 1), tibble(x = \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Demonstrating case_when() Error Handling in R\nDESCRIPTION: Example showing improved error handling in case_when() function when conditions are arrays.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ncase_when()\n```\n\n----------------------------------------\n\nTITLE: Using cummean() for Cumulative Mean in R\nDESCRIPTION: Shows the cummean() function which calculates cumulative means of a vector, with a fix for the previous off-by-one indexing problem.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_34\n\nLANGUAGE: r\nCODE:\n```\ncummean()\n```\n\n----------------------------------------\n\nTITLE: Using count() and tally() as Generic Functions in R\nDESCRIPTION: Shows the count() and tally() functions which are now generic, allowing them to work with various data types beyond just data frames through method dispatch.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_28\n\nLANGUAGE: r\nCODE:\n```\ncount()\ntally()\n```\n\n----------------------------------------\n\nTITLE: Using summarize() as an Alias for summarise() in R\nDESCRIPTION: Shows that summarize() has been added as an alias for summarise() in dplyr, accommodating different spelling preferences among users.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_85\n\nLANGUAGE: R\nCODE:\n```\nsummarize()\n```\n\n----------------------------------------\n\nTITLE: Testing .size Parameter in case_when() Function (R)\nDESCRIPTION: This snippet verifies that the .size parameter is correctly passed through and enforced in the case_when() function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\ncase_when(TRUE ~ 1:2, .size = 3)\n```\n\n----------------------------------------\n\nTITLE: Testing group_modify() Error With Incorrect Function Signature\nDESCRIPTION: Tests that group_modify() throws an appropriate error when the provided function doesn't accept at least two arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-map.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% group_modify(head1)))\n```\n\n----------------------------------------\n\nTITLE: Using group_nest() for creating nested tibbles\nDESCRIPTION: Examples of group_nest() which is similar to tidyr::nest() but focuses on the variables to nest by instead of the nested columns.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_43\n\nLANGUAGE: r\nCODE:\n```\nstarwars %>%\n  group_by(species, homeworld) %>%\n  group_nest()\n\nstarwars %>%\n  group_nest(species, homeworld)\n```\n\n----------------------------------------\n\nTITLE: Using Mutating Joins with relationship Argument in R\nDESCRIPTION: Example of using the new relationship argument in mutating joins to enforce specific relationship constraints between keys of x and y.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\nleft_join(relationship = \"one-to-one\")\n```\n\n----------------------------------------\n\nTITLE: Testing Implicit Group Variable Addition in Select\nDESCRIPTION: Demonstrates that select() automatically adds missing grouping variables when used after group_by()\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-by.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nres <- mtcars %>% group_by(vs) %>% select(mpg)\n```\n\n----------------------------------------\n\nTITLE: Testing .default Behavior in case_when() Function (R)\nDESCRIPTION: This snippet tests the behavior of the .default parameter in case_when(). It verifies that .default is not part of recycling and must have a size of 1.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ncase_when(FALSE ~ 1L, .default = 2:5)\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Unmatched Parameter Validation in R\nDESCRIPTION: These snippets test the validation of the 'unmatched' parameter in join_rows(), checking for correct error messages with invalid inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, unmatched = 1)\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, unmatched = \"foo\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, type = \"left\", unmatched = character())\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, type = \"left\", unmatched = c(\"drop\", \"error\"))\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, type = \"inner\", unmatched = character())\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, type = \"inner\", unmatched = c(\"drop\", \"error\", \"error\"))\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, type = \"inner\", unmatched = c(\"drop\", \"dr\"))\n```\n\n----------------------------------------\n\nTITLE: Selecting Top Fraction of Rows with top_frac() in R\nDESCRIPTION: This snippet demonstrates using top_frac() function to select the top 50% of rows from the mtcars dataset. It's equivalent to using top_n() with n() * 0.5, but provides a more intuitive interface for selecting by fraction.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/top-n.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nres2 <- top_frac(mtcars, 0.5)\n```\n\n----------------------------------------\n\nTITLE: Accessing Current Group Data with cur_data_all() in R\nDESCRIPTION: Example showing the usage of the cur_data_all() function which returns all data including grouping variables, similar to cur_data() but with grouping variables included.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_16\n\nLANGUAGE: r\nCODE:\n```\ncur_data_all()\n```\n\n----------------------------------------\n\nTITLE: Testing Size Zero Conditions Input in vec_case_when() in R\nDESCRIPTION: Tests that when conditions have size zero, values must also have size zero, otherwise an error is thrown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(logical()), list(1:2))\n```\n\n----------------------------------------\n\nTITLE: Testing 'by' typo detection in slice() for R\nDESCRIPTION: This snippet tests the error message when 'by' is used instead of '.by' in slice(), suggesting the correct argument name.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\nslice(df, by = x)\n```\n\n----------------------------------------\n\nTITLE: Testing pick() in user-defined function\nDESCRIPTION: This snippet tests the behavior of pick() when called from a user-defined function within mutate(), attempting to select non-existent columns.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, d = my_pick())\n```\n\n----------------------------------------\n\nTITLE: Using bind_rows() with ID Parameter in R\nDESCRIPTION: Example of using bind_rows() with the .id parameter to create a new column that indicates the source data frame for each row when combining multiple data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_71\n\nLANGUAGE: R\nCODE:\n```\nbind_rows(list_of_data_frames, .id = \"source\")\n```\n\n----------------------------------------\n\nTITLE: Truncating Warnings Display with last_dplyr_warnings(n)\nDESCRIPTION: Shows how to limit the number of warnings displayed using the n parameter in last_dplyr_warnings(). This is useful when many warnings are generated and you want to see only the first few.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\n# Truncated (1 more)\ndf %>% rowwise() %>% mutate(x = f())\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings(n = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Relationship Parameter Validation in R\nDESCRIPTION: These snippets test the validation of the 'relationship' parameter in join_rows(), checking for correct error messages with invalid inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, relationship = 1)\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, relationship = \"none\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, relationship = \"warn-many-to-many\")\n```\n\n----------------------------------------\n\nTITLE: Installing Development Version of Package using R and devtools\nDESCRIPTION: This code snippet demonstrates how to install the development version of a package from GitHub using the devtools library in R. It's provided as a convenience for package maintainers to test against the latest development version.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/email.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n# install.packages(\"devtools\")\ndevtools::install_github(\"{{my_github}}\")\n```\n\n----------------------------------------\n\nTITLE: Using count() with .drop Argument in R\nDESCRIPTION: Example showing the usage of the .drop argument in the count() function, which is now better documented.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\ncount(.drop = )\n```\n\n----------------------------------------\n\nTITLE: Testing Cross Join Error for Duplicate Columns in R dplyr\nDESCRIPTION: Demonstrates how cross_join() checks for and handles duplicate column names in the input dataframes. The function throws an error when it detects non-unique column names in the input dataframe 'x'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cross.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncross_join(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Testing argument validation in join_mutate function\nDESCRIPTION: Tests various invalid arguments to join_mutate function, showing error messages for invalid 'by', 'suffix', 'na_matches', and 'keep' parameters.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\njoin_mutate(df, df, by = 1, type = \"left\")\n```\n\nLANGUAGE: r\nCODE:\n```\njoin_mutate(df, df, by = \"x\", type = \"left\", suffix = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\njoin_mutate(df, df, by = \"x\", type = \"left\", na_matches = \"foo\")\n```\n\nLANGUAGE: r\nCODE:\n```\njoin_mutate(df, df, by = \"x\", type = \"left\", keep = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling in dplyr's relocate() Function\nDESCRIPTION: This code snippet tests the error handling of the relocate() function when both .before and .after arguments are supplied. It's expected to throw an error indicating that both arguments can't be used together.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/relocate.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nrelocate(df, .before = 1, .after = 1)\n```\n\n----------------------------------------\n\nTITLE: Vectorized Value Recoding with recode() in R\nDESCRIPTION: recode() provides a vectorised equivalent to switch() for recoding values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_58\n\nLANGUAGE: R\nCODE:\n```\nrecode()\n```\n\n----------------------------------------\n\nTITLE: Using coalesce() Function in R\nDESCRIPTION: The new coalesce() function finds the first non-missing value from a set of vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_53\n\nLANGUAGE: R\nCODE:\n```\ncoalesce()\n```\n\n----------------------------------------\n\nTITLE: Testing Type Computation with .default in case_when() Function (R)\nDESCRIPTION: This snippet checks if .default is correctly included in common type computation, ensuring type consistency across all arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ncase_when(TRUE ~ 1L, .default = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing Multiple Column Type Differences in R with dplyr (Issue #1819)\nDESCRIPTION: Demonstrates how all_equal() returns multiple error messages when comparing data frames with multiple column type differences, referencing issue #1819.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nall_equal(tibble(a = 1, b = 2), tibble(a = 1L, b = 2L))\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Unmatched Missing Values Handling in R\nDESCRIPTION: These snippets test if join_rows() always errors on unmatched missing values for various join types and na_matches settings.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = NA), type = \"left\", unmatched = \"error\", na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = NA), data.frame(x = NA), type = \"left\", unmatched = \"error\", na_matches = \"never\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = NA), type = \"nest\", unmatched = \"error\", na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = NA), data.frame(x = NA), type = \"nest\", unmatched = \"error\", na_matches = \"never\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = NA), data.frame(x = 1), type = \"right\", unmatched = \"error\", na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = NA), data.frame(x = NA), type = \"right\", unmatched = \"error\", na_matches = \"never\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = c(1, NA)), type = \"inner\", unmatched = \"error\", na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = c(1, NA)), type = \"inner\", unmatched = c(\"drop\", \"error\"), na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, NA)), data.frame(x = 1), type = \"inner\", unmatched = \"error\", na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, NA)), data.frame(x = 1), type = \"inner\", unmatched = c(\"error\", \"drop\"), na_matches = \"na\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = NA), data.frame(x = NA), type = \"inner\", unmatched = \"error\", na_matches = \"never\")\n```\n\n----------------------------------------\n\nTITLE: Testing Non-recyclable Conditions in vec_case_when() in R\nDESCRIPTION: Verifies that conditions of different sizes that can't be recycled to match each other will throw an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(c(TRUE, FALSE), c(TRUE, FALSE, TRUE)), list(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Using Chain Operator in R dplyr\nDESCRIPTION: Demonstrates the deprecated %.% operator being replaced by the %>% pipe operator for chaining operations.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_76\n\nLANGUAGE: R\nCODE:\n```\n%.% # deprecated\n%>% # new pipe operator\n```\n\n----------------------------------------\n\nTITLE: Testing pick() in filter() with invalid selection\nDESCRIPTION: This snippet tests the behavior of pick() when used within filter() with an invalid tidy-selection, attempting to select a non-existent column.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\nfilter(df, pick(x, a))\n```\n\n----------------------------------------\n\nTITLE: Testing deprecation warning for cross join via empty by parameter\nDESCRIPTION: Tests that using by=character() to perform a cross join issues a deprecation warning, suggesting cross_join() as the alternative.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_14\n\nLANGUAGE: r\nCODE:\n```\nout <- left_join(df1, df2, by = character())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- semi_join(df1, df2, by = character())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- nest_join(df1, df2, by = character())\n```\n\n----------------------------------------\n\nTITLE: Testing validate_grouped_df Error Messages in R\nDESCRIPTION: Tests various error scenarios for validate_grouped_df() function, including invalid .rows column, incorrect groups attribute format, and out of bounds indices.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/grouped-df.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df1)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(group_data(df1)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df2)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df3)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df4)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df5)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df6, check_bounds = TRUE)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df7, check_bounds = TRUE)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df8, check_bounds = TRUE)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df10)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(validate_grouped_df(df11)))\n```\n\n----------------------------------------\n\nTITLE: Using row_number() Without Arguments in R\nDESCRIPTION: Shows that row_number() can be called without arguments in dplyr, returning the same result as 1:n(). This provides a convenient way to number rows in a data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_82\n\nLANGUAGE: R\nCODE:\n```\nrow_number()\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with .size override validation\nDESCRIPTION: Tests that the .size parameter correctly validates input sizes and throws an error when a vector can't be recycled to the specified size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\ncoalesce(x, 1:2, .size = vec_size(x))\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Unmatched Parameter in R\nDESCRIPTION: This snippet tests the join_rows() function's ability to handle the 'unmatched' parameter for inner joins, expecting an error when unmatched rows are found.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(c(1, 3), c(1, 2), type = \"inner\", unmatched = c(\"drop\", \"error\"))\n```\n\n----------------------------------------\n\nTITLE: Validating Default Column Selection in rows_check_by() in R\nDESCRIPTION: This snippet tests that rows_check_by() correctly selects the first column from the source dataframe when no 'by' parameter is specified. It verifies that an appropriate message is displayed for the automatic selection.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_20\n\nLANGUAGE: R\nCODE:\n```\nby <- rows_check_by(by = NULL, y = y)\n```\n\n----------------------------------------\n\nTITLE: Connecting to MonetDB in R using dplyr\nDESCRIPTION: Demonstrates how to create a connection to a MonetDB database using the src_monetdb() function in dplyr. This allows dplyr to work with MonetDB tables.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_81\n\nLANGUAGE: R\nCODE:\n```\nsrc_monetdb()\n```\n\n----------------------------------------\n\nTITLE: Testing ptype override with incompatible values in vec_case_match\nDESCRIPTION: Tests that when a ptype is specified, all values must be compatible with it. This shows how the ptype parameter overrides the common type derived from values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1:2, haystacks = list(1), values = list(1.5), ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Testing unmatched parameter with empty by in joins\nDESCRIPTION: Tests that joining with by=character() technically respects the unmatched parameter, throwing an error when unmatched is set to 'error'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_12\n\nLANGUAGE: r\nCODE:\n```\nleft_join(df1, df2, by = character(), unmatched = \"error\")\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Values Argument with Named NULL in vec_case_when() in R\nDESCRIPTION: Verifies custom values_arg behavior with named NULL value errors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_36\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(x = NULL), values_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Using summarise() with NULL Results in R\nDESCRIPTION: Example of summarise() function which now silently ignores NULL results, allowing more flexible summarization operations without unexpected errors or warnings.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_27\n\nLANGUAGE: r\nCODE:\n```\nsummarise()\n```\n\n----------------------------------------\n\nTITLE: Using Namespaced join_by() in R\nDESCRIPTION: Example of using join_by() with namespaced helper functions, allowing syntax like join_by(dplyr::between(x, lower, upper)).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\njoin_by(dplyr::between(x, lower, upper))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Propagation in across() with Custom Error Function in R\nDESCRIPTION: These snippets test how errors from a custom function are propagated through `across()` in both `summarise()` and `mutate()` contexts.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nerror_fn <- (function(.) {\n  if (all(. > 10)) {\n    rlang::abort(\"too small\", call = call(\"error_fn\"))\n  } else {\n    42\n  }\n})\n(expect_error(tibble(x = 1:10, y = 11:20) %>% summarise(across(everything(), error_fn))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1:10, y = 11:20) %>% mutate(across(everything(), error_fn))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1:10, y = 11:20) %>% summarise(force(across(everything(), error_fn)))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1:10, y = 11:20) %>% mutate(force(across(everything(), error_fn)))))\n```\n\n----------------------------------------\n\nTITLE: Comparing Data Frames with Different Factor Levels in R using dplyr\nDESCRIPTION: Demonstrates how all_equal() identifies differences when comparing data frames that contain factors with different levels, showing output for both comparison directions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2)\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df2, df1)\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() One-to-Many Relationship Errors in R\nDESCRIPTION: This snippet tests if join_rows() gives a meaningful error message for a violation of a one-to-many relationship.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(c(1, 1), 1, relationship = \"one-to-many\")\n```\n\n----------------------------------------\n\nTITLE: Testing default_arg Validation in vec_case_when() in R\nDESCRIPTION: Ensures that the default_arg parameter must be a string, not another data type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(1), default_arg = 1)\n```\n\n----------------------------------------\n\nTITLE: Setting lifecycle verbosity options in R\nDESCRIPTION: Shows how to control the verbosity of lifecycle warnings using options(). This allows users to manage the frequency and type of deprecation warnings they receive.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_37\n\nLANGUAGE: R\nCODE:\n```\noptions(lifecycle_verbosity = x)\n```\n\n----------------------------------------\n\nTITLE: Testing locale_to_chr_proxy_collate with missing stringi package in R\nDESCRIPTION: This code demonstrates the error message when trying to use a locale identifier for sorting without having the stringi package installed. It shows that stringi >= 1.5.3 is required for this functionality.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nlocale_to_chr_proxy_collate(\"fr\", has_stringi = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing distinct() with a single unknown column in R\nDESCRIPTION: Tests the error generated when using distinct() with one unknown column 'aa' along with an existing column 'x'. The function should throw an error indicating that 'aa' is not found in the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/distinct.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ndf <- tibble(g = c(1, 2), x = c(1, 2))\n(expect_error(df %>% distinct(aa, x)))\n```\n\n----------------------------------------\n\nTITLE: Testing ptype Override in vec_case_when() in R\nDESCRIPTION: Verifies that the ptype parameter overrides the type of values and enforces type conversion.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_16\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(FALSE, TRUE), list(1, 2), ptype = character())\n```\n\n----------------------------------------\n\nTITLE: Example dplyr slice_min/max ordering\nDESCRIPTION: Example of using slice_min() and slice_max() with multiple order_by variables via data.frame/tibble input, mentioned in documentation but code not shown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_14\n\n\n\n----------------------------------------\n\nTITLE: Validating rows_insert() Data Type Casting in R\nDESCRIPTION: This code tests the error handling when rows_insert() encounters data type mismatches between the source and target dataframes. It checks for proper error messages when casting leads to loss of precision.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_insert(x, y, \"key\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Non-existent Join Columns\nDESCRIPTION: Shows that join_cols() errors when specified join columns don't exist in the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = as_join_by(c(\"aaa\", \"bbb\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Argument Names with Named Inputs in vec_case_when() in R\nDESCRIPTION: Verifies that custom argument names work correctly with named inputs in error messages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_25\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = 1.5), list(1), conditions_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Invalid by$y in as_join_by\nDESCRIPTION: Shows that as_join_by() requires by$y to evaluate to a character vector, not a numeric value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = as_join_by(list(x = \"1\", \"2\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Join Columns\nDESCRIPTION: Demonstrates that join_cols() requires unique join columns in the specification.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = as_join_by(c(\"x\", \"x\", \"x\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Column Overwriting in mutate() (R)\nDESCRIPTION: This snippet tests error handling when attempting to overwrite column active bindings in mutate() for regular, grouped, and already grouped data frames. It expects errors when trying to modify columns using <<-.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, y = {\n  x <<- 2\n  x\n})\n\nmutate(df, .by = g, y = {\n  x <<- 2\n  x\n})\n\nmutate(gdf, y = {\n  x <<- 2\n  x\n})\n```\n\n----------------------------------------\n\nTITLE: Testing Type Compatibility with Custom Default Argument in vec_case_when() in R\nDESCRIPTION: Verifies that default values must have compatible types with other values, with custom error reporting.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(FALSE), list(1L), default = \"x\", default_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Using nth() Function with Negative Indices in R\nDESCRIPTION: Example of using the nth() function with negative indices to select values from the end of a vector, where nth(x, -2) selects the 2nd value from the end of x.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_69\n\nLANGUAGE: R\nCODE:\n```\nnth(x, -2)\n```\n\n----------------------------------------\n\nTITLE: Example dplyr rename with all_of()\nDESCRIPTION: Example usage of all_of() and any_of() for renaming columns using a named character vector, mentioned in documentation but code not shown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_13\n\n\n\n----------------------------------------\n\nTITLE: Testing Grouped Data Frame Selection with mutate_if\nDESCRIPTION: Tests mutation behavior with grouped data frames, specifically converting factor columns to character type while handling grouping variables.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-mutate.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nout <- mutate_if(gdf, is.factor, as.character)\n```\n\n----------------------------------------\n\nTITLE: Handling Non-Syntactic Grouping Variables in R dplyr select()\nDESCRIPTION: Tests the select() function's ability to preserve non-syntactic grouping variable names when selecting columns from a grouped data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/select.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ndf <- tibble(`a b` = 1L) %>% group_by(`a b`) %>% select()\n```\n\n----------------------------------------\n\nTITLE: Testing Error with NA in suffix Parameter\nDESCRIPTION: Shows that join_cols() does not allow NA values in the suffix parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_15\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = join_by(x), suffix = c(\"\", NA))\n```\n\n----------------------------------------\n\nTITLE: Testing order_by parameter size validation in nth() function in R\nDESCRIPTION: Tests that validate the order_by parameter must have the same size as the input vector x. The function throws an error when the sizes don't match.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nnth(1:5, n = 1L, order_by = 1:2)\n```\n\nLANGUAGE: r\nCODE:\n```\nnth(1:5, n = 6L, order_by = 1:2)\n```\n\n----------------------------------------\n\nTITLE: Testing pick() in filter() with incorrect usage\nDESCRIPTION: This snippet tests the behavior of pick() when used incorrectly within filter(), attempting to access a column from the pick() result.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\nfilter(df, pick(x, y)$x)\n```\n\n----------------------------------------\n\nTITLE: Testing NULL Values Restriction in vec_case_when() in R\nDESCRIPTION: Ensures that NULL values are not allowed in the values list.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_33\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(NULL))\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Unmatched Row Error Messages in R\nDESCRIPTION: These snippets test if join_rows() provides meaningful error messages for unmatched rows in various join types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, 2)), data.frame(x = c(3, 1)), type = \"left\", unmatched = \"error\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, 2)), data.frame(x = c(3, 1)), type = \"nest\", unmatched = \"error\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, 2)), data.frame(x = c(3, 1)), type = \"right\", unmatched = \"error\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, 2)), data.frame(x = 1), type = \"inner\", unmatched = \"error\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = c(1, 2)), data.frame(x = 1), type = \"inner\", unmatched = c(\"error\", \"drop\"))\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = c(1, 2)), type = \"inner\", unmatched = \"error\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(data.frame(x = 1), data.frame(x = c(1, 2)), type = \"inner\", unmatched = c(\"drop\", \"error\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecation Warning for recode_factor() Function in R\nDESCRIPTION: This snippet tests if the recode_factor() function properly signals that it is superseded and recommends using case_match() with a factor type instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/recode.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ncatch_cnd(recode_factor(\"a\", a = \"A\"))\n```\n\n----------------------------------------\n\nTITLE: Equivalent data.table syntax for grouped operations\nDESCRIPTION: The data.table equivalent syntax for performing grouped calculations, showing how to calculate mean height by species and homeworld using data.table's by parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nstarwars[, .(mean_height = mean(height)), by = .(species, homeworld)]\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for across() with .unpack in R\nDESCRIPTION: This snippet tests error handling when using `across()` with the `.unpack` argument in `mutate()`. It checks for errors when unpacking results in non-unique column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, across(x:y, fn, .unpack = \"{outer}\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Invalid suffix Parameter Length\nDESCRIPTION: Demonstrates that join_cols() requires suffix to be a character vector of exactly length 2.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_14\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = join_by(x), suffix = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing unsupported .after argument in dplyr's transmute() function\nDESCRIPTION: Verifies that transmute() raises an appropriate error when the .after argument is provided. The test confirms the exact error message indicating that this argument is not supported in transmute().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/transmute.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(transmute(mtcars, cyl2 = cyl, .after = disp)))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Override Parameter in vec_case_when() in R\nDESCRIPTION: Verifies that the size parameter overrides the conditions sizes and enforces that constraint.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_14\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(1), size = 5)\n```\n\n----------------------------------------\n\nTITLE: Testing do() with Mixed Named and Unnamed Arguments in R\nDESCRIPTION: Tests the error message when mixing named and unnamed arguments in do(). The function should indicate that arguments must be consistently named or unnamed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-do.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% do(x = 1, 2)))\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() Recycling Error with Groups\nDESCRIPTION: Shows error handling when recycling vectors with incompatible lengths while using group operations\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nreframe(df, x = 1:2, y = 3:5, .by = g)\n```\n\n----------------------------------------\n\nTITLE: Testing recycling rules in consecutive_id() function (R)\nDESCRIPTION: This snippet tests the consecutive_id() function's behavior when provided with arguments of different lengths, expecting an error due to recycling rules violation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/consecutive-id.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nconsecutive_id(1:3, 1:4)\n```\n\n----------------------------------------\n\nTITLE: Default Group By Behavior in R\nDESCRIPTION: Shows the default group_by() behavior which drops empty groups from the result.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_47\n\nLANGUAGE: r\nCODE:\n```\ntibble(\n    x = 1:2,\n    f = factor(c(\"a\", \"b\"), levels = c(\"a\", \"b\", \"c\"))\n  ) %>%\n    group_by(f)\n```\n\n----------------------------------------\n\nTITLE: Using between() Function in R\nDESCRIPTION: Example of the between() function which tests if values fall within a specified range. Note that it is not vectorized, meaning the bounds cannot be different for each element.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_31\n\nLANGUAGE: r\nCODE:\n```\nbetween()\n```\n\n----------------------------------------\n\nTITLE: Testing filter() Error Messages in Various Scenarios\nDESCRIPTION: Comprehensive test suite for error messages produced by dplyr's filter() function in different scenarios including grouped data, rowwise data, size mismatches, and invalid inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% filter(1:n())))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% filter(1:n())))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(data.frame(x = 1:2), matrix(c(TRUE, FALSE, TRUE, FALSE),\nnrow = 2))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% filter(c(TRUE, FALSE))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% rowwise(Species) %>% filter(c(TRUE, FALSE))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% filter(c(TRUE, FALSE))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% filter(data.frame(c(TRUE, FALSE)))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% rowwise() %>% filter(data.frame(c(TRUE, FALSE)))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% filter(data.frame(c(TRUE, FALSE)))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tibble(x = 1) %>% filter(c(TRUE, TRUE))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% filter(data.frame(Sepal.Length > 3,\n1:n()))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% filter(data.frame(Sepal.Length > 3, 1:n()))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(mtcars %>% filter(`_x`)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(mtcars %>% group_by(cyl) %>% filter(`_x`)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(mtcars, x = 1)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(mtcars, y > 2, z = 3)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(mtcars, TRUE, x = 1)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(ts(1:10))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tibble() %>% filter(stop(\"{\"))))\n```\n\nLANGUAGE: r\nCODE:\n```\ndata.frame(x = 1, y = 1) %>% filter(across(everything(), ~ .x > 0))\n```\n\nLANGUAGE: r\nCODE:\n```\ndata.frame(x = 1, y = 1) %>% filter(data.frame(x > 0, y > 0))\n```\n\n----------------------------------------\n\nTITLE: Error Handling in R dplyr select()\nDESCRIPTION: Tests the error messages produced by select() when given invalid inputs, such as non-numeric arguments to binary operators.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/select.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(select(mtcars, 1 + \"\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Type Compatibility of Values in vec_case_when() in R\nDESCRIPTION: Verifies that values passed to vec_case_when() must have compatible types for automatic casting, otherwise an error is thrown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(FALSE, TRUE), list(1, \"x\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Rename During Ungroup Operation\nDESCRIPTION: Verifies that renaming variables while using ungroup() throws an appropriate error\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-by.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nungroup(gdf, g2 = g)\n```\n\n----------------------------------------\n\nTITLE: Testing distinct() with .data pronoun for unknown column in R\nDESCRIPTION: Tests the error generated when using distinct() with the .data pronoun to reference an unknown column 'aa'. The function should throw an error indicating that 'aa' is not found in the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/distinct.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% distinct(.data$aa)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Key in Y Table Join Conditions\nDESCRIPTION: Shows that join_cols() prevents using the same column from the right-side table in both an inequality (<) and equality (==) condition.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"xl\", \"xu\"), \"x\", by = join_by(xl < x, xu == x))\n```\n\n----------------------------------------\n\nTITLE: Testing incompatible .by and .preserve arguments in slice() for R\nDESCRIPTION: This snippet tests the error handling when both .by and .preserve arguments are supplied to slice(), which is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nslice(df, .by = x, .preserve = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing slice_sample Weight Size Validation\nDESCRIPTION: Tests that slice_sample() properly errors when the weight_by vector size doesn't match the data frame size\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_19\n\nLANGUAGE: r\nCODE:\n```\nslice_sample(df, n = 2, weight_by = 1:6)\n```\n\n----------------------------------------\n\nTITLE: Using do() with Unnamed Arguments for Group Operations in R\nDESCRIPTION: Example of using do() with an unnamed argument to apply arbitrary functions to each group. The result should be a data frame, and the '.' pronoun refers to data in the current group.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_79\n\nLANGUAGE: R\nCODE:\n```\nmtcars %>% group_by(cyl) %>% do(head(., 1))\n```\n\n----------------------------------------\n\nTITLE: Testing n_distinct() with non-vector input in R\nDESCRIPTION: Tests the error message when n_distinct() is called with a function as an argument. The function requires vectors as inputs, not functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/n-distinct.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nn_distinct(mean)\n```\n\n----------------------------------------\n\nTITLE: Testing Named Inputs in Error Messages for vec_case_when() in R\nDESCRIPTION: Tests that named inputs are properly referenced in error messages for invalid condition types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_24\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = 1.5), list(1))\n```\n\n----------------------------------------\n\nTITLE: Testing Renaming Restrictions in rename_with()\nDESCRIPTION: Shows error handling when attempting to rename variables in .cols parameter, which is not allowed in this context.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nrename_with(df, toupper, .cols = c(y = x))\n```\n\n----------------------------------------\n\nTITLE: Testing group_modify() Error When Not Returning a Data Frame\nDESCRIPTION: Tests that group_modify() throws an appropriate error when the function doesn't return a data frame object.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-map.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(mtcars %>% group_by(cyl) %>% group_modify(~10)))\n```\n\n----------------------------------------\n\nTITLE: Testing slice helper functions for explicit 'n' naming and empty ellipsis in R\nDESCRIPTION: These snippets test the error handling in slice helper functions when 'n' is not explicitly named or when extra arguments are provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\nslice_head(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_tail(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_min(df, x, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(df, x, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_sample(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_head(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_tail(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_min(df, x, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_max(df, x, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\ndplyr::slice_sample(df, 5)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_head(df, 5, 2)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_tail(df, 5, 2)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_min(df, x, 5, 2)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(df, x, 5, 2)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_sample(df, 5, 2)\n```\n\n----------------------------------------\n\nTITLE: Testing automatic common column detection in filtering joins\nDESCRIPTION: Shows that filtering joins automatically detect common columns when 'by' is not specified, emitting a message about the columns being joined.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nout <- semi_join(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Testing slice_sample Replace Parameter Validation\nDESCRIPTION: Tests that slice_sample() properly errors when the replace parameter is not a boolean value\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_20\n\nLANGUAGE: r\nCODE:\n```\nslice_sample(df, replace = 1)\nslice_sample(df, replace = NA)\n```\n\n----------------------------------------\n\nTITLE: Using between() Function in R dplyr\nDESCRIPTION: Demonstration of the between() function for efficiently checking if numeric values fall within a range.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_74\n\nLANGUAGE: R\nCODE:\n```\nbetween()\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Many-to-Many Relationship Warnings in R\nDESCRIPTION: These snippets test if join_rows() and left_join() provide appropriate warnings for unexpected many-to-many relationships.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(c(1, 1), c(1, 1))\n```\n\nLANGUAGE: R\nCODE:\n```\nleft_join(df, df, by = join_by(x))\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with type incompatibility error\nDESCRIPTION: Tests that coalesce() throws a meaningful error message when trying to combine vectors of incompatible types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(coalesce(1:2, letters[1:2])))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Consistency with Named Conditions in vec_case_when() in R\nDESCRIPTION: Verifies that named conditions of different sizes produce appropriate error messages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_27\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = TRUE, y = c(TRUE, FALSE)), list(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Testing input validation in nest_join function\nDESCRIPTION: Tests various invalid arguments to nest_join function, showing error messages for invalid 'by', 'keep', 'name', and 'na_matches' parameters.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nnest_join(df1, df2, by = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\nnest_join(df1, df2, keep = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\nnest_join(df1, df2, name = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\nnest_join(df1, df2, na_matches = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing pick_wrapper() with removed column\nDESCRIPTION: This snippet tests the behavior of a custom pick_wrapper() function when attempting to select a column that has been removed in the same mutate() call.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, x = NULL, y = pick_wrapper(x))\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = NULL` in join_rows Function (R)\nDESCRIPTION: This snippet tests the deprecated usage of `multiple = NULL` in the `join_rows` function, which now results in a warning and suggests using `multiple = \"all\"` instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\nout <- join_rows(df1, df2, multiple = NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing Type Stability in na_if() Function (R)\nDESCRIPTION: This snippet tests the type stability of na_if() when converting between integer and double types. It expects an error due to loss of precision when trying to convert a double to an integer.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/na-if.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nna_if(0L, 1.5)\n```\n\n----------------------------------------\n\nTITLE: Testing Non-Logical Condition in if_else() Function in R\nDESCRIPTION: This snippet tests the if_else() function's requirement for a logical condition. It expects an error when an integer vector is provided instead of a logical vector for the 'condition' argument.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nif_else(1:10, 1, 2)\n```\n\n----------------------------------------\n\nTITLE: Testing Key Existence in rows_patch() in R\nDESCRIPTION: This snippet verifies that rows_patch() properly checks for the existence of keys in the target dataframe. It ensures appropriate error messages are displayed when keys are missing and suggests using the 'unmatched' parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_patch(x, y, \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Testing NULL validation in haystacks for vec_case_match\nDESCRIPTION: Tests that NULL values in haystacks are not allowed. This ensures that all conditions are valid vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1:2, list(1, NULL, 2), list(\"a\", NULL, \"b\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid .by Parameter with Grouped DataFrame\nDESCRIPTION: Shows error handling when attempting to use .by parameter with already grouped data\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nreframe(gdf, .by = x)\n```\n\n----------------------------------------\n\nTITLE: Testing mutate() with pick() on grouped data\nDESCRIPTION: This snippet tests the behavior of mutate() with pick() on grouped data, attempting to select a non-existent grouping column.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, y = pick(g))\n```\n\n----------------------------------------\n\nTITLE: Testing compute_by with grouped dataframe\nDESCRIPTION: Tests error handling when attempting to use compute_by with an already grouped dataframe. Shows that this operation is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/by.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ncompute_by(x, gdf)\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated mutate_each() Function in R\nDESCRIPTION: This snippet demonstrates the use of the deprecated mutate_each() function from dplyr. It applies a function to multiple columns of a dataframe, adding 1 to each value. A warning is shown recommending the use of across() instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-lazyeval.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nmutate_each(df, list(~ .x + 1L))\n```\n\n----------------------------------------\n\nTITLE: Testing Type Conversion with ptype Argument in if_else() Function in R\nDESCRIPTION: This snippet tests the use of the 'ptype' argument to override the common type in if_else(). It expects an error due to loss of precision when converting from double to integer.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nif_else(TRUE, 1L, 2.5, ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Using Pipe Operator for Data Manipulation in R\nDESCRIPTION: Example of using the pipe operator (%>%) from the magrittr package to control which argument receives the LHS data by using the pronoun '.' with the xtabs() function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_77\n\nLANGUAGE: R\nCODE:\n```\nmtcars %>% xtabs( ~ cyl + vs, data = .)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Defunct Function Errors in dplyr (R)\nDESCRIPTION: This code snippet showcases multiple defunct functions in dplyr and their corresponding error messages. Each function call is followed by an error message indicating when the function was deprecated, its current defunct status, and a suggested alternative function to use.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/defunct.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nid()\nfailwith()\nselect_vars()\nrename_vars()\nselect_var()\ncurrent_vars()\nbench_tbls()\ncompare_tbls()\ncompare_tbls2()\neval_tbls()\neval_tbls2()\nlocation()\nchanges()\n```\n\n----------------------------------------\n\nTITLE: Testing group_modify() Error When Returning Original Grouping Variables\nDESCRIPTION: Tests that group_modify() throws an appropriate error when the function tries to return a data frame that contains the original grouping variables.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-map.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(mtcars %>% group_by(cyl) %>% group_modify(~ data.frame(cyl = 19))))\n\n```\n\n----------------------------------------\n\nTITLE: Testing minimum condition requirement in vec_case_match\nDESCRIPTION: Tests that at least one condition must be provided. This ensures that the function has at least one matching condition to evaluate.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1, haystacks = list(), values = list())\n```\n\n----------------------------------------\n\nTITLE: Validating Key Uniqueness in rows_upsert() in R\nDESCRIPTION: This code tests that rows_upsert() correctly identifies and reports duplicate keys in the source dataframe. It ensures proper error messages are shown when duplicate keys are encountered.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_upsert(x, y, by = \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Testing n_distinct() with named arguments in R\nDESCRIPTION: Tests the error message when n_distinct() is called with named arguments. The function requires arguments to be passed by position, not by name.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/n-distinct.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nn_distinct(x = 1:4)\n```\n\n----------------------------------------\n\nTITLE: Testing Size Consistency in Conditions for vec_case_when() in R\nDESCRIPTION: Tests that all conditions passed to vec_case_when() must have the same size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(c(TRUE, FALSE), TRUE), list(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated all_equal Function in R with dplyr\nDESCRIPTION: Shows that all_equal() is deprecated in dplyr 1.1.0 and returns a warning message suggesting to use all.equal() instead when comparing identical data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nall_equal(mtcars, mtcars)\n```\n\n----------------------------------------\n\nTITLE: Testing tally() error ownership\nDESCRIPTION: Verifies that tally() properly owns and reports errors for invalid operations\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tally(mtcars, wt = 1 + \"\")))\n```\n\n----------------------------------------\n\nTITLE: Printing rowwise tibble in R\nDESCRIPTION: This snippet demonstrates the print method for a rowwise tibble, showing how it displays the rowwise grouping and data structure.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rowwise.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nrf\n```\n\n----------------------------------------\n\nTITLE: Testing Empty Source Dataframe Handling in rows_check_by() in R\nDESCRIPTION: This code verifies that rows_check_by() correctly handles cases where the source dataframe has no columns. It ensures an appropriate error message is displayed when attempting to use an empty dataframe.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_19\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_check_by(by = NULL, y = y)))\n```\n\n----------------------------------------\n\nTITLE: Testing slice_min/max Invalid na_rm Parameter\nDESCRIPTION: Tests that slice_min() and slice_max() properly error when na_rm is not a boolean value\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_18\n\nLANGUAGE: r\nCODE:\n```\nslice_min(data.frame(x = 1:10), x, na_rm = 1)\nslice_max(data.frame(x = 1:10), x, na_rm = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing slice_min/max Missing order_by Parameter\nDESCRIPTION: Tests that slice_min() and slice_max() properly error when the required order_by parameter is missing\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_16\n\nLANGUAGE: r\nCODE:\n```\nslice_min(data.frame(x = 1:10))\nslice_max(data.frame(x = 1:10))\n```\n\n----------------------------------------\n\nTITLE: Testing pick() with no selectors\nDESCRIPTION: This snippet tests the behavior of pick() when called without any selectors, expecting an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, y = pick())\n```\n\n----------------------------------------\n\nTITLE: Testing Basic Join Validation in R\nDESCRIPTION: Tests basic join condition validation including empty joins and missing arguments. Verifies that appropriate error messages are shown.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-by.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\njoin_by()\nfn(a)\n```\n\n----------------------------------------\n\nTITLE: Testing tidyselect errors in compute_by\nDESCRIPTION: Tests error handling when selecting non-existent columns in compute_by function. Demonstrates the error message when trying to select a column 'y' that doesn't exist in the dataframe.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/by.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncompute_by(by = y, data = df)\n```\n\n----------------------------------------\n\nTITLE: Testing values_arg error messaging with mixed types in vec_case_match\nDESCRIPTION: Tests error messaging with mixed type values and custom values_arg. This ensures proper error reporting when incompatible value types are present.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_17\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(1, 2), values = list(\"x\", b = 1), values_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing add_count() error ownership\nDESCRIPTION: Verifies that add_count() properly owns and reports errors for invalid operations\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(add_count(mtcars, new = 1 + \"\")))\n(expect_error(add_count(mtcars, wt = 1 + \"\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Data Type Handling in rows_upsert() in R\nDESCRIPTION: This snippet checks how rows_upsert() handles data type mismatches between source and target dataframes. It verifies proper error messages for incompatible types and precision loss during casting for both keys and values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_14\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_upsert(x, y, \"key\")))\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() with multiple locale values in R\nDESCRIPTION: This code demonstrates the error message when .locale is given multiple values instead of a single string. It shows that if .locale is a character vector, it must have length 1.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\narrange(df, .locale = c(\"en_US\", \"fr_BF\"))\n```\n\n----------------------------------------\n\nTITLE: Testing slice helper functions' 'by' argument with grouped data frames in R\nDESCRIPTION: These snippets test the error handling when 'by' is supplied to slice helper functions with already grouped data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\nslice_head(gdf, n = 1, by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_tail(gdf, n = 1, by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_min(gdf, order_by = x, by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(gdf, order_by = x, by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_sample(gdf, n = 1, by = x)\n```\n\n----------------------------------------\n\nTITLE: Comparing Data Frames with Type Conversion Options in R\nDESCRIPTION: Shows how all_equal() behaves differently with and without the convert=TRUE parameter when comparing data frames with different column types (integer vs. character).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2)\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2, convert = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing Missing Argument Type in if_else() Function in R\nDESCRIPTION: This snippet checks if the 'missing' argument is included in the common type computation. It expects an error due to type mismatch between double and character types for the 'true' and 'missing' arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nif_else(TRUE, 1, 2, missing = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing group_map() Error With Incorrect Function Signature\nDESCRIPTION: Tests that group_map() throws an appropriate error when the provided function doesn't accept at least two arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-map.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(iris %>% group_by(Species) %>% group_map(head1)))\n```\n\n----------------------------------------\n\nTITLE: Testing Data Frame Name Validation\nDESCRIPTION: Verifies that summarise() properly handles data frames with missing or empty column names by throwing appropriate errors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df1)\nsummarise(df2)\n```\n\n----------------------------------------\n\nTITLE: Testing dplyr_legacy_locale() Function in R\nDESCRIPTION: This code snippet tests the dplyr_legacy_locale() function to ensure it raises an appropriate error when the 'dplyr.legacy_locale' global option is not set to a single TRUE or FALSE value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/locale.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ndplyr_legacy_locale()\n```\n\n----------------------------------------\n\nTITLE: Testing select_all error for multiple renaming functions in R\nDESCRIPTION: This snippet tests if select_all() throws an error when multiple renaming functions (tolower and toupper) are provided instead of one. It expects an error message indicating that .funs must contain one renaming function, not 2.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% select_all(list(tolower, toupper))))\n```\n\n----------------------------------------\n\nTITLE: Testing ntile() with Non-Integer Input in R\nDESCRIPTION: This test checks the behavior of ntile() when given a non-integer value for the 'n' parameter. It expects an error message indicating that 'n' must be a whole number.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rank.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nntile(1, n = 1.5)\n```\n\n----------------------------------------\n\nTITLE: Testing Size Validation in sample_frac()\nDESCRIPTION: Tests how sample_frac() handles and reports errors when trying to sample a fraction greater than 1 without replacement.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_frac(df, 2)))\n```\n\n----------------------------------------\n\nTITLE: Testing type compatibility errors in mutating joins\nDESCRIPTION: Tests error reporting when trying to join on columns with incompatible types in mutating joins, showing detailed error messages with the column types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(left_join(x, y, by = join_by(a == b))))\n```\n\n----------------------------------------\n\nTITLE: Testing list requirement for haystacks in vec_case_match\nDESCRIPTION: Tests that haystacks must be a list, not a single value. This ensures the conditions are properly structured for matching.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1, haystacks = 1, values = list(2))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Override in if_else() Function in R\nDESCRIPTION: This snippet tests the use of the 'size' argument to override the condition size in if_else(). It expects an error when the specified size doesn't match the condition size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nif_else(TRUE, 1, 2, size = 2)\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Invalid by$x in as_join_by\nDESCRIPTION: Demonstrates that as_join_by() requires by$x to evaluate to a character vector, not a numeric value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = as_join_by(list(\"1\", y = \"2\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Message for Invalid Input to sample_frac()\nDESCRIPTION: Shows the error message when sample_frac() is called with an empty list instead of a data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_frac(list())))\n```\n\n----------------------------------------\n\nTITLE: Testing rename_at error for missing renaming function in R\nDESCRIPTION: This snippet tests if rename_at() throws an error when no renaming function is provided, even when a variable selection (vars(x:y)) is specified. It expects an error message indicating that .funs must specify a renaming function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% rename_at(vars(x:y))))\n```\n\n----------------------------------------\n\nTITLE: Comparing Data Frames with Different Column Types in R without Conversion\nDESCRIPTION: Demonstrates how all_equal() with convert=FALSE identifies differences when comparing data frames with columns of different types (character vs. factor), referencing issue #1484.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2, convert = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Error handling for time-series objects in lag() function in R\nDESCRIPTION: Tests that lag() produces an informative error message when used with time-series (ts) objects, suggesting to use the stats::lag() function instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nlag(ts(1:10))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Validation in sample_frac() with Grouped Data\nDESCRIPTION: Demonstrates how sample_frac() returns a clear error message when attempting to sample a fraction greater than 1 from grouped data without replacement.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_frac(df %>% group_by(y), 2)))\n```\n\n----------------------------------------\n\nTITLE: Testing argument validation in join_filter function\nDESCRIPTION: Tests invalid arguments to join_filter function, showing error messages for invalid 'by' and 'na_matches' parameters.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\njoin_filter(df, df, by = 1, type = \"semi\")\n```\n\nLANGUAGE: r\nCODE:\n```\njoin_filter(df, df, by = \"x\", type = \"semi\", na_matches = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Selecting Top Rows with top_n() Using Fixed Number in R\nDESCRIPTION: This snippet shows how to use top_n() function with a fixed number (16) to select the top 16 rows from the mtcars dataset. The function automatically selects 'carb' as the ordering variable.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/top-n.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nres2 <- top_n(mtcars, 16)\n```\n\n----------------------------------------\n\nTITLE: Testing Return Type Validation in rename_with()\nDESCRIPTION: Demonstrates error handling when .fn returns an incorrect type (integer instead of character vector).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rename.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nrename_with(df, fn)\n```\n\n----------------------------------------\n\nTITLE: Validating the n parameter in lead() function in R\nDESCRIPTION: Tests error handling for the n parameter in lead(), ensuring it is a single positive whole number and not a vector or negative value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nlead(1:5, n = 1:2)\n```\n\nLANGUAGE: r\nCODE:\n```\nlead(1:5, -1)\n```\n\n----------------------------------------\n\nTITLE: Testing Weight Parameter Error in sample_frac()\nDESCRIPTION: Shows how sample_frac() handles and reports errors when provided with a weight column that contains zero values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_frac(df, 1, weight = y)))\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated summarise_each() Function in R\nDESCRIPTION: This code snippet demonstrates the use of the deprecated summarise_each() function from dplyr. It applies the mean function to all columns of a dataframe. A warning is shown recommending the use of across() instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-lazyeval.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nsummarise_each(df, list(mean))\n```\n\n----------------------------------------\n\nTITLE: Testing select_all error for invalid .funs argument in R\nDESCRIPTION: This snippet tests if select_all() throws an error when an invalid .funs argument (42) is provided instead of a function or formula. It expects an error message indicating that .funs must be a one-sided formula, a function, or a function name.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(data.frame() %>% select_all(.funs = 42)))\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() with Pre-grouped Multiple Rows\nDESCRIPTION: Demonstrates reframe() behavior with pre-grouped data when returning multiple rows\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nout <- reframe(gdf, x = vec_rep_each(x, x))\n```\n\n----------------------------------------\n\nTITLE: Testing custom haystacks_arg error messaging in vec_case_match\nDESCRIPTION: Tests that custom argument names in error messages work correctly for haystacks. This ensures proper error reporting with custom parameter names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_13\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = 1, values = list(1), haystacks_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing setequal Function for Data Frame Type Check\nDESCRIPTION: This snippet tests if the setequal function properly checks that the second argument is a data frame. It ensures the function rejects non-data frame inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nsetequal(mtcars, 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Type Mismatch Errors in case_when() Function (R)\nDESCRIPTION: This snippet checks if case_when() correctly handles and reports type mismatch errors between different conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\ncase_when(TRUE ~ 1, TRUE ~ \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() Multiple Rows per Group\nDESCRIPTION: Shows reframe() behavior when returning multiple rows per group using vector repetition\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nout <- reframe(df, x = vec_rep_each(x, x), .by = g)\n```\n\n----------------------------------------\n\nTITLE: Testing distinct() with expression using unknown variable in R\nDESCRIPTION: Tests the error generated when using distinct() with an expression 'y = a + 1' where 'a' is an unknown variable. The function should throw an error indicating that object 'a' is not found.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/distinct.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% distinct(y = a + 1)))\n```\n\n----------------------------------------\n\nTITLE: Testing user error labeling in slice() for R\nDESCRIPTION: These snippets test how user errors are labeled in slice() function calls, both for regular and grouped data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nslice(df, 1 + \"\")\n```\n\nLANGUAGE: R\nCODE:\n```\nslice(group_by(df, x), 1 + \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing tbl_if_vars error with function list in R\nDESCRIPTION: Tests that tbl_if_vars throws an appropriate error when provided with a function list of length greater than 1, using as_fun_list to convert the input before passing it to tbl_if_vars.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n.funs <- as_fun_list(list(identity, force), caller_env())\n(expect_error(tbl_if_vars(iris, .funs, environment())))\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with Conflicting Arguments (.by and .preserve)\nDESCRIPTION: Verifies that filter() throws an error when both .by and .preserve arguments are provided simultaneously.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nfilter(df, .by = x, .preserve = TRUE)\n```\n\n----------------------------------------\n\nTITLE: Testing Namespaced Helpers in Join Conditions\nDESCRIPTION: Validates the use of namespaced helper functions like between(), within(), overlaps(), and closest() in join conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-by.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\njoin_by(dplyr::between(x, left, right))\njoin_by(dplyr::within(xl, xu, yl, yu))\njoin_by(dplyr::overlaps(xl, xu, yl, yu))\njoin_by(dplyr::closest(x < y))\n```\n\n----------------------------------------\n\nTITLE: Testing Factor Level Equality in R with dplyr (Issue #2440)\nDESCRIPTION: Shows that all_equal() requires strict equality of factor levels when comparing data frames with factor columns, referencing issue #2440.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2)\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df2, df1)\n```\n\n----------------------------------------\n\nTITLE: Testing relationship parameter with empty by in joins\nDESCRIPTION: Tests that joining with by=character() technically respects the relationship parameter, throwing an error for many-to-one relationships when violated.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_13\n\nLANGUAGE: r\nCODE:\n```\nleft_join(df, df, by = character(), relationship = \"many-to-one\")\n```\n\n----------------------------------------\n\nTITLE: Testing setequal Function for Tibble Compatibility\nDESCRIPTION: This snippet tests the setequal function's error handling for incompatible tibbles. It checks if the function properly detects and reports column mismatches and type incompatibilities.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nsetequal(tibble(x = 1:2), tibble(y = 1:2))\nsetequal(tibble(x = 1:2), tibble(x = c(\"a\", \"b\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Extra Arguments Error in dplyr Set Operations\nDESCRIPTION: This snippet tests the error handling when extra arguments are passed to dplyr set operations functions. It checks if the functions properly reject unexpected arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nintersect(df1, df2, z = 3)\nunion(df1, df2, z = 3)\nunion_all(df1, df2, z = 3)\nsetdiff(df1, df2, z = 3)\nsymdiff(df1, df2, z = 3)\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Incompatible Column Types in Join\nDESCRIPTION: Demonstrates type compatibility checking in join operations, showing an error when trying to join a numeric column with a character column.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_16\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(join_cast_common(x_key, y_key, vars)))\n```\n\n----------------------------------------\n\nTITLE: Testing Multiple Conditions Type Requirement in vec_case_when() in R\nDESCRIPTION: Verifies that all conditions must be logical vectors even when some are valid.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_12\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE, 3.5), list(2, 4))\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with Multi-Column Matrices in R\nDESCRIPTION: Verifies that dplyr's filter() properly disallows matrices with more than one column, throwing an appropriate error message.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(df, matrix(TRUE, nrow = 3, ncol = 2))))\n```\n\n----------------------------------------\n\nTITLE: Using Stricter Quoting in SQLite Connections in R\nDESCRIPTION: Shows the change in quoting character for src_sqlite() from double quotes to backticks for more strict identifier quoting in SQLite.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_63\n\nLANGUAGE: R\nCODE:\n```\nsrc_sqlite()\n```\n\n----------------------------------------\n\nTITLE: Testing Error with between() Join and keep=FALSE\nDESCRIPTION: Demonstrates that join_cols() rejects using keep=FALSE with a between() function in the join condition, which is considered a type of inequality join.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(\"x\", c(\"yl\", \"yu\"), by = join_by(between(x, yl, yu)), keep = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with .by on Grouped and Rowwise Data Frames\nDESCRIPTION: Tests that filter() correctly prevents using .by when the input is already a grouped or rowwise data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nfilter(gdf, .by = x)\n```\n\nLANGUAGE: r\nCODE:\n```\nfilter(rdf, .by = x)\n```\n\n----------------------------------------\n\nTITLE: Testing combine() deprecation warning in R\nDESCRIPTION: Shows that calling combine() without arguments generates a deprecation warning and returns an empty logical vector. The warning informs users that combine() was deprecated in dplyr 1.0.0 and recommends using vctrs::vec_c() instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-combine.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncombine()\n```\n\n----------------------------------------\n\nTITLE: Testing Group Operations with .by Parameter\nDESCRIPTION: Tests showing that .by parameter cannot be used together with .groups or on already grouped/rowwise data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, .by = x, .groups = \"drop\")\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for recode() Function in R\nDESCRIPTION: This series of tests checks various error scenarios for the recode() function, including unsupported operations on factors, unnamed arguments, and missing replacements.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/recode.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(factor(\"a\"), a = 5, .missing = 10)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(\"a\", b = 5, \"c\")))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(factor(\"a\"), b = 5, \"c\")))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(1:5)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(\"a\")))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(recode(factor(\"a\"))))\n```\n\n----------------------------------------\n\nTITLE: Testing rows_append() Data Type Casting in R\nDESCRIPTION: This snippet checks the error handling in rows_append() when attempting to append data with incompatible types. It verifies that appropriate error messages are shown for precision loss during casting.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_append(x, y)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Non-Equi Join and keep=FALSE\nDESCRIPTION: Demonstrates that join_cols() rejects attempts to use keep=FALSE with inequality conditions. The function errors when trying to combine a non-equi condition (y > z) with keep=FALSE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"x\", \"y\"), c(\"x\", \"z\"), by = join_by(x, y > z), keep = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Validating default parameter size in shift() function in R\nDESCRIPTION: Tests that shift() requires the default parameter to be size 1, not a vector with multiple elements.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nshift(1:5, default = 1:2)\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Overflow Error Handling in R\nDESCRIPTION: This snippet tests if join_rows() rethrows an overflow error with a meaningful message when the join would result in more rows than dplyr can handle.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df, df, condition = \">=\")\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with 'by' Typo Detection in R\nDESCRIPTION: Tests that filter() catches when a user mistakenly uses 'by' instead of '.by' and provides a helpful error message.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nfilter(df, by = x)\n```\n\n----------------------------------------\n\nTITLE: Comparing Data Frames with Missing Rows in R using dplyr\nDESCRIPTION: Demonstrates how all_equal() identifies differences when comparing data frames with different row counts, using examples with mtcars, iris, and df_all datasets.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nall_equal(mtcars, mtcars[-1, ])\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(iris, iris[-1, ])\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df_all, df_all[-1, ])\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() with incompatible column types\nDESCRIPTION: Tests that bind_rows() throws an error when trying to combine data frames with columns of incompatible types (factor and integer).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\ndf1 <- tibble(a = factor(\"a\"))\ndf2 <- tibble(a = 1L)\n(expect_error(bind_rows(df1, df2)))\n```\n\n----------------------------------------\n\nTITLE: Testing Named NULL Values Restriction in vec_case_when() in R\nDESCRIPTION: Verifies that named NULL values are also not allowed in the values list.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_34\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(x = NULL))\n```\n\n----------------------------------------\n\nTITLE: Testing count() error ownership\nDESCRIPTION: Verifies that count() properly owns and reports errors for invalid operations\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(count(mtcars, new = 1 + \"\")))\n(expect_error(count(mtcars, wt = 1 + \"\")))\n```\n\n----------------------------------------\n\nTITLE: Using across() with Non-Empty Dots and No .fns Argument\nDESCRIPTION: Demonstrates error when using across() with non-empty dots and without supplying the .fns argument, showing a specific error related to the problematic .funs argument.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_14\n\nLANGUAGE: r\nCODE:\n```\nmutate(df, across(x, .funs = ~ . * 1000))\n```\n\n----------------------------------------\n\nTITLE: Testing Argument Size Mismatch in if_else() Function in R\nDESCRIPTION: These snippets test the recycling rules for 'true', 'false', and 'missing' arguments in the if_else() function. They expect errors when the sizes of these arguments don't match the size of the 'condition' argument.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nif_else(x < 2, bad, x)\n```\n\nLANGUAGE: R\nCODE:\n```\nif_else(x < 2, x, bad)\n```\n\nLANGUAGE: R\nCODE:\n```\nif_else(x < 2, x, x, missing = bad)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Constant Inlining in mutate() (R)\nDESCRIPTION: This snippet tests error handling when inlining constants in mutate() for different data frame types (regular, grouped, and rowwise). It expects errors when the inlined constant size doesn't match the required size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% mutate(z = !!z)))\n(expect_error(df %>% group_by(g) %>% mutate(z = !!z)))\n(expect_error(df %>% rowwise() %>% mutate(z = !!z)))\n```\n\n----------------------------------------\n\nTITLE: Translating Date-Time Values in SQL Queries with dplyr\nDESCRIPTION: Demonstrates how escape.POSIXt() method renders date-time values in ISO 8601 format in UTC for SQL queries.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_64\n\nLANGUAGE: R\nCODE:\n```\nescape.POSIXt()\n```\n\n----------------------------------------\n\nTITLE: Testing type compatibility between needles and haystacks in vec_case_match\nDESCRIPTION: Tests that haystacks must be castable to needles type without precision loss. This verifies type checking between the search values and the values being searched through.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1L, haystacks = list(1.5), values = list(2))\n```\n\n----------------------------------------\n\nTITLE: Validating Key Uniqueness in rows_update() in R\nDESCRIPTION: This code tests that rows_update() correctly identifies and reports duplicate keys in the source dataframe. It ensures proper error messages are shown when duplicate keys are encountered.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_update(x, y, by = \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Handling Data Frames with NA or Empty String Names in R's dplyr mutate()\nDESCRIPTION: This snippet demonstrates how dplyr's mutate() function handles a data frame (df1) with NA or empty string column names. It throws an error to prevent operations on data frames with invalid column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\nmutate(df1)\n```\n\n----------------------------------------\n\nTITLE: Testing rows_update() Key Existence Check in R\nDESCRIPTION: This snippet verifies that rows_update() properly checks for the existence of keys in the target dataframe. It ensures appropriate error messages are displayed when keys are missing and suggests using the 'unmatched' parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_update(x, y, \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Testing chained count operations\nDESCRIPTION: Shows proper usage of chained count operations with weight parameters and automatic name conflict resolution\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ndf <- data.frame(g = c(1, 1, 2, 2), n = 1:4)\ndf %>% count(g, wt = n)\ndf %>% count(g, wt = n) %>% count(wt = n)\ndf %>% count(n)\n```\n\n----------------------------------------\n\nTITLE: Testing Column Active Bindings in dplyr summarise()\nDESCRIPTION: Tests attempting to overwrite column active bindings, which should fail with appropriate error messages. Demonstrates error handling for improper column modifications.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/summarise.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, y = {\n  x <<- x + 2L\n  mean(x)\n})\n```\n\n----------------------------------------\n\nTITLE: Validating Column Subset in rows_append() in R\nDESCRIPTION: This code tests that rows_append() correctly requires the columns in the source dataframe to be a subset of the target dataframe. It checks for proper error messages when extra columns are present in the source.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_append(x, y)))\n```\n\n----------------------------------------\n\nTITLE: Testing Type Mismatch in if_else() Function in R\nDESCRIPTION: This snippet tests the if_else() function's behavior when the 'true' and 'false' arguments have different types. It expects an error due to type mismatch between double and character types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nif_else(TRUE, 1, \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing na_rm validation in nth() function in R\nDESCRIPTION: Tests that validate proper error handling when invalid na_rm parameters are passed to the nth() function. The na_rm parameter must be either TRUE or FALSE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nnth(1, 1, na_rm = 1)\n```\n\nLANGUAGE: r\nCODE:\n```\nnth(1, 1, na_rm = c(TRUE, FALSE))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Misused Predicates in if_any() and if_all() in R\nDESCRIPTION: These snippets test error messages when predicates are mistakenly used in the `.cols` argument of `if_any()` and `if_all()` functions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(filter(df, if_any(~ .x > 5))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(filter(df, if_all(~ .x > 5))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(filter(df, !if_any(~ .x > 5))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(filter(df, !if_all(~ .x > 5))))\n```\n\n----------------------------------------\n\nTITLE: Testing Data Type Handling in rows_patch() in R\nDESCRIPTION: This snippet checks how rows_patch() handles data type mismatches between source and target dataframes. It verifies proper error messages for incompatible types and precision loss during casting.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_12\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_patch(x, y, \"key\")))\n```\n\n----------------------------------------\n\nTITLE: Validating 'conflict' Parameter in rows_insert() in R\nDESCRIPTION: This code tests the validation of the 'conflict' parameter in rows_insert(). It ensures that only valid options are accepted and that proper error messages are displayed for invalid inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_insert(x, y, by = \"a\", conflict = \"foo\")))\n```\n\n----------------------------------------\n\nTITLE: Controlling Column Order Comparison in R with dplyr\nDESCRIPTION: Shows how all_equal() with ignore_col_order=FALSE parameter identifies differences in column order or missing columns when comparing data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nall_equal(tibble(a = 1, b = 2), tibble(b = 2, a = 1), ignore_col_order = FALSE)\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(tibble(a = 1, b = 2), tibble(a = 1), ignore_col_order = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with Data Frames with Missing or Empty Names\nDESCRIPTION: Tests that filter() correctly rejects data frames that have NA or empty string column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nfilter(df1)\n```\n\nLANGUAGE: r\nCODE:\n```\nfilter(df2)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Inlined and Non-inlined Lambdas in R\nDESCRIPTION: These snippets test error handling for inlined and non-inlined lambda functions used with `across()` in `mutate()`.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% mutate(across(1:2, ~ .y + mean(bar)))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% mutate((across(1:2, ~ .y + mean(bar))))))\n```\n\n----------------------------------------\n\nTITLE: Testing Group Label Formatting in dplyr\nDESCRIPTION: These test cases verify that the group_labels_details function correctly formats group labels for display. The tests ensure proper backtick formatting for single and multiple groups.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/context.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\ngroup_labels_details(c(a = 1))\n```\n\nLANGUAGE: r\nCODE:\n```\ngroup_labels_details(c(a = 1, b = 2))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages with Group Data in dplyr's sample_frac() Function\nDESCRIPTION: Tests how sample_frac() handles and reports errors when provided with a weight column that contains zero values in grouped data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_frac(grp, 1, weight = y)))\n```\n\n----------------------------------------\n\nTITLE: Testing NULL Handling in case_when() Function (R)\nDESCRIPTION: These snippets test how case_when() handles NULL values in both the left-hand and right-hand sides of formulas, ensuring proper error messages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\ncase_when(1 ~ NULL)\n```\n\nLANGUAGE: R\nCODE:\n```\ncase_when(NULL ~ 1)\n```\n\n----------------------------------------\n\nTITLE: Testing automatic common column detection in mutating joins\nDESCRIPTION: Shows that mutating joins automatically detect common columns when 'by' is not specified, emitting a message about the columns being joined.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nout <- left_join(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Testing ntile() with Vector Input in R\nDESCRIPTION: This test verifies that ntile() raises an error when 'n' is provided as a vector instead of a single value. It expects an error message stating that 'n' must be a whole number, not a double vector.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rank.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nntile(1, n = c(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Testing get_slice_size() output for various inputs in R\nDESCRIPTION: These snippets demonstrate the behavior of get_slice_size() function for different input values of 'n' and 'prop'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = 0))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = 0.4))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = 2))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = 2, allow_outsize = TRUE))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = -0.4))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(prop = -2))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = 0))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = 4))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = 20))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = 20, allow_outsize = TRUE))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = -4))\n```\n\nLANGUAGE: R\nCODE:\n```\nbody(get_slice_size(n = -20))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Chaining in case_when() Function (R)\nDESCRIPTION: These snippets verify that case_when() properly chains and reports errors when formula evaluation fails, either on the right-hand or left-hand side.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\ncase_when(1 ~ 2, 3 ~ stop(\"oh no!\"))\n```\n\nLANGUAGE: R\nCODE:\n```\ncase_when(1 ~ 2, stop(\"oh no!\") ~ 4)\n```\n\n----------------------------------------\n\nTITLE: Validating 'unmatched' Parameter in rows_update() in R\nDESCRIPTION: This code tests the validation of the 'unmatched' parameter in rows_update(). It ensures that only valid options are accepted and that proper error messages are displayed for invalid inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_update(x, y, by = \"a\", unmatched = \"foo\")))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Key in Mixed Join Conditions\nDESCRIPTION: Demonstrates that join_cols() prevents using the same column in both an inequality (>) and equality (==) condition within the same join operation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(\"x\", c(\"xl\", \"xu\"), by = join_by(x > xl, x == xu))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Message for src_sqlite with In-Memory Database in R\nDESCRIPTION: This test validates that src_sqlite() throws an appropriate error message when attempting to connect to a :memory: database without setting create=TRUE. The expectation is that the function should inform the user that the path must exist unless create=TRUE is specified.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-dbi.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(src_sqlite(\":memory:\")))\n```\n\n----------------------------------------\n\nTITLE: Testing default parameter type validation in nth() function in R\nDESCRIPTION: Tests that validate the default parameter is cast to the same type as the input vector x. The function throws an error when the default value can't be converted to match the type of x.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nnth(\"x\", 2, default = 2)\n```\n\n----------------------------------------\n\nTITLE: Testing Join Condition Print Methods\nDESCRIPTION: Tests the print output formatting for various types of join conditions including simple column matches and complex conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-by.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\njoin_by(a, b)\njoin_by(\"a\", \"b\")\njoin_by(a == a, b >= c)\njoin_by(a == a, b >= \"c\")\njoin_by(a == a, closest(b >= c), closest(d < e))\n```\n\n----------------------------------------\n\nTITLE: Testing combine() error with factor and integer types in R\nDESCRIPTION: Demonstrates combine() producing a meaningful error message when attempting to combine incompatible data types (factor and integer). The test expects an error that clearly explains why the types can't be combined.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-combine.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(combine(factor(\"a\"), 1L)))\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() with invalid .id parameter\nDESCRIPTION: Tests that bind_rows() throws an informative error when given an invalid .id parameter (a number instead of a string).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n# invalid .id\ndf1 <- tibble(x = 1:3)\ndf2 <- tibble(x = 4:6)\n(expect_error(bind_rows(df1, df2, .id = 5)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with overlaps() Join and keep=FALSE\nDESCRIPTION: Shows that join_cols() prevents using keep=FALSE with an overlaps() function in the join condition, which is considered a special type of join condition incompatible with keep=FALSE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"xl\", \"xu\"), c(\"yl\", \"yu\"), by = join_by(overlaps(xl, xu, yl, yu)),\nkeep = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing Type Compatibility in between() Function (R)\nDESCRIPTION: These tests check how the between() function handles inputs of different types. It demonstrates that the function cannot combine different data types like character and double.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/funs.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nbetween(\"1\", 2, 3)\n```\n\nLANGUAGE: R\nCODE:\n```\nbetween(1, \"2\", 3)\n```\n\nLANGUAGE: R\nCODE:\n```\nbetween(1, 2, \"3\")\n```\n\n----------------------------------------\n\nTITLE: Testing pick() with renaming\nDESCRIPTION: This snippet tests the behavior of pick() when attempting to rename variables, which is not allowed in this context.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\nmutate(data.frame(x = 1), pick(y = x))\n```\n\n----------------------------------------\n\nTITLE: Testing many-to-many relationship warnings in mutating joins\nDESCRIPTION: Shows that mutating joins will warn when they detect an unexpected many-to-many relationship between tables, with guidance on how to silence the warning.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nout <- left_join(df, df, join_by(x))\n```\n\n----------------------------------------\n\nTITLE: Testing Value Size Requirements in vec_case_when() in R\nDESCRIPTION: Ensures that values must either be size 1 or have the same size as their corresponding conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(c(TRUE, FALSE, TRUE, TRUE)), list(1:3))\n```\n\n----------------------------------------\n\nTITLE: Testing Quosure Deprecation in summarise_at\nDESCRIPTION: Demonstrates deprecated usage of quosures in summarise_at function, showing warning messages for using quo(mean(.)).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-mutate.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_warning(summarise_at(mtcars, vars(mpg), quo(mean(.)))))\n```\n\n----------------------------------------\n\nTITLE: Testing do() with Non-Data Frame Result on Ungrouped Data in R\nDESCRIPTION: Tests the error message when do() returns a numeric value instead of a data frame on ungrouped data. The function should indicate that results must be data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-do.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% ungroup() %>% do(1)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for NULL Input in order_by()\nDESCRIPTION: This test verifies that order_by() correctly handles and reports errors when given NULL as the first argument and a number as the second argument.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/order-by.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(order_by(NULL, 1L)))\n```\n\n----------------------------------------\n\nTITLE: Non-Enriched Errors during Dots Collection in dplyr\nDESCRIPTION: Demonstrates that errors occurring during the collection of dots expressions (like calling a non-existent function) are not enriched with dplyr's contextual information. This is related to issue #6178 in the dplyr repository.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nmutate(mtcars, !!foobarbaz())\n```\n\nLANGUAGE: r\nCODE:\n```\ntransmute(mtcars, !!foobarbaz())\n```\n\nLANGUAGE: r\nCODE:\n```\nselect(mtcars, !!foobarbaz())\n```\n\nLANGUAGE: r\nCODE:\n```\narrange(mtcars, !!foobarbaz())\n```\n\nLANGUAGE: r\nCODE:\n```\nfilter(mtcars, !!foobarbaz())\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for Non-Function Call Arguments in order_by()\nDESCRIPTION: This test verifies that order_by() produces an appropriate error message when given a number instead of a function call.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/order-by.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(order_by(mtcars, 10)))\n```\n\n----------------------------------------\n\nTITLE: Testing unnamed haystacks error messaging in vec_case_match\nDESCRIPTION: Tests error messaging with unnamed haystacks and empty haystacks_arg. This shows the generic positional error message format when no argument name is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_16\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(\"x\"), values = list(1), haystacks_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing slice_min/max() for 'order_by' argument size validation in R\nDESCRIPTION: These snippets test the error handling in slice_min() and slice_max() when the size of the 'order_by' argument doesn't match the number of rows in the data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_15\n\nLANGUAGE: R\nCODE:\n```\nslice_min(data.frame(x = 1:10), 1:6)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(data.frame(x = 1:10), 1:6)\n```\n\n----------------------------------------\n\nTITLE: Testing Invalid .by Parameter with Rowwise DataFrame\nDESCRIPTION: Shows error handling when attempting to use .by parameter with rowwise data\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nreframe(rdf, .by = x)\n```\n\n----------------------------------------\n\nTITLE: Testing Group By with Zero-row Data Frames\nDESCRIPTION: Verifies that select() maintains grouping variables even with zero-row data frames\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/group-by.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nx <- select(dfg, a)\n```\n\n----------------------------------------\n\nTITLE: Handling Many Warnings with Truncation in dplyr\nDESCRIPTION: Demonstrates how dplyr handles numerous warnings by showing a summary message and allowing retrieval of specific numbers of warnings. This example creates a larger dataset to generate more warnings and shows truncation behavior.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\n# Truncated (several more)\ndf <- tibble(id = 1:5)\ndf %>% rowwise() %>% mutate(x = f())\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings(n = 1)\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Standalone cur_data()\nDESCRIPTION: Demonstrates error message when cur_data() is used outside of data-masking verbs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-context.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_data()))\n```\n\n----------------------------------------\n\nTITLE: Testing Empty String Values Argument with Named Values in vec_case_when() in R\nDESCRIPTION: Tests error message formatting with empty string for values_arg and type incompatibility.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_32\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE, FALSE), list(1, x = \"y\"), values_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing rows_insert() Column Existence Check in R\nDESCRIPTION: This snippet verifies that rows_insert() correctly checks for the existence of specified columns in both source and target dataframes. It ensures appropriate error messages are thrown when columns are missing.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_insert(x, y, by = \"c\")))\n```\n\n----------------------------------------\n\nTITLE: FRK Package Build Log in Development Environment\nDESCRIPTION: Log output showing an error during the build process of the FRK package in the development environment. The log indicates failures in rebuilding vignettes 'FRK_intro.Rnw' and 'FRK_non-Gaussian.Rnw'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/FRK/new/FRK.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'FRK/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'FRK' version '2.1.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n--- failed re-building 'FRK_non-Gaussian.Rnw'\n\nSUMMARY: processing the following files failed:\n  'FRK_intro.Rnw' 'FRK_non-Gaussian.Rnw'\n\nError: Vignette re-building failed.\nExecution halted\n\n* DONE\nStatus: 1 ERROR, 1 WARNING, 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: Selecting Grouping Columns in c_across()\nDESCRIPTION: Demonstrates error when trying to explicitly select grouping columns in c_across() function, which is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\nmutate(gdf, y = c_across(g))\n```\n\n----------------------------------------\n\nTITLE: Testing pick() in arrange()\nDESCRIPTION: This snippet tests the behavior of pick() when used within arrange(), attempting to select a non-existent column.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\narrange(df, pick(y))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Stability in na_if() Function (R)\nDESCRIPTION: These snippets test the size stability of na_if() with different input sizes. They check for proper error handling when the sizes of x and y don't match or when y is empty.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/na-if.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nna_if(1, integer())\n```\n\nLANGUAGE: R\nCODE:\n```\nna_if(1, c(1, 2))\n```\n\nLANGUAGE: R\nCODE:\n```\nna_if(c(1, 2, 3), c(1, 2))\n```\n\n----------------------------------------\n\nTITLE: Testing keep=FALSE with non-equi conditions in joins\nDESCRIPTION: Tests showing that keep=FALSE cannot be used with overlap join conditions, resulting in an error message that explains the restriction.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nleft_join(df1, df2, join_by(overlaps(xl, xu, yl, yu)), keep = FALSE)\n```\n\nLANGUAGE: r\nCODE:\n```\nfull_join(df1, df2, join_by(overlaps(xl, xu, yl, yu)), keep = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing Data Type Handling in rows_update() in R\nDESCRIPTION: This snippet checks how rows_update() handles data type mismatches between source and target dataframes. It verifies proper error messages for incompatible types and precision loss during casting.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_update(x, y, \"key\")))\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() Type Compatibility with .default in R\nDESCRIPTION: This snippet tests the case_match() function for type compatibility between the condition result and the .default value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, 1 ~ 1L, .default = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = 'error'` in join_rows Function (R)\nDESCRIPTION: This snippet tests the deprecated `multiple = \"error\"` option in `join_rows`, which now suggests using `relationship = \"many-to-one\"` and throws an error for multiple matches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_14\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(df1, df2, multiple = \"error\")\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for Incompatible Data Frames in R with dplyr union()\nDESCRIPTION: Demonstrates the error messages generated when attempting to use union() with incompatible tibbles that have columns with different data types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(union(tibble(a = 1), tibble(a = \"1\"))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(union(tibble(a = 1, b = 2), tibble(a = \"1\", b = \"2\"))))\n```\n\n----------------------------------------\n\nTITLE: Testing Various Error Scenarios in case_when() Function (R)\nDESCRIPTION: This set of snippets tests multiple error scenarios in case_when(), including recycling issues, invalid input types, and syntax errors. It ensures that meaningful error messages are provided for each case.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-when.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(c(TRUE, FALSE) ~ 1:3, c(FALSE, TRUE) ~ 1:2)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(c(TRUE, FALSE) ~ 1, c(FALSE, TRUE, FALSE) ~ 2, c(FALSE, TRUE, FALSE, NA) ~ 3)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(50 ~ 1:3)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(paste(50))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(y ~ x, paste(50))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when()))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(NULL)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(case_when(~ 1:2)))\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for mapping\nDESCRIPTION: Log output from R CMD check showing dependency errors for the mapping package version 1.3. The check fails because the required 'sf' package is not available in the testing environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/mapping/new/mapping.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'mapping/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'mapping' version '1.3'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Column in Y Table\nDESCRIPTION: Demonstrates that join_cols() rejects input where the same column name appears multiple times in the right-side table.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"x\", \"y\"), c(\"y\", \"y\"), join_by(y))\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = 'error'` in left_join Function (R)\nDESCRIPTION: This snippet shows the deprecated usage of `multiple = \"error\"` in `left_join`, demonstrating the warning and error messages for multiple matches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_15\n\nLANGUAGE: R\nCODE:\n```\nleft_join(df1, df2, by = join_by(x), multiple = \"error\")\n```\n\n----------------------------------------\n\nTITLE: Testing vector input validation in nth() function in R\nDESCRIPTION: Tests that validate the x parameter must be a vector. The function throws an error when a non-vector input (like an environment) is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nnth(environment(), 1L)\n```\n\n----------------------------------------\n\nTITLE: Validating Column Existence in rows_check_contains_by() in R\nDESCRIPTION: This snippet tests that rows_check_contains_by() correctly identifies when specified 'by' columns are missing from either the source or target dataframe. It ensures proper error messages are displayed for missing columns in both cases.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_22\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_check_contains_by(x, \"y\", arg = \"x\")))\n```\n\n----------------------------------------\n\nTITLE: Validating Column Existence in rows_check_x_contains_y() in R\nDESCRIPTION: This snippet tests that rows_check_x_contains_y() correctly identifies when columns in the source dataframe are not present in the target dataframe. It ensures proper error messages are displayed for missing columns.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_18\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_check_x_contains_y(x, y)))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for spNetwork Package in R\nDESCRIPTION: This log shows an error during the installation of the spNetwork package version 0.4.3.6. The installation fails due to a missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_60\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/spNetwork/new/spNetwork.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'spNetwork/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'spNetwork' version '0.4.3.6'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing named arguments in slice() ellipsis for R\nDESCRIPTION: This snippet tests the error handling when named arguments are passed to the ellipsis in slice(), which is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nslice(df, 1, foo = g)\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log - bdl Package\nDESCRIPTION: Installation error output showing missing required package 'sf' when attempting to install bdl v1.0.5\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/bdl/new/bdl.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'bdl/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'bdl' version '1.0.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing 'by' Parameter Validation in rows_check_by() in R\nDESCRIPTION: This code checks the validation of the 'by' parameter in rows_check_by(). It ensures that only valid inputs are accepted and that proper error messages are displayed for invalid types, empty vectors, and named vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_21\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_check_by(by = 1, y = y)))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log - gwavr Package\nDESCRIPTION: R package installation log showing error due to missing 'nhdplusTools' and 'sf' package dependencies during package verification process.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/gwavr/new/gwavr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'gwavr/DESCRIPTION' ... OK\n* this is package 'gwavr' version '0.2.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'nhdplusTools', 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Using across() Without .cols Argument\nDESCRIPTION: Shows deprecation warning when using across() without explicitly supplying the .cols argument. This pattern was deprecated in dplyr 1.1.0.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nout <- mutate(df, across(.fns = times_two))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- mutate(gdf, across(.fns = times_two))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- mutate(df, (across(.fns = times_two)))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- mutate(gdf, (across(.fns = times_two)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Environment Variable Access in mutate() (R)\nDESCRIPTION: This snippet tests error handling when accessing environment variables in mutate() for grouped and rowwise data frames. It expects errors when the variable size doesn't match the required size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% group_by(g) %>% mutate(y = .env$y)))\n(expect_error(df %>% rowwise() %>% mutate(y = .env$y)))\n```\n\n----------------------------------------\n\nTITLE: Handling Data Frames with Missing Names in R's dplyr mutate()\nDESCRIPTION: This snippet shows how dplyr's mutate() function handles a data frame (df2) with missing column names. It raises an error to avoid potential issues when transforming data frames with undefined column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\nmutate(df2)\n```\n\n----------------------------------------\n\nTITLE: Testing Type Casting with ptype Argument in between() Function (R)\nDESCRIPTION: This test examines how the ptype argument affects type casting in the between() function. It demonstrates that the function cannot convert from double to integer when there's a loss of precision.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/funs.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nbetween(x, 1.5, 3.5, ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Testing list of empty character vectors for cross join\nDESCRIPTION: Tests that using a list of empty character vectors for 'by' parameter to perform a cross join issues a deprecation warning.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_16\n\nLANGUAGE: r\nCODE:\n```\nout <- left_join(df1, df2, by = list(x = character(), y = character()))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Columns in Mixed Join Conditions\nDESCRIPTION: Shows that join_cols() requires unique columns even in mixed equality and inequality join conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xyz, xyz, by = join_by(x, x > y, z))\n```\n\n----------------------------------------\n\nTITLE: Testing slice() with mixed positive and negative indices in R\nDESCRIPTION: This snippet tests the error handling when slice() is called with both positive and negative indices, which is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nslice(tibble(), 1, -1)\n```\n\n----------------------------------------\n\nTITLE: Installation Log - motif Package\nDESCRIPTION: Installation log showing dependency error for the 'motif' R package failing due to missing 'sf' package requirement\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_33\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/motif/old/motif.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'motif/DESCRIPTION' ... OK\n* this is package 'motif' version '0.5.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecation Warning for recode() Function in R\nDESCRIPTION: This snippet tests if the recode() function properly signals that it is superseded and recommends using case_match() instead.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/recode.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ncatch_cnd(recode(\"a\", a = \"A\"))\n```\n\n----------------------------------------\n\nTITLE: Testing unsupported .before argument in dplyr's transmute() function\nDESCRIPTION: Verifies that transmute() raises an appropriate error when the .before argument is provided. The test confirms the exact error message indicating that this argument is not supported in transmute().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/transmute.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(transmute(mtcars, cyl2 = cyl, .before = disp)))\n```\n\n----------------------------------------\n\nTITLE: ggchangepoint Package Successful Build Log in CRAN Environment\nDESCRIPTION: Log output showing successful installation and check of the ggchangepoint package in the CRAN environment, with all tests passing and no errors or warnings.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggchangepoint/old/ggchangepoint.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggchangepoint/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggchangepoint' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking installed files from 'inst/doc' ... OK\n* checking files in 'vignettes' ... OK\n* checking examples ... OK\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'introduction.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... OK\n* DONE\nStatus: OK\n```\n\n----------------------------------------\n\nTITLE: Testing Error Message for Invalid Input to sample_n()\nDESCRIPTION: Shows the error message when sample_n() is called with an empty list instead of a data frame.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(sample_n(list())))\n```\n\n----------------------------------------\n\nTITLE: Error Location Formatting with err_locs() Function\nDESCRIPTION: Tests the internal err_locs() function which formats integer vectors for error messages. It validates input requirements and shows how the function truncates long vector displays with \"and n more\" syntax.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(1.5)\n```\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(integer())\n```\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(1L)\n```\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(1:5)\n```\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(1:6)\n```\n\nLANGUAGE: r\nCODE:\n```\nerr_locs(1:7)\n```\n\n----------------------------------------\n\nTITLE: Handling empty default parameter in shift() function in R\nDESCRIPTION: Tests that shift() validates that the default parameter is not an empty vector.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nshift(1:5, default = integer())\n```\n\n----------------------------------------\n\nTITLE: Validating n parameter in shift() function in R\nDESCRIPTION: Tests that shift() validates the n parameter to ensure it's a single whole number and not a vector.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\nshift(1, n = 1:2)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for dplyr Functions Outside Context\nDESCRIPTION: These snippets test various dplyr functions when called outside their intended context, ensuring they provide clear error messages to users. Each snippet verifies a specific function's error message when used incorrectly.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/context.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(n()))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_column()))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_group()))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_group_id()))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_group_rows()))\n```\n\n----------------------------------------\n\nTITLE: Installation Log - MSclassifR Package Development Version\nDESCRIPTION: Installation log showing dependency error for the development version of MSclassifR package failing due to missing 'VSURF' package requirement\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_34\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/MSclassifR/new/MSclassifR.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'MSclassifR/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'MSclassifR' version '0.3.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'VSURF'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Check Log for EnvExpInd Package\nDESCRIPTION: Installation check output for EnvExpInd package showing successful completion of various package checks.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/EnvExpInd/new/EnvExpInd.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'EnvExpInd/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'EnvExpInd' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n```\n\n----------------------------------------\n\nTITLE: ggspatial Package Dependency Error in CRAN Environment\nDESCRIPTION: Log output showing dependency errors during installation of the ggspatial package in the CRAN environment. Similar to the development environment, the package requires 'sf' and suggests 'lwgeom', both of which are not available.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggspatial/old/ggspatial.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggspatial/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggspatial' version '1.1.7'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: fsr Package Dependency Error in Development Environment\nDESCRIPTION: Log output showing dependency errors during installation of the fsr package in the development environment. The package requires 'sf' and 'lwgeom' which are not available in the build environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/fsr/new/fsr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'fsr/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'fsr' version '1.0.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'sf', 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = 'warning'` in left_join Function (R)\nDESCRIPTION: This snippet demonstrates the deprecated usage of `multiple = \"warning\"` in `left_join`, showing the warning message and the resulting output for multiple matches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_17\n\nLANGUAGE: R\nCODE:\n```\nleft_join(df1, df2, by = join_by(x), multiple = \"warning\")\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = 'warning'` in join_rows Function (R)\nDESCRIPTION: This snippet tests the deprecated `multiple = \"warning\"` option in `join_rows`, which now suggests using `relationship = \"many-to-one\"` and issues a warning for multiple matches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_16\n\nLANGUAGE: R\nCODE:\n```\nout <- join_rows(df1, df2, multiple = \"warning\")\n```\n\n----------------------------------------\n\nTITLE: Testing default_arg error messaging with ptype in vec_case_match\nDESCRIPTION: Tests error messaging for default value with custom default_arg. This ensures proper error reporting when the default value is incompatible with ptype.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_19\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(1), values = list(2L), default = 1.5, default_arg = \"foo\", ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Validating vector input requirement in lead() function in R\nDESCRIPTION: Tests that lead() correctly requires x to be a vector and provides a clear error message when a non-vector is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nlead(environment())\n```\n\n----------------------------------------\n\nTITLE: Handling Multiple Warning Types Across dplyr Verbs\nDESCRIPTION: Demonstrates how warnings from multiple dplyr verbs (group_by, rowwise, mutate) are collected and reported. This shows the complete warning collection mechanism across a complex dplyr pipeline with different data contexts.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\n# Multiple type of warnings within multiple verbs\ndf %>% group_by(g = f():n()) %>% rowwise() %>% mutate(x = f()) %>% group_by(id) %>%\n  mutate(x = f()) %>% invisible()\n```\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings()\n```\n\n----------------------------------------\n\nTITLE: Testing .by argument with grouped and rowwise data frames in slice() for R\nDESCRIPTION: These snippets test the error handling when .by is supplied with already grouped or rowwise data frames in slice().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nslice(gdf, .by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice(rdf, .by = x)\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for stplanr Package (Devel Version)\nDESCRIPTION: Error log showing installation failure for the stplanr package (version 1.0.2) in a development environment due to missing required packages 'lwgeom' and 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_62\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/stplanr/new/stplanr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'stplanr/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'stplanr' version '1.0.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'lwgeom', 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for stppSim Package (CRAN Version)\nDESCRIPTION: Error log showing installation failure for the stppSim package (version 1.2.7) in the CRAN environment due to missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_65\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/stppSim/old/stppSim.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'stppSim/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'stppSim' version '1.2.7'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing tbl_if_vars error on multi-length predicates in R\nDESCRIPTION: Tests that tbl_if_vars throws an appropriate error message when provided with multiple predicates instead of a single predicate function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tbl_if_vars(iris, list(identity, force), environment())))\n```\n\n----------------------------------------\n\nTITLE: Testing slice() with non-numeric index in R\nDESCRIPTION: This snippet tests the error handling when slice() is called with a non-numeric index, which is not allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nslice(tibble(), \"a\")\n```\n\n----------------------------------------\n\nTITLE: ggOceanMaps Package Dependency Error in CRAN Environment\nDESCRIPTION: Log output showing dependency errors during installation of the ggOceanMaps package in the CRAN environment. Similar to the development environment, the package requires 'sf' which is not available.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggOceanMaps/old/ggOceanMaps.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggOceanMaps/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggOceanMaps' version '1.3.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for redist (CRAN)\nDESCRIPTION: R CMD check log showing an installation error for the CRAN version of the redist package due to missing dependencies 'sf' and suggested package 'lwgeom'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/redist/old/redist.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'redist/DESCRIPTION' ... OK\n* this is package 'redist' version '4.0.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing size consistency between needles and values in vec_case_match\nDESCRIPTION: Tests that the size of values must match the size of needles. This ensures proper one-to-one mapping between matched conditions and return values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1, haystacks = list(1), values = list(1:2))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for SUNGEO Package (CRAN Version)\nDESCRIPTION: Error log showing installation failure for the SUNGEO package (version 0.2.292) in the CRAN environment due to missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_67\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/SUNGEO/old/SUNGEO.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'SUNGEO/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'SUNGEO' version '0.2.292'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Implementing dplyr Backend in R\nDESCRIPTION: Outlines the changes required for implementing a dplyr backend, including modifications to sql_join(), select_query(), and src_translate_env().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/NEWS.md#2025-04-21_snippet_66\n\nLANGUAGE: R\nCODE:\n```\nsql_join()\nsql_semi_join()\nselect_query()\nsrc_translate_env()\nsql_translate_env()\n```\n\n----------------------------------------\n\nTITLE: Testing rows_check_unique Error for Multiple Columns\nDESCRIPTION: Tests error handling when checking uniqueness constraint on column 'y' within a multi-column selection. Verifies that the function correctly identifies and reports duplicate values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_24\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(rows_check_unique(x[c(\"x\", \"y\")], \"y\")))\n```\n\n----------------------------------------\n\nTITLE: Retrieving Last dplyr Warnings in R\nDESCRIPTION: This snippet shows how to retrieve the last dplyr warnings using the last_dplyr_warnings() function. It displays detailed information about the warnings, including their sources and backtraces.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\nlast_dplyr_warnings()\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for MazamaSpatialPlots\nDESCRIPTION: Log output from R CMD check showing dependency errors for the MazamaSpatialPlots package version 0.2.0. The check fails because the required 'sf' package is not available in the testing environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/MazamaSpatialPlots/new/MazamaSpatialPlots.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'MazamaSpatialPlots/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'MazamaSpatialPlots' version '0.2.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for redist (Devel)\nDESCRIPTION: R CMD check log showing an installation error for the development version of the redist package due to missing dependencies 'sf' and suggested package 'lwgeom'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/redist/new/redist.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'redist/DESCRIPTION' ... OK\n* this is package 'redist' version '4.0.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Development Installation Error Log for ppcSpatial Package\nDESCRIPTION: Installation log showing an error during installation of ppcSpatial version 0.2.0. The log includes initial checks for namespace, dependencies, and files, but fails during the actual installation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_40\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/ppcSpatial/new/ppcSpatial.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ppcSpatial/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ppcSpatial' version '0.2.0'\n* checking package namespace information ... OK\n* checking package dependencies ... OK\n...\n* checking if there is a namespace ... OK\n* checking for executable files ... OK\n* checking for hidden files and directories ... OK\n* checking for portable file names ... OK\n* checking for sufficient/correct file permissions ... OK\n* checking whether package 'ppcSpatial' can be installed ... ERROR\nInstallation failed.\nSee '/tmp/workdir/ppcSpatial/new/ppcSpatial.Rcheck/00install.out' for details.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: R Package Installation Error Log - incidence2\nDESCRIPTION: Installation log showing lazy loading failure for incidence2 package version 1.2.3 due to tibble function error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'incidence2' ...\n** package 'incidence2' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError : The `x` argument of `as_tibble()` can't be missing as of tibble 3.0.0.\nError: unable to load R code in package 'incidence2'\nExecution halted\nERROR: lazy loading failed for package 'incidence2'\n* removing '/tmp/workdir/incidence2/new/incidence2.Rcheck/incidence2'\n```\n\n----------------------------------------\n\nTITLE: Testing setequal Function for Extra Arguments\nDESCRIPTION: This snippet tests if the setequal function properly rejects extra arguments. It ensures the function throws an error when unexpected parameters are provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sets.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nsetequal(mtcars, mtcars, z = 2)\n```\n\n----------------------------------------\n\nTITLE: Package Check Log for rsinaica (CRAN) with NOTE\nDESCRIPTION: R CMD check log for the CRAN version of the rsinaica package, showing a successful check with only one NOTE about UTF-8 strings in the data, identical to the development version.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/rsinaica/old/rsinaica.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rsinaica/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rsinaica' version '0.6.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking data for non-ASCII characters ... NOTE\n  Note: found 467 marked UTF-8 strings\n* checking LazyData ... OK\n* checking data for ASCII and uncompressed saves ... OK\n* checking examples ... OK\n* checking for unstated dependencies in 'tests' ... OK\n* checking tests ... OK\n  Running 'testthat.R'\n* DONE\nStatus: 1 NOTE\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for Rsagacmd (Devel)\nDESCRIPTION: R CMD check log showing an installation error for the development version of the Rsagacmd package due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_52\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/Rsagacmd/new/Rsagacmd.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'Rsagacmd/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'Rsagacmd' version '0.2.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing rows_check_unique Error for Single Column\nDESCRIPTION: Tests error handling when checking uniqueness constraint on a single column 'x'. Verifies that the function correctly identifies and reports duplicate values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_23\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(rows_check_unique(x[\"x\"], \"x\")))\n```\n\n----------------------------------------\n\nTITLE: Executing dplyr Operations with Warnings in R\nDESCRIPTION: This snippet demonstrates the execution of dplyr operations that generate warnings. It shows how warnings are displayed for group_by and mutate operations, and how the results are presented.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\nfoo()\n```\n\n----------------------------------------\n\nTITLE: Testing Extra Column Handling in rows_delete() in R\nDESCRIPTION: This code verifies that rows_delete() correctly ignores extra columns in the source dataframe and displays an appropriate message. It checks both with and without explicitly specifying the 'by' parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_15\n\nLANGUAGE: R\nCODE:\n```\nout <- rows_delete(x, y)\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for SUNGEO Package (Devel Version)\nDESCRIPTION: Error log showing installation failure for the SUNGEO package (version 0.2.292) in a development environment due to missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_66\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/SUNGEO/new/SUNGEO.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'SUNGEO/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'SUNGEO' version '0.2.292'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installing itsdm R Package Log\nDESCRIPTION: Installation log showing an error due to missing 'sf' package dependency when trying to install the itsdm package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_24\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/itsdm/old/itsdm.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'itsdm/DESCRIPTION' ... OK\n* this is package 'itsdm' version '0.2.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Using if_any() and if_all() Without .cols Argument\nDESCRIPTION: Demonstrates deprecation warnings when using if_any() and if_all() functions without explicitly supplying the .cols argument, which was deprecated in dplyr 1.1.0.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_12\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(df, if_any())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(gdf, if_any())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(df, if_all())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(gdf, if_all())\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(df, (if_any()))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(gdf, (if_any()))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(df, (if_all()))\n```\n\nLANGUAGE: r\nCODE:\n```\nout <- filter(gdf, (if_all()))\n```\n\n----------------------------------------\n\nTITLE: CRAN Installation Error Log for ppcSpatial Package\nDESCRIPTION: Installation log showing the same error during installation of ppcSpatial version 0.2.0 on the CRAN version. The installation process fails with the same error as the development version.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_41\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/ppcSpatial/old/ppcSpatial.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ppcSpatial/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ppcSpatial' version '0.2.0'\n* checking package namespace information ... OK\n* checking package dependencies ... OK\n...\n* checking if there is a namespace ... OK\n* checking for executable files ... OK\n* checking for hidden files and directories ... OK\n* checking for portable file names ... OK\n* checking for sufficient/correct file permissions ... OK\n* checking whether package 'ppcSpatial' can be installed ... ERROR\nInstallation failed.\nSee '/tmp/workdir/ppcSpatial/old/ppcSpatial.Rcheck/00install.out' for details.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Dependency Error Log for R Packages\nDESCRIPTION: Shows dependency check failures for eSDM, fgdr and FORTLS packages due to missing 'sf' package requirement.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for SWTools Package (Devel Version)\nDESCRIPTION: Error log showing installation failure for the SWTools package (version 0.2.4) in a development environment due to missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_70\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/SWTools/new/SWTools.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'SWTools/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'SWTools' version '0.2.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for zipcodeR Package\nDESCRIPTION: Installation error output for the zipcodeR package showing a failure during lazy loading due to the missing 'sf' package dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_80\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'zipcodeR' ...\n** package 'zipcodeR' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'zipcodeR'\n* removing '/tmp/workdir/zipcodeR/new/zipcodeR.Rcheck/zipcodeR'\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log Output for R Package\nDESCRIPTION: This snippet shows a typical log output from a CRAN package check, including version information, platform details, and the results of various checks performed on the package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/cyclestreets/old/cyclestreets.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'cyclestreets/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'cyclestreets' version '0.6.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Data Type Handling in rows_delete() in R\nDESCRIPTION: This code checks how rows_delete() handles data type mismatches between source and target dataframes for keys. It verifies proper error messages for incompatible types during key matching.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_17\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_delete(x, y, \"key\")))\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Function Failures in across() in R\nDESCRIPTION: These snippets test error handling when a function called within `across()` fails, in various contexts including `summarise()` and grouped data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, across(everything(), fn()))\n```\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, across(everything(), fn()), .by = g)\n```\n\nLANGUAGE: R\nCODE:\n```\nsummarise(gdf, across(everything(), fn()))\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for roads (Devel)\nDESCRIPTION: R CMD check log showing an installation error for the development version of the roads package due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/roads/new/roads.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'roads/DESCRIPTION' ... OK\n* this is package 'roads' version '1.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Using c_across() Without cols Argument\nDESCRIPTION: Shows deprecation warning when using c_across() without explicitly supplying the cols argument, which was deprecated in dplyr 1.1.0.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_13\n\nLANGUAGE: r\nCODE:\n```\nout <- mutate(df, z = sum(c_across()))\n```\n\n----------------------------------------\n\nTITLE: fsr Package Dependency Error in CRAN Environment\nDESCRIPTION: Log output showing dependency errors during installation of the fsr package in the CRAN environment. Similar to the development environment, the package requires 'sf' and 'lwgeom' which are not available.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/fsr/old/fsr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'fsr/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'fsr' version '1.0.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'sf', 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: CRAN Installation Log for PopGenHelpR Package\nDESCRIPTION: Installation log showing successful package validation for PopGenHelpR version 1.0.0, including checking dependencies, namespace information, tests, and vignettes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_39\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/PopGenHelpR/old/PopGenHelpR.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'PopGenHelpR/DESCRIPTION' ... OK\n* this is package 'PopGenHelpR' version '1.0.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... OK\n...\n* checking for unstated dependencies in 'tests' ... OK\n* checking tests ... OK\n  Running 'testthat.R'\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'PopGenHelpR_vignette.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... OK\n* DONE\nStatus: OK\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for TUFLOWR Package\nDESCRIPTION: Output from CRAN package check for the TUFLOWR package, showing a successful installation and check with no errors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_74\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/TUFLOWR/old/TUFLOWR.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'TUFLOWR/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'TUFLOWR' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking Rd metadata ... OK\n* checking Rd cross-references ... OK\n* checking for missing documentation entries ... OK\n* checking for code/documentation mismatches ... OK\n* checking Rd \\usage sections ... OK\n* checking Rd contents ... OK\n* checking for unstated dependencies in examples ... OK\n* checking examples ... OK\n* DONE\nStatus: OK\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for Rsagacmd (CRAN)\nDESCRIPTION: R CMD check log showing an installation error for the CRAN version of the Rsagacmd package due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_53\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/Rsagacmd/old/Rsagacmd.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'Rsagacmd/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'Rsagacmd' version '0.2.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Development Installation Log for prioriactions Package with Notes\nDESCRIPTION: Installation log showing successful installation of prioriactions version 0.4.1 with 2 NOTE warnings. The log includes checks for namespace, dependencies, vignettes, and rebuilding outputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_42\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/prioriactions/new/prioriactions.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'prioriactions/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'prioriactions' version '0.4.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'objectives.Rmd' using 'UTF-8'... OK\n  'sensitivities.Rmd' using 'UTF-8'... OK\n  'MitchellRiver.Rmd' using 'UTF-8'... OK\n  'prioriactions.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... OK\n* DONE\nStatus: 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: Testing distinct() with multiple unknown columns in R\nDESCRIPTION: Tests the error generated when using distinct() with two unknown columns 'aa' and 'bb'. The function should throw an error indicating that both 'aa' and 'bb' are not found in the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/distinct.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% distinct(aa, bb)))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Incompatible Sizes in bind_cols() in R\nDESCRIPTION: Tests error messages when binding columns with incompatible sizes. It shows how bind_cols() catches size mismatches and provides informative error messages about which inputs cannot be recycled.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-cols.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n# # incompatible size\n(expect_error(bind_cols(a = 1:2, mtcars)))\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() list validation for incompatible vectors\nDESCRIPTION: Verifies that bind_rows() properly validates lists and throws an error when trying to combine vectors of incompatible sizes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nbind_rows(list(x = 1), list(x = 1:3, y = 1:2))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Incompatible Sizes with Named Second Argument in R\nDESCRIPTION: Tests error messages when binding columns with incompatible sizes, with the second input being a named vector that cannot match the size of the first input (mtcars dataframe).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-cols.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(bind_cols(mtcars, a = 1:3)))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for spatialrisk Package in R\nDESCRIPTION: This log shows an error during the installation of the spatialrisk package version 0.7.0. The installation fails due to a missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_57\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/spatialrisk/new/spatialrisk.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'spatialrisk/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'spatialrisk' version '0.7.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() with invalid numeric locale parameter in R\nDESCRIPTION: This code demonstrates the error message when the .locale parameter is set to a numeric value instead of a string. It shows that .locale must be a string or NULL.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\narrange(df, .locale = 1)\n```\n\n----------------------------------------\n\nTITLE: R Package Installation Error Log - happign\nDESCRIPTION: Installation log showing package dependency error for happign package version 0.1.8, requiring but missing the 'sf' package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_21\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/happign/old/happign.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'happign/DESCRIPTION' ... OK\n* this is package 'happign' version '0.1.8'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for rcontroll (Devel)\nDESCRIPTION: R CMD check log showing an installation error for the development version of the rcontroll package. The log indicates the check process found the DESCRIPTION file but encountered an error during installation.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/rcontroll/new/rcontroll.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rcontroll/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rcontroll' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking if there is a namespace ... OK\n* checking for executable files ... OK\n* checking for hidden files and directories ... OK\n* checking for portable file names ... OK\n* checking for sufficient/correct file permissions ... OK\n* checking whether package 'rcontroll' can be installed ... ERROR\nInstallation failed.\nSee '/tmp/workdir/rcontroll/new/rcontroll.Rcheck/00install.out' for details.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for stplanr Package (CRAN Version)\nDESCRIPTION: Error log showing installation failure for the stplanr package (version 1.0.2) in the CRAN environment due to missing required packages 'lwgeom' and 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_63\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/stplanr/old/stplanr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'stplanr/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'stplanr' version '1.0.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'lwgeom', 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log - abstr Package\nDESCRIPTION: Installation error output showing missing required packages 'lwgeom' and 'sf' when attempting to install abstr v0.4.1\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/abstr/new/abstr.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'abstr/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'abstr' version '0.4.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'lwgeom', 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: R Package Installation Error Log - himach\nDESCRIPTION: Installation log showing package dependency errors for himach package version 0.3.1, requiring but missing both 'lwgeom' and 'sf' packages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/himach/new/himach.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'himach/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'himach' version '0.3.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'lwgeom', 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Validating Key Existence in rows_delete() in R\nDESCRIPTION: This snippet tests that rows_delete() properly checks for the existence of keys in the target dataframe. It ensures appropriate error messages are displayed when keys are missing and suggests using the 'unmatched' parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_16\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_delete(x, y, \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Validating .unpack Argument in across() in R\nDESCRIPTION: These snippets test various invalid inputs for the `.unpack` argument in `across()`, including numbers, character vectors, and NA values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, across(x, mean, .unpack = 1))\n```\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, across(x, mean, .unpack = c(\"x\", \"y\")))\n```\n\nLANGUAGE: R\nCODE:\n```\nsummarise(df, across(x, mean, .unpack = NA))\n```\n\n----------------------------------------\n\nTITLE: Package Check Log for rsinaica (Devel) with NOTE\nDESCRIPTION: R CMD check log for the development version of the rsinaica package, showing a successful check with only one NOTE about UTF-8 strings in the data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/rsinaica/new/rsinaica.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rsinaica/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rsinaica' version '0.6.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking data for non-ASCII characters ... NOTE\n  Note: found 467 marked UTF-8 strings\n* checking LazyData ... OK\n* checking data for ASCII and uncompressed saves ... OK\n* checking examples ... OK\n* checking for unstated dependencies in 'tests' ... OK\n* checking tests ... OK\n  Running 'testthat.R'\n* DONE\nStatus: 1 NOTE\n```\n\n----------------------------------------\n\nTITLE: Testing unsupported .keep argument in dplyr's transmute() function\nDESCRIPTION: Verifies that transmute() raises an appropriate error when the .keep argument is provided. The test confirms the exact error message indicating that this argument is not supported in transmute().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/transmute.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(transmute(mtcars, cyl2 = cyl, .keep = \"all\")))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for spqdep Package in R\nDESCRIPTION: This log shows an error during the installation of the spqdep package version 0.1.2. The installation fails due to missing required packages 'sf' and 'lwgeom'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_61\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/spqdep/new/spqdep.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'spqdep/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'spqdep' version '0.1.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'sf', 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Log - oceanis Package Development Version\nDESCRIPTION: Development version installation check log for oceanis package showing dependency errors for missing 'sf' and 'lwgeom' packages\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_38\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/oceanis/new/oceanis.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'oceanis/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'oceanis' version '1.8.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'sf', 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for waterquality Package\nDESCRIPTION: Output from R CMD check showing installation errors for the waterquality package. The main issue is a failure in vignette rebuilding.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_77\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/waterquality/new/waterquality.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'waterquality/DESCRIPTION' ... OK\n* this is package 'waterquality' version '0.3.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... NOTE\n...\n--- failed re-building 'waterquality_vignette.Rmd'\n\nSUMMARY: processing the following file failed:\n  'waterquality_vignette.Rmd'\n\nError: Vignette re-building failed.\nExecution halted\n\n* DONE\nStatus: 1 WARNING, 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: GeodesiCL Package Installation Failure in CRAN Environment\nDESCRIPTION: Log output showing installation failure for the GeodesiCL package in the CRAN environment. Similar to the development environment, the package fails during lazy loading due to missing 'sf' dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'GeodesiCL' ...\n** package 'GeodesiCL' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'GeodesiCL'\n* removing '/tmp/workdir/GeodesiCL/old/GeodesiCL.Rcheck/GeodesiCL'\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for mapscanner\nDESCRIPTION: Log output from R CMD check showing dependency errors for the mapscanner package version 0.0.6. The check fails because the required 'sf' package and suggested 'lwgeom' package are not available.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/mapscanner/new/mapscanner.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'mapscanner/DESCRIPTION' ... OK\n* this is package 'mapscanner' version '0.0.6'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Recycling Rules in between() Function (R)\nDESCRIPTION: These tests verify the recycling behavior of the between() function. It shows that the function cannot recycle arguments of incompatible sizes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/funs.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nbetween(1:3, 1:2, 1L)\n```\n\nLANGUAGE: R\nCODE:\n```\nbetween(1:3, 1L, 1:2)\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() with S3 lists that inherit from list\nDESCRIPTION: Tests that bind_rows() only flattens S3 lists that inherit from list, throwing an error for non-dataframe or non-named vector arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nbind_rows(lst1)\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() error with duplicate column names in R\nDESCRIPTION: This code demonstrates the error message that occurs when arrange() is used on a data frame with duplicate column names. It creates a tibble with two columns named 'x' and attempts to arrange it.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tibble(x = 1, x = 1, .name_repair = \"minimal\") %>% arrange(x)))\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with correct error message indexing\nDESCRIPTION: Tests that error messages in coalesce() correctly index the problematic arguments in the error message.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\ncoalesce(1, \"x\")\n```\n\nLANGUAGE: r\nCODE:\n```\ncoalesce(1, y = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Development Installation Error Log for rbenvo Package\nDESCRIPTION: Installation log showing a dependency error during the installation of rbenvo version 1.0.5. The error indicates missing required package 'sf' and suggested package 'lwgeom'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_44\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/rbenvo/new/rbenvo.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rbenvo/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rbenvo' version '1.0.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing named haystacks error messaging in vec_case_match\nDESCRIPTION: Tests error messaging with named haystacks and custom haystacks_arg. This ensures proper error reporting when named elements in haystacks are incompatible with needles.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_15\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(a = \"x\"), values = list(1), haystacks_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing NULL validation in values for vec_case_match\nDESCRIPTION: Tests that NULL values in the values list are not allowed. This ensures that all matching conditions have valid return values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1:2, list(1, 1, 2), list(\"a\", NULL, \"b\"))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for eflm Package\nDESCRIPTION: Shows installation failure for eflm package due to missing tibble argument, affecting both development and CRAN versions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'eflm' ...\n** package 'eflm' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\nError : The `x` argument of `as_tibble()` can't be missing as of tibble 3.0.0.\nError: unable to load R code in package 'eflm'\nExecution halted\nERROR: lazy loading failed for package 'eflm'\n* removing '/tmp/workdir/eflm/new/eflm.Rcheck/eflm'\n```\n\n----------------------------------------\n\nTITLE: GeodesiCL Package Installation Failure in Development Environment\nDESCRIPTION: Log output showing installation failure for the GeodesiCL package in the development environment. The package fails to load during lazy loading due to missing 'sf' dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n* installing *source* package 'GeodesiCL' ...\n** package 'GeodesiCL' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'GeodesiCL'\n* removing '/tmp/workdir/GeodesiCL/new/GeodesiCL.Rcheck/GeodesiCL'\n```\n\n----------------------------------------\n\nTITLE: Installing jpgrid R Package Log\nDESCRIPTION: Installation logs for both development and CRAN versions of jpgrid package, showing errors due to missing 'sf' package dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/jpgrid/new/jpgrid.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'jpgrid/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'jpgrid' version '0.3.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for Local Variable Sharing in mutate() (R)\nDESCRIPTION: This snippet tests error handling when attempting to share local variables across expressions in mutate(). It expects an error when trying to use a variable defined in one expression in another expression.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, x2 = {\n  foo <- x\n  x\n}, y2 = {\n  foo\n})\n```\n\n----------------------------------------\n\nTITLE: Testing UTF-8 Character Handling in dplyr with Chinese Column Names\nDESCRIPTION: Creates dataframes with Chinese and English column names, then tests if dplyr functions correctly preserve column name references during operations like mutate and filter. Uses lobstr::obj_addrs to verify memory addresses of column names remain consistent throughout transformations.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/utf-8.txt#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n# UTF-8 tests that can't be run on Windows CRAN\n# R CMD check will try to parse the file anyway,\n# we use a different file extension to avoid this.\ndf <- data.frame(中文1 = 1:10, 中文2 = 1:10, eng = 1:10)\ndf2 <- df %>% mutate(中文1 = 中文1 + 1)\ngdf2 <- df %>% group_by(eng) %>% mutate(中文1 = 中文1 + 1)\n\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(df2)))\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(gdf2)))\n\ndf3 <- filter(df2, eng > 5)\ngdf3 <- filter(gdf2, eng > 5)\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(df3)))\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(gdf3)))\n\ndf4 <- filter(df2, 中文1 > 5)\ngdf4 <- filter(gdf2, 中文1 > 5)\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(df4)))\nexpect_equal(lobstr::obj_addrs(names(df)), lobstr::obj_addrs(names(gdf4)))\n```\n\n----------------------------------------\n\nTITLE: Testing Logical Type Requirement for Conditions in vec_case_when() in R\nDESCRIPTION: Ensures that conditions must be logical vectors and are not automatically cast from other types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(1), list(2))\n```\n\n----------------------------------------\n\nTITLE: Testing Join Condition Error Messages\nDESCRIPTION: Comprehensive test suite for error message validation in various invalid join condition scenarios.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-by.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\njoin_by(a = b)\njoin_by(NULL)\njoin_by(foo(x > y))\njoin_by(x == y, x^y)\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() with unnamed vectors\nDESCRIPTION: Verifies that bind_rows() requires named vectors and throws an appropriate error message when given unnamed vectors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\n# unnamed vectors\n(expect_error(bind_rows(1:2)))\n```\n\n----------------------------------------\n\nTITLE: Testing desc() with multiple arguments inside arrange() in R\nDESCRIPTION: This code demonstrates the error message when the desc() function is called with more than one argument inside arrange(). It shows that desc() must be called with exactly one argument.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\ndf <- data.frame(x = 1, y = 2)\n(expect_error(arrange(df, desc(x, y))))\n```\n\n----------------------------------------\n\nTITLE: Testing n parameter validation in nth() function in R\nDESCRIPTION: Tests that validate proper error handling for the n parameter which specifies which element to extract. The parameter must be a single integer value and cannot be NA.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nnth(1:10, n = \"x\")\n```\n\nLANGUAGE: r\nCODE:\n```\nnth(1:10, n = 1:2)\n```\n\nLANGUAGE: r\nCODE:\n```\nnth(1:10, n = NA_integer_)\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with empty input validation\nDESCRIPTION: Tests that coalesce() correctly handles and validates empty input cases, throwing an appropriate error message.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\ncoalesce()\n```\n\nLANGUAGE: r\nCODE:\n```\ncoalesce(NULL, NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing n_distinct() with missing arguments in R\nDESCRIPTION: Tests the error message when n_distinct() is called without any arguments. The function requires at least one argument to be provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/n-distinct.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nn_distinct()\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with size incompatibility error\nDESCRIPTION: Tests that coalesce() throws a meaningful error message when trying to combine vectors of incompatible sizes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(coalesce(1:2, 1:3)))\n```\n\n----------------------------------------\n\nTITLE: Testing empty haystacks_arg error messaging in vec_case_match\nDESCRIPTION: Tests error messaging when haystacks_arg is an empty string. This shows the generic error message format when no specific argument name is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_14\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = 1, values = list(1), haystacks_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() with No Conditions in R\nDESCRIPTION: This snippet tests the case_match() function when called with no conditions, which should result in an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1)\n```\n\n----------------------------------------\n\nTITLE: Testing select_if error for invalid predicate returning non-logical in R\nDESCRIPTION: This snippet tests if select_if() throws an error when the predicate function returns a non-logical value (1 instead of TRUE/FALSE). It expects an error message indicating that .p should return a single logical.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% select_if(function(.x) 1)))\n```\n\n----------------------------------------\n\nTITLE: Testing slice helper functions' error handling for invalid 'n' argument in R\nDESCRIPTION: These snippets test the error handling in slice_head, slice_tail, slice_min, slice_max, and slice_sample when an invalid 'n' argument is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_8\n\nLANGUAGE: R\nCODE:\n```\nslice_head(df, n = \"a\")\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_tail(df, n = \"a\")\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_min(df, x, n = \"a\")\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(df, x, n = \"a\")\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_sample(df, n = \"a\")\n```\n\n----------------------------------------\n\nTITLE: Testing error handling in new_rowwise_df() constructor in R\nDESCRIPTION: These snippets test error scenarios for the new_rowwise_df() constructor, including incorrect group_data structure and type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rowwise.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(new_rowwise_df(tibble(x = 1:10), tibble(\".rows\" := list(1:5, -1L)))))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(new_rowwise_df(tibble(x = 1:10), 1:10)))\n```\n\n----------------------------------------\n\nTITLE: Testing vector type requirement for needles in vec_case_match\nDESCRIPTION: Tests that needles must be a vector, not another data type like an environment. This ensures the input data is of a compatible type for matching operations.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(environment(), haystacks = list(environment()), values = list(1))\n```\n\n----------------------------------------\n\nTITLE: Testing Conditions Parameter Type in vec_case_when() in R\nDESCRIPTION: Verifies that the conditions parameter must be a list, not another data type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_22\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(1, list(2))\n```\n\n----------------------------------------\n\nTITLE: Testing Error for Duplicate Names in across() in R\nDESCRIPTION: This snippet tests the error message when `across()` results in duplicate column names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(tibble(x = 1) %>% summarise(across(everything(), list(f = mean, f = mean)))))\n```\n\n----------------------------------------\n\nTITLE: Testing combine() error with character and numeric types in R\nDESCRIPTION: Demonstrates combine() producing a meaningful error message when attempting to combine incompatible data types (character and double). The test expects an error that clearly explains why the types can't be combined.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-combine.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(combine(\"a\", 1)))\n```\n\n----------------------------------------\n\nTITLE: Testing Values Parameter Type in vec_case_when() in R\nDESCRIPTION: Ensures that the values parameter must be a list, not another data type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_23\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Duplicate Column in X Table\nDESCRIPTION: Shows that join_cols() rejects input where the same column name appears multiple times in the left-side table.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_7\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"y\", \"y\"), c(\"x\", \"y\"), join_by(y))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages with Group Data in dplyr's sample_n() Function\nDESCRIPTION: Creates a test case that shows how sample_n() returns a meaningful error message when provided with a weight column that contains zero values in grouped data.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ndf2 <- tibble(x = rep(1:2, 100), y = rep(c(0, 1), 100), g = rep(1:2, each = 100))\ngrp <- df2 %>% group_by(g)\n(expect_error(sample_n(grp, nrow(df2) / 2, weight = y)))\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Type Incompatibility Handling in R\nDESCRIPTION: This test checks if join_rows() correctly expects incompatible type errors to have been handled by join_cast_common().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(join_rows(data.frame(x = 1), data.frame(x = factor(\"a\")))))\n```\n\n----------------------------------------\n\nTITLE: Testing Size Override with Multiple Conditions in vec_case_when() in R\nDESCRIPTION: Tests that the size parameter enforces its value on all conditions, regardless of their original sizes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_15\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(c(TRUE, FALSE), c(TRUE, FALSE, TRUE)), list(1, 2), size = 2)\n```\n\n----------------------------------------\n\nTITLE: Testing Type Incompatibility with Named Values in vec_case_when() in R\nDESCRIPTION: Tests error messages for type incompatibility when using named values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_30\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE, FALSE), list(1, x = \"y\"))\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() with invalid locale identifier in R\nDESCRIPTION: This code demonstrates the error message when .locale is set to a string that is not a valid locale identifier according to stringi. It shows that the locale must be one from the list provided by stringi::stri_locale_list().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\narrange(df, .locale = \"x\")\n```\n\n----------------------------------------\n\nTITLE: Testing deprecated slicing with one-column matrix in R\nDESCRIPTION: This snippet demonstrates the deprecation warning when using a one-column matrix for slicing, which was deprecated in dplyr 1.1.0.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nout <- slice(df, matrix(c(1, 3)))\n```\n\n----------------------------------------\n\nTITLE: Testing Array Restriction in Conditions for vec_case_when() in R\nDESCRIPTION: Tests that conditions can't be arrays (issue #6862), showing two different test scenarios.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_13\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x), list(y))\n```\n\n----------------------------------------\n\nTITLE: Testing Error with NA in Join Columns\nDESCRIPTION: Demonstrates that join_cols() rejects NA values in join column specifications.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_10\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(xy, xy, by = as_join_by(c(\"x\", NA)))\n```\n\n----------------------------------------\n\nTITLE: Testing rename_if error for missing renaming function in R\nDESCRIPTION: This snippet tests if rename_if() throws an error when no renaming function is provided, even when a predicate (is_integerish) is specified. It expects an error message indicating that .funs must specify a renaming function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% rename_if(is_integerish)))\n```\n\n----------------------------------------\n\nTITLE: Testing NULL validation in haystacks with non-NULL values\nDESCRIPTION: Tests that NULL values in haystacks are not allowed even if values are non-NULL. This ensures that all conditions have valid search criteria.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1:2, list(1, NULL, 2), list(\"a\", \"a\", \"b\"))\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Values Argument with Type Incompatibility in vec_case_when() in R\nDESCRIPTION: Verifies custom values_arg behavior with type incompatibility errors for named values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_31\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE, FALSE), list(1, x = \"y\"), values_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing Empty String Values Argument with Named NULL in vec_case_when() in R\nDESCRIPTION: Verifies error message formatting with empty string for values_arg and named NULL values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_38\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(x = NULL), values_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing auto_copy() Error Handling in R for dplyr\nDESCRIPTION: This snippet tests the auto_copy() function with incompatible inputs, demonstrating the error message thrown when x and y have different sources. It shows how the function provides detailed information about the mismatch and suggests a potential solution.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/copy-to.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nauto_copy(df, NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Values Argument with NULL in vec_case_when() in R\nDESCRIPTION: Tests custom values_arg behavior with NULL value errors.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_35\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(NULL), values_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing Quosure Deprecation in mutate_at\nDESCRIPTION: Demonstrates deprecated usage of quosures in mutate_at function, showing warning messages for using quo(mean(.)).\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-mutate.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n(expect_warning(mutate_at(mtcars, vars(mpg), quo(mean(.)))))\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Default Behavior in R\nDESCRIPTION: This snippet tests the default behavior of join_rows() function, specifically checking for a warning when detecting an unexpected many-to-many relationship between x and y.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nout <- join_rows(c(1, 1), c(1, 1), condition = \"==\")\n```\n\n----------------------------------------\n\nTITLE: Testing rename_all error for missing renaming function in R\nDESCRIPTION: This snippet tests if rename_all() throws an error when no renaming function is provided. It expects an error message indicating that .funs must specify a renaming function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\ndf <- tibble(x = 0L, y = 0.5, z = 1)\n(expect_error(df %>% rename_all()))\n```\n\n----------------------------------------\n\nTITLE: Testing empty default_arg error messaging in vec_case_match\nDESCRIPTION: Tests error messaging with empty default_arg. This shows the generic type error message without a specific argument name when default value is incompatible with ptype.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_20\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(1), values = list(2L), default = 1.5, default_arg = \"\", ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Testing Empty String Argument Names with Named Inputs in vec_case_when() in R\nDESCRIPTION: Tests error message behavior when using empty string for the conditions_arg parameter with named inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_26\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = 1.5), list(1), conditions_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing compute_by with rowwise dataframe\nDESCRIPTION: Tests error handling when attempting to use compute_by with a rowwise dataframe. Demonstrates that compute_by cannot be used with rowwise dataframes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/by.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\ncompute_by(x, rdf)\n```\n\n----------------------------------------\n\nTITLE: Testing compute_by with custom error arguments\nDESCRIPTION: Tests error handling with custom argument names in the error message. Shows how error messages can be customized by specifying by_arg and data_arg parameters.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/by.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\ncompute_by(x, gdf, by_arg = \"x\", data_arg = \"dat\")\n```\n\n----------------------------------------\n\nTITLE: Testing list requirement for values in vec_case_match\nDESCRIPTION: Tests that values must be a list, not a single value. This ensures return values are properly structured for matching with conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(1, haystacks = list(1), values = 2)\n```\n\n----------------------------------------\n\nTITLE: Testing Size Validation in with_order()\nDESCRIPTION: This test confirms that with_order() validates that order_by and x parameters must be the same size, throwing an appropriate error when they differ.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/order-by.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nwith_order(1:2, identity, 1:3)\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() Error Chaining on Formula Evaluation Failure in R\nDESCRIPTION: These snippets test the case_match() function's error handling when formula evaluation fails, demonstrating chained error messages.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, 1 ~ 2, 3 ~ stop(\"oh no!\"))\n```\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, 1 ~ 2, stop(\"oh no!\") ~ 4)\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() One-to-One Relationship Errors in R\nDESCRIPTION: These snippets test if join_rows() provides meaningful error messages for violations of one-to-one relationships in both directions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(1, c(1, 1), relationship = \"one-to-one\")\n```\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(c(1, 1), 1, relationship = \"one-to-one\")\n```\n\n----------------------------------------\n\nTITLE: Testing rows_insert() Error for Existing Keys in R\nDESCRIPTION: This snippet tests the error message when attempting to insert rows with keys that already exist in the target dataframe using rows_insert(). It verifies that the function correctly identifies the conflicting rows and suggests using the 'conflict' parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_insert(x, y, by = \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Installation Log - oceanexplorer Package Development Version\nDESCRIPTION: Development version installation check log for oceanexplorer package showing dependency error for missing 'sf' package\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_37\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/oceanexplorer/new/oceanexplorer.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'oceanexplorer/DESCRIPTION' ... OK\n* this is package 'oceanexplorer' version '0.0.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing custom needles_arg error messaging in vec_case_match\nDESCRIPTION: Tests that custom argument names in error messages work correctly for needles. This ensures proper error reporting with custom argument names.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = environment(), haystacks = list(environment()), values = list(1), needles_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing filter() with Multi-Dimensional Arrays in R\nDESCRIPTION: Checks that dplyr's filter() correctly rejects arrays with more than 2 dimensions, providing a clear error message.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/filter.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter(df, array(TRUE, dim = c(3, 1, 1)))))\n```\n\n----------------------------------------\n\nTITLE: Testing pick() outside mutate context\nDESCRIPTION: This snippet tests the behavior of pick() when called outside the context of a data-masking verb like mutate(), expecting an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_9\n\nLANGUAGE: R\nCODE:\n```\npick()\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for rcontroll (CRAN)\nDESCRIPTION: R CMD check log showing an installation error for the CRAN version of the rcontroll package. The log is similar to the development version, showing the same installation failure.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/rcontroll/old/rcontroll.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rcontroll/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rcontroll' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking if there is a namespace ... OK\n* checking for executable files ... OK\n* checking for hidden files and directories ... OK\n* checking for portable file names ... OK\n* checking for sufficient/correct file permissions ... OK\n* checking whether package 'rcontroll' can be installed ... ERROR\nInstallation failed.\nSee '/tmp/workdir/rcontroll/old/rcontroll.Rcheck/00install.out' for details.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Validating Key Uniqueness in rows_patch() in R\nDESCRIPTION: This code tests that rows_patch() correctly identifies and reports duplicate keys in the source dataframe. It ensures proper error messages are shown when duplicate keys are encountered.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rows.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(rows_patch(x, y, by = \"a\")))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log - GREENeR Package\nDESCRIPTION: R package installation log showing error due to missing 'sf' package dependency during package verification and installation process.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/GREENeR/new/GREENeR.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'GREENeR/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'GREENeR' version '0.1.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Conditions and Values Count with Multiple Conditions in vec_case_when() in R\nDESCRIPTION: Verifies that having more conditions than values will throw an error in vec_case_when().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_18\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE, TRUE), list(1))\n```\n\n----------------------------------------\n\nTITLE: Testing ntile() with NA Input in R\nDESCRIPTION: This test checks the behavior of ntile() when 'n' is set to NA. It expects an error message indicating that 'n' must be a whole number, not a numeric NA.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rank.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nntile(1, n = NA_real_)\n```\n\n----------------------------------------\n\nTITLE: Testing Error with Inequality Join and keep=FALSE\nDESCRIPTION: Shows that join_cols() prevents using keep=FALSE with an inequality join that uses >= and < operators. The error message clearly indicates this is an invalid combination.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-cols.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\njoin_cols(c(\"xl\", \"xu\"), c(\"yl\", \"yu\"), by = join_by(xl >= yl, xu < yu), keep = FALSE)\n```\n\n----------------------------------------\n\nTITLE: Testing Empty String Argument Names with Named Conditions in vec_case_when() in R\nDESCRIPTION: Verifies error message behavior with empty string for conditions_arg and size mismatches.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_29\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = TRUE, y = c(TRUE, FALSE)), list(1, 2), conditions_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing Empty Input Restriction in vec_case_when() in R\nDESCRIPTION: Tests that vec_case_when() cannot accept empty inputs for both conditions and values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_19\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(), list())\n```\n\n----------------------------------------\n\nTITLE: Checking for unexpected arguments in lag() function in R\nDESCRIPTION: Tests that lag() correctly catches misspelled or unexpected arguments passed via dots (...) and reports them clearly.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nlag(1:5, deault = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Default Value Size Requirements in vec_case_when() in R\nDESCRIPTION: Verifies that the default parameter must be either size 1 or have the same size as conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(FALSE), list(1L), default = 2:3)\n```\n\n----------------------------------------\n\nTITLE: Testing ntile() with Zero Input in R\nDESCRIPTION: This test verifies that ntile() raises an error when 'n' is set to zero. It expects an error message stating that 'n' must be positive.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rank.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nntile(1, n = 0)\n```\n\n----------------------------------------\n\nTITLE: Comparing Integer and Numeric Data Types in R with dplyr\nDESCRIPTION: Shows that all_equal() identifies type differences between integer and double (numeric) columns in data frames without convert=TRUE parameter.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df1, df2)\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for swfscAirDAS Package (Devel Version)\nDESCRIPTION: Detailed installation failure log for the swfscAirDAS package in a development environment, showing the error occurs during byte-compilation due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_68\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'swfscAirDAS' ...\n** package 'swfscAirDAS' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'swfscAirDAS'\n* removing '/tmp/workdir/swfscAirDAS/new/swfscAirDAS.Rcheck/swfscAirDAS'\n```\n\n----------------------------------------\n\nTITLE: ggOceanMaps Package Dependency Error in Development Environment\nDESCRIPTION: Log output showing dependency errors during installation of the ggOceanMaps package in the development environment. The package requires 'sf' which is not available in the build environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggOceanMaps/new/ggOceanMaps.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggOceanMaps/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggOceanMaps' version '1.3.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing conditions_arg Validation in vec_case_when() in R\nDESCRIPTION: Ensures that the conditions_arg parameter must be a string, not another data type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_6\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(1), conditions_arg = 1)\n```\n\n----------------------------------------\n\nTITLE: ggchangepoint Package Successful Build Log in Development Environment\nDESCRIPTION: Log output showing successful installation and check of the ggchangepoint package in the development environment, with all tests passing and no errors or warnings.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggchangepoint/new/ggchangepoint.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggchangepoint/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggchangepoint' version '0.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n* checking installed files from 'inst/doc' ... OK\n* checking files in 'vignettes' ... OK\n* checking examples ... OK\n* checking for unstated dependencies in vignettes ... OK\n* checking package vignettes in 'inst/doc' ... OK\n* checking running R code from vignettes ... NONE\n  'introduction.Rmd' using 'UTF-8'... OK\n* checking re-building of vignette outputs ... OK\n* DONE\nStatus: OK\n```\n\n----------------------------------------\n\nTITLE: Testing named argument error in consecutive_id() function (R)\nDESCRIPTION: This snippet verifies that the consecutive_id() function raises an appropriate error when arguments are passed by name instead of position.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/consecutive-id.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nconsecutive_id(x = 1:4)\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for meteoland\nDESCRIPTION: Log output from R CMD check showing dependency errors for the meteoland package version 2.0.0. The check fails because the required 'sf' package is not available in the testing environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/meteoland/new/meteoland.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'meteoland/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'meteoland' version '2.0.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Empty String Values Argument with NULL in vec_case_when() in R\nDESCRIPTION: Tests error message formatting with empty string for values_arg and NULL values.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_37\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(NULL), values_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing do() with Non-Data Frame Result on Grouped Data in R\nDESCRIPTION: Tests the error message when do() returns a numeric value instead of a data frame on grouped data. The function should indicate which specific results are not data frames.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-do.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% do(1)))\n```\n\n----------------------------------------\n\nTITLE: Testing non-vector argument error in consecutive_id() function (R)\nDESCRIPTION: This snippet checks that the consecutive_id() function correctly handles and reports an error when a non-vector argument (in this case, a function) is passed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/consecutive-id.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nconsecutive_id(mean)\n```\n\n----------------------------------------\n\nTITLE: Installation Log - naturaList Package\nDESCRIPTION: Installation log showing dependency errors for the naturaList package failing due to missing 'sf' and 'lwgeom' package requirements\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_35\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/naturaList/new/naturaList.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'naturaList/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'naturaList' version '0.5.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing rename_all error for multiple renaming functions in R\nDESCRIPTION: This snippet tests if rename_all() throws an error when multiple renaming functions (tolower and toupper) are provided instead of one. It expects an error message indicating that .funs must contain one renaming function, not 2.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% rename_all(list(tolower, toupper))))\n```\n\n----------------------------------------\n\nTITLE: FRK Package Build Log in CRAN Environment\nDESCRIPTION: Log output showing an error during the build process of the FRK package in the CRAN environment. Similar to the development environment, there are failures in rebuilding vignettes 'FRK_intro.Rnw' and 'FRK_non-Gaussian.Rnw'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/FRK/old/FRK.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'FRK/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'FRK' version '2.1.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n...\n--- failed re-building 'FRK_non-Gaussian.Rnw'\n\nSUMMARY: processing the following files failed:\n  'FRK_intro.Rnw' 'FRK_non-Gaussian.Rnw'\n\nError: Vignette re-building failed.\nExecution halted\n\n* DONE\nStatus: 1 ERROR, 1 WARNING, 2 NOTEs\n```\n\n----------------------------------------\n\nTITLE: Testing reframe() with Grouped DataFrame\nDESCRIPTION: Demonstrates recycling error handling with pre-grouped data frames\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/reframe.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nreframe(gdf, x = 1:2, y = 3:5)\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated summarise_each_() Function in R\nDESCRIPTION: This snippet illustrates the use of the deprecated summarise_each_() function from dplyr. It applies the mean function to specified columns of a dataframe. A warning is displayed suggesting the use of across() as an alternative.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-lazyeval.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\nsummarise_each_(df, list(mean), c(\"x\", \"y\"))\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() error with non-existent column in R\nDESCRIPTION: This code demonstrates the error message that occurs when arrange() is called with a column name that doesn't exist in the data frame. It creates a tibble with an 'x' column but tries to arrange by 'y'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tibble(x = 1) %>% arrange(y)))\n```\n\n----------------------------------------\n\nTITLE: Testing do() with Multiple Unnamed Arguments in R\nDESCRIPTION: Tests the error message when passing multiple unnamed arguments to do(). The function should indicate that only one unnamed argument is allowed.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-do.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% do(head, tail)))\n```\n\n----------------------------------------\n\nTITLE: Testing Empty Dots Requirement in vec_case_when() in R\nDESCRIPTION: Ensures that no additional unnamed arguments can be passed to vec_case_when() through dots.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_21\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list(1), 2)\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for mapme.biodiversity\nDESCRIPTION: Log output from R CMD check showing dependency errors for the mapme.biodiversity package. The package fails to install because it requires the 'sf' package which is not available in the testing environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/mapme.biodiversity/new/mapme.biodiversity.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'mapme.biodiversity/DESCRIPTION' ... OK\n* this is package 'mapme.biodiversity' version '0.3.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing type compatibility errors in nest_join\nDESCRIPTION: Tests error reporting when trying to join on columns with incompatible types in nest_join, showing detailed error messages with the column types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_10\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(nest_join(x, y, by = join_by(a == b))))\n```\n\n----------------------------------------\n\nTITLE: Testing filter_all() error when using improper predicate format in R\nDESCRIPTION: Test case verifying that filter_all() raises an appropriate error when provided a list instead of a function or a call to all_vars()/any_vars().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-filter.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter_all(mtcars, list(~ . > 0))))\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() with NULL Formula Left Side in R\nDESCRIPTION: This snippet tests the case_match() function when the left side of the formula is NULL, which should result in an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, NULL ~ 1)\n```\n\n----------------------------------------\n\nTITLE: Testing slice helper functions for '.by' typo detection in R\nDESCRIPTION: These snippets test the error messages when '.by' is used instead of 'by' in slice helper functions, suggesting the correct argument name.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_14\n\nLANGUAGE: R\nCODE:\n```\nslice_head(df, n = 1, .by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_tail(df, n = 1, .by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_min(df, order_by = x, .by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_max(df, order_by = x, .by = x)\n```\n\nLANGUAGE: R\nCODE:\n```\nslice_sample(df, n = 1, .by = x)\n```\n\n----------------------------------------\n\nTITLE: ggspatial Package Dependency Error in Development Environment\nDESCRIPTION: Log output showing dependency errors during installation of the ggspatial package in the development environment. The package requires 'sf' and suggests 'lwgeom', both of which are not available in the build environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/ggspatial/new/ggspatial.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'ggspatial/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'ggspatial' version '1.1.7'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Comparing Data Frames with Missing Columns in R using dplyr\nDESCRIPTION: Shows how all_equal() identifies differences when comparing data frames with different column counts, using examples with mtcars, iris, and df_all datasets.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/all-equal.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nall_equal(mtcars, mtcars[, -1])\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(iris, iris[, -1])\n```\n\nLANGUAGE: r\nCODE:\n```\nall_equal(df_all, df_all[, -1])\n```\n\n----------------------------------------\n\nTITLE: Testing add_tally() error ownership\nDESCRIPTION: Verifies that add_tally() properly owns and reports errors for invalid operations\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(add_tally(mtcars, wt = 1 + \"\")))\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() with NULL Formula Right Side in R\nDESCRIPTION: This snippet tests the case_match() function when the right side of the formula is NULL, which should result in an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_3\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, 1 ~ NULL)\n```\n\n----------------------------------------\n\nTITLE: Accessing .data Pronoun with Anonymous Function in across()\nDESCRIPTION: Demonstrates error when trying to use a non-inlined anonymous function that attempts to access the .data pronoun in the across() function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_8\n\nLANGUAGE: r\nCODE:\n```\nmutate(df, across(y, fn))\n```\n\n----------------------------------------\n\nTITLE: Custom Verb Error Handling in dplyr\nDESCRIPTION: Shows how custom verb functions integrate with dplyr's error handling system. The examples demonstrate both type errors with non-numeric arguments and size mismatch errors when combining vectors of incompatible sizes.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/conditions.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nmy_verb(mtcars, 1 + \"\", am)\n```\n\nLANGUAGE: r\nCODE:\n```\nmy_verb(mtcars, cyl, c(am, vs))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for spDates Package in R\nDESCRIPTION: This log shows an error during the installation of the spDates package version 1.1. The installation fails, but the specific reason is not provided in the log excerpt.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_58\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/spDates/new/spDates.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'spDates/DESCRIPTION' ... OK\n* this is package 'spDates' version '1.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... OK\n...\n* checking if there is a namespace ... OK\n* checking for executable files ... OK\n* checking for hidden files and directories ... OK\n* checking for portable file names ... OK\n* checking for sufficient/correct file permissions ... OK\n* checking whether package 'spDates' can be installed ... ERROR\nInstallation failed.\nSee '/tmp/workdir/spDates/new/spDates.Rcheck/00install.out' for details.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Attempting to Rename Columns During Selection in c_across()\nDESCRIPTION: Shows error when trying to rename columns during selection in c_across() function, which is not supported in this context.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_9\n\nLANGUAGE: r\nCODE:\n```\nmutate(df, z = c_across(c(y = x)))\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated cur_data() in mutate\nDESCRIPTION: Demonstrates the use of deprecated cur_data() function within mutate(), showing the deprecation warning and suggesting pick() as an alternative.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-context.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\nmutate(df, y = cur_data())\n```\n\n----------------------------------------\n\nTITLE: Testing default value compatibility with ptype in vec_case_match\nDESCRIPTION: Tests that the default value must be compatible with the specified ptype. This ensures type consistency for the default fallback value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(1), values = list(2L), default = 1.5, ptype = integer())\n```\n\n----------------------------------------\n\nTITLE: Testing new_grouped_df Constructor Errors in R\nDESCRIPTION: Tests error cases for the new_grouped_df() constructor, including invalid column names and input types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/grouped-df.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(new_grouped_df(tibble(x = 1:10), tibble(other = list(1:2)))))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(new_grouped_df(10)))\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log - glottospace Package\nDESCRIPTION: R package installation log showing error due to missing 'sf' package dependency during package verification and installation process.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/glottospace/new/glottospace.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'glottospace/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'glottospace' version '0.0.112'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing select_if error for invalid predicate returning multiple logicals in R\nDESCRIPTION: This snippet tests if select_if() throws an error when the predicate function returns multiple logical values instead of a single one. It expects an error message indicating that .p should return a single logical.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-select.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(df %>% select_if(function(.x) c(TRUE, TRUE))))\n```\n\n----------------------------------------\n\nTITLE: Using Deprecated cur_data_all() in mutate\nDESCRIPTION: Shows the use of deprecated cur_data_all() function within mutate(), displaying the deprecation warning and recommending pick() as a replacement.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-context.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nmutate(df, y = cur_data_all())\n```\n\n----------------------------------------\n\nTITLE: Testing empty values_arg error messaging in vec_case_match\nDESCRIPTION: Tests error messaging with empty values_arg. This shows how positional and named elements are referenced in error messages when no argument name is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_18\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = 1, haystacks = list(1, 2), values = list(\"x\", b = 1), values_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing bind_rows() with invalid input type (environment)\nDESCRIPTION: Verifies that bind_rows() throws an appropriate error when given an environment instead of a data frame or named atomic vector.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/bind-rows.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n# invalid type\nll <- list(tibble(a = 1:5), env(a = 1))\n(expect_error(bind_rows(ll)))\n```\n\n----------------------------------------\n\nTITLE: Installing manydata R Package Log\nDESCRIPTION: Installation log showing a failure during lazy loading due to missing 'sf' package dependency for the manydata package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'manydata' ...\n** package 'manydata' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'manydata'\n* removing '/tmp/workdir/manydata/new/manydata.Rcheck/manydata'\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Default Argument Name in vec_case_when() in R\nDESCRIPTION: Tests that a custom default_arg name works correctly in error messages when size constraints are violated.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(FALSE), list(1L), default = 2:3, default_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Standalone cur_data_all()\nDESCRIPTION: Shows error message when cur_data_all() is used outside of data-masking verbs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-context.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(cur_data_all()))\n```\n\n----------------------------------------\n\nTITLE: Testing pick() with removed column\nDESCRIPTION: This snippet tests the behavior of pick() when attempting to select a column that has been removed in the same mutate() call.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_6\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, x = NULL, y = pick(x))\n```\n\n----------------------------------------\n\nTITLE: Testing Weight Parameter Error in sample_n()\nDESCRIPTION: Creates a test case with a zero weight value to demonstrate how sample_n() handles and reports errors related to insufficient positive probabilities.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_5\n\nLANGUAGE: r\nCODE:\n```\ndf <- data.frame(x = 1:2, y = c(0, 1))\n(expect_error(sample_n(df, 2, weight = y)))\n```\n\n----------------------------------------\n\nTITLE: Type compatibility check for default parameter in shift() function in R\nDESCRIPTION: Tests that shift() validates type compatibility between the default parameter and x, preventing precision loss when converting types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_7\n\nLANGUAGE: r\nCODE:\n```\nshift(1L, default = 1.5)\n```\n\n----------------------------------------\n\nTITLE: Testing case_match() with NULL Condition in R\nDESCRIPTION: This snippet tests the case_match() function when called with a NULL condition, which should result in an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/case-match.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\ncase_match(1, NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing do() with Character Result instead of Data Frame in R\nDESCRIPTION: Tests the error message when do() returns a character value instead of a data frame. The function should indicate which results are not data frames and specify the incorrect type.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-do.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(df %>% do(\"a\")))\n```\n\n----------------------------------------\n\nTITLE: Testing arrange() error with vector size mismatch in R\nDESCRIPTION: This code demonstrates the error message when arrange() is used with an expression that returns a vector of incorrect size. It creates a tibble with one row but tries to arrange by a vector of length 2.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/arrange.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tibble(x = 1) %>% arrange(rep(x, 2))))\n```\n\n----------------------------------------\n\nTITLE: Deprecated across() Variadic Syntax\nDESCRIPTION: Shows the deprecated variadic syntax for across() where arguments are passed through ... instead of directly to .fns via an anonymous function, which was deprecated in dplyr 1.1.0.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/across.md#2025-04-21_snippet_15\n\nLANGUAGE: r\nCODE:\n```\nsummarise(df, across(everything(), mean, na.rm = TRUE))\n```\n\n----------------------------------------\n\nTITLE: Testing grouped_df Helper Function Errors in R\nDESCRIPTION: Tests error handling in the grouped_df() helper function for invalid variable names and input types.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/grouped-df.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(grouped_df(data.frame(x = 1), \"y\", FALSE)))\n```\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(grouped_df(data.frame(x = 1), 1)))\n```\n\n----------------------------------------\n\nTITLE: Testing desc() function error handling with non-vector input in R\nDESCRIPTION: This code tests that the desc() function from dplyr raises a clear error message when given a function (mean) instead of a vector. The test verifies that the error message specifically indicates that 'x' must be a vector, not a function.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/desc.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ndesc(mean)\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated `multiple = NULL` in left_join Function (R)\nDESCRIPTION: This snippet demonstrates the deprecated usage of `multiple = NULL` in the `left_join` function, showing the warning message and the resulting output.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_13\n\nLANGUAGE: R\nCODE:\n```\nleft_join(df1, df2, by = join_by(x), multiple = NULL)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for .by Argument with Grouped Data Frames in mutate() (R)\nDESCRIPTION: This snippet tests error handling when using the .by argument with already grouped or rowwise data frames in mutate(). It expects errors in both cases.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nmutate(gdf, .by = x)\nmutate(rdf, .by = x)\n```\n\n----------------------------------------\n\nTITLE: Testing Deprecated mutate_each_() Function in R\nDESCRIPTION: This snippet shows the use of the deprecated mutate_each_() function from dplyr. It applies a function to specified columns of a dataframe, adding 1 to each value. A warning is displayed suggesting the use of across() as an alternative.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/deprec-lazyeval.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nmutate_each_(df, list(~ .x + 1L), c(\"x\", \"y\"))\n```\n\n----------------------------------------\n\nTITLE: Checking for unexpected arguments in lead() function in R\nDESCRIPTION: Tests that lead() correctly catches misspelled or unexpected arguments passed via dots (...) and reports them clearly.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_3\n\nLANGUAGE: r\nCODE:\n```\nlead(1:5, deault = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Empty Input with Default in vec_case_when() in R\nDESCRIPTION: Verifies that even with a default value, at least one condition must be supplied to vec_case_when().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_20\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(), list(), default = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing mutate() with pick_wrapper() on rowwise data\nDESCRIPTION: This snippet tests the behavior of mutate() with a custom pick_wrapper() function on rowwise data, expecting an error due to size mismatch.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nmutate(rdf, z = pick_wrapper(x, y))\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for telemac Package\nDESCRIPTION: Output from CRAN package check for the telemac package, showing an installation error due to a missing 'sf' package dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_72\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/telemac/old/telemac.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'telemac/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'telemac' version '0.1.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for Symbol Arguments in order_by()\nDESCRIPTION: This test checks that order_by() provides a helpful error message when passed a symbol instead of a function call, suggesting an alternative using arrange().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/order-by.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(order_by(mtcars, cyl)))\n```\n\n----------------------------------------\n\nTITLE: Testing Custom Argument Names with Size Mismatch in vec_case_when() in R\nDESCRIPTION: Tests custom conditions_arg behavior with size mismatches between named conditions.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_28\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(x = TRUE, y = c(TRUE, FALSE)), list(1, 2), conditions_arg = \"foo\")\n```\n\n----------------------------------------\n\nTITLE: Testing Conditions and Values Count Matching in vec_case_when() in R\nDESCRIPTION: Ensures that the number of conditions must equal the number of values provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-when.md#2025-04-21_snippet_17\n\nLANGUAGE: r\nCODE:\n```\nvec_case_when(list(TRUE), list())\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for VancouvR Package\nDESCRIPTION: Output from CRAN package check for the VancouvR package, showing an installation error due to missing 'sf' and 'lwgeom' package dependencies.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_75\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/VancouvR/old/VancouvR.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'VancouvR/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'VancouvR' version '0.1.7'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing pick_wrapper() with no selectors\nDESCRIPTION: This snippet tests the behavior of a custom pick_wrapper() function when called without any selectors, expecting an error.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/pick.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, y = pick_wrapper())\n```\n\n----------------------------------------\n\nTITLE: Testing join_rows() Many-to-One Relationship Errors in R\nDESCRIPTION: This snippet tests if join_rows() provides a meaningful error message for a violation of a many-to-one relationship.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join-rows.md#2025-04-21_snippet_5\n\nLANGUAGE: R\nCODE:\n```\njoin_rows(1, c(1, 1), relationship = \"many-to-one\")\n```\n\n----------------------------------------\n\nTITLE: Validating the n parameter in lag() function in R\nDESCRIPTION: Tests error handling for the n parameter in lag(), ensuring it is a single positive whole number and not a vector or negative value.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\nlag(1:5, n = 1:2)\n```\n\nLANGUAGE: r\nCODE:\n```\nlag(1:5, -1)\n```\n\n----------------------------------------\n\nTITLE: Testing empty needles_arg error messaging in vec_case_match\nDESCRIPTION: Tests error messaging when needles_arg is an empty string. This shows the generic error message format when no specific argument name is provided.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/vec-case-match.md#2025-04-21_snippet_12\n\nLANGUAGE: r\nCODE:\n```\nvec_case_match(needles = environment(), haystacks = list(environment()), values = list(1), needles_arg = \"\")\n```\n\n----------------------------------------\n\nTITLE: Testing slice_min/max Invalid with_ties Parameter\nDESCRIPTION: Tests that slice_min() and slice_max() properly error when with_ties is not a boolean value\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_17\n\nLANGUAGE: r\nCODE:\n```\nslice_min(data.frame(x = 1:10), x, with_ties = 1)\nslice_max(data.frame(x = 1:10), x, with_ties = 1)\n```\n\n----------------------------------------\n\nTITLE: Testing Extra Arguments in if_else() Function in R\nDESCRIPTION: This snippet tests the if_else() function's behavior when extra unnamed arguments are provided. It expects an error indicating that the ... argument must be empty.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/if-else.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nif_else(TRUE, 1, 2, missing = 3, 4)\n```\n\n----------------------------------------\n\nTITLE: Testing Error Handling for List Column Handling in Rowwise mutate() (R)\nDESCRIPTION: This snippet tests error handling when dealing with list columns in rowwise mutate(). It expects an error when trying to assign a list column that doesn't match the required size.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/mutate.md#2025-04-21_snippet_4\n\nLANGUAGE: R\nCODE:\n```\nmutate(df, y = x)\n```\n\n----------------------------------------\n\nTITLE: Running R Test Command for Package Details\nDESCRIPTION: This code snippet shows a command to run detailed checks on the 'exuber' package using the revdepcheck library in R.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/problems.md#2025-04-21_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nrevdepcheck::cloud_details(, \"exuber\")\n```\n\n----------------------------------------\n\nTITLE: Testing slice_head() with non-integer 'n' in R\nDESCRIPTION: This snippet tests the error handling when a non-integer value is provided for 'n' in slice_head().\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/slice.md#2025-04-21_snippet_11\n\nLANGUAGE: R\nCODE:\n```\nslice_head(df, n = 1.1)\n```\n\n----------------------------------------\n\nTITLE: Validating order_by parameter size in shift() function in R\nDESCRIPTION: Tests that shift() ensures the order_by parameter is the same size as the input vector x.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/lead-lag.md#2025-04-21_snippet_11\n\nLANGUAGE: r\nCODE:\n```\nshift(1:5, order_by = 1:4)\n```\n\n----------------------------------------\n\nTITLE: Testing coalesce() with non-vector input validation\nDESCRIPTION: Tests that coalesce() validates that all inputs are vectors and throws an error for non-vector inputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/coalesce.md#2025-04-21_snippet_4\n\nLANGUAGE: r\nCODE:\n```\ncoalesce(1, environment())\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for swfscAirDAS Package (CRAN Version)\nDESCRIPTION: Detailed installation failure log for the swfscAirDAS package in the CRAN environment, showing the error occurs during byte-compilation due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_69\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'swfscAirDAS' ...\n** package 'swfscAirDAS' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'swfscAirDAS'\n* removing '/tmp/workdir/swfscAirDAS/old/swfscAirDAS.Rcheck/swfscAirDAS'\n```\n\n----------------------------------------\n\nTITLE: Testing default parameter size validation in nth() function in R\nDESCRIPTION: Tests that validate the default parameter must have size 1 when not used with lists. The nth() function requires the default value to be a single value, not a vector.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/nth-value.md#2025-04-21_snippet_1\n\nLANGUAGE: r\nCODE:\n```\nnth(1L, n = 2L, default = 1:2)\n```\n\n----------------------------------------\n\nTITLE: Testing named empty by parameter for cross join\nDESCRIPTION: Tests that using a named empty by parameter for a cross join still works but issues a deprecation warning.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/join.md#2025-04-21_snippet_15\n\nLANGUAGE: r\nCODE:\n```\nout <- left_join(df1, df2, by = by)\n```\n\n----------------------------------------\n\nTITLE: Dependency Check for wdpar Package\nDESCRIPTION: Package check log showing dependency errors for the wdpar package, which requires 'sf' and 'lwgeom' packages that are unavailable in the test environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_79\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/wdpar/new/wdpar.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'wdpar/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'wdpar' version '1.3.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackages required but not available: 'sf', 'lwgeom'\n\nPackage suggested but not available for checking: 'prepr'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Testing filter_if() error when predicate matches no columns in R\nDESCRIPTION: Test case verifying that filter_if() properly errors when the predicate function (is_character) doesn't match any columns in the mtcars dataset.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise-filter.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(filter_if(mtcars, is_character, all_vars(. > 0))))\n```\n\n----------------------------------------\n\nTITLE: Testing Error Messages for Sampling Too Many Rows from Groups\nDESCRIPTION: Demonstrates how sample_n() returns a meaningful error message when trying to sample more rows than available in a specific group from the mtcars dataset.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/sample.md#2025-04-21_snippet_2\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(mtcars %>% group_by(cyl) %>% sample_n(10)))\n```\n\n----------------------------------------\n\nTITLE: Testing Input Type Requirements in na_if() Function (R)\nDESCRIPTION: These snippets test the input type requirements for na_if(). They verify that the function correctly handles errors when non-vector types (like environments) are passed as arguments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/na-if.md#2025-04-21_snippet_2\n\nLANGUAGE: R\nCODE:\n```\nna_if(environment(), 1)\n```\n\nLANGUAGE: R\nCODE:\n```\nna_if(1, environment())\n```\n\n----------------------------------------\n\nTITLE: Testing tbl_at_vars error on invalid input type in R\nDESCRIPTION: Tests that tbl_at_vars throws an appropriate error message when provided with a raw vector instead of the expected character/numeric vector or vars() object.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/colwise.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\n(expect_error(tbl_at_vars(iris, raw(3))))\n```\n\n----------------------------------------\n\nTITLE: Testing name parameter validation in count()\nDESCRIPTION: Demonstrates error handling when invalid name parameters are provided to count()\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/count-tally.md#2025-04-21_snippet_0\n\nLANGUAGE: r\nCODE:\n```\ncount(df, x, name = 1)\ncount(df, x, name = letters)\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for wallace Package\nDESCRIPTION: Output from CRAN package check for the wallace package, showing a successful installation and check with one NOTE.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_76\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/wallace/old/wallace.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'wallace/DESCRIPTION' ... OK\n* this is package 'wallace' version '2.0.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... NOTE\n...\n* checking for code/documentation mismatches ... OK\n* checking Rd \\usage sections ... OK\n* checking Rd contents ... OK\n* checking for unstated dependencies in examples ... OK\n* checking examples ... OK\n* checking for unstated dependencies in 'tests' ... OK\n* checking tests ... OK\n  Running 'testthat.R'\n* DONE\nStatus: 1 NOTE\n```\n\n----------------------------------------\n\nTITLE: Testing error handling in validate_rowwise_df() function in R\nDESCRIPTION: This series of snippets tests various error scenarios for the validate_rowwise_df() function, including incorrect .rows column, wrong groups attribute structure, and incompatible data assignments.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/tests/testthat/_snaps/rowwise.md#2025-04-21_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df1)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df2)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df3)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df4)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df7)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(attr(df8, \"groups\")$.rows <- 1:8))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df10)))\n```\n\nLANGUAGE: R\nCODE:\n```\n(expect_error(validate_rowwise_df(df11)))\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for SWTools Package\nDESCRIPTION: Output from CRAN package check for the SWTools package, showing an installation error due to a missing 'sf' package dependency.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_71\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/SWTools/old/SWTools.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'SWTools/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'SWTools' version '0.2.4'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for waves Package\nDESCRIPTION: Console output showing installation failure for the waves package on both development and CRAN versions, with the specific error being a missing dependency on the 'sf' package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_78\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'waves' ...\n** package 'waves' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** data\n*** moving datasets to lazyload DB\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'waves'\n* removing '/tmp/workdir/waves/new/waves.Rcheck/waves'\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for stppSim Package (Devel Version)\nDESCRIPTION: Error log showing installation failure for the stppSim package (version 1.2.7) in a development environment due to missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_64\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/stppSim/new/stppSim.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'stppSim/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'stppSim' version '1.2.7'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: CRAN Check Log for trackdf Package\nDESCRIPTION: Output from CRAN package check for the trackdf package, showing an installation error due to missing 'sf' and 'moveVis' package dependencies.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_73\n\nLANGUAGE: text\nCODE:\n```\n* using log directory '/tmp/workdir/trackdf/old/trackdf.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'trackdf/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'trackdf' version '0.3.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'moveVis'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Vignette Rebuilding Error in banR Package\nDESCRIPTION: Error log showing a failure in rebuilding the geocode.Rmd vignette due to an API service error (503) and Pandoc availability issues. The error occurs during the R CMD check process when attempting to rebuild vignette outputs.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/new-problems.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nError in re-building vignettes:\n  ...\nWarning in engine$weave(file, quiet = quiet, encoding = enc) :\n  Pandoc (>= 1.12.3) and/or pandoc-citeproc not available. Falling back to R Markdown v1.\nQuitting from lines 47-49 (geocode.Rmd) \nError: processing vignette 'geocode.Rmd' failed with diagnostics:\nThe API sent back an error 503\nExecution halted\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for roads (CRAN)\nDESCRIPTION: R CMD check log showing an installation error for the CRAN version of the roads package due to missing dependency 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_51\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/roads/old/roads.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'roads/DESCRIPTION' ... OK\n* this is package 'roads' version '1.1.0'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for SpatialKDE Package in R\nDESCRIPTION: This log shows an error during the installation of the SpatialKDE package version 0.8.2. The installation fails due to a missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_56\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/SpatialKDE/new/SpatialKDE.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'SpatialKDE/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'SpatialKDE' version '0.8.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Log - occCite Package\nDESCRIPTION: CRAN installation check log for occCite package showing dependency error for missing 'BIEN' package\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_36\n\nLANGUAGE: shell\nCODE:\n```\n* using log directory '/tmp/workdir/occCite/old/occCite.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'occCite/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'occCite' version '0.5.6'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'BIEN'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Installation Error Log for spnaf Package in R\nDESCRIPTION: This log shows an error during the installation of the spnaf package version 0.2.1. The installation fails due to a missing required package 'sf'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_59\n\nLANGUAGE: plaintext\nCODE:\n```\n* using log directory '/tmp/workdir/spnaf/new/spnaf.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'spnaf/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'spnaf' version '0.2.1'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: CRAN Installation Error Log for PSS.Health Package\nDESCRIPTION: Installation log showing a dependency error during installation of PSS.Health package. The error occurs during lazy loading due to a missing dependency on the 'sf' package.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_43\n\nLANGUAGE: shell\nCODE:\n```\n* installing *source* package 'PSS.Health' ...\n** package 'PSS.Health' successfully unpacked and MD5 sums checked\n** using staged installation\n** R\n** inst\n** byte-compile and prepare package for lazy loading\nError in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]) : \n  there is no package called 'sf'\nCalls: <Anonymous> ... loadNamespace -> withRestarts -> withOneRestart -> doWithOneRestart\nExecution halted\nERROR: lazy loading failed for package 'PSS.Health'\n* removing '/tmp/workdir/PSS.Health/old/PSS.Health.Rcheck/PSS.Health'\n```\n\n----------------------------------------\n\nTITLE: R Package Dependency Check Logs for motif\nDESCRIPTION: Log output from R CMD check showing dependency errors for the motif package version 0.5.2. The check fails because the required 'sf' package is not available in the testing environment.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/motif/new/motif.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'motif/DESCRIPTION' ... OK\n* this is package 'motif' version '0.5.2'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```\n\n----------------------------------------\n\nTITLE: Package Installation Error Log for rbenvo\nDESCRIPTION: R CMD check log showing an installation error for the rbenvo package due to missing dependencies 'sf' and suggested package 'lwgeom'.\nSOURCE: https://github.com/tidyverse/dplyr/blob/main/revdep/failures.md#2025-04-21_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\n* using log directory '/tmp/workdir/rbenvo/old/rbenvo.Rcheck'\n* using R version 4.1.1 (2021-08-10)\n* using platform: x86_64-pc-linux-gnu (64-bit)\n* using session charset: UTF-8\n* using option '--no-manual'\n* checking for file 'rbenvo/DESCRIPTION' ... OK\n* checking extension type ... Package\n* this is package 'rbenvo' version '1.0.5'\n* package encoding: UTF-8\n* checking package namespace information ... OK\n* checking package dependencies ... ERROR\nPackage required but not available: 'sf'\n\nPackage suggested but not available for checking: 'lwgeom'\n\nSee section 'The DESCRIPTION file' in the 'Writing R Extensions'\nmanual.\n* DONE\nStatus: 1 ERROR\n```"
  }
]
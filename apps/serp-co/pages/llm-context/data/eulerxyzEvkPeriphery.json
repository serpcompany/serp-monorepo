[
  {
    "owner": "euler-xyz",
    "repo": "evk-periphery",
    "content": "TITLE: Running Interactive Deployment Script\nDESCRIPTION: Command to run the interactive deployment script that walks through the deployment process step by step, with an example showing usage with account and verification options.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n./script/interactiveDeployment.sh\n```\n\nLANGUAGE: sh\nCODE:\n```\n./script/interactiveDeployment.sh --account ACC_NAME --verify\n```\n\n----------------------------------------\n\nTITLE: Starting Anvil Fork for Local Deployment\nDESCRIPTION: Command to source environment variables and start a local Anvil fork using the specified RPC URL for testing deployments in a local environment.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nsource .env && anvil --fork-url \"$FORK_RPC_URL\"\n```\n\n----------------------------------------\n\nTITLE: Creating Environment File for EVK Periphery\nDESCRIPTION: Command to create the .env file by copying from the example template. This file contains essential environment variables for deployments and contract interactions.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Cloning Euler Interfaces Repository for EVK Periphery\nDESCRIPTION: Command to clone the euler-interfaces repository in the parent directory of the evk-periphery repository to provide access to addresses of already deployed contracts.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd .. && git clone https://github.com/euler-xyz/euler-interfaces.git && cd evk-periphery\n```\n\n----------------------------------------\n\nTITLE: Deploying Oracle Adapters with CSV Configuration\nDESCRIPTION: Command to deploy oracle adapters using CSV input files, with an option to provide previously deployed adapter addresses to avoid duplicates.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n./script/production/DeployOracleAdapters.sh <csv_input_file_path> [csv_oracle_adapters_addresses_path]\n```\n\nLANGUAGE: sh\nCODE:\n```\n./script/production/DeployOracleAdapters.sh \"script/production/mainnet/oracleAdapters/test/Euler V2 Oracles - Chainlink.csv\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Adapters in Adapters Registry\nDESCRIPTION: Command to whitelist or revoke oracle adapters in the Adapters Registry using a CSV file containing adapter addresses and configuration details.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n./script/production/ConfigWhitelistOracleAdapters.sh <csv_file_path>\n```\n\n----------------------------------------\n\nTITLE: Whitelisting Vaults in Governed Perspective\nDESCRIPTION: Command to whitelist or revoke vaults in the Governed Perspective using a CSV file containing vault addresses and configuration details.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n./script/production/ConfigWhitelistGovernedPerspective.sh <csv_file_path>\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployed Contracts After Deployment\nDESCRIPTION: Command to verify deployed contracts using the Foundry broadcast file if verification wasn't done during the initial deployment process.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/README.md#2025-04-18_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n./script/utils/verifyContracts.sh script/deployments/default/1/broadcast/50_CoreAndPeriphery_0.json\n```\n\n----------------------------------------\n\nTITLE: Executing Cluster Management Script\nDESCRIPTION: Command to run the management script for cluster configuration and deployment\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./script/production/ExecuteSolidityScript.sh script/production/mainnet/clusters/<ClusterSpecificScript> [options]\n```\n\n----------------------------------------\n\nTITLE: Deploying GovernorAccessControlEmergencyFactory in Solidity\nDESCRIPTION: This snippet outlines the deployment process for the GovernorAccessControlEmergencyFactory. It includes preparing timelock parameters, identifying emergency guardians, and calling the deploy function.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/docs/governor-access-control-emergency-factory.md#2025-04-18_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\n// Prepare timelock parameters\nTimelockControllerParams memory adminTimelockParams = TimelockControllerParams({\n    minDelay: 1 days,\n    proposers: [address(adminDAO)],\n    cancellers: [address(adminDAO)],\n    executors: [address(0)] // Open executor role\n});\n\nTimelockControllerParams memory wildcardTimelockParams = TimelockControllerParams({\n    minDelay: 2 days,\n    proposers: [address(riskPartner)],\n    cancellers: [address(riskPartner)],\n    executors: [address(0)] // Open executor role\n});\n\n// Identify emergency guardians\naddress[] memory emergencyGuardians = [address(guardian1), address(guardian2)];\n\n// Deploy the governance suite\nGovernorAccessControlEmergencyFactory factory = new GovernorAccessControlEmergencyFactory();\nfactory.deploy(\n    adminTimelockParams,\n    wildcardTimelockParams,\n    emergencyGuardians\n);\n\n// Record deployed contract addresses\naddress governor = factory.governor();\naddress adminTimelock = factory.adminTimelock();\naddress wildcardTimelock = factory.wildcardTimelock();\n\n// Install governor on vault and oracle router\nvault.setGovernor(governor);\noracleRouter.setGovernor(governor);\n```\n\n----------------------------------------\n\nTITLE: Emergency Vault Management Example\nDESCRIPTION: Example command for executing emergency management operations on a Prime Cluster vault\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./script/production/ExecuteSolidityScript.sh script/production/mainnet/clusters/PrimeCluster.s.sol --rpc-url https://ethereum-rpc.publicnode.com --batch-via-safe --safe-address 0xB1345E7A4D35FB3E6bF22A32B3741Ae74E5Fba27 --vault-address 0xD8b27CF359b7D15710a5BE299AF6e7Bf904984C2 --emergency-ltv-collateral --emergency-caps\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Remappings in Foundry Project\nDESCRIPTION: This configuration maps library imports to their actual locations on disk. It establishes aliases for dependencies like OpenZeppelin, LayerZero, Ethereum Vault Connector, and Euler components so they can be imported using standard import paths in Solidity contracts.\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/remappings.txt#2025-04-18_snippet_0\n\nLANGUAGE: foundry-toml\nCODE:\n```\nlib/euler-price-oracle:@openzeppelin/contracts/=lib/euler-price-oracle/lib/openzeppelin-contracts/contracts/\nlib/euler-earn:@openzeppelin=lib/euler-earn/lib/openzeppelin-contracts/\nlib/euler-earn:@openzeppelin-upgradeable=lib/euler-earn/lib/openzeppelin-contracts-upgradeable/contracts/\nlib/euler-earn:ethereum-vault-connector=lib/euler-earn/lib/ethereum-vault-connector/src/\nlib/layerzero-devtools/packages/oft-evm/contracts:@openzeppelin/contracts-upgradeable=lib/openzeppelin-contracts/contracts/\nlib/layerzero-devtools/packages/oft-evm-upgradeable/contracts:@openzeppelin/contracts-upgradeable=lib/openzeppelin-contracts-upgradeable/contracts/\nlib/layerzero-devtools/packages/oapp-evm-upgradeable/contracts:@openzeppelin/contracts-upgradeable=lib/openzeppelin-contracts-upgradeable/contracts/\n@layerzerolabs/oft-evm/=lib/layerzero-devtools/packages/oft-evm/\n@layerzerolabs/oapp-evm/=lib/layerzero-devtools/packages/oapp-evm/\n@layerzerolabs/oapp-evm-upgradeable/=lib/layerzero-devtools/packages/oapp-evm-upgradeable/\n@layerzerolabs/lz-evm-protocol-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/protocol\n@layerzerolabs/lz-evm-messagelib-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/messagelib\n@layerzerolabs/lz-evm-oapp-v2/=lib/layerzero-v2/packages/layerzero-v2/evm/oapp\nopenzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\nopenzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\nethereum-vault-connector/=lib/ethereum-vault-connector/src/\nevc/=lib/ethereum-vault-connector/src/\nevk/=lib/euler-vault-kit/src/\nevk-test/=lib/euler-vault-kit/test/\neuler-price-oracle/=lib/euler-price-oracle/src/\neuler-price-oracle-test/=lib/euler-price-oracle/test/\nfee-flow/=lib/fee-flow/src/\nreward-streams/=lib/reward-streams/src/\n@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\neuler-earn/=lib/euler-earn/src/\nlayerzero/oft-evm/=lib/layerzero-devtools/packages/oft-evm/contracts/\nlayerzero/oft-evm-upgradeable/=lib/layerzero-devtools/packages/oft-evm-upgradeable/contracts/\nsolidity-bytes-utils/=lib/solidity-bytes-utils/\n```\n\n----------------------------------------\n\nTITLE: Installing Foundry Package Manager\nDESCRIPTION: Command to install the Foundry package manager for Ethereum development\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://foundry.paradigm.xyz | bash\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository\nDESCRIPTION: Commands to clone the euler-periphery repository and navigate to its directory\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/euler-xyz/euler-periphery.git && cd euler-periphery\n```\n\n----------------------------------------\n\nTITLE: Compiling Contracts\nDESCRIPTION: Commands to clean and compile the smart contracts\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nforge clean && forge compile\n```\n\n----------------------------------------\n\nTITLE: Updating Foundry\nDESCRIPTION: Command to update Foundry to the latest version\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfoundryup\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Command to install project dependencies using Forge\nSOURCE: https://github.com/euler-xyz/evk-periphery/blob/master/script/production/README.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nforge install\n```"
  }
]
[
  {
    "owner": "antvis",
    "repo": "f2",
    "content": "TITLE: Creating a Dodge Column Chart with F2 Framework in JavaScript\nDESCRIPTION: This code demonstrates how to create a grouped column chart (dodge column) using the F2 visualization framework. It shows how to set up data with multiple series, configure chart dimensions, apply the 'dodge' adjust type for grouped columns, and customize the visual appearance.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/column/dodge/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\n\nconst data = [\n  { name: 'London', month: 'Jan.', value: 12.9, type: 'Max' },\n  { name: 'London', month: 'Jan.', value: 5.7, type: 'Min' },\n  { name: 'London', month: 'Feb.', value: 14.1, type: 'Max' },\n  { name: 'London', month: 'Feb.', value: 7.1, type: 'Min' },\n  { name: 'London', month: 'Mar.', value: 17.2, type: 'Max' },\n  { name: 'London', month: 'Mar.', value: 8.7, type: 'Min' },\n  { name: 'London', month: 'Apr.', value: 19.6, type: 'Max' },\n  { name: 'London', month: 'Apr.', value: 10.6, type: 'Min' },\n  { name: 'London', month: 'May', value: 22.6, type: 'Max' },\n  { name: 'London', month: 'May', value: 13.5, type: 'Min' },\n  { name: 'London', month: 'Jun.', value: 25.3, type: 'Max' },\n  { name: 'London', month: 'Jun.', value: 16.3, type: 'Min' },\n  { name: 'London', month: 'Jul.', value: 28.1, type: 'Max' },\n  { name: 'London', month: 'Jul.', value: 19.1, type: 'Min' },\n  { name: 'London', month: 'Aug.', value: 26.9, type: 'Max' },\n  { name: 'London', month: 'Aug.', value: 18.2, type: 'Min' },\n  { name: 'London', month: 'Sep.', value: 24.3, type: 'Max' },\n  { name: 'London', month: 'Sep.', value: 15.9, type: 'Min' },\n  { name: 'London', month: 'Oct.', value: 19.7, type: 'Max' },\n  { name: 'London', month: 'Oct.', value: 12, type: 'Min' },\n  { name: 'London', month: 'Nov.', value: 15.4, type: 'Max' },\n  { name: 'London', month: 'Nov.', value: 8.4, type: 'Min' },\n  { name: 'London', month: 'Dec.', value: 13.4, type: 'Max' },\n  { name: 'London', month: 'Dec.', value: 6.5, type: 'Min' }\n];\n\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio\n});\n\nchart.source(data);\nchart.tooltip({\n  custom: true, // custom tooltip\n  showXTip: true,\n  showYTip: true,\n  snap: true,\n  crosshairsType: 'xy',\n  crosshairsStyle: {\n    lineDash: [2]\n  }\n});\n\nchart.interval().position('month*value').color('type', ['#1890FF', '#2FC25B']).adjust({\n  type: 'dodge',\n  marginRatio: 0.05 // set the distance between columns\n});\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Basic F2 Chart Implementation\nDESCRIPTION: Example showing how to create a basic chart using F2, including HTML canvas setup and JavaScript chart configuration with data visualization components.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"mountNode\"></canvas>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\nconst context = document.getElementById('mountNode').getContext('2d');\nconst { props } = (\n  <Canvas context={context} pixelRatio={window.devicePixelRatio}>\n    <Chart data={data}>\n      <Axis field=\"genre\" />\n      <Axis field=\"sold\" />\n      <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n      <Tooltip />\n    </Chart>\n  </Canvas>\n);\n\nconst canvas = new Canvas(props);\nawait canvas.render();\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Bar Chart with F2 Interval Component\nDESCRIPTION: Example demonstrating how to create a simple bar chart using the F2 Canvas, Chart, and Interval components. The chart displays sold items by genre with color encoding.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Interval } from '@antv/f2';\nconst data = [\n  { genre: 'Sports', sold: 5 },\n  { genre: 'Strategy', sold: 10 },\n  { genre: 'Action', sold: 20 },\n  { genre: 'Shooter', sold: 20 },\n  { genre: 'Other', sold: 40 },\n];\n\n<Canvas context={context}>\n  <Chart data={data}>\n    <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Creating a Bar Chart with F2 using JSX Syntax\nDESCRIPTION: Example code that demonstrates creating a basic bar chart with F2 using JSX-style component configuration. It includes data setup, canvas context initialization, and chart rendering with axis and tooltip components.\nSOURCE: https://github.com/antvis/f2/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// F2 对数据源格式的要求，仅仅是 JSON 数组，数组的每个元素是一个标准 JSON 对象。\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\n// 获取 canvas context\nconst context = document.getElementById('mountNode').getContext('2d');\nconst { props } = (\n  <Canvas context={context} pixelRatio={window.devicePixelRatio}>\n    <Chart data={data}>\n      <Axis field=\"genre\" />\n      <Axis field=\"sold\" />\n      <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n      <Tooltip />\n    </Chart>\n  </Canvas>\n);\n\nconst canvas = new Canvas(props);\ncanvas.render();\n```\n\n----------------------------------------\n\nTITLE: Using Line Component in F2 Chart\nDESCRIPTION: Example showing how to import and use the Line component from the F2 library to create a basic line chart. The example creates a chart with genre on the x-axis and sold quantity on the y-axis.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/line.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Line } from '@antv/f2';\nconst data = [\n  { genre: 'Sports', sold: 5 },\n  { genre: 'Strategy', sold: 10 },\n  { genre: 'Action', sold: 20 },\n  { genre: 'Shooter', sold: 20 },\n  { genre: 'Other', sold: 40 },\n];\n\n<Canvas context={context}>\n  <Chart data={data}>\n    <Line x=\"genre\" y=\"sold\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Rendering a Point Chart with F2 in React\nDESCRIPTION: This code snippet demonstrates how to create a basic point chart using the F2 library in a React component. It imports necessary components, defines sample data, and renders a Canvas with a Chart containing a Point geometry.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/point.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Point } from '@antv/f2';\nconst data = [\n  { genre: 'Sports', sold: 5 },\n  { genre: 'Strategy', sold: 10 },\n  { genre: 'Action', sold: 20 },\n  { genre: 'Shooter', sold: 20 },\n  { genre: 'Other', sold: 40 },\n];\n\n<Canvas context={context}>\n  <Chart data={data}>\n    <Point x=\"genre\" y=\"sold\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Creating a Stacked Column Chart with F2 in JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a stacked column chart using the F2 charting library. It sets up the data, configures the chart axes, creates a stacked interval geometry, and renders the chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/column/stack/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// 创建数据\nconst data = [\n  { name: 'London', 月份: 'Jan.', 月均降雨量: 18.9 },\n  { name: 'London', 月份: 'Feb.', 月均降雨量: 28.8 },\n  { name: 'London', 月份: 'Mar.', 月均降雨量: 39.3 },\n  { name: 'London', 月份: 'Apr.', 月均降雨量: 81.4 },\n  { name: 'London', 月份: 'May.', 月均降雨量: 47 },\n  { name: 'London', 月份: 'Jun.', 月均降雨量: 20.3 },\n  { name: 'Berlin', 月份: 'Jan.', 月均降雨量: 12.4 },\n  { name: 'Berlin', 月份: 'Feb.', 月均降雨量: 23.2 },\n  { name: 'Berlin', 月份: 'Mar.', 月均降雨量: 34.5 },\n  { name: 'Berlin', 月份: 'Apr.', 月均降雨量: 99.7 },\n  { name: 'Berlin', 月份: 'May.', 月均降雨量: 52.6 },\n  { name: 'Berlin', 月份: 'Jun.', 月均降雨量: 35.5 }\n];\n\n// 创建图表\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio\n});\n\nchart.source(data, {\n  月均降雨量: {\n    tickCount: 5\n  }\n});\nchart.coord({\n  transposed: true\n});\nchart.axis('月份', {\n  line: F2.Util.mix({}, F2.Global.axis.line, {\n    top: false\n  }),\n  label: {\n    textAlign: 'center',\n    textBaseline: 'middle'\n  },\n  grid: null\n});\nchart.axis('月均降雨量', {\n  line: null,\n  grid: F2.Util.mix({}, F2.Global.axis.grid, {\n    type: 'line'\n  })\n});\n\nchart.interval().position('月份*月均降雨量').color('name').adjust('stack');\n\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Basic Legend Configuration in AntV F2 Chart\nDESCRIPTION: This snippet demonstrates how to add a basic legend to an AntV F2 chart. It shows the default legend configuration which displays the legend at the top of the chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend();\n```\n\n----------------------------------------\n\nTITLE: Updating Dynamic Line Chart with New Data in JavaScript\nDESCRIPTION: This snippet demonstrates how to update the dynamic line chart with new data points. It includes a function to add new data, update the chart, and animate the transition. The chart is updated every 1000 milliseconds with a new random data point.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/line/dynamic/index.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// 更新数据的函数\nfunction update() {\n  const now = new Date();\n  const time = now.getTime();\n  const value = Math.random() * 10;\n  // 增加新数据\n  data.push({\n    date: String(data.length + 1),\n    value,\n  });\n\n  // 超过8个点时，删除第一个点\n  if (data.length > 8) {\n    data.shift();\n  }\n\n  // 更新图表\n  chart.changeData(data);\n}\n\n// 每隔1000毫秒更新一次数据\nsetInterval(update, 1000);\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Coordinate System in F2\nDESCRIPTION: This example demonstrates how to configure the coordinate system for a Chart component. It shows options for rectangular or polar coordinate systems, with additional configuration parameters for polar coordinates including angles and radius settings.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/chart.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Chart\n  data={data}\n  coord={{\n    type: 'rect' | 'polar',\n    transposed: boolean,\n    // 下面几个是 polar 独有\n    startAngle: number,\n    endAngle: number,\n    radius: number, // 半径\n    innnerRadius: number, // 内半径\n  }}\n>\n  ...\n</Chart>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Column Chart with F2 in JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a basic column chart using the F2 charting library. It includes setting up the chart data, creating a chart instance, configuring the axes and geometry, and finally rendering the chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/column/column/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\n\n// The data source\nconst data = [\n  { year: '1951 年', sales: 38 },\n  { year: '1952 年', sales: 52 },\n  { year: '1956 年', sales: 61 },\n  { year: '1957 年', sales: 145 },\n  { year: '1958 年', sales: 48 },\n  { year: '1959 年', sales: 38 },\n  { year: '1960 年', sales: 38 },\n  { year: '1962 年', sales: 38 },\n];\n\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio,\n});\n\nchart.source(data, {\n  sales: {\n    tickCount: 5\n  }\n});\nchart.tooltip({\n  showItemMarker: false,\n  onShow: function onShow(ev) {\n    const items = ev.items;\n    items[0].name = null;\n    items[0].name = items[0].title;\n    items[0].value = '¥ ' + items[0].value;\n  }\n});\nchart.interval().position('year*sales');\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Initializing F2 Chart and Rendering Basic Pie Chart\nDESCRIPTION: This code snippet demonstrates how to create a basic pie chart using the F2 library. It includes data preparation, chart configuration, and rendering steps. The chart displays sales data for different items.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/pie/pie/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\n\n// The data source\nconst data = [\n  { name: 'Apple', value: 150 },\n  { name: 'Orange', value: 80 },\n  { name: 'Banana', value: 50 },\n  { name: 'Pear', value: 100 },\n  { name: 'Peach', value: 120 }\n];\n\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio\n});\n\nchart.source(data);\nchart.coord('polar', {\n  transposed: true,\n  innerRadius: 0.4\n});\nchart.legend(false);\nchart.axis(false);\nchart.tooltip(false);\n\nchart.interval()\n  .position('a*percent')\n  .color('name', ['#1890FF', '#13C2C2', '#2FC25B', '#FACC14', '#F04864'])\n  .adjust('stack');\n\nchart.interaction('pie-select');\n\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing and Using a Custom Legend Component\nDESCRIPTION: Complete example showing how to create a custom Legend component by combining a custom view with the withLegend HOC and then using it in a Chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/advanced/custom-view.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, withLegend } from '@antv/f2';\n\n// 自定义 View\nconst CustomLegendView = (props) => {\n  const { items } = props;\n  return (\n    <group\n      style={{\n        flexDirection: 'row',\n      }}\n    >\n      {items.map((item) => {\n        const { name, color } = item;\n        return (\n          <text\n            style={{\n              text: name,\n              fill: color,\n            }}\n          />\n        );\n      })}\n    </group>\n  );\n};\n\n// 使用自定义 view 的组件\nconst Legend = withLegend(CustomLegendView);\n\n<Canvas context={context}>\n  <Chart data={data}>\n    ...\n    <Legend position=\"top\" />\n    ...\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Graphics with JSX in F2\nDESCRIPTION: This snippet demonstrates how to use JSX syntax to create custom graphics in F2. It shows how to render a group containing a rectangle, circle, and text element with specified styles on a canvas. The example defines a Hello component that returns these shapes and renders it within a Canvas component.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/graphic.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n/** @jsx jsx */\nimport { jsx, Canvas } from '@antv/f2';\n\nconst context = document.getElementById('container').getContext('2d');\n\nconst Hello = () => {\n  return (\n    <group>\n      <rect\n        style={{\n          x: 10,\n          y: 10,\n          width: 40,\n          height: 40,\n          lineWidth: '2px',\n          stroke: '#000',\n          fill: 'red',\n        }}\n      />\n      <circle style={{ x: 80, y: 30, r: 20, lineWidth: '2px', stroke: '#000', fill: 'red' }} />\n      <text\n        style={{\n          x: 120,\n          y: 30,\n          text: '文本',\n          fontSize: 20,\n          fill: '#000',\n        }}\n      />\n    </group>\n  );\n};\n\nconst { props } = (\n  <Canvas context={context} pixelRatio={window.devicePixelRatio}>\n    <Hello />\n  </Canvas>\n);\n\nconst chart = new Canvas(props);\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Creating Word Cloud Visualization with F2 and wordcloud2\nDESCRIPTION: This code snippet demonstrates how to create a word cloud visualization using F2 with the wordcloud2 library. It loads word data with weights, asynchronously loads a mask image, and renders the word cloud within a Canvas component using the loaded image as a mask shape.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2-wordcloud/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst data = [{\n  word: 'series',\n  weight: 274470,\n}, ...].sort((a, b) => {\n  return b.weight - a.weight;\n});\n\nconst img = await new Promise((resolve) => {\n  const img = new Image();\n  img.src = 'https://gw.alipayobjects.com/zos/finxbff/compress-tinypng/3fd5a3b2-a7d0-4c51-aede-c2c8bbaac8b8.png';\n\n  img.onload = () => {\n    resolve(img);\n  }\n});\n\n<Canvas context={context}>\n  <WordCloud\n    data={data}\n    maskShape={\n      <group>\n        <image\n          style={{\n            x: 0,\n            y: 0,\n            // img 需要先 load 完成\n            img,\n            width: 260,\n            height: 200,\n          }}\n        />\n      </group>\n    }\n  />\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Animation in F2 Geometry (JSX)\nDESCRIPTION: Demonstrates how to configure animations for appear, update, and leave states in F2 Geometry, including easing, duration, delay, and property settings.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/geometry.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry\n  animation={{\n    appear: {\n      easing: 'linear',\n      duration: 300,\n      delay: 0,\n      property: ['fillOpacity'],\n      start: {\n        fillOpacity: 0,\n      },\n      end: {\n        fillOpacity: 1,\n      },\n    },\n    update: {\n      easing: 'linear',\n      duration: 450,\n      delay: 0,\n      property: ['x', 'y'],\n    },\n    leave: {\n      easing: 'linear',\n      duration: 450,\n      delay: 0,\n      property: ['fillOpacity'],\n      start: {\n        fillOpacity: 1,\n      },\n      end: {\n        fillOpacity: 0,\n      },\n    },\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating and Rendering F2 Chart in Node.js\nDESCRIPTION: This code snippet demonstrates how to create an F2 chart using JSX syntax in a Node.js environment. It imports necessary components from F2 and Node.js modules, creates a canvas, renders a bar chart, and saves the output as a PNG file.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/nodejs.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Interval, Axis } from '@antv/f2';\nimport { createCanvas } from 'canvas';\nimport fs from 'fs';\nimport path from 'path';\n\nconst canvas = createCanvas(200, 200);\nconst ctx = canvas.getContext('2d');\n\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\n(async () => {\n  const { props } = (\n    <Canvas context={ctx} pixelRatio={1} animate={false}>\n      <Chart data={data}>\n        <Axis field=\"genre\" />\n        <Axis field=\"sold\" />\n        <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n      </Chart>\n    </Canvas>\n  );\n\n  const fcanvas = new Canvas(props);\n  await fcanvas.render();\n\n  const out = fs.createWriteStream(path.join(__dirname, 'chart.png'));\n  const stream = canvas.createPNGStream();\n  stream.pipe(out);\n\n  out.on('finish', () => {\n    process.exit();\n  });\n})();\n```\n\n----------------------------------------\n\nTITLE: Configuring Color in F2 Geometry (JSX)\nDESCRIPTION: Demonstrates various ways to configure the color property in F2 Geometry, including fixed values, field mapping, array mapping, and object-based configuration with callbacks and type specification.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/geometry.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry color=\"#1890FF\" ... />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry color={ field } ... />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry color={ [field, ['red', 'green', 'blue']] } ... />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry color={{\n  field,\n  range: ['red', 'green', 'blue'],\n  // 也可通过回调的方式设置\n  callback: (value) => { return 'gray' }\n}} ... />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry color={{\n  type: 'linear', // 分类为：category\n  field,\n  // 在映射时，颜色会从 red 渐变到 green\n  range: ['red', 'green'],\n}} ... />\n\n<Geometry color={{\n  type: 'category'\n  field,\n  // 不会渐变，只会映射这 3 种颜色\n  range: ['red', 'green', 'blue'],\n}} ... />\n```\n\n----------------------------------------\n\nTITLE: Basic Chart Usage with Interval Geometry in F2\nDESCRIPTION: This example demonstrates how to create a basic chart using the F2 library. It imports Canvas, Chart, and Interval components, sets up sample data for different game genres and their sales, and renders a bar chart using the Interval geometry.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/chart.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Interval } from '@antv/f2';\nconst data = [\n  { genre: 'Sports', sold: 5 },\n  { genre: 'Strategy', sold: 10 },\n  { genre: 'Action', sold: 20 },\n  { genre: 'Shooter', sold: 20 },\n  { genre: 'Other', sold: 40 },\n];\n\n<Canvas context={context}>\n  <Chart data={data}>\n    <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Rectangular Coordinate System in F2 (JSX)\nDESCRIPTION: This code snippet shows how to configure a rectangular (Cartesian) coordinate system in an F2 chart. It includes options for specifying the coordinate type and whether it should be transposed.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/coordinate.en.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Chart\n    coord={{\n      // 声明直角坐标系\n      type: 'rect',\n      // 坐标系进行转置\n      transposed: true,\n    }}\n  ></Chart>\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Bar Chart with F2 using JSX Syntax\nDESCRIPTION: Complete example showing how to create a bar chart using F2. This code demonstrates defining a data source, setting up the canvas context, and rendering a chart with axes, bars, and tooltips.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// F2 对数据源格式的要求，仅仅是 JSON 数组，数组的每个元素是一个标准 JSON 对象。\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\n// 获取 canvas context\nconst context = document.getElementById('mountNode').getContext('2d');\nconst { props } = (\n  <Canvas context={context} pixelRatio={window.devicePixelRatio}>\n    <Chart data={data}>\n      <Axis field=\"genre\" />\n      <Axis field=\"sold\" />\n      <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n      <Tooltip />\n    </Chart>\n  </Canvas>\n);\n\nconst canvas = new Canvas(props);\nawait canvas.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring Candlestick Colors in @antv/f2\nDESCRIPTION: Example showing how to customize the candlestick chart's colors. Colors can be set for rising (bullish), falling (bearish), and neutral states using the color prop with a range array in the format [rising color, falling color, neutral color].\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/candlestick.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Candlestick x=\"time\" y=\"value\" color={{ range: ['#E62C3B', '#0E9976', '#999999'] }} />\n```\n\n----------------------------------------\n\nTITLE: Setting Coordinate System in F2 Chart (JSX)\nDESCRIPTION: This snippet demonstrates how to set the coordinate system type for an F2 chart using JSX syntax. It shows the basic structure for declaring a coordinate system within a Chart component.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/coordinate.en.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Chart\n    coord={{\n      type: coordType,\n    }}\n  ></Chart>\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Creating a Donut Chart with F2 Library in JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a donut chart using the F2 library. It defines the data, initializes the chart, configures the coordinate system, sets up the interval geometry, and adds labels and tooltips.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/pie/donut/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\n\nconst data = [\n  { name: '芳华', percent: 0.4, a: '1' },\n  { name: '妖猫传', percent: 0.2, a: '1' },\n  { name: '机器之血', percent: 0.18, a: '1' },\n  { name: '心理罪', percent: 0.15, a: '1' },\n  { name: '寻梦环游记', percent: 0.07, a: '1' }\n];\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio\n});\nconst colors = [\n  '#1890FF',\n  '#13C2C2',\n  '#2FC25B',\n  '#FACC14',\n  '#F04864',\n  '#8543E0'\n];\nchart.source(data, {\n  percent: {\n    formatter: function formatter(val) {\n      return val * 100 + '%';\n    }\n  }\n});\nchart.coord('polar', {\n  transposed: true,\n  innerRadius: 0.7,\n  radius: 0.85\n});\nchart.axis(false);\nchart.tooltip(false);\nchart\n  .interval()\n  .position('a*percent')\n  .color('name', colors)\n  .adjust('stack');\n\nchart\n  .guide()\n  .text({\n    position: ['50%', '50%'],\n    content: '总票房',\n    style: {\n      fontSize: 14,\n      fill: '#1D2E3D'\n    }\n  });\nchart\n  .guide()\n  .html({\n    position: ['50%', '65%'],\n    html: '<div style=\"text-align: center;font-size: 12px;\">密限追击</div>'\n  });\n\nchart.legend({\n  position: 'right',\n  itemFormatter: function itemFormatter(val) {\n    return val + '  ' + data.reduce(function(a, b) {\n      if (b.name === val) {\n        return a + b.percent;\n      }\n      return a;\n    }, 0) * 100 + '%';\n  }\n});\n\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring Polar Coordinate System in F2 (JSX)\nDESCRIPTION: This snippet illustrates how to set up a polar coordinate system in an F2 chart. It includes various configuration options such as start and end angles, inner and outer radii, and transposition.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/coordinate.en.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Chart\n    coord={{\n      // 声明极坐标\n      type: 'polar',\n      // 坐标系进行转置\n      startAngle: { Number }, // 起始弧度\n      endAngle: { Number }, // 结束弧度\n      innerRadius: { Number }, // 用于空心部分的半径设置\n      radius: { Number }, // 实心圆的半径大小设置\n      transposed: true, // 极坐标转置\n    }}\n  ></Chart>\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Customizing Legend Name Text Style\nDESCRIPTION: An example demonstrating how to customize the appearance of legend names by applying text styling properties like font size and fill color.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Legend\n  nameStyle={{\n    fontSize: '20px',\n    fill: '#000',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating a Candlestick Chart with @antv/f2\nDESCRIPTION: Basic example showing how to create a K-line (candlestick) chart using the @antv/f2 library. The example demonstrates importing necessary components, preparing data with the required format [open, close, lowest, highest], and rendering the chart with appropriate axes.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/candlestick.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Axis, Candlestick, Canvas, Chart, jsx } from '@antv/f2';\n\nconst data = [\n  {\n    time: '2017-10-24',\n    // 格式为：[open, close, lowest, highest]\n    value: [20, 34, 10, 38],\n  },\n  {\n    time: '2017-10-25',\n    value: [40, 35, 30, 50],\n  },\n  {\n    time: '2017-10-26',\n    value: [31, 38, 33, 44],\n  },\n  {\n    time: '2017-10-27',\n    value: [38, 15, 5, 42],\n  },\n];\n\nconst { props } = (\n  <Canvas context={context}>\n    <Chart data={data}>\n      <Axis field=\"time\" />\n      <Axis field=\"value\" />\n      <Candlestick x=\"time\" y=\"value\" />\n    </Chart>\n  </Canvas>\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Scale in F2\nDESCRIPTION: This example shows how to configure the scale property of a Chart component. It demonstrates setting minimum and maximum values for the 'sold' field, allowing for fine-tuned control over how data is mapped to visual properties.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/chart.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Chart\n  data={data}\n  scale={{\n    // 声明 sold 字段配置\n    sold: {\n      min: 0,\n      max: 100,\n    },\n    genre: {\n\n    }\n  }}\n>\n  ...\n</Chart>\n```\n\n----------------------------------------\n\nTITLE: Customizing Label Styles in F2 Charts\nDESCRIPTION: This code snippet shows how to customize the appearance of labels in an F2 chart. It demonstrates setting label color, font size, and positioning options.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/shape/index.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nchart.interval().label('sold', {\n  textStyle: {\n    fill: '#0050B3',\n    fontSize: '16px'\n  },\n  offset: 10,\n  formatter: function formatter(val) {\n    return val + ' 台';\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Custom F2 Plugins in JavaScript\nDESCRIPTION: This code snippet illustrates how to create a custom plugin for F2 charts. It defines a plugin with lifecycle hooks and demonstrates how to interact with the chart instance and modify its behavior.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/creative/plugin/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// 自定义插件\nclass MyPlugin {\n  constructor(cfg) {\n    this.cfg = cfg;\n  }\n\n  // 初始化\n  init() {\n    console.log('Plugin initialized');\n  }\n\n  // 绘制前\n  beforeRender() {\n    console.log('Before chart render');\n  }\n\n  // 绘制后\n  afterRender() {\n    console.log('After chart render');\n  }\n\n  // 清除\n  clear() {\n    console.log('Plugin cleared');\n  }\n\n  // 销毁\n  destroy() {\n    console.log('Plugin destroyed');\n  }\n}\n\n// 使用自定义插件\nchart.plugin(MyPlugin);\n```\n\n----------------------------------------\n\nTITLE: Customizing Legend Items in F2 Chart (JavaScript)\nDESCRIPTION: This example demonstrates how to customize individual legend items in an F2 chart. It sets different markers, colors, and labels for each item based on its value.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.en.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend(false);\nchart.legend({\n  position: 'top',\n  itemFormatter: function itemFormatter(val) {\n    return val + '年';\n  },\n  marker: 'square',\n  itemWidth: null,\n  wordSpace: 4,\n  // custom legend items\n  items: [{\n    name: '2016年',\n    fill: '#4FAAEB',\n    marker: 'circle'\n  }, {\n    name: '2017年',\n    fill: '#9AD681',\n    marker: 'square'\n  }, {\n    name: '2018年',\n    fill: '#FED46B',\n    marker: function marker(x, y, r, ctx) {\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.moveTo(x - r - 3, y);\n      ctx.lineTo(x + r + 3, y);\n      ctx.stroke();\n      ctx.arc(x, y, r, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n  }]\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Polyline Shape in F2 using JSX\nDESCRIPTION: Shows how to draw a polyline (multi-segment line) with an array of points and optional smoothing in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<polyline\n  style={{\n    points: [\n      [10, 10],\n      [50, 50],\n      [80, 70],\n    ],\n    lineWidth: '2px',\n    stroke: '#000',\n    smooth: true,\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating a Compare Line Chart with F2 in JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a compare line chart using the F2 library. It prepares data for two series, configures the chart with appropriate scales, axes, and tooltips, and then renders the chart with line and point geometries.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/line/multiple/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// 引入 F2 React 组件\nimport { Chart, Interval } from '@antv/f2';\n\n// 准备数据\nconst data = [\n  { year: '1951 年', sales: 38 },\n  { year: '1952 年', sales: 52 },\n  { year: '1956 年', sales: 61 },\n  { year: '1957 年', sales: 145 },\n  { year: '1958 年', sales: 48 },\n  { year: '1959 年', sales: 38 },\n  { year: '1960 年', sales: 38 },\n  { year: '1962 年', sales: 38 },\n];\n\nfunction Demo() {\n  return (\n    <Chart data={data}>\n      <Interval x=\"year\" y=\"sales\" />\n    </Chart>\n  );\n}\n\nexport default Demo;\n```\n\n----------------------------------------\n\nTITLE: Setting Data Adjustment in F2 Geometry (JSX)\nDESCRIPTION: Explains how to set data adjustment types in F2 Geometry, including stack, dodge, and symmetric adjustments for different chart layouts.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/geometry.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Geometry adjust={ adjustType } ... />\n```\n\n----------------------------------------\n\nTITLE: Creating a Rectangle Shape in F2 using JSX\nDESCRIPTION: Shows how to create a rectangle shape with specific dimensions, position, and styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<rect\n  style={{ x: 100, y: 100, width: 50, height: 50, lineWidth: '2px', stroke: '#000', fill: 'red' }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Legend Click Event Handler\nDESCRIPTION: An example demonstrating how to add a click event handler to legend items, showing how to access the clicked item's data in the callback function.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Legend\n  onClick={(item) => {\n    console.log(item); // => { field: 'genre', color: '#1890FF', name: 'Sports'}\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Inserting an Image in F2 using JSX\nDESCRIPTION: Shows how to insert an image with specified dimensions, position, and source URL in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\n<image\n  style={{\n    src: 'https://f2.antv.vision/favicon-32x32.png?v=9772447a8d07a8fe19894b5176c6cb0d',\n    x: 10,\n    y: 10,\n    width: 32,\n    height: 32,\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating a bar chart with F2 in React\nDESCRIPTION: A complete example showing how to create a bar chart using F2 components within a React application. The example renders a chart displaying game sales by genre using the Interval component.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/react.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport ReactDOM from 'react';\nimport Canvas from '@antv/f-react';\nimport { Chart, Interval } from '@antv/f2';\n\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\nReactDOM.render(\n  <div>\n    <Canvas>\n      <Chart data={data}>\n        <Interval x=\"genre\" y=\"sold\" />\n      </Chart>\n    </Canvas>\n  </div>,\n  document.getElementById('root')\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Element Animation in F2\nDESCRIPTION: Example showing how to apply appear, update, and leave animations to a text element in F2. The example demonstrates property, easing, duration, and clip animation configuration.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/animation.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<text\n  style={{\n    text: `测试`,\n  }}\n  animation={{\n    appear: {\n      easing: 'linear',\n      duration: 450,\n      property: ['x', 'y'],\n      start: {\n        x: 0,\n        y: 0,\n      },\n      end: {\n        x: 100,\n        y: 100,\n      },\n    },\n    update: {\n      {\n        easing: 'quadraticOut',\n        duration: 450,\n        clip: {\n          type: 'rect',\n          property: ['width'],\n          style: {\n            x: 100,\n            y: 100,\n            height: 20,\n          },\n          start: {\n            width: 0,\n          },\n          end: {\n            width: 50,\n          },\n        },\n      }\n    },\n    leave: {},\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Using Legend Component in F2\nDESCRIPTION: Standard implementation of the Legend component in F2. This shows how to include a Legend in a Chart within a Canvas component.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/advanced/custom-view.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Legend } from '@antv/f2';\n\n<Canvas context={context}>\n  <Chart data={data}>\n    ...\n    <Legend position=\"top\" />\n    ...\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Implementing Path Animation with Circle Element in F2\nDESCRIPTION: Example of creating path animation by making a circle element follow a polyline path. The animation uses offsetDistance property to control movement along the defined path.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/animation.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<circle\n  style={{\n    fill: '#808080',\n    r: 10,\n    offset: {\n      type: 'polyline',\n      style: {\n        points: [\n          [0, 3],\n          [50, 10],\n          [130, 80],\n          [250, 40],\n        ],\n      },\n    },\n  }}\n  animation={{\n    appear: {\n      easing: 'quadraticOut',\n      duration: 1000,\n      property: ['offsetDistance'],\n      start: {\n        offsetDistance: 0,\n      },\n      end: {\n        offsetDistance: 1,\n      },\n    },\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering Sunburst Chart with F2 in JavaScript\nDESCRIPTION: This code snippet shows how to create and render a sunburst chart using the F2 library. It sets up the chart, defines the coordinate system, and configures various chart elements like axes and legends.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/relation/sunburst/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// 创建 Chart 对象\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio // 指定分辨率\n});\n\n// 配置数据\nchart.source(data);\n\n// 配置坐标系\nchart.coord('polar', {\n  transposed: true,\n  innerRadius: 0,\n  radius: 1\n});\n\n// 配置辅助元素\nchart.axis(false);\nchart.legend(false);\n\n// 配置图形\nchart.interval()\n  .position('depth*value')\n  .color('value', (value) => {\n    return F2.Global.colors[Math.floor(Math.random() * 9)];\n  })\n  .adjust('stack');\n\n// 渲染图表\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Chart with Labels in F2\nDESCRIPTION: This snippet demonstrates how to create a simple chart with data labels using the F2 library. It sets up the chart, adds data, and configures basic label display.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/shape/index.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\n\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 }\n];\n\nconst chart = new F2.Chart({\n  id: 'container',\n  pixelRatio: window.devicePixelRatio\n});\n\nchart.source(data);\nchart.interval().position('genre*sold').color('genre');\n\n// 配置 label\nchart.interval().label('sold');\n\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Structuring Data for Pie Charts in F2 using JavaScript\nDESCRIPTION: This snippet shows the required data format for creating pie charts in F2. Each object in the array must include a constant field (as a string) in addition to the data fields.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/data.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { name: '芳华', percent: 0.4, a: '1' },\n  { name: '妖猫传', percent: 0.2, a: '1' },\n  { name: '机器之血', percent: 0.18, a: '1' },\n  { name: '心理罪', percent: 0.15, a: '1' },\n  { name: '寻梦环游记', percent: 0.05, a: '1' },\n  { name: '其他', percent: 0.02, a: '1' },\n];\n```\n\n----------------------------------------\n\nTITLE: Basic Legend Usage in F2 Chart\nDESCRIPTION: A basic example showing how to implement a Legend component in an F2 chart, displaying a line chart with genre and sales data with the legend positioned at the top.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Line, Legend } from '@antv/f2';\nconst data = [\n  { genre: 'Sports', sold: 5 },\n  { genre: 'Strategy', sold: 10 },\n  { genre: 'Action', sold: 20 },\n  { genre: 'Shooter', sold: 20 },\n  { genre: 'Other', sold: 40 },\n];\n\n<Canvas context={context}>\n  <Chart data={data}>\n    <Legend position=\"top\">\n    <Axis field=\"genre\" />\n    <Line x=\"genre\" y=\"sold\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Selected Style with Dynamic Function\nDESCRIPTION: Demonstrates how to use a callback function to dynamically determine the style for selected items in an Interval component based on the data record.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval\n  selection={{\n    selectedStyle: (record) => {\n      return { fillOpacity: 1 };\n    },\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Using a Component in F2 Framework with JSX\nDESCRIPTION: This snippet shows how to use a custom component within the F2 framework's Canvas component. It imports the necessary modules and renders the Hello component with a prop.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/component.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas } from '@antv/f2';\nimport Hello from './hello';\n\n<Canvas>\n  <Hello color=\"red\" />\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Initializing Dynamic Line Chart with F2 in JavaScript\nDESCRIPTION: This snippet sets up a dynamic line chart using the F2 library. It initializes the chart, defines the data structure, and creates the initial render function. The chart is configured to display a line graph with customized styling and axes.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/line/dynamic/index.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// 获取画布\nconst canvas = document.getElementById('mountNode');\n\n// 设置画布宽高\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\n// 创建图表\nconst chart = new F2.Chart({\n  id: 'mountNode',\n  pixelRatio: window.devicePixelRatio,\n});\n\n// 模拟数据\nlet data = [\n  { date: '1', value: 5.8 },\n  { date: '2', value: 16 },\n  { date: '3', value: 7 },\n  { date: '4', value: 8.2 },\n  { date: '5', value: 12.2 },\n];\n\n// 渲染图表\nfunction render() {\n  chart.clear(); // 清除旧图表\n  chart.source(data, {\n    date: {\n      tickCount: 5,\n      range: [0, 1],\n    },\n    value: {\n      tickCount: 5,\n      min: 0,\n    },\n  });\n  chart.tooltip({\n    showCrosshairs: true,\n    showItemMarker: false,\n    background: {\n      radius: 2,\n      fill: '#1890FF',\n      padding: [3, 5],\n    },\n    onShow: function onShow(ev) {\n      const items = ev.items;\n      items[0].name = null;\n      items[0].value = items[0].value;\n    },\n  });\n  chart.axis('date', {\n    label: function label(text, index, total) {\n      const textCfg = {};\n      if (index === 0) {\n        textCfg.textAlign = 'left';\n      } else if (index === total - 1) {\n        textCfg.textAlign = 'right';\n      }\n      return textCfg;\n    },\n  });\n  chart.line().position('date*value');\n  chart.point().position('date*value').style({\n    stroke: '#fff',\n    lineWidth: 1,\n  });\n  chart.render();\n}\n\n// 首次渲染\nrender();\n```\n\n----------------------------------------\n\nTITLE: Configuring Unselected Style with Dynamic Function\nDESCRIPTION: Demonstrates how to use a callback function to dynamically determine the style for unselected items in an Interval component based on the data record.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval\n  selection={{\n    unSelectedStyle: (record) => {\n      return { fillOpacity: 0.4 };\n    },\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Scales in F2 Chart (JSX)\nDESCRIPTION: This snippet demonstrates how to define scales for different data types in an F2 chart using JSX. It shows how to specify a categorical scale for the 'a' field and set custom min/max values for the 'b' field.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst data = [\n  { a: 'a', b: 20 },\n  { a: 'b', b: 12 },\n  { a: 'c', b: 8 },\n];\n<Canvas>\n  <Chart\n    scale={{\n      a: {\n        type: 'cat', // 声明 a 字段的类型\n      },\n      b: {\n        min: 0, // 手动指定最小值\n        max: 100, // 手动指定最大值\n      },\n    }}\n  ></Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Defining Scales in F2 Chart Components using JSX\nDESCRIPTION: Example showing how to define scale configurations within F2's Chart component. This demonstrates setting category and numeric scales with custom min/max values.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.en.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst data = [\n  { a: 'a', b: 20 },\n  { a: 'b', b: 12 },\n  { a: 'c', b: 8 },\n];\n<Canvas>\n  <Chart\n    scale={{\n      a: {\n        type: 'cat', // 声明 a 字段的类型\n      },\n      b: {\n        min: 0, // 手动指定最小值\n        max: 100, // 手动指定最大值\n      },\n    }}\n  ></Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Configuring Size in F2 Geometry (JSX)\nDESCRIPTION: Shows different methods to set the size property in F2 Geometry, including fixed values, field mapping, array mapping, and object-based configuration with callbacks and type specification.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/geometry.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n// 固定值\n<Geometry size={ 4 } ... />\n\n// 字段名映射\n<Geometry size={ field } ... />\n\n// array 形式\n<Geometry size={ [field, [2, 4, 6]] } ... />\n\n// object 形式\n<Geometry size={{\n  field,\n  range: [2, 4, 6],\n  // 也可通过回调的方式设置\n  callback: (value) => { return 'gray' }\n}} ... />\n\n// 指定类型\n<Geometry size={{\n  type: 'linear', // 分类为：category\n  field,\n  // 在映射时，大小会从 2 逐渐变化到 10\n  range: [2, 10],\n}} ... />\n```\n\n----------------------------------------\n\nTITLE: Configuring Categorical Scale with Custom Values (JavaScript)\nDESCRIPTION: This example shows how to configure a categorical scale with custom values to specify the order of categories. It's useful when you need to control the display order of categorical data on axes or legends.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst scale = {\n  c: {\n    type: 'cat',\n    values: ['最小', '适中', '最大'],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing Legend Styles in F2 Chart (JavaScript)\nDESCRIPTION: This example shows how to customize the appearance of legend items in an F2 chart. It sets custom colors, shapes, and labels for each legend item.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.en.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend({\n  position: 'top',\n  itemFormatter: function itemFormatter(val) {\n    return val + '年';\n  },\n  marker: function marker(x, y, r, ctx) {\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.moveTo(x - r - 3, y);\n    ctx.lineTo(x + r + 3, y);\n    ctx.stroke();\n    ctx.arc(x, y, r, 0, Math.PI * 2, false);\n    ctx.fill();\n  },\n  itemWidth: null\n});\n```\n\n----------------------------------------\n\nTITLE: Converting Numeric Indices to Category Labels\nDESCRIPTION: Example showing how to map numeric indices to categorical labels using the 'values' property. This technique allows using readable month names instead of numeric indices in the visualization.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.en.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { month: 0, tem: 7, city: 'Tokyo' },\n  { month: 1, tem: 6.9, city: 'Tokyo' },\n  { month: 2, tem: 9.5, city: 'Tokyo' },\n  { month: 3, tem: 14.5, city: 'Tokyo' },\n  { month: 4, tem: 18.2, city: 'Tokyo' },\n  { month: 5, tem: 21.5, city: 'Tokyo' },\n  { month: 6, tem: 25.2, city: 'Tokyo' },\n];\nconst scale = {\n  month: {\n    type: 'cat',\n    values: ['一月', '二月', '三月', '四月', '五月', '六月', '七月'], // 这时候 month 的原始值是索引值\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Optimizing Performance for Sorted TimeCat Data (JavaScript)\nDESCRIPTION: This code snippet shows how to optimize performance for timeCat scales when the data source is already sorted. By setting 'sortable: false', you can avoid unnecessary sorting operations.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst scale = {\n  [fieldName]: {\n    type: 'timeCat',\n    sortable: false,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Optimizing TimeCat Scale Performance\nDESCRIPTION: Example showing how to improve performance by disabling automatic sorting for pre-sorted time category data using the 'sortable' property.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.en.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst scale = {\n  [fieldName]: {\n    type: 'timeCat',\n    sortable: false,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Using dataSample Function with F2 Chart in React\nDESCRIPTION: This code snippet demonstrates how to use the dataSample function from the @antv/f2-algorithm package to sample data and render it in an F2 Chart component. The sampled data is then used to create a line chart with date on the x-axis and value on the y-axis.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2-algorithm/README.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport dataSample from '@antv/f2-algorithm';\n\nconst sampleData = dataSample({\n  data,\n  sampling: 'nearest',\n  rate: 7,\n});\n\n<Canvas pixelRatio={1}>\n  <Chart data={sampleData}>\n    <Line x=\"date\" y=\"value\" />\n  </Chart>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Preparing Data for Sunburst Chart in JavaScript\nDESCRIPTION: This snippet demonstrates how to structure data for a sunburst chart. It creates a hierarchical dataset representing different levels of a sunburst visualization.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/relation/sunburst/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { name: 'root', value: 1, depth: 0 },\n  { name: 'a', value: 0.1, depth: 1 },\n  { name: 'b', value: 0.2, depth: 1 },\n  { name: 'c', value: 0.3, depth: 1 },\n  { name: 'd', value: 0.4, depth: 1 },\n  { name: 'a1', value: 0.05, depth: 2 },\n  { name: 'a2', value: 0.05, depth: 2 },\n  { name: 'b1', value: 0.06, depth: 2 },\n  { name: 'b2', value: 0.05, depth: 2 },\n  { name: 'b3', value: 0.09, depth: 2 },\n  { name: 'c1', value: 0.13, depth: 2 },\n  { name: 'c2', value: 0.17, depth: 2 },\n  { name: 'd1', value: 0.2, depth: 2 },\n  { name: 'd2', value: 0.2, depth: 2 }\n];\n```\n\n----------------------------------------\n\nTITLE: Formatting Data for Interval Bar Charts in F2 using JavaScript\nDESCRIPTION: This snippet illustrates the data structure for creating interval bar charts in F2. The y-axis values are represented as arrays to define the intervals for each category.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/data.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { x: '分类一', y: [76, 100] },\n  { x: '分类二', y: [56, 108] },\n  { x: '分类三', y: [38, 129] },\n  { x: '分类四', y: [58, 155] },\n  { x: '分类五', y: [45, 120] },\n  { x: '分类六', y: [23, 99] },\n  { x: '分类七', y: [18, 56] },\n  { x: '分类八', y: [18, 34] },\n];\n```\n\n----------------------------------------\n\nTITLE: Registering and Using F2 Plugins in JavaScript\nDESCRIPTION: This snippet demonstrates how to register and use plugins with an F2 chart. It shows the process of creating a chart instance, registering plugins, and applying them to the chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/creative/plugin/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport F2 from '@antv/f2';\nimport Tooltip from '@antv/f2-tooltip';\n\n// 创建 Chart 示例\nconst chart = new F2.Chart({\n  id: 'myChart',\n  pixelRatio: window.devicePixelRatio\n});\n\n// 注册 tooltip 插件\nchart.plugin(Tooltip);\n\n// 或者注册多个插件\nchart.plugin(Plugin1, Plugin2, ...);\n\n// 绘制图表\nchart.interval().position('x*y').color('x');\nchart.render();\n```\n\n----------------------------------------\n\nTITLE: Implementing SVG Renderer with F2 Canvas and Chart\nDESCRIPTION: JSX code that demonstrates how to instantiate an SVG renderer and integrate it with F2's Canvas component. It imports required components, creates the renderer, and renders the chart with SVG.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/svg-renderer.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Chart, Interval, jsx, Axis } from '@antv/f2';\nimport { Renderer } from '@antv/g-mobile-svg';\n\nconst container = document.getElementById('container');\n\n// 实例化 svg 渲染器\nconst renderer = new Renderer();\n\n...\n\nconst { props } = (\n  // 生命渲染容器和渲染器\n  <Canvas container={container} renderer={renderer} width={300} height={200}>\n    {...}\n  </Canvas>\n);\nconst canvas = new Canvas(props);\ncanvas.render();\n```\n\n----------------------------------------\n\nTITLE: Importing and Using F2 Canvas Component in JSX\nDESCRIPTION: Example of how to import and implement the Canvas component from F2 library. The Canvas requires a context prop and can contain multiple child components.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/canvas.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Component } from '@antv/f2';\n\n<Canvas context={context}>\n  <Component />\n  ...\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: F2 Chart Terminology Table in Markdown\nDESCRIPTION: A markdown table defining key F2 charting terminology including axes, legends, geometric marks, attributes, coordinates, tooltips, and guide elements.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/understanding.en.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **术语** | **英文** | **描述** |\n| --- | --- | --- |\n| 坐标轴 | Axis | 每个图表通常包含两个坐标轴，在直角坐标系（笛卡尔坐标系）下，分别为 x 轴和 y 轴，在极坐标轴下，则分别由角度和半径 2 个维度构成。每个坐标轴由坐标轴线（line）、刻度线（tickLine）、刻度文本（label）以及网格线（grid）组成。 |\n| 图例 | Legend | 图例作为图表的辅助元素，用于标定不同的数据类型以及数据的范围，用于辅助阅读图表以及帮助用户在图表中进行数据的筛选过滤。 |\n| 几何标记 | Geometry | 即我们所说的点、线、面这些几何图形，在图形语法 中几何标记的类型决定了生成图表的类型。也就是数据被可视化后的实际表现，不同的几何标记都包含对应的图形属性。 |\n| 图形属性 | Attribute | 图形属性对应视觉编码中的视觉通道，是图形语法元素非常重要和灵活的一部分，不同的几何标记拥有自己的图形属性，F2 提供了位置（position）、颜色（color）、大小（size）、形状（shape）这四种图形属性。 |\n| 坐标系 | Coordinate | 坐标系是将两种位置标度结合在一起组成的 2 维定位系统，描述了数据是如何映射到图形所在的平面。 |\n| 提示信息 | Tooltip | 当鼠标悬停在某个点上时，会以提示框的形式显示当前点对应的数据的信息，比如该点的值，数据单位等，帮助用户从图表中获取具体的数据信息。 |\n| 辅助标记 | Guide | 当需要在图表上绘制一些辅助线、辅助框或者文本时，比如增加预警线、最高值线或者标示明显的范围区域时，辅助标记 Guide 是非常有用的工具。 |\n```\n\n----------------------------------------\n\nTITLE: Setting Default Selected Items in F2 Interval Component\nDESCRIPTION: Shows how to configure the default selected items in an Interval component using the selection.defaultSelected property.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval selection={{ defaultSelected: [{ genre: 'Sports', sold: 5 }] }} />\n```\n\n----------------------------------------\n\nTITLE: Creating a Sector Shape in F2 using JSX\nDESCRIPTION: Demonstrates how to create a sector (pie slice) shape with specific angles, radius, and styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<sector\n  style={{\n    cx: 100,\n    cy: 100,\n    r: 50,\n    startAngle: '0 rad',\n    endAngle: '3.14 rad',\n    lineWidth: '2px',\n    stroke: '#000',\n    fill: 'red',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Drawing a Polygon Shape in F2 using JSX\nDESCRIPTION: Shows how to create a polygon shape by specifying an array of points and styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<polygon\n  style={{\n    points: [\n      [10, 10],\n      [50, 50],\n      [30, 70],\n    ],\n    lineWidth: '2px',\n    stroke: '#000',\n    fill: 'red',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Legend View\nDESCRIPTION: Implementation of a custom LegendView component that renders legend items in a row, displaying each item's name with its corresponding color.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/advanced/custom-view.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst CustomLegendView = (props) => {\n  const { items } = props;\n  return (\n    <group\n      style={{\n        flexDirection: 'row',\n      }}\n    >\n      {items.map((item) => {\n        const { name, color } = item;\n        return (\n          <text\n            style={{\n              text: name,\n              fill: color,\n            }}\n          />\n        );\n      })}\n    </group>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Drawing an Arc Shape in F2 using JSX\nDESCRIPTION: Demonstrates the creation of an arc shape with specified center, radius, angles, and styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<arc\n  style={{\n    cx: 100,\n    cy: 100,\n    r: 50,\n    startAngle: 0,\n    endAngle: 360,\n    lineWidth: '2px',\n    stroke: '#000',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeline Component in F2\nDESCRIPTION: Example of how to use the Timeline component to control component playback in F2. The Timeline wraps multiple Component elements and handles their sequential rendering with a specified delay.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/timeline.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Timeline, Canvas, Component } from '@antv/f2';\n\n<Canvas context={context}>\n  <Timeline delay={0}>\n    <Component />\n    <Component />\n    ...\n  </Timeline>\n</Canvas>;\n```\n\n----------------------------------------\n\nTITLE: Creating a Line Shape in F2 using JSX\nDESCRIPTION: Illustrates how to draw a straight line between two points with specific styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<line style={{ x1: 10, y1: 10, x2: 100, y2: 100, lineWidth: '2px', stroke: '#000' }} />\n```\n\n----------------------------------------\n\nTITLE: Defining a Component in F2 Framework using JSX\nDESCRIPTION: This snippet demonstrates how to define a component in the F2 framework. It includes lifecycle methods similar to React and a render method that returns JSX.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/component.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Component } from '@antv/f2';\n\nclass Hello extends Component {\n  constructor(props) {\n    super(props);\n  }\n  willMount() {}\n  didMount() {}\n  shouldUpdate() {\n    return true;\n  }\n  willReceiveProps(props) {}\n  willUpdate() {}\n  didUpdate() {}\n  render() {\n    const { color } = this.props;\n    return <rect attrs={{ x: 10, y: 10, width: 10, height: 10, fill: color }} />;\n  }\n  didUnmount() {}\n}\n```\n\n----------------------------------------\n\nTITLE: Basic F2 Chart HTML Canvas Setup\nDESCRIPTION: HTML markup needed to create a canvas element that will be used for rendering F2 charts.\nSOURCE: https://github.com/antvis/f2/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"mountNode\"></canvas>\n```\n\n----------------------------------------\n\nTITLE: Grouping Shapes in F2 using JSX\nDESCRIPTION: Demonstrates how to group multiple shape elements together using the 'group' tag in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<group className=\"group\">\n  <rect ... />\n  <rect ... />\n</group>\n```\n\n----------------------------------------\n\nTITLE: Drawing a Circle Shape in F2 using JSX\nDESCRIPTION: Illustrates the creation of a circle shape with specified center coordinates, radius, and styling in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<circle style={{ cx: 100, cy: 100, r: 50, lineWidth: '2px', stroke: '#000', fill: 'red' }} />\n```\n\n----------------------------------------\n\nTITLE: Configuring Selected Style with Fixed Properties\nDESCRIPTION: Example of setting a fixed style for selected items in an Interval component using the selection.selectedStyle property with explicit values.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval selection={{ selectedStyle: { fillOpacity: 1 } }} />\n```\n\n----------------------------------------\n\nTITLE: Configuring Legend Style with Flex Layout\nDESCRIPTION: An example showing how to customize the Legend component's layout using flex properties to control the direction and alignment of legend items.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Legend\n  style={{\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Unselected Style with Fixed Properties\nDESCRIPTION: Shows how to set a fixed style for unselected items in an Interval component using the selection.unSelectedStyle property with explicit values.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval selection={{ unSelectedStyle: { fillOpacity: 0.4 } }} />\n```\n\n----------------------------------------\n\nTITLE: Using Children.map in F2\nDESCRIPTION: Demonstrates how to use the Children.map method to iterate over child components. Similar to Array.map, it traverses children and returns new objects.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.en.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nChildren.map(this.props.children, (child) => {\n  // TODO\n  return child;\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Elements with createElement/jsx in F2\nDESCRIPTION: Shows how to generate JSX elements using the createElement method, which is identical to the jsx method. It creates chart elements with data and children.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.en.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement, Chart } from '@antv/f2';\n// 创建 chart 元素\nconst element = createElement(Chart, { data }, [...]);\n```\n\n----------------------------------------\n\nTITLE: Disabling Selection Cancellation in F2 Interval Component\nDESCRIPTION: Example showing how to disable the ability to cancel selection in an Interval component by setting the selection.cancelable property to false.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/interval.zh.md#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Interval selection={{ cancelable: false }} />\n```\n\n----------------------------------------\n\nTITLE: Creating JSX Elements with createElement in F2 (JSX)\nDESCRIPTION: This snippet shows how to create JSX elements using the createElement method, which is identical to the jsx method in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement, Chart } from '@antv/f2';\n// 创建 chart 元素\nconst element = createElement(Chart, { data }, [...]);\n```\n\n----------------------------------------\n\nTITLE: Cloning Elements with Children.cloneElement in F2 (JSX)\nDESCRIPTION: This snippet shows how to use Children.cloneElement to create a copy of a child element with new props in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nChildren.map(this.props.children, (child) => {\n  return Children.cloneElement(child, { ... });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Legend Position in F2 Chart (JavaScript)\nDESCRIPTION: This snippet shows how to position the legend in an F2 chart. It demonstrates setting the legend to the bottom of the chart with custom alignment and spacing.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.en.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend({\n  position: 'bottom',\n  align: 'center',\n  itemWidth: 100,\n  wordSpace: 4,\n  itemGap: 30,\n  nameStyle: {\n    fill: '#808080'\n  },\n  valueStyle: {\n    fill: '#333333'\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Converting Children to Array with Children.toArray in F2 (JSX)\nDESCRIPTION: This snippet demonstrates how to convert children elements to an array using the Children.toArray method in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nconst childrenArray = Children.toArray(children);\n```\n\n----------------------------------------\n\nTITLE: Styling Individual Legend Items\nDESCRIPTION: An example showing how to customize the style of individual legend items by applying flex layout properties specifically to each item.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Legend\n  itemStyle={{\n    justifyContent: 'center',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating References with createRef in F2 (JSX)\nDESCRIPTION: This snippet demonstrates how to create references using the createRef method in F2, which generates an object with a current property initialized to null.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.zh.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createRef } from '@antv/f2';\n// 创建 chart 元素\nconst ref = createRef(); // 生成 { current: null } 这样的结构\n```\n\n----------------------------------------\n\nTITLE: Converting Children to Array in F2\nDESCRIPTION: Demonstrates how to convert children components to an array using the Children.toArray method.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.en.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nconst childrenArray = Children.toArray(children);\n```\n\n----------------------------------------\n\nTITLE: Styling Legend Values\nDESCRIPTION: An example showing how to customize the text appearance of legend values through properties like font size and fill color.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/legend.zh.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<Legend\n  valueStyle={{\n    fontSize: '20px',\n    fill: '#000',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating References with createRef in F2\nDESCRIPTION: Demonstrates how to create references using the createRef method, which generates an object with a null current property.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.en.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createRef } from '@antv/f2';\n// 创建 chart 元素\nconst ref = createRef(); // 生成 { current: null } 这样的结构\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Legend in F2 Chart (JavaScript)\nDESCRIPTION: This snippet demonstrates how to add a basic legend to an F2 chart. It sets the legend position to 'top' and specifies custom styles for the legend items.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend({\n  position: 'top',\n  itemFormatter: function itemFormatter(val) {\n    return val + '年';\n  },\n  marker: 'square',\n  itemWidth: null,\n  wordSpace: 4\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Legend Position in AntV F2 Chart\nDESCRIPTION: This example shows how to customize the position of the legend in an AntV F2 chart. The legend is positioned at the bottom of the chart with specific alignment and offset settings.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend({\n  position: 'bottom',\n  align: 'center',\n  itemMarginBottom: 20\n});\n```\n\n----------------------------------------\n\nTITLE: Disabling Legend in AntV F2 Chart\nDESCRIPTION: This snippet demonstrates how to disable the legend in an AntV F2 chart. Setting false as the parameter for the legend method removes the legend from the chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/legend/index.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nchart.legend(false);\n```\n\n----------------------------------------\n\nTITLE: Resolving F2-React TypeScript conflicts in classic JSX compilation mode\nDESCRIPTION: This snippet shows how to fix TypeScript errors when using F2 with React in classic JSX compilation mode. It adds a JSX pragma comment and imports the jsx function from F2 library.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/question/with-react-typescript.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n/** @jsx jsx */\nimport { jsx } from '@antv/f2';\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Babel for Automatic JSX Transformation\nDESCRIPTION: This configuration sets up Babel to use the automatic JSX transformation mode for F2 charts, specifying the runtime and importSource options.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/jsx-transform.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\n    [\n      \"@babel/plugin-transform-react-jsx\",\n      {\n        \"runtime\": \"automatic\",\n        \"importSource\": \"@antv/f2\"\n      }\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving F2-React TypeScript conflicts in automatic JSX compilation mode\nDESCRIPTION: This snippet demonstrates how to fix TypeScript errors when using F2 with React in automatic JSX compilation mode. It adds a jsxImportSource pragma comment to specify F2 as the JSX source.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/question/with-react-typescript.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n/** @jsxImportSource @antv/f2 */\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript for Automatic JSX Transformation\nDESCRIPTION: This tsconfig.json configuration sets up TypeScript to use the automatic JSX transformation mode for F2 charts, specifying the jsx and jsxImportSource options.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/jsx-transform.zh.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react-jsx\",\n    \"jsxImportSource\": \"@antv/f2\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Category Scale with Custom Values Order\nDESCRIPTION: Example demonstrating how to use the 'values' property to specify the order of categorical data. This is useful when you need to control the display order of categories on axes or legends.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.en.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst scale = {\n  c: {\n    type: 'cat',\n    values: ['最小', '适中', '最大'],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Using Categorical Scale for Numeric Data (JavaScript)\nDESCRIPTION: This snippet illustrates how to use a categorical scale for numeric data by providing custom value labels. It's important to note that the original data must be index values in this case.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/scale.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { month: 0, tem: 7, city: 'Tokyo' },\n  { month: 1, tem: 6.9, city: 'Tokyo' },\n  { month: 2, tem: 9.5, city: 'Tokyo' },\n  { month: 3, tem: 14.5, city: 'Tokyo' },\n  { month: 4, tem: 18.2, city: 'Tokyo' },\n  { month: 5, tem: 21.5, city: 'Tokyo' },\n  { month: 6, tem: 25.2, city: 'Tokyo' },\n];\nconst scale = {\n  month: {\n    type: 'cat',\n    values: ['一月', '二月', '三月', '四月', '五月', '六月', '七月'], // 这时候 month 的原始值是索引值\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing chart with padding in F2 v3.0\nDESCRIPTION: Example of creating a new chart with padding configuration in F2 v3.0, compared to the margin configuration in v2.0.\nSOURCE: https://github.com/antvis/f2/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// 2.0\nvar chart = new Chart({\n  margin: 20\n});\n// 3.0\nvar chart = new Chart({\n  padding: 20\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Data Structure for F2 Charts in JavaScript\nDESCRIPTION: This snippet demonstrates the basic data format used in F2 charts. It shows an array of objects, where each object represents a data point with 'year' and 'sales' properties.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/data.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst data = [\n  { year: 2010, sales: 40 },\n  { year: 2011, sales: 30 },\n  { year: 2012, sales: 50 },\n  { year: 2013, sales: 60 },\n  { year: 2014, sales: 70 },\n  { year: 2015, sales: 80 },\n  { year: 2016, sales: 80 },\n  { year: 2017, sales: 90 },\n  { year: 2018, sales: 120 },\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring interval stack geometry in F2 v3.0\nDESCRIPTION: Example of configuring an interval stack geometry in F2 v3.0, compared to the method used in v2.0.\nSOURCE: https://github.com/antvis/f2/blob/master/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// 2.0\nchart.intervalStack().position('a*b');\n// 3.0\nchart.interval().position().adjust('stack')\n```\n\n----------------------------------------\n\nTITLE: Using Children.map Method in F2 (JSX)\nDESCRIPTION: This snippet demonstrates how to use the Children.map method to iterate over children elements in F2, similar to Array.map, returning new objects.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nChildren.map(this.props.children, (child) => {\n  // TODO\n  return child;\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Text in F2 using JSX\nDESCRIPTION: Demonstrates how to add text with specific styling properties in F2.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/shape.zh.md#2025-04-21_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<text\n  style={{\n    text: '文本',\n    fontSize: 20,\n    fill: '#000',\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloning Elements with Children.cloneElement in F2\nDESCRIPTION: Shows how to create a copy of an element with potentially new properties using Children.cloneElement method.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/f2.en.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Children } from '@antv/f2';\nChildren.map(this.props.children, (child) => {\n  return Children.cloneElement(child, { ... });\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Label Positioning in F2\nDESCRIPTION: This snippet demonstrates advanced label positioning techniques in F2 charts. It uses a custom positioning function to place labels based on data values and chart dimensions.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/component/shape/index.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nchart.interval().label('sold', (xValue, yValue, point) => {\n  const coord = chart.get('coord');\n  const center = coord.center;\n  const origin = coord.convertPoint({\n    x: point.x,\n    y: point.y\n  });\n  let position = 'top';\n  if (origin.y <= center.y) {\n    position = 'bottom';\n  }\n  return {\n    position: position,\n    offset: 20\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Importing Component from F2 Library in JSX\nDESCRIPTION: Example showing how to import the Component class from the @antv/f2 library. This is the basic starting point for using F2 components in your application.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/component.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Component } from '@antv/f2';\n// TODO\n```\n\n----------------------------------------\n\nTITLE: Installing Babel Plugin for JSX Transformation\nDESCRIPTION: This command installs the Babel plugin required for transforming JSX syntax in F2 chart development.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/jsx-transform.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @babel/plugin-transform-react-jsx\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Container for SVG Rendering\nDESCRIPTION: HTML markup that creates a container div element which will be used to hold the SVG-rendered F2 chart.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/svg-renderer.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Installing SVG Renderer Dependencies for F2\nDESCRIPTION: Command to install the required G Mobile SVG renderer package as a dependency for F2 visualization library.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/svg-renderer.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @antv/g-mobile-svg --save\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Canvas Element for F2\nDESCRIPTION: HTML canvas element used as the rendering container for F2 charts.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"mountNode\"></canvas>\n```\n\n----------------------------------------\n\nTITLE: Installing F2 and F-React packages with npm\nDESCRIPTION: Commands to install the required dependencies for using F2 charts in React applications. This installs both the core F2 library and the React wrapper component.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/react.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @antv/f2 --save\nnpm install @antv/f-react --save\n```\n\n----------------------------------------\n\nTITLE: Installing F2 via npm\nDESCRIPTION: Command to install the F2 visualization library using npm package manager.\nSOURCE: https://github.com/antvis/f2/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @antv/f2\n```\n\n----------------------------------------\n\nTITLE: Basic F2 Chart Implementation\nDESCRIPTION: Example showing how to create a basic chart using F2 with Canvas, including data formatting, axis configuration, and rendering. Demonstrates core components like Chart, Axis, Interval and Tooltip.\nSOURCE: https://github.com/antvis/f2/blob/master/README.en-US.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<canvas id=\"mountNode\"></canvas>\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// F2 对数据源格式的要求，仅仅是 JSON 数组，数组的每个元素是一个标准 JSON 对象。\nconst data = [\n  { genre: 'Sports', sold: 275 },\n  { genre: 'Strategy', sold: 115 },\n  { genre: 'Action', sold: 120 },\n  { genre: 'Shooter', sold: 350 },\n  { genre: 'Other', sold: 150 },\n];\n\n// 获取 canvas context\nconst context = document.getElementById('mountNode').getContext('2d');\nconst { props } = (\n  <Canvas context={context} pixelRatio={window.devicePixelRatio}>\n    <Chart data={data}>\n      <Axis field=\"genre\" />\n      <Axis field=\"sold\" />\n      <Interval x=\"genre\" y=\"sold\" color=\"genre\" />\n      <Tooltip />\n    </Chart>\n  </Canvas>\n);\n\nconst canvas = new Canvas(props);\ncanvas.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript for Classic JSX Transformation\nDESCRIPTION: This tsconfig.json configuration sets up TypeScript to use the classic JSX transformation mode for F2 charts, specifying the jsxFactory and jsxFragmentFactory options.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/jsx-transform.zh.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"jsxFactory\": \"jsx\",\n    \"jsxFragmentFactory\": \"Fragment\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Chart Components Table in Markdown\nDESCRIPTION: A markdown table defining key chart terminology and components in F2, including their English terms and Chinese descriptions.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/understanding.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **术语** | **英文** | **描述** |\n| --- | --- | --- |\n| 坐标轴 | Axis | 每个图表通常包含两个坐标轴，在直角坐标系（笛卡尔坐标系）下，分别为 x 轴和 y 轴，在极坐标轴下，则分别由角度和半径 2 个维度构成。每个坐标轴由坐标轴线（line）、刻度线（tickLine）、刻度文本（label）以及网格线（grid）组成。 |\n| 图例 | Legend | 图例作为图表的辅助元素，用于标定不同的数据类型以及数据的范围，用于辅助阅读图表以及帮助用户在图表中进行数据的筛选过滤。 |\n| 几何标记 | Geometry | 即我们所说的点、线、面这些几何图形，在图形语法 中几何标记的类型决定了生成图表的类型。也就是数据被可视化后的实际表现，不同的几何标记都包含对应的图形属性。 |\n| 图形属性 | Attribute | 图形属性对应视觉编码中的视觉通道，是图形语法元素非常重要和灵活的一部分，不同的几何标记拥有自己的图形属性，F2 提供了位置（position）、颜色（color）、大小（size）、形状（shape）这四种图形属性。 |\n| 坐标系 | Coordinate | 坐标系是将两种位置标度结合在一起组成的 2 维定位系统，描述了数据是如何映射到图形所在的平面。 |\n| 提示信息 | Tooltip | 当鼠标悬停在某个点上时，会以提示框的形式显示当前点对应的数据的信息，比如该点的值，数据单位等，帮助用户从图表中获取具体的数据信息。 |\n| 辅助标记 | Guide | 当需要在图表上绘制一些辅助线、辅助框或者文本时，比如增加预警线、最高值线或者标示明显的范围区域时，辅助标记 Guide 是非常有用的工具。 |\n```\n\n----------------------------------------\n\nTITLE: Configuring Babel for Classic JSX Transformation\nDESCRIPTION: This configuration sets up Babel to use the classic JSX transformation mode for F2 charts, specifying the pragma and pragmaFrag options.\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/tutorial/framework/jsx-transform.zh.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"plugins\": [\n    [\n      \"@babel/plugin-transform-react-jsx\",\n      {\n        \"pragma\": \"jsx\",\n        \"pragmaFrag\": \"Fragment\"\n      }\n    ]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Treemap Documentation\nDESCRIPTION: YAML frontmatter configuration block defining the page title as 'treemap' and setting the order to 0.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/relation/treemap/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: treemap\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Registering custom shape in F2 v3.0\nDESCRIPTION: Example of registering a custom shape for interval geometry in F2 v3.0, showing changes in function names from v2.0.\nSOURCE: https://github.com/antvis/f2/blob/master/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// 2.0\nG2.Shape.registShape('interval', 'custom', {\n  getShapePoints(cfg) {},\n  drawShape(cfg, canvas) {}\n});\n\nG2.Shape.registerShape('interval', 'custom', {\n  getPoints(cfg) {},\n  draw(cfg, canvas) {}\n});\n```\n\n----------------------------------------\n\nTITLE: Example of a Breaking Change Commit Message\nDESCRIPTION: An example commit message that follows the Angular commit message format, demonstrating how to properly document a breaking change in the commit message for the AntVis F2 project.\nSOURCE: https://github.com/antvis/f2/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nfix($compile): [BREAKING_CHANGE] couple of unit tests for IE9\n\nOlder IEs serialize html uppercased, but IE9 does not...\nWould be better to expect case insensitive, unfortunately jasmine does\nnot allow to user regexps for throw expectations.\n\nDocument change on antvis/f2#123\n\nCloses #392\n\nBREAKING CHANGE:\n\n  Breaks foo.bar api, foo.baz should be used instead\n```\n\n----------------------------------------\n\nTITLE: Defining Changelog Structure in Markdown\nDESCRIPTION: Sets up the structure for documenting changes using Markdown formatting. Includes a header, description of the file's purpose, and a link to conventional commit guidelines.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n```\n\n----------------------------------------\n\nTITLE: Adjusting Candlestick Size Ratio in @antv/f2\nDESCRIPTION: Example showing how to configure the size ratio of candlesticks in the chart. The sizeRatio prop controls the width of the rectangles relative to the available space, with values ranging from 0 to 1. The default is 0.5 (50% width, 50% spacing).\nSOURCE: https://github.com/antvis/f2/blob/master/site/docs/api/chart/candlestick.zh.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Candlestick x=\"time\" y=\"value\" sizeRatio={0.8} />\n```\n\n----------------------------------------\n\nTITLE: F2 Development Setup Commands\nDESCRIPTION: Commands for setting up the F2 development environment, including installation, bootstrapping and running tests.\nSOURCE: https://github.com/antvis/f2/blob/master/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n\n# setup\n$ npm run bootstrap\n\n# run test case\n$ npm run test-watch\n```\n\n----------------------------------------\n\nTITLE: Local Development Commands for F2\nDESCRIPTION: Set of npm commands for local development of F2, including initialization, running tests, and starting development server.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n\n# 先初始化 monorepo\n$ npm run bootstrap\n\n# 再跑测试用例\n$ npm run test\n\n# 监听文件变化构建，并打开 demo 页面\n$ npm run dev\n\n# 打开某一个具体的测试用例\n$ npm run test-watch -- 'TestFileName'\n```\n\n----------------------------------------\n\nTITLE: F2 Development Setup Commands\nDESCRIPTION: Commands for setting up F2 development environment, including installation, bootstrapping, and running tests.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.en-US.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n\n# setup\n$ npm run bootstrap\n\n# run test case\n$ npm run test-watch\n```\n\n----------------------------------------\n\nTITLE: Documenting Version Updates in Markdown\nDESCRIPTION: Documents changes for specific versions, including version numbers, dates, links to compare changes, and categorized lists of bug fixes and features.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [5.7.5](https://github.com/antvis/f2/compare/v5.7.4...v5.7.5) (2025-01-02)\n\n\n### Bug Fixes\n\n* EndView动画使用offsetDistance对不齐 ([#2029](https://github.com/antvis/f2/issues/2029)) ([f62abe3](https://github.com/antvis/f2/commit/f62abe3909676248c1928354b0690f90a4f7f97e))\n```\n\n----------------------------------------\n\nTITLE: Documenting F2 Chart Library Version History in Markdown\nDESCRIPTION: This markdown document outlines the version history of the F2 chart library, detailing changes, new features, and bug fixes across multiple releases from version 1.0.0 to 2.1.1.\nSOURCE: https://github.com/antvis/f2/blob/master/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n#### 2.1.1\n* 优化动画模块\n* 给定默认颜色，将color方法变成可选项\n* 修复area模块的自定义shape接口\n\n#### 2.1.0\n* 新增动画功能，支持水平方向的平铺(waveh)、x轴上的缩放(scalex)、y轴上的缩放(scaley)、x和y轴同时缩放(scalexy)\n* 修复shape接口\n* 给line的shape新增dash方法\n* 将getSnapRecords方法在chart中抛出\n\n#### 2.0.1\n* guide 新增html对齐功能，支持9点对齐方式：tr、tc、tl、br、bc、bl、lc、rc、cc\n* geom 添加getSnapRecords方法，提供根据画布坐标获取数据的功能\n\n#### 2.0.0\n* 集成g2-core，并统一API与G2一致\n* guide 拓展\n  * line\n  * arc\n  * text\n  * html\n\n#### 1.0.7\n* 修复了环图在UC上的bug\n* 新增加 timeCat 类型\n* 调整scale tickcount 自动计算向上逼近\n* 修复scale linear 的几个bug\n\n#### 1.0.4\n* scale 增加了offset属性，自动计算时min,max各自浮动 百分比\n* 增加了自动计算精度的功能，用户只需要传入单精度的值\n* 提供了自定义样式功能，拆分坐标轴的全局配置信息\n* 修复点图，边框没有颜色的问题\n\n#### 1.0.0\n`new` It is the first version of g-mobile.\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch and Submitting a Pull Request\nDESCRIPTION: This bash script shows the workflow for creating a new branch, initializing the project, running tests, and pushing changes with a properly formatted commit message to create a pull request for AntVis F2.\nSOURCE: https://github.com/antvis/f2/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create a new branch for development. The name of branch should be semantic, avoiding words like 'update' or 'tmp'. We suggest to use feature/xxx, if the modification is about to implement a new feature.\n$ git checkout -b branch-name\n\n# Initialize the project\n$ npm i\n$ npm run bootstrap\n\n# Run the test after you finish your modification. Add new test cases or change old ones if you feel necessary\n$ npm test\n\n# If your modification pass the tests, congradulations it's time to push your work back to us. Notice that the commit message should be wirtten in the following format.\n$ git add . # git add -u to delete files\n$ git commit -m \"fix(role): role.use must xxx\"\n$ git push origin branch-name\n```\n\n----------------------------------------\n\nTITLE: Installing F2 using npm\nDESCRIPTION: Command to install the F2 visualization library via npm package manager.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @antv/f2\n```\n\n----------------------------------------\n\nTITLE: Installing F2 Library via NPM\nDESCRIPTION: Command to install the F2 charting library using NPM package manager.\nSOURCE: https://github.com/antvis/f2/blob/master/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @antv/f2\n```\n\n----------------------------------------\n\nTITLE: Installing F2 via NPM\nDESCRIPTION: Command to install the F2 library using npm package manager.\nSOURCE: https://github.com/antvis/f2/blob/master/packages/f2/README.en-US.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install @antv/f2\n```\n\n----------------------------------------\n\nTITLE: F2 Local Development Commands\nDESCRIPTION: Commands for local development of the F2 library, including bootstrap for monorepo setup, running tests, starting development server, and running specific test cases.\nSOURCE: https://github.com/antvis/f2/blob/master/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n\n# 先初始化 monorepo\n$ npm run bootstrap\n\n# 再跑测试用例\n$ npm run test\n\n# 监听文件变化构建，并打开 demo 页面\n$ npm run dev\n\n# 打开某一个具体的测试用例\n$ npm run test-watch -- 'TestFileName'\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Scatter Plot Documentation\nDESCRIPTION: YAML frontmatter that defines the page metadata including title and ordering for scatter plot documentation.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/point/scatter/index.zh.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 散点图\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Frontmatter for F2 Gallery Page\nDESCRIPTION: YAML frontmatter that defines the title and order for a gallery page in the F2 documentation. This metadata is used to configure how the page appears in navigation and its display properties.\nSOURCE: https://github.com/antvis/f2/blob/master/site/examples/creative/case/index.en.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: gallery\norder: 0\n---\n```\n\n----------------------------------------\n\nTITLE: Angular Commit Message Format Template\nDESCRIPTION: This XML-like template demonstrates the recommended Angular commit message format for the AntVis F2 project, showing the structure with type, scope, subject, body and footer.\nSOURCE: https://github.com/antvis/f2/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\n----------------------------------------\n\nTITLE: Generating Commit History for Release\nDESCRIPTION: A simple npm command to automatically generate commit history for inclusion in the release documentation of the AntVis F2 project.\nSOURCE: https://github.com/antvis/f2/blob/master/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run commits\n```"
  }
]
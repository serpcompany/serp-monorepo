[
  {
    "owner": "transitive-bullshit",
    "repo": "agentic",
    "content": "TITLE: Combining Multiple Agentic Tools with AI SDK\nDESCRIPTION: This snippet demonstrates how to combine multiple Agentic tools and custom functions for use with an AI SDK. It includes examples of using different clients, selecting specific functions, and creating custom AI functions.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/usage.mdx#2025-04-11_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SerperClient, WikipediaClient, FirecrawlClient } from '@agentic/stdlib'\nimport { createAIFunction } from '@agentic/core'\nimport { z } from 'zod'\n\nconst googleSearch = new SerperClient()\nconst wikipedia = new WikipediaClient()\nconst firecrawl = new FirecrawlClient()\n\nconst result = await generateText({\n  model: openai('gpt-4o-mini'),\n  // This example uses tools from 4 different sources. You can pass as many\n  // AIFunctionLike objects as you want.\n  tools: createAISDKTools(\n    googleSearch,\n    wikipedia,\n    // Pick a single function from the firecrawl client's set of AI functions\n    firecrawl.functions.pick('firecrawl_search'),\n    // Create a custom AI function (based off of Anthropic's think tool: https://www.anthropic.com/engineering/claude-think-tool)\n    createAIFunction({\n      name: 'think',\n      description: `Use this tool to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed.`,\n      inputSchema: z.object({\n        thought: z.string().describe('A thought to think about.')\n      }),\n      execute: ({ thought }) => thought\n    })\n  ),\n  prompt:\n    'What year did Jurassic Park the movie come out, and what else happened that year?'\n})\n```\n\n----------------------------------------\n\nTITLE: Using Agentic Adapter with Vercel AI SDK for Weather Data\nDESCRIPTION: Example TypeScript code demonstrating how to use the Agentic adapter with Vercel AI SDK to retrieve weather information. It uses the WeatherClient from @agentic/weather package and OpenAI's GPT-4o-mini model.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createAISDKTools } from '@agentic/ai-sdk'\nimport { WeatherClient } from '@agentic/weather'\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const result = await generateText({\n    model: openai('gpt-4o-mini'),\n    tools: createAISDKTools(weather),\n    toolChoice: 'required',\n    temperature: 0,\n    system: 'You are a helpful assistant. Be as concise as possible.',\n    prompt: 'What is the weather in San Francisco?'\n  })\n\n  console.log(result.toolResults[0])\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using WeatherClient as a Normal TypeScript Class\nDESCRIPTION: Demonstrates how to use the WeatherClient from Agentic as a standard TypeScript class to retrieve current weather information. This example requires a WEATHER_API_KEY environment variable from weatherapi.com.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WeatherClient } from '@agentic/stdlib'\n\n// Requires `process.env.WEATHER_API_KEY` (free from weatherapi.com)\nconst weather = new WeatherClient()\n\nconst result = await weather.getCurrentWeather({\n  q: 'San Francisco'\n})\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Implementing a Weather Agent with Mastra and OpenAI\nDESCRIPTION: Example of creating a weather agent using Mastra's Agent class with OpenAI's model and a weather client. The agent is configured to answer weather-related queries using the specified tools and model.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createMastraTools } from '@agentic/mastra'\nimport { WeatherClient } from '@agentic/weather'\nimport { openai } from '@ai-sdk/openai'\nimport { Agent } from '@mastra/core/agent'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const weatherAgent = new Agent({\n    name: 'Weather Agent',\n    instructions: 'You are a helpful assistant. Be as concise as possible.',\n    model: openai('gpt-4o-mini'),\n    tools: createMastraTools(weather)\n  })\n\n  const res = await weatherAgent.generate(\n    'What is the weather in San Francisco?'\n  )\n  console.log(res.text)\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: LangChain Weather Integration Example\nDESCRIPTION: Demonstrates how to create a LangChain agent that uses weather tools to process natural language queries about weather conditions\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/langchain.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createLangChainTools } from '@agentic/langchain'\nimport { WeatherClient } from '@agentic/stdlib'\nimport { ChatPromptTemplate } from '@langchain/core/prompts'\nimport { ChatOpenAI } from '@langchain/openai'\nimport { AgentExecutor, createToolCallingAgent } from 'langchain/agents'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const tools = createLangChainTools(weather)\n  const agent = createToolCallingAgent({\n    llm: new ChatOpenAI({ model: 'gpt-4o-mini', temperature: 0 }),\n    tools,\n    prompt: ChatPromptTemplate.fromMessages([\n      ['system', 'You are a helpful assistant. Be as concise as possible.'],\n      ['placeholder', '{chat_history}'],\n      ['human', '{input}'],\n      ['placeholder', '{agent_scratchpad}']\n    ])\n  })\n\n  const agentExecutor = new AgentExecutor({\n    agent,\n    tools\n    // verbose: true\n  })\n\n  const result = await agentExecutor.invoke({\n    input: 'What is the weather in San Francisco?'\n  })\n\n  console.log(result.output)\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Tools with Agentic and AI SDK\nDESCRIPTION: Demonstrates combining multiple tools from different sources using Agentic with an AI SDK. This example shows how to use pre-built clients, pick specific functions from a client, and create custom AI functions all in the same request.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SerperClient, WikipediaClient, FirecrawlClient } from '@agentic/stdlib'\nimport { createAIFunction } from '@agentic/core'\nimport { z } from 'zod'\n\nconst googleSearch = new SerperClient()\nconst wikipedia = new WikipediaClient()\nconst firecrawl = new FirecrawlClient()\n\nconst result = await generateText({\n  model: openai('gpt-4o-mini'),\n  // This example uses tools from 4 different sources. You can pass as many\n  // AIFunctionLike objects as you want.\n  tools: createAISDKTools(\n    googleSearch,\n    wikipedia,\n    // Pick a single function from the firecrawl client's set of AI functions\n    firecrawl.functions.pick('firecrawl_search'),\n    // Create a custom AI function (based off of Anthropic's think tool: https://www.anthropic.com/engineering/claude-think-tool)\n    createAIFunction({\n      name: 'think',\n      description: `Use this tool to think about something. It will not obtain new information or change the database, but just append the thought to the log. Use it when complex reasoning or some cache memory is needed.`,\n      inputSchema: z.object({\n        thought: z.string().describe('A thought to think about.')\n      }),\n      execute: ({ thought }) => thought\n    })\n  ),\n  prompt:\n    'What year did Jurassic Park the movie come out, and what else happened that year?'\n})\n```\n\n----------------------------------------\n\nTITLE: Using WeatherClient as an LLM-based Tool with Vercel AI SDK\nDESCRIPTION: This example shows how to use the WeatherClient as an LLM-based tool integrated with Vercel's AI SDK. It uses the createAISDKTools adapter to convert the WeatherClient into a compatible tool for the AI SDK.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/usage.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// sdk-specific imports\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\nimport { createAISDKTools } from '@agentic/ai-sdk'\n\n// sdk-agnostic imports\nimport { WeatherClient } from '@agentic/stdlib'\n\nconst weather = new WeatherClient()\n\nconst result = await generateText({\n  model: openai('gpt-4o-mini'),\n  // this is the key line which uses the `@agentic/ai-sdk` adapter\n  tools: createAISDKTools(weather),\n  toolChoice: 'required',\n  prompt: 'What is the weather in San Francisco?'\n})\n\nconsole.log(result.toolResults[0])\n```\n\n----------------------------------------\n\nTITLE: Using Firecrawl Client to Scrape URLs\nDESCRIPTION: Example code showing how to initialize the FirecrawlClient and use it to scrape a website URL. Requires FIRECRAWL_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/firecrawl.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { FirecrawlClient } from '@agentic/firecrawl'\n\nconst firecrawl = new FirecrawlClient()\nconst res = await firecrawl.scrapeUrl('https://example.com')\n```\n\n----------------------------------------\n\nTITLE: OpenAI Responses API Integration\nDESCRIPTION: Extended example showing how to use Agentic with OpenAI's Responses API for weather data retrieval\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/openai.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { WeatherClient } from '@agentic/stdlib'\nimport OpenAI from 'openai'\n\nasync function main() {\n  const weather = new WeatherClient()\n  const openai = new OpenAI()\n\n  const messages: OpenAI.Responses.ResponseInput = [\n    {\n      role: 'system',\n      content: 'You are a helpful assistant. Be as concise as possible.'\n    },\n    { role: 'user', content: 'What is the weather in San Francisco?' }\n  ]\n\n  {\n    // Call to OpenAI to invoke the weather tool\n    const res = await openai.responses.create({\n      model: 'gpt-4o-mini',\n      temperature: 0,\n      tools: weather.functions.responsesToolSpecs,\n      tool_choice: 'required',\n      input: messages\n    })\n\n    const message = res.output[0]\n    console.log(JSON.stringify(message, null, 2))\n    assert(message?.type === 'function_call')\n    assert(message.name === 'get_current_weather')\n\n    const fn = weather.functions.get('get_current_weather')!\n    const toolResult = await fn(message.arguments)\n\n    messages.push(message)\n    messages.push({\n      type: 'function_call_output',\n      call_id: message.call_id,\n      output: JSON.stringify(toolResult)\n    })\n  }\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using MCP Tools with OpenAI in an Agentic Project\nDESCRIPTION: A complete example demonstrating how to initialize and use MCP tools with OpenAI models. This creates a local MCP server process that provides filesystem access tools and uses them to list files in the current directory.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/mcp.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createAISDKTools } from '@agentic/ai-sdk'\nimport { createMcpTools } from '@agentic/mcp'\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\n\nasync function main() {\n  // Create an MCP tools provider, which will start a local MCP server process\n  // and use the stdio transport to communicate with it.\n  const mcpTools = await createMcpTools({\n    name: 'agentic-mcp-filesystem',\n    serverProcess: {\n      command: 'npx',\n      args: [\n        '-y',\n        // This example uses a built-in example MCP server from Anthropic, which\n        // provides a set of tools to access the local filesystem.\n        '@modelcontextprotocol/server-filesystem',\n        // Allow the MCP server to access the current working directory.\n        process.cwd()\n        // Feel free to add additional directories the tool should have access to.\n      ]\n    }\n  })\n\n  const result = await generateText({\n    model: openai('gpt-4o-mini'),\n    tools: createAISDKTools(mcpTools),\n    toolChoice: 'required',\n    temperature: 0,\n    system: 'You are a helpful assistant. Be as concise as possible.',\n    prompt: 'What files are in the current directory?'\n  })\n\n  console.log(result.toolResults[0])\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using GoogleDriveClient for File Operations\nDESCRIPTION: Example demonstrating how to authenticate with Google Drive API and perform operations like listing files, getting file metadata, and exporting files in specific formats. Uses GoogleAuth for authentication and the GoogleDriveClient wrapper for simplified API interactions.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-drive.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GoogleDriveClient } from '@agentic/google-drive'\nimport { GoogleAuth } from 'google-auth-library'\nimport { google } from 'googleapis'\n\nconst auth = new GoogleAuth({ scopes: 'https://www.googleapis.com/auth/drive' })\nconst drive = google.drive({ version: 'v3', auth })\nconst client = new GoogleDriveClient({ drive })\n\nconst result = await client.listFiles()\n\nconst file = result.files[0]!\nconst metadata = await client.getFile({ fileId: file.id })\nconst content = await client.exportFile({\n  fileId: file.id,\n  mimeType: 'application/pdf'\n})\n```\n\n----------------------------------------\n\nTITLE: Using Google Custom Search Client\nDESCRIPTION: Example of initializing and using the GoogleCustomSearchClient to perform a search query. Requires GOOGLE_API_KEY and GOOGLE_CSE_ID environment variables to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-custom-search.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GoogleCustomSearchClient } from '@agentic/google-custom-search'\n\nconst googleCustomSearch = new GoogleCustomSearchClient()\nconst results = await googleCustomSearch.search('latest news about openai')\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of SerperClient for Google Search\nDESCRIPTION: Example demonstrating how to import and instantiate the SerperClient class and perform a basic Google search. Requires SERPER_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serper.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SerperClient } from '@agentic/serper'\n\nconst serper = new SerperClient()\nconst res = await serper.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Calculator Tool in GenAIScript\nDESCRIPTION: This snippet demonstrates how to import the calculator tool from the @agentic package, define it as a tool using defTool, and use it to solve an arithmetic problem. The LLM can then invoke this tool to perform calculations.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/genaiscript.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { calculator } from '@agentic/calculator'\ndefTool(calculator)\n\n$`Answer the following arithmetic question: How much is 11 + 4? then divide by 3?`\n```\n\n----------------------------------------\n\nTITLE: Integrating WeatherClient with xsAI SDK in TypeScript\nDESCRIPTION: Example script demonstrating how to use the xsAI SDK with the Agentic weather tool to query weather information. The code loads environment variables, initializes the WeatherClient, and uses createXSAITools to generate a response about weather in San Francisco.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { WeatherClient } from '@agentic/weather'\nimport { createXSAITools } from '@agentic/xsai'\nimport { generateText } from 'xsai'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const result = await generateText({\n    apiKey: process.env.OPENAI_API_KEY!,\n    baseURL: 'https://api.openai.com/v1/',\n    model: 'gpt-4o-mini',\n    tools: await createXSAITools(weather),\n    toolChoice: 'required',\n    temperature: 0,\n    messages: [\n      {\n        role: 'system',\n        content: 'You are a helpful assistant. Be as concise as possible.'\n      },\n      { role: 'user', content: 'What is the weather in San Francisco?' }\n    ]\n  })\n\n  console.log(JSON.stringify(result, null, 2))\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using PredictLeadsClient to fetch company events\nDESCRIPTION: Example demonstrating how to initialize the PredictLeadsClient and use it to retrieve company events by domain. The client uses environment variables for authentication.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/predict-leads.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PredictLeadsClient } from '@agentic/predict-leads'\n\nconst predictLeads = new PredictLeadsClient()\nconst res = await predictLeads.getCompanyEvents({ domain: 'apple.com' })\n```\n\n----------------------------------------\n\nTITLE: Implementing Weather Query with Genkit and OpenAI\nDESCRIPTION: Example implementation showing how to use Genkit with OpenAI integration to query weather information. Demonstrates configuration of AI tools and weather client integration.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/genkit.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createGenkitTools } from '@agentic/genkit'\nimport { WeatherClient } from '@agentic/stdlib'\nimport { genkit } from 'genkit'\nimport { gpt4oMini, openAI } from 'genkitx-openai'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const ai = genkit({\n    plugins: [openAI()]\n  })\n\n  const result = await ai.generate({\n    model: gpt4oMini,\n    tools: createGenkitTools(ai, weather),\n    system: 'You are a helpful assistant. Be as concise as possible.',\n    prompt: 'What is the weather in San Francisco?'\n  })\n\n  console.log(result)\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Basic OpenAI Weather Integration\nDESCRIPTION: Example of using Agentic with OpenAI's chat completions API to fetch weather data for San Francisco using function calling\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/openai.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WeatherClient } from '@agentic/stdlib'\nimport OpenAI from 'openai'\n\nconst weather = new WeatherClient()\nconst openai = new OpenAI()\n\nconst messages: OpenAI.ChatCompletionMessageParam[] = [\n  {\n    role: 'system',\n    content: 'You are a helpful assistant. Be as concise as possible.'\n  },\n  { role: 'user', content: 'What is the weather in San Francisco?' }\n]\n\nconst res = await openai.chat.completions.create({\n  messages,\n  model: 'gpt-4o-mini',\n  temperature: 0,\n  tools: weather.functions.toolSpecs,\n  tool_choice: 'required'\n})\nconst message = res.choices[0]?.message!\nconsole.log(JSON.stringify(message, null, 2))\nassert(message.tool_calls?.[0]?.function?.name === 'get_current_weather')\n\nconst fn = weather.functions.get('get_current_weather')!\n\nconst toolArgs = message.tool_calls[0].function.arguments\nconst toolResult = await fn(toolArgs)\nconsole.log(JSON.stringify(toolResult, null, 2))\n```\n\n----------------------------------------\n\nTITLE: Using TwilioClient to Send Messages\nDESCRIPTION: Example of how to initialize the TwilioClient and send a message using the Twilio Conversations API. Requires TWILIO_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twilio.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TwilioClient } from '@agentic/twilio'\n\nconst twilio = new TwilioClient()\nconst res = await twilio.sendMessage({\n  conversationId: 'TODO',\n  text: 'Hello, world'\n})\n```\n\n----------------------------------------\n\nTITLE: Using JinaClient for URL Reading and Search\nDESCRIPTION: Example demonstrating how to initialize the JinaClient and use it for reading URLs and performing web searches. Shows basic usage of readUrl and search methods with JSON output option.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/jina.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { JinaClient } from '@agentic/jina'\n\nconst jina = new JinaClient()\nconst res0 = await jina.readUrl('https://example.com')\nconst res1 = await jina.search({ query: 'latest news', json: true })\n```\n\n----------------------------------------\n\nTITLE: Using the YouTube Client to Search Videos\nDESCRIPTION: Example of importing and using the YouTubeClient class to search for YouTube videos with a specific query. The client uses the YouTube API key from environment variables.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/youtube.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { YouTubeClient } from '@agentic/youtube'\n\nconst youtube = new YouTubeClient()\nconst res = await youtube.searchVideos({\n  query: 'cute kittens'\n})\n```\n\n----------------------------------------\n\nTITLE: Using the SearxNG Client to Search Multiple Engines\nDESCRIPTION: Example of how to import and use the SearxngClient to perform a search across multiple engines (Google, Reddit, and HackerNews) with a specific query.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/searxng.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SearxngClient } from '@agentic/searxng'\n\nconst searxng = new SearxngClient()\nconst res = await searxng.search({\n  query: 'us election',\n  engines: ['google', 'reddit', 'hackernews']\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Bing Search Implementation\nDESCRIPTION: Example showing how to initialize the BingClient and perform a basic search query. Requires BING_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/bing.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BingClient } from '@agentic/bing'\n\nconst bing = new BingClient()\nconst res = await bing.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Dexa API Client in TypeScript\nDESCRIPTION: Basic example of how to import the DexaClient, create an instance, and perform a search operation. This snippet demonstrates the core functionality of the Dexa API client.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/dexa.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DexaClient } from '@agentic/dexa'\n\nconst dexa = new DexaClient()\nconst res = await dexa.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using BraveSearchClient in TypeScript\nDESCRIPTION: Example of how to import and use the BraveSearchClient class from the @agentic/brave-search package to perform a search query.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/brave-search.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BraveSearchClient } from '@agentic/brave-search'\n\nconst braveSearch = new BraveSearchClient()\nconst res = await braveSearch.search('latest news about openai')\n```\n\n----------------------------------------\n\nTITLE: Using WeatherClient to Fetch Current Weather\nDESCRIPTION: Example code showing how to import and use the WeatherClient class to fetch current weather data for a specific location. Requires WEATHER_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/weather.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WeatherClient } from '@agentic/weather'\n\nconst weather = new WeatherClient()\nconst res = await weather.getCurrentWeather('new york')\n```\n\n----------------------------------------\n\nTITLE: Using ProxycurlClient to fetch LinkedIn data\nDESCRIPTION: Example of how to use the ProxycurlClient to retrieve company and person data from LinkedIn. It demonstrates importing the client, initializing it, and making API calls to fetch data for a company and an individual.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/proxycurl.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ProxycurlClient } from '@agentic/proxycurl'\n\nconst proxycurl = new ProxycurlClient()\nconst company = await proxycurl.getLinkedInCompany({\n  url: 'https://linkedin.com/company/apple'\n})\n\nconst person = await proxycurl.getLinkedInPerson({\n  url: 'https://linkedin.com/in/fisch2'\n})\n```\n\n----------------------------------------\n\nTITLE: Using Perigon Client for Article Search\nDESCRIPTION: Example of how to use the PerigonClient to search for news articles. It demonstrates importing the client, initializing it, and making a search query.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/perigon.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PerigonClient } from '@agentic/perigon'\n\nconst perigon = new PerigonClient()\nconst res = await perigon.searchArticles({\n  q: '\"elon musk\" AND tesla'\n})\n```\n\n----------------------------------------\n\nTITLE: Using HunterClient to find emails\nDESCRIPTION: Example demonstrating how to initialize the Hunter client and use it to search for emails by domain and find a specific email by name and domain. Requires the HUNTER_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hunter.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { HunterClient } from '@agentic/hunter'\n\nconst hunter = new HunterClient()\nconst res0 = await hunter.domainSearch('apple.com')\nconst res1 = await hunter.emailFinder({\n  domain: 'transitivebullsh.it',\n  first_name: 'travis',\n  last_name: 'fischer'\n})\n```\n\n----------------------------------------\n\nTITLE: Fetching a Gravatar profile with GravatarClient\nDESCRIPTION: Example demonstrating how to import the GravatarClient class and retrieve a Gravatar profile using an email address as the identifier.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/gravatar.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GravatarClient } from '@agentic/gravatar'\n\nconst gravatar = new GravatarClient()\nconst profile = await gravatar.getProfileByIdentifier('my-email@example.com')\n```\n\n----------------------------------------\n\nTITLE: Sending a Message with SlackClient\nDESCRIPTION: Example of importing and using the SlackClient to send a message to a Slack channel. This requires a SLACK_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/slack.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SlackClient } from '@agentic/slack'\n\nconst slack = new SlackClient()\nconst res = await slack.sendMessage({\n  text: 'hello',\n  channel: 'general'\n})\n```\n\n----------------------------------------\n\nTITLE: Using Open-Meteo Client for Weather Forecast\nDESCRIPTION: Example of importing and using the OpenMeteoClient to fetch weather forecast data for a specific location. The client is initialized and used to get forecast data for San Francisco.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/open-meteo.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { OpenMeteoClient } from '@agentic/open-meteo'\n\nconst openMeteo = new OpenMeteoClient()\nconst res = await openMeteo.getForecast({\n  location: {\n    name: 'San Francisco'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Using PolygonClient in TypeScript\nDESCRIPTION: Example of importing and using the PolygonClient class to fetch ticker details for Apple Inc. (AAPL). Requires setting the POLYGON_API_KEY environment variable.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/polygon.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PolygonClient } from '@agentic/polygon'\n\nconst polygon = new PolygonClient()\nconst res = await polygon.tickerDetails({ ticker: 'AAPL' })\n```\n\n----------------------------------------\n\nTITLE: Basic Tavily Search Implementation\nDESCRIPTION: Example showing how to import the TavilyClient, instantiate it, and perform a basic web search. This code requires a TAVILY_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/tavily.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TavilyClient } from '@agentic/tavily'\n\nconst tavily = new TavilyClient()\nconst res = await tavily.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using Apollo Client for Person Enrichment in TypeScript\nDESCRIPTION: Example of how to use the ApolloClient class to enrich person data. It demonstrates importing the client, initializing it, and making a request to enrich a person's data using their LinkedIn URL.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/apollo.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApolloClient } from '@agentic/apollo'\n\nconst apollo = new ApolloClient()\nconst res = await apollo.enrichPerson({\n  linkedin_url: 'https://linkedin.com/in/fisch2'\n})\n```\n\n----------------------------------------\n\nTITLE: Using RocketReach API to Look Up a Person by LinkedIn URL\nDESCRIPTION: Example of initializing the RocketReach client and performing a person lookup using a LinkedIn profile URL. Requires the ROCKETREACH_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/rocketreach.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { RocketReachClient } from '@agentic/rocketreach'\n\nconst rocketreach = new RocketReachClient()\nconst res = await rocketreach.lookupPerson({\n  linkedin_url: 'https://www.linkedin.com/in/fisch2'\n})\n```\n\n----------------------------------------\n\nTITLE: Using ClearbitClient for Company Enrichment\nDESCRIPTION: Example of importing and using the ClearbitClient to enrich company data. Requires a CLEARBIT_API_KEY environment variable to be set for authentication.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/clearbit.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ClearbitClient } from '@agentic/clearbit'\n\nconst clearbit = new ClearbitClient()\nconst res = await clearbit.companyEnrichment({ domain: 'apple.com' })\n```\n\n----------------------------------------\n\nTITLE: Using ArXivClient to search for research articles\nDESCRIPTION: Example of how to use the ArXivClient class to search for machine learning articles on ArXiv. It demonstrates importing the client, initializing it without an API key, and performing a search with specific parameters.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/arxiv.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ArXivClient } from '@agentic/arxiv'\n\n// No API is required to use the ArXiv API\nconst arxiv = new ArXivClient()\nconst results = await arxiv.search({\n  query: 'machine learning',\n  maxResults: 10\n})\n```\n\n----------------------------------------\n\nTITLE: Using Novu API Client in TypeScript\nDESCRIPTION: Example of how to import and use the NovuClient class from the @agentic/novu package. It demonstrates creating a client instance and performing a search operation.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/novu.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NovuClient } from '@agentic/novu'\n\nconst novu = new NovuClient()\nconst res = await novu.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using WikipediaClient to search and get page summaries\nDESCRIPTION: Example showing how to import and use the WikipediaClient class to search for Wikipedia articles and retrieve page summaries. The example demonstrates searching for 'steve jobs' and getting a summary of the 'Elon_Musk' page.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikipedia.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WikipediaClient } from '@agentic/wikipedia'\n\nconst wikipedia = new WikipediaClient()\nconst res0 = await wikipedia.search({ query: 'steve jobs' })\nconst res1 = await wikipedia.getPageSummary({ title: 'Elon_Musk' })\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using NotionClient\nDESCRIPTION: Example of importing, instantiating the NotionClient class, and making an API call to get authenticated user information. Requires NOTION_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/notion.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { NotionClient } from '@agentic/notion'\n\nconst notion = new NotionClient()\nconst authenticatedUser = await notion.getSelf()\n```\n\n----------------------------------------\n\nTITLE: Basic usage of ExaClient for web search\nDESCRIPTION: Example demonstrating how to import and initialize the ExaClient and perform a basic web search query. This requires the EXA_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/exa.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ExaClient } from '@agentic/exa'\n\nconst exa = new ExaClient()\nconst res = await exa.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using ZoomInfo Client for Contact Enrichment in TypeScript\nDESCRIPTION: This code snippet demonstrates how to use the ZoomInfoClient to enrich contact information. It imports the client, initializes it, and makes a request to enrich a contact using an email address.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/zoominfo.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ZoomInfoClient } from '@agentic/zoominfo'\n\nconst zoomInfo = new ZoomInfoClient()\nconst res = await zoomInfo.enrichContact({\n  emailAddress: 'travis@transitivebullsh.it'\n})\n```\n\n----------------------------------------\n\nTITLE: Using Wolfram Alpha Client\nDESCRIPTION: Example of importing and using the WolframAlphaClient to perform a search query. Requires WOLFRAM_APP_ID environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wolfram-alpha.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WolframAlphaClient } from '@agentic/wolfram-alpha'\n\nconst wolframAlpha = new WolframAlphaClient()\nconst res = await wolframAlpha.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using SerpAPIClient for Google search in TypeScript\nDESCRIPTION: Example of how to use the SerpAPIClient class to perform a Google search. It demonstrates importing the client, instantiating it, and making a search request.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serpapi.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SerpAPIClient } from '@agentic/serpapi'\n\nconst serpapi = new SerpAPIClient()\nconst res = await serpapi.search('latest news')\n```\n\n----------------------------------------\n\nTITLE: Using HackerNewsClient in TypeScript\nDESCRIPTION: Example of how to use the HackerNewsClient to search for items with specific criteria. It demonstrates creating a client instance and making a search request with query parameters.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hacker-news.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { HackerNewsClient } from '@agentic/hacker-news'\n\nconst hn = new HackerNewsClient()\nconst res = await hn.searchItems({\n  query: 'example query',\n  tags: ['story'],\n  numericFilters: ['points>100']\n})\n```\n\n----------------------------------------\n\nTITLE: Using RedditClient to fetch subreddit posts\nDESCRIPTION: TypeScript example demonstrating how to use the RedditClient to fetch hot posts from the AskReddit subreddit. It shows the initialization of the client and making a request to get posts.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/reddit.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { RedditClient } from '@agentic/reddit'\n\nconst reddit = new RedditClient()\nconst result = await reddit.getSubredditPosts({\n  subreddit: 'AskReddit',\n  type: 'hot',\n  limit: 10\n})\n```\n\n----------------------------------------\n\nTITLE: Using Midjourney Client to Generate Images\nDESCRIPTION: Example showing how to import and initialize the MidjourneyClient and generate an image using the imagine method with a text prompt.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/midjourney.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MidjourneyClient } from '@agentic/midjourney'\n\nconst midjourney = new MidjourneyClient()\nconst res = await midjourney.imagine({\n  prompt: 'beautiful sunset over the ocean, oil painting, monet'\n})\n```\n\n----------------------------------------\n\nTITLE: Using GoogleDocsClient in TypeScript\nDESCRIPTION: Example of how to use the GoogleDocsClient class to interact with Google Docs. This snippet demonstrates authentication, client initialization, and retrieving a document. It requires proper setup of Google Cloud credentials.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-docs.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { GoogleDriveClient } from '@agentic/google-drive'\nimport { authenticate } from '@google-cloud/local-auth'\nimport { google } from 'googleapis'\n\n// (in a real app, store these auth credentials and reuse them)\nconst auth = await authenticate({\n  scopes: ['https://www.googleapis.com/auth/documents.readonly'],\n  keyfilePath: process.env.GOOGLE_CREDENTIALS_PATH\n})\nconst docs = google.docs({ version: 'v1', auth })\nconst client = new GoogleDocsClient({ docs })\n\nconst document = await client.getDocument({ documentId: 'TODO' })\nconsole.log(document)\n```\n\n----------------------------------------\n\nTITLE: Querying Wikidata Entity by ID using WikidataClient\nDESCRIPTION: Example of importing the WikidataClient class from the @agentic/wikidata package and using it to retrieve entity information by ID. The example fetches data for Elon Musk (Q317521).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikidata.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WikidataClient } from '@agentic/wikidata'\n\nconst wikidata = new WikidataClient()\nconst res = await wikidata.getEntityById('Q317521') // elon musk\n```\n\n----------------------------------------\n\nTITLE: Running the Mastra weather example\nDESCRIPTION: Shell commands for cloning the repository, installing dependencies, setting up API keys in the environment, and running the example TypeScript file.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/mastra/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Implementing LlamaIndex Weather Agent\nDESCRIPTION: Example of creating an AI agent using LlamaIndex and the Weather API to handle weather-related queries. Demonstrates tool creation, agent configuration, and query handling.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/llamaindex.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createLlamaIndexTools } from '@agentic/llamaindex'\nimport { WeatherClient } from '@agentic/stdlib'\nimport { OpenAI, OpenAIAgent } from 'llamaindex'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const tools = createLlamaIndexTools(weather)\n  const agent = new OpenAIAgent({\n    llm: new OpenAI({ model: 'gpt-4o-mini', temperature: 0 }),\n    systemPrompt: 'You are a helpful assistant. Be as concise as possible.',\n    tools\n  })\n\n  const response = await agent.chat({\n    message: 'What is the weather in San Francisco?'\n  })\n\n  console.log(response.message.content)\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: API Integration Tools List in Markdown Table Format\nDESCRIPTION: A markdown table listing available API integrations, their package names, documentation links, and brief descriptions. Includes tools for various services like Midjourney, Notion, Twitter, and more.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/readme.md#2025-04-11_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| [Midjourney](https://www.imagineapi.dev) | `@agentic/midjourney` | [docs](https://agentic.so/tools/midjourney) | Unofficial Midjourney client for generative images. |\n| [McpTools](https://modelcontextprotocol.io) | `@agentic/mcp` | [docs](https://agentic.so/tools/mcp) | Model Context Protocol (MCP) client, supporting any MCP server. Use [createMcpTools](https://agentic.so/tools/mcp) to spawn or connect to an MCP server. |\n[...additional entries...]\n```\n\n----------------------------------------\n\nTITLE: Using TwitterClient to Create a Tweet\nDESCRIPTION: Example of how to use the TwitterClient class to create a tweet. It demonstrates creating a raw client using Nango for OAuth support, initializing the TwitterClient, and posting a tweet.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twitter.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TwitterClient, createTwitterV2Client } from '@agentic/twitter'\n\n// Requires Nango connection ID and callback URL environment variables\nconst rawClient = await createTwitterV2Client()\n\nconst twitter = new TwitterClient({ client: rawClient })\nconst res = await twitter.createTweet({\n  text: 'hello, world'\n})\n```\n\n----------------------------------------\n\nTITLE: Using DuckDuckGo Search Client\nDESCRIPTION: Example of initializing the DuckDuckGo client and performing a search query. No API key is required to use this service.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/duck-duck-go.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DuckDuckGoClient } from '@agentic/duck-duck-go'\n\n// No API is required to use the DuckDuckGo API\nconst duckDuckGo = new DuckDuckGoClient()\nconst results = await duckDuckGo.search({\n  query: 'latest news about AI'\n})\n```\n\n----------------------------------------\n\nTITLE: Using SocialDataClient in TypeScript\nDESCRIPTION: Example of how to import and use the SocialDataClient class to fetch user data by username from the Social Data Tools API.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/social-data.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { SocialDataClient } from '@agentic/social-data'\n\nconst sd = new SocialDataClient()\nconst res = await sd.getUserByUsername('transitive_bs')\n```\n\n----------------------------------------\n\nTITLE: Basic Profile Search with LeadMagic Client\nDESCRIPTION: Example of initializing the LeadMagic client and performing a profile search by LinkedIn username. Requires LEADMAGIC_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/leadmagic.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { LeadMagicClient } from '@agentic/leadmagic'\n\nconst leadmagic = new LeadMagicClient()\nconst res = await leadmagic.profileSearch({\n  linkedinUsername: 'fisch2'\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running the Dexter Weather Example\nDESCRIPTION: Shell commands for cloning the repository, installing dependencies, setting up the required API keys in a .env file, and running the example script with tsx. Requires both WeatherAPI and OpenAI API keys.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/dexter.mdx#2025-04-11_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/dexter/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Using TypeformClient to fetch responses and insights\nDESCRIPTION: Example of how to use the TypeformClient class to fetch form responses and insights. It demonstrates importing the client, initializing it, and calling methods to retrieve data for a specific form ID.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/typeform.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TypeformClient } from '@agentic/typeform'\n\nconst typeform = new TypeformClient()\n\nconst responses = await typeform.getResponsesForForm({\n  formId: 'TODO'\n})\n\nconst insights = await typeform.getInsightsForForm({\n  formId: 'TODO'\n})\n```\n\n----------------------------------------\n\nTITLE: Using the Calculator Function\nDESCRIPTION: Example of importing and using the calculator function to evaluate a mathematical expression. The function takes an object with an 'expr' property containing the expression to evaluate.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/calculator.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { calculator } from '@agentic/calculator'\n\nconst res = await calculator({ expr: '1 + 1' })\n```\n\n----------------------------------------\n\nTITLE: Basic E2B Code Execution Example\nDESCRIPTION: Demonstrates how to use the e2b function to execute Python code in the sandbox environment. Shows a simple example of printing 'Hello, World'.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/e2b.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { e2b } from '@agentic/e2b'\n\nconst res = await e2b({ code: 'print(\"Hello, World\")' })\n```\n\n----------------------------------------\n\nTITLE: Installing Required Dependencies\nDESCRIPTION: Commands for installing the necessary packages using different package managers (npm, yarn, pnpm)\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/openai.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/stdlib openai\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/stdlib openai\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/stdlib openai\n```\n\n----------------------------------------\n\nTITLE: Installing LangChain Dependencies\nDESCRIPTION: Package installation commands for different package managers (npm, yarn, pnpm) to set up LangChain integration\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/langchain.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/langchain @langchain/core langchain\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/langchain @langchain/core langchain\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/langchain @langchain/core langchain\n```\n\n----------------------------------------\n\nTITLE: Using People Data Labs Client for Company Lookup\nDESCRIPTION: Example of how to use the PeopleDataLabsClient to perform a company lookup using the website as a query parameter. This snippet demonstrates the basic usage of the client.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/people-data-labs.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { PeopleDataLabsClient } from '@agentic/people-data-labs'\n\nconst pdl = new PeopleDataLabsClient()\nconst res = await pdl.companyLookup({\n  query: {\n    website: 'apple.com'\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Agentic Tools\nDESCRIPTION: A structured table showing available tools, their packages, documentation links, and descriptions. Includes services like Airtable, Apollo, ArXiv, and various search engines.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/readme.md#2025-04-11_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Service / Tool                                                                  | Package                         | Docs                                                  | Description                                                                                                                                                                                                                                                    |\n| ------------------------------------------------------------------------------- | ------------------------------- | ----------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [Airtable](https://airtable.com/developers/web/api/introduction)                | `@agentic/airtable`             | [docs](https://agentic.so/tools/airtable)             | No-code spreadsheets, CRM, and database.                                                                                                                                                                                                                       |\n| [Apollo](https://docs.apollo.io)                                                | `@agentic/apollo`               | [docs](https://agentic.so/tools/apollo)               | B2B person and company enrichment API.                                                                                                                                                                                                                         |\n```\n\n----------------------------------------\n\nTITLE: Using WeatherClient as an LLM Tool with Vercel AI SDK\nDESCRIPTION: Shows how to use the WeatherClient from Agentic as an LLM-based tool with Vercel's AI SDK. The adapter createAISDKTools converts the client into a format compatible with the AI SDK's tool interface.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// sdk-specific imports\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\nimport { createAISDKTools } from '@agentic/ai-sdk'\n\n// sdk-agnostic imports\nimport { WeatherClient } from '@agentic/stdlib'\n\nconst weather = new WeatherClient()\n\nconst result = await generateText({\n  model: openai('gpt-4o-mini'),\n  // this is the key line which uses the `@agentic/ai-sdk` adapter\n  tools: createAISDKTools(weather),\n  toolChoice: 'required',\n  prompt: 'What is the weather in San Francisco?'\n})\n\nconsole.log(result.toolResults[0])\n```\n\n----------------------------------------\n\nTITLE: Using WeatherClient as a TypeScript Class\nDESCRIPTION: This snippet demonstrates how to use the WeatherClient from Agentic as a normal TypeScript class. It requires an API key from weatherapi.com set in the environment variables.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/usage.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WeatherClient } from '@agentic/stdlib'\n\n// Requires `process.env.WEATHER_API_KEY` (free from weatherapi.com)\nconst weather = new WeatherClient()\n\nconst result = await weather.getCurrentWeather({\n  q: 'San Francisco'\n})\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Project Environment\nDESCRIPTION: Commands for cloning the repository, installing dependencies, and setting up environment variables for weather and OpenAI API keys.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/genkit.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/genkit/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Basic Diffbot Client Usage Example\nDESCRIPTION: A simple example demonstrating how to import the DiffbotClient class, instantiate it, and analyze a URL. Requires a DIFFBOT_API_KEY environment variable to be set.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/diffbot.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DiffbotClient } from '@agentic/diffbot'\n\nconst diffbot = new DiffbotClient()\nconst res = await diffbot.analyzeUrl('https://example.com')\n```\n\n----------------------------------------\n\nTITLE: Installing All AI Tools (@agentic/stdlib) with npm/yarn/pnpm\nDESCRIPTION: This snippet demonstrates how to install all AI tools using the @agentic/stdlib package with different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/stdlib\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/stdlib\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/stdlib\n```\n\n----------------------------------------\n\nTITLE: McpToolsOptions Interface Definition\nDESCRIPTION: TypeScript interface that defines the configuration options for creating MCP tools via the createMcpTools function. This includes settings for server connection, tool filtering, and response formatting.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/mcp.mdx#2025-04-11_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface McpToolsOptions {\n  /**\n   * Provide a name for this client which will be its namespace for all tools and prompts.\n   */\n  name: string\n\n  /**\n   * Provide a version number for this client (defaults to 1.0.0).\n   */\n  version?: string\n\n  /**\n   * If you already have an MCP transport you'd like to use, pass it here to connect to the server.\n   */\n  transport?: Transport\n\n  /**\n   * Start a local server process using the stdio MCP transport.\n   */\n  serverProcess?: StdioServerParameters\n\n  /**\n   * Connect to a remote server process using the SSE MCP transport.\n   */\n  serverUrl?: string\n\n  /**\n   * Return tool responses in raw MCP form instead of processing them for Genkit compatibility.\n   */\n  rawToolResponses?: boolean\n\n  /**\n   * An optional filter function to determine which tools should be enabled.\n   *\n   * By default, all tools available on the MCP server will be enabled, but you\n   * can use this to filter a subset of those tools.\n   */\n  toolsFilter?: McpToolsFilter\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dexa Dexter Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet shows how to install the Dexa Dexter adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/dexter @dexaai/dexter\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/dexter @dexaai/dexter\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/dexter @dexaai/dexter\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running GenAIScript Calculator Example\nDESCRIPTION: Shell commands to clone the agentic repository, install dependencies, set up the OpenAI API key in a .env file, and run the calculator example with GenAIScript. An OpenAI API key is required for this example to work.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/genaiscript.mdx#2025-04-11_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx genaiscript examples/genaiscript/calculator.genai.mts\n```\n\n----------------------------------------\n\nTITLE: Using @agentic/dexter with Weather API Integration\nDESCRIPTION: Example demonstrating how to use the @agentic/dexter package with the WeatherClient to create an AI runner that can fetch weather information. The code initializes a runner with GPT-4o-mini and system instructions.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/dexter.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\n\nimport { createDexterFunctions } from '@agentic/dexter'\nimport { WeatherClient } from '@agentic/weather'\nimport { ChatModel, createAIRunner } from '@dexaai/dexter'\n\nasync function main() {\n  const weather = new WeatherClient()\n\n  const runner = createAIRunner({\n    chatModel: new ChatModel({\n      params: { model: 'gpt-4o-mini', temperature: 0 }\n      // debug: true\n    }),\n    functions: createDexterFunctions(weather),\n    systemMessage: 'You are a helpful assistant. Be as concise as possible.'\n  })\n\n  const result = await runner('What is the weather in San Francisco?')\n  console.log(result)\n}\n\nawait main()\n```\n\n----------------------------------------\n\nTITLE: Using AirtableClient in TypeScript\nDESCRIPTION: Example of how to use the AirtableClient to list bases, tables, and search records. This snippet demonstrates initializing the client, fetching bases and tables, and performing a search operation.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/airtable.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AirtableClient } from '@agentic/airtable'\n\nconst airtable = new AirtableClient()\nconst { bases } = await airtable.listBases()\nconsole.log('bases', tables)\n\nconst baseId = bases[0]!.id\nconst tables = await airtable.listTables({ baseId })\nconsole.log('tables', tables)\n\nconst tableId = tables[0]!.id\nconst searchResults = await airtable.searchRecords({\n  baseId,\n  tableId,\n  searchTerm: 'Travis'\n})\nconsole.log('search results', searchResults)\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/google-docs Package\nDESCRIPTION: Commands for installing the @agentic/google-docs package and its dependencies using npm, yarn, or pnpm. This snippet shows how to add the necessary packages to your project.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-docs.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/google-docs googleapis @google-cloud/local-auth\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/google-docs googleapis @google-cloud/local-auth\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/google-docs googleapis @google-cloud/local-auth\n```\n\n----------------------------------------\n\nTITLE: Running the Weather Example with Agentic and Vercel AI SDK\nDESCRIPTION: Shell commands to clone the Agentic repository, install dependencies, set up required API keys, and run the weather example using TypeScript execution via tsx.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/ai-sdk/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/google-drive Package with npm\nDESCRIPTION: Command to install the @agentic/google-drive package and its dependencies using npm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-drive.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/google-drive googleapis google-auth-library\n```\n\n----------------------------------------\n\nTITLE: Setting Up Project Environment\nDESCRIPTION: Commands for cloning the repository, installing dependencies, and setting up required API keys in the environment file\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/langchain.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/langchain/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Running OpenAPI to TypeScript Conversion with Different Installation Methods\nDESCRIPTION: Shows three different ways to execute the OpenAPI to TypeScript conversion tool: using tsx for local development, running directly with npx, or installing globally via npm. Each command converts an OpenAPI spec file to a generated TypeScript client.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/openapi-to-ts/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# local development\ntsx bin/openapi-to-ts.ts fixtures/openapi/3.0/notion.json -o fixtures/generated\n\n# published version\nnpx @agentic/openapi-to-ts fixtures/openapi/3.0/notion.json -o fixtures/generated\n\n# npm install -g version\nnpm install -g @agentic/openapi-to-ts\nopenapi-to-ts fixtures/openapi/3.0/notion.json -o fixtures/generated\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/polygon Package\nDESCRIPTION: Commands for installing the @agentic/polygon package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/polygon.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/polygon\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/polygon\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/polygon\n```\n\n----------------------------------------\n\nTITLE: Running the Weather Example with xsAI SDK\nDESCRIPTION: Steps to clone the repository, install dependencies, set up environment variables for API keys, and run the weather example using the xsAI SDK. Requires both OpenAI and weatherapi.com API keys.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/xsai/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/twitter Package\nDESCRIPTION: Commands for installing the @agentic/twitter package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twitter.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/twitter\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/twitter\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/twitter\n```\n\n----------------------------------------\n\nTITLE: Installing Mastra Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet shows how to install the Mastra adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/mastra @mastra/core\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/mastra @mastra/core\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/mastra @mastra/core\n```\n\n----------------------------------------\n\nTITLE: Project Setup Commands\nDESCRIPTION: Shell commands for setting up the project, including cloning the repository and configuring environment variables\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/openai.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/openai/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Installing Vercel AI SDK Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet demonstrates how to install the Vercel AI SDK adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/ai-sdk ai\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/ai-sdk ai\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/ai-sdk ai\n```\n\n----------------------------------------\n\nTITLE: Installing Individual AI Tool (@agentic/weather) with npm/yarn/pnpm\nDESCRIPTION: This snippet shows how to install an individual AI tool, specifically the Weather tool, using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/weather\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/weather\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/weather\n```\n\n----------------------------------------\n\nTITLE: Setting Up Example Project\nDESCRIPTION: Commands for cloning the repository, installing dependencies, and configuring environment variables to run the weather example.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/llamaindex.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:transitive-bullshit/agentic.git\ncd agentic\npnpm install\necho 'WEATHER_API_KEY=your-key' >> .env\necho 'OPENAI_API_KEY=your-key' >> .env\nnpx tsx examples/llamaindex/bin/weather.ts\n```\n\n----------------------------------------\n\nTITLE: Installing Apollo Package using Package Managers\nDESCRIPTION: Commands for installing the @agentic/apollo package using npm, yarn, or pnpm. These commands add the package to your project's dependencies.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/apollo.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/apollo\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/apollo\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/apollo\n```\n\n----------------------------------------\n\nTITLE: Installing Dexa API Client using Package Managers\nDESCRIPTION: Commands for installing the @agentic/dexa package using npm, yarn, or pnpm. This package is required to interact with the Dexa API.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/dexa.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/dexa\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/dexa\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/dexa\n```\n\n----------------------------------------\n\nTITLE: Installing Core Dependencies (zod) with npm/yarn/pnpm\nDESCRIPTION: This snippet shows how to install the core dependency 'zod' using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install zod\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add zod\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add zod\n```\n\n----------------------------------------\n\nTITLE: Installing Firebase Genkit Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet demonstrates how to install the Firebase Genkit adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/genkit genkit\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/genkit genkit\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/genkit genkit\n```\n\n----------------------------------------\n\nTITLE: Installing LangChain Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet demonstrates how to install the LangChain adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/langchain @langchain/core langchain\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/langchain @langchain/core langchain\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/langchain @langchain/core langchain\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/reddit package\nDESCRIPTION: Commands for installing the @agentic/reddit package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/reddit.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/reddit\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/reddit\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/reddit\n```\n\n----------------------------------------\n\nTITLE: Installing Firecrawl Package Using Package Managers\nDESCRIPTION: Installation commands for the @agentic/firecrawl package using different Node.js package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/firecrawl.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/firecrawl\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/firecrawl\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/firecrawl\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with pnpm\nDESCRIPTION: Command to install additional required dependencies (OpenAI provider, Agentic weather tool, and dotenv) using pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/twilio Package with NPM\nDESCRIPTION: Command to install the @agentic/twilio package using NPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twilio.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/twilio\n```\n\n----------------------------------------\n\nTITLE: Installing LlamaIndex Adapter with npm/yarn/pnpm\nDESCRIPTION: This snippet shows how to install the LlamaIndex adapter and its dependencies using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/llamaindex llamaindex\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/llamaindex llamaindex\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/llamaindex llamaindex\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with npm\nDESCRIPTION: Command to install additional required dependencies (OpenAI provider, Agentic weather tool, and dotenv) using npm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/social-data Package\nDESCRIPTION: Commands for installing the @agentic/social-data package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/social-data.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/social-data\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/social-data\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/social-data\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/dexter and Dependencies with npm\nDESCRIPTION: Command to install the @agentic/dexter package along with the required @dexaai/dexter dependency using npm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/dexter.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/dexter @dexaai/dexter\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/notion Package with Yarn\nDESCRIPTION: Command to install the Notion API client package using Yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/notion.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/notion\n```\n\n----------------------------------------\n\nTITLE: Installing OpenAI SDK with npm/yarn/pnpm\nDESCRIPTION: This snippet demonstrates how to install the OpenAI SDK using different package managers. No separate adapter is needed for OpenAI SDK.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/quickstart.mdx#2025-04-11_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm install openai\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add openai\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add openai\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with yarn\nDESCRIPTION: Command to install additional required dependencies (OpenAI provider, Agentic weather tool, and dotenv) using yarn.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/typeform package\nDESCRIPTION: Commands for installing the @agentic/typeform package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/typeform.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/typeform\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/typeform\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/typeform\n```\n\n----------------------------------------\n\nTITLE: Installing People Data Labs Client Package\nDESCRIPTION: Commands for installing the @agentic/people-data-labs package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/people-data-labs.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/people-data-labs\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/people-data-labs\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/people-data-labs\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with npm\nDESCRIPTION: Command for installing the required additional dependencies (weather client and dotenv) using npm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing Perigon Client Package\nDESCRIPTION: Commands for installing the @agentic/perigon package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/perigon.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/perigon\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/perigon\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/perigon\n```\n\n----------------------------------------\n\nTITLE: Installing Google Custom Search Package\nDESCRIPTION: Different package manager commands for installing the @agentic/google-custom-search package using npm, yarn, or pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-custom-search.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/google-custom-search\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/google-custom-search\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/google-custom-search\n```\n\n----------------------------------------\n\nTITLE: Installing Mastra dependencies with yarn\nDESCRIPTION: Command for installing the required Mastra packages using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/mastra @mastra/core\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Dependencies with Package Managers\nDESCRIPTION: Commands for installing the required E2B packages (@agentic/e2b and @e2b/code-interpreter) using different Node.js package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/e2b.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/e2b @e2b/code-interpreter\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/e2b @e2b/code-interpreter\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/e2b @e2b/code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Installing Novu API Client Package\nDESCRIPTION: Commands for installing the @agentic/novu package using different package managers. This snippet shows how to install the package using npm, yarn, or pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/novu.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/novu\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/novu\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/novu\n```\n\n----------------------------------------\n\nTITLE: Installing HackerNews API Client Package\nDESCRIPTION: Commands for installing the @agentic/hacker-news package using different package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hacker-news.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/hacker-news\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/hacker-news\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/hacker-news\n```\n\n----------------------------------------\n\nTITLE: Installing Mastra dependencies with pnpm\nDESCRIPTION: Command for installing the required Mastra packages using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/mastra @mastra/core\n```\n\n----------------------------------------\n\nTITLE: Installing Airtable Client for Agentic\nDESCRIPTION: Commands to install the @agentic/airtable package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/airtable.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/airtable\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/airtable\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/airtable\n```\n\n----------------------------------------\n\nTITLE: Installing SearxNG Client Package via yarn\nDESCRIPTION: Command to install the @agentic/searxng package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/searxng.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/searxng\n```\n\n----------------------------------------\n\nTITLE: Installing Jina Package with Package Managers\nDESCRIPTION: Commands to install the @agentic/jina package using different Node.js package managers (npm, yarn, and pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/jina.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/jina\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/jina\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/jina\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/dexter and Dependencies with yarn\nDESCRIPTION: Command to install the @agentic/dexter package along with the required @dexaai/dexter dependency using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/dexter.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/dexter @dexaai/dexter\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/proxycurl package\nDESCRIPTION: Commands for installing the @agentic/proxycurl package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/proxycurl.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/proxycurl\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/proxycurl\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/proxycurl\n```\n\n----------------------------------------\n\nTITLE: Installing xsAI SDK and dependencies with pnpm\nDESCRIPTION: Command for installing the xsAI SDK and its dependencies using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/xsai xsai @xsai/tool\n```\n\n----------------------------------------\n\nTITLE: Installing xsAI SDK and dependencies with yarn\nDESCRIPTION: Command for installing the xsAI SDK and its dependencies using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/xsai xsai @xsai/tool\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/wikidata Package using npm\nDESCRIPTION: Command to install the @agentic/wikidata package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikidata.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/wikidata\n```\n\n----------------------------------------\n\nTITLE: Installing ZoomInfo Package using Package Managers\nDESCRIPTION: This snippet demonstrates how to install the @agentic/zoominfo package using different package managers: npm, yarn, and pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/zoominfo.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/zoominfo\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/zoominfo\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/zoominfo\n```\n\n----------------------------------------\n\nTITLE: Installing Diffbot API Client with npm\nDESCRIPTION: Command to install the Diffbot API client package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/diffbot.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/diffbot\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/google-drive Package with yarn\nDESCRIPTION: Command to install the @agentic/google-drive package and its dependencies using yarn.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-drive.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/google-drive googleapis google-auth-library\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/serpapi package\nDESCRIPTION: Commands for installing the @agentic/serpapi package using different package managers (npm, yarn, pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serpapi.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/serpapi\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/serpapi\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/serpapi\n```\n\n----------------------------------------\n\nTITLE: Installing DuckDuckGo Client Package\nDESCRIPTION: Different package manager commands for installing the @agentic/duck-duck-go package.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/duck-duck-go.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/duck-duck-go\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/duck-duck-go\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/duck-duck-go\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/dexter and Dependencies with pnpm\nDESCRIPTION: Command to install the @agentic/dexter package along with the required @dexaai/dexter dependency using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/dexter.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/dexter @dexaai/dexter\n```\n\n----------------------------------------\n\nTITLE: Installing WeatherClient Package using PNPM\nDESCRIPTION: Command to install the @agentic/weather package using PNPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/weather.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/weather\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/hunter with npm\nDESCRIPTION: Command to install the Hunter client library using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hunter.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/hunter\n```\n\n----------------------------------------\n\nTITLE: Installing additional dependencies with pnpm\nDESCRIPTION: Command for installing the required additional packages (OpenAI SDK, weather tool, and dotenv) using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing Wolfram Alpha Client Package\nDESCRIPTION: Different package manager commands to install the @agentic/wolfram-alpha package.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wolfram-alpha.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/wolfram-alpha\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/wolfram-alpha\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/wolfram-alpha\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/wikidata Package using yarn\nDESCRIPTION: Command to install the @agentic/wikidata package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikidata.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/wikidata\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/notion Package with NPM\nDESCRIPTION: Command to install the Notion API client package using NPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/notion.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/notion\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/bing with NPM\nDESCRIPTION: Command to install the Bing client package using NPM package manager\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/bing.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/bing\n```\n\n----------------------------------------\n\nTITLE: Installing the YouTube API Client with yarn\nDESCRIPTION: Command to install the @agentic/youtube package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/youtube.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/youtube\n```\n\n----------------------------------------\n\nTITLE: Installing Genkit Dependencies\nDESCRIPTION: Package installation commands for different Node.js package managers (npm, yarn, and pnpm).\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/genkit.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/genkit genkit\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/genkit genkit\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/genkit genkit\n```\n\n----------------------------------------\n\nTITLE: Installing SearxNG Client Package via npm\nDESCRIPTION: Command to install the @agentic/searxng package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/searxng.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/searxng\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/wikidata Package using pnpm\nDESCRIPTION: Command to install the @agentic/wikidata package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikidata.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/wikidata\n```\n\n----------------------------------------\n\nTITLE: Installing LeadMagic Package with npm\nDESCRIPTION: Command to install the LeadMagic package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/leadmagic.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/leadmagic\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/bing with Yarn\nDESCRIPTION: Command to install the Bing client package using Yarn package manager\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/bing.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/bing\n```\n\n----------------------------------------\n\nTITLE: Installing xsAI SDK and dependencies with npm\nDESCRIPTION: Command for installing the xsAI SDK and its dependencies using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/xsai xsai @xsai/tool\n```\n\n----------------------------------------\n\nTITLE: Installing the YouTube API Client with npm\nDESCRIPTION: Command to install the @agentic/youtube package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/youtube.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/youtube\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/clearbit Package with npm\nDESCRIPTION: Command to install the @agentic/clearbit package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/clearbit.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/clearbit\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/twilio Package with Yarn\nDESCRIPTION: Command to install the @agentic/twilio package using Yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twilio.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/twilio\n```\n\n----------------------------------------\n\nTITLE: Installing the Calculator Package with npm\nDESCRIPTION: Command to install the calculator package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/calculator.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/calculator\n```\n\n----------------------------------------\n\nTITLE: Installing Tavily using pnpm\nDESCRIPTION: Command to install the @agentic/tavily package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/tavily.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/tavily\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/ai-sdk Package with yarn\nDESCRIPTION: Command to install the Agentic AI SDK adapter package along with the required AI dependency using yarn.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/ai-sdk ai\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/brave-search package using yarn\nDESCRIPTION: Command to install the @agentic/brave-search package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/brave-search.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/brave-search\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/exa with yarn\nDESCRIPTION: Command to install the Exa client package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/exa.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/exa\n```\n\n----------------------------------------\n\nTITLE: Installing Tavily using yarn\nDESCRIPTION: Command to install the @agentic/tavily package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/tavily.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/tavily\n```\n\n----------------------------------------\n\nTITLE: Installing Tavily using npm\nDESCRIPTION: Command to install the @agentic/tavily package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/tavily.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/tavily\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/clearbit Package with yarn\nDESCRIPTION: Command to install the @agentic/clearbit package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/clearbit.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/clearbit\n```\n\n----------------------------------------\n\nTITLE: Installing RocketReach Client via yarn\nDESCRIPTION: Command to install the RocketReach client package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/rocketreach.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/rocketreach\n```\n\n----------------------------------------\n\nTITLE: Installing the Calculator Package with yarn\nDESCRIPTION: Command to install the calculator package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/calculator.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/calculator\n```\n\n----------------------------------------\n\nTITLE: Installing the YouTube API Client with pnpm\nDESCRIPTION: Command to install the @agentic/youtube package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/youtube.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/youtube\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/notion Package with PNPM\nDESCRIPTION: Command to install the Notion API client package using PNPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/notion.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/notion\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/brave-search package using pnpm\nDESCRIPTION: Command to install the @agentic/brave-search package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/brave-search.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/brave-search\n```\n\n----------------------------------------\n\nTITLE: Installing Open-Meteo Client with PNPM\nDESCRIPTION: Command to install the Open-Meteo client package using PNPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/open-meteo.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/open-meteo\n```\n\n----------------------------------------\n\nTITLE: Installing RocketReach Client via pnpm\nDESCRIPTION: Command to install the RocketReach client package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/rocketreach.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/rocketreach\n```\n\n----------------------------------------\n\nTITLE: Installing Diffbot API Client with yarn\nDESCRIPTION: Command to install the Diffbot API client package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/diffbot.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/diffbot\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/predict-leads package with yarn\nDESCRIPTION: Command to install the Predict Leads package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/predict-leads.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/predict-leads\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/slack Package with pnpm\nDESCRIPTION: Command to install the @agentic/slack package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/slack.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/slack\n```\n\n----------------------------------------\n\nTITLE: Installing LeadMagic Package with yarn\nDESCRIPTION: Command to install the LeadMagic package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/leadmagic.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/leadmagic\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/google-drive Package with pnpm\nDESCRIPTION: Command to install the @agentic/google-drive package and its dependencies using pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/google-drive.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/google-drive googleapis google-auth-library\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/mcp Package with yarn\nDESCRIPTION: Command to install the @agentic/mcp package using the yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/mcp.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/mcp\n```\n\n----------------------------------------\n\nTITLE: Installing WeatherClient Package using Yarn\nDESCRIPTION: Command to install the @agentic/weather package using Yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/weather.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/weather\n```\n\n----------------------------------------\n\nTITLE: Installing Midjourney Client with pnpm\nDESCRIPTION: Command to install the @agentic/midjourney package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/midjourney.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/midjourney\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/mcp Package with npm\nDESCRIPTION: Command to install the @agentic/mcp package using the npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/mcp.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/mcp\n```\n\n----------------------------------------\n\nTITLE: Installing WeatherClient Package using NPM\nDESCRIPTION: Command to install the @agentic/weather package using NPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/weather.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/weather\n```\n\n----------------------------------------\n\nTITLE: Installing Mastra dependencies with npm\nDESCRIPTION: Command for installing the required Mastra packages using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/mastra @mastra/core\n```\n\n----------------------------------------\n\nTITLE: Installing Wikipedia API Client with yarn\nDESCRIPTION: Command to install the @agentic/wikipedia package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikipedia.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/wikipedia\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/ai-sdk Package with pnpm\nDESCRIPTION: Command to install the Agentic AI SDK adapter package along with the required AI dependency using pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/ai-sdk ai\n```\n\n----------------------------------------\n\nTITLE: Installing SearxNG Client Package via pnpm\nDESCRIPTION: Command to install the @agentic/searxng package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/searxng.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/searxng\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/brave-search package using npm\nDESCRIPTION: Command to install the @agentic/brave-search package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/brave-search.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/brave-search\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/hunter with pnpm\nDESCRIPTION: Command to install the Hunter client library using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hunter.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/hunter\n```\n\n----------------------------------------\n\nTITLE: Installing Midjourney Client with npm\nDESCRIPTION: Command to install the @agentic/midjourney package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/midjourney.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/midjourney\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/predict-leads package with npm\nDESCRIPTION: Command to install the Predict Leads package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/predict-leads.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/predict-leads\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/gravatar package with npm\nDESCRIPTION: Command to install the @agentic/gravatar package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/gravatar.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/gravatar\n```\n\n----------------------------------------\n\nTITLE: Installing Open-Meteo Client with NPM\nDESCRIPTION: Command to install the Open-Meteo client package using NPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/open-meteo.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/open-meteo\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/arxiv package using pnpm\nDESCRIPTION: Command to install the @agentic/arxiv package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/arxiv.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/arxiv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/exa with pnpm\nDESCRIPTION: Command to install the Exa client package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/exa.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/exa\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/twilio Package with PNPM\nDESCRIPTION: Command to install the @agentic/twilio package using PNPM package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/twilio.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/twilio\n```\n\n----------------------------------------\n\nTITLE: Installing Open-Meteo Client with Yarn\nDESCRIPTION: Command to install the Open-Meteo client package using Yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/open-meteo.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/open-meteo\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with pnpm\nDESCRIPTION: Command for installing the required additional dependencies (weather client and dotenv) using pnpm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/serper Package with pnpm\nDESCRIPTION: Command to install the @agentic/serper package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serper.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/serper\n```\n\n----------------------------------------\n\nTITLE: Installing additional dependencies with npm\nDESCRIPTION: Command for installing the required additional packages (OpenAI SDK, weather tool, and dotenv) using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing Additional Dependencies with yarn\nDESCRIPTION: Command for installing the required additional dependencies (weather client and dotenv) using yarn.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/xsai.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Logo\nDESCRIPTION: HTML markup for displaying the project logo and header centered on the page with a link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/arxiv/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing additional dependencies with yarn\nDESCRIPTION: Command for installing the required additional packages (OpenAI SDK, weather tool, and dotenv) using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/mastra.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @ai-sdk/openai @agentic/weather dotenv\n```\n\n----------------------------------------\n\nTITLE: Installing LeadMagic Package with pnpm\nDESCRIPTION: Command to install the LeadMagic package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/leadmagic.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/leadmagic\n```\n\n----------------------------------------\n\nTITLE: HTML Repository Header with Project Logo\nDESCRIPTION: HTML markup for displaying the project logo, description and status badges in a centered layout\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/langchain/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>Agentic adapter for LangChain's JS SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Logo and Description in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic logo with a link to the project website, followed by a brief description of the project.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/google-docs/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/arxiv package using npm\nDESCRIPTION: Command to install the @agentic/arxiv package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/arxiv.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/arxiv\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/clearbit Package with pnpm\nDESCRIPTION: Command to install the @agentic/clearbit package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/clearbit.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/clearbit\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Logo and Description in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic logo, project description, and various project status badges.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/mastra/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>Agentic adapter for the Mastra AI Agent SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Wikipedia API Client with npm\nDESCRIPTION: Command to install the @agentic/wikipedia package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikipedia.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/wikipedia\n```\n\n----------------------------------------\n\nTITLE: Installing Midjourney Client with yarn\nDESCRIPTION: Command to install the @agentic/midjourney package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/midjourney.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/midjourney\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Content in Markdown\nDESCRIPTION: HTML markup for centering project logo, description and status badges in markdown document\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/calculator/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/serper Package with npm\nDESCRIPTION: Command to install the @agentic/serper package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serper.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/serper\n```\n\n----------------------------------------\n\nTITLE: Installing Wikipedia API Client with pnpm\nDESCRIPTION: Command to install the @agentic/wikipedia package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/wikipedia.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/wikipedia\n```\n\n----------------------------------------\n\nTITLE: HTML Status Badges\nDESCRIPTION: HTML markup for displaying project status badges including build status, NPM version, license, and code formatting.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/notion/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Logo\nDESCRIPTION: Centers and displays the Agentic project logo with a link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/midjourney/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/serper Package with yarn\nDESCRIPTION: Command to install the @agentic/serper package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/serper.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/serper\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/hunter with yarn\nDESCRIPTION: Command to install the Hunter client library using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/hunter.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/hunter\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Project Header in Markdown\nDESCRIPTION: This code snippet uses HTML within Markdown to create a centered header for the Agentic project, including the project logo and a brief description.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/wolfram-alpha/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Project Header in Markdown\nDESCRIPTION: This code snippet creates a centered project header with an image and description using Markdown and HTML.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/hunter/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/slack Package with npm\nDESCRIPTION: Command to install the @agentic/slack package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/slack.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/slack\n```\n\n----------------------------------------\n\nTITLE: HTML Status Badges\nDESCRIPTION: HTML markup displaying various project status badges including build status, NPM version, license, and code formatting.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/mcp/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/bing with PNPM\nDESCRIPTION: Command to install the Bing client package using PNPM package manager\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/bing.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/bing\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Description in HTML\nDESCRIPTION: This HTML snippet centers and displays a brief description of the Agentic project.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/rocketreach/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet displays various badges for the Agentic project, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/google-docs/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/slack Package with yarn\nDESCRIPTION: Command to install the @agentic/slack package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/slack.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/slack\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet shows various project badges for Agentic, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/perigon/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Image and Links\nDESCRIPTION: HTML markup for the project header section containing centered logo image, description and status badges.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/proxycurl/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/exa with npm\nDESCRIPTION: Command to install the Exa client package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/exa.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/exa\n```\n\n----------------------------------------\n\nTITLE: HTML Description and Badges\nDESCRIPTION: HTML markup for displaying the project description and status badges including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/arxiv/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Logo and Description in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic project logo with a link to the project website. It also includes a brief description of the project and various status badges.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/people-data-labs/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Center-Aligned Logo and Link\nDESCRIPTION: HTML markup for displaying the centered Agentic logo with link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/notion/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/arxiv package using yarn\nDESCRIPTION: Command to install the @agentic/arxiv package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/arxiv.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/arxiv\n```\n\n----------------------------------------\n\nTITLE: HTML Center-Aligned Project Header with Logo\nDESCRIPTION: HTML markup for displaying the centered project logo, description, and status badges including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/google-custom-search/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/gravatar package with yarn\nDESCRIPTION: Command to install the @agentic/gravatar package using yarn package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/gravatar.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/gravatar\n```\n\n----------------------------------------\n\nTITLE: HTML Center-Aligned Project Logo\nDESCRIPTION: HTML markup for displaying the centered Agentic project logo with a link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/mcp/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Image and Links\nDESCRIPTION: HTML markup for the project header, including centered logo image, description, and status badges for build, npm version, license and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/firecrawl/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/gravatar package with pnpm\nDESCRIPTION: Command to install the @agentic/gravatar package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/gravatar.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/gravatar\n```\n\n----------------------------------------\n\nTITLE: HTML Alignment and Image Setup\nDESCRIPTION: HTML markup for centering project logo, description, and status badges. Sets up the main header image and various project status indicators including build status, NPM version, license, and code formatting badges.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/searxng/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing the Calculator Package with pnpm\nDESCRIPTION: Command to install the calculator package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/calculator.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/calculator\n```\n\n----------------------------------------\n\nTITLE: HTML Project Badges\nDESCRIPTION: Centers and displays various project status badges including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/midjourney/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Header Layout with Project Links\nDESCRIPTION: HTML markup for the project header section, including centered logo, description, and status badges for build, NPM version, license and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/diffbot/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Diffbot API Client with pnpm\nDESCRIPTION: Command to install the Diffbot API client package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/diffbot.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/diffbot\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet centers and displays various project badges, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/airtable/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing RocketReach Client via npm\nDESCRIPTION: Command to install the RocketReach client package using npm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/rocketreach.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/rocketreach\n```\n\n----------------------------------------\n\nTITLE: Component Frame Style Definition - React/JSX\nDESCRIPTION: JSX component styling for an image frame with maximum width constraints and centered alignment.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/intro.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Frame style={{ maxWidth: 308, margin: '0 auto' }}>\n  <img src='/media/agentic-header.jpg' alt='Agentic header' />\n</Frame>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Header Image in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic header image with a link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/airtable/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/predict-leads package with pnpm\nDESCRIPTION: Command to install the Predict Leads package using pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/predict-leads.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/predict-leads\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/ai-sdk Package with npm\nDESCRIPTION: Command to install the Agentic AI SDK adapter package along with the required AI dependency using npm.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/ai-sdk.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/ai-sdk ai\n```\n\n----------------------------------------\n\nTITLE: Installing @agentic/mcp Package with pnpm\nDESCRIPTION: Command to install the @agentic/mcp package using the pnpm package manager.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/tools/mcp.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/mcp\n```\n\n----------------------------------------\n\nTITLE: Installing LlamaIndex Dependencies with Package Managers\nDESCRIPTION: Commands for installing the LlamaIndex adapter and its dependencies using different Node.js package managers.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/docs/sdks/llamaindex.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @agentic/llamaindex llamaindex\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @agentic/llamaindex llamaindex\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @agentic/llamaindex llamaindex\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Header Image in HTML\nDESCRIPTION: This HTML snippet displays the Agentic header image centered on the page, linking to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/weather/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in Markdown\nDESCRIPTION: This code snippet demonstrates how to display various project badges using Markdown and HTML. It includes badges for build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/twilio/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Logo and Badges\nDESCRIPTION: HTML markup for the project header section, including centered logo, description, and status badges for build, NPM version, license, and code formatting.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/youtube/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Header Image in Markdown\nDESCRIPTION: This code snippet shows how to center-align and display the Agentic header image using Markdown and HTML. It includes a link to the project website and sets the image width.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/twilio/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet displays various badges for the Agentic project, including build status, npm version, license, and code style. Each badge is a linked image to its respective source.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/jina/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Adding Project Badges in Markdown\nDESCRIPTION: This snippet demonstrates how to add various project badges (build status, NPM version, license, code style) using Markdown and HTML.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/gravatar/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Status Badges in HTML\nDESCRIPTION: This HTML snippet centers and displays various status badges for the Agentic project, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/novu/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet centers and displays various project badges including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/rocketreach/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Badges in HTML\nDESCRIPTION: This HTML snippet shows various project badges including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/weather/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Repository Header with Image and Links\nDESCRIPTION: HTML markup for the repository header section, including centered logo image, description, and status badges for build, NPM version, license and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/twitter/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Status Badges in HTML\nDESCRIPTION: This HTML snippet centers and displays various status badges for the Agentic project, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/apollo/readme.md#2025-04-11_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Adding Project Badges in Markdown\nDESCRIPTION: This snippet displays various project badges including build status, NPM version, license, and code style using Markdown and HTML.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/hunter/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Description Text\nDESCRIPTION: HTML markup for displaying the centered project description text.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/notion/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Adding Project Badges in Markdown\nDESCRIPTION: This snippet demonstrates how to add various project badges using Markdown syntax, including build status, NPM version, license, and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/wolfram-alpha/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying HTML Project Header with Logo\nDESCRIPTION: HTML markup for displaying the project logo, description, and status badges in a centered layout using paragraph and anchor tags.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/bing/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Logo and Badges\nDESCRIPTION: HTML markup for the project header section including centered logo, description, and status badges for build, npm version, license and code style.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/llamaindex/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>Agentic adapter for the LlamaIndex JS SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header Structure\nDESCRIPTION: Centers and styles the project logo, description and status badges using HTML alignment tags and links.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/leadmagic/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Project Header in Markdown\nDESCRIPTION: This code snippet shows how to create a centered header with an image and description for the Agentic project using Markdown and HTML.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/gravatar/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Logo and Description in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic logo, along with a brief description of the project. It uses inline styling for alignment and image sizing.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/jina/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Logo in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic logo, linking to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/rocketreach/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header Configuration\nDESCRIPTION: HTML markup for the project header section, including logo, description, and status badges\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/zoominfo/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Header Image in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic logo image with a link to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/apollo/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Header Image in HTML\nDESCRIPTION: This HTML snippet centers and displays the Agentic project logo, linking to the project website.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/novu/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Centering Project Description in HTML\nDESCRIPTION: This HTML snippet centers a brief description of the Agentic project using italics.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/apollo/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Centering Project Description in HTML\nDESCRIPTION: This HTML snippet centers a brief description of the Agentic project, emphasizing its compatibility with LLMs and TypeScript AI SDKs.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/novu/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Description\nDESCRIPTION: HTML markup for displaying the centered project description italicized.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/mcp/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Header with Logo\nDESCRIPTION: HTML markup for displaying the project logo, description and status badges in a centered layout.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/brave-search/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml\"><img alt=\"Build Status\" src=\"https://github.com/transitive-bullshit/agentic/actions/workflows/main.yml/badge.svg\" /></a>\n  <a href=\"https://www.npmjs.com/package/@agentic/stdlib\"><img alt=\"NPM\" src=\"https://img.shields.io/npm/v/@agentic/stdlib.svg\" /></a>\n  <a href=\"https://github.com/transitive-bullshit/agentic/blob/main/license\"><img alt=\"MIT License\" src=\"https://img.shields.io/badge/license-MIT-blue\" /></a>\n  <a href=\"https://prettier.io\"><img alt=\"Prettier Code Formatting\" src=\"https://img.shields.io/badge/code_style-prettier-brightgreen.svg\" /></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Description in HTML\nDESCRIPTION: This HTML snippet centers and displays the project's description as emphasized text.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/airtable/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Agentic Project Header in HTML\nDESCRIPTION: This HTML snippet creates a centered header for the Agentic project, including the project logo and a brief description.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/perigon/readme.md#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <a href=\"https://agentic.so\">\n    <img alt=\"Agentic\" src=\"https://raw.githubusercontent.com/transitive-bullshit/agentic/main/docs/media/agentic-header.jpg\" width=\"308\">\n  </a>\n</p>\n\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Project Description\nDESCRIPTION: Centers and displays the main project description as emphasized text.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/midjourney/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Displaying Project Description in HTML\nDESCRIPTION: This HTML snippet shows a centered, italicized description of the Agentic project.\nSOURCE: https://github.com/transitive-bullshit/agentic/blob/main/packages/weather/readme.md#2025-04-11_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n  <em>AI agent stdlib that works with any LLM and TypeScript AI SDK.</em>\n</p>\n```"
  }
]
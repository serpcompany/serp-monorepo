[
  {
    "owner": "pgvector",
    "repo": "pgvector-elixir",
    "content": "TITLE: Adding pgvector Dependency in Elixir Mix File\nDESCRIPTION: Instructions for adding the pgvector dependency to an Elixir project's mix.exs file.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\n{:pgvector, \"~> 0.3.0\"}\n```\n\n----------------------------------------\n\nTITLE: Creating Vector Extension Migration in Elixir\nDESCRIPTION: Ecto migration code to create the vector extension in PostgreSQL.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule MyApp.Repo.Migrations.CreateVectorExtension do\n  use Ecto.Migration\n\n  def up do\n    execute \"CREATE EXTENSION IF NOT EXISTS vector\"\n  end\n\n  def down do\n    execute \"DROP EXTENSION vector\"\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Postgrex Types for pgvector in Elixir\nDESCRIPTION: Code to define custom Postgrex types including pgvector extensions for use with Ecto.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\nPostgrex.Types.define(MyApp.PostgrexTypes, Pgvector.extensions() ++ Ecto.Adapters.Postgres.extensions(), [])\n```\n\n----------------------------------------\n\nTITLE: Querying Nearest Neighbors with Ecto\nDESCRIPTION: Example of querying for nearest neighbors using Ecto and pgvector.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_7\n\nLANGUAGE: elixir\nCODE:\n```\nimport Ecto.Query\nimport Pgvector.Ecto.Query\n\nRepo.all(from i in Item, order_by: l2_distance(i.embedding, ^Pgvector.new([1, 2, 3])), limit: 5)\n```\n\n----------------------------------------\n\nTITLE: Configuring Ecto Repo with Custom Postgrex Types\nDESCRIPTION: Configuration code to set custom Postgrex types for an Ecto repository.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nconfig :my_app, MyApp.Repo, types: MyApp.PostgrexTypes\n```\n\n----------------------------------------\n\nTITLE: Adding Vector Column in Ecto Migration\nDESCRIPTION: Example of adding a vector column in an Ecto migration.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\ncreate table(:items) do\n  add :embedding, :vector, size: 3\nend\n```\n\n----------------------------------------\n\nTITLE: Inserting Vector Data with Ecto\nDESCRIPTION: Example of inserting a vector into the database using Ecto.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\nalias MyApp.{Repo, Item}\n\nRepo.insert(%Item{embedding: [1, 2, 3]})\n```\n\n----------------------------------------\n\nTITLE: Defining Vector Field in Ecto Schema\nDESCRIPTION: Example of defining a vector field in an Ecto schema.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\nschema \"items\" do\n  field :embedding, Pgvector.Ecto.Vector\nend\n```\n\n----------------------------------------\n\nTITLE: Creating Vector from List in Elixir\nDESCRIPTION: Example of creating a pgvector vector from a list in Elixir.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_10\n\nLANGUAGE: elixir\nCODE:\n```\nvec = Pgvector.new([1, 2, 3])\n```\n\n----------------------------------------\n\nTITLE: Creating Vector from Nx Tensor in Elixir\nDESCRIPTION: Example of creating a pgvector vector from an Nx tensor in Elixir.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_11\n\nLANGUAGE: elixir\nCODE:\n```\nvec = Nx.tensor([1.0, 2.0, 3.0]) |> Pgvector.new()\n```\n\n----------------------------------------\n\nTITLE: Creating Approximate Index for Vector Column\nDESCRIPTION: Example of creating an approximate index for a vector column in a migration.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_8\n\nLANGUAGE: elixir\nCODE:\n```\ncreate index(\"items\", [\"embedding vector_l2_ops\"], using: :hnsw)\n# or\ncreate index(\"items\", [\"embedding vector_l2_ops\"], using: :ivfflat, options: \"lists = 100\")\n```\n\n----------------------------------------\n\nTITLE: Registering pgvector Extension with Postgrex\nDESCRIPTION: Code to register the pgvector extension with Postgrex for direct database operations.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_9\n\nLANGUAGE: elixir\nCODE:\n```\nPostgrex.Types.define(MyApp.PostgrexTypes, Pgvector.extensions(), [])\n```\n\n----------------------------------------\n\nTITLE: Creating Sparse Vector in Elixir\nDESCRIPTION: Example of creating a sparse vector from a map of non-zero elements in Elixir.\nSOURCE: https://github.com/pgvector/pgvector-elixir/blob/master/README.md#2025-04-18_snippet_12\n\nLANGUAGE: elixir\nCODE:\n```\nelements = %{0 => 1.0, 2 => 2.0, 4 => 3.0}\nvec = Pgvector.SparseVector.new(elements, 6)\n```"
  }
]
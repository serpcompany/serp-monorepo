[
  {
    "owner": "theoplayer",
    "repo": "react-native-theoplayer-ui",
    "content": "TITLE: Creating Custom THEOplayer UI Layout\nDESCRIPTION: Comprehensive example of creating a custom UI layout with playback controls, ad handling, and various control components.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/doc/getting-started.md#2025-04-16_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport default function App() {\n  const [player, setPlayer] = useState<THEOplayer | undefined>(undefined);\n  const onPlayerReady = (player: THEOplayer) => {\n    setPlayer(player);\n  };\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <THEOplayerView config={playerConfig} onPlayerReady={onPlayerReady}>\n        {player !== undefined && (\n          <UiContainer\n            theme={DEFAULT_THEOPLAYER_THEME}\n            player={player}\n            behind={<CenteredDelayedActivityIndicator size={50} />}\n            center={<CenteredControlBar\n              left={<SkipButton skip={-10}/>}\n              middle={<PlayButton/>}\n              right={<SkipButton skip={30}/>}\n            />}\n            bottom={<>\n              <ControlBar>\n                <SeekBar />\n              </ControlBar>\n              <ControlBar>\n                <MuteButton />\n                <TimeLabel showDuration={true} />\n                <Spacer />\n                <FullscreenButton />\n              </ControlBar>\n            </>}\n            adTop={<ControlBar>\n              <AdClickThroughButton />\n            </ControlBar>}\n            adCenter={<CenteredControlBar middle={<PlayButton />} />}\n            adBottom={<>\n              <ControlBar style={{ justifyContent: 'flex-start' }}>\n                <AdDisplay />\n                <AdCountdown />\n                <Spacer />\n                <AdSkipButton />\n              </ControlBar>\n              <ControlBar>\n                <MuteButton />\n                <SeekBar />\n              </ControlBar>\n            </>}\n          />\n        )}\n      </THEOplayerView>\n    </View>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic THEOplayer Default UI\nDESCRIPTION: Basic implementation of THEOplayerDefaultUi component with essential configuration and event handling.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/doc/getting-started.md#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst App = () => {\n  return (\n    <THEOplayerDefaultUi\n      style={StyleSheet.absoluteFill}\n      config={playerConfig}\n      onPlayerReady={onPlayerReady}\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Customizing THEOplayer UI with Additional Components\nDESCRIPTION: Example of adding custom components and built-in components to the THEOplayer UI control bars.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/doc/getting-started.md#2025-04-16_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst App = () => {\n  return (\n    <THEOplayerDefaultUi\n      style={StyleSheet.absoluteFill}\n      config={playerConfig}\n      bottomSlot={<PipButton/>}\n      topSlot={<MyCustomComponent/>}\n    />\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Installing THEOplayer UI Dependencies with NPM\nDESCRIPTION: Command to install required packages for THEOplayer UI implementation including the core UI package, player package, and SVG support.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/doc/getting-started.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install \\\n  @theoplayer/react-native-ui \\\n  react-native-theoplayer \\\n  react-native-svg\n```\n\n----------------------------------------\n\nTITLE: Configuring React Native Dependencies\nDESCRIPTION: Configuration setup in react-native.config.js to properly link native dependencies for Google Cast and SVG support.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/doc/getting-started.md#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nmodule.exports = {\n  dependencies: {\n    'react-native-google-cast': {},\n    'react-native-svg': {},\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Starting Metro Server for React Native Project\nDESCRIPTION: Commands to start the Metro JavaScript bundler for a React Native project using either npm or Yarn package managers.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/example/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm start\n\n# OR using Yarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running React Native iOS Application\nDESCRIPTION: Commands to start the iOS application for a React Native project using either npm or Yarn package managers.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/example/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run ios\n\n# OR using Yarn\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Running React Native Android Application\nDESCRIPTION: Commands to start the Android application for a React Native project using either npm or Yarn package managers.\nSOURCE: https://github.com/THEOplayer/react-native-theoplayer-ui/blob/develop/example/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# using npm\nnpm run android\n\n# OR using Yarn\nyarn android\n```"
  }
]
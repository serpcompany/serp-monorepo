[
  {
    "owner": "openai",
    "repo": "openai-go",
    "content": "TITLE: Generating and Manipulating Images with OpenAI Go Client\nDESCRIPTION: These methods allow for image generation, variation creation, and editing using the OpenAI API. They take various parameters and return an ImagesResponse or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\nclient.Images.NewVariation(ctx context.Context, body openai.ImageNewVariationParams) (openai.ImagesResponse, error)\nclient.Images.Edit(ctx context.Context, body openai.ImageEditParams) (openai.ImagesResponse, error)\nclient.Images.Generate(ctx context.Context, body openai.ImageGenerateParams) (openai.ImagesResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Error Handling in OpenAI Go SDK\nDESCRIPTION: Demonstrates proper error handling using the errors.As pattern with custom OpenAI error types.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: go\nCODE:\n```\n_, err := client.FineTuning.Jobs.New(context.TODO(), openai.FineTuningJobNewParams{\n\tModel:        openai.FineTuningJobNewParamsModelBabbage002,\n\tTrainingFile: \"file-abc123\",\n})\nif err != nil {\n\tvar apierr *openai.Error\n\tif errors.As(err, &apierr) {\n\t\tprintln(string(apierr.DumpRequest(true)))  // Prints the serialized HTTP request\n\t\tprintln(string(apierr.DumpResponse(true))) // Prints the serialized HTTP response\n\t}\n\tpanic(err.Error()) // GET \"/fine_tuning/jobs\": 400 Bad Request { ... }\n}\n```\n\n----------------------------------------\n\nTITLE: Pagination Implementation in OpenAI Go SDK\nDESCRIPTION: Shows two approaches to handle pagination: auto-paging iteration and manual page handling.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: go\nCODE:\n```\niter := client.FineTuning.Jobs.ListAutoPaging(context.TODO(), openai.FineTuningJobListParams{\n\tLimit: openai.Int(20),\n})\n// Automatically fetches more pages as needed.\nfor iter.Next() {\n\tfineTuningJob := iter.Current()\n\tfmt.Printf(\"%+v\\n\", fineTuningJob)\n}\nif err := iter.Err(); err != nil {\n\tpanic(err.Error())\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Chat Completion in Go\nDESCRIPTION: This method creates a new chat completion using the OpenAI API. It takes a context and ChatCompletionNewParams as input and returns a ChatCompletion object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.New(ctx context.Context, body openai.ChatCompletionNewParams) (openai.ChatCompletion, error)\n```\n\n----------------------------------------\n\nTITLE: Middleware Implementation in OpenAI Go SDK\nDESCRIPTION: Demonstrates how to implement middleware for request logging and customization of the request pipeline.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nfunc Logger(req *http.Request, next option.MiddlewareNext) (res *http.Response, err error) {\n\t// Before the request\n\tstart := time.Now()\n\tLogReq(req)\n\n\t// Forward the request to the next handler\n\tres, err = next(req)\n\n\t// Handle stuff after the request\n\tend := time.Now()\n\tLogRes(res, err, start - end)\n\n    return res, err\n}\n\nclient := openai.NewClient(\n\toption.WithMiddleware(Logger),\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Retries in OpenAI Go SDK\nDESCRIPTION: Shows how to configure retry behavior for API requests, both globally and per-request, with exponential backoff for certain error types.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n// Configure the default for all requests:\nclient := openai.NewClient(\n\toption.WithMaxRetries(0), // default is 2\n)\n\n// Override per-request:\nclient.Chat.Completions.New(\n\tcontext.TODO(),\n\topenai.ChatCompletionNewParams{\n\t\tMessages: []openai.ChatCompletionMessageParamUnion{{\n\t\t\tOfUser: &openai.ChatCompletionUserMessageParam{\n\t\t\t\tContent: openai.ChatCompletionUserMessageParamContentUnion{\n\t\t\t\t\tOfString: openai.String(\"How can I get the name of the current day in JavaScript?\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}},\n\t\tModel: shared.ChatModelO3Mini,\n\t},\n\toption.WithMaxRetries(5),\n)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Chat Completion in Go\nDESCRIPTION: This method retrieves an existing chat completion by its ID. It takes a context and completion ID as input and returns a ChatCompletion object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.Get(ctx context.Context, completionID string) (openai.ChatCompletion, error)\n```\n\n----------------------------------------\n\nTITLE: Creating Completions with OpenAI Go Client\nDESCRIPTION: Method for creating completions using the OpenAI API. Takes a context and CompletionNewParams body to generate text completions, returning a Completion object and any error encountered.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nclient.Completions.New(ctx context.Context, body openai.CompletionNewParams) (openai.Completion, error)\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Response Data in OpenAI Go SDK\nDESCRIPTION: Demonstrates how to access raw HTTP response data including headers and status codes using the WithResponseInto option.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n// Create a variable to store the HTTP response\nvar response *http.Response\nchatCompletion, err := client.Chat.Completions.New(\n\tcontext.TODO(),\n\topenai.ChatCompletionNewParams{\n\t\tMessages: []openai.ChatCompletionMessageParamUnion{{\n\t\t\tOfUser: &openai.ChatCompletionUserMessageParam{\n\t\t\t\tContent: openai.ChatCompletionUserMessageParamContentUnion{\n\t\t\t\t\tOfString: openai.String(\"Say this is a test\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}},\n\t\tModel: shared.ChatModelO3Mini,\n\t},\n\toption.WithResponseInto(&response),\n)\nif err != nil {\n\t// handle error\n}\nfmt.Printf(\"%+v\\n\", chatCompletion)\n\nfmt.Printf(\"Status Code: %d\\n\", response.StatusCode)\nfmt.Printf(\"Headers: %+#v\\n\", response.Header)\n```\n\n----------------------------------------\n\nTITLE: File Upload Examples in OpenAI Go SDK\nDESCRIPTION: Demonstrates different methods of file uploads using the OpenAI Go SDK, including system files, string content, and custom file metadata.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: go\nCODE:\n```\n// A file from the file system\nfile, err := os.Open(\"input.jsonl\")\nopenai.FileNewParams{\n\tFile:    file,\n\tPurpose: openai.FilePurposeFineTune,\n}\n\n// A file from a string\nopenai.FileNewParams{\n\tFile:    strings.NewReader(\"my file contents\"),\n\tPurpose: openai.FilePurposeFineTune,\n}\n\n// With a custom filename and contentType\nopenai.FileNewParams{\n\tFile:    openai.File(strings.NewReader(`{\"hello\": \"foo\"}`), \"file.go\", \"application/json\"),\n\tPurpose: openai.FilePurposeFineTune,\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Request Implementation in OpenAI Go SDK\nDESCRIPTION: Shows how to make custom requests to undocumented endpoints and handle undocumented parameters and response properties.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nvar (\n    // params can be an io.Reader, a []byte, an encoding/json serializable object,\n    // or a \"…Params\" struct defined in this library.\n    params map[string]interface{}\n\n    // result can be an []byte, *http.Response, a encoding/json deserializable object,\n    // or a model defined in this library.\n    result *http.Response\n)\nerr := client.Post(context.Background(), \"/unspecified\", params, &result)\nif err != nil {\n    …\n}\n```\n\n----------------------------------------\n\nTITLE: Submitting Tool Outputs for Thread Run in OpenAI Go Client\nDESCRIPTION: Submits the outputs from tool calls back to a run that requires action. This is used when the assistant has requested external tools to be called, and the results need to be provided to continue execution.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_48\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.SubmitToolOutputs(ctx context.Context, threadID string, runID string, body openai.BetaThreadRunSubmitToolOutputsParams) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Timeout Configuration in OpenAI Go SDK\nDESCRIPTION: Shows how to configure request timeouts using context and request options.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nctx, cancel := context.WithTimeout(context.Background(), 5*time.Minute)\ndefer cancel()\nclient.Chat.Completions.New(\n\tctx,\n\topenai.ChatCompletionNewParams{\n\t\tMessages: []openai.ChatCompletionMessageParamUnion{{\n\t\t\tOfUser: &openai.ChatCompletionUserMessageParam{\n\t\t\t\tContent: openai.ChatCompletionUserMessageParamContentUnion{\n\t\t\t\t\tOfString: openai.String(\"How can I list all files in a directory using Python?\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}},\n\t\tModel: shared.ChatModelO3Mini,\n\t},\n\t// This sets the per-retry timeout\n\toption.WithRequestTimeout(20*time.Second),\n)\n```\n\n----------------------------------------\n\nTITLE: Azure OpenAI Integration in OpenAI Go SDK\nDESCRIPTION: Shows how to configure the OpenAI Go SDK for use with Microsoft Azure OpenAI services, including authentication setup.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_11\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\"\n\t\"github.com/openai/openai-go\"\n\t\"github.com/openai/openai-go/azure\"\n)\n\nfunc main() {\n\tconst azureOpenAIEndpoint = \"https://<azure-openai-resource>.openai.azure.com\"\n\n\t// The latest API versions, including previews, can be found here:\n\t// ttps://learn.microsoft.com/en-us/azure/ai-services/openai/reference#rest-api-versionng\n\tconst azureOpenAIAPIVersion = \"2024-06-01\"\n\n\ttokenCredential, err := azidentity.NewDefaultAzureCredential(nil)\n\n\tif err != nil {\n\t\tfmt.Printf(\"Failed to create the DefaultAzureCredential: %s\", err)\n\t\tos.Exit(1)\n\t}\n\n\tclient := openai.NewClient(\n\t\tazure.WithEndpoint(azureOpenAIEndpoint, azureOpenAIAPIVersion),\n\n\t\t// Choose between authenticating using a TokenCredential or an API Key\n\t\tazure.WithTokenCredential(tokenCredential),\n\t\t// or azure.WithAPIKey(azureOpenAIAPIKey),\n\t)\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Files with OpenAI Go Client\nDESCRIPTION: These methods allow for file operations such as creating, retrieving, listing, and deleting files. They interact with the OpenAI API's file management system.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\nclient.Files.New(ctx context.Context, body openai.FileNewParams) (openai.FileObject, error)\nclient.Files.Get(ctx context.Context, fileID string) (openai.FileObject, error)\nclient.Files.List(ctx context.Context, query openai.FileListParams) (pagination.CursorPage[openai.FileObject], error)\nclient.Files.Delete(ctx context.Context, fileID string) (openai.FileDeleted, error)\nclient.Files.Content(ctx context.Context, fileID string) (http.Response, error)\n```\n\n----------------------------------------\n\nTITLE: Handling Request Fields in OpenAI Go SDK\nDESCRIPTION: Demonstrates how to work with required and optional fields in request parameters, including handling null values and extra fields.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nparams := openai.ExampleParams{\n\tID:          \"id_xxx\",                // required property\n\tName:        openai.String(\"...\"),    // optional property\n\tDescription: param.NullOpt[string](), // explicit null property\n\n\tPoint: openai.Point{\n\t\tX: 0,             // required field will serialize as 0\n\t\tY: openai.Int(1), // optional field will serialize as 1\n\t\t// ... omitted non-required fields will not be serialized\n\t},\n\n\tOrigin: openai.Origin{}, // the zero value of [Origin] is considered omitted\n}\n\n// In cases where the API specifies a given type,\n// but you want to send something else, use [WithExtraFields]:\nparams.WithExtraFields(map[string]any{\n\t\"x\": 0.01, // send \"x\" as a float instead of int\n})\n\n// Send a number instead of an object\ncustom := param.OverrideObj[openai.FooParams](12)\n```\n\n----------------------------------------\n\nTITLE: Creating Fine-Tuning Job with OpenAI Go API\nDESCRIPTION: This method initiates a new fine-tuning job using the OpenAI API. It requires a context and FineTuningJobNewParams, returning a FineTuningJob object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_16\n\nLANGUAGE: Go\nCODE:\n```\nclient.FineTuning.Jobs.New(ctx context.Context, body openai.FineTuningJobNewParams) (openai.FineTuningJob, error)\n```\n\n----------------------------------------\n\nTITLE: Creating Embeddings with OpenAI Go Client\nDESCRIPTION: This method creates new embeddings using the OpenAI API. It takes a context and EmbeddingNewParams as input and returns a CreateEmbeddingResponse or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\nclient.Embeddings.New(ctx context.Context, body openai.EmbeddingNewParams) (openai.CreateEmbeddingResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Creating Content Moderation Request with OpenAI Go API\nDESCRIPTION: This method sends a new content moderation request to the OpenAI API. It accepts a context and ModerationNewParams, returning a ModerationNewResponse or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_12\n\nLANGUAGE: Go\nCODE:\n```\nclient.Moderations.New(ctx context.Context, body openai.ModerationNewParams) (openai.ModerationNewResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Available Models with OpenAI Go API\nDESCRIPTION: This method retrieves a list of available AI models from the OpenAI API. It requires only a context and returns a paginated list of Model objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_14\n\nLANGUAGE: Go\nCODE:\n```\nclient.Models.List(ctx context.Context) (pagination.Page[openai.Model], error)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Assistant in Go\nDESCRIPTION: Creates a new assistant using the OpenAI API. Requires a context and BetaAssistantNewParams. Returns an Assistant object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_33\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Assistants.New(ctx context.Context, body openai.BetaAssistantNewParams) (openai.Assistant, error)\n```\n\n----------------------------------------\n\nTITLE: Audio Transcription and Translation with OpenAI Go Client\nDESCRIPTION: These methods provide audio transcription and translation services using the OpenAI API. They take audio files as input and return transcriptions or translations.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\nclient.Audio.Transcriptions.New(ctx context.Context, body openai.AudioTranscriptionNewParams) (Transcription, error)\nclient.Audio.Translations.New(ctx context.Context, body openai.AudioTranslationNewParams) (Translation, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Assistant in Go\nDESCRIPTION: Retrieves an existing assistant by its ID. Requires a context and the assistant's ID. Returns an Assistant object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_34\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Assistants.Get(ctx context.Context, assistantID string) (openai.Assistant, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Model Information with OpenAI Go API\nDESCRIPTION: This method fetches information about a specific AI model from the OpenAI API. It takes a context and model name as input, returning a Model object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_13\n\nLANGUAGE: Go\nCODE:\n```\nclient.Models.Get(ctx context.Context, model string) (openai.Model, error)\n```\n\n----------------------------------------\n\nTITLE: Updating an Assistant in Go\nDESCRIPTION: Updates an existing assistant. Requires a context, the assistant's ID, and BetaAssistantUpdateParams. Returns the updated Assistant object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_35\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Assistants.Update(ctx context.Context, assistantID string, body openai.BetaAssistantUpdateParams) (openai.Assistant, error)\n```\n\n----------------------------------------\n\nTITLE: Handling Response Objects in OpenAI Go SDK\nDESCRIPTION: Illustrates how to work with response objects, including handling null values and accessing extra fields.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntype Animal struct {\n\tName   string `json:\"name,nullable\"`\n\tOwners int    `json:\"owners\"`\n\tAge    int    `json:\"age\"`\n\tJSON   struct {\n\t\tName  resp.Field\n\t\tOwner resp.Field\n\t\tAge   resp.Field\n\t} `json:\"-\"`\n}\n\nvar res Animal\njson.Unmarshal([]byte(`{\"name\": null, \"owners\": 0}`), &res)\n\n// Use the IsPresent() method to handle optional fields\nres.Owners                  // 0\nres.JSON.Owners.IsPresent() // true\nres.JSON.Owners.Raw()       // \"0\"\n\nres.Age                  // 0\nres.JSON.Age.IsPresent() // false\nres.JSON.Age.Raw()       // \"\"\n\n// Use the IsExplicitNull() method to differentiate null and omitted\nres.Name                       // \"\"\nres.JSON.Name.IsPresent()      // false\nres.JSON.Name.Raw()            // \"null\"\nres.JSON.Name.IsExplicitNull() // true\n```\n\n----------------------------------------\n\nTITLE: Listing Assistants in Go\nDESCRIPTION: Lists available assistants. Requires a context and BetaAssistantListParams. Returns a paginated list of Assistant objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_36\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Assistants.List(ctx context.Context, query openai.BetaAssistantListParams) (pagination.CursorPage[openai.Assistant], error)\n```\n\n----------------------------------------\n\nTITLE: Generating Speech with OpenAI Go API\nDESCRIPTION: This method creates a new speech synthesis request using the OpenAI API. It takes a context and AudioSpeechNewParams as input and returns an HTTP response or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\nclient.Audio.Speech.New(ctx context.Context, body openai.AudioSpeechNewParams) (http.Response, error)\n```\n\n----------------------------------------\n\nTITLE: Thread Creation - OpenAI Go SDK\nDESCRIPTION: Creates a new thread using the OpenAI API. Takes context and BetaThreadNewParams as input and returns a Thread object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_38\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.New(ctx context.Context, body openai.BetaThreadNewParams) (openai.Thread, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Thread Runs in OpenAI Go Client\nDESCRIPTION: Retrieves a paginated list of runs for a specific thread. This allows viewing the history of assistant executions within a conversation thread.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_46\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.List(ctx context.Context, threadID string, query openai.BetaThreadRunListParams) (pagination.CursorPage[openai.Run], error)\n```\n\n----------------------------------------\n\nTITLE: Thread Retrieval - OpenAI Go SDK\nDESCRIPTION: Retrieves an existing thread by ID from the OpenAI API. Takes context and thread ID as input and returns a Thread object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_39\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Get(ctx context.Context, threadID string) (openai.Thread, error)\n```\n\n----------------------------------------\n\nTITLE: Working with Request Unions in OpenAI Go SDK\nDESCRIPTION: Shows how to use union types in requests, including field access and mutation through getter methods.\nSOURCE: https://github.com/openai/openai-go/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n// Only one field can be non-zero, use param.IsOmitted() to check if a field is set\ntype AnimalUnionParam struct {\n\tOfCat *Cat `json:\",omitzero,inline`\n\tOfDog *Dog `json:\",omitzero,inline`\n}\n\nanimal := AnimalUnionParam{\n\tOfCat: &Cat{\n\t\tName: \"Whiskers\",\n\t\tOwner: PersonParam{\n\t\t\tAddress: AddressParam{Street: \"3333 Coyote Hill Rd\", Zip: 0},\n\t\t},\n\t},\n}\n\n// Mutating a field\nif address := animal.GetOwner().GetAddress(); address != nil {\n\taddress.ZipCode = 94304\n}\n```\n\n----------------------------------------\n\nTITLE: Thread Update - OpenAI Go SDK\nDESCRIPTION: Updates an existing thread using the OpenAI API. Takes context, thread ID, and BetaThreadUpdateParams as input and returns updated Thread object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_40\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Update(ctx context.Context, threadID string, body openai.BetaThreadUpdateParams) (openai.Thread, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Fine-Tuning Job Information with OpenAI Go API\nDESCRIPTION: This method fetches information about a specific fine-tuning job from the OpenAI API. It takes a context and job ID as input, returning a FineTuningJob object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_17\n\nLANGUAGE: Go\nCODE:\n```\nclient.FineTuning.Jobs.Get(ctx context.Context, fineTuningJobID string) (openai.FineTuningJob, error)\n```\n\n----------------------------------------\n\nTITLE: Thread Creation with Run - OpenAI Go SDK\nDESCRIPTION: Creates a new thread and immediately starts a run using the OpenAI API. Takes context and BetaThreadNewAndRunParams as input and returns a Run object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_42\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.NewAndRun(ctx context.Context, body openai.BetaThreadNewAndRunParams) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Migrating from interface-based unions to struct-based unions\nDESCRIPTION: Comparison of the old interface-based union approach versus the new struct-based approach for handling union types. This shows the definition, construction, and field access for both patterns.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype AnimalParam interface {\n\tImplAnimalParam()\n}\n\nfunc (Dog)         ImplAnimalParam() {}\nfunc (Cat)         ImplAnimalParam() {}\n```\n\nLANGUAGE: go\nCODE:\n```\ntype AnimalUnionParam struct {\n\tOfCat \t *Cat              `json:\",omitzero,inline`\n\tOfDog    *Dog              `json:\",omitzero,inline`\n}\n```\n\nLANGUAGE: go\nCODE:\n```\nvar dog AnimalParam = DogParam{\n\tName: \"spot\", ...\n}\nvar cat AnimalParam = CatParam{\n\tName: \"whiskers\", ...\n}\n```\n\nLANGUAGE: go\nCODE:\n```\ndog := AnimalUnionParam{\n\tOfDog: &DogParam{Name: \"spot\", ... },\n}\ncat := AnimalUnionParam{\n\tOfCat: &CatParam{Name: \"whiskers\", ... },\n}\n```\n\nLANGUAGE: go\nCODE:\n```\nvar name string\nswitch v := animal.(type) {\ncase Dog:\n\tname = v.Name\ncase Cat:\n\tname = v.Name\n}\n```\n\nLANGUAGE: go\nCODE:\n```\n// Accessing fields\nvar name *string = animal.GetName()\n```\n\n----------------------------------------\n\nTITLE: Creating New Thread Runs in OpenAI Go Client\nDESCRIPTION: Creates a new run for a specified thread. This method starts the execution of an assistant within the context of a thread, taking parameters that define the run's behavior.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_43\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.New(ctx context.Context, threadID string, params openai.BetaThreadRunNewParams) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Fine-Tuning Jobs with OpenAI Go API\nDESCRIPTION: This method retrieves a list of fine-tuning jobs from the OpenAI API. It requires a context and FineTuningJobListParams, returning a paginated list of FineTuningJob objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_18\n\nLANGUAGE: Go\nCODE:\n```\nclient.FineTuning.Jobs.List(ctx context.Context, query openai.FineTuningJobListParams) (pagination.CursorPage[openai.FineTuningJob], error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Thread Run Information in OpenAI Go Client\nDESCRIPTION: Retrieves information about a specific run within a thread. This allows monitoring the status and progress of an assistant's execution.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_44\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.Get(ctx context.Context, threadID string, runID string) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Get Response - OpenAI Go Client\nDESCRIPTION: Retrieves a specific response by ID. Requires context, response ID and optional query parameters, returns a Response object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_60\n\nLANGUAGE: go\nCODE:\n```\nclient.Responses.Get(ctx context.Context, responseID string, query responses.ResponseGetParams) (responses.Response, error)\n```\n\n----------------------------------------\n\nTITLE: Updating Thread Run in OpenAI Go Client\nDESCRIPTION: Updates the parameters or configuration of an existing run. This allows modifying aspects of the run after it has been created.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_45\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.Update(ctx context.Context, threadID string, runID string, body openai.BetaThreadRunUpdateParams) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Message from a Thread with OpenAI Go API\nDESCRIPTION: Method for fetching a specific message by its ID from a thread. Requires both thread ID and message ID.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_52\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Messages.Get(ctx context.Context, threadID string, messageID string) (openai.Message, error)\n```\n\n----------------------------------------\n\nTITLE: Cancelling Thread Run in OpenAI Go Client\nDESCRIPTION: Cancels an in-progress run. This allows stopping the execution of an assistant when it's no longer needed or is taking too long.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_47\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Runs.Cancel(ctx context.Context, threadID string, runID string) (openai.Run, error)\n```\n\n----------------------------------------\n\nTITLE: Thread Deletion - OpenAI Go SDK\nDESCRIPTION: Deletes an existing thread using the OpenAI API. Takes context and thread ID as input and returns ThreadDeleted object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_41\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Delete(ctx context.Context, threadID string) (openai.ThreadDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Run Step in OpenAI Go SDK\nDESCRIPTION: This method retrieves a specific run step within a thread. It requires the thread ID, run ID, and step ID as parameters, along with optional query parameters.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_49\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Threads.Runs.Steps.Get(ctx context.Context, threadID string, runID string, stepID string, query openai.BetaThreadRunStepGetParams) (openai.RunStep, error)\n```\n\n----------------------------------------\n\nTITLE: Updating a Message in a Thread with OpenAI Go API\nDESCRIPTION: Method for updating an existing message in a thread. Requires thread ID, message ID, and update parameters.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_53\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Messages.Update(ctx context.Context, threadID string, messageID string, body openai.BetaThreadMessageUpdateParams) (openai.Message, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Run Steps in OpenAI Go SDK\nDESCRIPTION: This method lists all run steps within a specific thread and run. It requires the thread ID and run ID as parameters, along with optional query parameters for pagination.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_50\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Threads.Runs.Steps.List(ctx context.Context, threadID string, runID string, query openai.BetaThreadRunStepListParams) (pagination.CursorPage[openai.RunStep], error)\n```\n\n----------------------------------------\n\nTITLE: Updating a Chat Completion in Go\nDESCRIPTION: This method updates an existing chat completion. It takes a context, completion ID, and ChatCompletionUpdateParams as input and returns an updated ChatCompletion object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.Update(ctx context.Context, completionID string, body openai.ChatCompletionUpdateParams) (openai.ChatCompletion, error)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Message in a Thread with OpenAI Go API\nDESCRIPTION: Method for creating a new message in a specified thread. Requires a thread ID and message parameters to be provided.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_51\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Messages.New(ctx context.Context, threadID string, body openai.BetaThreadMessageNewParams) (openai.Message, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Chat Completions in Go\nDESCRIPTION: This method lists chat completions based on the provided query parameters. It returns a paginated list of ChatCompletion objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.List(ctx context.Context, query openai.ChatCompletionListParams) (pagination.CursorPage[openai.ChatCompletion], error)\n```\n\n----------------------------------------\n\nTITLE: Listing Messages in a Thread with OpenAI Go API\nDESCRIPTION: Method for retrieving a paginated list of messages from a thread. Supports query parameters for filtering and pagination.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_54\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Messages.List(ctx context.Context, threadID string, query openai.BetaThreadMessageListParams) (pagination.CursorPage[openai.Message], error)\n```\n\n----------------------------------------\n\nTITLE: Updating a Vector Store\nDESCRIPTION: Method to update an existing Vector Store by sending a POST request to /vector_stores/{vector_store_id}. Takes a context, the vector store ID, and VectorStoreUpdateParams as input and returns the updated VectorStore object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_27\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.Update(ctx context.Context, vectorStoreID string, body openai.VectorStoreUpdateParams) (openai.VectorStore, error)\n```\n\n----------------------------------------\n\nTITLE: Create New Response - OpenAI Go Client\nDESCRIPTION: Creates a new response using the OpenAI API. Takes a context and ResponseNewParams as input and returns a Response object or error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_59\n\nLANGUAGE: go\nCODE:\n```\nclient.Responses.New(ctx context.Context, body responses.ResponseNewParams) (responses.Response, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Vector Stores\nDESCRIPTION: Method to list Vector Stores by sending a GET request to /vector_stores. Takes a context and VectorStoreListParams for query parameters and returns a paginated list of VectorStore objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_28\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.List(ctx context.Context, query openai.VectorStoreListParams) (pagination.CursorPage[openai.VectorStore], error)\n```\n\n----------------------------------------\n\nTITLE: Delete Response - OpenAI Go Client\nDESCRIPTION: Deletes a specific response by ID. Takes context and response ID as input, returns an error if the operation fails.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_61\n\nLANGUAGE: go\nCODE:\n```\nclient.Responses.Delete(ctx context.Context, responseID string) error\n```\n\n----------------------------------------\n\nTITLE: Using Batch Service Methods in OpenAI Go Client\nDESCRIPTION: Methods for creating, retrieving, listing, and canceling batches using the OpenAI Go client. Includes New for creating batches, Get for retrieving a specific batch, List for paginated batch listing, and Cancel for stopping batch processing.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_56\n\nLANGUAGE: go\nCODE:\n```\nclient.Batches.New(ctx context.Context, body openai.BatchNewParams) (openai.Batch, error)\n```\n\nLANGUAGE: go\nCODE:\n```\nclient.Batches.Get(ctx context.Context, batchID string) (openai.Batch, error)\n```\n\nLANGUAGE: go\nCODE:\n```\nclient.Batches.List(ctx context.Context, query openai.BatchListParams) (pagination.CursorPage[openai.Batch], error)\n```\n\nLANGUAGE: go\nCODE:\n```\nclient.Batches.Cancel(ctx context.Context, batchID string) (openai.Batch, error)\n```\n\n----------------------------------------\n\nTITLE: Listing Chat Completion Messages in Go\nDESCRIPTION: This method lists messages for a specific chat completion. It takes a context, completion ID, and query parameters as input and returns a paginated list of ChatCompletionStoreMessage objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.Messages.List(ctx context.Context, completionID string, query openai.ChatCompletionMessageListParams) (pagination.CursorPage[openai.ChatCompletionStoreMessage], error)\n```\n\n----------------------------------------\n\nTITLE: Using Upload Service Methods in OpenAI Go Client\nDESCRIPTION: Methods for managing file uploads to OpenAI services, including creating new uploads, canceling uploads in progress, and marking uploads as complete. Each method returns an Upload object representing the upload's state.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_57\n\nLANGUAGE: go\nCODE:\n```\nclient.Uploads.New(ctx context.Context, body openai.UploadNewParams) (openai.Upload, error)\n```\n\nLANGUAGE: go\nCODE:\n```\nclient.Uploads.Cancel(ctx context.Context, uploadID string) (openai.Upload, error)\n```\n\nLANGUAGE: go\nCODE:\n```\nclient.Uploads.Complete(ctx context.Context, uploadID string, body openai.UploadCompleteParams) (openai.Upload, error)\n```\n\n----------------------------------------\n\nTITLE: Cancelling Fine-Tuning Job with OpenAI Go API\nDESCRIPTION: This method cancels a specific fine-tuning job using the OpenAI API. It takes a context and job ID as input, returning a FineTuningJob object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_19\n\nLANGUAGE: Go\nCODE:\n```\nclient.FineTuning.Jobs.Cancel(ctx context.Context, fineTuningJobID string) (openai.FineTuningJob, error)\n```\n\n----------------------------------------\n\nTITLE: List Input Items - OpenAI Go Client\nDESCRIPTION: Lists input items for a specific response. Takes context, response ID and pagination parameters, returns a paginated list of ResponseItemUnion objects.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_62\n\nLANGUAGE: go\nCODE:\n```\nclient.Responses.InputItems.List(ctx context.Context, responseID string, query responses.InputItemListParams) (pagination.CursorPage[responses.ResponseItemUnion], error)\n```\n\n----------------------------------------\n\nTITLE: Listing Fine-Tuning Job Events with OpenAI Go API\nDESCRIPTION: This method retrieves a list of events for a specific fine-tuning job from the OpenAI API. It requires a context, job ID, and FineTuningJobListEventsParams, returning a paginated list of FineTuningJobEvent objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_20\n\nLANGUAGE: Go\nCODE:\n```\nclient.FineTuning.Jobs.ListEvents(ctx context.Context, fineTuningJobID string, query openai.FineTuningJobListEventsParams) (pagination.CursorPage[openai.FineTuningJobEvent], error)\n```\n\n----------------------------------------\n\nTITLE: Updating null checking methods for response fields\nDESCRIPTION: Example showing how to update code that checks for the presence of optional fields in responses, replacing .IsNull() with .IsPresent() and other related methods.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n- if !resp.Foo.JSON.Bar.IsNull() {\n+ if resp.Foo.JSON.Bar.IsPresent() {\n    println(\"bar is present:\", resp.Foo.Bar)\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Fine-Tuning Job Checkpoints in Go\nDESCRIPTION: Method for retrieving a paginated list of checkpoints for a specific fine-tuning job. Takes a context, fine-tuning job ID, and query parameters, returning a cursor-paginated result of FineTuningJobCheckpoint objects.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_21\n\nLANGUAGE: go\nCODE:\n```\nclient.FineTuning.Jobs.Checkpoints.List(ctx context.Context, fineTuningJobID string, query openai.FineTuningJobCheckpointListParams) (pagination.CursorPage[openai.FineTuningJobCheckpoint], error)\n```\n\n----------------------------------------\n\nTITLE: Deleting an Assistant in Go\nDESCRIPTION: Deletes an existing assistant. Requires a context and the assistant's ID. Returns an AssistantDeleted object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_37\n\nLANGUAGE: Go\nCODE:\n```\nclient.Beta.Assistants.Delete(ctx context.Context, assistantID string) (openai.AssistantDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Vector Store using OpenAI Go Client\nDESCRIPTION: Method to create a new Vector Store by sending a POST request to /vector_stores endpoint. Takes a context and VectorStoreNewParams as input and returns a VectorStore object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_25\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.New(ctx context.Context, body openai.VectorStoreNewParams) (openai.VectorStore, error)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Chat Completion in Go\nDESCRIPTION: This method deletes a chat completion by its ID. It takes a context and completion ID as input and returns a ChatCompletionDeleted object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\nclient.Chat.Completions.Delete(ctx context.Context, completionID string) (openai.ChatCompletionDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Vector Store by ID\nDESCRIPTION: Method to get a specific Vector Store by sending a GET request to /vector_stores/{vector_store_id}. Takes a context and the vector store ID as parameters and returns the VectorStore object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_26\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.Get(ctx context.Context, vectorStoreID string) (openai.VectorStore, error)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Message from a Thread with OpenAI Go API\nDESCRIPTION: Method for deleting a specific message from a thread. Requires both thread ID and message ID.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_55\n\nLANGUAGE: go\nCODE:\n```\nclient.Beta.Threads.Messages.Delete(ctx context.Context, threadID string, messageID string) (openai.MessageDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Vector Store\nDESCRIPTION: Method to delete a Vector Store by sending a DELETE request to /vector_stores/{vector_store_id}. Takes a context and the vector store ID as parameters and returns a VectorStoreDeleted response or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_29\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.Delete(ctx context.Context, vectorStoreID string) (openai.VectorStoreDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Model with OpenAI Go API\nDESCRIPTION: This method deletes a specific AI model from the OpenAI API. It takes a context and model name as input, returning a ModelDeleted object or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_15\n\nLANGUAGE: Go\nCODE:\n```\nclient.Models.Delete(ctx context.Context, model string) (openai.ModelDeleted, error)\n```\n\n----------------------------------------\n\nTITLE: Searching a Vector Store\nDESCRIPTION: Method to search a Vector Store by sending a POST request to /vector_stores/{vector_store_id}/search. Takes a context, the vector store ID, and VectorStoreSearchParams as input and returns a paginated list of VectorStoreSearchResponse objects or an error.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_30\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.Search(ctx context.Context, vectorStoreID string, body openai.VectorStoreSearchParams) (pagination.Page[openai.VectorStoreSearchResponse], error)\n```\n\n----------------------------------------\n\nTITLE: Migrating param.Field constructor calls in request parameters\nDESCRIPTION: Example showing how to update code that constructs request parameters, removing openai.F(...) wrappers and adapting to the new structure. This covers various field types including primitives, arrays, objects, and string enums.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nfoo = FooParams{\n-    RequiredString: openai.String(\"hello\"),\n+    RequiredString: \"hello\",\n\n-    OptionalString: openai.String(\"hi\"),\n+    OptionalString: openai.String(\"hi\"),\n\n-    Array: openai.F([]BarParam{\n-        BarParam{Prop: ... }\n-    }),\n+    Array: []BarParam{\n+        BarParam{Prop: ... }\n+    },\n\n-    RequiredObject: openai.F(BarParam{ ... }),\n+    RequiredObject: BarParam{ ... },\n\n-    OptionalObject: openai.F(BarParam{ ... }),\n+    OptionalObject: BarParam{ ... },\n\n-    StringEnum: openai.F[BazEnum](\"baz-ok\"),\n+    StringEnum: \"baz-ok\",\n}\n```\n\n----------------------------------------\n\nTITLE: Vector Store Files API Methods\nDESCRIPTION: Core methods for managing individual vector store files including creation, retrieval, updates, listing, deletion and content access. Each method requires a vector store ID and appropriate parameters.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_31\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.Files.New(ctx context.Context, vectorStoreID string, body openai.VectorStoreFileNewParams) (openai.VectorStoreFile, error)\nclient.VectorStores.Files.Get(ctx context.Context, vectorStoreID string, fileID string) (openai.VectorStoreFile, error)\nclient.VectorStores.Files.Update(ctx context.Context, vectorStoreID string, fileID string, body openai.VectorStoreFileUpdateParams) (openai.VectorStoreFile, error)\nclient.VectorStores.Files.List(ctx context.Context, vectorStoreID string, query openai.VectorStoreFileListParams) (pagination.CursorPage[openai.VectorStoreFile], error)\nclient.VectorStores.Files.Delete(ctx context.Context, vectorStoreID string, fileID string) (openai.VectorStoreFileDeleted, error)\nclient.VectorStores.Files.Content(ctx context.Context, vectorStoreID string, fileID string) (pagination.Page[openai.VectorStoreFileContentResponse], error)\n```\n\n----------------------------------------\n\nTITLE: Managing Upload Parts in OpenAI Go Client\nDESCRIPTION: Method for creating new parts within an upload, useful for chunk-based file uploading. Takes an upload ID and part parameters to create a new segment of a multipart upload.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_58\n\nLANGUAGE: go\nCODE:\n```\nclient.Uploads.Parts.New(ctx context.Context, uploadID string, body openai.UploadPartNewParams) (openai.UploadPart, error)\n```\n\n----------------------------------------\n\nTITLE: Adding an example to OpenAI Go SDK\nDESCRIPTION: Go code template for adding a new example to the SDK's examples directory.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nfunc main() {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Vector Store File Batches API Methods\nDESCRIPTION: Methods for managing file batches in vector stores, including creating new batches, retrieving batch information, canceling batches, and listing files within a batch. Each operation requires a vector store ID and batch-specific parameters.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_32\n\nLANGUAGE: go\nCODE:\n```\nclient.VectorStores.FileBatches.New(ctx context.Context, vectorStoreID string, body openai.VectorStoreFileBatchNewParams) (openai.VectorStoreFileBatch, error)\nclient.VectorStores.FileBatches.Get(ctx context.Context, vectorStoreID string, batchID string) (openai.VectorStoreFileBatch, error)\nclient.VectorStores.FileBatches.Cancel(ctx context.Context, vectorStoreID string, batchID string) (openai.VectorStoreFileBatch, error)\nclient.VectorStores.FileBatches.ListFiles(ctx context.Context, vectorStoreID string, batchID string, query openai.VectorStoreFileBatchListFilesParams) (pagination.CursorPage[openai.VectorStoreFile], error)\n```\n\n----------------------------------------\n\nTITLE: Setting up mock server for OpenAI Go SDK tests\nDESCRIPTION: Shell commands to set up a mock server using Prism for running tests against the OpenAPI spec.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n$ npx prism mock path/to/your/openapi.yml\n```\n\n----------------------------------------\n\nTITLE: Updating field definitions in SDK struct declarations\nDESCRIPTION: Example showing how to update struct field declarations in the SDK, replacing param.Field types with native types and appropriate omitzero tags. This covers various field types and their json tag configurations.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_3\n\nLANGUAGE: go\nCODE:\n```\ntype FooParams struct {\n-    RequiredString param.Field[string]   `json:\"required_string,required\"`\n+    RequiredString string                `json:\"required_string,required\"`\n\n-    OptionalString param.Field[string]   `json:\"optional_string\"`\n+    OptionalString param.Opt[string]     `json:\"optional_string,omitzero\"`\n\n-    Array param.Field[[]BarParam]        `json\"array\"`\n+    Array []BarParam                     `json\"array,omitzero\"`\n\n-    Map param.Field[map[string]BarParam] `json\"map\"`\n+    Map map[string]BarParam              `json\"map,omitzero\"`\n\n-    RequiredObject param.Field[BarParam] `json:\"required_object,required\"`\n+    RequiredObject BarParam              `json:\"required_object,omitzero,required\"`\n\n-    OptionalObject param.Field[BarParam] `json:\"optional_object\"`\n+    OptionalObject BarParam              `json:\"optional_object,omitzero\"`\n\n-    StringEnum     param.Field[BazEnum]  `json:\"string_enum\"`\n+    StringEnum     BazEnum               `json:\"string_enum,omitzero\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Comparing serialization behavior between old and new SDK\nDESCRIPTION: Side-by-side comparison showing how the JSON serialization behavior differs between the old and new SDK, specifically demonstrating how required fields are always serialized in the new version even with zero values.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_1\n\nLANGUAGE: go\nCODE:\n```\n_ = FooParams{\n    Name: openai.String(\"Jerry\")\n}\n`{\"name\": \"Jerry\"}` // (after serialization)\n```\n\nLANGUAGE: go\nCODE:\n```\n_ = FooParams{\n    Name: openai.String(\"Jerry\")\n}\n`{\"name\": \"Jerry\", \"age\": 0}` // <== Notice the age field\n```\n\n----------------------------------------\n\nTITLE: Migrating from param.Field to omitzero in struct definitions\nDESCRIPTION: Example showing how to migrate from the old param.Field type with required/optional fields to the new struct approach with omitzero tag. This demonstrates how the serialization behavior changes, particularly for required primitive fields.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ntype FooParams struct {\n-        Age  param.Field[int64]  `json:\"age,required\"`\n-        Name param.Field[string] `json:\"name\"`\n+        Age  int64               `json:\"age,required\"` // <== Notice no omitzero\n+        Name param.Opt[string]   `json:\"name,omitzero\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating to new null value handling methods\nDESCRIPTION: Example showing how to update code that sends explicit null values, replacing param.Null[T]() with param.NullOpt[T]() and param.NullObj[T]() depending on the field type.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_5\n\nLANGUAGE: go\nCODE:\n```\n- var nullObj param.Field[BarParam] = param.Null[BarParam]()\n+ var nullObj BarParam              = param.NullObj[BarParam]()\n\n- var nullPrimitive param.Field[int64] = param.Null[int64]()\n+ var nullPrimitive param.Opt[int64]   = param.NullOpt[int64]()\n```\n\n----------------------------------------\n\nTITLE: Updating access to raw JSON in responses\nDESCRIPTION: Example showing how to update code that accesses the raw JSON of a response, moving from calling .RawJSON() on the .JSON property to calling it on the parent.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_8\n\nLANGUAGE: go\nCODE:\n```\n- resp.Foo.JSON.RawJSON()\n+ resp.Foo.RawJSON()\n```\n\n----------------------------------------\n\nTITLE: Setting up OpenAI Go SDK environment\nDESCRIPTION: Shell commands to set up the repository by installing dependencies and building the SDK.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ ./scripts/bootstrap\n$ ./scripts/lint\n```\n\n----------------------------------------\n\nTITLE: Creating New Checkpoint Permissions in Go\nDESCRIPTION: Method for creating new permissions for a fine-tuning checkpoint. Requires context, checkpoint identifier, and permission parameters, returning a paginated response of new permissions.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_22\n\nLANGUAGE: go\nCODE:\n```\nclient.FineTuning.Checkpoints.Permissions.New(ctx context.Context, fineTunedModelCheckpoint string, body openai.FineTuningCheckpointPermissionNewParams) (pagination.Page[openai.FineTuningCheckpointPermissionNewResponse], error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Checkpoint Permissions in Go\nDESCRIPTION: Method for getting existing permissions for a fine-tuning checkpoint. Takes context, checkpoint identifier, and query parameters, returning the current permission configuration.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_23\n\nLANGUAGE: go\nCODE:\n```\nclient.FineTuning.Checkpoints.Permissions.Get(ctx context.Context, fineTunedModelCheckpoint string, query openai.FineTuningCheckpointPermissionGetParams) (openai.FineTuningCheckpointPermissionGetResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Deleting Checkpoint Permissions in Go\nDESCRIPTION: Method for removing permissions from a fine-tuning checkpoint. Requires context and checkpoint identifier, returning a deletion response object.\nSOURCE: https://github.com/openai/openai-go/blob/main/api.md#2025-04-22_snippet_24\n\nLANGUAGE: go\nCODE:\n```\nclient.FineTuning.Checkpoints.Permissions.Delete(ctx context.Context, fineTunedModelCheckpoint string) (openai.FineTuningCheckpointPermissionDeleteResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Replacing Raw with WithExtraField for custom values\nDESCRIPTION: Example showing how to migrate from using openai.Raw[T](any) to the new .WithExtraField(map[string]any) method for sending custom field values in requests.\nSOURCE: https://github.com/openai/openai-go/blob/main/MIGRATION.md#2025-04-22_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nfoo := FooParams{\n     A: param.String(\"hello\"),\n-    B: param.Raw[string](12) // sending `12` instead of a string\n}\n+ foo.WithExtraFields(map[string]any{\n+    \"B\": 12,\n+ })\n```\n\n----------------------------------------\n\nTITLE: Running an example in OpenAI Go SDK\nDESCRIPTION: Shell command to run a specific example from the SDK's examples directory.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ go run ./examples/<your-example>\n```\n\n----------------------------------------\n\nTITLE: Using local OpenAI Go SDK in another project\nDESCRIPTION: Shell command to modify go.mod file for using a local version of the SDK in another project.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n$ go mod edit -replace github.com/openai/openai-go=/path/to/openai-go\n```\n\n----------------------------------------\n\nTITLE: Running tests for OpenAI Go SDK\nDESCRIPTION: Shell command to run the test suite for the OpenAI Go SDK.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n$ ./scripts/test\n```\n\n----------------------------------------\n\nTITLE: Formatting OpenAI Go SDK code\nDESCRIPTION: Shell command to run the standard gofmt code formatter on the OpenAI Go SDK codebase.\nSOURCE: https://github.com/openai/openai-go/blob/main/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n$ ./scripts/format\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.1.0-beta.10\nDESCRIPTION: Changelog entry documenting internal CI changes in version 0.1.0-beta.10\nSOURCE: https://github.com/openai/openai-go/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.0-beta.10 (2025-04-14)\n\nFull Changelog: [v0.1.0-beta.9...v0.1.0-beta.10](https://github.com/openai/openai-go/compare/v0.1.0-beta.9...v0.1.0-beta.10)\n\n### Chores\n\n* **internal:** expand CI branch coverage ([#369](https://github.com/openai/openai-go/issues/369)) ([258dda8](https://github.com/openai/openai-go/commit/258dda8007a69b9c2720b225ee6d27474d676a93))\n* **internal:** reduce CI branch coverage ([a2f7c03](https://github.com/openai/openai-go/commit/a2f7c03eb984d98f29f908df103ea1743f2e3d9a))\n```"
  }
]
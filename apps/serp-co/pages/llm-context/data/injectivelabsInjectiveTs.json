[
  {
    "owner": "injectivelabs",
    "repo": "injective-ts",
    "content": "TITLE: Implementing Private Wallet Strategy for INJ Transfer\nDESCRIPTION: Example implementation showing how to set up a private wallet strategy and send 1 INJ token. Demonstrates wallet initialization, strategy configuration, and transaction broadcasting.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-private-key/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { PrivateKeyWalletStrategy } from '@injectivelabs/wallet-private-key';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.PrivateKey,\n  strategies: {\n    [Wallet.PrivateKey]: new PrivateKeyWalletStrategy({\n      chainId: ChainId.Mainnet,\n      privateKey: 'YOUR_PRIVATE_KEY'\n      ethereumOptions: {\n        ethereumChainId: EthereumChainId.Mainnet,\n      },\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Implementing Cosmos Wallet Strategy for Injective\nDESCRIPTION: Example of how to use the package to send 1 INJ token. It demonstrates setting up a wallet strategy with Keplr wallet, creating a message broadcaster, and sending a transaction on the Injective network.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmos/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { CosmosWalletStrategy } from '@injectivelabs/wallet-cosmos';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.Keplr,\n  strategies: {\n    [Wallet.Keplr]: new CosmosWalletStrategy({\n      chainId: ChainId.Mainnet\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Sending 1 INJ using EvmWalletStrategy in TypeScript\nDESCRIPTION: Example of how to use the EvmWalletStrategy to send 1 INJ on the Injective network. It demonstrates setting up the wallet strategy, creating a message broadcaster, and sending a transaction.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-evm/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { EvmWalletStrategy } from '@injectivelabs/wallet-evm';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.Metamask,\n  strategies: {\n    [Wallet.Metamask]: new EvmWalletStrategy({\n      chainId: ChainId.Mainnet,\n      ethereumOptions: {\n        ethereumChainId: EthereumChainId.Mainnet,\n      },\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Protocol TypeScript SDK\nDESCRIPTION: Command to install the @injectivelabs/sdk-ts package using yarn package manager. This package provides TypeScript support for building applications on the Injective chain.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/sdk-ts\n```\n\n----------------------------------------\n\nTITLE: Implementing Ledger Wallet Strategy for Injective Protocol\nDESCRIPTION: Example of using the LedgerLive strategy to send 1 INJ token. This snippet demonstrates how to set up the wallet strategy, create a message broadcaster, and execute a transaction using the Ledger wallet.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-ledger/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { LedgerLive  } from '@injectivelabs/wallet-ledger';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.Ledger,\n  strategies: {\n    [Wallet.Ledger]: new LedgerLive({\n      chainId: ChainId.Mainnet,\n      ethereumOptions: {\n        ethereumChainId: EthereumChainId.Mainnet,\n      },\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Initializing Wallet Strategy and Message Broadcaster in TypeScript\nDESCRIPTION: Example code for setting up a BaseWalletStrategy with a PrivateKeyWalletStrategy and creating a MsgBroadcaster. This demonstrates how to configure wallet strategies for use with Injective Protocol.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-core/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base'\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core'\nimport { PrivateKeyWalletStrategy } from '@injectivelabs/wallet-private-key'\n\nconst strategyArgs: WalletStrategyArguments = {} /** define the args */\nconst strategyEthArgs: ConcreteEthereumWalletStrategyArgs = {} /** if the wallet is an Ethereum wallet */\nconst strategies = {\n  [Wallet.PrivateKey]: new PrivateKeyWalletStrategy(strategyEthArgs)\n}\n\nexport const walletStrategy = new BaseWalletStrategy({...strategyArgs, strategies})\n\nconst broadcasterArgs: MsgBroadcasterOptions = {} /** define the broadcaster args */\nexport const msgBroadcaster = new MsgBroadcaster({...broadcasterArgs, walletStrategy})\n```\n\n----------------------------------------\n\nTITLE: Using MagicStrategy to send 1 INJ on Injective Protocol\nDESCRIPTION: This TypeScript code demonstrates how to use the MagicStrategy from @injectivelabs/wallet-magic package to send 1 INJ on the Injective Protocol. It includes setting up the wallet strategy, creating a message broadcaster, and sending a transaction.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-magic/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { MagicStrategy } from '@injectivelabs/wallet-magic';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.Magic,\n  strategies: {\n    [Wallet.Magic]: new MagicStrategy({\n      chainId: ChainId.Mainnet,\n      metadata: {\n        apiKey: 'YOUR_MAGIC_API_KEY'\n      }\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Implementing CW20 Address Validation in Injective SDK\nDESCRIPTION: Implementation of CW20 address validation functionality in the Injective SDK. This feature allows for validation of CW20 token contract addresses to ensure they're properly formatted.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- cw20 addr validation ([c4332e0](https://github.com/InjectiveLabs/injective-ts/commit/c4332e05cc63f0f5b3bc36797970571cf0347643))\n```\n\n----------------------------------------\n\nTITLE: Implementing Wallet Connect Strategy for Injective Protocol\nDESCRIPTION: Example of how to use the Wallet Connect strategy package to send 1 INJ token. It demonstrates setting up the wallet strategy, creating a message broadcaster, and sending a transaction.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-wallet-connect/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { WalletConnectStrategy } from '@injectivelabs/wallet-wallet-connect';\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.WalletConnect,\n  strategies: {\n    [Wallet.WalletConnect]: new WalletConnectStrategy({\n      chainId: ChainId.Mainnet,\n      metadata: {\n        projectId: 'YOUR_PROJECT_ID',\n      },\n      ethereumOptions: {\n        ethereumChainId: EthereumChainId.Mainnet,\n      },\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n  const injectiveAddress = 'someInjectiveAddress'\n\n  const message = MsgSend.fromJSON({\n    srcInjectiveAddress: injectiveAddress,\n    dstInjectiveAddress: injectiveAddress,\n    amount: {\n      amount: '1',\n      denom: 'inj',\n    },\n  })\n\n  return await msgBroadcaster.broadcast({ msgs: message })\n}\n\nconst result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Initializing WalletStrategy in TypeScript\nDESCRIPTION: Basic example showing how to import and instantiate the WalletStrategy class. The WalletStrategy constructor accepts configuration arguments to customize wallet behavior for Injective Protocol integration.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-strategy/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { WalletStrategy } from '@injectivelabs/wallet-strategy'\n\nconst walletStrategy = new WalletStrategy(args)\n```\n\n----------------------------------------\n\nTITLE: Using Cosmostation Wallet Strategy to send INJ tokens\nDESCRIPTION: This TypeScript code demonstrates how to use the Cosmostation Wallet Strategy to send 1 INJ token. It initializes the wallet strategy, creates a message broadcaster, and sends a transaction.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmostation/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { CosmostationWalletStrategy } from '@injectivelabs/wallet-cosmostation';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.Cosmostation,\n  strategies: {\n    [Wallet.Cosmostation]: new CosmostationWalletStrategy({\n      chainId: ChainId.Mainnet,\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Implementing Trezor Wallet Strategy for Injective Protocol\nDESCRIPTION: Example of how to use the @injectivelabs/wallet-trezor package to send 1 INJ. It demonstrates importing necessary modules, setting up wallet strategy, and broadcasting a transaction.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-trezor/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Wallet } from '@injectivelabs/wallet-base';\nimport { BaseWalletStrategy, MsgBroadcaster } from '@injectivelabs/wallet-core';\nimport { TrezorWalletStrategy } from '@injectivelabs/wallet-trezor';\n\n\nconst strategyArgs: WalletStrategyArguments = {\n  chainId: ChainId.Mainnet,\n  wallet: Wallet.TrezorBip32,\n  strategies: {\n    [Wallet.TrezorBip32]: new TrezorWalletStrategy({\n      chainId: ChainId.Mainnet,\n      ethereumOptions: {\n        ethereumChainId: EthereumChainId.Mainnet,\n      },\n    }),\n  },\n}\nconst walletStrategy = new BaseWalletStrategy(strategyArgs)\n\nconst msgBroadcaster = new MsgBroadcaster({\n  walletStrategy,\n  simulateTx: true,\n  network: Network.Mainnet,\n})\n\nconst sendTX = async () => {\n    const injectiveAddress = 'someInjectiveAddress'\n\n    const message = MsgSend.fromJSON({\n      srcInjectiveAddress: injectiveAddress,\n      dstInjectiveAddress: injectiveAddress,\n      amount: {\n        amount: '1',\n        denom: 'inj',\n      },\n    })\n\n    return await msgBroadcaster.broadcast({ msgs: message })\n  }\n\n  const result = await sendTX()\n```\n\n----------------------------------------\n\nTITLE: Feature: Multiple Amounts Support in MsgSend\nDESCRIPTION: Added support for multiple amounts in MsgSend operation. Commit 3294e7d.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- allow multiple amounts on Msgsend ([3294e7d](https://github.com/InjectiveLabs/injective-ts/commit/3294e7dc7422636c4dc1c47075d7c667256b6a36))\n```\n\n----------------------------------------\n\nTITLE: Improving EIP712 Implementation\nDESCRIPTION: Makes improvements to the EIP712 implementation in the Injective TypeScript SDK for better compatibility and functionality.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_48\n\nLANGUAGE: TypeScript\nCODE:\n```\neip712 improvements\n```\n\n----------------------------------------\n\nTITLE: Creating Transaction Function Definition in TypeScript\nDESCRIPTION: TypeScript interface definitions for transaction creation including CreateTransactionArgs for input parameters and CreateTransactionResult for the returned transaction data. The function handles message packaging, memo inclusion, fee specification, and signer details.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/src/core/tx/README.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport function createTransaction = (args: CreateTransactionArgs): CreateTransactionResult\n\n/** @type {CreateTransactionArgs} */\nexport interface CreateTransactionArgs {\n  message: MsgArg | MsgArg[] // the message that should be packed into the transaction\n  memo: string // the memo to include in the transaction\n  fee: StdFee // the fee to include in the transaction\n  pubKey: string // the pubKey of the signer of the transaction in base64\n  sequence: number // the sequence (nonce) of the signer of the transaction\n  accountNumber: number // the account number of the signer of the transaction\n  chainId: string // the chain id of the chain that the transaction is going to be broadcasted to\n}\n\n/** @type {CreateTransactionResult} */\nexport interface CreateTransactionResult {\n  txRaw: TxRaw // the Tx raw that was created\n  signDoc: SignDoc // the SignDoc that was created - used for signing of the transaction\n  signers: {\n    pubKey: string // the pubKey of the signer of the transaction in base64\n    sequence: number // the sequence (nonce) of the signer of the transaction\n    accountNumber: number // the account number of the signer of the transaction\n  }\n  bodyBytes: Uint8Array // the body bytes of the transaction\n  authInfoBytes: Uint8Array // the auth info bytes of the transaction\n  signBytes: Uint8Array // the sign bytes of the transaction (SignDoc serialized to binary)\n  signHashedBytes: Uint8Array // the sign bytes of the transaction (SignDoc serialized to binary) and hashed using keccak256\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgDeposit Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgDeposit message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_38\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgDeposit message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateDerivativeMarketOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateDerivativeMarketOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_35\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateDerivativeMarketOrder message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Staking MsgDelegate Message\nDESCRIPTION: Adds unit test coverage for the Cosmos staking MsgDelegate message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_30\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos staking MsgDelegate message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateSpotMarketOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateSpotMarketOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_37\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateSpotMarketOrder message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Gov MsgDeposit Message\nDESCRIPTION: Adds unit test coverage for the Cosmos governance MsgDeposit message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_27\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos gov MsgDeposit message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Bank MsgSend Message\nDESCRIPTION: Adds unit test coverage for the Cosmos bank MsgSend message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_25\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos bank MsgSend message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Gov MsgVote Message\nDESCRIPTION: Adds unit test coverage for the Cosmos governance MsgVote message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_28\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos gov MsgVote message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Insurance MsgUnderwrite Message\nDESCRIPTION: Adds unit test coverage for the Injective insurance MsgUnderwrite message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_44\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective insurance MsgUnderwrite message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Staking MsgBeginRedelegate Message\nDESCRIPTION: Adds unit test coverage for the Cosmos staking MsgBeginRedelegate message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_29\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos staking MsgBeginRedelegate message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for EIP712 Messages\nDESCRIPTION: This snippet represents a feature addition that implements unit test coverage for eip712 messages in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: None\nCODE:\n```\n\"- add unit test coverage for eip712 messages ([#75](https://github.com/InjectiveLabs/injective-ts/issues/75)) ([cf7e2fd](https://github.com/InjectiveLabs/injective-ts/commit/cf7e2fde727979fcf2187385d72b96efbed6d61a))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Transaction Broadcast Clients\nDESCRIPTION: Fixes issues related to transaction broadcast clients in the Injective TypeScript SDK to ensure proper transaction handling.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_49\n\nLANGUAGE: TypeScript\nCODE:\n```\ntx broadcast clients\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateBinaryOptionsMarketOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateBinaryOptionsMarketOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_33\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateBinaryOptionsMarketOrder message\n```\n\n----------------------------------------\n\nTITLE: Feature: Smart Contract Search Enhancement\nDESCRIPTION: Added smart contract search functionality. Commit 778ee05.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- sc search ([778ee05](https://github.com/InjectiveLabs/injective-ts/commit/778ee05b762ee476bf57500d4c582dd4a42a69d0))\n```\n\n----------------------------------------\n\nTITLE: Implementing Order History Stream\nDESCRIPTION: Implements an order history stream functionality in the Injective TypeScript SDK to allow real-time tracking of order updates.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_50\n\nLANGUAGE: TypeScript\nCODE:\n```\norder history stream\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgInstantSpotMarketLaunch Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgInstantSpotMarketLaunch message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_40\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgInstantSpotMarketLaunch message\n```\n\n----------------------------------------\n\nTITLE: Feature Addition Commit Entry\nDESCRIPTION: Commit hash reference for adding helper functions for transaction preparation.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n- helper functions for prepping a transaction ([3c9a806](https://github.com/InjectiveLabs/injective-ts/commit/3c9a8067f18ef0cbb37e2e09f2534245f35efb82))\n```\n\n----------------------------------------\n\nTITLE: Implementing INJ Name Resolution in Injective SDK\nDESCRIPTION: Addition of INJ name resolution feature to the Injective SDK. This feature likely provides the ability to resolve human-readable names to Injective addresses, similar to DNS for the Injective ecosystem.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- inj name resolution ([ce0ce62](https://github.com/InjectiveLabs/injective-ts/commit/ce0ce6281265dabfe1ceaddf90d5c7aecd3a671f))\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Insurance MsgCreateInsuranceFund Message\nDESCRIPTION: Adds unit test coverage for the Injective insurance MsgCreateInsuranceFund message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_42\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective insurance MsgCreateInsuranceFund message\n```\n\n----------------------------------------\n\nTITLE: Implementing Peggy Upgrade\nDESCRIPTION: This snippet represents a feature addition that implements a Peggy upgrade in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: None\nCODE:\n```\n\"- peggy upgrade ([b2e658f](https://github.com/InjectiveLabs/injective-ts/commit/b2e658f405dee42c62005c2cc623658068534878))\"\n```\n\n----------------------------------------\n\nTITLE: Initializing CosmosWalletStrategy in TypeScript\nDESCRIPTION: Example of how to import and initialize the CosmosWalletStrategy class from the @injectivelabs/wallet-cosmos-strategy package in TypeScript.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmos-strategy/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { CosmosWalletStrategy } from '@injectivelabs/wallet-cosmos-strategy'\n\nconst cosmosWalletStrategy = new CosmosWalletStrategy(args)\n```\n\n----------------------------------------\n\nTITLE: Implementing Order History Functionality\nDESCRIPTION: Implements order history functionality in the Injective TypeScript SDK to allow users to retrieve and analyze past orders.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_52\n\nLANGUAGE: TypeScript\nCODE:\n```\norder history\n```\n\n----------------------------------------\n\nTITLE: Adding Crescent Support\nDESCRIPTION: This snippet represents a feature addition that implements crescent support in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: None\nCODE:\n```\n\"- add crescent ([c902e84](https://github.com/InjectiveLabs/injective-ts/commit/c902e84fe1addf9f7fc01ba2098629a1ef313d69))\"\n```\n\n----------------------------------------\n\nTITLE: Implementing GRPC Pagination for All Records in Injective SDK\nDESCRIPTION: Implementation of functionality to fetch all records from paginated GRPC responses in the Injective SDK. This feature simplifies the process of retrieving multiple pages of data from GRPC endpoints.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- implemented a way to fetch grpc all records from pagination ([5b2f888](https://github.com/InjectiveLabs/injective-ts/commit/5b2f888424ab21c8db825a8c5ebcdf8775794fbc))\n```\n\n----------------------------------------\n\nTITLE: Fixing Trigger Price Handling\nDESCRIPTION: Fixes issues related to trigger price handling in the Injective TypeScript SDK to ensure accurate order execution based on price triggers.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_53\n\nLANGUAGE: TypeScript\nCODE:\n```\ntrigger price\n```\n\n----------------------------------------\n\nTITLE: Adding Bridge Support for Sommelier\nDESCRIPTION: This snippet represents a feature addition that implements bridge support for sommelier in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: None\nCODE:\n```\n\"- bridge support for sommelier ([be8646a](https://github.com/InjectiveLabs/injective-ts/commit/be8646ac4aaa2287be5c38aabeb9bf3fc78b6029))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Networks Package with Yarn\nDESCRIPTION: Command to install the @injectivelabs/networks package using the Yarn package manager\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/networks\n```\n\n----------------------------------------\n\nTITLE: Adding Order Mask to Batch Cancel Spot Order Message\nDESCRIPTION: Adds an order mask to the batch cancel spot order message in the Injective TypeScript SDK for more flexible order cancellation.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_51\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd order mask to batch cancel spot order message\n```\n\n----------------------------------------\n\nTITLE: Adding Transaction Filters in Injective-ts\nDESCRIPTION: This snippet represents a feature addition that implements transaction filters in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: None\nCODE:\n```\n\"- tx filters ([1b48cd8](https://github.com/InjectiveLabs/injective-ts/commit/1b48cd81bffe85ee8556826274d9eb92eb67fb1d))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Injective TypeScript Types Package\nDESCRIPTION: Command to install the @injectivelabs/ts-types package using yarn package manager. This package provides TypeScript types, enums, and interfaces for Injective Protocol related functionalities.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/ts-types\n```\n\n----------------------------------------\n\nTITLE: Add gRPC Ninja API Support\nDESCRIPTION: Added gRPC protocol support for the Ninja API integration\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_18\n\nLANGUAGE: TypeScript\nCODE:\n```\n04456234d2efa44a692beeccaf89e38894e71081\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Injective Address Feature\nDESCRIPTION: Git commit hash and message for adding functionality to get Injective address from subaccount\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n203c223 - get injective address from subaccount\n```\n\n----------------------------------------\n\nTITLE: Adding Chronos and Explorer Endpoints in Injective TS\nDESCRIPTION: This commit introduces specific endpoints for Chronos and Explorer services within the `@injectivelabs/networks` package. This enhancement provides dedicated access points for Chronos (historical data) and the Injective Explorer, enabling more efficient data retrieval and network exploration.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nadded chronos and explorer specific endpoints ([1d74cfc](https://github.com/InjectiveLabs/injective-ts/commit/1d74cfcebf6769e3096dbc02ef3736d51c4454a6))\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Gas Limit Feature\nDESCRIPTION: Git commit hash and message for adding gas limit from simulation functionality\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n6305f0d - gas limit from simulation\n```\n\n----------------------------------------\n\nTITLE: Git Commit - New Wallet Implementation\nDESCRIPTION: Git commit hash reference for new wallet TypeScript implementation\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_56\n\nLANGUAGE: markdown\nCODE:\n```\ne43b933f8a5e6bd6c51f5e890ec0f0e61992b647\n```\n\n----------------------------------------\n\nTITLE: Fixing Insurance Fund EIP712 Message\nDESCRIPTION: Fixes the EIP712 message format for the insurance fund in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_47\n\nLANGUAGE: TypeScript\nCODE:\n```\ninsurance fund eip712 msg\n```\n\n----------------------------------------\n\nTITLE: Fixing Token Meta Population in Injective TS Utils\nDESCRIPTION: This code snippet represents a bug fix related to token metadata population on the devnet environment in the Injective TS Utils package. The commit 11fead4 addresses an issue where token metadata was not being populated correctly on the devnet, ensuring accurate token information is available.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\n\"### Bug Fixes\\n\\n- token meta not populated on devnet env ([11fead4](https://github.com/InjectiveLabs/injective-ts/commit/11fead46519b883cd676db027162189402d17d06))\"\n```\n\n----------------------------------------\n\nTITLE: Git Commit - WASM Messages Addition\nDESCRIPTION: Git commit hash reference for adding WASM message functionality\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_55\n\nLANGUAGE: markdown\nCODE:\n```\n3773c39d8e61c70eec3f14683240a7f787fdd70e\n```\n\n----------------------------------------\n\nTITLE: Implementing Path Mapping in Injective TypeScript SDK\nDESCRIPTION: Implements path mapping functionality in the Injective TypeScript SDK to improve module resolution and import statements.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_45\n\nLANGUAGE: TypeScript\nCODE:\n```\npath mapping\n```\n\n----------------------------------------\n\nTITLE: Fixing Error Handling in Injective TS Utils\nDESCRIPTION: This code snippet represents a bug fix related to error handling in the Injective TS Utils package. The commit b97cc8a addresses an issue where errors were not being properly awaited, ensuring errors are caught and handled correctly.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\n\"### Bug Fixes\\n\\n- not awaiting for error ([b97cc8a](https://github.com/InjectiveLabs/injective-ts/commit/b97cc8aeab0f8d779342746aaf2c6ad5c48df7bc))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Error Parsing and Token Type in Injective TS Utils\nDESCRIPTION: This code snippet represents a bug fix related to error parsing and token type handling in the Injective TS Utils package. The commit c6650fb addresses issues with parsing errors and handling token types, improving the robustness of token-related operations.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\n\"### Bug Fixes\\n\\n- error parsing and token type ([c6650fb](https://github.com/InjectiveLabs/injective-ts/commit/c6650fb53dd03fdd87792a4ae4a5b92437b254ed))\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Keplr on Devnet\nDESCRIPTION: This snippet represents a feature addition that enables Keplr on the devnet in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: None\nCODE:\n```\n\"- enable keplr on devnet ([021a315](https://github.com/InjectiveLabs/injective-ts/commit/021a3156090398fde4b645bf3aecf5fa3a327b1c))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Testnet Endpoints in Injective TS\nDESCRIPTION: This commit fixes issues with testnet endpoints within the `@injectivelabs/networks` package. It ensures that the testnet endpoints are correctly configured and accessible, resolving potential connectivity problems for developers using the testnet environment.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntestnet endpoints ([869c9a0](https://github.com/InjectiveLabs/injective-ts/commit/869c9a081451660d9ebcc685187a66ff679a8137))\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Commit - Assert Package Compilation\nDESCRIPTION: Commit that resolved compilation issues related to the assert package dependency.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\nc27ec59 fixed compiling issue with the assert package\n```\n\n----------------------------------------\n\nTITLE: Feature: Community Spend Pool Implementation\nDESCRIPTION: Added community spend pool functionality. Commit d08a04b.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- community spend pool ([d08a04b](https://github.com/InjectiveLabs/injective-ts/commit/d08a04b1dc3610371d4f2c8c65a07b3b59f36e58))\n```\n\n----------------------------------------\n\nTITLE: Fixing Chronos and Explorer Endpoints in Injective TS\nDESCRIPTION: This commit addresses issues related to Chronos and Explorer endpoints within the `@injectivelabs/networks` package.  It rectifies incorrect endpoint configurations for Chronos and Explorer services, which could impact the retrieval of on-chain data and transaction information.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nchronos and explorer endpoints ([0de69e7](https://github.com/InjectiveLabs/injective-ts/commit/0de69e7a8ba5bf6a97bb8aedd3de10f3e7ff143a))\n```\n\n----------------------------------------\n\nTITLE: Fixing Build Script in Injective TS Utils\nDESCRIPTION: This code snippet represents a bug fix related to the build script in the Injective TS Utils package. The commit 6e8c15f addresses an issue with the build process, ensuring the package builds correctly.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n\"### Bug Fixes\\n\\n- build script ([6e8c15f](https://github.com/InjectiveLabs/injective-ts/commit/6e8c15f5d0c0d61e15766abb6217f3fa34cdf791))\"\n```\n\n----------------------------------------\n\nTITLE: Simplifying Networks in Injective TS\nDESCRIPTION: This commit simplifies the network configurations within the `@injectivelabs/networks` package. The simplification of network configurations aims to improve maintainability and reduce complexity in managing different Injective network environments.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nsimplified networks ([9b9733b](https://github.com/InjectiveLabs/injective-ts/commit/9b9733baee722c368dbdf8f4634fa1ecb036d4c0))\n```\n\n----------------------------------------\n\nTITLE: Fixing Explorer Port in Injective TS\nDESCRIPTION: This commit corrects the explorer port configuration within the `@injectivelabs/networks` package.  It resolves an issue with the explorer port, ensuring proper access to the Injective Explorer for network and transaction insights.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nexplorer port ([4458129](https://github.com/InjectiveLabs/injective-ts/commit/445812967c5336134c15764a981f8d5d61d93778))\n```\n\n----------------------------------------\n\nTITLE: Fixing Build Script in Injective-ts\nDESCRIPTION: This snippet represents a bug fix related to the build script in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: None\nCODE:\n```\n\"- build script ([6e8c15f](https://github.com/InjectiveLabs/injective-ts/commit/6e8c15f5d0c0d61e15766abb6217f3fa34cdf791))\"\n```\n\n----------------------------------------\n\nTITLE: Adding Testnet Old Endpoints in Injective TS\nDESCRIPTION: This commit adds older testnet endpoints to the `@injectivelabs/networks` package.  It introduces fallback endpoints for the testnet environment to maintain compatibility and ensure continued access during network transitions or updates.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nadded testnet old endpoints ([79358b1](https://github.com/InjectiveLabs/injective-ts/commit/79358b1ce2f775cacb8c278a58caaea90a8e98bb))\n```\n\n----------------------------------------\n\nTITLE: Fixing Script Minor in Injective-ts\nDESCRIPTION: This snippet represents a bug fix related to a minor script issue in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: None\nCODE:\n```\n\"- script minor ([adb7c76](https://github.com/InjectiveLabs/injective-ts/commit/adb7c764ad00a0cfa38223cecf9b221873cd31b8))\"\n```\n\n----------------------------------------\n\nTITLE: Git Commit Message - Changelog Fix\nDESCRIPTION: Git commit addressing a changelog issue\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\nchange log ([e039b61](https://github.com/InjectiveLabs/injective-ts/commit/e039b6173a1037bafb026c71f82cb08a073fad6a))\n```\n\n----------------------------------------\n\nTITLE: Add MsgExternalTransfer Message\nDESCRIPTION: Added support for MsgExternalTransfer message type and exports\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_19\n\nLANGUAGE: TypeScript\nCODE:\n```\nd9b5444e93bbbb323e5ad6fdb84ff00d751a6196\n```\n\n----------------------------------------\n\nTITLE: Fixing Missing Secret ChainId\nDESCRIPTION: This snippet represents a bug fix related to a missing secret chainId in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: None\nCODE:\n```\n\"- missing secret chainId ([641e7b9](https://github.com/InjectiveLabs/injective-ts/commit/641e7b9e88102f153928315aac8d24267d6511a8))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Wallet Core Package with Yarn\nDESCRIPTION: Command to install the @injectivelabs/wallet-core package using yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-core/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-core\n```\n\n----------------------------------------\n\nTITLE: Adding Order History Feature\nDESCRIPTION: This snippet represents a feature addition that implements order history in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: None\nCODE:\n```\n\"- order history ([#70](https://github.com/InjectiveLabs/injective-ts/issues/70)) ([74dcc0f](https://github.com/InjectiveLabs/injective-ts/commit/74dcc0f1373c3cc13934cee8b70095df17032cb4))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Order Mask and Twitter Link\nDESCRIPTION: This snippet represents a bug fix related to the order mask and Twitter link in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: None\nCODE:\n```\n\"- orderMask and twitter link ([0474569](https://github.com/InjectiveLabs/injective-ts/commit/047456994f5233ed099174cd7f96a34f29dfbce8))\"\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-magic package\nDESCRIPTION: This command installs the @injectivelabs/wallet-magic package using Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-magic/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-magic\n```\n\n----------------------------------------\n\nTITLE: Adding Initial Bridge-ts\nDESCRIPTION: This snippet represents a feature addition that implements the initial bridge-ts in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: None\nCODE:\n```\n\"- bridge-ts initial ([4320b1c](https://github.com/InjectiveLabs/injective-ts/commit/4320b1c256b58caec7a08c33854f0bdde9681c3c))\"\n```\n\n----------------------------------------\n\nTITLE: Fix Transaction Polling Interval\nDESCRIPTION: Bug fix for transaction polling interval configuration\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\n536e10f35257d8967fa2aff1ab97513d999be3f7\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-base package using Yarn\nDESCRIPTION: Command to install the @injectivelabs/wallet-base package using Yarn package manager. This package serves as the base for implementing wallet strategies in Injective Protocol projects.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-base/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-base\n```\n\n----------------------------------------\n\nTITLE: Setting Up Jest and Adding MsgBid Unit Tests\nDESCRIPTION: Sets up Jest testing framework and adds unit tests for the MsgBid message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_46\n\nLANGUAGE: TypeScript\nCODE:\n```\njest setup, msgBid unit tests\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Protocol Exceptions Package via Yarn\nDESCRIPTION: Command to install the @injectivelabs/exceptions package using Yarn package manager. This package provides error handling functionality for Injective Protocol applications.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/exceptions/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/exceptions\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-wallet-connect package\nDESCRIPTION: Command to install the Wallet Connect wallet strategy package for Injective Protocol using Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-wallet-connect/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-wallet-connect\n```\n\n----------------------------------------\n\nTITLE: Git Commit Message - Retry Implementation\nDESCRIPTION: Git commit implementing retries for gRPC and REST query calls\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\nimplement retries on grpc and rest query calls ([d8c4486](https://github.com/InjectiveLabs/injective-ts/commit/d8c4486722c52a669b17ffe8875855e543f573e8))\n```\n\n----------------------------------------\n\nTITLE: Installing the Wallet Strategy Package\nDESCRIPTION: Command to install the @injectivelabs/wallet-strategy package using yarn package manager. This package provides wallet integration functionality for the Injective Protocol.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-strategy/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-strategy\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-cosmostation package\nDESCRIPTION: This command installs the @injectivelabs/wallet-cosmostation package using Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmostation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-cosmostation\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateSpotLimitOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateSpotLimitOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_36\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateSpotLimitOrder message\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-evm package\nDESCRIPTION: Command to install the @injectivelabs/wallet-evm package using yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-evm/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-evm\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-cosmos-strategy via Yarn\nDESCRIPTION: Command to install the @injectivelabs/wallet-cosmos-strategy package using Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmos-strategy/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-cosmos-strategy\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateDerivativeLimitOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateDerivativeLimitOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_34\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateDerivativeLimitOrder message\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-ledger package\nDESCRIPTION: Command to install the @injectivelabs/wallet-ledger package using Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-ledger/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-ledger\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Utils Package with Yarn\nDESCRIPTION: Command to install the @injectivelabs/utils package using the Yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/utils\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgCreateBinaryOptionsLimitOrder Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgCreateBinaryOptionsLimitOrder message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_32\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgCreateBinaryOptionsLimitOrder message\n```\n\n----------------------------------------\n\nTITLE: Installing @injectivelabs/wallet-trezor package\nDESCRIPTION: Command to install the @injectivelabs/wallet-trezor package using yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-trezor/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-trezor\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference in Markdown\nDESCRIPTION: Individual commit hashes with associated commit messages for tracking specific changes\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-evm/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([7b50184](https://github.com/InjectiveLabs/injective-ts/commit/7b5018431d970bfb00d022878fbf7994e4878e72))\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgIncreasePositionMargin Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgIncreasePositionMargin message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_39\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgIncreasePositionMargin message\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Wallet EVM Package\nDESCRIPTION: Command to install the required wallet EVM package using yarn package manager.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-private-key/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-evm\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Link Format\nDESCRIPTION: Example of how commit hash links are formatted in the changelog entries\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n[df86421](https://github.com/InjectiveLabs/injective-ts/commit/df86421aec08b6a1e3ff3c928c709e0057f2e1a4)\n```\n\n----------------------------------------\n\nTITLE: Fixing Script Minor issue in Injective TS Utils\nDESCRIPTION: This code snippet represents a bug fix for a minor script issue in the Injective TS Utils package. The commit adb7c76 addresses a minor problem with a script, ensuring proper functionality.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\n\"### Bug Fixes\\n\\n- script minor ([adb7c76](https://github.com/InjectiveLabs/injective-ts/commit/adb7c764ad00a0cfa38223cecf9b221873cd31b8))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Injective Cosmos Wallet Package\nDESCRIPTION: Command to install the @injectivelabs/wallet-cosmos package using Yarn package manager. This package provides the necessary implementations for working with Cosmos wallets on Injective.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmos/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @injectivelabs/wallet-cosmos\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Reference Snippet\nDESCRIPTION: Examples of commit hash references used in the changelog entries to link to specific changes in the codebase.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[8c9bdf8](https://github.com/InjectiveLabs/injective-ts/commit/8c9bdf83203638abeabbde3ec0f8b29e1330cc9d)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[ccfd06b](https://github.com/InjectiveLabs/injective-ts/commit/ccfd06b84fc1acb542e28f1d39ac251730750afa)\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Value Decrypt Fix\nDESCRIPTION: Git commit hash and message for a bug fix related to value decryption from contract\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n83312ac - value decrypt from contract\n```\n\n----------------------------------------\n\nTITLE: Running Proto Generation Commands for Injective Projects\nDESCRIPTION: Commands for generating TypeScript proto definitions from injective-core and injective-indexer repositories and publishing them. These commands reference the gen.sh scripts which contain branch variables that can be modified as needed.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/proto/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn generate:core-proto-ts\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn generate:indexer-proto-ts\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn publish:core-proto-ts\n```\n\nLANGUAGE: shell\nCODE:\n```\nyarn publish:indexer-proto-ts\n```\n\n----------------------------------------\n\nTITLE: Version History in Markdown Format\nDESCRIPTION: A structured changelog showing version updates, bug fixes, and new features for the @injectivelabs/utils package using standard markdown formatting.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.19](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.11...@injectivelabs/utils@0.0.19) (2021-03-01)\n\n### Bug Fixes\n\n- added types for ethereum-utils, fixed bech32 import\n- fixed compiling issue with the assert package\n- renamed packages to avoid conflicts\n- server side check fixed\n- types fixed, improvements for web3-strategy\n\n### Features\n\n- added a new tx-utils package\n- added a node transport for grpc consumers\n- added chronos-api package\n- added description to the packages\n- contract packages initial setup completed\n```\n\n----------------------------------------\n\nTITLE: Fixing Leap Wallet Issue\nDESCRIPTION: This snippet represents a bug fix related to the Leap wallet in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: None\nCODE:\n```\n\"- leap wallet ([9ffd089](https://github.com/InjectiveLabs/injective-ts/commit/9ffd0899b462cb6ca6871a858fcc4a3353845fa3))\"\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Distribution MsgWithdrawDelegatorReward Message\nDESCRIPTION: Adds unit test coverage for the Cosmos distribution MsgWithdrawDelegatorReward message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_26\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos distribution MsgWithdrawDelegatorReward message\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Exchange MsgWithdraw Message\nDESCRIPTION: Adds unit test coverage for the Injective exchange MsgWithdraw message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_41\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective exchange MsgWithdraw message\n```\n\n----------------------------------------\n\nTITLE: Feature Addition Commit Entry\nDESCRIPTION: Commit hash reference for adding transaction error handling functionality.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n- transaction error handling ([d0bc738](https://github.com/InjectiveLabs/injective-ts/commit/d0bc738ab4b99248b81e3387dba5914974ae0c17))\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Injective Insurance MsgRequestRedemption Message\nDESCRIPTION: Adds unit test coverage for the Injective insurance MsgRequestRedemption message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_43\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for injective insurance MsgRequestRedemption message\n```\n\n----------------------------------------\n\nTITLE: Explorer Services Feature Commit\nDESCRIPTION: Git commit hash reference for explorer services addition\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n3c692386eaf5fee482c9b46c5d0d5583324e45f9\n```\n\n----------------------------------------\n\nTITLE: Adding Unit Test Coverage for Cosmos Staking MsgUndelegate Message\nDESCRIPTION: Adds unit test coverage for the Cosmos staking MsgUndelegate message in the Injective TypeScript SDK.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_31\n\nLANGUAGE: TypeScript\nCODE:\n```\nadd unit test coverage for cosmos staking MsgUndelegate message\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Reference\nDESCRIPTION: Git commit hash reference for chronos endpoints decoupling change\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n082f422d68f4137baf1c8b8b0993e732d4985e82\n```\n\n----------------------------------------\n\nTITLE: Fixing Execution Side Prop in Trade Objects\nDESCRIPTION: This snippet represents a bug fix related to adding executionSide prop to trade objects in the injective-ts project. The commit hash provides a direct link to the specific changes made in the repository.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: None\nCODE:\n```\n\"- added executionSide prop to trade objects ([#78](https://github.com/InjectiveLabs/injective-ts/issues/78)) ([35da59c](https://github.com/InjectiveLabs/injective-ts/commit/35da59c33c9fb8a198306b4bbcaf27dd407a4fda))\"\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - Testnet Endpoints Update\nDESCRIPTION: Fix for testnet endpoints implementation in version 1.0.36\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: git\nCODE:\n```\n- testnet endpoints ([a016c9c](https://github.com/InjectiveLabs/injective-ts/commit/a016c9c69036249ee42bbd0d6501c33f874e2f51))\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Authorization Utilities\nDESCRIPTION: Git commit hash and message for adding minor authorization utilities\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n72fc977a8cca34a78a7ae9b1247c233632c28b7e\n```\n\n----------------------------------------\n\nTITLE: Feature Commit - Package Descriptions\nDESCRIPTION: Commit that added descriptive documentation to the packages.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n6970b67 added description to the packages\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Export Utils\nDESCRIPTION: Git commit hash and message for fixing utility exports\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n9e3d07c1d32825ba89a2b57f1e460e16f899592e\n```\n\n----------------------------------------\n\nTITLE: Feature Commit - Subaccount Package Separation\nDESCRIPTION: Commit that decoupled subaccount functionality from spot package into its own dedicated package.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\nd6a0875 subaccount decoupled from spot to own package\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - Order Mask and Twitter Link\nDESCRIPTION: Fix addressing orderMask implementation and Twitter link issues in version 1.0.13\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: git\nCODE:\n```\n- orderMask and twitter link ([0474569](https://github.com/InjectiveLabs/injective-ts/commit/047456994f5233ed099174cd7f96a34f29dfbce8))\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Remove GST Strategy\nDESCRIPTION: Git commit hash and message for removing GST strategy functionality\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n0c110718956701080e4adb84ebb1f3d24b8f5b06\n```\n\n----------------------------------------\n\nTITLE: Feature Addition - Minor Utility Update\nDESCRIPTION: Addition of minor utility functionality and readme updates in version 1.0.33\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: git\nCODE:\n```\n- minor util and readme update ([9be782b](https://github.com/InjectiveLabs/injective-ts/commit/9be782bf5f085743bdb631ba601368a02abca795))\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Build Cache Path Fix\nDESCRIPTION: Git commit hash and message documenting a fix for build cache paths\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-cosmostation/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n7b5018431d970bfb00d022878fbf7994e4878e72 - build cache paths\n```\n\n----------------------------------------\n\nTITLE: Network Information Bug Fix Commit\nDESCRIPTION: Git commit hash reference for network information bug fix\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n853f4677b278b0ff1f111a3c9f2cb77d993a1508\n```\n\n----------------------------------------\n\nTITLE: Git Repository Reference in Markdown\nDESCRIPTION: Repository URL showing the source code location and version comparison links\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/wallets/wallet-evm/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[1.14.42](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/wallet-evm@1.14.41-alpha.20...@injectivelabs/wallet-evm@1.14.42)\n```\n\n----------------------------------------\n\nTITLE: Git Commit Message - Package Version Fix\nDESCRIPTION: Git commit implementing a package version fix\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\npackage version ([f861fbf](https://github.com/InjectiveLabs/injective-ts/commit/f861fbf21f5f78d1b840930a67b05c578087a3b8))\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Comparison in Markdown\nDESCRIPTION: Demonstrates how to show a version comparison between two package versions in a Markdown changelog.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_21\n\nLANGUAGE: Markdown\nCODE:\n```\n## [1.0.192](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/sdk-ts@1.0.190...@injectivelabs/sdk-ts@1.0.192) (2022-10-28)\n```\n\n----------------------------------------\n\nTITLE: Version Update Commits\nDESCRIPTION: Git commit hashes tracking changes and version updates to the SDK, including fixes for timeouts, gas limits, and additions of new features like explorer utils and token services.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: text\nCODE:\n```\nb31b3ff3bf27e74208cf03f10ea8fff762b0cae9\n86772270ae17fbf69829243509f2c68fba7d0d6e\n4d6463674ee9f1b63138d8cc7e1cb81b19e09835\nc4a7518c20aaa6d79cb668c4ae70dc1b41023d2b\nde5e9c2e1e787959af2618e31b78c577c402a038\n4850924e3caa7499eef86d794f31681120d5e7f7\n```\n\n----------------------------------------\n\nTITLE: Git Commit Message - Minor Fix\nDESCRIPTION: Git commit addressing a minor issue\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\nminor ([1be70b2](https://github.com/InjectiveLabs/injective-ts/commit/1be70b24a01f1e6907145fd740d4aa1f425748bd))\n```\n\n----------------------------------------\n\nTITLE: Version Change Entry - Bug Fix Commit\nDESCRIPTION: Commit hash reference for a bug fix related to explorer RPC service.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n- explorer rpc service ([6ab6652](https://github.com/InjectiveLabs/injective-ts/commit/6ab6652af86efc47b300446ea9b7db1cfe074ffc))\n```\n\n----------------------------------------\n\nTITLE: Git Commit - Fee Paid Amount Fix\nDESCRIPTION: Git commit hash reference for fixing feePaidAmount to volume conversion\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_54\n\nLANGUAGE: markdown\nCODE:\n```\n88c202f99dd930c1555b9b91b84c7f7e408c660c\n```\n\n----------------------------------------\n\nTITLE: Feature Commit - Contract Package Setup\nDESCRIPTION: Commit that completed the initial setup of contract-related packages.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/ts-types/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n49ccff4 contract packages initial setup completed\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Links\nDESCRIPTION: Links comparing changes between different versions of the package using GitHub's compare view.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[@injectivelabs/utils@1.0.69...@injectivelabs/utils@1.0.70](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@1.0.69...@injectivelabs/utils@1.0.70)\n```\n\n----------------------------------------\n\nTITLE: Version Compare Link Format\nDESCRIPTION: Example of how package version comparison links are formatted in the changelog\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[0.0.60](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.59...@injectivelabs/utils@0.0.60)\n```\n\n----------------------------------------\n\nTITLE: Commit References\nDESCRIPTION: Git commit references for various changes to the codebase\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n- [0a26c1c](https://github.com/InjectiveLabs/injective-ts/commit/0a26c1c8f60fb750629ff66e7c03b8c554c1ac12)\n- [1bec7b4](https://github.com/InjectiveLabs/injective-ts/commit/1bec7b41a7b612f0f5f08292483c2090fc9a84d5)\n- [0c2f050](https://github.com/InjectiveLabs/injective-ts/commit/0c2f050f7512dc365f8eca9104936e98747644e3)\n```\n\n----------------------------------------\n\nTITLE: Version Numbers\nDESCRIPTION: Semantic version number definitions and version bumps\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.45](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.44...@injectivelabs/utils@0.0.45)\n\n## [0.0.44](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.41...@injectivelabs/utils@0.0.44)\n\n## [0.0.43](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.11...@injectivelabs/utils@0.0.43)\n```\n\n----------------------------------------\n\nTITLE: Version Bump - Utils Package\nDESCRIPTION: Version bump for the utils package from 0.0.38 to 0.0.41\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.41](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.38...@injectivelabs/utils@0.0.41) (2021-12-03)\n\n**Note:** Version bump only for package @injectivelabs/utils\n```\n\n----------------------------------------\n\nTITLE: Displaying Git Commit Hash in Markdown\nDESCRIPTION: Shows how to include a Git commit hash as a link in a Markdown changelog entry.\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/sdk-ts/CHANGELOG.md#2025-04-21_snippet_20\n\nLANGUAGE: Markdown\nCODE:\n```\n- keplrReclaimFunds message ([dd2136e](https://github.com/InjectiveLabs/injective-ts/commit/dd2136ee3c62ab3dcdc3141928f3ef56446200e1))\n```\n\n----------------------------------------\n\nTITLE: Version and Feature History in Markdown\nDESCRIPTION: Changelog entries detailing version history, bug fixes, and feature additions for the network configuration package\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- added default gas price ([8b7062f])\n- added devnet network ([2975a41])\n- added exchange exception ([3afa0c9])\n- added execution side filter for spot market trades ([09ed791])\n\n## 0.0.55 (2022-01-21)\n\n### Bug Fixes\n\n- constants decoupled from packages ([0c2f050])\n- endpoint port for the chain-api ([328a20e])\n- explorer endpoint fix ([641285f])\n```\n\n----------------------------------------\n\nTITLE: Version Commit References in Markdown\nDESCRIPTION: Markdown formatted version links and commit references for tracking changes between releases\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/networks/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.25](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/networks@0.0.24...@injectivelabs/networks@0.0.25) (2021-06-13)\n\n### Bug Fixes\n\n- devnet exchange api endpoint changed ([c0f01af](https://github.com/InjectiveLabs/injective-ts/commit/c0f01af25e35fe6698fba0f4907a25358e27ccc6))\n- exchange endpoint for staking network ([bc96ed5](https://github.com/InjectiveLabs/injective-ts/commit/bc96ed54ad32f44fff6e492bbec5cda66bf82e56))\n- merge conflicts ([a5c7ce1](https://github.com/InjectiveLabs/injective-ts/commit/a5c7ce13823fded62a32f79fcfda19867c929cc7))\n```\n\n----------------------------------------\n\nTITLE: Version History - Utils Package Previous Version\nDESCRIPTION: Previous version history showing changes from version 0.0.11 to 0.0.40\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.40](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.11...@injectivelabs/utils@0.0.40) (2021-12-02)\n```\n\n----------------------------------------\n\nTITLE: Example Version Bump\nDESCRIPTION: Example version change entry showing semantic versioning and package comparison\nSOURCE: https://github.com/injectivelabs/injective-ts/blob/dev/packages/utils/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.0.60](https://github.com/InjectiveLabs/injective-ts/compare/@injectivelabs/utils@0.0.59...@injectivelabs/utils@0.0.60) (2022-02-15)\n```"
  }
]
[
  {
    "owner": "serenity-js",
    "repo": "serenity-js",
    "content": "TITLE: Implementing Serenity/JS with Mocha and Playwright\nDESCRIPTION: Complete example showing how to configure and use Serenity/JS with Mocha and Playwright. Demonstrates setting up actors, page objects, test configuration, and writing test scenarios using the Screenplay Pattern.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { actorCalled, Actor, Cast, configure, Duration } from '@serenity-js/core'\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from '@serenity-js/playwright'\nimport { By, Navigate, PageElement, TakePhotosOfFailures, Text } from '@serenity-js/web'\n\nimport { describe, it, beforeAll, afterAll } from 'mocha'\nimport * as playwright from 'playwright'\n\nclass SerenityJSWebsite {                   \n    static header = () => \n        PageElement.located(By.css('h1'))   \n            .describedAs('header')          \n}\n\nclass Actors implements Cast {              \n    constructor(                            \n        private readonly browser: playwright.Browser,\n        private readonly options: PlaywrightOptions,\n    ) {\n    }\n\n    prepare(actor: Actor): Actor {\n        return actor.whoCan(\n            BrowseTheWebWithPlaywright.using(this.browser, this.options),\n        )\n    }\n}\n\ndescribe('Serenity/JS', () => {\n\n    let browser: playwright.Browser\n    \n    beforeAll(async () => {\n        browser = await playwright.chromium.launch({\n            headless: true\n        })\n\n        configure({\n            actors: new Actors(browser, {\n                    baseURL: `https://serenity-js.org`,\n                    defaultNavigationTimeout:   Duration.ofSeconds(2).inMilliseconds(),\n                    defaultTimeout:             Duration.ofMilliseconds(750).inMilliseconds(),\n            }),\n            crew: [\n                [ '@serenity-js/console-reporter', { theme: 'auto' } ],\n                [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n                [ '@serenity-js/web:Photographer', {\n                    strategy: 'TakePhotosOfFailures',\n                } ],\n                [ '@serenity-js/serenity-bdd', { specDirectory: 'spec' } ],\n            ]\n        })\n    })\n    \n    it('supports Playwright', async () => {\n        await actorCalled('William')                                \n            .attemptsTo(\n                Navigate.to('https://serenity-js.org'),\n                Ensure.that(\n                    Text.of(SerenityJSWebsite.header()),\n                    equals('Next generation acceptance testing')\n                ),\n            )\n    })\n\n    afterAll(async () => {\n        if (browser) {\n            await browser.close()\n        }\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Example Serenity/JS REST API Test\nDESCRIPTION: Demonstrates a typical Serenity/JS test scenario for a REST API, including GET, POST, and DELETE requests with assertions on the responses.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/rest/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { CallAnApi, DeleteRequest, GetRequest, LastResponse, PostRequest, Send } from '@serenity-js/rest'\nimport { Ensure, equals, startsWith } from '@serenity-js/assertions'\n\nconst actor = actorCalled('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'))\n\nawait actor.attemptsTo(\n    // no users present in the system\n    Send.a(GetRequest.to('/users')),\n    Ensure.that(LastResponse.status(), equals(200)),\n    Ensure.that(LastResponse.body(), equals([])),\n\n    // create a new test user account\n    Send.a(PostRequest.to('/users').with({\n        login: 'tester',\n        password: 'P@ssword1',\n    }),\n    Ensure.that(LastResponse.status(), equals(201)),\n    Ensure.that(LastResponse.header('Location'), startsWith('/users')),\n\n    // delete the test user account\n    Send.a(DeleteRequest.to(LastResponse.header('Location'))),\n    Ensure.that(LastResponse.status(), equals(200)),\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS and Playwright Reporters - TypeScript\nDESCRIPTION: Demonstrates configuring the Playwright test runner to use Serenity/JS and Playwright's own reporters. The configuration file, which must be used as Playwright's config (playwright.conf.ts), includes specifying custom stage crew for Serenity/JS, directories for output artifacts, and enables optional HTML reporting. Inputs are testDir, reporter, and custom crew configuration; outputs are the runner's reporting behaviour and location of generated reports/artifacts.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\n// playwright.conf.ts\n\nimport type { PlaywrightTestConfig } from '@playwright/test'\n\nconst config: PlaywrightTestConfig = {\n    testDir: './spec',\n    \n    reporter: [\n        [ '@serenity-js/playwright-test', {\n            crew: [\n                '@serenity-js/console-reporter',\n                [ '@serenity-js/serenity-bdd', { specDirectory: './spec' } ],\n                [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: 'target/site/serenity' } ],\n                // '@serenity-js/core:StreamReporter',\n            ]\n        }],\n\n        // optional\n        [ 'html', { open: 'never' } ],          // built-in Playwright HTML reporter\n    ],\n\n    // Other configuration omitted for brevity\n    // For details, see https://playwright.dev/docs/test-configuration\n}\n\nexport default config\n```\n\n----------------------------------------\n\nTITLE: Composing Complex Expectations in Serenity/JS\nDESCRIPTION: Example demonstrating how to compose complex expectations by combining multiple expectations using Expectation.to, and, or, and other built-in expectations to create a range check.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { Expectation, Ensure, and, or, isGreaterThan, isLessThan, equals  } from '@serenity-js/assertions'\n\nfunction isWithin(lowerBound: number, upperBound: number) {\n    return Expectation\n        .to(`have value within ${ lowerBound } and ${ upperBound }`)\n        .soThatActual(and(\n           or(isGreaterThan(lowerBound), equals(lowerBound)),\n           or(isLessThan(upperBound), equals(upperBound)),\n        ))\n}\n\nawait actorCalled('Erica').attemptsTo(\n    Ensure.that(5, isWithin(3, 6)),\n)\n```\n\n----------------------------------------\n\nTITLE: Component Testing with Serenity/JS Screenplay Actors - TSX\nDESCRIPTION: Demonstrates creating a component test suite with Playwright and Serenity/JS, leveraging useBase and custom fixtures. Shows how to use an actor to interact with a mounted React component (EmailInput), enter data, and assert UI outcomes. Depends on Serenity/JS modules for assertions, user interaction, and Playwright component test runner. Key parameters include actor, mount, and a dynamically provided emailAddress.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport { test as componentTest } from '@playwright/experimental-ct-react'\nimport { Ensure, contain } from '@serenity-js/assertions'\nimport { useBase } from '@serenity-js/playwright-test'\nimport { Enter, PageElement, CssClasses } from '@serenity-js/web'\n\nimport EmailInput from './EmailInput'\n\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\n    emailAddress: ({ actor }, use) => {\n        use(`${ actor.name }@example.org`)\n    }\n})\n\ndescribe('EmailInput', () => {\n\n    it('allows valid email addresses', async ({ actor, mount, emailAddress }) => {\n        const nativeComponent = await mount(<EmailInput/>)\n\n        const component = PageElement.from(nativeComponent)\n\n        await actor.attemptsTo(\n            Enter.theValue(emailAddress).into(component),\n            Ensure.that(CssClasses.of(component), contain('valid')),\n        )\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Expectations in Serenity/JS\nDESCRIPTION: Example showing how to create custom expectations using Expectation.thatActualShould to define specialized verification logic, in this case checking if a number is divisible by another.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { Expectation, Ensure } from '@serenity-js/assertions'\n\nfunction isDivisibleBy(expected: Answerable<number>): Expectation<number> {\n    return Expectation.thatActualShould<number, number>('have value divisible by', expected)\n        .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0)\n}\n\nawait actorCalled('Erica').attemptsTo(\n    Ensure.that(4, isDivisibleBy(2)),\n)\n```\n\n----------------------------------------\n\nTITLE: Running Serenity/JS Tests and Generating Reports with npm\nDESCRIPTION: This shell command triggers execution of Serenity/JS automated tests and the subsequent generation of reports via the npm script 'serenity'. This requires a valid package.json script entry such as 'serenity': 'wdio wdio.conf.ts' (or similar) to be defined, and a configured wdio.conf.ts file. On completion, test results and reports will appear in the 'target/site/serenity' directory, ready for browser viewing. The approach assumes all dependencies and configuration files are in place and requires no input arguments.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run serenity\n```\n\n----------------------------------------\n\nTITLE: Example Test using Serenity/JS Local Server with Axios\nDESCRIPTION: A complete example test showing how to start a local server, test against its API, and stop it when done. It demonstrates the typical workflow of setting up an actor with abilities, starting the server, sending requests, making assertions, and stopping the server.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport {\n    ManageALocalServer, StartLocalTestServer, StopLocalTestServer\n} from '@serenity-js/local-server'\nimport { CallAnApi, GetRequest, Send } from '@serenity-js/rest'\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport axios from 'axios'\n\nimport { requestListener } from './listener'                            (1)\n\nconst actor = actorCalled('Apisit').whoCan(\n    ManageALocalServer.using(requestListener),                          (2)\n    CallAnApi.using(axios.create()),\n)\n\nawait actor.attemptsTo(\n    StartLocalTestServer.onRandomPort(),                                (3)\n    Send.a(GetRequest.to(LocalServer.url())),                           (4)\n    Ensure.that(LastResponse.status(), equals(200)),\n    Ensure.that(LastResponse.body(), equals('Hello!')),\n    StopLocalTestServer.ifRunning(),                                    (5)\n)\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Tests Using Wait in Serenity/JS\nDESCRIPTION: Example demonstrating how to use Wait to synchronize test execution with the System Under Test by waiting for an element to become visible before interacting with it.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { Click, isVisible, Wait } from '@serenity-js/protractor'\n\nawait actorCalled('Erica').attemptsTo(\n    Wait.until(CloseModalButton, isVisible()),\n    Click.on(CloseModalButton)\n)\n```\n\n----------------------------------------\n\nTITLE: Writing a Test Scenario with Mocha and Serenity/JS\nDESCRIPTION: This example demonstrates writing a simple test scenario using Mocha and Serenity/JS. It illustrates navigating to a webpage and ensuring text element correctness. Dependencies include Serenity/JS assertions and web interaction modules, invoking an actor pattern for test execution.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/README.md#2025-04-22_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\n// ./test/specs/example.spec.ts\nimport { describe, it } from 'mocha'\n\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { actorCalled } from '@serenity-js/core'\nimport { By, Navigate, PageElement, Text } from '@serenity-js/web'\n\ndescribe('Example', () => {\n\n    it('interacts with a web page', async () => {\n\n        await actorCalled('Alice').attemptsTo(\n            Navigate.to('https://serenity-js.org'),\n            Ensure.that(\n                Text.of(PageElement.located(By.id('cta-start-automating'))),\n                equals('Start automating 🚀')\n            ),\n        )\n    })    \n})\n```\n\n----------------------------------------\n\nTITLE: Customising Fixtures with useFixtures in Serenity/JS - TypeScript\nDESCRIPTION: Defines a custom test API using Serenity/JS's useFixtures, allowing centralized configuration of actors (with capabilities such as web browsing, note taking, and API calls) as well as the addition of custom test data like email. Requires Serenity/JS and Playwright-related modules, and depends on proper setup of Cast, BrowseTheWebWithPlaywright, TakeNotes, and CallAnApi. The returned API includes standard testing functions which are enhanced to use the custom fixtures. Expects a Playwright context with browser and baseURL inputs and prepares actor-specific email output.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// my-custom-api.ts\nexport const { \n    describe, it, test, beforeAll, beforeEach, afterEach, afterAll, expect\n} = useFixtures<{ email: string }>({\n    \n    // Override Serenity/JS fixtures:\n    actors: async ({ browser, baseURL }, use) => {\n        await use(\n            Cast.where(actor => actor.whoCan(\n                BrowseTheWebWithPlaywright.using(browser),\n                TakeNotes.usingAnEmptyNotepad(),\n                CallAnApi.at(baseURL),\n            ))\n        )\n    },\n    \n    // Add your own fixtures:\n    email: async ({ actor }, use) => {\n        await use(`${ actor.name }@example.org`);\n    },    \n})\n```\n\n----------------------------------------\n\nTITLE: Controlling Execution Flow Using Check in Serenity/JS\nDESCRIPTION: Example showing how to use the Check interaction to conditionally execute interactions based on whether certain elements are visible on the page.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { Check } from '@serenity-js/assertions' \nimport { Click, isVisible } from '@serenity-js/protractor'\n\nawait actorCalled('Erica').attemptsTo(\n    Check.whether(NewsletterModal, isVisible())\n        .andIfSo(Click.on(CloseModalButton)),\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Multi-Actor Scenarios\nDESCRIPTION: Example demonstrating how to implement multi-actor test scenarios where each actor uses a separate browser instance.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\n\nimport { describe, it, test } from '@serenity-js/playwright-test'   // import fixtures\n\ndescribe('Serenity Screenplay with Playwright', () => {\n    \n    describe('Chat app', () => {\n\n        it('should allow actors to send and receive messages', async ({ actorCalled }) => { \n\n            // define part of the workflow performed by the first actor:\n            await actorCalled('Alice').attemptsTo(                               \n                // navigate to a chat app\n                // post a message to Bob\n            )\n\n            // define parts of the workflow performed by the any other actors:\n            await actorCalled('Bob').attemptsTo(                                 \n                // navigate to a chat app\n                // post a reply to Alice\n            )\n\n            // Note that invoking actorCalled(name) multiple times\n            // while using the same name and within the scope of a single test\n            // returns the same actor, so you don't need to cache them:\n            await actorCalled('Alice').attemptsTo(                              \n                // check if the reply from Bob is received                      \n            )                                                                   \n        })\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Using Custom API in Serenity/JS Playwright Test - TypeScript\nDESCRIPTION: Shows how to utilize the previously defined custom test API (from my-custom-api.ts) inside a test suite, benefiting from injected custom fixtures like 'actor' and 'email'. Requires the custom API import, and standard Serenity/JS imports like Log. Demonstrates a test case logging the generated email address. Input parameters are automatically provided by the fixture configuration; the output is dependent on the logging implementation.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\nimport { Log } from '@serenity-js/core'\n\nimport { describe, it, test } from './my-custom-api'    // Note the custom test API\n\ndescribe('Serenity Screenplay with Playwright', () => {\n\n    describe('New Todo', () => {\n\n        // inject default actor:\n        it('should allow me to add todo items', async ({ actor, email }) => {\n\n            // define test workflow\n            await actor.attemptsTo(\n                Log.the(email),\n            )\n        })\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Running Jasmine Tests with Serenity/JS Reporter via CLI (Shell)\nDESCRIPTION: This command demonstrates how to invoke the Jasmine test runner from the command line while specifying the Serenity/JS Jasmine reporter. The `--reporter=@serenity-js/jasmine` argument tells Jasmine to use the installed Serenity/JS reporter for generating reports. Requires Jasmine and `@serenity-js/jasmine` to be installed.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njasmine --reporter=@serenity-js/jasmine\n```\n\n----------------------------------------\n\nTITLE: Performing Verifications Using Ensure in Serenity/JS\nDESCRIPTION: Example demonstrating how to use the Ensure interaction to verify page titles using the endsWith expectation. This shows a basic verification within the Screenplay Pattern.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Ensure, endsWith } from '@serenity-js/assertions'\nimport { actorCalled } from '@serenity-js/core'\nimport { Navigate, Page } from '@serenity-js/web'\n\nawait actorCalled('Erica').attemptsTo(\n    Navigate.to('https://serenity-js.org'),\n    Ensure.that(\n        Page.current().title(), \n        endsWith('Serenity/JS')\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Running Cucumber 7.x+ with Serenity/JS\nDESCRIPTION: Command line usage for running Cucumber.js version 7.x or newer with Serenity/JS adapter.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncucumber-js --format @serenity-js/cucumber \\\n    --require ./features/support/setup.js \\\n    --require ./features/step_definitions/sample.steps.js\n```\n\n----------------------------------------\n\nTITLE: Configuring WebdriverIO for Serenity/JS\nDESCRIPTION: This TypeScript configuration file for WebdriverIO is integrated with Serenity/JS. It sets up the testing framework, specifies reporting services, and outlines options for various test runners. Key configuration includes setting up the Serenity/JS framework with WebdriverIO 8 adapter, registering reporting services, and enabling TypeScript compilation for test file execution.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\n// wdio.conf.ts\nimport { WebdriverIOConfig } from '@serenity-js/webdriverio-8';\n\nexport const config: WebdriverIOConfig = {\n\n    // Tell WebdriverIO to use Serenity/JS framework with the WebdriverIO 8 adapter\n    // When you're ready to upgrade to WebdriverIO 9, switch to '@serenity-js/webdriverio'\n    framework: '@serenity-js/webdriverio-8',\n\n    // Serenity/JS configuration\n    serenity: {\n        // Configure Serenity/JS to use the appropriate adapter\n        // for your test runner\n        runner: 'cucumber', // or 'mocha', or 'jasmine'\n\n        // Register Serenity/JS reporting services, a.k.a. the \"stage crew\"\n        crew: [\n            // Optional, print test execution results to standard output\n            '@serenity-js/console-reporter',\n\n            // Optional, produce Serenity BDD reports\n            // and living documentation (HTML)\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', {\n                outputDirectory: 'target/site/serenity'\n            } ],\n\n            // Optional, automatically capture screenshots\n            // upon interaction failure\n            [ '@serenity-js/web:Photographer', {\n                strategy: 'TakePhotosOfFailures'\n            } ],\n        ]\n    },\n\n    // Location of your test files\n    specs: [\n        './test/specs/**/*.spec.ts',    // for Mocha or Jasmine\n        // './features/**/*.feature',   // for Cucumber\n    ],\n\n    // Configure your Cucumber runner\n    cucumberOpts: {\n        // see Cucumber configuration options below\n    },\n\n\n    // ... or Jasmine runner\n    jasmineOpts: {\n        // see Jasmine configuration options below\n    },\n\n    // ... or Mocha runner\n    mochaOpts: {\n        // see Mocha configuration options below\n    },\n\n    runner: 'local',\n\n    // Enable TypeScript in-memory compilation\n    autoCompileOpts: {\n        autoCompile: true,\n        tsNodeOpts: {\n            transpileOnly: true,\n            project: 'tsconfig.json'\n        }\n    },\n\n    // Any other WebdriverIO configuration\n};\n```\n\n----------------------------------------\n\nTITLE: Adapting Playwright Component Test for Serenity/JS Fixtures - Diff\nDESCRIPTION: Illustrates how to modify a Playwright component test to use Serenity/JS's useBase fixture utility. This diff highlights the introduction of useBase and how the component test runner is wrapped to provide Serenity/JS-friendly APIs. Requires @playwright/experimental-ct-react, @serenity-js/playwright-test, as well as an App component. Inputs include componentTest and test definitions; outputs include test and expect bindings compatible with Serenity/JS fixtures.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_9\n\nLANGUAGE: diff\nCODE:\n```\n// src/App.spec.tsx\n- import { test, expect } from '@playwright/experimental-ct-react'\n+ import { test as componentTest } from '@playwright/experimental-ct-react'\n+ import { useBase } from '@serenity-js/playwright-test'\n\n+ const { test, expect } = useBase(componentTest)\n\nimport App from './App'\n\ntest.use({ viewport: { width: 500, height: 500 } })\n\ntest('should work', async ({ mount }) => {\n  const component = await mount(<App />)\n  await expect(component).toContainText('Learn React')\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Actor Cast\nDESCRIPTION: Example demonstrating how to implement a custom Cast class for scenarios where different actors need different configurations.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\n\nimport { Cast } from '@serenity-js/core'\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from '@serenity-js/playwright'\nimport { test } from '@serenity-js/playwright-test'\nimport { CallAnApi } from '@serenity-js/rest'\nimport { Browser } from 'playwright'\n\nclass Actors implements Cast {\n    constructor(\n        private readonly browser: Browser,\n        private readonly options: PlaywrightOptions,\n    ) {\n    }\n\n    prepare(actor: Actor) {\n        switch (actor.name) {\n            case 'James':\n                return actor.whoCan(BrowseTheWebWithPlaywright.using(this.browser, this.options))\n            default:\n                return actor.whoCan(CallAnApi.at(this.options.baseURL))\n        }\n    }\n}\n\ntest.use({\n    actors: async ({ browser, config }) => {\n        await use(new Actors(browser, {\n            defaultNavigationWaitUntil: 'domcontentloaded'\n        }))\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS with JavaScript Setup\nDESCRIPTION: JavaScript setup file that configures Serenity/JS reporting services for use with Mocha.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst \n    { ConsoleReporter } = require('@serenity-js/console-reporter'),\n    { configure } = require('@serenity-js/core');\n\nconfigure({\n    crew: [\n        ConsoleReporter.forDarkTerminals(),\n    ],\n})\n```\n\n----------------------------------------\n\nTITLE: Writing a Sample Serenity/JS Mocha Test Suite in TypeScript\nDESCRIPTION: This TypeScript example file demonstrates a basic Serenity/JS test scenario using Mocha and WebdriverIO, located at ./test/specs/example.spec.ts. It imports assertion, core, and web automation modules from Serenity/JS and defines a test that navigates to a specified URL before validating page content. Dependencies include @serenity-js/assertions, @serenity-js/core, @serenity-js/web, Mocha, and WebdriverIO. The main test checks if the text of a page element (with id 'cta-start-automating') matches 'Start automating 🚀'. Input requirements: all required packages must be installed via npm and a webdriver-compatible browser must be available. Output: the test result is reported via the configured reporter.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio/README.md#2025-04-22_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\n// ./test/specs/example.spec.ts\nimport { describe, it } from 'mocha'\n\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { actorCalled } from '@serenity-js/core'\nimport { By, Navigate, PageElement, Text } from '@serenity-js/web'\n\ndescribe('Example', () => {\n\n    it('interacts with a web page', async () => {\n\n        await actorCalled('Alice').attemptsTo(\n            Navigate.to('https://serenity-js.org'),\n            Ensure.that(\n                Text.of(PageElement.located(By.id('cta-start-automating'))),\n                equals('Start automating 🚀')\n            ),\n        )\n    })\n    \n    // ... other examples\n})\n```\n\n----------------------------------------\n\nTITLE: Core Implementation: Optional Chaining Support\nDESCRIPTION: Adds support for Optional chaining and introduces the isPresent expectation. Includes refactored expectations and replacement of Adapter with QuestionAdapter.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nAdapter` with `QuestionAdapter` and introduced `Optional`\n```\n\n----------------------------------------\n\nTITLE: Using BDD-Style Syntax with Serenity/JS\nDESCRIPTION: Example demonstrating BDD-style test syntax using Serenity/JS describe/it blocks with configuration options.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\nimport { describe, it, test } from '@serenity-js/playwright-test'\n\ntest.use({\n    headless: true,\n})\n\ndescribe('Serenity Screenplay with Playwright', () => {\n    \n    describe('New Todo', () => {\n\n        it('should allow me to add todo items', async ({ page }) => {\n            //...\n        })\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Creating an Express HTTP Server\nDESCRIPTION: Implementation of a simple HTTP server using Express framework that responds with 'Hello World!' on the root path. This demonstrates how to use Express with Serenity/JS local server.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// listener.js\nconst express = require('express')\n\nmodule.exports.requestListener = express().\n    get('/', (req: express.Request, res: express.Response) => {\n        res.status(200).send('Hello World!')\n    })\n```\n\n----------------------------------------\n\nTITLE: Programmatically Registering Serenity/JS Reporter in Jasmine (TypeScript)\nDESCRIPTION: This TypeScript snippet shows how to integrate the Serenity/JS reporter programmatically. It imports the reporter factory from `@serenity-js/jasmine` and registers an instance with the current Jasmine environment using `jasmine.getEnv().addReporter()`. An optional configuration object can be provided, in this case, setting the `specDirectory` to 'e2e'. Requires the `@serenity-js/jasmine` module and a Jasmine environment.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport serenityReporterForJasmine = require('@serenity-js/jasmine')\n\njasmine.getEnv().addReporter(serenityReporterForJasmine({ specDirectory: 'e2e' }))\n```\n\n----------------------------------------\n\nTITLE: Creating Browser Context Options with Viewport Configuration in Playwright\nDESCRIPTION: Creates browser context options for Playwright, setting viewport dimensions based on provided width and height or using default values. This function helps in standardizing browser window configuration.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/spec/io/finder-examples/file1.txt#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * @package\n */\nexport function browserContextOptionsFor(options: { width?: number, height?: number } = {}): object {\n    const { width, height } = options;\n\n    return {\n        viewport: {\n            width:  width  || DEFAULT_BROWSER_WIDTH,\n            height: height || DEFAULT_BROWSER_HEIGHT,\n        },\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Protractor with Serenity/JS\nDESCRIPTION: Configuration file for setting up Protractor with Serenity/JS, including test runner selection and reporting options\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexports.config = {\n    framework:      'custom',\n    frameworkPath:  require.resolve('@serenity-js/protractor/adapter'),\n    serenity: {\n        runner: 'jasmine',\n        crew: [\n            '@serenity-js/console-reporter',\n            '@serenity-js/serenity-bdd',\n            [ '@serenity-js/core:ArtifactArchiver', { outputDirectory: './target/site/serenity' } ],\n            [ '@serenity-js/web:Photographer', {\n                strategy: 'TakePhotosOfFailures'\n            } ],\n        ]\n    },\n    cucumberOpts: {},\n    jasmineNodeOpts: {},\n    mochaOpts: {}\n}\n```\n\n----------------------------------------\n\nTITLE: Feature: Web portable APIs for ModalDialog windows (rc.20)\nDESCRIPTION: Introduces new, portable APIs for handling modal dialog windows (like alerts, prompts, confirms) consistently across different web drivers. Addresses issues #1236, #805, and #1156.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: text\nCODE:\n```\nc94d0ec\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/c94d0ec43d2bc8aa39f8824f5d0f1e1cbcf137a1\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\nLANGUAGE: text\nCODE:\n```\n#805\n```\n\nLANGUAGE: text\nCODE:\n```\n#1156\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS with TypeScript\nDESCRIPTION: TypeScript configuration file for Serenity/JS when used with Cucumber.js.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// features/support/setup.ts\n\nimport { configure } from '@serenity-js/core'\n\nconfigure({\n    // ... configure Serenity/JS \n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Koa HTTP Server\nDESCRIPTION: Implementation of a simple HTTP server using the Koa framework that responds with 'Hello World!'. This demonstrates how to use Koa with Serenity/JS local server.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// listener.js\nconst Koa = require('koa')\n\nmodule.exports.requestListener = new Koa()\n    .use(ctx => Promise.resolve(ctx.body = 'Hello World!'))\n    .callback()\n```\n\n----------------------------------------\n\nTITLE: Feature: Clear interaction with 'contenteditable' elements (rc.30)\nDESCRIPTION: Enables the 'Clear' interaction to work correctly with elements marked as 'contenteditable' across all Serenity/JS web tools. This feature addresses issue #1306.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nc53b00d\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/c53b00dac512977c00e5eadc101e281997f8e0de\n```\n\nLANGUAGE: text\nCODE:\n```\n#1306\n```\n\n----------------------------------------\n\nTITLE: Configuring Playwright Browser with Custom Arguments\nDESCRIPTION: Utility function that transforms a collection of browser arguments into a format compatible with Playwright configuration. It ensures proper formatting and handles special cases like headless mode.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/spec/io/finder-examples/file1.txt#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * @package\n */\nexport function useBrowserArgumentsFrom(browserArgs: string[]): (existingArgs: string[]) => string[] {\n    return (existingArgs: string[]) => {\n        return [\n            ...existingArgs,\n            ...browserArgs,\n        ];\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Restify HTTP Server\nDESCRIPTION: Implementation of a simple HTTP server using the Restify framework that responds with 'Hello World!' on the root path. This demonstrates how to use Restify with Serenity/JS local server.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// listener.js\nconst restify = require('restify')\n\nconst server = restify.createServer(options)\n\nserver.get('/', (req, res, next) => {\n    res.send('Hello World!')\n})\n\nmodule.exports.requestListener = server\n```\n\n----------------------------------------\n\nTITLE: Customizing Actor Abilities\nDESCRIPTION: Example showing how to customize actor abilities by configuring additional capabilities like TakeNotes and CallAnApi.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\n\nimport { Cast, TakeNotes } from '@serenity-js/core'\nimport { test } from '@serenity-js/playwright-test'\nimport { BrowseTheWebWithPlaywright } from '@serenity-js/playwright'\nimport { CallAnApi } from '@serenity-js/rest'                            \n\ntest.use({\n    actors: async ({ browser, baseURL }, use) => {\n        await use(\n            Cast.where(actor => actor.whoCan(\n                BrowseTheWebWithPlaywright.using(browser),\n                TakeNotes.usingAnEmptyNotepad(),\n                CallAnApi.at(baseURL),\n            ))\n        )\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Programmatic Configuration of Serenity/JS Console Reporter\nDESCRIPTION: TypeScript code for programmatically configuring Serenity/JS Console Reporter. This setup demonstrates how to add the ConsoleReporter to the Serenity/JS crew using the configure function.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { configure } from '@serenity-js/core'\nimport { ConsoleReporter } from '@serenity-js/console-reporter'\n\nconfigure({\n    crew: [\n        ConsoleReporter.withDefaultColourSupport(),\n    ],\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a HAPI HTTP Server\nDESCRIPTION: Implementation of a simple HTTP server using the HAPI framework that responds with 'Hello World!' on the root path. This demonstrates how to use HAPI with Serenity/JS local server.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// listener.js\nconst hapi = require('@hapi/hapi')\n\nconst server = new hapi.Server()\nserver.route({ method: 'GET', path: '/', handler: (req, h) => 'Hello World!' })\n\nmodule.exports.requestListener = server.listener\n```\n\n----------------------------------------\n\nTITLE: Using Clear Interaction for Form Fields in Serenity-JS\nDESCRIPTION: Demonstrates the `Clear.theValueOf(field)` interaction from `@serenity-js/web`, used to clear the content of input fields or contenteditable elements. This interaction ensures compatibility across different web driver implementations (like Protractor, Playwright, WebdriverIO) by triggering appropriate browser events (issue #1329) and also works with 'contenteditable' elements (issue #1306).\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nClear.theValueOf(field)\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS Playwright Test Fixtures\nDESCRIPTION: Example showing how to replace default Playwright test fixtures with Serenity/JS fixtures in a test file.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\n+ import { test } from '@serenity-js/playwright-test'\n- import { test } from '@playwright/test'\n\ntest.describe('Serenity Screenplay with Playwright', () => {\n    \n    test.describe('New Todo', () => {\n\n        test('should allow me to add todo items', async ({ page }) => {\n            //...\n        })\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS REST Module and Dependencies\nDESCRIPTION: Command to install the Serenity/JS REST module along with core, assertions, and the axios HTTP client using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/rest/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/rest @serenity-js/assertions axios\n```\n\n----------------------------------------\n\nTITLE: Asserting Element Absence with not(isPresent) in Serenity-JS\nDESCRIPTION: Illustrates the use of the `not(isPresent())` expectation within Serenity-JS assertions. This specific example highlights a correction made for `PlaywrightPageElement` to ensure accurate checks for the absence of web elements (issue #1240).\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnot(isPresent())\n```\n\n----------------------------------------\n\nTITLE: Example Web Test with Serenity/JS and Protractor\nDESCRIPTION: Sample test code demonstrating web interaction using Serenity/JS with Protractor, including page object pattern implementation\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { actorCalled } from '@serenity-js/core'\nimport { Ensure, equals } from '@serenity-js/assertions'\nimport { By, Navigate, Target, Text } from '@serenity-js/web'\nimport { BrowseTheWebWithProtractor } from '@serenity-js/protractor'\nimport { protractor } from 'protractor'\n\nclass SerenityJSWebsite {\n    static header = () =>\n        PageElement.located(By.css('h1'))\n            .describedAs('header')\n}\n\ndescribe('Serenity/JS', () => {\n    \n    it('works with Protractor and Jasmine', async () => {\n        await actorCalled('Priya')\n            .whoCan(\n                BrowseTheWebWithProtractor.using(protractor.browser)\n            )\n            .attemptsTo(\n                Navigate.to('https://serenity-js.org'),\n                Ensure.that(\n                    Text.of(SerenityJSWebsite.header()), \n                    equals('Next generation acceptance testing')\n                ),\n            )\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: WebdriverIO Configuration with Serenity/JS\nDESCRIPTION: TypeScript configuration for integrating WebdriverIO with Serenity/JS and Mocha.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport const config = {\n    framework: '@serenity-js/webdriverio',\n\n    serenity: {\n        runner: 'mocha',\n    },\n\n    mochaOpts: {\n        reporterOptions: [\n            'specDirectory=e2e'\n        ],\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Mocha and Serenity/JS Dependencies\nDESCRIPTION: Commands for installing Mocha test runner and required Serenity/JS packages via npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev mocha@8.x\nnpm install --save-dev @serenity-js/core @serenity-js/console-reporter @serenity-js/mocha\n```\n\n----------------------------------------\n\nTITLE: Feature: Web Introduce PagesContext and PlaywrightPage (rc.20)\nDESCRIPTION: Introduces the concept of PagesContext (later renamed BrowsingSession) and implements the PlaywrightPage adapter as part of the Playwright integration effort. Relates to issue #1236.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: text\nCODE:\n```\n0045a72\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/0045a726d540871333f644928218aed00bcd372c\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\n----------------------------------------\n\nTITLE: Installing Cucumber 9.x\nDESCRIPTION: Command to install Cucumber.js version 9.x using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @cucumber/cucumber\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Playwright Dependencies\nDESCRIPTION: Command to install required Serenity/JS modules for Playwright integration including assertions, reporters, core functionality and web testing capabilities.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @serenity-js/assertions @serenity-js/console-reporter @serenity-js/core @serenity-js/serenity-bdd @serenity-js/web @serenity-js/playwright\n```\n\n----------------------------------------\n\nTITLE: Feature: Playwright isVisible and consistent visibility checks (rc.20)\nDESCRIPTION: Implements support for the `isVisible` expectation in the Playwright module and ensures consistent visibility check logic across all web integration modules. Relates to issue #1236.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: text\nCODE:\n```\n2c5c929\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/2c5c929802f894f9fe59438a01f08b1b7bec3318\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Modules Using NPM\nDESCRIPTION: This snippet demonstrates how to install the required Serenity/JS modules to an existing WebdriverIO 8 project using NPM. The included packages cover core functionality, web interaction, and various reporting capabilities. All necessary Serenity/JS modules are specified for installation via the `--save-dev` flag.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/web @serenity-js/webdriverio-8 @serenity-js/assertions @serenity-js/rest @serenity-js/console-reporter @serenity-js/serenity-bdd\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS with JavaScript\nDESCRIPTION: JavaScript configuration file for Serenity/JS when used with Cucumber.js.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// features/support/setup.js\n\nconst { configure } = require('@serenity-js/core')\n\nconfigure({\n    // ... configure Serenity/JS \n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Node.js HTTP Request Listener\nDESCRIPTION: Implementation of a simple HTTP server using raw Node.js that responds with 'Hello World!'. This is the most basic implementation using Node's built-in HTTP module.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// listener.js\nmodule.exports.requestListener = (request, response) => {\n  response.setHeader('Connection', 'close')\n  response.end('Hello World!')\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Browser Dimensions in Playwright with Serenity-JS\nDESCRIPTION: Defines the default width and height dimensions for browser windows in Playwright. These constants are used as fallback values when specific dimensions are not provided in configuration.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/spec/io/finder-examples/file1.txt#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * @package\n */\nexport const DEFAULT_BROWSER_WIDTH  = 1200;\n\n/**\n * @package\n */\nexport const DEFAULT_BROWSER_HEIGHT = 800;\n```\n\n----------------------------------------\n\nTITLE: Mocha Configuration with Serenity/JS\nDESCRIPTION: YAML configuration for Mocha with Serenity/JS integration settings.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nreporter: '@serenity-js/mocha'\nrequire:\n  - ts-node/register\n  - spec/support/setup.ts\ncheck-leaks: false\ntimeout: 5000\nv8-stack-trace-limit: 100\n```\n\n----------------------------------------\n\nTITLE: Implementing Single-Actor Scenarios\nDESCRIPTION: Example showing how to use the actor fixture with navigation and assertions in a single-actor test scenario.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// example.spec.ts\n\nimport { describe, it, test } from '@serenity-js/playwright-test'   // import fixtures\nimport { Navigate, Page } from '@serenity-js/playwright'            // import Screenplay Pattern web APIs\nimport { Ensure, equals } from '@serenity-js/assertions'            // import Screenplay Pattern assertion APIs                            \n\ntest.use({\n    headless: true,\n    defaultActorName: 'Serena'  // change default actor name\n})\n\ndescribe('Serenity Screenplay with Playwright', () => {\n    \n    describe('New Todo', () => {\n\n        // inject default actor:\n        it('should allow me to add todo items', async ({ actor }) => { \n            \n            // define test workflow\n            await actor.attemptsTo(                                                  \n                Navigate.to('https://todo-app.serenity-js.org/'),\n                Ensure.that(Page.current().title(), equals('Serenity/JS TodoApp')),\n            )\n        })\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Feature: Initial Playwright support (rc.20)\nDESCRIPTION: Introduces initial integration and support for the Playwright test automation framework within Serenity/JS. Addresses issues #493, #563, and #911.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: text\nCODE:\n```\n87e88a1\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/87e88a16cdc06477ed25eb83f9597fd370fdc109\n```\n\nLANGUAGE: text\nCODE:\n```\n#493\n```\n\nLANGUAGE: text\nCODE:\n```\n#563\n```\n\nLANGUAGE: text\nCODE:\n```\n#911\n```\n\n----------------------------------------\n\nTITLE: Protractor Configuration with Serenity/JS\nDESCRIPTION: JavaScript configuration for integrating Protractor with Serenity/JS and Mocha.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nexports.config = {\n    framework:      'custom',\n    frameworkPath:  require.resolve('@serenity-js/protractor/adapter'),\n  \n    serenity: {\n        runner: 'mocha',\n    },\n\n    mochaOpts: {\n        reporterOptions: [\n            'specDirectory=e2e'\n        ],\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Feature: Playwright Select interaction for dropdowns (rc.20)\nDESCRIPTION: Adds the 'Select' interaction specifically for Playwright, allowing automated selection of options within HTML `<select>` dropdown elements. Relates to issue #1236.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: text\nCODE:\n```\n009041d\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/009041d83e22ddf3fef14670e0e5fd6d11cdfc73\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\n----------------------------------------\n\nTITLE: Serenity/JS TypeScript Setup Configuration\nDESCRIPTION: TypeScript setup file for configuring Serenity/JS reporting services.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ConsoleReporter } from '@serenity-js/console-reporter'\nimport { configure } from '@serenity-js/core'\n\nconfigure({\n    crew: [\n        ConsoleReporter.forDarkTerminals(),\n    ],\n})\n```\n\n----------------------------------------\n\nTITLE: Feature: Playwright frame handling support (rc.20)\nDESCRIPTION: Adds functionality to the Playwright integration for working with iframes and frames within web pages. Relates to issue #1236.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: text\nCODE:\n```\n89d4621\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/89d46212073a342fe812a3ad2638a2ad0c39b620\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration for Serenity/JS\nDESCRIPTION: TypeScript tsconfig.json configuration for running Serenity/JS tests.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"es2018\",\n    \"lib\": [\"es2018\"],\n    \"module\": \"commonjs\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Default Note-Taking Ability in Protractor\nDESCRIPTION: Shows the `TakeNotes` ability, which is now assigned by default to actors in Serenity-JS Protractor setups alongside web browsing, as per issue #1523. This allows actors to store and retrieve arbitrary notes during test execution, facilitating state management across steps.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nTakeNotes\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS Console Reporter with WebdriverIO\nDESCRIPTION: TypeScript configuration for using Serenity/JS Console Reporter with WebdriverIO. This setup includes the console reporter in the Serenity/JS crew.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// wdio.conf.ts\n\nimport { WebdriverIOConfig } from '@serenity-js/webdriverio'\n\nexport const config: WebdriverIOConfig = {\n\n    framework: '@serenity-js/webdriverio',\n\n    serenity: {\n        crew: [\n            // console reporter with default settings\n            '@serenity-js/console-reporter',\n\n            // console reporter with a theme for 'dark', 'light' or 'mono' terminals\n            // [ '@serenity-js/console-reporter', { theme: 'auto' } ]  \n        ]\n    },\n\n    // Other configuration omitted for brevity\n    // For details, see https://webdriver.io/docs/options\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Interaction Timeout in Protractor\nDESCRIPTION: Illustrates the use of the `interactionTimeout` configuration option within the Serenity-JS Protractor adapter. When provided in the configuration, this custom timeout value is now correctly used for interactions, fixing issue #1604.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninteractionTimeout\n```\n\n----------------------------------------\n\nTITLE: Script to Run and Generate Serenity BDD Reports\nDESCRIPTION: The JSON script snippet showcases how to execute a full test cycle using npm scripts. It includes cleaning previous test reports, executing WebdriverIO tests, and running Serenity BDD report generation. It utilizes `npm-failsafe` to ensure report generation even if the tests fail.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scripts\": {\n    \"test\": \"failsafe test:clean test:wdio test:report\",\n    \"test:clean\": \"rimraf target\",\n    \"test:wdio\": \"wdio run ./wdio.conf.ts\",\n    \"test:report\": \"serenity-bdd run\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Cucumber and Core Modules\nDESCRIPTION: Command to install the Serenity/JS Cucumber adapter and core modules using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @serenity-js/cucumber @serenity-js/core\n```\n\n----------------------------------------\n\nTITLE: Feature: Web standardised deep CSS selector support (rc.20)\nDESCRIPTION: Standardizes support for deep CSS selectors (like >>> or /deep/) across all Serenity/JS web integration modules (e.g., Playwright, WebdriverIO, Protractor). Addresses issue #1238.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: text\nCODE:\n```\ne9e3f28\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/e9e3f281191fc5c891841b6c8aab41213da3b0f5\n```\n\nLANGUAGE: text\nCODE:\n```\n#1238\n```\n\n----------------------------------------\n\nTITLE: Feature: Combined Frame and PageElement for Switch interaction (rc.13)\nDESCRIPTION: Combines the concepts of Frame and PageElement so that actors can `Switch` to either using a unified interaction. Addresses multiple related issues: #82, #227, #233, #365.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_32\n\nLANGUAGE: text\nCODE:\n```\n1b7ab7c\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/1b7ab7c828034a14ba801cbfa97acc203fd55adf\n```\n\nLANGUAGE: text\nCODE:\n```\n#82\n```\n\nLANGUAGE: text\nCODE:\n```\n#227\n```\n\nLANGUAGE: text\nCODE:\n```\n#233\n```\n\nLANGUAGE: text\nCODE:\n```\n#365\n```\n\n----------------------------------------\n\nTITLE: Running Cucumber 3.x-6.x with Serenity/JS\nDESCRIPTION: Command line usage for running Cucumber.js versions 3.x to 6.x with Serenity/JS adapter.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncucumber-js --format node_modules/@serenity-js/cucumber \\\n    --require ./features/support/setup.js \\\n    --require ./features/step_definitions/sample.steps.js\n```\n\n----------------------------------------\n\nTITLE: Assigning Default Protractor Web Browsing Ability\nDESCRIPTION: Shows the `BrowseTheWebWithProtractor` ability, which is now assigned by default to actors in Serenity-JS Protractor setups as per issue #1523. This simplifies configuration by automatically providing actors with web browsing capabilities.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nBrowseTheWebWithProtractor\n```\n\n----------------------------------------\n\nTITLE: Running Cucumber 0.x-2.x with Serenity/JS\nDESCRIPTION: Command line usage for running Cucumber.js versions 0.x to 2.x with Serenity/JS adapter.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncucumber-js --require=node_modules/@serenity-js/cucumber/lib/index.js \\\n    --require ./features/support/setup.js \\\n    --require ./features/step_definitions/sample.steps.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Web promise handling correction (rc.21)\nDESCRIPTION: Corrects promise handling within the web modules to prevent 'unhandled promise rejection' warnings.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: text\nCODE:\n```\ndaac705\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/daac705174683425109591e25139b5172fbdd7d3\n```\n\n----------------------------------------\n\nTITLE: Fix: Playwright not(isPresent()) correction (rc.28)\nDESCRIPTION: Corrects the behavior of the `not(isPresent())` expectation for PlaywrightPageElement in the Playwright integration module. Addresses issue #1240.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n0693b2f\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/0693b2f2666a8de327c990c72ecf42fc3d7da498\n```\n\nLANGUAGE: text\nCODE:\n```\n#1240\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Dependencies with NPM\nDESCRIPTION: Shell commands to initialize a Playwright project and install required Serenity/JS modules.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm init playwright@latest\n\nnpm install --save-dev @serenity-js/assertions @serenity-js/console-reporter @serenity-js/core @serenity-js/serenity-bdd @serenity-js/web @serenity-js/playwright @serenity-js/playwright-test\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS Console Reporter with Protractor\nDESCRIPTION: JavaScript configuration for using Serenity/JS Console Reporter with Protractor. This setup includes the console reporter in the Serenity/JS crew.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// protractor.conf.js\n\nexports.config = {\n\n    framework:      'custom',\n    frameworkPath:  require.resolve('@serenity-js/protractor/adapter'),\n\n    serenity: {\n        crew: [\n            // console reporter with default settings\n            '@serenity-js/console-reporter',\n\n            // console reporter with a theme for 'dark', 'light' or 'mono' terminals\n            // [ '@serenity-js/console-reporter', { theme: 'auto' } ]  \n        ]\n    },\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core and Assertions Modules\nDESCRIPTION: Command to install the Serenity/JS core and assertions packages as development dependencies using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/assertions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/assertions\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core and Console Reporter\nDESCRIPTION: Command to install the Serenity/JS core and console reporter packages using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/console-reporter\n```\n\n----------------------------------------\n\nTITLE: Configuring Serenity/JS Console Reporter with Playwright Test\nDESCRIPTION: TypeScript configuration for using Serenity/JS Console Reporter with Playwright Test. This setup allows for printing progress reports to standard output.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// playwright.config.ts\nimport type { PlaywrightTestConfig } from '@serenity-js/playwright-test'\n\nconst config: PlaywrightTestConfig = {\n    reporter: [\n        [ '@serenity-js/playwright-test', {\n            crew: [\n                // console reporter with default settings\n                '@serenity-js/console-reporter',\n                \n                // console reporter with a theme for 'dark', 'light' or 'mono' terminals\n                // [ '@serenity-js/console-reporter', { theme: 'auto' } ]                \n            ]\n        }]\n    ],\n\n    // Other configuration omitted for brevity\n    // For details, see https://playwright.dev/docs/test-configuration    \n}\n\nexport default config\n```\n\n----------------------------------------\n\nTITLE: Fix: Web PageElementLocator reliability for WebdriverIO/Protractor (rc.22)\nDESCRIPTION: Improves the reliability of the PageElementLocator implementation within the web module, specifically for interactions with WebdriverIO and Protractor. This addresses issue #805.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: text\nCODE:\n```\nb19d19a\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/b19d19aedc0d60d4068191e7eb83943b9268e39a\n```\n\nLANGUAGE: text\nCODE:\n```\n#805\n```\n\n----------------------------------------\n\nTITLE: Initializing Serenity/JS Project with WebdriverIO via Shell Command\nDESCRIPTION: This shell snippet guides users to create a new Serenity/JS project scaffolded by the WebdriverIO CLI. It initializes a project in a subdirectory (e.g., ./my-project) and installs necessary dependencies. Users must have Node.js and npm installed. This command is typically run in a terminal and prompts for test runner and framework configuration. It expects no arguments except the destination folder; the wizard collects the rest interactively.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm init wdio ./my-project\n```\n\n----------------------------------------\n\nTITLE: Setting Spec Directory for Cucumber\nDESCRIPTION: Command line option to set the spec directory for Cucumber.js.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n'--format-options', `{ \"specDirectory\": \"${ path.resolve(__dirname, '../../cucumber-specs/features') }\" }`,\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core and Protractor\nDESCRIPTION: Command to install the core Serenity/JS modules and Protractor integration\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/protractor\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core and Local Server modules\nDESCRIPTION: Command to install the required Serenity/JS modules for managing local test servers.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/local-server\n```\n\n----------------------------------------\n\nTITLE: Enhancing Error Reporting\nDESCRIPTION: This feature adds nested error causes to the main error message in the core package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** nested error cause is now added to the main error message ([815c8ce](https://github.com/serenity-js/serenity-js/commit/815c8ce54205d813224cb5746e42bc48b7c388c9)), closes [#1823](https://github.com/serenity-js/serenity-js/issues/1823)\n```\n\n----------------------------------------\n\nTITLE: Fix: WebdriverIO Puppeteer modal dialog handler resiliency (rc.20)\nDESCRIPTION: Improves the robustness and error handling of the WebdriverIOPuppeteerModalDialogHandler. This addresses issue #805.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n5e56edf\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/5e56edf875a6d21cabbe02505179e98d05bc89b7\n```\n\nLANGUAGE: text\nCODE:\n```\n#805\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated WebdriverIO dependencies (rc.26)\nDESCRIPTION: Updates the WebdriverIO dependencies used within the '@serenity-js/webdriverio' package to version 7.20.9.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nda3ff9c\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/da3ff9c4c55f59758450fc8428e0596f3d372ce6\n```\n\nLANGUAGE: text\nCODE:\n```\n7.20.9\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core and Jasmine Adapter via npm (Shell)\nDESCRIPTION: This command uses the Node Package Manager (npm) to install the core Serenity/JS library and the specific adapter for the Jasmine test runner. The `--save-dev` flag ensures these packages are added to the project's `devDependencies`. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install --save-dev @serenity-js/core @serenity-js/jasmine\n```\n\n----------------------------------------\n\nTITLE: Fix: Core SceneFinishes event simplification (rc.28)\nDESCRIPTION: Simplifies the structure or handling of the SceneFinishes event within the Serenity/JS core module. Related to issue #1240.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n9ad947a\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/9ad947adc49cefd9b64f48b02bc173f073f545c4\n```\n\nLANGUAGE: text\nCODE:\n```\n#1240\n```\n\n----------------------------------------\n\nTITLE: Fixing bug in WithStage class move\nDESCRIPTION: Bug fix involving moving the WithStage class to @serenity-js/core package and simplifying Serenity/JS listener registration in Cucumber.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/cucumber-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Git\nCODE:\n```\n30184f8 WithStage moved to @serenity-js/core\nb0e52c2 Simplified how the Serenity/JS listener is registered\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Core Package with npm\nDESCRIPTION: Command to install the core Serenity/JS package. This package is the heart of the framework, enabling configuration, actor management, and providing building blocks for acceptance tests.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @serenity-js/core\n```\n\n----------------------------------------\n\nTITLE: Fix: Web module iframe context handling (rc.30)\nDESCRIPTION: Corrects the handling of iframe contexts within the current page across all web modules in Serenity/JS. This fix addresses issue #1310.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nbcb8672\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/bcb86722dfcaa023613e63fb8bd2e14d6d546efd\n```\n\nLANGUAGE: text\nCODE:\n```\n#1310\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated Axios dependency in REST module (rc.19)\nDESCRIPTION: Updates the Axios HTTP client library dependency to version 0.27.2 within the Serenity/JS REST module. This addresses Axios issue #4124 and Serenity/JS issue #1223.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: text\nCODE:\n```\nb54694b\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/b54694ba3dd2b8e0316d94c44381f51b1ab79ad0\n```\n\nLANGUAGE: text\nCODE:\n```\naxios/axios#4124\n```\n\nLANGUAGE: text\nCODE:\n```\n#1223\n```\n\nLANGUAGE: text\nCODE:\n```\n0.27.2\n```\n\n----------------------------------------\n\nTITLE: Installing Serenity/JS Reporters via NPM - Bash\nDESCRIPTION: Shows the npm install command required to add Serenity/JS Console Reporter and Serenity BDD integration packages to a project as development dependencies. There are no inputs or outputs, but prerequisites include npm, a Node.js environment, and an initialized package.json file.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright-test/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @serenity-js/console-reporter @serenity-js/serenity-bdd\n```\n\n----------------------------------------\n\nTITLE: Version Bump: @serenity-js/webdriverio (rc.24)\nDESCRIPTION: Indicates a version bump specifically for the '@serenity-js/webdriverio' package without other listed changes in this release candidate.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n@serenity-js/webdriverio\n```\n\n----------------------------------------\n\nTITLE: Fix: WebdriverIO use local browser object (rc.25)\nDESCRIPTION: Modifies the WebdriverioPage implementation to use a local browser object instance instead of relying on a global one.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n323be75\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/323be7517ea8b90f967f510c03c744330c5ba2b0\n```\n\n----------------------------------------\n\nTITLE: Web Feature: PageElement Locator Patterns\nDESCRIPTION: Implements advanced PageElement locator patterns to improve element identification and interaction capabilities. Enhances web element selection functionality.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nsupport for advanced PageElement locator patterns\n```\n\n----------------------------------------\n\nTITLE: Fix: Extracted common TypeScript configuration (rc.25)\nDESCRIPTION: Refactors the codebase by extracting common TypeScript configurations into a shared location, likely to improve consistency and maintainability.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n0108370\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/0108370a6a7ebb4bcd71773482801d29f5660268\n```\n\n----------------------------------------\n\nTITLE: Fix: Web rename PagesContext to BrowsingSession (rc.20)\nDESCRIPTION: Renames the internal concept 'PagesContext' to 'BrowsingSession' for better clarity and descriptiveness. Relates to issue #1236.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: text\nCODE:\n```\n6b4e998\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/6b4e9984d80f8f349f367e59bd0e615cd01703ec\n```\n\nLANGUAGE: text\nCODE:\n```\n#1236\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Git Commit Link - Jasmine Dependency\nDESCRIPTION: Git commit URL showing an update to the Jasmine dependency version\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n**deps:** update dependency jasmine to ^5.6.0 ([27933a3](https://github.com/serenity-js/serenity-js/commit/27933a345a0bb148f98e73a83e3715adb93761cd))\n```\n\n----------------------------------------\n\nTITLE: Fix: Core activity invocation location detection on Node 14 (rc.28)\nDESCRIPTION: Ensures that the core activity functionality can correctly detect its invocation location when running on Node.js version 14. This resolves issue #1240.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n41f4776\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/41f4776736620bc32d474d9b66f69c742f8eca96\n```\n\nLANGUAGE: text\nCODE:\n```\n#1240\n```\n\n----------------------------------------\n\nTITLE: Correcting Screenshot Sort Order\nDESCRIPTION: This fix corrects the screenshot sort order in the screenshot detail viewer of the serenity-bdd package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n* **serenity-bdd:** corrected screenshot sort order in screenshot detail viewer ([7537622](https://github.com/serenity-js/serenity-js/commit/7537622d41193e3cf358a1b939c7422bcc3b207f)), closes [#1790](https://github.com/serenity-js/serenity-js/issues/1790)\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Git Commit Link - Core Migration\nDESCRIPTION: Git commit URL showing the migration to PNPM package manager as part of a bug fix\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**core:** migrated to PNPM ([43dbe6f](https://github.com/serenity-js/serenity-js/commit/43dbe6f440d8dd81811da303e542381a17d06b4d)), closes [#2664](https://github.com/serenity-js/serenity-js/issues/2664)\n```\n\n----------------------------------------\n\nTITLE: Feature Addition - Core APIs\nDESCRIPTION: Addition of new APIs to improve the configuration and usage of Serenity/JS framework.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\\n\\n* **core:** new APIs to make configuring and using Serenity/JS easier ([d11a80d](https://github.com/jan-molak/serenity-js/commit/d11a80de66519cb16b6eaa61a39694006a76b5fb))\n```\n\n----------------------------------------\n\nTITLE: Fix: Web dialog error handling during screenshots (rc.20)\nDESCRIPTION: Improves error handling related to JavaScript dialogs (like alerts or confirms) that might appear while taking screenshots in web tests. Addresses issues puppeteer/puppeteer#2481 and serenity-js#1156.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: text\nCODE:\n```\n3cd1149\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/3cd1149ed74df95da17f1054cd4da93b095a4eed\n```\n\nLANGUAGE: text\nCODE:\n```\npuppeteer/puppeteer#2481\n```\n\nLANGUAGE: text\nCODE:\n```\n#1156\n```\n\n----------------------------------------\n\nTITLE: Installing Cucumber.js Adapter\nDESCRIPTION: Command to install Serenity/JS Cucumber.js adapter\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save-dev @serenity-js/cucumber\n```\n\n----------------------------------------\n\nTITLE: Version History Changelog\nDESCRIPTION: Markdown changelog documenting version changes, dependency updates and bug fixes in Serenity.js, focusing on Playwright-related changes. Entries are organized by version number in reverse chronological order.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/playwright/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n## [3.31.13](https://github.com/serenity-js/serenity-js/compare/v3.31.12...v3.31.13) (2025-03-20)\n\n### Bug Fixes\n\n* **deps:** update playwright dependencies to v1.51.1 ([8d059c2](https://github.com/serenity-js/serenity-js/commit/8d059c2fb9ec5d6091b664a24a771205d96f2040))\n\n[...additional version entries...]\n```\n\n----------------------------------------\n\nTITLE: Experimental BrowseTheWeb Extensions\nDESCRIPTION: Added experimental support for mixing custom extensions into BrowseTheWeb functionality.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **protractor:** EXPERIMENTAL: Custom extensions can be mixed into BrowseTheWeb ([3b26baa](https://github.com/serenity-js/serenity-js/commit/3b26baab1f2c2108648d2c3093e69326aaa1dfc4))\n```\n\n----------------------------------------\n\nTITLE: Git Commit for Local Server API Deprecation\nDESCRIPTION: Git commit message about removing deprecated local server API\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\\n\\n* **local-server:** removed deprecated API StartLocalServer.onOneOfThePreferredPorts ([58cc29c](https://github.com/serenity-js/serenity-js/commit/58cc29cae1764e72d9c8e5d9ec26cfc8fe3fc0b7)), closes [#1403](https://github.com/serenity-js/serenity-js/issues/1403)\n```\n\n----------------------------------------\n\nTITLE: Protractor Parameter Description Improvement\nDESCRIPTION: Enhanced the description of the ProtractorParam question to provide better clarity.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **protractor:** improved the description of the ProtractorParam question ([e9e1cae](https://github.com/serenity-js/serenity-js/commit/e9e1caef0b726e1060d1766bce6cf7a9396e118c))\n```\n\n----------------------------------------\n\nTITLE: Upgrading WebdriverIO Package\nDESCRIPTION: This fix upgrades the webdriverio package to TypeScript 5 and WebdriverIO 7.31.1.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: Markdown\nCODE:\n```\n* **webdriverio:** upgraded to TypeScript 5 and WebdriverIO 7.31.1 ([15b1ba7](https://github.com/serenity-js/serenity-js/commit/15b1ba77e157d77123a2e8922414e937c0d2869d)), closes [#1558](https://github.com/serenity-js/serenity-js/issues/1558) [#1651](https://github.com/serenity-js/serenity-js/issues/1651)\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - Jasmine Async Queue\nDESCRIPTION: Fix to ensure the async work queue is empty before marking Jasmine suites as completed.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\\n\\n* **jasmine:** ensure the async work queue is empty before the suite is marked as completed ([ad5a2b6](https://github.com/jan-molak/serenity-js/commit/ad5a2b67a8e2c22c530ea065cef541548d06f3d0)), closes [#56](https://github.com/jan-molak/serenity-js/issues/56)\n```\n\n----------------------------------------\n\nTITLE: Installing Cucumber 6.x or Earlier\nDESCRIPTION: Command to install Cucumber.js version 6.x or earlier using npm.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/cucumber/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev cucumber\n```\n\n----------------------------------------\n\nTITLE: Adding Provenance Statements\nDESCRIPTION: This commit adds provenance statements to the core package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** added provenance statements ([04c2d87](https://github.com/serenity-js/serenity-js/commit/04c2d878be0f2d853b14e4fa390f312688b868cf))\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated TinyTypes dependency (rc.25)\nDESCRIPTION: Updates the TinyTypes library dependency to version 1.19.0 across relevant Serenity/JS packages.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nf6d53e4\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/f6d53e4dbbfcb81139bd888ac11441b6344e47f5\n```\n\nLANGUAGE: text\nCODE:\n```\n1.19.0\n```\n\n----------------------------------------\n\nTITLE: Adding Serenity BDD 4 Support\nDESCRIPTION: This feature adds support for Serenity BDD 4 in the serenity-bdd package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* **serenity-bdd:** support for Serenity BDD 4 ([c15c366](https://github.com/serenity-js/serenity-js/commit/c15c3660f957c21c367f8f27218a05d3fbca78de)), closes [#1147](https://github.com/serenity-js/serenity-js/issues/1147)\n```\n\n----------------------------------------\n\nTITLE: Adding Serenity/JS Adapter for Mocha\nDESCRIPTION: Feature addition entry for the Serenity/JS adapter for Mocha, referenced by commit f4f0f68.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/integration/mocha/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* **mocha:** serenity/JS adapter for Mocha ([f4f0f68](https://github.com/serenity-js/serenity-js/commit/f4f0f680571540f2654e53e1587eb50f01d07ecc))\n```\n\n----------------------------------------\n\nTITLE: Compiling Against ES2021\nDESCRIPTION: This feature updates the core package to compile Serenity/JS against ES2021.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** compile Serenity/JS against ES2021 ([6b31184](https://github.com/serenity-js/serenity-js/commit/6b31184986f78b454ec1eeed53553fba8ebc868c))\n```\n\n----------------------------------------\n\nTITLE: Fix: WebdriverIO configuration handling (rc.25)\nDESCRIPTION: Ensures that configuration settings specific to Serenity/JS are not incorrectly passed down to WebdriverIO-specific services.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n384738e\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/384738e0d7b61b69de24b11ff1fbc32b835a440c\n```\n\n----------------------------------------\n\nTITLE: Configuring Lerna for Serenity/JS Package Management\nDESCRIPTION: This snippet configures Lerna for managing the Serenity/JS project as a monorepo. It specifies the version, package locations, and npm client settings for the project.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/spec/io/finder-examples/nested/file3.txt#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"3.1.1\",\n  \"packages\": [\n    \"packages/*\"\n  ],\n  \"command\": {\n    \"version\": {\n      \"push\": false\n    },\n    \"publish\": {\n      \"ignoreChanges\": [\n        \"*.md\"\n      ],\n      \"bump\": \"patch\",\n      \"message\": \"chore(release): %s\",\n      \"push\": false\n    }\n  },\n  \"npmClient\": \"npm\"\n}\n```\n\n----------------------------------------\n\nTITLE: Runtime Error Class Fix\nDESCRIPTION: Fix to ensure constructor name appears in stack trace for RuntimeError class.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/cucumber-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Git\nCODE:\n```\n0d2164d Corrected the RuntimeError class so that the name of the constructor is present in the st\n```\n\n----------------------------------------\n\nTITLE: Configuring TypeScript Compiler Options for Serenity/JS\nDESCRIPTION: This snippet defines the TypeScript compiler options for the Serenity/JS project. It specifies the target ECMAScript version, module system, and various compiler flags to ensure type safety and compatibility.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/core/spec/io/finder-examples/nested/file3.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"es2022\",\n    \"lib\": [\n      \"es2022\"\n    ],\n    \"module\": \"commonjs\",\n    \"moduleResolution\": \"node\",\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"removeComments\": false,\n    \"noImplicitAny\": true,\n    \"noImplicitReturns\": true,\n    \"noImplicitThis\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"strictNullChecks\": true,\n    \"sourceMap\": true,\n    \"skipLibCheck\": true,\n    \"declaration\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating package.json: 'typings' to 'types'\nDESCRIPTION: Fix applied to `package.json` files across the Serenity-JS core modules, replacing the deprecated 'typings' field with the standard 'types' field to correctly point to TypeScript definition files. This addresses issue #1682.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/protractor/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"types\"\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n// Replaces usage of:\n```\n\nLANGUAGE: json\nCODE:\n```\n\"typings\"\n```\n\n----------------------------------------\n\nTITLE: Formatting Markdown Changelog Entry\nDESCRIPTION: Example version release entry in the changelog showing version number, comparison link, and categorized changes following conventional commits format.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [3.31.13](https://github.com/serenity-js/serenity-js/compare/v3.31.12...v3.31.13) (2025-03-20)\n\n### Bug Fixes\n\n* **deps:** update dependency axios to v1.8.4 ([3f94d9a](https://github.com/serenity-js/serenity-js/commit/3f94d9a30305dabdd855f549a4518784b8377e0f))\n* **deps:** update dependency portfinder to v1.0.35 ([f1becee](https://github.com/serenity-js/serenity-js/commit/f1becee2c37af62df5c51439a96df92907187444))\n```\n\n----------------------------------------\n\nTITLE: User Story for Special Step Arguments in Gherkin\nDESCRIPTION: A user story written in Gherkin format describing the need for demonstrating how Serenity/JS reports special step arguments in Cucumber tests. It follows the standard \"In order to/As a/I'd like to\" format.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/webdriverio-cucumber/features/reporting_special_step_arguments/narrative.txt#2025-04-22_snippet_0\n\nLANGUAGE: gherkin\nCODE:\n```\nNarrative:\\nIn order to quickly learn how to use Serenity/JS with Cucumber\\nAs a busy developer\\nI'd like to see examples demonstrating how Serenity/JS reports special step arguments\n```\n\n----------------------------------------\n\nTITLE: Updating Mocha Dependency to Version 8.x\nDESCRIPTION: A bugfix commit that updates the Mocha dependency to version 8.x, ensuring compatibility with the latest features and fixes in the Mocha test framework.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/mocha-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **deps:** updated Mocha to 8.x ([ad5fa66](https://github.com/serenity-js/serenity-js/commit/ad5fa66fd12971202ffc5ad65ca44e7cb2e21ddd))\n```\n\n----------------------------------------\n\nTITLE: Updating Mocha Dependency in Serenity-JS Project\nDESCRIPTION: Bug fix entry indicating an update of the Mocha dependency to version 8.x, referenced by commit ad5fa66.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/integration/mocha/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* **deps:** updated Mocha to 8.x ([ad5fa66](https://github.com/serenity-js/serenity-js/commit/ad5fa66fd12971202ffc5ad65ca44e7cb2e21ddd))\n```\n\n----------------------------------------\n\nTITLE: Feature Organization with Serenity/JS and Cucumber\nDESCRIPTION: Example of a narrative.txt file that provides context around business capabilities and features in a Serenity/JS project. The narrative helps structure and document test scenarios by grouping related .feature files into meaningful categories.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/webdriverio-cucumber/features/reporting_results/narrative.txt#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nReporting results\n\nNarrative:\nIn order to quickly learn how to use Serenity/JS with Cucumber\nAs a busy developer\nI'd like to see examples demonstrating how Serenity/JS reports the result of executing Cucumber test scenarios.\n```\n\n----------------------------------------\n\nTITLE: Applying Apache License 2.0 Boilerplate Notice\nDESCRIPTION: This boilerplate text serves as the standard notice for applying the Apache License 2.0. Developers should include this in their source files, typically within comments, replacing `{yyyy}` with the copyright year(s) and `{name of copyright owner}` with the actual owner's name. It clarifies the licensing terms under which the software is distributed.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/web/LICENSE.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Updating tiny-types Dependency\nDESCRIPTION: This commit updates the tiny-types dependency to version 1.21.0.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** update dependency tiny-types to ^1.21.0 ([d4921f9](https://github.com/serenity-js/serenity-js/commit/d4921f9cedb502487c176216fbf15dd2ef83dcc4))\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: NPM Repository URL Update\nDESCRIPTION: Fixed repository URL after migration from jan-molak to serenity-js namespace.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: git\nCODE:\n```\na4511995c50bf08977aa6c4c0f5d22ba7ead343f\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Release 3.0.0-rc.42\nDESCRIPTION: Markdown changelog entry detailing bug fixes in core and jasmine modules for file name handling and test suite outcome reporting\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/jasmine/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# [3.0.0-rc.42](https://github.com/serenity-js/serenity-js/compare/v3.0.0-rc.41...v3.0.0-rc.42) (2023-02-12)\n\n### Bug Fixes\n\n* **core:** event TestRunFinished now incidates the Outcome of the test suite ([a941056](https://github.com/serenity-js/serenity-js/commit/a9410566891e543101b935a80db9c7daea0c9944)), closes [#1495](https://github.com/serenity-js/serenity-js/issues/1495)\n* **jasmine:** default to using file name as feature name when describe blocks are absent ([3542955](https://github.com/serenity-js/serenity-js/commit/3542955d7c0d3582283ecf1fe482cf3da93f9e4f)), closes [#1495](https://github.com/serenity-js/serenity-js/issues/1495)\n```\n\n----------------------------------------\n\nTITLE: Version Bump: @serenity-js/webdriverio (rc.29)\nDESCRIPTION: Indicates a version bump specifically for the '@serenity-js/webdriverio' package without other listed changes in this release candidate.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n@serenity-js/webdriverio\n```\n\n----------------------------------------\n\nTITLE: Fix: Handling closed windows on remote grids (rc.30)\nDESCRIPTION: Improves the way closed browser windows are handled when running tests on remote grids using Serenity/JS web modules. This fix also relates to issue #1310.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n79d387d\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/79d387d2d4a55367c3505f4c98f29f71a6a753f5\n```\n\nLANGUAGE: text\nCODE:\n```\n#1310\n```\n\n----------------------------------------\n\nTITLE: Bug Fix for Core Node/NPM Version Support\nDESCRIPTION: Corrected package.json to properly specify Node and NPM version requirements supported by Serenity/JS.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine-todomvc/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **core:** corrected package.json to mention all the Node and NPM versions supported by Serenity/JS ([9fff39a](https://github.com/serenity-js/serenity-js/commit/9fff39a962ad6e75596e0c8e3f8534a67c20d001))\n```\n\n----------------------------------------\n\nTITLE: Mocha Adapter Integration for Serenity/JS\nDESCRIPTION: The commit that adds Serenity/JS adapter support for Mocha, enabling integration between Serenity's test reporting capabilities and the Mocha test framework.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/mocha-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **mocha:** serenity/JS adapter for Mocha ([f4f0f68](https://github.com/serenity-js/serenity-js/commit/f4f0f680571540f2654e53e1587eb50f01d07ecc))\n```\n\n----------------------------------------\n\nTITLE: Version Bump: @serenity-js/webdriverio (rc.27)\nDESCRIPTION: Indicates a version bump specifically for the '@serenity-js/webdriverio' package without other listed changes in this release candidate.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n@serenity-js/webdriverio\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Reference\nDESCRIPTION: Various Git commit hash references used to track changes across versions.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/calculator-app/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\ne9e1caef0b726e1060d1766bce6cf7a9396e118c\\n25e316d8d5db2e9c9e44914d2017a2b004cb6eb7\\n3b26baab1f2c2108648d2c3093e69326aaa1dfc4\\nfb130b626074337735f944308db4982c30824485\\n5f30cc2583e706f1527f47dee265fe570603e9a6\\n0b5abc7f4a9f026d49691e844315e1ba8677c282\\na4511995c50bf08977aa6c4c0f5d22ba7ead343f\\n74d1ece\n```\n\n----------------------------------------\n\nTITLE: Fix: Web remove 'is-plain-object' dependency (rc.20)\nDESCRIPTION: Removes the dependency on the 'is-plain-object' library from the web modules.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: text\nCODE:\n```\ncbe76a6\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/cbe76a6e36f3ccc4a012e81244aa108a040b2d45\n```\n\n----------------------------------------\n\nTITLE: Protractor Jasmine Feature Commit\nDESCRIPTION: Git commit hash showing the addition of Jasmine adapter support for Protractor.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n([97bf841](https://github.com/jan-molak/serenity-js/commit/97bf841))\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated WebdriverIO dependencies (rc.20)\nDESCRIPTION: Updates the WebdriverIO dependencies used within the '@serenity-js/webdriverio' package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: text\nCODE:\n```\n0833a3c\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/0833a3cb804bf800645c564877277c8498412ef2\n```\n\n----------------------------------------\n\nTITLE: Serenity.js Changelog Document in Markdown\nDESCRIPTION: Formatted changelog entries following Conventional Commits guidelines, documenting version updates, bug fixes and dependency changes across multiple releases\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/serenity-bdd/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n## [3.31.13](https://github.com/serenity-js/serenity-js/compare/v3.31.12...v3.31.13) (2025-03-20)\n\n\n### Bug Fixes\n\n* **deps:** update dependency axios to v1.8.4 ([3f94d9a](https://github.com/serenity-js/serenity-js/commit/3f94d9a30305dabdd855f549a4518784b8377e0f))\n\n```\n\n----------------------------------------\n\nTITLE: Git Commit URL Version 3.19.0\nDESCRIPTION: Markdown link showing the Git commit difference between versions 3.18.1 and 3.19.0\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n# [3.19.0](https://github.com/serenity-js/serenity-js/compare/v3.18.1...v3.19.0) (2024-03-01)\n```\n\n----------------------------------------\n\nTITLE: Core API Changes Commit\nDESCRIPTION: Git commit hash documenting new APIs added to make configuring and using Serenity/JS easier.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n([d11a80d](https://github.com/jan-molak/serenity-js/commit/d11a80de66519cb16b6eaa61a39694006a76b5fb))\n```\n\n----------------------------------------\n\nTITLE: Dependency Update Fix\nDESCRIPTION: Update of dependencies for the package\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **deps:** updated dependencies ([67401a7](https://github.com/serenity-js/serenity-js/commit/67401a774582386be02178e077b918a481630950))\n```\n\n----------------------------------------\n\nTITLE: Updating Package.json Types Field\nDESCRIPTION: This fix updates the package.json files to use \"types\" instead of \"typings\".\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** use \"types\" instead of \"typings\" in package.json files ([b83d922](https://github.com/serenity-js/serenity-js/commit/b83d922076242c6cd5d6f2da055a05aa5e77f11b)), closes [#1682](https://github.com/serenity-js/serenity-js/issues/1682)\n```\n\n----------------------------------------\n\nTITLE: Example Core Migration Commit\nDESCRIPTION: Example commit message showing core library migration to PNPM package manager\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n43dbe6f440d8dd81811da303e542381a17d06b4d\n```\n\n----------------------------------------\n\nTITLE: Cucumber 6 Support Addition\nDESCRIPTION: Added support for Cucumber version 6 and dropped Node 6 support.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/cucumber-reporting/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* **cucumber:** Support for Cucumber 6 ([b437edd](https://github.com/jan-molak/serenity-js/commit/b437edd))\n\n### Bug Fixes\n\n* **core:** Dropped support for node 6 ([74d1ece](https://github.com/jan-molak/serenity-js/commit/74d1ece))\n```\n\n----------------------------------------\n\nTITLE: Example Pull Request Reference\nDESCRIPTION: Example of a pull request reference number in Serenity.js issue tracking\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#2664\n```\n\n----------------------------------------\n\nTITLE: Bug Fix for Lerna Dependencies\nDESCRIPTION: Fix to address incorrect versioning by Lerna package manager.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/cucumber-reporting/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **lerna:** fixed the versions, since lerna managed to mess them up again ([0e87048](https://github.com/jan-molak/serenity-js/commit/0e87048219dc17a0c64a1bbf6b12128b18e85718))\n```\n\n----------------------------------------\n\nTITLE: Repository Version Link\nDESCRIPTION: Markdown link to compare changes between versions 2.25.4 and 2.25.5\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/jasmine-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[2.25.5](https://github.com/serenity-js/serenity-js/compare/v2.25.4...v2.25.5)\n```\n\n----------------------------------------\n\nTITLE: Using Type-Only TypeScript Imports\nDESCRIPTION: This commit updates the core package to use type-only TypeScript imports where possible for code clean-up.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** code clean-up: use type-only TypeScript imports where possible ([aa49150](https://github.com/serenity-js/serenity-js/commit/aa49150ca7f367363bb6fcc5e054da8bd820825e))\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Link\nDESCRIPTION: Markdown link referencing a specific git commit hash for dependency updates\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/jasmine-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[32a41eb](https://github.com/serenity-js/serenity-js/commit/32a41eb8a8b4386b6b03111c1adf48e1e0aabdbb)\n```\n\n----------------------------------------\n\nTITLE: Updating Installation Instructions\nDESCRIPTION: This commit updates the installation instructions in the README of the core package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** updated installation instruction in the README ([ec3f277](https://github.com/serenity-js/serenity-js/commit/ec3f2778334abbd7324497ceaa2df9f0560a103e)), closes [#1915](https://github.com/serenity-js/serenity-js/issues/1915)\n```\n\n----------------------------------------\n\nTITLE: Dependency Update Fix for ES2018\nDESCRIPTION: Update to export ES2018 code instead of ES5 since the package requires Node >= 10\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **npm:** esport ES2018 instead of ES5 since we're supporting Node >= 10 ([a77091a](https://github.com/serenity-js/serenity-js/commit/a77091aa779736172a60b6ac99ec1b869aaea816))\n```\n\n----------------------------------------\n\nTITLE: Fix: Node.js 18 support (rc.23)\nDESCRIPTION: Adds or ensures compatibility with Node.js version 18. This fix addresses issue #1243.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: text\nCODE:\n```\n73212bc\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/73212bc9deb1998d871b0720a6b437687b3ceddc\n```\n\nLANGUAGE: text\nCODE:\n```\n#1243\n```\n\n----------------------------------------\n\nTITLE: Pinning Direct Dependencies\nDESCRIPTION: This commit pins all direct dependencies in the core package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** pinned all the direct dependencies ([498b336](https://github.com/serenity-js/serenity-js/commit/498b33614f678327ba207b30e3b2452728545aaf))\n```\n\n----------------------------------------\n\nTITLE: Updating tiny-types Dependency\nDESCRIPTION: This commit updates the tiny-types dependency to version 1.20.0.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** update dependency tiny-types to ^1.20.0 ([6d7bf43](https://github.com/serenity-js/serenity-js/commit/6d7bf43c6135968bc90869cb8f9782ed70ca8dd9))\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Link - Core Fix\nDESCRIPTION: Markdown link referencing a commit that corrected package.json Node/NPM version support\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/jasmine-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[9fff39a](https://github.com/serenity-js/serenity-js/commit/9fff39a962ad6e75596e0c8e3f8534a67c20d001)\n```\n\n----------------------------------------\n\nTITLE: Git Commit Hash Link - Protractor Fix\nDESCRIPTION: Markdown link referencing a commit that relaxed protractor peer dependencies\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/jasmine-rest-api-level-testing/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[2542bf2](https://github.com/serenity-js/serenity-js/commit/2542bf2ef09216dc6ef8b8ac08395f6bf101d878)\n```\n\n----------------------------------------\n\nTITLE: Repository URL Fix\nDESCRIPTION: Correction of repository URL after migration from jan-molak to serenity-js\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/protractor-jasmine/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **npm:** corrected the repo URL after the jan-molak -> serenity-js repo  migration ([a451199](https://github.com/serenity-js/serenity-js/commit/a4511995c50bf08977aa6c4c0f5d22ba7ead343f))\n```\n\n----------------------------------------\n\nTITLE: Version Link in Markdown\nDESCRIPTION: Reference link to conventional commits documentation used for commit guidelines.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/examples/calculator-app/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Conventional Commits](https://conventionalcommits.org)\n```\n\n----------------------------------------\n\nTITLE: Updating TypeScript Version for Core Package\nDESCRIPTION: This commit updates the core package to build with TypeScript 5.2.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** build with TypeScript 5.2 ([2f261ee](https://github.com/serenity-js/serenity-js/commit/2f261ee92ae4d75b1d5b576d30083c8ecacbcb95))\n```\n\n----------------------------------------\n\nTITLE: Example Git Commit Fix\nDESCRIPTION: Example of a Git commit hash reference showing a TypeScript dependency update in Serenity.js\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/mocha/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n228c7fd\n```\n\n----------------------------------------\n\nTITLE: Updating Node.js Support\nDESCRIPTION: This feature introduces support for Node.js 20 and drops support for Node.js 14 in the core package.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/console-reporter/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: Markdown\nCODE:\n```\n* **core:** introduced support for Node.js 20, dropped support for Node.js 14 ([491fef8](https://github.com/serenity-js/serenity-js/commit/491fef8df672a2b40d247887b3da409dccbd26fd)), closes [#1678](https://github.com/serenity-js/serenity-js/issues/1678)\n```\n\n----------------------------------------\n\nTITLE: Git Commit for Core Build Update\nDESCRIPTION: Git commit hash and message related to building with TypeScript 5.2\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/local-server/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\\n\\n* **core:** build with TypeScript 5.2 ([2f261ee](https://github.com/serenity-js/serenity-js/commit/2f261ee92ae4d75b1d5b576d30083c8ecacbcb95))\n```\n\n----------------------------------------\n\nTITLE: Core Feature: Question Description Formatters\nDESCRIPTION: Introduces 'f' and 'd' question description formatters to improve formatting capabilities in the core framework. These formatters enhance how questions are described in test output.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nf` and `d` question description formatters\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated tiny-types dependency (rc.18)\nDESCRIPTION: Updates the tiny-types library dependency across relevant Serenity/JS packages (version not specified in this commit message).\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: text\nCODE:\n```\nf1951cf\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/f1951cf753df3807b5778d116f8e8bc3f24830a7\n```\n\n----------------------------------------\n\nTITLE: Fix: Updated tiny-types dependency to 1.18.2 (rc.18)\nDESCRIPTION: Updates the tiny-types library dependency to version 1.18.2 across relevant Serenity/JS packages.\nSOURCE: https://github.com/serenity-js/serenity-js/blob/main/packages/webdriverio-8/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: text\nCODE:\n```\n83a651c\n```\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/serenity-js/serenity-js/commit/83a651c4c2f3f8dbaabcdacba94c720efdff45dd\n```\n\nLANGUAGE: text\nCODE:\n```\n1.18.2\n```"
  }
]
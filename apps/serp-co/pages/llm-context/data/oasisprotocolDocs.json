[
  {
    "owner": "oasisprotocol",
    "repo": "docs",
    "content": "TITLE: Configuring Oasis Validator Node with YAML\nDESCRIPTION: YAML configuration file for an Oasis validator node specifying network parameters, consensus settings, and entity information.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmode: validator\ncommon:\n    # Set this to where you wish to store node data. The node's artifacts\n    # should also be located in this directory.\n    data_dir: /node/data\n    # Logging.\n    #\n    # Per-module log levels are defined below. If you prefer just one unified\n    # log level, you can use:\n    #\n    # log:\n    #   level: debug\n    log:\n        level:\n            cometbft: warn\n            cometbft/context: error\n            # Per-module log levels. Longest prefix match will be taken.\n            # Fallback to \"default\", if no match.\n            default: debug\n        format: JSON\n        # By default logs are output to stdout. If you would like to output\n        # logs to a file, you can use:\n        #\n        # file: /var/log/oasis-node.log\n\nconsensus:\n    # The external IP that is used when registering this node to the network.\n    # NOTE: If you are using the Sentry node setup, this option should be\n    # omitted.\n    external_address: tcp://{{ external_ip }}:26656\n    listen_address: tcp://0.0.0.0:26656\n\ngenesis:\n    # Path to the genesis file for the current version of the network.\n    file: /node/etc/genesis.json\n\np2p:\n    port: 9200\n    registration:\n        addresses:\n            - {{ external_ip }}:9200\n    seeds:\n        # List of seed nodes to connect to.\n        # NOTE: You can add additional seed nodes to this list if you want.\n        - {{ seed_node_address }}\n\nregistration:\n    # In order for the node to register itself, the entity ID must be set.\n    entity_id: {{ entity_id }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Oasis Node for ParaTime Client\nDESCRIPTION: YAML configuration for enabling expensive queries and gas estimation on an Oasis ParaTime client node. Specifies runtime mode, paths, and query configurations for both Emerald and Sapphire ParaTimes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/web3.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n  mode: client\n  paths:\n    - {{ emerald_bundle_path }}\n    - {{ sapphire_bundle_path }}\n\n  config:\n    \"{{ emerald_paratime_id }}\":\n      estimate_gas_by_simulating_contracts: true\n      allowed_queries:\n        - all_expensive: true\n    \"{{ sapphire_paratime_id }}\":\n      estimate_gas_by_simulating_contracts: true\n      allowed_queries:\n        - all_expensive: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Hardhat Networks for Emerald\nDESCRIPTION: TypeScript configuration for Hardhat to support Emerald local, testnet, and mainnet networks.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnetworks: {\n    emerald_local: {\n      url: \"http://localhost:8545\",\n      accounts:\n        process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [],\n    },\n    emerald_testnet: {\n      url: \"https://testnet.emerald.oasis.io\",\n      accounts:\n        process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [],\n    },\n    emerald_mainnet: {\n      url: \"https://emerald.oasis.io\",\n      accounts:\n        process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [],\n    },\n  },\n```\n\n----------------------------------------\n\nTITLE: Verifying Oasis Node Validator Status\nDESCRIPTION: Shell command to check if the node is properly registered and functioning as a validator on the Oasis network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock | jq .consensus.is_validator\n```\n\n----------------------------------------\n\nTITLE: Implementing Cross-Chain PingPong Contract with Router Protocol in Solidity\nDESCRIPTION: This contract demonstrates cross-chain communication using Router Protocol's CrossTalk framework. It includes functions for sending messages (iPing), receiving messages (iReceive), and handling acknowledgments (iAck), along with utility functions for metadata preparation and configuration. The contract maintains mappings to track messages from source chains and acknowledgments from destination chains.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/pingpong-example.md#2025-04-16_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\n//SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"@routerprotocol/evm-gateway-contracts/contracts/IGateway.sol\";\n\n/// @title PingPong\n/// @author Yashika Goyal\n/// @notice This is a cross-chain ping pong smart contract to demonstrate how one can\n/// utilise Router CrossTalk for cross-chain transactions.\ncontract PingPong {\n    address public owner;\n    uint64 public currentRequestId;\n\n    // srcChainId + requestId => pingFromSource\n    mapping(string => mapping(uint64 => string)) public pingFromSource;\n    // requestId => ackMessage\n    mapping(uint64 => string) public ackFromDestination;\n\n    // instance of the Router's gateway contract\n    IGateway public gatewayContract;\n\n    // custom error so that we can emit a custom error message\n    error CustomError(string message);\n\n    // event we will emit while sending a ping to destination chain\n    event PingFromSource(\n        string indexed srcChainId,\n        uint64 indexed requestId,\n        string message\n    );\n    event NewPing(uint64 indexed requestId);\n\n    // events we will emit while handling acknowledgement\n    event ExecutionStatus(uint256 indexed eventIdentifier, bool isSuccess);\n    event AckFromDestination(uint64 indexed requestId, string ackMessage);\n\n    constructor(address payable gatewayAddress, string memory feePayerAddress) {\n        owner = msg.sender;\n\n        gatewayContract = IGateway(gatewayAddress);\n\n        gatewayContract.setDappMetadata(feePayerAddress);\n    }\n\n    /// @notice function to set the fee payer address on Router Chain.\n    /// @param feePayerAddress address of the fee payer on Router Chain.\n    function setDappMetadata(string memory feePayerAddress) external {\n        require(msg.sender == owner, \"only owner\");\n        gatewayContract.setDappMetadata(feePayerAddress);\n    }\n\n    /// @notice function to set the Router Gateway Contract.\n    /// @param gateway address of the gateway contract.\n    function setGateway(address gateway) external {\n        require(msg.sender == owner, \"only owner\");\n        gatewayContract = IGateway(gateway);\n    }\n\n    /// @notice function to generate a cross-chain request to ping a destination chain contract.\n    /// @param destChainId chain ID of the destination chain in string.\n    /// @param destinationContractAddress contract address of the contract that will handle this\n    /// @param str string to be pinged to destination\n    /// @param requestMetadata abi-encoded metadata according to source and destination chains\n    function iPing(\n        string calldata destChainId,\n        string calldata destinationContractAddress,\n        string calldata str,\n        bytes calldata requestMetadata\n    ) public payable {\n        currentRequestId++;\n\n        bytes memory packet = abi.encode(currentRequestId, str);\n        bytes memory requestPacket = abi.encode(destinationContractAddress, packet);\n        gatewayContract.iSend{ value: msg.value }(\n        1,\n        0,\n        string(\"\"),\n        destChainId,\n        requestMetadata,\n        requestPacket\n        );\n        emit NewPing(currentRequestId);\n    }\n\n    /// @notice function to get the request metadata to be used while initiating cross-chain request\n    /// @return requestMetadata abi-encoded metadata according to source and destination chains\n    function getRequestMetadata(\n        uint64 destGasLimit,\n        uint64 destGasPrice,\n        uint64 ackGasLimit,\n        uint64 ackGasPrice,\n        uint128 relayerFees,\n        uint8 ackType,\n        bool isReadCall,\n        string memory asmAddress\n    ) public pure returns (bytes memory) {\n        bytes memory requestMetadata = abi.encodePacked(\n        destGasLimit,\n        destGasPrice,\n        ackGasLimit,\n        ackGasPrice,\n        relayerFees,\n        ackType,\n        isReadCall,\n        asmAddress\n        );\n        return requestMetadata;\n    }\n\n    /// @notice function to handle the cross-chain request received from some other chain.\n    /// @param packet the payload sent by the source chain contract when the request was created.\n    /// @param srcChainId chain ID of the source chain in string.\n    function iReceive(\n        string memory, //requestSender,\n        bytes memory packet,\n        string memory srcChainId\n    ) external returns (uint64, string memory) {\n        require(msg.sender == address(gatewayContract), \"only gateway\");\n        (uint64 requestId, string memory sampleStr) = abi.decode(\n        packet,\n        (uint64, string)\n        );\n        if (\n        keccak256(abi.encodePacked(sampleStr)) == keccak256(abi.encodePacked(\"\"))\n        ) {\n        revert CustomError(\"String should not be empty\");\n        }\n        pingFromSource[srcChainId][requestId] = sampleStr;\n\n        emit PingFromSource(srcChainId, requestId, sampleStr);\n\n        return (requestId, sampleStr);\n    }\n\n    /// @notice function to handle the acknowledgement received from the destination chain\n    /// back on the source chain.\n    /// @param requestIdentifier event nonce which is received when we create a cross-chain request\n    /// We can use it to keep a mapping of which nonces have been executed and which did not.\n    /// @param execFlag a boolean value suggesting whether the call was successfully\n    /// executed on the destination chain.\n    /// @param execData returning the data returned from the handleRequestFromSource\n    /// function of the destination chain.\n    function iAck(\n        uint256 requestIdentifier,\n        bool execFlag,\n        bytes memory execData\n    ) external {\n        (uint64 requestId, string memory ackMessage) = abi.decode(\n        execData,\n        (uint64, string)\n        );\n\n        ackFromDestination[requestId] = ackMessage;\n\n        emit ExecutionStatus(requestIdentifier, execFlag);\n        emit AckFromDestination(requestId, ackMessage);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Compiler Settings for Sapphire Network in Remix IDE\nDESCRIPTION: Essential compiler configuration for Sapphire compatibility, including setting Solidity version to 0.8.24 and EVM version to paris. These settings ensure compatibility with the Rust Ethereum EVM implementation used by Sapphire.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/remix.md#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- Compiler version: **`0.8.24`**\n- EVM version: **`paris`** (found under Advanced Configuration)\n```\n\n----------------------------------------\n\nTITLE: Validator Node Configuration\nDESCRIPTION: YAML configuration for an Oasis validator node using sentry node protection, including network settings and security parameters.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmode: validator\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: warn\n            cometbft/context: error\n            default: debug\nconsensus:\n    listen_address: tcp://0.0.0.0:26656\n    p2p:\n        disable_peer_exchange: true\n        persistent_peers:\n            - {{ sentry_node_tendermint_id }}@{{ sentry_node_private_ip }}:26656\ngenesis:\n    file: /node/etc/genesis.json\nregistration:\n    entity_id: {{ entity_id }}\nsentry:\n    address:\n        - {{ sentry_node_grpc_public_key }}@{{ sentry_node_private_ip }}:9009\n```\n\n----------------------------------------\n\nTITLE: Registering Oasis Entity\nDESCRIPTION: Shell command to register the Oasis entity using the updated entity descriptor file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\noasis account entity register entity.json --account my_entity\n```\n\n----------------------------------------\n\nTITLE: Implementing Ping Host Contract in Solidity\nDESCRIPTION: This contract represents the host side for cross-chain communication using OPL. It includes functionality to initiate pings to an enclave contract on Sapphire and handle responses. The contract inherits from the Host base class and registers endpoints for communication.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/opl-sdk/ping-example.md#2025-04-16_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Host, Result} from \"@oasisprotocol/sapphire-contracts/contracts/OPL.sol\";\n\ncontract Ping is Host {\n    event MessageReceived(bytes message);\n\n    constructor(address pong) Host(pong) {\n        registerEndpoint(\"pongMessage\", _pongMessage);\n    }\n\n    function startPing (bytes calldata _message) external payable {\n        postMessage(\"ping\", abi.encode(_message));\n    }\n\n    function _pongMessage(bytes calldata _args) internal returns (Result) {\n        (bytes memory message) = abi.decode((_args), (bytes));\n        emit MessageReceived(message);\n        return Result.Success;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying and Testing on Emerald Local Network\nDESCRIPTION: Commands to deploy the smart contract and run tests on the Emerald local network using Hardhat.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ npx hardhat run scripts/deploy.ts --network emerald_local\n$ npx hardhat test --network emerald_local\n```\n\n----------------------------------------\n\nTITLE: Initializing Validator Node with Sentry Configuration\nDESCRIPTION: Bash commands to initialize a validator node with multiple sentry nodes, including setting environment variables and node configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport SENTRY1_CONSENSUS_ID=<YOUR_SENTRY1_CONSENSUS_ID_B64>\nexport SENTRY1_STATIC_IP=<YOUR_SENTRY1_STATIC_IP>\nexport SENTRY2_CONSENSUS_ID=<YOUR_SENTRY2_CONSENSUS_ID_B64>\nexport SENTRY2_STATIC_IP=<YOUR_SENTRY2_STATIC_IP>\noasis-node registry node init \\\n  --signer.backend file \\\n  --signer.dir /localhostdir/entity \\\n  --node.consensus_address $SENTRY1_CONSENSUS_ID@$SENTRY1_STATIC_IP:26656 \\\n  --node.consensus_address $SENTRY2_CONSENSUS_ID@$SENTRY2_STATIC_IP:26656 \\\n  --node.is_self_signed \\\n  --node.role validator\n```\n\n----------------------------------------\n\nTITLE: Configuring Hardhat for Multi-Chain Development with Arbitrum Sepolia and Sapphire Testnet\nDESCRIPTION: This snippet shows how to configure Hardhat to work with Arbitrum Sepolia and Sapphire Testnet networks. It sets up the connection URLs, chain IDs, and imports the private key from environment variables for deployments.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n import { HardhatUserConfig } from \"hardhat/config\";\n import \"@nomicfoundation/hardhat-toolbox\";\n\n // highlight-next-line\n const accounts = process.env.PRIVATE_KEY ? [process.env.PRIVATE_KEY] : [];\n\n const config: HardhatUserConfig = {\n  solidity: \"0.8.24\",\n  // highlight-start\n  networks: {\n    'arbitrum-sepolia': {\n      url: 'https://arbitrum-sepolia-rpc.publicnode.com',\n      chainId: 421614,\n      accounts,\n    },\n    'sapphire-testnet': {\n      url: \"https://testnet.sapphire.oasis.io\",\n      accounts,\n      chainId: 23295, // 0x5aff\n    },\n  },\n  // highlight-end\n };\n\n export default config;\n```\n\n----------------------------------------\n\nTITLE: Hyperlane Chain Metadata Configuration for Sapphire Testnet\nDESCRIPTION: YAML configuration defining the metadata for Sapphire Testnet in the Hyperlane Registry. Includes chain ID, domain ID, RPC endpoints, and other network-specific information needed for the relayer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/relayer.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# yaml-language-server: $schema=../schema.json\nblockExplorers:\n  - apiUrl: https://nexus.oasis.io/v1/\n    family: other\n    name: Oasis Explorer\n    url: https://explorer.oasis.io/testnet/sapphire\nchainId: 23295\ndisplayName: Sapphire Testnet\ndomainId: 23295\nisTestnet: true\nname: sapphiretestnet\nnativeToken:\n  decimals: 18\n  name: TEST\n  symbol: TEST\nprotocol: ethereum\nrpcUrls:\n  - http: https://testnet.sapphire.oasis.io\ntechnicalStack: other\n```\n\n----------------------------------------\n\nTITLE: Deploying DemoOracle Contract in Solidity\nDESCRIPTION: This contract demonstrates how to interact with the Band Protocol reference data smart contract. It includes functions to get single and multiple price data, as well as save price data to the contract's storage.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/band.md#2025-04-16_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\npragma solidity 0.6.11;\npragma experimental ABIEncoderV2;\n\ninterface IStdReference {\n    /// A structure returned whenever someone requests for standard reference data.\n    struct ReferenceData {\n        uint256 rate; // base/quote exchange rate, multiplied by 1e18.\n        uint256 lastUpdatedBase; // UNIX epoch of the last time when base price gets updated.\n        uint256 lastUpdatedQuote; // UNIX epoch of the last time when quote price gets updated.\n    }\n\n    /// Returns the price data for the given base/quote pair. Revert if not available.\n    function getReferenceData(string memory _base, string memory _quote)\n        external\n        view\n        returns (ReferenceData memory);\n\n    /// Similar to getReferenceData, but with multiple base/quote pairs at once.\n    function getReferenceDataBulk(string[] memory _bases, string[] memory _quotes)\n        external\n        view\n        returns (ReferenceData[] memory);\n}\n\ncontract DemoOracle {\n    IStdReference ref;\n\n    uint256 public price;\n\n    constructor(IStdReference _ref) public {\n        ref = _ref;\n    }\n\n    function getPrice() external view returns (uint256){\n        IStdReference.ReferenceData memory data = ref.getReferenceData(\"WBTC\",\"USD\");\n        return data.rate;\n    }\n\n    function getMultiPrices() external view returns (uint256[] memory){\n        string[] memory baseSymbols = new string[](2);\n        baseSymbols[0] = \"WBTC\";\n        baseSymbols[1] = \"ETH\";\n\n        string[] memory quoteSymbols = new string[](2);\n        quoteSymbols[0] = \"USD\";\n        quoteSymbols[1] = \"USD\";\n        IStdReference.ReferenceData[] memory data = ref.getReferenceDataBulk(baseSymbols,quoteSymbols);\n\n        uint256[] memory prices = new uint256[](2);\n        prices[0] = data[0].rate;\n        prices[1] = data[1].rate;\n\n        return prices;\n    }\n\n    function savePrice(string memory base, string memory quote) external {\n        IStdReference.ReferenceData memory data = ref.getReferenceData(base,quote);\n        price = data.rate;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Home Chain Host Contract\nDESCRIPTION: Example implementation of a contract on the home chain that extends the Host class and provides a method to trigger a message to be sent to the corresponding Sapphire contract.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/opl-sdk/README.md#2025-04-16_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nimport {Host, Result} from \"@oasisprotocol/sapphire-contracts/contracts/OPL.sol\";\n\ncontract HomeContract is Host {\n    constructor(address otherEnd) Host(otherEnd) {\n    }\n    function triggerExample (uint256 a, bool b) external payable {\n        postMessage(\"secretExample\", abi.encode(a, b));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Updated Entity Descriptor\nDESCRIPTION: Command to submit the updated entity descriptor to the Oasis Network using the oasis account entity register command.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/adding-or-removing-nodes.md#2025-04-16_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\noasis account entity register entity.json --account my_entity\n```\n\n----------------------------------------\n\nTITLE: Implementing Cross-Chain Messaging Contract with Celer IM in Solidity\nDESCRIPTION: A Solidity contract that demonstrates cross-chain messaging using Celer's Inter-Chain Messaging. This contract allows sending 'ping' messages between chains, implements the MessageBus interface, and handles both sending and receiving cross-chain messages.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/celer/ping-example.md#2025-04-16_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IMessageBus {\n        function sendMessage(\n        address _receiver,\n        uint256 _dstChainId,\n        bytes calldata _message\n    ) external payable;\n}\n\n\ncontract Ping  {\n    address public messageBus;\n\n    event MessageReceived(\n        address srcContract,\n        uint64 srcChainId,\n        address sender,\n        bytes message\n    );\n\n\n    enum ExecutionStatus {\n        Fail, // execution failed, finalized\n        Success, // execution succeeded, finalized\n        Retry // execution rejected, can retry later\n    }\n\n    constructor(address _messageBus) {\n        messageBus = _messageBus;\n    }\n\n    modifier onlyMessageBus() {\n        require(msg.sender == messageBus, \"caller is not message bus\");\n        _;\n    }\n\n\n    function sendPing(\n        address _dstContract,\n        uint64 _dstChainId,\n        bytes calldata _message\n    ) external payable {\n        bytes memory message = abi.encode(msg.sender, _message);\n        IMessageBus(messageBus).sendMessage{value: msg.value}(_dstContract, _dstChainId, message);\n    }\n\n    function executeMessage(\n        address _srcContract,\n        uint64 _srcChainId,\n        bytes calldata _message,\n        address // executor\n    ) external payable onlyMessageBus returns (ExecutionStatus) {\n        (address sender, bytes memory message) = abi.decode(\n            (_message),\n            (address, bytes)\n        );\n        emit MessageReceived(_srcContract, _srcChainId, sender, message);\n        return ExecutionStatus.Success;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Structure for Oasis Node\nDESCRIPTION: Command to create the required directory structure for an Oasis node with proper permissions. Creates 'etc' for configuration files and 'data' for blockchain state, with restricted directory permissions of rwx------.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/non-validator-node.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -m700 -p /node/{etc,data}\n```\n\n----------------------------------------\n\nTITLE: Cross-Chain Message Sending Script\nDESCRIPTION: Script for initiating cross-chain communication by sending a ping message from Arbitrum Sepolia to Sapphire Testnet, including fee calculation and transaction execution.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {\n  const destChainId = \"23295\";\n  const message = \"Hello OPL\"\n  const pingpongArbitrum = \"0x<your pingpong contract deployed on arbitrum sepolia\"\n\n  const signer = await ethers.provider.getSigner();\n  const contract = await ethers.getContractAt(\"Ping\", pingpongArbitrum, signer);\n\n  console.log(\"Calculating fee...\");\n  let fee = await contract.quoteDispatch(\n      destChainId,\n      hre.ethers.toUtf8Bytes(message));\n  console.log(`Fee: ${hre.ethers.formatEther(fee)} ETH`);\n  console.log(\"Sending message...\");\n  const tx = await contract.sendPing(destChainId, message, {value: fee});\n  await tx.wait();\n  console.log(\"Message sent\");\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing a Sapphire Enclave Contract\nDESCRIPTION: Example implementation of a contract on Sapphire that extends the Enclave class, registering an endpoint called 'secretExample' to receive messages from a home chain contract.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/opl-sdk/README.md#2025-04-16_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nimport {Enclave, Result, autoswitch} from \"@oasisprotocol/sapphire-contracts/contracts/OPL.sol\";\n\ncontract SapphireContract is Enclave {\n    constructor(address otherEnd, string chain) Enclave(otherEnd, autoswitch(chain)) {\n        registerEndpoint(\"secretExample\", on_example);\n    }\n    function on_example(bytes calldata _args) internal returns (Result) {\n        (uint256 a, bool b) = abi.decode(args, (uint256, bool));\n        // TODO: do confidential things here\n        return Result.Success;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Pong Enclave Contract in Solidity\nDESCRIPTION: This contract represents the enclave side for cross-chain communication using OPL. It runs on Sapphire and handles incoming ping messages from the host contract. The contract includes methods to compute deterministic addresses and register endpoints for cross-chain communication.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/opl-sdk/ping-example.md#2025-04-16_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Enclave, Result, autoswitch} from \"@oasisprotocol/sapphire-contracts/contracts/OPL.sol\";\n\ncontract Pong is Enclave {\n    event MessageReceived(bytes message);\n\n    constructor(uint nonce, bytes32 chain) Enclave(computeAddress(msg.sender, nonce), autoswitch(chain)) {\n        registerEndpoint(\"ping\", _pingMessage);\n    }\n\n    function _pingMessage(bytes calldata _args) internal returns (Result) {\n        (bytes memory message) = abi.decode((_args), (bytes));\n        emit MessageReceived(message);\n        return Result.Success;\n    }\n\n    function computeAddress(address _origin, uint _nonce) public pure returns (address) {\n        if (_nonce == 0x00) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd6), bytes1(0x94), _origin, bytes1(0x80)\n            )))));\n        }\n        if (_nonce <= 0x7f) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd6), bytes1(0x94), _origin, bytes1(uint8(_nonce))\n            )))));\n        }\n        if (_nonce <= 0xff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd7), bytes1(0x94), _origin, bytes1(0x81), uint8(_nonce)\n            )))));\n        }\n        if (_nonce <= 0xffff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd8), bytes1(0x94), _origin, bytes1(0x82), uint16(_nonce)\n            )))));\n        }\n        if (_nonce <= 0xffffff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd9), bytes1(0x94), _origin, bytes1(0x83), uint24(_nonce)\n            )))));\n        }\n        return address(uint160(uint256(keccak256(abi.encodePacked(\n            bytes1(0xda), bytes1(0x94), _origin, bytes1(0x84), uint32(_nonce)\n        )))));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Structure for Entity Files with Shell\nDESCRIPTION: Creates a directory structure to store the entity descriptor files for an Oasis validator node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p /localhostdir/entity\n```\n\n----------------------------------------\n\nTITLE: iReceive Function Signature for Handling Incoming Cross-Chain Messages\nDESCRIPTION: The function signature for iReceive, which is called by the Gateway on the destination chain when a cross-chain message arrives.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_6\n\nLANGUAGE: solidity\nCODE:\n```\nfunction iReceive(\n    string memory requestSender,\n    bytes memory packet,\n    string memory srcChainId\n  ) external returns (bytes memory)\n```\n\n----------------------------------------\n\nTITLE: Configuring State Sync in Oasis Node Configuration\nDESCRIPTION: YAML configuration snippet to enable CometBFT's state sync functionality in an Oasis node's config.yml file. The configuration requires specifying a trusted height and the corresponding block header hash.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n... trimmed ...\n\n# Consensus.\nconsensus:\n\n  ... trimmed ...\n\n  # Enable consensus state sync (i.e. CometBFT light client sync).\n  state_sync:\n    enabled: true\n  # Configure trusted height & hash for the light client.\n  light_client:\n    trust:\n      height: {{ trusted_height }}\n      hash: \"{{ trusted_height_hash }}\"\n\n... trimmed ...\n```\n\n----------------------------------------\n\nTITLE: Deploying Pong Contract Script\nDESCRIPTION: Hardhat deployment script for the Pong contract on Sapphire Testnet. Uses ethers.js to deploy the contract with a specified mailbox address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {\n  // deployed mailbox on Sapphire Testnet\n  const mailbox = \"0x79d3ECb26619B968A68CE9337DfE016aeA471435\";\n\n  const PongFactory = await hre.ethers.getContractFactory(\"Pong\");    \n  const pong = await PongFactory.deploy(mailbox);\n  const pongAddr = await pong.waitForDeployment();\n  console.log(`Pong deployed at: ${pongAddr.target}`);\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Request Metadata for Cross-Chain Calls in Solidity\nDESCRIPTION: Function that encodes parameters into the requestMetadata bytes object required by iSend. It packages gas limits, prices, relayer fees, and other cross-chain communication settings.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\nfunction getRequestMetadata(\n    uint64 destGasLimit,\n    uint64 destGasPrice,\n    uint64 ackGasLimit,\n    uint64 ackGasPrice,\n    uint128 relayerFees,\n    uint8 ackType,\n    bool isReadCall,\n    string memory asmAddress\n) public pure returns (bytes memory) {\n    bytes memory requestMetadata = abi.encodePacked(\n    destGasLimit,\n    destGasPrice,\n    ackGasLimit,\n    ackGasPrice,\n    relayerFees,\n    ackType,\n    isReadCall,\n    asmAddress\n    );\n    return requestMetadata;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Key Manager Node in YAML\nDESCRIPTION: This YAML configuration file sets up an Oasis Network key manager node. It defines paths for data storage, logging settings, consensus parameters, and runtime configuration specifically for a key manager that operates inside an Intel SGX TEE. The configuration requires customization of external addresses, entity ID, and runtime paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/README.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndatadir: /node/data\n\nlog:\n  level:\n    default: info\n    tendermint: info\n    tendermint/context: error\n  format: JSON\n\ngenesis:\n  file: /node/etc/genesis.json\n\nconsensus:\n  tendermint:\n    core:\n      listen_address: tcp://0.0.0.0:26656\n\n      # The external IP that is used when registering this node to the network.\n      # NOTE: If you are using the Sentry node setup, this option should be\n      # omitted.\n      external_address: tcp://{{ external_address }}:26656\n\n    p2p:\n      # List of seed nodes to connect to.\n      # NOTE: You can add additional seed nodes to this list if you want.\n      seed:\n        - \"{{ seed_node_address }}\"\n\nruntime:\n  mode: keymanager\n  paths:\n    # Path to the key manager ParaTime bundle.\n    - \"{{ keymanager_runtime_orc_path }}\"\n\n  # The following section is required for ParaTimes which are running inside the\n  # Intel SGX Trusted Execution Environment.\n  sgx:\n    loader: /node/bin/oasis-core-runtime-loader\n\nworker:\n  registration:\n    # In order for the node to register itself, the entity ID must be set.\n    entity_id: {{ entity_id }}\n\n  keymanager:\n    runtime:\n      id: \"{{ keymanager_runtime_id }}\"\n\n  p2p:\n    # External P2P configuration.\n    port: 20104\n    addresses:\n      # The external IP that is used when registering this node to the network.\n      - \"{{ external_address }}:20104\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Ping Contract Script\nDESCRIPTION: Hardhat deployment script for the Ping contract on Arbitrum Sepolia. Deploys the contract with a specified mailbox address using ethers.js.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {\n  // default mailbox on Arbitrum Sepolia\n  const mailbox = \"0x598facE78a4302f11E3de0bee1894Da0b2Cb71F8\";\n\n  const PingFactory = await ethers.getContractFactory(\"Ping\");    \n  const ping = await PingFactory.deploy(mailbox);\n  const pingAddr = await ping.waitForDeployment();\n  console.log(`Ping deployed at: ${pingAddr.target}`);\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Sentry TLS Public Key\nDESCRIPTION: Command to retrieve the TLS public key from a sentry node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity show-tls-pubkey --datadir /node/data\n```\n\n----------------------------------------\n\nTITLE: Deploying ISM Contract Script\nDESCRIPTION: Deployment script for the TrustedRelayerISM contract on Arbitrum Sepolia. Configures the contract with a mailbox address and trusted relayer address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {\n  // default mailbox on Arbitrum Sepolia\n  const mailbox = \"0x598facE78a4302f11E3de0bee1894Da0b2Cb71F8\";\n  const trustedRelayer = \"0x<your relayer address>\";\n\n  const trustedRelayerISM = await ethers.deployContract(\n    \"TrustedRelayerIsm\",\n    [mailbox, trustedRelayer]\n    );\n  await trustedRelayerISM.waitForDeployment();\n  console.log(`TrustedRelayerISM deployed to ${trustedRelayerISM.target}`);\n}\n  main().catch((error) => {\n    console.error(error);\n    process.exitCode = 1;\n  });\n```\n\n----------------------------------------\n\nTITLE: Monitoring Cross-Chain Ping Events with TypeScript\nDESCRIPTION: Script to monitor and verify ping events from a deployed contract. Uses Hardhat and ethers.js to listen for ReceivedPing events, with a visual spinner to indicate active monitoring. Requires a deployed Ping contract address and configured network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {\n  const contractAddr = \"0x<your deployed ping contract on arbitrum sepolia>\"\n  const signer = await ethers.provider.getSigner();\n  const contract = await ethers.getContractAt(\"Ping\", contractAddr, signer);\n\n  const spinner = ['-', '\\\\', '|', '/'];\n  let spinnerIndex = 0;\n  const interval = setInterval(() => {\n      process.stdout.write(`\\rListing for event... ${spinner[spinnerIndex]}`);\n      current = (spinnerIndex + 1) % spinner.length;\n  }, 150);\n\n  let events;\n  do {\n    const block = await ethers.provider.getBlockNumber();\n    events = await contract.queryFilter('ReceivedPing', block - 10, 'latest');\n    if (events.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 60 * 1000));\n    }\n  } while (events.length === 0);\n  \n  clearInterval(interval);\n  process.stdout.write(`\\r`); \n  process.stdout.clearLine(0);\n\n  const parsedEvent = contract.interface.parseLog(events[0]);\n  const message = parsedEvent?.args?.message;\n  console.log(`Message received with: ${message}`);\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Non-validator Node for Oasis Network\nDESCRIPTION: YAML configuration for a non-validator node that follows only the consensus layer. Specifies client mode, data directory, logging settings, and connection to seed nodes. The configuration requires replacing the seed_node_address variable with an actual seed node address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/non-validator-node.mdx#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmode: client\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: info\n            cometbft/context: error\n            default: info\n\ngenesis:\n    file: /node/etc/genesis.json\np2p:\n    # List of seed nodes to connect to.\n    # NOTE: You can add additional seed nodes to this list if you want.\n    seeds:\n        - {{ seed_node_address }}\n```\n\n----------------------------------------\n\nTITLE: Creating a Sapphire-compatible test contract\nDESCRIPTION: Solidity code to create a test contract that inherits from SapphireTest and overrides the setUp function.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_8\n\nLANGUAGE: solidity\nCODE:\n```\ncontract PrecompileTest is SapphireTest {\n   \n   function setUp() public override {\n      super.setUp();\n   }\n```\n\n----------------------------------------\n\nTITLE: Getting Sentry Consensus ID\nDESCRIPTION: Command to extract the Consensus ID from the sentry node's public key file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsed -n 2p /node/data/consensus_pub.pem\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Configuration for Sapphire Localnet\nDESCRIPTION: GitHub Actions YAML configuration to start a Sapphire localnet container as a service for CI/CD testing, exposing the necessary ports and setting a health check.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  example-test:\n    services:\n      sapphire-localnet-ci:\n        image: ghcr.io/oasisprotocol/sapphire-localnet\n        ports:\n          - 8544:8544\n          - 8545:8545\n          - 8546:8546\n        env:\n          OASIS_DOCKER_START_EXPLORER: no\n        options: >\n          --rm\n          --health-cmd=\"test -f /CONTAINER_READY\"\n          --health-start-period=90s\n```\n\n----------------------------------------\n\nTITLE: Basic ParaTime Client Node Configuration\nDESCRIPTION: YAML configuration for a basic ParaTime client node, defining the node's mode, data directory, logging settings, genesis file location, P2P seed nodes, and ParaTime bundle paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmode: client\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: info\n            cometbft/context: error\n            default: info\ngenesis:\n    file: /node/etc/genesis.json\np2p:\n    seeds:\n      # List of seed nodes to connect to.\n      # NOTE: You can add additional seed nodes to this list if you want.\n        - {{ seed_node_address }}\nruntime:\n    # Paths to ParaTime bundles for all of the supported ParaTimes.\n    paths:\n        - {{ runtime_orc_path }}\n```\n\n----------------------------------------\n\nTITLE: Importing Sapphire Test contract in Solidity\nDESCRIPTION: Solidity code to import the SapphireTest contract for enabling Sapphire precompiles in Forge tests.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_7\n\nLANGUAGE: solidity\nCODE:\n```\nimport {SapphireTest} from \"@oasisprotocol-sapphire-foundry-0.1.0/BaseSapphireTest.sol\";\n```\n\n----------------------------------------\n\nTITLE: Enabling Expensive Queries Configuration\nDESCRIPTION: YAML configuration for enabling expensive runtime queries needed for Web3 Gateways, including gas estimation by simulating contracts and allowing all expensive queries.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n    paths:\n      - {{ runtime_orc_path }}\n    environment: sgx\n    config:\n      {{ runtime_id }}:\n          estimate_gas_by_simulating_contracts: true\n          allowed_queries:\n              - all_expensive: true \n```\n\n----------------------------------------\n\nTITLE: Web3 Gateway Configuration\nDESCRIPTION: Main configuration file for the Oasis Web3 gateway specifying runtime settings, database connections, and gateway endpoints. Includes logging, database configuration, and HTTP/WS server settings.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/web3.mdx#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nruntime_id: {{ paratime_id }}\nnode_address: \"unix:{{ oasis_node_unix_socket }}\"\n\nenable_pruning: false\npruning_step: 100000\nindexing_start: 0\n\nlog:\n  level: debug\n  format: json\n\ndatabase:\n  host: \"127.0.0.1\"\n  port: 5432\n  db: {{ postgresql_db }}\n  user: {{ postgresql_user }}\n  password: {{ postgresql_password }}\n  dial_timeout: 5\n  read_timeout: 10\n  write_timeout: 5\n  max_open_conns: 0\n\ngateway:\n  chain_id: {{ chain_id }}\n  http:\n    host: \"localhost\"\n    port: 8545\n    cors: [\"*\"]\n  ws:\n    host: \"localhost\"\n    port: 8546\n    origins: [\"*\"]\n  method_limits:\n    get_logs_max_rounds: 100\n```\n\n----------------------------------------\n\nTITLE: Checking Node Status\nDESCRIPTION: Command to check the status of the Oasis Node and ensure it's properly connected to the network by querying the node's control interface via a Unix socket.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Creating Node Directory Structure in Linux\nDESCRIPTION: Command to create the necessary directory structure for the Oasis node with proper permissions. This creates /node with subdirectories for configuration, binaries, runtimes, and data storage.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/oasis-node.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -m700 -p /node/{etc,bin,runtimes,data}\n```\n\n----------------------------------------\n\nTITLE: Configuring foundry.toml for Sapphire\nDESCRIPTION: Example configuration in foundry.toml file to enable Sapphire-specific features and dependencies.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[profile.default]\nsrc = \"src\"\nout = \"out\"\nlibs = [\"lib\", \"dependencies\"]\nffi = true\n\n[dependencies]\n\"@oasisprotocol-sapphire-contracts\" = \"0.2.13\"\n\"@oasisprotocol-sapphire-foundry\" = \"0.1.0\"\n```\n\n----------------------------------------\n\nTITLE: Creating Request Metadata with ethers.js\nDESCRIPTION: Alternative approach to create the requestMetadata using ethers.js library, which packs the same parameters as the Solidity function.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nconst metadata = ethers.utils.solidityPack(\n    ['uint64', 'uint64', 'uint64', 'uint64', 'uint128', 'uint8', 'bool', 'string'],\n    [destGasLimit, destGasPrice, ackGasLimit, ackGasPrice, relayerFees, ackType, isReadCall, asmAddress]\n);\n```\n\n----------------------------------------\n\nTITLE: Updating Oasis Entity Descriptor with Node ID\nDESCRIPTION: JSON snippet showing how to add the node ID to the entity descriptor file, which is necessary for registering the entity on the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"id\": \"Bx6gOixnxy15tCs09ua5DcKyX9uo2Forb32O6Hyjoc8=\",\n  \"nodes\": [\n    \"5MsgQwijUlpH9+0Hbyors5jwmx7tTmKMA4c9leV3prI=\"\n  ],\n  \"v\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the Oasis Node with Configuration File\nDESCRIPTION: Command to start the Oasis node using the specified configuration file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Getting Validator Tendermint Address\nDESCRIPTION: Command to retrieve the Tendermint node address from a validator node's data directory.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity tendermint show-node-address --datadir /node/data\n```\n\n----------------------------------------\n\nTITLE: Oasis Seed Node Addresses\nDESCRIPTION: Network seed node addresses for connecting to the Oasis Testnet, including public keys and connection ports\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/testnet/README.md#2025-04-16_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nHcDFrTp/MqRHtju5bCx6TIhIMd6X/0ZQ3lUG73q5898=@34.86.165.6:26656\nHcDFrTp/MqRHtju5bCx6TIhIMd6X/0ZQ3lUG73q5898=@34.86.165.6:9200\nkqsc8ETIgG9LCmW5HhSEUW80WIpwKhS7hRQd8FrnkJ0=@34.140.116.202:26656\nkqsc8ETIgG9LCmW5HhSEUW80WIpwKhS7hRQd8FrnkJ0=@34.140.116.202:9200\n```\n\n----------------------------------------\n\nTITLE: ISM Registration Script\nDESCRIPTION: Script for registering the TrustedRelayerISM contract with the Ping contract on Arbitrum Sepolia, establishing security verification for cross-chain messages.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {      \n  let pingpongArbitrum = \"0x<your contract deployed before>\";\n  let ismAddr = \"0x<your ISM contract deployed before>\";\n\n  const signer = await ethers.provider.getSigner();\n  const contract = await ethers.getContractAt(\"Ping\", pingpongArbitrum, signer);\n  await contract.setInterchainSecurityModule(ismAddr);\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Starting the Oasis Key Manager Node\nDESCRIPTION: Command to start the Oasis node with the specified configuration file. This launches the key manager node process according to the settings defined in the config.yml file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Running Sapphire Localnet with Custom Mnemonic\nDESCRIPTION: Command to run the Sapphire localnet container with a custom mnemonic seed phrase and specifying the number of derived addresses to fund.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/sapphire-localnet -to \"bench remain brave curve frozen verify dream margin alarm world repair innocent\" -n3\n```\n\n----------------------------------------\n\nTITLE: Configuring Envoy as a gRPC Proxy for Oasis Node\nDESCRIPTION: This configuration sets up Envoy as a proxy for an Oasis node's gRPC API. It whitelists safe methods while blocking control methods and CPU-intensive operations, provides TLS encryption, and properly routes requests to the Oasis node's Unix socket.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/grpc.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Envoy gRPC-web proxy configuration\n---\nadmin:\n  address:\n    socket_address:\n      address: \"127.0.0.1\"\n      port_value: 10000\nstatic_resources:\n  listeners:\n    - name: listener_0\n      address:\n        socket_address:\n          address: \"0.0.0.0\"\n          port_value: 443\n      filter_chains:\n        - filters:\n            - name: envoy.filters.network.http_connection_manager\n              typed_config:\n                \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n                codec_type: AUTO\n                stat_prefix: ingress_http\n                access_log:\n                  - name: envoy.file_access_log\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n                      path: /dev/stdout\n                route_config:\n                  virtual_hosts:\n                    - name: vh_0\n                      domains:\n                        - \"*\"\n                      routes:\n                        - match:\n                            safe_regex:\n                              regex: \"\\\n/oasis-core\\\\.(\\\n  Beacon/(\\\n    ConsensusParameters|\\\n    GetBaseEpoch|\\\n    GetBeacon|\\\n    GetEpoch|\\\n    GetEpochBlock|\\\n    GetFutureEpoch)|\\\n  Consensus/(\\\n    EstimateGas|\\\n    GetBlock|\\\n    GetChainContext|\\\n    GetGenesisDocument|\\\n    GetNextBlockState|\\\n    GetParameters|\\\n    GetSignerNonce|\\\n    GetStatus|\\\n    GetTransactions|\\\n    GetTransactionsWithResults|\\\n    GetUnconfirmedTransactions|\\\n    MinGasPrice|\\\n    SubmitTx)|\\\n  Governance/(\\\n    ActiveProposals|\\\n    ConsensusParameters|\\\n    GetEvents|\\\n    PendingUpgrades|\\\n    Proposal|\\\n    Proposals|\\\n    Votes)|\\\n  NodeController/(\\\n    GetStatus)|\\\n  Registry/(\\\n    ConsensusParameters|\\\n    GetEntity|\\\n    GetEvents|\\\n    GetNode|\\\n    GetNodeByConsensusAddress|\\\n    GetNodeStatus|\\\n    GetRuntime|\\\n    GetRuntimes)|\\\n  RootHash/(\\\n    ConsensusParameters|\\\n    GetEvents|\\\n    GetGenesisBlock|\\\n    GetLastRoundResults|\\\n    GetLatestBlock|\\\n    GetRuntimeState)|\\\n  RuntimeClient/(\\\n    CheckTx|\\\n    GetBlock|\\\n    GetEvents|\\\n    GetGenesisBlock|\\\n    GetLastRetainedBlock|\\\n    GetTransactions|\\\n    GetTransactionsWithResults|\\\n    Query|\\\n    SubmitTx|\\\n    SubmitTxMeta|\\\n    SubmitTxNoWait|\\\n    WatchBlocks)|\\\n  Scheduler/(\\\n    ConsensusParameters|\\\n    GetCommittees|\\\n    GetValidators)|\\\n  Staking/(\\\n    Account|\\\n    Allowance|\\\n    CommonPool|\\\n    ConsensusParameters|\\\n    DebondingDelegationInfosFor|\\\n    DebondingDelegationsFor|\\\n    DebondingDelegationsTo|\\\n    DelegationInfosFor|\\\n    DelegationsFor|\\\n    DelegationsTo|\\\n    GetEvents|\\\n    GovernanceDeposits|\\\n    LastBlockFees|\\\n    Threshold|\\\n    TokenSymbol|\\\n    TokenValueExponent|\\\n    TotalSupply))\\\n\"\n                          route:\n                            cluster: oasis_node_grpc\n                            timeout: \"0s\"\n                            max_stream_duration:\n                              grpc_timeout_header_max: \"0s\"\n                        - match:\n                            prefix: /oasis-core\n                          direct_response:\n                            status: 404\n                            body:\n                              inline_string: Only some methods are allowed on this proxy.\n                      typed_per_filter_config:\n                        envoy.filters.http.cors:\n                          \"@type\": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy\n                          expose_headers: grpc-status,grpc-message,grpc-status-details-bin\n                          allow_origin_string_match:\n                            - exact: '*'\n                          allow_headers: content-type,x-grpc-web,x-user-agent\n                          max_age: '1728000'\n                http_filters:\n                  - name: envoy.health_check\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck\n                      pass_through_mode: false\n                      headers:\n                        - name: :path\n                          string_match:\n                            exact: /health\n                  - name: envoy.filters.http.grpc_web\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb\n                  - name: envoy.filters.http.cors\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors\n                  - name: envoy.filters.http.router\n                    typed_config:\n                      \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n          transport_socket:\n            name: envoy.transport_sockets.tls\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext\n              common_tls_context:\n                alpn_protocols:\n                  - h2,http/1.1\n                tls_certificates:\n                  - certificate_chain:\n                      filename: /etc/letsencrypt/live/grpc.example.com/fullchain.pem\n                    private_key:\n                      filename: /etc/letsencrypt/live/grpc.example.com/privkey.pem\n  clusters:\n    - name: oasis_node_grpc\n      connect_timeout: 0.25s\n      load_assignment:\n        cluster_name: cluster_0\n        endpoints:\n          - lb_endpoints:\n              - endpoint:\n                  address:\n                    pipe:\n                      path: /node/data/internal.sock\n      typed_extension_protocol_options:\n        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n          \"@type\": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\n          explicit_http_config:\n            http2_protocol_options: {}\nlayered_runtime:\n  layers:\n    - name: static\n      static_layer:\n        re2:\n          max_program_size:\n            error_level: 1000000\n```\n\n----------------------------------------\n\nTITLE: Configuring Oasis Seed Node in YAML\nDESCRIPTION: YAML configuration for an Oasis Network seed node. Sets the node to operate in seed mode, specifies data directory locations, configures logging formats and levels, and points to the genesis file location.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/seed-node.md#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmode: seed\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: info\n            cometbft/context: error\n            default: info\n\ngenesis:\n    file: /node/etc/genesis.json\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Signer Directory in Linux\nDESCRIPTION: Creates a directory for the remote signer with restricted permissions.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/remote-signer.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir --mode=700 remote-signer\n```\n\n----------------------------------------\n\nTITLE: Running AESM Service with Custom Config\nDESCRIPTION: Docker command to run the AESM service with a custom Quote Provider configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --volume /etc/sgx_default_qcnl.conf:/etc/sgx_default_qcnl.conf \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n```\n\n----------------------------------------\n\nTITLE: Obtaining Node ID using oasis-node Control Status\nDESCRIPTION: Command to get the ID of a running Oasis node using the oasis-node control status endpoint and jq to extract the node identity.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/adding-or-removing-nodes.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock | jq .identity.node\n```\n\n----------------------------------------\n\nTITLE: Staking Tokens for Oasis Node Registration\nDESCRIPTION: Shell commands to delegate tokens for entity and node registration, including options for funding from a different account.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\noasis account delegate 200 my_entity --no-paratime --account my_entity\n```\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet import my_funding_account\n```\n\nLANGUAGE: shell\nCODE:\n```\noasis account delegate 200 my_entity --no-paratime --account my_funding_account\n```\n\n----------------------------------------\n\nTITLE: Regenerating Node Keys\nDESCRIPTION: Command to regenerate node identity keys while preserving other existing keys.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity init --datadir ./\n```\n\n----------------------------------------\n\nTITLE: Configuring Hardhat for Sourcify Verification\nDESCRIPTION: Configuration settings for the hardhat.config.ts file to enable Sourcify verification and disable Etherscan verification, which is not supported on Sapphire.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/verification.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\netherscan: {\n\t//  Enabled by default (not supported on Sapphire)\n\tenabled: false\n},\nsourcify: {\n\t// Disabled by default\n\t// Doesn't need an API key\n\tenabled: true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Monitoring Host and Port in YAML\nDESCRIPTION: YAML configuration snippet for setting up the monitoring host and port for the Oasis Web3 Gateway. This allows for metrics reporting on a specified localhost port.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/web3.mdx#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmonitoring:\n  host: \"localhost\"\n  # Use different port for each Web3 gateway instance, if all run locally.\n  port: 9999\n```\n\n----------------------------------------\n\nTITLE: Deploying on Emerald Mainnet\nDESCRIPTION: Command to deploy the smart contract on the Emerald mainnet using Hardhat with a specific private key.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ PRIVATE_KEY=\"0xYOUR_MAINNET_PRIVATE_KEY\" npx hardhat run scripts/deploy.ts --network emerald_mainnet\n```\n\n----------------------------------------\n\nTITLE: Checking Account Information in Oasis Network\nDESCRIPTION: Command to retrieve account information including balance and nonce. Used to verify sufficient balance for transactions and the correct nonce value.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-node stake account info\n```\n\n----------------------------------------\n\nTITLE: Initializing Hardhat Project for Emerald dApp Development\nDESCRIPTION: Command to initialize a new Hardhat project with TypeScript support for Emerald dApp development.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx hardhat init\n```\n\n----------------------------------------\n\nTITLE: Running AESM Service in Docker\nDESCRIPTION: Docker command to run the AESM service container with proper device mappings and volumes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n```\n\n----------------------------------------\n\nTITLE: Checking Current Node Status During Upgrade\nDESCRIPTION: Command to check the current consensus height and epoch of a node while waiting for the network upgrade epoch.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Sentry Node Configuration\nDESCRIPTION: YAML configuration for an Oasis sentry node, including network settings, consensus parameters, and security settings.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmode: client\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: warn\n            cometbft/context: error\n            default: debug\nconsensus:\n    external_address: tcp://{{ external_address }}:26656\n    listen_address: tcp://0.0.0.0:26656\n    sentry_upstream_addresses:\n        - {{ validator_tendermint_id }}@{{ validator_private_address }}:26656\ngenesis:\n    file: /node/etc/genesis.json\np2p:\n    seeds:\n        - {{ seed_node_address }}\nsentry:\n    control:\n        authorized_pubkeys:\n            - {{ validator_sentry_client_grpc_public_key }}\n        port: 9009\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Sapphire Localnet Docker Container\nDESCRIPTION: Command to run the Sapphire localnet Docker container, exposing ports 8544-8548 for Web3 endpoints, GRPC, Nexus API, and Explorer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/sapphire-localnet\n```\n\n----------------------------------------\n\nTITLE: Installing Sapphire Foundry package\nDESCRIPTION: Command to install the Sapphire Foundry package using Soldeer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nforge soldeer install @oasisprotocol-sapphire-foundry~0.1.0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Oasis Seed Node Tendermint Address\nDESCRIPTION: Command to obtain the Tendermint identity of the seed node. This address is needed for other nodes to connect to this seed node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/seed-node.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity tendermint show-node-address --datadir /node/data/\n```\n\n----------------------------------------\n\nTITLE: Verifying Contract with Foundry CLI\nDESCRIPTION: Command-line instruction for verifying a deployed contract using Foundry's forge verify-contract command with Sourcify as the verifier.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/verification.md#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nforge verify-contract <address> src/MyToken.sol:MyToken --verifier sourcify\n```\n\n----------------------------------------\n\nTITLE: Removing Validator TLS Certificates\nDESCRIPTION: Commands to remove existing sentry client TLS certificates from the validator node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrm sentry_client_tls_identity.pem sentry_client_tls_identity_cert.pem\n```\n\n----------------------------------------\n\nTITLE: Deploying and Testing on Emerald Testnet\nDESCRIPTION: Commands to deploy the smart contract and run tests on the Emerald testnet using Hardhat with a specific private key.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ PRIVATE_KEY=\"0xYOUR_TESTNET_PRIVATE_KEY\" npx hardhat run scripts/deploy.ts --network emerald_testnet\n$ PRIVATE_KEY=\"0xYOUR_TESTNET_PRIVATE_KEY\" npx hardhat test --network emerald_testnet\n```\n\n----------------------------------------\n\nTITLE: Printing Key Manager Policy Details\nDESCRIPTION: Command to print and inspect a key manager policy using oasis-node, with flags to ignore signature verification and enable verbose output.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/signing-key-manager-policy.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\noasis-node keymanager verify_policy \\\n  --keymanager.policy.file $POLICY \\\n  --keymanager.policy.ignore.signature \\\n  --verbose\n```\n\n----------------------------------------\n\nTITLE: iAck Function Signature for Handling Cross-Chain Acknowledgements\nDESCRIPTION: The function signature for iAck, which is called on the source chain to handle acknowledgment of cross-chain message execution.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_7\n\nLANGUAGE: solidity\nCODE:\n```\nfunction iAck(\n    uint256 requestIdentifier,\n    bool execFlag,\n    bytes memory execData\n  ) external\n```\n\n----------------------------------------\n\nTITLE: Creating Ledger-Based Entity Account with Oasis CLI\nDESCRIPTION: Creates an entity account in Oasis CLI using a Ledger hardware wallet for key storage.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet create my_entity --kind ledger\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple ParaTime Versions in YAML\nDESCRIPTION: This YAML configuration snippet demonstrates how to specify multiple versions of ParaTime bundles in the Oasis node configuration. This allows the node to automatically run the correct version as specified in the registry.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n  paths:\n    - /path/to/emerald-paratime-7.1.0-testnet.orc\n    - /path/to/emerald-paratime-8.0.0-testnet.orc\n```\n\n----------------------------------------\n\nTITLE: Removing Sentry TLS Certificates\nDESCRIPTION: Commands to remove existing TLS certificates from the sentry node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nrm tls_identity.pem tls_identity_cert.pem\n```\n\n----------------------------------------\n\nTITLE: Installing Intel SGX Repository\nDESCRIPTION: Commands to add Intel's official SGX repository and install required packages on Ubuntu 22.04+.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo gpg --dearmor -o /usr/share/keyrings/intel-sgx-deb.gpg\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/intel-sgx-deb.gpg] https://download.01.org/intel-sgx/sgx_repo/ubuntu $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/intel-sgx.list > /dev/null\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update\nsudo apt install sgx-aesm-service libsgx-aesm-ecdsa-plugin libsgx-aesm-quote-ex-plugin libsgx-dcap-default-qpl\n```\n\n----------------------------------------\n\nTITLE: Executing Graceful Shutdown of Oasis Node using Bash\nDESCRIPTION: This snippet demonstrates two methods to initiate a graceful shutdown of an Oasis node. The first command issues a shutdown request, while the second command also waits for the node to terminate, which can take up to a full epoch.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/shutting-down-a-node.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Issue a graceful shutdown request.\noasis-node control shutdown\n\n# Issue a graceful shutdown request, and block until the node terminates.\n# Note: This can take up to a full epoch to complete.\noasis-node control shutdown \\\n  --wait\n```\n\n----------------------------------------\n\nTITLE: TEE ParaTime Client Node Configuration\nDESCRIPTION: Additional YAML configuration for a TEE ParaTime client node that needs to issue queries accessing confidential data, specifying the SGX environment and loader path.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n    # Paths to ParaTime bundles for all of the supported ParaTimes.\n    paths:\n        - {{ runtime_orc_path }}\n    environment: sgx\n    sgx_loader: /node/bin/oasis-core-runtime-loader\n```\n\n----------------------------------------\n\nTITLE: Starting a Hyperlane Relayer Between Chains\nDESCRIPTION: Command to start a Hyperlane relayer that watches and transports messages between Arbitrum Sepolia and Sapphire Testnet chains.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/relayer.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nhyperlane relayer --chains sapphiretestnet,arbitrumsepolia\n```\n\n----------------------------------------\n\nTITLE: Sapphire Localnet Console Output\nDESCRIPTION: Example console output when running the Sapphire localnet container, showing network information, available test accounts, private keys, and endpoint URLs.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nsapphire-localnet 2024-11-29-gite748a1a (oasis-core: 24.3, sapphire-paratime: 0.9.0-testnet, oasis-web3-gateway: 5.1.0)\n\n * No ROFLs detected.\n * Starting oasis-net-runner with sapphire...\n * Waiting for Postgres to start...\n * Waiting for Oasis node to start.....\n * Waiting for Envoy proxy to start.\n * Starting oasis-web3-gateway...\n * Bootstrapping network (this might take a minute)....\n * Waiting for key manager......\n * Creating database 'nexus'\n * Waiting for Nexus to start.\n * Waiting for Explorer to start.\n * Populating accounts...\n\nAvailable Accounts\n==================\n(0) 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (10000 TEST)\n(1) 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 (10000 TEST)\n(2) 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC (10000 TEST)\n(3) 0x90F79bf6EB2c4f870365E785982E1f101E93b906 (10000 TEST)\n(4) 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 (10000 TEST)\n\nPrivate Keys\n==================\n(0) 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\n(1) 0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\n(2) 0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a\n(3) 0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6\n(4) 0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a\n\nHD Wallet\n==================\nMnemonic:     test test test test test test test test test test test junk\nBase HD Path: m/44'/60'/0'/0/%d\n\nWARNING: The chain is running in ephemeral mode. State will be lost after restart!\n\n * GRPC listening on http://localhost:8544.\n * Web3 RPC listening on http://localhost:8545 and ws://localhost:8546. Chain ID: 0x5afd.\n * Nexus API listening on http://localhost:8547.\n * Localnet Explorer available at http://localhost:8548.\n * Container start-up took 69 seconds, node log level is set to warn.\n```\n\n----------------------------------------\n\nTITLE: Installing Sapphire precompiles\nDESCRIPTION: Commands to build and install Sapphire precompiles for use with Foundry.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncd dependencies/@oasisprotocol-sapphire-foundry-0.1.0/precompiles\ncargo +nightly build --release\n```\n\n----------------------------------------\n\nTITLE: Starting Oasis Node with Configuration File in Bash\nDESCRIPTION: This command demonstrates how to start the Oasis Node without a process manager, specifying a configuration file. It's recommended to use a process manager for production deployments.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Checking DCAP Support\nDESCRIPTION: Commands to verify if the system supports DCAP attestation by checking CPU features.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncpuid -1  | grep \"SGX\"\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n      SGX_LC: SGX launch config supported      = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Oasis Node with Remote Signer\nDESCRIPTION: YAML configuration for the Oasis node to use the remote signer for consensus key operations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/remote-signer.mdx#2025-04-16_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Signer.\nsigner:\n  backend: composite\n  # Use file-based signer for entity, node and P2P keys and remote signer for the\n  # consensus key.\n  composite:\n    backends: entity:file,node:file,p2p:file,consensus:remote\n  # Configure how to connect to the Oasis Remote Signer.\n  remote:\n    address: <YOUR-REMOTE-SIGNER-IP>:<YOUR-REMOTE-SIGNER-PORT>\n    server:\n      certificate: /node/data/remote-signer/remote_signer_server_cert.pem\n    client:\n      key: /node/data/remote-signer/remote_signer_client_key.pem\n      certificate: /node/data/remote-signer/remote_signer_client_cert.pem\n```\n\n----------------------------------------\n\nTITLE: Checking BadgerDB Migration Progress in Bash\nDESCRIPTION: This Bash command is used to monitor the progress of the BadgerDB v2 to v3 migration. It lists the sizes of various BadgerDB directories, sorted by size in descending order.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nshopt -s globstar\ndu -h <DATA-DIR>/**/*.badger.db* | sort -h -r\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive Node for Cobalt Network\nDESCRIPTION: YAML configuration for running an archive node on the Cobalt network using Oasis Core v21.3.14. Includes settings for storage worker and runtime support.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndatadir: /node/data\n\nlog:\n  level:\n    default: info\n    tendermint: info\n    tendermint/context: error\n  format: JSON\n\ngenesis:\n  file: /node/etc/genesis.json\n\nconsensus:\n  tendermint:\n    mode: archive\n\nruntime:\n  supported:\n    - \"{{ runtime_id }}\"\n\n  paths:\n    \"{{ runtime_id }}\": {{ paratime_binary_path }}\n\nworker:\n  storage:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Oasis Unmnemonic Tool on Different Operating Systems\nDESCRIPTION: Commands to run the Oasis unmnemonic tool on Linux, MacOS, and Windows. This tool is used to convert BitPie mnemonics to Oasis private keys when the ROSE account is no longer visible in BitPie.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/faq.mdx#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./unmnemonic_linux_amd64\n```\n\nLANGUAGE: shell\nCODE:\n```\n./unmnemonic_darwin_all\n```\n\nLANGUAGE: shell\nCODE:\n```\nunmnemonic_windows_amd64\n```\n\n----------------------------------------\n\nTITLE: Running Emerald Localnet with Custom Mnemonic\nDESCRIPTION: Command to run the Emerald localnet container with a custom mnemonic seed phrase and specifying the number of derived addresses to fund.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/emerald-localnet -to \"bench remain brave curve frozen verify dream margin alarm world repair innocent\" -n3\n```\n\n----------------------------------------\n\nTITLE: Entity Descriptor JSON with Removed Node\nDESCRIPTION: Example JSON structure of an entity descriptor after removing a node. The node ID has been removed from the nodes array.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/adding-or-removing-nodes.md#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"v\": 2,\n  \"id\": \"xQN6ffLSdc51EfEQ2BzltK1iWYAw6Y1CkBAbFzlhhEQ=\",\n  \"nodes\": [\n    \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\"\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Entity Descriptor from Oasis Network\nDESCRIPTION: Example using the 'oasis network show' command to retrieve an entity's descriptor from the network registry.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/adding-or-removing-nodes.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n../../../../external/cli/examples/network-show/id-entity.in\n```\n\n----------------------------------------\n\nTITLE: Running Oasis Node Commands with Specific User Permissions\nDESCRIPTION: This command demonstrates how to run the oasis-node unsafe-reset operation as a specific user (with UID 1000) who owns the data directory files. This is necessary when encountering file ownership errors during node operations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/wiping-node-state.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo --user=#1000 -- oasis-node unsafe-reset --datadir=/node/data --dry_run --log.level info\n```\n\n----------------------------------------\n\nTITLE: Running Sapphire Localnet with Specific Addresses\nDESCRIPTION: Command to run the Sapphire localnet container with specified wallet addresses to fund instead of using derived addresses.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/sapphire-localnet -to \"0x75eCF0d4496C2f10e4e9aF3D4d174576Ee9010E2,0xbDA5747bFD65F08deb54cb465eB87D40e51B197E\"\n```\n\n----------------------------------------\n\nTITLE: Signing Key Manager Policy\nDESCRIPTION: Command to sign a key manager policy using an entity's private key, generating a signature file with the signer's name.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/signing-key-manager-policy.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node keymanager sign_policy \\\n  --keymanager.policy.file $POLICY \\\n  --keymanager.policy.key.file $KEY \\\n  --keymanager.policy.signature.file $POLICY.$NAME.signed\n```\n\n----------------------------------------\n\nTITLE: Checking Oasis Node Status\nDESCRIPTION: Command to check the status of the running Oasis node by connecting to its internal socket. This allows verification that the node is properly connected to the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Entity Descriptor JSON with Multiple Nodes\nDESCRIPTION: Example JSON structure of an entity descriptor with two attached nodes. This format is used when adding nodes to an entity.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/adding-or-removing-nodes.md#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"v\": 2,\n  \"id\": \"xQN6ffLSdc51EfEQ2BzltK1iWYAw6Y1CkBAbFzlhhEQ=\",\n  \"nodes\": [\n     \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\",\n     \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB=\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Entity Account with Oasis CLI\nDESCRIPTION: Generates a new entity keypair and stores the private key in an encrypted file using Oasis CLI.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet create my_entity\n```\n\n----------------------------------------\n\nTITLE: Creating Working Directory Structure for Oasis Node\nDESCRIPTION: Command to create the required directory structure for an Oasis Network seed node with appropriate permissions. Creates 'etc' for configuration files and 'data' for blockchain state with rwx------ permissions.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/seed-node.md#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nmkdir -m700 -p /node/{etc,data}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tendermint Consensus Parameters\nDESCRIPTION: Comprehensive configuration parameters for the Tendermint BFT consensus protocol, including block intervals, size limits, gas limits, and checkpoint settings. These parameters define the core operational characteristics of the network's consensus mechanism.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nconsensus.backend = \"tendermint\"\nconsensus.params.timeout_commit = 5000000000\nconsensus.params.max_tx_size = 32768\nconsensus.params.max_block_size = 22020096\nconsensus.params.max_block_gas = 0\nconsensus.params.max_evidence_size = 51200\nconsensus.params.public_key_blacklist = []\nconsensus.params.state_checkpoint_interval = 10000\nconsensus.params.state_checkpoint_num_kept = 2\nconsensus.params.state_checkpoint_chunk_size = 8388608\n```\n\n----------------------------------------\n\nTITLE: Installing Foundry using Foundryup\nDESCRIPTION: Commands to install and run Foundryup, which sets up the Foundry development environment.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -L https://foundry.paradigm.xyz | bash\nfoundryup\nsource ~/.bashrc\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Configuration for Emerald Localnet\nDESCRIPTION: GitHub Actions YAML configuration to start an Emerald localnet container as a service for CI/CD testing, exposing the necessary ports and setting a health check.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  example-test:\n    services:\n      emerald-localnet-ci:\n        image: ghcr.io/oasisprotocol/emerald-localnet\n        ports:\n          - 8544:8544\n          - 8545:8545\n          - 8546:8546\n        env:\n          OASIS_DOCKER_START_EXPLORER: no\n        options: >\n          --rm\n          --health-cmd=\"test -f /CONTAINER_READY\"\n          --health-start-period=90s\n```\n\n----------------------------------------\n\nTITLE: Installing Bubblewrap Sandbox on Ubuntu\nDESCRIPTION: Command for installing the Bubblewrap sandbox on Ubuntu 18.10+ which is required for ParaTime client nodes to execute ParaTime binaries in a sandboxed environment.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install bubblewrap\n```\n\n----------------------------------------\n\nTITLE: Setting Correct Permissions for PEM Files in Oasis Node\nDESCRIPTION: Command to set the required 600 permissions (owner read/write only) for all PEM files in a specified directory.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nchmod -R 600 /path/*.pem\n```\n\n----------------------------------------\n\nTITLE: Checking SGX Device Permissions\nDESCRIPTION: Example showing the expected permissions for the SGX device file and how to verify them.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncrw-rw---- 1 root sgx 10, 125 Oct 28 09:28 /dev/sgx_enclave\n```\n\n----------------------------------------\n\nTITLE: Configuring Node for Observer Role in YAML\nDESCRIPTION: Example YAML configuration for setting up a node in client mode with entity registration. This configures the node to automatically register for the observer role.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-observer-node.mdx#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmode: client\n# ... sections not relevant are omitted ...\nregistration:\n  entity_id: {{ entity_id }}\n```\n\n----------------------------------------\n\nTITLE: Installing and Building Hyperlane CLI\nDESCRIPTION: Commands to install dependencies and build the Hyperlane project. Uses Yarn to manage dependencies and build the required packages.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/cli.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn install && yarn build\n```\n\n----------------------------------------\n\nTITLE: Running Emerald Localnet with Specific Addresses\nDESCRIPTION: Command to run the Emerald localnet container with specified wallet addresses to fund instead of using derived addresses.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/emerald-localnet -to \"0x75eCF0d4496C2f10e4e9aF3D4d174576Ee9010E2,0xbDA5747bFD65F08deb54cb465eB87D40e51B197E\"\n```\n\n----------------------------------------\n\nTITLE: Importing Existing Entity Private Key to Oasis CLI\nDESCRIPTION: Imports an existing entity.pem private key file into Oasis CLI for managing an entity account.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet import-file my_entity entity.pem\n```\n\n----------------------------------------\n\nTITLE: Obtaining Oasis Node ID\nDESCRIPTION: Shell command to retrieve the unique node ID required for associating the node with an entity in the network registry.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock | jq .identity.node\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive Node for Oasis Core 23+\nDESCRIPTION: YAML configuration for setting up an archive node in Oasis Core version 23 and later. Specifies core settings including data directory, logging, and runtime paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmode: archive\ncommon:\n    data_dir: /node/data\n    log:\n        format: JSON\n        level:\n            cometbft: info\n            cometbft/context: error\n            default: info\ngenesis:\n    file: /node/etc/genesis.json\nruntime:\n    # Paths to ParaTime bundles for all of the supported ParaTimes.\n    paths:\n        - {{ runtime_orc_path }}\n```\n\n----------------------------------------\n\nTITLE: Setting Correct Permissions for Node Directories\nDESCRIPTION: Commands to set the required 700 permissions (owner read/write/execute only) on existing node data and configuration directories.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nchmod 700 /node/data\nchmod 700 /node/etc\n```\n\n----------------------------------------\n\nTITLE: Defining Key Manager Policy Variables in Shell\nDESCRIPTION: Sets up environment variables for policy file path, entity key path, and signer name to be used in subsequent commands.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/signing-key-manager-policy.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nPOLICY=path/to/policy.cbor\nKEY=path/to/entity/key.pem\nNAME=your_name\n```\n\n----------------------------------------\n\nTITLE: Starting an Oasis Seed Node\nDESCRIPTION: Command to start the Oasis Network seed node using the configuration file. This launches the node with the settings specified in the YAML configuration file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/seed-node.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Querying ParaTime Versions from Network Registry in Bash\nDESCRIPTION: This command uses the 'oasis network show paratimes' command to query the network registry and extract version information for a specific ParaTime using jq for JSON processing.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\noasis network show paratimes | \njq 'select(.id==\"00000000000000000000000000000000000000000000000072c8215e60d5bca7\") | .deployments'\n```\n\n----------------------------------------\n\nTITLE: Performing Dry Run for Consensus State Reset in Oasis Protocol\nDESCRIPTION: This command performs a dry run of the unsafe-reset operation to preview which files will be deleted when wiping consensus state while preserving node identity. It uses the oasis-node command line tool targeting the node's data directory.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/wiping-node-state.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Do a dry run first to see which files will get deleted.\noasis-node unsafe-reset \\\n  --datadir=/node/data \\\n  --dry_run\n```\n\n----------------------------------------\n\nTITLE: Setting Proper Permissions for Oasis Node Directories\nDESCRIPTION: Shell command to remove all non-owner read/write/execute permissions for the Oasis node directories, ensuring proper security.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nchmod -R go-r,go-w,go-x /node\n```\n\n----------------------------------------\n\nTITLE: Running the Hyperlane CLI\nDESCRIPTION: Command to execute the modified Hyperlane CLI. Uses Yarn workspace to run the CLI from the @hyperlane-xyz/cli package.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/cli.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn workspace @hyperlane-xyz/cli hyperlane\n```\n\n----------------------------------------\n\nTITLE: Installing Router Protocol EVM Gateway Contracts with npm\nDESCRIPTION: Command to install the Router Protocol EVM Gateway contracts library using npm package manager.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @routerprotocol/evm-gateway-contracts\n```\n\n----------------------------------------\n\nTITLE: Disabling Etherscan Verification in Hardhat Config\nDESCRIPTION: Configuration snippet to disable Etherscan verification in the Hardhat configuration file, which is necessary for Sapphire networks where Etherscan is not supported.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/verification.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\netherscan: {\n    //  Enabled by default (not supported on Sapphire)\n    enabled: false\n},\n```\n\n----------------------------------------\n\nTITLE: Installing Bubblewrap Sandbox on Fedora\nDESCRIPTION: Command for installing the Bubblewrap sandbox on Fedora which is required for ParaTime client nodes to execute ParaTime binaries in a sandboxed environment.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf install bubblewrap\n```\n\n----------------------------------------\n\nTITLE: Starting the Oasis Node\nDESCRIPTION: Command to start the Oasis Node using the specified configuration file, which will run the ParaTime client node with the settings defined in the config.yml file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Setting Correct Ownership for Node Directory\nDESCRIPTION: Command to change ownership of the node directory to the user running the node, which helps prevent permission issues especially when using Docker.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nchown -R docker-host:docker-host /node\n```\n\n----------------------------------------\n\nTITLE: Slashing Parameters Documentation in Markdown\nDESCRIPTION: Specifies penalties and freeze periods for network violations like equivocation and light client attacks.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n* Equivocation penalty: 100,000,000,000 base units (100 ROSE)\n* Light client attack penalty: 100,000,000,000 base units (100 ROSE)\n* Freeze interval: 18446744073709551615 epochs (permanent)\n```\n\n----------------------------------------\n\nTITLE: Network Information Table Collection - Markdown\nDESCRIPTION: A collection of tables showing RPC endpoints, block explorers, and indexers for the Cipher network, including both mainnet and testnet configurations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/network.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Provider                    | Mainnet RPC URLs    | Testnet RPC URLs            |\n|-----------------------------|---------------------|-----------------------------|\\n| [Oasis Protocol Foundation] | `grpc.oasis.io:443` | `testnet.grpc.oasis.io:443` |\n```\n\nLANGUAGE: markdown\nCODE:\n```\n| Name/Provider               | Mainnet URL                               | Testnet URL                               | EIP-3091 compatible |\n|-----------------------------|-------------------------------------------|-------------------------------------------|---------------------|\n| Oasis Scan ([Bit Cat])                      | [https://www.oasisscan.com/paratimes/000…7cb](https://www.oasisscan.com/paratimes/000000000000000000000000000000000000000000000000e199119c992377cb) | [https://testnet.oasisscan.com/paratimes/000…000](https://testnet.oasisscan.com/paratimes/0000000000000000000000000000000000000000000000000000000000000000) | No |\n```\n\nLANGUAGE: markdown\nCODE:\n```\n| Name (Provider)                           | Mainnet URL                                           | Testnet URL                          | Documentation     |\n|-------------------------------------------|-------------------------------------------------------|--------------------------------------|-------------------|\n| Oasis Scan ([Bit Cat])                    | `https://api.oasisscan.com/v2/mainnet`                | `https://api.oasisscan.com/v2/testnet` | [Runtime API][OasisScan-docs] |\n```\n\n----------------------------------------\n\nTITLE: Installing SGX Dependencies on Fedora\nDESCRIPTION: Command to install required dependencies for SGX tools on Fedora system.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf install gcc protobuf-compiler pkg-config openssl-devel\n```\n\n----------------------------------------\n\nTITLE: Querying Celer IM Scan API for Transaction Status\nDESCRIPTION: An HTTP endpoint used to retrieve status and message details for cross-chain transactions. The API expects a transaction hash from the origin chain and returns information about the message delivery status.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/celer/README.md#2025-04-16_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttps://api.celerscan.com/scan/searchByTxHash?tx=0x...\n```\n\n----------------------------------------\n\nTITLE: Starting the Oasis Node\nDESCRIPTION: Command to start the Oasis node using the previously created configuration file. This launches the node in non-validator mode with the specified configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/non-validator-node.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive URI for Historical Queries in YAML\nDESCRIPTION: YAML configuration snippet for setting up an archive Web3 gateway instance to handle historical queries. This enables access to older EVM blocks by proxying requests to an archive instance.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/web3.mdx#2025-04-16_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# URI of an archive web3 gateway instance for servicing historical queries.\narchive_uri: 'http://localhost:8543'\n```\n\n----------------------------------------\n\nTITLE: Genesis File Differences in Mainnet Upgrade\nDESCRIPTION: Example diff output showing changes between Mainnet Beta and Mainnet network upgrade genesis files, including chain ID, genesis time, reward schedule, and other network parameters.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n--- genesis_dump.json    2020-11-16 17:49:46.864554271 +0100\n+++ genesis.json    2020-11-16 17:49:40.353496022 +0100\n@@ -1,7 +1,7 @@\n {\n   \"height\": 702000,\n-  \"genesis_time\": \"2020-11-18T13:38:00Z\",\n-  \"chain_id\": \"mainnet-beta-2020-10-01-1601568000\",\n+  \"genesis_time\": \"2020-11-18T16:00:00Z\",\n+  \"chain_id\": \"oasis-1\",\n   \"epochtime\": {\n     \"params\": {\n       \"interval\": 600\n@@ -2506,1563 +2506,1779 @@\n       \"debonding_interval\": 336,\n       \"reward_schedule\": [\n         {\n-          \"until\": 3696,\n-          \"scale\": \"1595\"\n+          \"until\": 4842,\n+          \"scale\": \"2081\"\n         },\n         {\n-          \"until\": 3720,\n-          \"scale\": \"1594\"\n+          \"until\": 4866,\n+          \"scale\": \"2080\"\n         },\n\n        ... trimmed ...\n\n         {\n-          \"until\": 35712,\n+          \"until\": 36882,\n           \"scale\": \"2\"\n         },\n         {\n-          \"until\": 35760,\n+          \"until\": 36930,\n           \"scale\": \"1\"\n         }\n       ],\n@@ -4087,7 +4303,6 @@\n         \"transfer\": 1000\n       },\n       \"min_delegation\": \"100000000000\",\n-      \"disable_transfers\": true,\n       \"fee_split_weight_propose\": \"2\",\n       \"fee_split_weight_vote\": \"1\",\n       \"fee_split_weight_next_propose\": \"1\",\n@@ -4097,7 +4312,7 @@\n     \"token_symbol\": \"ROSE\",\n     \"token_value_exponent\": 9,\n     \"total_supply\": \"10000000000000000000\",\n-    \"common_pool\": \"1835039672187348312\",\n+    \"common_pool\": \"2285039672187348312\",\n     \"last_block_fees\": \"0\",\n     \"ledger\": {\n       \"oasis1qp0l8r2s3076n4xrq8av0uuqegj7z9kq55gu5exy\": {\n@@ -6419,7 +6634,7 @@\n       },\n       \"oasis1qrad7s7nqm4gvyzr8yt2rdk0ref489rn3vn400d6\": {\n         \"general\": {\n-          \"balance\": \"1633038701000000000\"\n+          \"balance\": \"1183038701000000000\"\n         },\n         \"escrow\": {\n           \"active\": {\n@@ -9862,6 +10077,8 @@\n       }\n     }\n   },\n-  \"halt_epoch\": 1440,\n-  \"extra_data\": null\n+  \"halt_epoch\": 9940,\n+  \"extra_data\": {\n+    \"quote\": \"UXVpcyBjdXN0b2RpZXQgaXBzb3MgY3VzdG9kZXM/IFtzdWJtaXR0ZWQgYnkgT2FzaXMgQ29tbXVuaXR5IE1lbWJlciBEYW5peWFyIEJvcmFuZ2F6aXlldl0=\"\n+  }\n }\n```\n\n----------------------------------------\n\nTITLE: Executing Oasis App Installer\nDESCRIPTION: Command to execute the Oasis App installer for Ledger Nano S devices.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n./installer_s.sh load\n```\n\n----------------------------------------\n\nTITLE: Installing Rust toolchain for Sapphire Foundry\nDESCRIPTION: Commands to install the Rust toolchain (nightly version) required for Sapphire Foundry.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nrustup toolchain install nightly\nrustup default nightly\n```\n\n----------------------------------------\n\nTITLE: Installing SGX Dependencies on Ubuntu\nDESCRIPTION: Command to install required dependencies for SGX tools on Ubuntu system.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install gcc protobuf-compiler pkg-config libssl-dev\n```\n\n----------------------------------------\n\nTITLE: Initializing Entity Descriptor File with Oasis CLI\nDESCRIPTION: Creates a JSON entity descriptor file containing the public key of the entity account for node configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\noasis account entity init -o /localhostdir/entity/entity.json --account my_entity\n```\n\n----------------------------------------\n\nTITLE: Estimating Extra Storage Space for BadgerDB Migration in Bash\nDESCRIPTION: This Bash command is used to estimate the extra storage space required for the BadgerDB v2 to v3 migration. It lists the sizes of all BadgerDB directories, sorted by size in descending order.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nshopt -s globstar\ndu -h <DATA-DIR>/**/*.badger.db | sort -h -r\n```\n\n----------------------------------------\n\nTITLE: Cobalt Upgrade Descriptor\nDESCRIPTION: JSON upgrade descriptor for the Cobalt upgrade to be submitted before the upgrade epoch.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"name\": \"mainnet-upgrade-2021-04-28\",\n  \"method\": \"internal\",\n  \"identifier\": \"mainnet-upgrade-2021-04-28\",\n  \"epoch\": 5046\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Key Manager Status in Oasis Protocol\nDESCRIPTION: Command to check the status of a key manager node after upgrade. This output shows the registration details, runtime information, and key manager status, including the hash of the key material state.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/key-manager-upgrade.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ oasis-node -a unix:/node/data/internal.sock control status\n...\n  \"registration\": {\n    \"last_registration\": \"2023-02-06T08:40:30Z\",\n    \"descriptor\": {\n...\n      \"runtimes\": [\n        {\n          \"id\": \"4000000000000000000000000000000000000000000000004a1a53dff2ae482d\",\n          \"version\": {\n            \"minor\": 3,\n            \"patch\": 3\n          },\n          \"capabilities\": {\n            \"tee\": {\n              \"hardware\": 1,\n...\n            }\n          },\n          \"extra_info\": \"omlzaWduYXR1cmVYQG7nDuKTOUKAlJAfukdY6Xljox376lCLI0cIP0zPw2B8abJxa31j+NoQAWA0KZuHD41XPyICmjXDTpjDXukEEgVtaW5pdF9yZXNwb25zZaNoY2hlY2tzdW1YIEWZF5YaFQChstrZ9u1UdgyqZCagmNfghvyQna9WkmvyaWlzX3NlY3VyZfVvcG9saWN5X2NoZWNrc3VtWCCsrqRzYjx05t+KoCYz7wFSdKJ720g2LQBAsRKXmClMvw==\"\n        }\n      ],\n      \"roles\": \"key-manager\",\n    }\n  }\n...\n  \"keymanager\": {\n    \"status\": \"ready\",\n    \"may_generate\": false,\n    \"runtime_id\": \"4000000000000000000000000000000000000000000000004a1a53dff2ae482d\",\n    \"client_runtimes\": [\n      \"000000000000000000000000000000000000000000000000a6d1e3ebf60dff6c\",\n      \"0000000000000000000000000000000000000000000000000000000000000000\"\n    ],\n    \"access_list\": [\n...\n    ],\n    \"private_peers\": [\n...\n    ]\n  }\n```\n\n----------------------------------------\n\nTITLE: Genesis Document Hash Configuration\nDESCRIPTION: SHA256 hash for the Testnet genesis document used for network initialization and validation\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/testnet/README.md#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n0b91b8e4e44b2003a7c5e23ddadb5e14ef5345c0ebcb3ddcae07fa2f244cab76\n```\n\n----------------------------------------\n\nTITLE: Removing EPID Attestation Packages on Ubuntu\nDESCRIPTION: Command to remove legacy EPID attestation packages from Ubuntu 22.04 system.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt remove libsgx-aesm-launch-plugin libsgx-aesm-epid-plugin\n```\n\n----------------------------------------\n\nTITLE: Using oasis-node Control Status Command\nDESCRIPTION: Bash command to retrieve the current block height and hash from an existing trusted Oasis node. This information can be used as the trusted height and hash for state sync configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Installing sgxs-tools via Cargo\nDESCRIPTION: Command to build and install sgxs-tools using Cargo package manager.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncargo install sgxs-tools\n```\n\n----------------------------------------\n\nTITLE: Executing Consensus State Reset in Oasis Protocol\nDESCRIPTION: This command performs the actual unsafe-reset operation to delete consensus state while preserving node identity. It uses the oasis-node command line tool targeting the node's data directory.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/wiping-node-state.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Delete.\noasis-node unsafe-reset \\\n  --datadir /node/data\n```\n\n----------------------------------------\n\nTITLE: Upgrade Proposal Structure in YAML\nDESCRIPTION: The upgrade governance proposal structure defining protocol version upgrades for consensus, runtime host, and runtime committee protocols.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{\n   \"v\": 1,\n    \"handler\": \"mainnet-upgrade-2022-04-11\",\n    \"target\": {\n        \"consensus_protocol\": {\n            \"major\": 5\n        },\n        \"runtime_host_protocol\": {\n            \"major\": 5\n        },\n        \"runtime_committee_protocol\": {\n            \"major\": 4\n        }\n    },\n    \"epoch\": 13402\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Sentry Node Identity\nDESCRIPTION: Command to initialize the identity keys for a new sentry node in the specified data directory.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity init --datadir /node/data\n```\n\n----------------------------------------\n\nTITLE: Displaying Sentry Client Public Key\nDESCRIPTION: Command to show the Base64-encoded sentry client TLS public key for configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity show-sentry-client-pubkey --datadir ./\n```\n\n----------------------------------------\n\nTITLE: Hyperlane Contract Addresses Configuration for Sapphire Testnet\nDESCRIPTION: YAML configuration containing the deployed Hyperlane contract addresses on Sapphire Testnet. These addresses are required for the relayer to locate and interact with the core Hyperlane infrastructure on the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/relayer.md#2025-04-16_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ndomainRoutingIsmFactory: \"0x3497967f8E5041f486eC559E6B760d8f051A034C\"\ninterchainAccountIsm: \"0xD84DE931A0EDA06Af3944a4e9933c24f3B56DCaC\"\ninterchainAccountRouter: \"0xFdca43771912CE5F5B4D869B0c05df0b6eF8aEFc\"\nmailbox: \"0x79d3ECb26619B968A68CE9337DfE016aeA471435\"\nproxyAdmin: \"0x5Ed8004e3352df333901b0B2E98Bd98C3B4AA59A\"\nstaticAggregationHookFactory: \"0x212c232Ee07E187CF9b4497A30A3a4D034aAC4D6\"\nstaticAggregationIsmFactory: \"0xE25A539AdCa1Aac56549997f2bB88272c5D9498c\"\nstaticMerkleRootMultisigIsmFactory: \"0x9851EC4C62943E9974370E87E93CE552abE7705E\"\nstaticMerkleRootWeightedMultisigIsmFactory: \"0x688dE6d0aBcb60a711f149c274014c865446b49D\"\nstaticMessageIdMultisigIsmFactory: \"0xFE0937b1369Bbba59211c4119B91984FF450ccf1\"\nstaticMessageIdWeightedMultisigIsmFactory: \"0x1de05675c8cd512A30c17Ea0a3491d74eF290994\"\ntestRecipient: \"0x7bf548104F8f500C563Aa6DC7FbF3b1ad93E4E03\"\nvalidatorAnnounce: \"0xB119f96a106919489b6495128f30e7088e55B05c\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive Node for Damask Network\nDESCRIPTION: YAML configuration for running an archive node on the Damask network using Oasis Core v22.2.12. Includes settings for data directory, logging, consensus, and runtime configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndatadir: /node/data\n\nlog:\n  level:\n    default: info\n    tendermint: info\n    tendermint/context: error\n  format: JSON\n\ngenesis:\n  file: /node/etc/genesis.json\n\nconsensus:\n  tendermint:\n    mode: archive\n\nruntime:\n  mode: client\n  paths:\n    # Paths to ParaTime bundles for all of the supported ParaTimes.\n    - \"{{ runtime_orc_path }}\"\n```\n\n----------------------------------------\n\nTITLE: Simplified Oasis Node Consensus Configuration in YAML\nDESCRIPTION: A simplified YAML configuration for the consensus backend of an Oasis node, showing only the essential validator settings and Tendermint core configuration with network listening address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n# Consensus backend.\nconsensus:\n  # Setting this to true will mean that the node you're deploying will attempt\n  # to register as a validator.\n  validator: true\n\n  # Tendermint backend configuration.\n  tendermint:\n    core:\n      listen_address: tcp://0.0.0.0:26656\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Initializing Oasis Remote Signer\nDESCRIPTION: Generates node keys and server certificate for the remote signer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/remote-signer.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-remote-signer init --datadir remote-signer/\n```\n\n----------------------------------------\n\nTITLE: Checking Node Registration Status\nDESCRIPTION: Command to verify the node's status including checking if it has properly registered as an observer by examining the registration descriptor roles.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-observer-node.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Verifying Contract with Hardhat CLI\nDESCRIPTION: Command-line instruction for verifying a deployed contract using Hardhat's verify task on the Sapphire testnet.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/verification.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npnpm hardhat verify --network sapphire-testnet DEPLOYED_CONTRACT_ADDRESS \"Constructor argument 1\"\n```\n\n----------------------------------------\n\nTITLE: iSend Function Signature for Cross-Chain Communication\nDESCRIPTION: The function signature for iSend, which initiates cross-chain messages from the source chain. It includes parameters for version, routing details, and message data.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\nfunction iSend(\n  uint256 version,\n  uint256 routeAmount,\n  string calldata routeRecipient,\n  string calldata destChainId,\n  bytes calldata requestMetadata,\n  bytes calldata requestPacket\n) external payable returns (uint256);\n```\n\n----------------------------------------\n\nTITLE: Checking Archive Node Status Command\nDESCRIPTION: Command to check the status of the archive node using the control interface.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Running Sapphire Localnet on Apple M Chips\nDESCRIPTION: Command to run the Sapphire localnet Docker container on Apple M-series chips by forcing the use of linux/x86_64 platform.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 --platform linux/x86_64 ghcr.io/oasisprotocol/sapphire-localnet\n```\n\n----------------------------------------\n\nTITLE: Sentry Node Configuration\nDESCRIPTION: YAML configuration for sentry node with worker settings and authorized public keys.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nworker:\n  sentry:\n    enabled: true\n    control:\n      port: 9009\n      authorized_pubkey:\n        - {{ validator_sentry_client_grpc_public_key }}\n```\n\n----------------------------------------\n\nTITLE: Compiling and Testing Hardhat Project\nDESCRIPTION: Commands to compile the smart contracts and run tests in the Hardhat environment.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npx hardhat compile\n$ npx hardhat test\n```\n\n----------------------------------------\n\nTITLE: Importing IGateway Interface in Solidity\nDESCRIPTION: Code snippet showing how to import the IGateway interface from the Router Protocol library.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\nimport \"@routerprotocol/evm-gateway-contracts/contracts/IGateway.sol\";\n```\n\n----------------------------------------\n\nTITLE: Tunneling Unix Socket via SSH for Oasis Node Access\nDESCRIPTION: Commands for securely accessing an Oasis node's Unix socket over SSH. This allows remote access to the node's RPC interface without filtering services while maintaining security.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/grpc.mdx#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nssh oasis@example.com -L /home/user/oasis-node-internal.sock:/node/data/internal.sock\n```\n\nLANGUAGE: shell\nCODE:\n```\noasis network add-local my-oasis-node unix:/home/user/oasis-node-internal.sock\n```\n\nLANGUAGE: shell\nCODE:\n```\noasis network status --network my-oasis-node\n```\n\n----------------------------------------\n\nTITLE: Running Emerald Localnet on Apple M Chips\nDESCRIPTION: Command to run the Emerald localnet Docker container on Apple M-series chips by forcing the use of linux/x86_64 platform.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 --platform linux/x86_64 ghcr.io/oasisprotocol/emerald-localnet\n```\n\n----------------------------------------\n\nTITLE: Consensus Status JSON Output from Oasis Node\nDESCRIPTION: Sample JSON output from an Oasis node's status command showing consensus information including latest height, hash, time, and epoch. This output provides the values needed for state sync configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"software_version\": \"23.0.5\",\n  \"identity\": {\n    ...\n  },\n  \"consensus\": {\n    ...\n    \"latest_height\": 18466200,\n    \"latest_hash\": \"9611c81c7e231a281f1de491047a833364f97c38142a80abd65ce41bce123378\",\n    \"latest_time\": \"2023-11-27T08:31:15Z\",\n    \"latest_epoch\": 30760,\n    ...\n  },\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Oasis Node Status\nDESCRIPTION: Command to check the status of the running Oasis node. This helps verify that the node is properly connected to the network by querying the internal socket.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/non-validator-node.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node control status -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Starting the Oasis Node\nDESCRIPTION: Command to start the Oasis node with a specified configuration file path, which initiates the ParaTime observer node process.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-observer-node.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Mocha Test Timeout for Emerald\nDESCRIPTION: TypeScript configuration to increase Mocha test timeout for Emerald network compatibility.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nmocha: {\n  timeout: 60000\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Oasis Node Sync Status\nDESCRIPTION: Shell command to verify if the Oasis node is synced with the network, which is necessary before becoming a validator.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\noasis-node control is-synced -a unix:/node/data/internal.sock\n```\n\n----------------------------------------\n\nTITLE: Querying Oasis Rosetta Gateway for Block Information\nDESCRIPTION: Curl command to query the Oasis Rosetta Gateway API for block information. This can be used to obtain a trusted block height and hash for state sync configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST https://rosetta.oasis.io/api/block \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"network_identifier\": {\n        \"blockchain\": \"Oasis\",\n        \"network\": \"<chain-context>\"\n    },\n    \"block_identifier\": {\n        \"index\": 0\n    }\n}'\n```\n\n----------------------------------------\n\nTITLE: Rosetta API Response for Block Information\nDESCRIPTION: Sample JSON response from the Oasis Rosetta Gateway API showing block identifier information. The index and hash values can be used as trusted height and hash for state sync configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"block\": {\n\t\t\"block_identifier\": {\n\t\t\t\"index\": 16787439,\n\t\t\t\"hash\": \"443b71d835dbae7ea6233b06280ab596287d5c45f88fa76a71bf6cc52366592e\"\n\t\t},\n    ...\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning Sapphire-compatible Hyperlane CLI Branch\nDESCRIPTION: Commands to clone the specific branch of Hyperlane CLI that works with Sapphire. This branch (pb/storage-workaround) addresses compatibility issues with the `eth_getStorageAt` method.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/cli.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/hyperlane-xyz/hyperlane-monorepo.git --branch pb/storage-workaround\ncd hyperlane-monorepo\n```\n\n----------------------------------------\n\nTITLE: Intel PCS Configuration\nDESCRIPTION: Example configuration for the Intel Quote Provider to use Intel PCS.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n  //PCCS server address\n  \"pccs_url\": \"https://api.trustedservices.intel.com/sgx/certification/v4/\"\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Oasis Seed Node\nDESCRIPTION: Configuration flag example showing how other nodes can connect to your seed node. Requires the Tendermint address and external IP of the seed node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/seed-node.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n--consensus.tendermint.p2p.seed <TENDERMINT_ADDRESS>@<EXTERNAL_IP>:26656\n```\n\n----------------------------------------\n\nTITLE: Implementing Ping Contract for Cross-Chain Messaging on Arbitrum Sepolia\nDESCRIPTION: This Solidity contract, Ping, extends Hyperlane's Router for cross-chain messaging. It includes functions for sending messages, handling received messages, and tracking message counts. The contract is designed to be deployed on Arbitrum Sepolia.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.13;\n\n// ============ External Imports ============\nimport {Router} from \"@hyperlane-xyz/core/contracts/client/Router.sol\";\n\n/*\n* @title Ping\n* @dev You can use this simple app as a starting point for your own application.\n*/\ncontract Ping is Router {\n    // A generous upper bound on the amount of gas to use in the handle\n    // function when a message is processed. Used for paying for gas.\n    uint256 public constant HANDLE_GAS_AMOUNT = 50_000;\n\n    // A counter of how many messages have been sent from this contract.\n    uint256 public sent;\n    // A counter of how many messages have been received by this contract.\n    uint256 public received;\n\n    // Keyed by domain, a counter of how many messages that have been sent\n    // from this contract to the domain.\n    mapping(uint32 => uint256) public sentTo;\n    // Keyed by domain, a counter of how many messages that have been received\n    // by this contract from the domain.\n    mapping(uint32 => uint256) public receivedFrom;\n\n    // ============ Events ============\n    event SentPing(\n        uint32 indexed origin,\n        uint32 indexed destination,\n        string message\n    );\n    event ReceivedPing(\n        uint32 indexed origin,\n        uint32 indexed destination,\n        bytes32 sender,\n        string message\n    );\n    event HandleGasAmountSet(\n        uint32 indexed destination,\n        uint256 handleGasAmount\n    );\n\n    constructor(address _mailbox) Router(_mailbox) {\n        // Transfer ownership of the contract to deployer\n        _transferOwnership(msg.sender);\n        setHook(address(0));\n    }\n\n    // ============ External functions ============\n\n    /**\n     * @notice Sends a message to the _destinationDomain. Any msg.value is\n     * used as interchain gas payment.\n     * @param _destinationDomain The destination domain to send the message to.\n     * @param _message The message to send.\n     */\n    function sendPing(\n        uint32 _destinationDomain,\n        string calldata _message\n    ) public payable {\n        sent += 1;\n        sentTo[_destinationDomain] += 1;\n        _dispatch(_destinationDomain, bytes(_message));\n        emit SentPing(\n            mailbox.localDomain(),\n            _destinationDomain,\n            _message\n        );\n    }\n\n    /**\n     * @notice Fetches the amount of gas that will be used when a message is\n     * dispatched to the given domain.\n     */\n    function quoteDispatch(\n        uint32 _destinationDomain,\n        bytes calldata _message\n    ) external view returns (uint256) {\n        return _quoteDispatch(_destinationDomain, _message);\n    }\n\n    // ============ Internal functions ============\n    /**\n     * @notice Handles a message from a remote router.\n     * @dev Only called for messages sent from a remote router, as enforced by Router.sol.\n     * @param _origin The domain of the origin of the message.\n     * @param _sender The sender of the message.\n     * @param _message The message body.\n     */\n    function _handle(\n        uint32 _origin,\n        bytes32 _sender,\n        bytes calldata _message\n    ) internal override {\n        received += 1;\n        receivedFrom[_origin] += 1;\n        emit ReceivedPing(\n            _origin,\n            mailbox.localDomain(),\n            _sender,\n            string(_message)\n        );\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Private Key for Emerald Wallet\nDESCRIPTION: Command to set the PRIVATE_KEY environment variable for Emerald wallet authentication.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/writing-dapps-on-emerald.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport PRIVATE_KEY=\"YOUR_0x_EMERALD_PRIVATE_KEY\"\n```\n\n----------------------------------------\n\nTITLE: Configuring BadgerDB Migration in YAML\nDESCRIPTION: This YAML configuration snippet sets the number of Go routines BadgerDB uses during migration to 2, which is recommended for nodes with less than 8 GB of RAM to lower memory pressure during migration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n# BadgerDB configuration.\nbadger:\n  migrate:\n    # Set the number of Go routines BadgerDB uses during migration to 2 to lower\n    # the memory pressure during migration (at the expense of a longer migration\n    # time).\n    num_go_routines: 2\n```\n\n----------------------------------------\n\nTITLE: Getting Validator Sentry Client Public Key\nDESCRIPTION: Command to display the public TLS key of the validator node for sentry configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/sentry-node.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity show-sentry-client-pubkey --datadir /node/data\n```\n\n----------------------------------------\n\nTITLE: Exporting Private Key for Hyperlane CLI\nDESCRIPTION: Command to export your private key as an environment variable for use with the Hyperlane CLI. This key will be used to authenticate the relayer operations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/relayer.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport HYP_KEY='<YOUR_PRIVATE_KEY>'\n```\n\n----------------------------------------\n\nTITLE: Displaying TLS Public Key\nDESCRIPTION: Command to show the Base64-encoded TLS public key for sentry node configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\noasis-node identity show-tls-pubkey --datadir ./\n```\n\n----------------------------------------\n\nTITLE: Creating a Forge Script for Sapphire\nDESCRIPTION: Solidity code for a Forge Script that interacts with Sapphire precompiles using vm.rpc() cheatcode.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_10\n\nLANGUAGE: solidity\nCODE:\n```\ncontract CounterScript is Script {\n\n    function setUp() public {\n        vm.createSelectFork(\"https://testnet.sapphire.oasis.io\");\n    }\n\n    function run() public {\n      vm.startBroadcast();\n      string memory transactionArgs = string.concat(\n         \"[{\\\"to\\\":\\\"\", \"0x0100000000000000000000000000000000000001\",\n         \"\\\",\\\"data\\\":\\\"\", vm.toString(abi.encode(32, \"\")),\n         \"\\\"}, \\\"latest\\\"]\"\n      );\n      bytes memory result = vm.rpc(\"eth_call\", transactionArgs);\n      vm.stopBroadcast();\n    }\n   }\n```\n\n----------------------------------------\n\nTITLE: Installing Sapphire Contracts package\nDESCRIPTION: Command to install the Sapphire Contracts package using Foundry's package manager Soldeer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nforge soldeer install @oasisprotocol-sapphire-contracts~0.2.13\n```\n\n----------------------------------------\n\nTITLE: Error Output When Using Incompatible Private Validator\nDESCRIPTION: JSON error log that appears when attempting to start an Oasis node with a mismatched private validator file, indicating a public key mismatch and potential state corruption.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/copy-state-from-one-node-to-the-other.md#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"caller\":\"node.go:541\",\"err\":\"cometbft/crypto: public key mismatch, state corruption?: %!w(<nil>)\",\"level\":\"error\",\"module\":\"oasis-node\",\"msg\":\"failed to initialize cometbft service\",\"ts\":\"2023-11-25T14:13:17.919296668Z\"}\n```\n\n----------------------------------------\n\nTITLE: Installing Sapphire Contracts Package with NPM or Yarn\nDESCRIPTION: Command to install the @oasisprotocol/sapphire-contracts package to a Hardhat project for accessing OPL.sol and related functionality.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/opl-sdk/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @oasisprotocol/sapphire-contracts\n```\n\n----------------------------------------\n\nTITLE: Generating Remote Signer Client Certificate\nDESCRIPTION: Creates a client certificate for the Oasis node to connect to the remote signer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/remote-signer.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\noasis-remote-signer init_client --datadir remote-signer/\n```\n\n----------------------------------------\n\nTITLE: Obtaining Request Metadata Parameters for Router Protocol CrossTalk\nDESCRIPTION: Function call parameters for getRequestMetadata() to set up cross-chain message configuration. Includes gas limits, prices, relayer fees and security settings for both source and destination chains.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/pingpong-example.md#2025-04-16_snippet_1\n\nLANGUAGE: solidity\nCODE:\n```\ngetRequestMetadata(\n  destGasLimit: 300000,        // Gas limit on destination chain\n  destGasPrice: 100000000000,  // Gas price on destination chain\n  ackGasLimit: 300000,        // Gas limit on source chain for ack\n  ackGasPrice: 100000000000,  // Gas price on source chain for ack\n  relayerFees: 10000000000,   // Relayer fees on Router chain\n  ackType: 3,                 // Acknowledge type\n  isReadCall: false,          // Weather the call is read-only\n  asmAddress: \"0x\"            // Address for additional security module\n)\n```\n\n----------------------------------------\n\nTITLE: Adding Ledger Account to Oasis CLI Wallet\nDESCRIPTION: Command to add a Ledger hardware wallet account to the Oasis CLI wallet. This is part of troubleshooting Ledger device recognition issues on Ubuntu.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/faq.mdx#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet create ledger\n```\n\n----------------------------------------\n\nTITLE: Analyzing AESMD Service Log Error for Missing Platform Library\nDESCRIPTION: This snippet shows an example of AESMD service log errors indicating that the platform library couldn't be found or loaded. These errors suggest issues with the DCAP quote provider configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\n[read_persistent_data ../qe_logic.cpp:1084] Couldn't find the platform library. (null)\n[get_platform_quote_cert_data ../qe_logic.cpp:438] Couldn't load the platform library. (null)\n```\n\n----------------------------------------\n\nTITLE: Checking Bubblewrap Version\nDESCRIPTION: Command to verify the installed version of Bubblewrap, ensuring it meets the minimum required version (0.3.3) for ParaTime client nodes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbwrap --version\n```\n\n----------------------------------------\n\nTITLE: New ParaTime Node Configuration in YAML\nDESCRIPTION: Updated configuration format for ParaTime nodes after the Oasis Core 22.1.3 update, showing simplified runtime mode and paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n  mode: compute\n  paths:\n    - /path/to/runtime.orc\n\nworker:\n  # ... other settings omitted ...\n\n  p2p:\n    port: 12346\n    addresses:\n      - \"xx.yy.zz.vv:12346\"\n```\n\n----------------------------------------\n\nTITLE: Executing Cross-Chain iPing Function Call\nDESCRIPTION: Parameters for executing the iPing() function to initiate a cross-chain message transfer. Includes destination chain ID, contract address, message content and metadata bytes from previous request metadata call.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/pingpong-example.md#2025-04-16_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\niPing(\n  destChainId: 23295,              // Destination Chain ID (e.g. Sapphire)\n  destinationContractAddress: \"0x<your-contract>\", // Contract address on destination chain\n  str: \"Hello\",                    // Message to include in the ping\n  requestMetadata: <bytes string>   // Bytes response from getRequestMetada call\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing TrustedRelayerISM Contract in Solidity\nDESCRIPTION: Smart contract that implements Hyperlane's IInterchainSecurityModule for message verification through trusted relayers. The contract validates messages by checking if they're processed by an authorized relayer address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_3\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity >=0.8.0;\n\n// ============ Internal Imports ============\nimport {IInterchainSecurityModule} from \"@hyperlane-xyz/core/contracts/interfaces/IInterchainSecurityModule.sol\";\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {Message} from \"@hyperlane-xyz/core/contracts/libs/Message.sol\";\nimport {Mailbox} from \"@hyperlane-xyz/core/contracts/Mailbox.sol\";\nimport {PackageVersioned} from \"@hyperlane-xyz/core/contracts/PackageVersioned.sol\";\n\ncontract TrustedRelayerIsm is IInterchainSecurityModule, PackageVersioned {\n    using Message for bytes;\n\n    uint8 public immutable moduleType = uint8(Types.NULL);\n    Mailbox public immutable mailbox;\n    address public immutable trustedRelayer;\n\n    constructor(address _mailbox, address _trustedRelayer) {\n        require(\n            _trustedRelayer != address(0),\n            \"TrustedRelayerIsm: invalid relayer\"\n        );\n        require(\n            Address.isContract(_mailbox),\n            \"TrustedRelayerIsm: invalid mailbox\"\n        );\n        mailbox = Mailbox(_mailbox);\n        trustedRelayer = _trustedRelayer;\n    }\n\n    function verify(\n        bytes calldata,\n        bytes calldata message\n    ) external view returns (bool) {\n        return mailbox.processor(message.id()) == trustedRelayer;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Submit Vote Transaction Command\nDESCRIPTION: Command to submit the generated vote transaction to the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\noasis-node consensus submit_tx \\\n  -a $ADDR \\\n  --transaction.file tx_cast_vote.json\n```\n\n----------------------------------------\n\nTITLE: Importing Oasis Private Key Using Oasis CLI\nDESCRIPTION: Example command to import an exported Oasis private key file into the Oasis CLI wallet. This is useful after recovering a private key from a BitPie mnemonic.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/faq.mdx#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet import-file /home/user/unmnemonic/wallet-export-2023-05-01/oasis1qp8d9kuduq0zutuatjsgltpugxvl38cuaq3gzkmn.private.pem\n```\n\n----------------------------------------\n\nTITLE: Previous ParaTime Node Configuration in YAML\nDESCRIPTION: Example of the old configuration format for ParaTime nodes before the Oasis Core 22.1.3 update.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nruntime:\n  supported:\n    - \"000000000000000000000000000000000000000000000000000000000000beef\"\n\n  paths:\n    \"000000000000000000000000000000000000000000000000000000000000beef\": /path/to/runtime\n\nworker:\n  # ... other settings omitted ...\n\n  storage:\n    enabled: true\n\n  compute:\n    enabled: true\n\n  client:\n    port: 12345\n    addresses:\n      - \"xx.yy.zz.vv:12345\"\n\n  p2p:\n    enabled: true\n    port: 12346\n    addresses:\n      - \"xx.yy.zz.vv:12346\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Ledger Account with Oasis CLI\nDESCRIPTION: This command creates a new Ledger account using the Oasis CLI. It specifies the account name as 'ledger-account' and sets the kind to 'ledger' to indicate it's a hardware wallet account.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/holding-rose-tokens/ledger-wallet.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\noasis wallet create ledger-account --kind ledger\n```\n\n----------------------------------------\n\nTITLE: Entity Nonce Retrieval Commands\nDESCRIPTION: Commands to obtain an entity's nonce for transaction signing.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nENTITY_DIR=<PATH-TO-YOUR-ENTITY>\nADDRESS=$(oasis-node stake pubkey2address --public_key \\\n  $(cat $ENTITY_DIR/entity.json | jq .id -r))\nNONCE=$(oasis-node stake account nonce --stake.account.address $ADDRESS -a $ADDR)\n```\n\n----------------------------------------\n\nTITLE: Configuring Consensus Backend for Oasis Node in YAML\nDESCRIPTION: YAML configuration for the consensus backend of an Oasis node. It specifies validator settings and Tendermint backend configuration including ABCI pruning strategy and network listening address.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n# Consensus backend.\nconsensus:\n  # Setting this to true will mean that the node you're deploying will attempt\n  # to register as a validator.\n  validator: true\n\n  # Tendermint backend configuration.\n  tendermint:\n    abci:\n      prune:\n        strategy: keep_n\n        # Keep ~7 days of data since block production is ~1 block every 6 seconds.\n        # (7*24*3600/6 = 100800)\n        num_kept: 100800\n    core:\n      listen_address: tcp://0.0.0.0:26656\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Governance Proposal Structure in YAML\nDESCRIPTION: Structure of the upgrade governance proposal for consensus parameter updates.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n{\n   \"v\": 1,\n    \"handler\": \"consensus-params-update-2021-08\",\n    \"target\": {\n        \"consensus_protocol\": {\n            \"major\": 4\n        },\n        \"runtime_host_protocol\": {\n            \"major\": 3\n        },\n        \"runtime_committee_protocol\": {\n            \"major\": 2\n        }\n    },\n    \"epoch\": 8049\n}\n```\n\n----------------------------------------\n\nTITLE: Backing Up Node Data Directory\nDESCRIPTION: Example command using rsync to backup a node's data directory before performing runtime storage migration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nrsync -a /serverdir/node/ /serverdir/node-BACKUP/\n```\n\n----------------------------------------\n\nTITLE: Running Oasis Unmnemonic Tool on Different Operating Systems\nDESCRIPTION: Commands to run the Oasis unmnemonic tool for recovering private keys from Ledger mnemonics on different operating systems. The tool provides an interactive prompt for securely recovering keys.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/faq.mdx#2025-04-16_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./unmnemonic_linux_amd64\n```\n\nLANGUAGE: shell\nCODE:\n```\n./unmnemonic_darwin_all\n```\n\nLANGUAGE: shell\nCODE:\n```\nunmnemonic_windows_amd64\n```\n\n----------------------------------------\n\nTITLE: Important Warning About Token Staking vs Transfer\nDESCRIPTION: Critical warning message explaining the difference between staking tokens (staking.Escrow transaction) and sending tokens (staking.Transfer transaction), emphasizing the irreversible nature of token transfers and the importance of using the correct transaction type.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/staking-and-delegating.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n:::danger Staking your ROSE is a different transaction than sending them!\n\nWhen you stake your tokens (the `staking.Escrow` transaction), you can reclaim\nthem at any time. Sending your tokens (the `staking.Transfer` transaction) on the\nother hand means that the **receiver will own the tokens and there is no way of\nretrieving that tokens back by yourself**.\n\nIf you happen to send your tokens to the validator instead of staking them, try\ncontacting the validator via email or other channels listed on the block\nexplorers and kindly ask them to send the tokens back to you. Know that it is\ncompletely up to them to send the tokens back and there is no other mechanism of\ndoing it.\n\n:::\n```\n\n----------------------------------------\n\nTITLE: Starting Oasis Node Command\nDESCRIPTION: Command to start the Oasis node using a configuration file.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --config /node/etc/config.yml\n```\n\n----------------------------------------\n\nTITLE: Genesis Document Parameters Structure - JSON\nDESCRIPTION: Example structure of key genesis document parameters including height, chain ID, registry configuration, and gas costs for various network operations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"height\": \"3027601\",\n  \"genesis_time\": \"2021-01-01T00:00:00Z\",\n  \"chain_id\": \"oasis-1\",\n  \"registry\": {\n    \"params\": {\n      \"max_node_expiration\": 2,\n      \"enable_runtime_governance_models\": {\n        \"entity\": true,\n        \"runtime\": true\n      },\n      \"gas_costs\": {\n        \"deregister_entity\": 1000,\n        \"register_entity\": 1000,\n        \"register_node\": 1000\n      }\n    },\n    \"entities\": [],\n    \"runtimes\": [],\n    \"nodes\": []\n  },\n  \"staking\": {\n    \"total_supply\": \"10000000000000000000\",\n    \"common_pool\": \"0\",\n    \"governance_deposits\": \"0\",\n    \"ledger\": {},\n    \"delegations\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Interactive Unmnemonic Tool Session Example\nDESCRIPTION: Example output showing the interactive session with the unmnemonic tool, including prompts for algorithm selection, mnemonic entry, and key export options.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/faq.mdx#2025-04-16_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n  unmnemonic - Recover Oasis Network signing keys from mnemonics\n\n? Which algorithm does your wallet use Ledger\n WARNING:\n\n  Entering your Ledger device mnemonic into any non-Leger device\n  can COMPROMISE THE SECURITY OF ALL ACCOUNTS TIED TO THE MNEMONIC.\n  Use of this tool is STRONGLY DISCOURAGED.\n\n? Have you read and understand the warning Yes\n? How many words is your mnemonic 24\n? Enter word 1 *****\n? Enter word 2 ****\n? Enter word 3 ****\n? Enter word 4 ******\n? Enter word 5 ****\n? Enter word 6 *****\n? Enter word 7 ****\n? Enter word 8 *******\n? Enter word 9 ******\n? Enter word 10 *****\n? Enter word 11 ***\n? Enter word 12 *****\n? Enter word 13 *****\n? Enter word 14 ****\n? Enter word 15 ****\n? Enter word 16 ******\n? Enter word 17 ****\n? Enter word 18 *****\n? Enter word 19 ****\n? Enter word 20 *******\n? Enter word 21 ******\n? Enter word 22 *****\n? Enter word 23 ***\n? Enter word 24 *****\n? Wallet index(es) (comma separated) 4\n Index[4]: oasis1qqwkm23pyg638xvl2nu00frxhapusjjv8qhh3p77\n? Write the keys to disk Yes\n? Output directory /home/oa/tmp/wallet-export-2023-11-28\n Index[4]: oasis1qqwkm23pyg638xvl2nu00frxhapusjjv8qhh3p77.private.pem - done\nDone writing wallet keys to disk, goodbye.\n```\n\n----------------------------------------\n\nTITLE: Viewing Account Delegations with Oasis CLI Tools\nDESCRIPTION: Example of using the 'oasis account show' command to check entity account delegations on the Testnet, showing stake distribution and total balance.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-observer-node.mdx#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\noasis-cli account show oasis1qpc4ze5zzq3aa6l0z2n5nrf373a3n2s5x4ppkrj --stake\n```\n\n----------------------------------------\n\nTITLE: Importing SapphireDecryptor for encrypted transactions\nDESCRIPTION: Solidity code to import and inherit from SapphireDecryptor, enabling decryption for encrypted transactions.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_9\n\nLANGUAGE: solidity\nCODE:\n```\nimport {SapphireDecryptor} from \"@oasisprotocol-sapphire-foundry-0.1.0/BinaryContracts.sol\";\n\ncontract CustomContract is SapphireDecryptor {\n```\n\n----------------------------------------\n\nTITLE: Staking Thresholds Documentation in Markdown\nDESCRIPTION: Specifies minimum token staking requirements for entities, nodes and ParaTimes to participate in the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Entity/Node thresholds: 100,000,000,000 base units (100 ROSE)\n* ParaTime thresholds: 50,000,000,000,000 base units (50,000 ROSE)\n```\n\n----------------------------------------\n\nTITLE: Sample ParaTime Version Record in JSON\nDESCRIPTION: This JSON snippet shows a sample record of ParaTime versions and their validity periods from the network registry. It specifies different versions becoming valid from specific epochs.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"version\": {\n      \"major\": 7,\n      \"minor\": 1\n    },\n    \"valid_from\": 14320\n  },\n  {\n    \"version\": {\n      \"major\": 8\n    },\n    \"valid_from\": 15056\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Rendering Build Documentation Card List\nDESCRIPTION: Creates a documentation card list for the 'Build on Oasis' section, displaying links to Sapphire, OPL, ROFL, and tools documentation using the findSidebarItem utility.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/build/sapphire/'),\n    findSidebarItem('/build/opl/'),\n    findSidebarItem('/build/rofl/'),\n    findSidebarItem('/build/tools/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Checking Node Version in Oasis Network\nDESCRIPTION: Command to check the installed version of oasis-node on localhost or server. Used to verify you're running the latest version before troubleshooting.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noasis-node --version\n```\n\n----------------------------------------\n\nTITLE: Creating a new Forge project\nDESCRIPTION: Commands to create a new Forge project named 'sapphire_demo' and navigate into it.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/foundry.mdx#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nforge init sapphire_demo\ncd sapphire_demo\n```\n\n----------------------------------------\n\nTITLE: Delegation Parameters Documentation in Markdown\nDESCRIPTION: Documents the parameters controlling token delegation behavior, including debonding period, minimum delegation amounts and escrow message support.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* staking.params.debonding_interval: 336 epochs (~14 days)\n* staking.params.min_delegation: 100,000,000,000 base units (100 ROSE)\n* staking.params.allow_escrow_messages: true\n```\n\n----------------------------------------\n\nTITLE: Defining Document References with Markdown Links\nDESCRIPTION: Creates reference links to key Oasis documentation pages using Markdown link syntax, allowing them to be referenced elsewhere in the document.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[Oasis Sapphire]: ./build/sapphire/README.mdx\n[Oasis Privacy Layer]: ./build/opl/README.mdx\n[ROFL]: ./build/rofl/README.mdx\n```\n\n----------------------------------------\n\nTITLE: Adding User to SGX Group\nDESCRIPTION: Command to add a user to the SGX group for device access permissions.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo adduser oasis sgx\n```\n\n----------------------------------------\n\nTITLE: Running Ping Verification Script\nDESCRIPTION: Shell command to execute the ping verification script using Hardhat on the sapphire-testnet network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\npnpm hardhat run scripts/verifyping.ts --network sapphire-testnet\n```\n\n----------------------------------------\n\nTITLE: Comparing Genesis Files for Verification\nDESCRIPTION: Command to compare the dumped state with the downloaded genesis file to verify changes during a network upgrade.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndiff --unified=3 genesis_dump.json genesis.json\n```\n\n----------------------------------------\n\nTITLE: Rendering Get Involved Documentation Card List\nDESCRIPTION: Creates a documentation card list for the 'Get Involved' section, displaying links to community resources, node running guides, and core contribution information.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/get-involved/'),\n    findSidebarItem('https://oasisrose.garden'),\n    findSidebarItem('/get-involved/run-node'),\n    findSidebarItem('/get-involved/oasis-core'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: JSX DocCardList Component Usage\nDESCRIPTION: Example of using the DocCardList component to display multiple documentation links with dynamic sidebar item finding.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/README.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[findSidebarItem('https://api.docs.oasis.io/js/client'), findSidebarItem('https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go')]} />\n```\n\n----------------------------------------\n\nTITLE: List Governance Proposals Command\nDESCRIPTION: Command to view active governance proposals on an Oasis Node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\noasis-node governance list_proposals -a $ADDR\n```\n\n----------------------------------------\n\nTITLE: Implementing Pong Contract for Cross-Chain Messaging on Sapphire Testnet\nDESCRIPTION: This Solidity contract, Pong, extends Hyperlane's Router for cross-chain messaging. It includes functions for sending and receiving messages, tracking message counts, and automatically responding to received messages. The contract is designed to be deployed on Sapphire Testnet.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_2\n\nLANGUAGE: solidity\nCODE:\n```\n// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.13;\n\n// ============ External Imports ============\nimport {Router} from \"@hyperlane-xyz/core/contracts/client/Router.sol\";\n\n/*\n* @title Pong\n* @dev You can use this simple app as a starting point for your own application.\n*/\ncontract Pong is Router {\n    // A generous upper bound on the amount of gas to use in the handle\n    // function when a message is processed. Used for paying for gas.\n    uint256 public constant HANDLE_GAS_AMOUNT = 50_000;\n\n    // A counter of how many messages have been sent from this contract.\n    uint256 public sent;\n    // A counter of how many messages have been received by this contract.\n    uint256 public received;\n\n    // Keyed by domain, a counter of how many messages that have been sent\n    // from this contract to the domain.\n    mapping(uint32 => uint256) public sentTo;\n    // Keyed by domain, a counter of how many messages that have been received\n    // by this contract from the domain.\n    mapping(uint32 => uint256) public receivedFrom;\n\n    // ============ Events ============\n    event SentPing(\n        uint32 indexed origin,\n        uint32 indexed destination,\n        string message\n    );\n    event ReceivedPing(\n        uint32 indexed origin,\n        uint32 indexed destination,\n        bytes32 sender,\n        string message\n    );\n    event HandleGasAmountSet(\n        uint32 indexed destination,\n        uint256 handleGasAmount\n    );\n\n    constructor(address _mailbox) Router(_mailbox) {\n        // Transfer ownership of the contract to deployer\n        _transferOwnership(msg.sender);\n        setHook(address(0));\n    }\n\n    // ============ External functions ============\n\n    /**\n     * @notice Sends a message to the _destinationDomain. Any msg.value is\n     * used as interchain gas payment.\n     * @param _destinationDomain The destination domain to send the message to.\n     * @param _message The message to send.\n     */\n    function sendPing(\n        uint32 _destinationDomain,\n        string calldata _message\n    ) public payable {\n        sent += 1;\n        sentTo[_destinationDomain] += 1;\n        _dispatch(_destinationDomain, bytes(_message));\n        emit SentPing(\n            mailbox.localDomain(),\n            _destinationDomain,\n            _message\n        );\n    }\n\n    /**\n     * @notice Fetches the amount of gas that will be used when a message is\n     * dispatched to the given domain.\n     */\n    function quoteDispatch(\n        uint32 _destinationDomain,\n        bytes calldata _message\n    ) external view returns (uint256) {\n        return _quoteDispatch(_destinationDomain, _message);\n    }\n\n    // ============ Internal functions ============\n    /**\n     * @notice Handles a message from a remote router.\n     * @dev Only called for messages sent from a remote router, as enforced by Router.sol.\n     * @param _origin The domain of the origin of the message.\n     * @param _sender The sender of the message.\n     * @param _message The message body.\n     */\n    function _handle(\n        uint32 _origin,\n        bytes32 _sender,\n        bytes calldata _message\n    ) internal override {\n        received += 1;\n        receivedFrom[_origin] += 1;\n        emit ReceivedPing(\n            _origin,\n            mailbox.localDomain(),\n            _sender,\n            string(_message)\n        );\n        // send return message\n        sendPing(\n            _origin,\n            string(_message)\n        );\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Danger Block\nDESCRIPTION: Security warning about never sharing the mnemonic phrase.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/oasis-wallets/web.mdx#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n:::danger Never share your mnemonic (i.e. keyphrase)!\n\nAnyone with your mnemonic can access your wallet and your tokens.\n\n:::\n```\n\n----------------------------------------\n\nTITLE: Rendering ADR Documentation Card\nDESCRIPTION: Creates a single documentation card linking to the Architectural Decision Records (ADRs) section, which contains formal proposals for changes to the Oasis Network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={ findSidebarItem('/adrs') } />\n```\n\n----------------------------------------\n\nTITLE: Importing React Documentation Components\nDESCRIPTION: Imports required React components for documentation page structure, including DocCardList for organizing related pages and a utility function for sidebar navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Checking Governance Proposals via CLI\nDESCRIPTION: Command to list and view governance proposals using oasis-node CLI.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\noasis-node governance list_proposals -a $ADDR | jq\n```\n\n----------------------------------------\n\nTITLE: Router Enrollment Script for Cross-Chain Communication\nDESCRIPTION: Scripts for enrolling router addresses between Sapphire Testnet and Arbitrum Sepolia, enabling cross-chain communication between the Ping and Pong contracts.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/pingpong-example.md#2025-04-16_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ethers } from \"hardhat\";\n\nasync function main() {      \n  let pingpongArbitrum = \"0x<your contract deployed before>\";\n  let pingpongSapphire = \"0x<your contract deployed before>\";\n  let arbId = \"421614\";\n\n  const signer = await ethers.provider.getSigner();\n  const contract = await ethers.getContractAt(\"Pong\", sapphireAddr, signer);\n  await contract.enrollRemoteRouter(arbId, ethers.zeroPadValue(pingpongArbitrum, 32));\n  const arbRouter = await contract.routers(arbId);\n  console.log(`remote router adr for ${arbId}: ${arbRouter}`)\n}\nmain().catch((error) => {\n  console.error(error);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Patching Genesis File for Network Upgrade\nDESCRIPTION: Command to run the built-in helper that migrates and updates parts of the genesis file for a new version of Oasis Core during a dump & restore upgrade.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node debug fix-genesis --genesis.file genesis-<CHAIN_ID>-at-<LATEST_HEIGHT>.json --genesis.new_file genesis_dump.json\n```\n\n----------------------------------------\n\nTITLE: React Component Import Statements\nDESCRIPTION: Import statements for React components used in the documentation page, including DocCard and DocCardList components along with a utility function.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Installing Rust via rustup\nDESCRIPTION: Command to download and install Rust using the official rustup installer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n----------------------------------------\n\nTITLE: Running Emerald Localnet Docker Container\nDESCRIPTION: Command to run the Emerald localnet Docker container, exposing ports 8544-8548 for Web3 endpoints, GRPC, Nexus API, and Explorer.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/localnet.mdx#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it -p8544-8548:8544-8548 ghcr.io/oasisprotocol/emerald-localnet\n```\n\n----------------------------------------\n\nTITLE: Installing Python Tools for Ledger Devices using pip\nDESCRIPTION: This pip command installs the Python tools required for manual installation of the Oasis App on Ledger devices. It upgrades the 'ledgerblue' package to the latest version.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\npip3 install --upgrade ledgerblue\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation in JSX\nDESCRIPTION: Imports necessary React components from Docusaurus theme for rendering documentation cards and card lists. Also imports a utility function for finding sidebar items within the documentation structure.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Runtime Storage Migration Command\nDESCRIPTION: Command to migrate the storage database on runtime storage nodes before the Cobalt upgrade.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\noasis-node storage migrate \\\n  --datadir <NODE-DATADIR> \\\n  --runtime.supported <RUNTIME-ID>\n```\n\n----------------------------------------\n\nTITLE: Viewing Upgrade Status in JSON Log Output\nDESCRIPTION: JSON log output showing the dispatching of halt hooks when a node reaches the upgrade epoch. This indicates the node is stopping for a network upgrade.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"caller\":\"mux.go:426\",\"level\":\"debug\",\"module\":\"abci-mux\",\"msg\":\"dispatching halt hooks for upgrade\",\"ts\":\"2022-05-06T13:11:41.721994647Z\"}\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Card List for Related Resources in JSX\nDESCRIPTION: Uses the DocCardList component to display multiple related documentation pages. The items are an array of sidebar items found using the findSidebarItem utility, including links to token management, node operation, and other ParaTimes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/README.mdx#2025-04-16_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/general/manage-tokens/'),\n    findSidebarItem('/node/run-your-node/paratime-node'),\n    findSidebarItem('/node/run-your-node/paratime-client-node'),\n    findSidebarItem('/build/tools/other-paratimes/emerald/'),\n    findSidebarItem('/build/sapphire/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Making Oasis App Installer Executable\nDESCRIPTION: Command to make the downloaded Oasis App installer executable on a Unix-like system.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nchmod +x installer_s.sh\n```\n\n----------------------------------------\n\nTITLE: Reward Parameters Documentation in Markdown\nDESCRIPTION: Details the staking reward schedule, validator uptime requirements, and fee distribution parameters.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* Signing threshold: 3/4 (75% uptime required)\n* Fee split weights:\n  - Proposer: 2\n  - Next proposer: 1\n  - Voter: 1\n* Reward factors:\n  - Epoch signed: 1\n  - Block proposed: 0\n```\n\n----------------------------------------\n\nTITLE: Importing DocCardList Component in JSX\nDESCRIPTION: Imports the DocCardList component from Docusaurus theme and a utility function for finding sidebar items. This code is used to enable structured documentation navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Upgrade Error Output Message\nDESCRIPTION: Error message displayed when a node reaches the upgrade epoch, triggering an automatic shutdown to prepare for network upgrade.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/handling-network-upgrades.md#2025-04-16_snippet_1\n\nLANGUAGE: text\nCODE:\n```\npanic: upgrade: reached upgrade epoch\n```\n\n----------------------------------------\n\nTITLE: Importing React Components in MDX\nDESCRIPTION: Imports required components from theme and utility functions for documentation navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Card for Confidential Smart Contract in JSX\nDESCRIPTION: Uses the DocCard component to display a link to the Cipher confidential smart contract guide. The findSidebarItem utility is used to locate the correct sidebar item by path.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/README.mdx#2025-04-16_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={\n    findSidebarItem('/build/tools/other-paratimes/cipher/confidential-smart-contract')\n} />\n```\n\n----------------------------------------\n\nTITLE: Submit Transaction Command\nDESCRIPTION: Command to submit the generated voting transaction to the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\noasis-node consensus submit_tx \\\n  -a $ADDR \\\n  --transaction.file tx_cast_vote.json\n```\n\n----------------------------------------\n\nTITLE: Using DocCardList to Create Documentation Navigation in JSX\nDESCRIPTION: Implements a documentation navigation section using the DocCardList component with findSidebarItem to reference related documentation pages. This provides a structured way to link to other relevant sections of the documentation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/emerald/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/general/manage-tokens/'),\n    findSidebarItem('/node/run-your-node/paratime-node'),\n    findSidebarItem('/node/run-your-node/paratime-client-node'),\n    findSidebarItem('/node/web3'),\n    findSidebarItem('/build/sapphire/'),\n    findSidebarItem('/build/tools/other-paratimes/cipher/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Importing IDapp Interface for Cross-Chain Contracts\nDESCRIPTION: Code snippet showing how to import the IDapp interface, which is required for contracts that need to receive cross-chain messages.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/router-protocol/interface.md#2025-04-16_snippet_5\n\nLANGUAGE: solidity\nCODE:\n```\nimport \"@routerprotocol/evm-gateway-contracts/contracts/IDapp.sol\";\n```\n\n----------------------------------------\n\nTITLE: Quick Navigation Component Implementation\nDESCRIPTION: Renders a list of documentation cards using DocCardList component with specified navigation paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/node/mainnet/'),\n    findSidebarItem('/node/testnet/'),\n    findSidebarItem('/node/run-your-node/prerequisites'),\n    findSidebarItem('/node/run-your-node/validator-node'),\n    findSidebarItem('/node/run-your-node/paratime-node'),\n    findSidebarItem('/node/run-your-node/paratime-client-node'),\n    findSidebarItem('/node/web3'),\n    findSidebarItem('/node/grpc'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Example Key Manager Policy Output\nDESCRIPTION: Sample JSON output showing a Testnet Key Manager policy structure, including serial number, runtime ID, and enclave configurations.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/signing-key-manager-policy.md#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"serial\": 8,\n  \"id\": \"4000000000000000000000000000000000000000000000004a1a53dff2ae482d\",\n  \"enclaves\": {\n    \"ZhD5ufyc/MReZD1qMSKNCRxnkNiZ3BtxqcYdx4+M0N9AJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\": {\n      \"may_query\": {\n        \"0000000000000000000000000000000000000000000000000000000000000000\": [\n          \"c0SidcKhBx3iuonmtXURnFB+qIVkg+nAiaAozAh16ltAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\"\n        ],\n        \"000000000000000000000000000000000000000000000000a6d1e3ebf60dff6c\": [\n          \"LwbLEQ6dv+R5wv5q5CGRZWiEBWGxgCi/gpphcJFQ5zVAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\"\n        ]\n      },\n      \"may_replicate\": [\n        \"jTX8etUcGSQBq3C4WbLlexga7dhQFnwzSJOEmRCPvfRAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\"\n      ]\n    },\n    \"jTX8etUcGSQBq3C4WbLlexga7dhQFnwzSJOEmRCPvfRAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\": {\n      \"may_query\": {\n        \"0000000000000000000000000000000000000000000000000000000000000000\": [\n          \"c0SidcKhBx3iuonmtXURnFB+qIVkg+nAiaAozAh16ltAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\"\n        ],\n        \"000000000000000000000000000000000000000000000000a6d1e3ebf60dff6c\": [\n          \"LwbLEQ6dv+R5wv5q5CGRZWiEBWGxgCi/gpphcJFQ5zVAJdq369ofvsxONjdgbgISFND0HG0EIv03iyqLiIGEWQ==\"\n        ]\n      },\n      \"may_replicate\": []\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Docusaurus Components for Documentation\nDESCRIPTION: Sets up documentation components by importing DocCardList and a utility function for sidebar navigation. Used to create a structured documentation interface for Oasis Network topics.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/general/oasis-network/'),\n    findSidebarItem('/general/manage-tokens/'),\n    findSidebarItem('/general/manage-tokens/cli/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Creating Navigation Links with DocCardList in React JSX\nDESCRIPTION: This code snippet creates a navigation section at the bottom of the page using the DocCardList component. It references related documentation pages about Hyperlane CLI, Relayer, and PingPong example by finding them in the sidebar structure.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/README.md#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/build/opl/hyperlane/cli'),\n    findSidebarItem('/build/opl/hyperlane/relayer'),\n    findSidebarItem('/build/opl/hyperlane/pingpong-example'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Importing DocCard Component and Utility Function in JSX\nDESCRIPTION: This code snippet imports the DocCard component from the theme and a utility function for finding sidebar items. It's used to render documentation cards in the page.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/oasis-network/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Generate Voting Transaction Command\nDESCRIPTION: Command to generate a transaction for voting on governance proposals.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\noasis-node governance gen_cast_vote \\\n  \"${TX_FLAGS[@]}\" \\\n  --vote.proposal.id 1 \\\n  --vote yes \\\n  --transaction.file tx_cast_vote.json \\\n  --transaction.nonce $NONCE \\\n  --transaction.fee.gas 2000 \\\n  --transaction.fee.amount 2000\n```\n\n----------------------------------------\n\nTITLE: Markdown Interface Import Statements\nDESCRIPTION: Import statements for React components used to create tabbed interfaces in the documentation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/oasis-wallets/web.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Documentation Navigation Links Generation\nDESCRIPTION: React component usage to generate navigation cards for different OPL implementation examples.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/build/opl/opl-sdk/ping-example'),\n    findSidebarItem('/build/opl/celer/ping-example'),\n    findSidebarItem('/build/opl/hyperlane/pingpong-example'),\n    findSidebarItem('/build/opl/router-protocol/pingpong-example'),\n    ]} />\n```\n\n----------------------------------------\n\nTITLE: JSX DocCard Component Usage\nDESCRIPTION: Examples of using the DocCard component to link to different sections of the documentation with dynamic sidebar item finding.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={findSidebarItem('/build/sapphire/')} />\n<DocCard item={findSidebarItem('/build/rofl/')} />\n<DocCard item={findSidebarItem('/build/opl/')} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Related Documentation Links\nDESCRIPTION: Implements a DocCardList component to display related documentation pages using sidebar navigation items for tools like ABI Playground, verification, localnet, Band, and Remix.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n  findSidebarItem('/build/tools/abi-playground'),\n  findSidebarItem('/build/tools/verification'),\n  findSidebarItem('/build/tools/localnet'),\n  findSidebarItem('/build/tools/band'),\n  findSidebarItem('/build/tools/remix'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Card for Hello World Example in JSX\nDESCRIPTION: Uses the DocCard component to display a link to the Cipher hello world tutorial page. The findSidebarItem utility is used to locate the correct sidebar item by path.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/README.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={\n    findSidebarItem('/build/tools/other-paratimes/cipher/hello-world')\n} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Run Node Documentation Card List\nDESCRIPTION: Creates a documentation card list for the 'Run Node' section, displaying links to node setup guides for mainnet, testnet, and general node operation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/node/'),\n    findSidebarItem('/node/mainnet/'),\n    findSidebarItem('/node/testnet/'),\n    findSidebarItem('/node/run-your-node/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Entity Nonce Retrieval Commands\nDESCRIPTION: Commands to obtain an entity's nonce for transaction signing.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nENTITY_DIR=<PATH-TO-YOUR-ENTITY>\nADDRESS=$(oasis-node stake pubkey2address --public_key \\\n  $(cat $ENTITY_DIR/entity.json | jq .id -r))\nNONCE=$(oasis-node stake account nonce --stake.account.address $ADDRESS -a $ADDR)\n```\n\n----------------------------------------\n\nTITLE: Rendering DocCardList Component with Page Links in JSX\nDESCRIPTION: This code snippet uses the DocCardList component to render a list of documentation cards with links to various related sections. It imports necessary components and functions to locate sidebar items by their paths.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/build-paratime/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n\n<DocCardList items={[\n    findSidebarItem('/build/tools/build-paratime/prerequisites'),\n    findSidebarItem('/build/tools/build-paratime/minimal-runtime'),\n    findSidebarItem('/build/tools/build-paratime/modules'),\n    findSidebarItem('/build/tools/build-paratime/reproducibility'),\n    findSidebarItem('https://api.docs.oasis.io/rust/oasis_runtime_sdk'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Single Documentation Card for ParaTime Building\nDESCRIPTION: Creates a single documentation card for the 'Build ParaTimes' section, linking to the guide for building custom ParaTimes on the Oasis Network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={findSidebarItem('/build/tools/build-paratime/')} />\n```\n\n----------------------------------------\n\nTITLE: Importing Theme Components in React JSX\nDESCRIPTION: This code imports React components from Docusaurus theme and utility functions for sidebar navigation. It's used to set up the document structure and enable navigation components for the Hyperlane protocol documentation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/hyperlane/README.md#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Generate Vote Transaction Command\nDESCRIPTION: Command to generate a transaction for casting a vote on the upgrade proposal.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/mainnet/upgrade-log.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-node governance gen_cast_vote \\\n  \"${TX_FLAGS[@]}\" \\\n  --vote.proposal.id 2 \\\n  --vote yes \\\n  --transaction.file tx_cast_vote.json \\\n  --transaction.nonce $NONCE \\\n  --transaction.fee.gas 2000 \\\n  --transaction.fee.amount 2000\n```\n\n----------------------------------------\n\nTITLE: Importing React Tab Components in JSX\nDESCRIPTION: Imports the Tabs and TabItem components from the Docusaurus theme to create tabbed interface for displaying different ParaTime options.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/get-involved/run-node/paratime-node.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Rendering Related Documentation Links with DocCardList in JSX\nDESCRIPTION: This code snippet uses a custom DocCardList component to display links to related documentation pages. It references two specific sidebar items: running a node and Web3 integration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/grpc.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/node/run-your-node/'),\n    findSidebarItem('/node/web3'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Validator Node Configuration\nDESCRIPTION: YAML configuration for validator node including entity ID and sentry address settings.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nworker:\n  registration:\n    entity_id: {{ entity_id }}\n  sentry:\n    address:\n      - \"{{ sentry_node_grpc_public_key }}@{{ sentry_node_private_ip }}:9009\"\n```\n\n----------------------------------------\n\nTITLE: Listing Research Papers in Markdown\nDESCRIPTION: This snippet provides a structured list of research papers related to the Oasis Protocol project. Each entry includes the paper title, authors, publication details, and links to PDF versions.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/oasis-network/papers.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Papers\n\n1. **[Keep Your Transactions On Short Leashes or Anchoring For Stability In A\n   Multiverse of Block Tree Madness](https://arxiv.org/abs/2206.11974)**\n   \\[[PDF](./papers/2022-short_leashes.pdf)\\]<br/>\n   Bennet Yee<br/>\n   2022 Technical Report\n\n2. **[Shades of Finality and Layer 2 Scaling](https://arxiv.org/abs/2201.07920)**\n   \\[[PDF](./papers/2022-shades_of_finality.pdf)\\]<br/>\n   Bennet Yee, Dawn Song, Patrick McCorry, Chris Buckland<br/>\n   2022 Technical Report\n\n3. **An Implementation of Ekiden on the Oasis Network**\n   \\[[PDF](./papers/2021-an_implementation_of_ekiden.pdf)\\]<br/>\n   Oasis Protocol Project<br/>\n   2021 Technical Report\n\n4. **The Oasis Blockchain Platform**\n   \\[[PDF](./papers/2020-the_oasis_blockchain_platform.pdf)\\]<br/>\n   Oasis Protocol Project<br/>\n   2020 Technical Report\n\n5. **[Digital Stewardship: An Introductory White Paper](https://ssrn.com/abstract=3669911)**\n   \\[[PDF](./papers/2020-digital_stewardship.pdf)\\]<br/>\n   Richard Whitt<br/>\n   2020 SSRN, Elsevier\n\n6. **[Ekiden: A Platform for Confidentiality-Preserving, Trustworthy, and Performant Smart Contracts](https://doi.org/10.1109/EuroSP.2019.00023)**\n   \\[[PDF](./papers/2019-ekiden.pdf)\\]<br/>\n   Raymond Cheng, Fan Zhang, Jernej Kos, Warren He, Nicholas Hynes, Noah Johnson, Ari Juels, Andrew Miller, Dawn Song <br/>\n   2019 IEEE European Symposium on Security and Privacy (EuroS&P)\n```\n\n----------------------------------------\n\nTITLE: Navigating to Data Directory\nDESCRIPTION: Command to change to the node's data directory where certificates are stored.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/maintenance/refreshing-certificates.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd <PATH-TO-DATADIR>\n```\n\n----------------------------------------\n\nTITLE: Rendering Core Development Documentation Card\nDESCRIPTION: Creates a single documentation card for the 'Develop Core' section, linking to resources for contributing to core components of the Oasis Network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={ findSidebarItem('/core/') } />\n```\n\n----------------------------------------\n\nTITLE: Removing Key Manager Local Storage in Bash\nDESCRIPTION: Command to delete the local state of a key manager node during the upgrade process. This step is necessary to allow replication of the key material from other active nodes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/keymanager-node/key-manager-upgrade.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf runtimes/4000000000000000000000000000000000000000000000004a1a53dff2ae482d/worker-local-storage.badger.db/\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Token Distribution Visualization in JavaScript\nDESCRIPTION: Imports React components for rendering various charts related to token distribution and staking rewards. These components are used to visualize data throughout the document.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/oasis-network/token-metrics-and-distribution.mdx#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport FinalDistributionPieChart from '@site/src/token_distribution/pie/Chart.tsx';\nimport TokenDistributionChart from '@site/src/token_distribution/Chart.tsx';\nimport StakingRewardsChart from '@site/src/staking_rewards/Chart.tsx';\n```\n\n----------------------------------------\n\nTITLE: Commission Schedule Parameters Documentation in Markdown\nDESCRIPTION: Defines rules for commission rate changes and bounds in the network.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/genesis-doc.md#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* Rate change interval: 1 epoch\n* Rate bound lead time: 336 epochs (~14 days)\n* Max rate steps: 10\n* Max bound steps: 10\n```\n\n----------------------------------------\n\nTITLE: Rendering DocCard Component with Sidebar Item in JSX\nDESCRIPTION: This code snippet renders a DocCard component, passing it a sidebar item found using the findSidebarItem function. It's used to display a link to related documentation about token metrics and distribution.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/oasis-network/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={\n    findSidebarItem('/general/oasis-network/token-metrics-and-distribution')\n} />\n```\n\n----------------------------------------\n\nTITLE: Archive Node Status Output Example\nDESCRIPTION: Example JSON output showing the archive mode status of the node.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/archive-node.md#2025-04-16_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  // other fields omitted ...\n  \"mode\": \"archive\",\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation\nDESCRIPTION: React component imports used for documentation page structure and sidebar navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/opl/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Using Oasis CLI to Get Network Status\nDESCRIPTION: Bash command using the Oasis CLI to retrieve the current network status, including the latest block height and hash which can be used for state sync configuration.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis network status\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation in JSX\nDESCRIPTION: Imports DocCardList component from the theme and a utility function to find sidebar items for the documentation site.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/validator-node.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Transaction Out of Gas Error for Staking Operation\nDESCRIPTION: Error message shown when a staking transaction fails due to insufficient gas. This requires setting proper gas and amount flags in the transaction command.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nmodule=cmd/stake caller=stake.go:70 msg=\"failed to submit transaction\" err=\"rpc error: code = Unknown desc = staking: add escrow transaction failed: out of gas\" attempt=1\n```\n\n----------------------------------------\n\nTITLE: Various File Not Found Error Messages\nDESCRIPTION: Error messages displayed when the system cannot find required files, often due to incorrect paths or environment variables not being set properly.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nno such file or directory\n\nfile does not exist\n\nts=2019-11-17T03:42:09.778647033Z level=error module=cmd/registry/node caller=node.go:127 msg=\"failed to load entity\" err=\"file does not exist\"\n```\n\n----------------------------------------\n\nTITLE: Error Message for Invalid PEM File Permissions\nDESCRIPTION: Error displayed when a PEM file has incorrect permissions. All PEM files require specific permission levels for security.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nsignature/signer/file: invalid PEM file permissions 700 on /node/data/identity.pem\n```\n\n----------------------------------------\n\nTITLE: Creating Directories with Correct Permissions for Oasis Node\nDESCRIPTION: Command to create entity and node directories with the required 700 permissions (owner read/write/execute only).\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir --mode 700 --parents {entity,node}\n```\n\n----------------------------------------\n\nTITLE: Error Message for Invalid Directory Permissions\nDESCRIPTION: Error displayed when a node directory has incorrect permissions. The node and entity directories require specific permission levels for security.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/troubleshooting.md#2025-04-16_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ncommon/Mkdir: path '/node/data' has invalid permissions: -rwxr-xr-x\n```\n\n----------------------------------------\n\nTITLE: Restarting AESM Service on Ubuntu\nDESCRIPTION: Command to restart the AESM service after configuration changes on Ubuntu 22.04.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/set-up-trusted-execution-environment-tee.md#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl restart aesmd.service\n```\n\n----------------------------------------\n\nTITLE: Installing Bubblewrap on Fedora for ParaTime Nodes\nDESCRIPTION: Command to install Bubblewrap package on Fedora. Bubblewrap is a dependency needed for creating process sandboxes when running ParaTime nodes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/oasis-node.md#2025-04-16_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsudo dnf install bubblewrap\n```\n\n----------------------------------------\n\nTITLE: Importing Sidebar Utilities in JavaScript\nDESCRIPTION: This code snippet imports utility functions for finding sidebar items and a DocCardList component, likely used for rendering documentation navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {findSidebarItem} from '@site/src/sidebarUtils';\nimport DocCardList from '@theme/DocCardList';\n```\n\n----------------------------------------\n\nTITLE: Installing Bubblewrap on Ubuntu for ParaTime Nodes\nDESCRIPTION: Command to install Bubblewrap package on Ubuntu 20.04 or newer. Bubblewrap is required for creating process sandboxes when running ParaTime nodes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/prerequisites/oasis-node.md#2025-04-16_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt install bubblewrap\n```\n\n----------------------------------------\n\nTITLE: Building Bubblewrap from Source\nDESCRIPTION: Series of commands for building Bubblewrap from source after obtaining the source tarball, which is needed when the distribution's package manager doesn't provide a new enough version.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntar -xf bubblewrap-0.4.1.tar.xz\ncd bubblewrap-0.4.1\n./configure --prefix=/usr\nmake\nsudo make install\n```\n\n----------------------------------------\n\nTITLE: Installing Development Tools for Bubblewrap\nDESCRIPTION: Command for installing the necessary development tools and libcap headers required to build Bubblewrap from source on Ubuntu-based systems.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/paratime-client-node.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install build-essential libcap-dev\n```\n\n----------------------------------------\n\nTITLE: Running Oasis Remote Signer\nDESCRIPTION: Starts the Oasis remote signer with specified configuration options.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/node/run-your-node/advanced/remote-signer.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\noasis-remote-signer \\\n--datadir remote-signer \\\n--client.certificate remote-signer/remote_signer_client_cert.pem \\\n--grpc.port <REMOTE-SIGNER-PORT> \\\n--log.level DEBUG\n```\n\n----------------------------------------\n\nTITLE: Markdown Caution Block\nDESCRIPTION: Critical security warning about safely storing the mnemonic phrase.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/oasis-wallets/web.mdx#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:::caution\n\nYour mnemonic (i.e. keyphrase) is required to access your wallet. Be sure to\nstore it in a secure location. If you lose or forget your mnemonic, you will\nlose access to your wallet and any token funds contained in it.\n\n:::\n```\n\n----------------------------------------\n\nTITLE: Markdown Note Block\nDESCRIPTION: Warning note about browser compatibility requirements for using Ledger hardware wallets with WebUSB support.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/general/manage-tokens/oasis-wallets/web.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:::note\n\nThe wallet was designed to work with any modern browser. In order to use the\n[Ledger hardware wallet](../holding-rose-tokens/ledger-wallet.md) though, **you\nwill need the WebUSB support**. At time of writing, this was only available in\n[Chrome](https://www.google.com/chrome/) and other\n[Chromium](https://www.chromium.org/Home)-based browsers.\n\n:::\n```\n\n----------------------------------------\n\nTITLE: Using Tabs Component for ParaTime Options Display\nDESCRIPTION: Implementation of tabbed interface using Docusaurus Tabs and TabItem components to display information about three ParaTime options: Sapphire, Cipher, and Emerald ParaTimes.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/get-involved/run-node/paratime-node.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Tabs>\n<TabItem value=\"Sapphire ParaTime\">\n\n### Sapphire ParaTime\n\nA confidential EVM-compatible Oasis Foundation developed ParaTime that enables\nthe use of EVM smart contracts on the Oasis network.\n\n### Overview\n\n* **Leading Developer:** [Oasis Protocol Foundation], with contributions from\n  community developers\n* **Status:** Deployed on Mainnet and Testnet\n* **Testnet Launch Date:** July 2022\n* **Mainnet Launch Date:** Dec 2022\n* **Discord Channel:** [#node-operators][connect-with-us]\n* **Requires SGX:** Yes\n* **Parameters:**\n  * [Mainnet](../../node/mainnet/README.md#sapphire)\n  * [Testnet](../../node/testnet/README.md#sapphire)\n\n### Features\n\n* Fully decentralized with node operators distributed across the world.\n* Oasis **ROSE** tokens are the native token used in the ParaTime for gas fees.\n* Support for EVM smart contracts.\n* Support for confidential compute.\n\n### Mainnet Requirements\n\nFor your Sapphire ParaTime node to be eligible to be elected into the Sapphire\ncommittee on Mainnet, your entity needs to:\n\n- Have a validator in the **validator set**.\n- Have at least **5,000,000.00 ROSE staked/delegated** to it.\n\n</TabItem>\n<TabItem value=\"Cipher ParaTime\">\n\n### Cipher ParaTime\n\nAn Oasis Foundation developed ParaTime that enables WebAssembly-based\nconfidential smart contracts.\n\n### Overview\n\n* **Leading Developer:** [Oasis Protocol Foundation], with contributions from\n  community developers\n* **Status:** Deployed on Mainnet and Testnet\n* **Testnet Launch Date:** June 2021\n* **Mainnet Launch Date:** October 2021\n* **Discord Channel:** [#node-operators][connect-with-us]\n* **Requires SGX:** Yes\n* **Parameters:**\n  * [Mainnet](../../node/mainnet/README.md#cipher)\n  * [Testnet](../../node/testnet/README.md#cipher)\n\n### Features\n\n* Fully decentralized with node operators distributed across the world.\n* Oasis **ROSE** tokens are the native token used in the ParaTime for gas fees.\n* Support for WebAssembly smart contracts.\n* Support for confidential compute.\n\n### Mainnet Requirements\n\nFor your Cipher ParaTime node to be eligible to be elected into the Cipher\ncommittee on Mainnet, your entity needs to:\n\n- Have a validator in the **validator set**.\n\n</TabItem>\n<TabItem value=\"Emerald ParaTime\">\n\n### Emerald ParaTime\n\nAn EVM-compatible Oasis Foundation developed ParaTime that enables the use of\nEVM smart contracts on the Oasis network.\n\n### Overview\n\n* **Leading Developer:** [Oasis Protocol Foundation], with contributions from\n  community developers\n* **Status:** Deployed on Mainnet and Testnet\n* **Testnet Launch Date:** October 2021\n* **Mainnet Launch Date:** November 2021\n* **Discord Channel:** [#node-operators][connect-with-us]\n* **Requires SGX:** No\n* **Parameters:**\n  * [Mainnet](../../node/mainnet/README.md#emerald)\n  * [Testnet](../../node/testnet/README.md#emerald)\n\n### Features\n\n* Fully decentralized with node operators distributed across the world.\n* Oasis **ROSE** tokens are the native token used in the ParaTime for gas fees.\n\n### Mainnet Requirements\n\nFor your Emerald ParaTime node to be eligible to be elected into the Emerald\ncommittee on Mainnet, your entity needs to:\n\n- Have a validator in the **validator set**.\n- Have at least **5,000,000.00 ROSE staked/delegated** to it.\n\n</TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of ParaTimes\nDESCRIPTION: Markdown table displaying a matrix of ParaTimes categorized by EVM compatibility and confidentiality features, using DocCard components to link to detailed documentation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|                      | EVM-compatible                                        | Oasis Wasm                                          |\n|---------------------:|-------------------------------------------------------|-----------------------------------------------------|\n| **Confidential**     | <DocCard item={findSidebarItem('/build/sapphire/')} /> | <DocCard item={findSidebarItem('/build/tools/other-paratimes/cipher/')} /> |\n| **Non-Confidential** | <DocCard item={findSidebarItem('/build/tools/other-paratimes/emerald/')} />  | |\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation\nDESCRIPTION: React/JSX imports for documentation components used to render cards and handle sidebar navigation.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Card in JSX\nDESCRIPTION: Uses the DocCard component to display a link to the Cipher prerequisites documentation page. The findSidebarItem utility is used to locate the correct sidebar item by path.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/build/tools/other-paratimes/cipher/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCard item={\n    findSidebarItem('/build/tools/other-paratimes/cipher/prerequisites')\n} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Card Lists with Sidebar Items\nDESCRIPTION: Creates a documentation card list component that displays links to key sections of the 'Use Oasis' documentation using the findSidebarItem utility to retrieve page metadata.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={[\n    findSidebarItem('/general/oasis-network/'),\n    findSidebarItem('/general/manage-tokens/'),\n    findSidebarItem('/general/manage-tokens/cli/'),\n]} />\n```\n\n----------------------------------------\n\nTITLE: Importing React Documentation Components in JSX\nDESCRIPTION: Imports necessary React components from Docusaurus theme to render documentation cards and lists, along with a utility function to find items in the sidebar.\nSOURCE: https://github.com/oasisprotocol/docs/blob/main/docs/README.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCard from '@theme/DocCard';\nimport DocCardList from '@theme/DocCardList';\nimport {findSidebarItem} from '@site/src/sidebarUtils';\n```"
  }
]
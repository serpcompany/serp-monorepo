[
  {
    "owner": "pyecharts",
    "repo": "pyecharts",
    "content": "TITLE: Generating HTML Bar Chart with pyecharts\nDESCRIPTION: This snippet demonstrates how to create a basic bar chart using pyecharts and render it to an HTML file. It shows both the chained method calls and the traditional approach. The code initializes a Bar chart, adds x and y axis data, sets global options like the chart title, and finally renders the chart.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\n# V1 版本开始支持链式调用\nbar = (\n    Bar()\n    .add_xaxis([\"衬衫\", \"毛衣\", \"领带\", \"裤子\", \"风衣\", \"高跟鞋\", \"袜子\"])\n    .add_yaxis(\"商家A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"商家B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"某商场销售情况\"))\n)\nbar.render()\n\n# 不习惯链式调用的开发者依旧可以单独调用方法\nbar = Bar()\nbar.add_xaxis([\"衬衫\", \"毛衣\", \"领带\", \"裤子\", \"风衣\", \"高跟鞋\", \"袜子\"])\nbar.add_yaxis(\"商家A\", [114, 55, 27, 101, 125, 27, 105])\nbar.add_yaxis(\"商家B\", [57, 134, 137, 129, 145, 60, 49])\nbar.set_global_opts(title_opts=opts.TitleOpts(title=\"某商场销售情况\"))\nbar.render()\n```\n\n----------------------------------------\n\nTITLE: Create a Bar chart with pyecharts\nDESCRIPTION: This Python code snippet demonstrates how to create a basic bar chart using pyecharts. It imports the necessary modules, creates a `Bar` object, adds x and y axis data, and sets global options like the title. The `render()` method generates an HTML file containing the chart.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.en.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom pyecharts.charts import Bar\nfrom pyecharts import options as opts\n\nbar = (\n    Bar()\n    .add_xaxis([\"衬衫\", \"毛衣\", \"领带\", \"裤子\", \"风衣\", \"高跟鞋\", \"袜子\"])\n    .add_yaxis(\"商家A\", [114, 55, 27, 101, 125, 27, 105])\n    .add_yaxis(\"商家B\", [57, 134, 137, 129, 145, 60, 49])\n    .set_global_opts(title_opts=opts.TitleOpts(title=\"某商场销售情况\"))\n)\nbar.render()\n```\n\n----------------------------------------\n\nTITLE: Install pyecharts via pip\nDESCRIPTION: This shell command installs the pyecharts library using pip, the Python package installer. It's the simplest way to get started with pyecharts.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.en.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ pip install pyecharts\n```\n\n----------------------------------------\n\nTITLE: Installing pyecharts using pip\nDESCRIPTION: This snippet shows how to install the latest version of pyecharts using pip, the Python package installer. It also provides an alternative command for installing a specific older version (0.5.11).\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# 安装 v1 以上版本\n$ pip install pyecharts -U\n\n# 如果需要安装 0.5.11 版本的开发者，可以使用\n# pip install pyecharts==0.5.11\n```\n\n----------------------------------------\n\nTITLE: Generating PNG Image with pyecharts and snapshot-selenium\nDESCRIPTION: This snippet shows how to generate a PNG image from a pyecharts chart using the `snapshot_selenium` library. It defines a function `bar_chart` that creates and configures a Bar chart. The `make_snapshot` function from `pyecharts.render` is then used to render the chart to a PNG file. Requires `snapshot-selenium` (or `snapshot-phantomjs`) to be installed.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom snapshot_selenium import snapshot as driver\n\nfrom pyecharts import options as opts\nfrom pyecharts.charts import Bar\nfrom pyecharts.render import make_snapshot\n\n\ndef bar_chart() -> Bar:\n    c = (\n        Bar()\n        .add_xaxis([\"衬衫\", \"毛衣\", \"领带\", \"裤子\", \"风衣\", \"高跟鞋\", \"袜子\"])\n        .add_yaxis(\"商家A\", [114, 55, 27, 101, 125, 27, 105])\n        .add_yaxis(\"商家B\", [57, 134, 137, 129, 145, 60, 49])\n        .reversal_axis()\n        .set_series_opts(label_opts=opts.LabelOpts(position=\"right\"))\n        .set_global_opts(title_opts=opts.TitleOpts(title=\"Bar-测试渲染图片\"))\n    )\n    return c\n\n# 需要安装 snapshot-selenium 或者 snapshot-phantomjs\nmake_snapshot(driver, bar_chart().render(), \"bar.png\")\n```\n\n----------------------------------------\n\nTITLE: Create a chart image snapshot\nDESCRIPTION: This Python code snippet uses the `make_snapshot` function from `pyecharts.render` to create an image of the bar chart. It requires selenium to be configured. The first argument is the rendered chart html and the second argument is the file name of the output png.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.en.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom pyecharts.render import make_snapshot\n\n# needs to configure selenium\nmake_snapshot(bar.render(), \"bar.png\")\n```\n\n----------------------------------------\n\nTITLE: Install pyecharts from source\nDESCRIPTION: These shell commands clone the pyecharts repository from GitHub, navigate into the cloned directory, install the required dependencies specified in `requirements.txt`, and then install pyecharts itself using `setup.py`.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.en.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ git clone https://github.com/pyecharts/pyecharts.git\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n```\n\n----------------------------------------\n\nTITLE: Installing pyecharts from source\nDESCRIPTION: This snippet demonstrates installing pyecharts from source using git. It includes cloning the repository, installing dependencies, and running the setup script. An alternative git clone command is given for installing version 0.5.11.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# 安装 v1 以上版本\n$ git clone https://github.com/pyecharts/pyecharts.git\n# 如果需要安装 0.5.11 版本，请使用 git clone https://github.com/pyecharts/pyecharts.git -b v05x\n$ cd pyecharts\n$ pip install -r requirements.txt\n$ python setup.py install\n```\n\n----------------------------------------\n\nTITLE: Run Unit Tests\nDESCRIPTION: These shell commands install the test dependencies defined in `test/requirements.txt` and run the unit tests using the `make` command.  This assumes a Makefile is present in the root of the project.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.en.md#_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ pip install -r test/requirements.txt\n$ make\n```\n\n----------------------------------------\n\nTITLE: Installing Test Requirements and Running Make\nDESCRIPTION: This snippet shows how to install the necessary requirements for running unit tests and then executes the 'make' command, presumably to run the tests.\nSOURCE: https://github.com/pyecharts/pyecharts/blob/master/README.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n$ pip install -r test/requirements.txt\n$ make\n```"
  }
]
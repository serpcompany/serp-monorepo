[
  {
    "owner": "surveyjs",
    "repo": "survey-pdf",
    "content": "TITLE: Complete HTML Structure for SurveyJS with PDF Export\nDESCRIPTION: Full HTML structure required to implement a survey with PDF export functionality, including all necessary library references.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Export Survey to PDF - SurveyJS</title>\n    <meta charset=\"utf-8\">\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    \n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyContainer\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing PDF Export Functionality in jQuery\nDESCRIPTION: JavaScript function that handles the export process by creating a SurveyPDF instance, assigning survey data (user responses), and saving the document. The function can be called when a user wants to export the survey.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = { /* ... */ };\n\nconst pdfDocOptions = { /* ... */ };\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Rendering in SurveyJS PDF Generator\nDESCRIPTION: This snippet demonstrates how to use the onRenderQuestion event to customize the rendering of survey questions in PDF forms. It shows how to access and modify individual bricks that compose the question layout.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-survey-question-rendering-in-pdf-form.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\nsurveyPdf.onRenderQuestion.add((_, options) => {\n  debugger;\n});\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\nsurveyPdf.onRenderQuestion.add((_, options) => {\n  debugger;\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ItemValue } from \"survey-core\";\n\nsurveyPdf.onRenderQuestion.add((_, options) => {\n  const plainBricks = options.bricks[0].unfold();\n  // Color the title green for correct answers or red for incorrect answers\n  const color = options.question.isAnswerCorrect() ? \"#00ff00\" : \"#ff0000\";\n  plainBricks[0].textColor = color; // A brick that renders a question number\n  plainBricks[1].textColor = color; // A brick that renders a question title\n\n  // Find a correct answer and access its text brick\n  const correctAnswer = ItemValue.getItemByValue(options.question.choices, options.question.correctAnswer);\n  const correctAnswerIndex = options.question.choices.indexOf(correctAnswer);\n  const correctAnswerRootBrick = options.bricks[correctAnswerIndex];\n  const correctAnswerTextBrick = (correctAnswerIndex === 0)\n    ? correctAnswerRootBrick.unfold()[4]\n    : correctAnswerRootBrick.unfold()[1];\n  // Color the correct answer green\n  correctAnswerTextBrick.textColor = \"#00ff00\";\n});\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Component Implementation with PDF Export\nDESCRIPTION: Full implementation of a React component that includes survey rendering and PDF export functionality with the necessary imports and configurations.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n// components/Survey.tsx\n'use client'\n\nimport 'survey-core/survey-core.css';\nimport { Model } from 'survey-core';\nimport { Survey } from 'survey-react-ui';\nimport { IDocOptions, SurveyPDF } from 'survey-pdf';\n\nconst surveyJson = {\n  elements: [{\n    name: \"satisfaction-score\",\n    title: \"How would you describe your experience with our product?\",\n    type: \"radiogroup\",\n    choices: [\n      { value: 5, text: \"Fully satisfying\" },\n      { value: 4, text: \"Generally satisfying\" },\n      { value: 3, text: \"Neutral\" },\n      { value: 2, text: \"Rather unsatisfying\" },\n      { value: 1, text: \"Not satisfying at all\" }\n    ],\n    isRequired: true\n  }, {\n    name: \"how-can-we-improve\",\n    title: \"In your opinion, how could we improve our product?\",\n    type: \"comment\"\n  }, {\n    name: \"nps-score\",\n    title: \"On a scale of zero to ten, how likely are you to recommend our product to a friend or colleague?\",\n    type: \"rating\",\n    rateMin: 0,\n    rateMax: 10,\n  }],\n  completedHtml: \"Thank you for your feedback!\",\n};\n\nconst pdfDocOptions: IDocOptions = {\n  fontSize: 12\n};\n\nconst savePdf = (surveyData: any) => {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n};\n\nexport default function SurveyComponent() {\n  const survey = new Model(surveyJson);\n  \n  survey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n  });\n\n  return (\n    <Survey model={survey} id=\"surveyContainer\" />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Vue Application with SurveyJS PDF Export\nDESCRIPTION: Full implementation of a Vue application that creates a survey with three questions and adds PDF export functionality. This code includes the survey definition, PDF export configuration, and the UI implementation.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-vue.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\nimport 'survey-core/survey-core.css';\nimport { Model } from 'survey-core';\nimport { SurveyComponent } from \"survey-vue3-ui\";\nimport { SurveyPDF } from 'survey-pdf';\n\nconst surveyJson = {\n  elements: [{\n    name: \"satisfaction-score\",\n    title: \"How would you describe your experience with our product?\",\n    type: \"radiogroup\",\n    choices: [\n      { value: 5, text: \"Fully satisfying\" },\n      { value: 4, text: \"Generally satisfying\" },\n      { value: 3, text: \"Neutral\" },\n      { value: 2, text: \"Rather unsatisfying\" },\n      { value: 1, text: \"Not satisfying at all\" }\n    ],\n    isRequired: true\n  }, {\n    name: \"how-can-we-improve\",\n    title: \"In your opinion, how could we improve our product?\",\n    type: \"comment\"\n  }, {\n    name: \"nps-score\",\n    title: \"On a scale of zero to ten, how likely are you to recommend our product to a friend or colleague?\",\n    type: \"rating\",\n    rateMin: 0,\n    rateMax: 10,\n  }],\n  completedHtml: \"Thank you for your feedback!\",\n}\n\nconst pdfDocOptions = {\n  fontSize: 12\n}\n\nconst savePdf = function (surveyData: any) {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n}\n\nconst survey = new Model(surveyJson);\n\nsurvey.addNavigationItem({\n  id: \"pdf-export\",\n  title: \"Save as PDF\",\n  action: () => savePdf(survey.data)\n});\n</script>\n\n<template>\n  <SurveyComponent :model=\"survey\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Complete JavaScript Implementation for SurveyJS PDF Export in Knockout\nDESCRIPTION: This snippet shows the full JavaScript implementation for SurveyJS PDF export in a Knockout application. It includes survey configuration, PDF export setup, and Knockout bindings.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-knockout.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n    // ...\n};\n\nconst survey = new Survey.Model(surveyJson);\n\nconst pdfDocOptions = {\n    fontSize: 12\n};\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    ko.applyBindings({\n        model: survey\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Read-Only Question Rendering in SurveyJS PDF Generator\nDESCRIPTION: This snippet shows how to set the readonlyRenderAs option to control the rendering of read-only questions in PDF forms. It also demonstrates how to override this setting for individual questions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-survey-question-rendering-in-pdf-form.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  readonlyRenderAs: \"text\" // or \"acroform\" | \"auto\"\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Model } from \"survey-core\";\nimport { SurveyPDF } from \"survey-pdf\";\n\nconst surveyJson = { ... };\nconst pdfDocOptions = { ... };\n\nconst survey = new Model(surveyJson);\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n\nsurveyPdf.data = survey.data;\nsurveyPdf.getAllQuestions().forEach(question => {\n  if (question.getType() === \"file\") {\n    question.readOnly = true;\n    question.readonlyRenderAs = \"text\";\n  }\n});\nsurveyPdf.save(filename);\n```\n\n----------------------------------------\n\nTITLE: Complete JavaScript Implementation for SurveyJS PDF Export\nDESCRIPTION: Full JavaScript implementation that creates a survey, configures PDF export options, implements the savePdf function, adds a navigation button for PDF export, and initializes the survey in the designated container.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n    // ...\n};\n\nconst survey = new Survey.Model(surveyJson);\n\nconst pdfDocOptions = {\n    fontSize: 12\n};\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n\n$(function() {\n    $(\"#surveyContainer\").Survey({ model: survey });\n});\n```\n\n----------------------------------------\n\nTITLE: Complete JavaScript Implementation for Survey with PDF Export\nDESCRIPTION: Full JavaScript implementation that configures a survey, adds PDF export functionality, and renders the survey in the container element.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n    // ...\n};\n\nconst survey = new Survey.Model(surveyJson);\n\nconst pdfDocOptions = {\n    fontSize: 12\n};\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    survey.render(document.getElementById(\"surveyContainer\"));\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Survey PDF Export Functionality in JavaScript\nDESCRIPTION: Code snippet demonstrating how to create a SurveyPDF instance and implement a savePdf helper function that exports survey data to a PDF document.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { IDocOptions, SurveyPDF } from \"survey-pdf\";\n\nconst surveyJson = { /* ... */ };\nconst pdfDocOptions: IDocOptions = { /* ... */ };\n\nconst savePdf = function (surveyData) {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Size in PDF Forms with SurveyJS\nDESCRIPTION: Shows how to set predefined or custom page sizes for PDF documents generated with SurveyJS PDF Generator using the format property.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  // A predefined page format\n  format: \"a2\"\n  // A custom page size in millimeters: [width, height]\n  format: [210, 297]\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Implementing PDF Export Functionality in JavaScript\nDESCRIPTION: Helper function that creates a SurveyPDF instance with the survey JSON schema and export options, assigns survey data (user responses), and saves the result as a PDF file.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-vue.md#2025-04-18_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { SurveyPDF } from \"survey-pdf\";\n\nconst surveyJson = { /* ... */ }\nconst pdfDocOptions = { /* ... */ }\n\nconst savePdf = function (surveyData: any) {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Survey PDF Export Function in JavaScript\nDESCRIPTION: This snippet shows the implementation of a savePdf function that creates a SurveyPDF instance, assigns survey data, and saves the PDF. It also demonstrates how to add a navigation button to trigger the PDF export.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-knockout.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = { /* ... */ };\n\nconst pdfDocOptions = { /* ... */ };\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n\nconst survey = new Survey.Model(surveyJson);\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Survey Export to PDF Function\nDESCRIPTION: JavaScript function that creates a SurveyPDF instance from a survey JSON schema, assigns user response data, and saves the result as a PDF file.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = { /* ... */ };\n\nconst pdfDocOptions = { /* ... */ };\n\nconst savePdf = function (surveyData) {\n    const surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n    surveyPdf.data = surveyData;\n    surveyPdf.save();\n};\n```\n\n----------------------------------------\n\nTITLE: Complete Angular Component for Survey with PDF Export\nDESCRIPTION: Full implementation of an Angular component that includes survey initialization and PDF export functionality.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { Component, OnInit } from '@angular/core';\nimport { Model } from \"survey-core\";\nimport { SurveyPDF, IDocOptions } from \"survey-pdf\";\n\nconst surveyJson = {\n  // ...\n};\n\nconst pdfDocOptions: IDocOptions = {\n  fontSize: 12\n};\n\nconst savePdf = function (surveyData: any) {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Export Survey to PDF - SurveyJS for Angular';\n  surveyModel: Model;\n  ngOnInit() {\n    const survey = new Model(surveyJson);\n\n    survey.addNavigationItem({\n      id: \"pdf-export\",\n      title: \"Save as PDF\",\n      action: () => savePdf(survey.data)\n    });\n\n    this.surveyModel = survey;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing PDF Export Function in TypeScript\nDESCRIPTION: Function to create a SurveyPDF instance, assign survey data, and save the PDF document.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { IDocOptions, SurveyPDF } from \"survey-pdf\";\n\nconst surveyJson = { /* ... */ };\n\nconst pdfDocOptions: IDocOptions = { /* ... */ };\n\nconst savePdf = function (surveyData: any) {\n  const surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n  surveyPdf.data = surveyData;\n  surveyPdf.save();\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Read-Only PDF Forms with SurveyJS\nDESCRIPTION: Shows how to generate a read-only (non-interactive) PDF form and pre-fill it with user responses by enabling the readOnly property and assigning survey data.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = { ... };\nconst survey = new Survey.Model(surveyJson);\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\nsurveyPdf.readOnly = true;\nsurveyPdf.data = survey.data;\n\n// In modular applications:\nimport { Model } from \"survey-core\";\nimport { SurveyPDF } from \"survey-pdf\";\n\nconst surveyJson = { ... };\nconst survey = new Model(surveyJson);\n\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\nsurveyPdf.readOnly = true;\nsurveyPdf.data = survey.data;\n```\n\n----------------------------------------\n\nTITLE: Populating PDF Form with Data in SurveyJS Node.js\nDESCRIPTION: This code demonstrates two methods to populate a PDF form with data: directly setting the data property or using the mergeData method to preserve default values.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-nodejs.md#2025-04-18_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nsurveyPdf.data = {\n  // ...\n  // An object with question answers\n  // ...\n};\n// ----- or -----\nsurveyPdf.mergeData({\n  // ...\n  // An object with question answers\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Integrating PDF Export Button with Survey in Vue Component\nDESCRIPTION: Vue component that renders a survey and adds a custom navigation button for PDF export. When clicked, this button triggers the savePdf function with the current survey data.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-vue.md#2025-04-18_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\nimport 'survey-core/survey-core.css';\nimport { Model } from 'survey-core';\nimport { SurveyComponent } from \"survey-vue3-ui\";\nimport { SurveyPDF } from 'survey-pdf';\n\nconst surveyJson = { /* ... */ }\nconst pdfDocOptions = { /* ... */ }\nconst savePdf = function (surveyData: any) { /* ... */ }\n\nconst survey = new Model(surveyJson);\n\nsurvey.addNavigationItem({\n  id: \"pdf-export\",\n  title: \"Save as PDF\",\n  action: () => savePdf(survey.data)\n});\n</script>\n\n<template>\n  <SurveyComponent :model=\"survey\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Exporting PDF Form in SurveyJS Node.js\nDESCRIPTION: This snippet shows how to save the PDF document with the exported survey using the save method of the SurveyPDF instance.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-nodejs.md#2025-04-18_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nsurveyPdf.save(\"My PDF Form.pdf\");\n```\n\n----------------------------------------\n\nTITLE: Compressing PDF Documents with SurveyJS\nDESCRIPTION: Demonstrates how to enable compression to reduce the size of PDF documents, noting that compressed PDFs don't support AcroForms or custom fonts.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  compress: true\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Size in PDF Forms with SurveyJS\nDESCRIPTION: Demonstrates how to adjust the font size in points for all text elements in a PDF form, with proportional scaling applied to titles and descriptions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  fontSize: 16\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Adding PDF Export Button to Survey Navigation\nDESCRIPTION: JavaScript code that adds a \"Save as PDF\" navigation button to a survey and configures it to call the PDF export function when clicked.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst survey = new Survey.Model(surveyJson);\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n```\n\n----------------------------------------\n\nTITLE: Applying Standard Fonts in PDF Forms with SurveyJS\nDESCRIPTION: Shows how to apply one of the standard 14 fonts (Helvetica, Courier, Times, Symbol, ZapfDingbats) to PDF forms using the fontName property.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  fontName: \"Helvetica\" // or \"Courier\" | \"Times\" | \"Symbol\" | \"ZapfDingbats\"\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Setting Page Margins in PDF Forms with SurveyJS\nDESCRIPTION: Demonstrates how to specify page margins for PDF forms in millimeters using the margins property, which is useful when adding headers and footers.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  top: 10,\n  bot: 10,\n  left: 15,\n  right: 15\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Setting Page Orientation in PDF Forms with SurveyJS\nDESCRIPTION: Demonstrates how to change the page orientation in SurveyJS PDF Generator between portrait and landscape modes by setting the orientation property.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-pdf-form-settings.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  orientation: \"l\" // or \"p\"\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Adding PDF Export Button to Survey in Angular Component\nDESCRIPTION: Angular component code to add a navigation button for PDF export and initialize the survey model.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { Component, OnInit } from '@angular/core';\nimport { Model } from \"survey-core\";\n// ...\n@Component({ /* ... */ })\nexport class AppComponent implements OnInit {\n  surveyModel: Model;\n  ngOnInit() {\n    const survey = new Model(surveyJson);\n\n    survey.addNavigationItem({\n      id: \"pdf-export\",\n      title: \"Save as PDF\",\n      action: () => savePdf(survey.data)\n    });\n\n    this.surveyModel = survey;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom PDF Renderer for Color Picker Question in SurveyJS\nDESCRIPTION: This snippet shows how to create and register a custom renderer class for a color-picker question. The FlatCustomColor class extends FlatQuestion and implements the generateFlatsContent method to create and return a custom PDF brick with specific dimensions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/export-custom-components.md#2025-04-18_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { FlatRepository, FlatQuestion } from \"survey-pdf\";\n\n/** Custom PDF brick configuration goes here */\n\nclass FlatCustomColor extends FlatQuestion {\n  async generateFlatsContent(point) {\n    const rect = { ...point };\n    rect.yBot = point.yTop + 20;\n    rect.xRight = point.xLeft + 100;\n    return [new CustomPdfBrick(this.question, this.controller, rect)];\n  }\n}\n\nFlatRepository.register(\"color-picker\", FlatCustomColor);\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom PDF Brick for Custom Question Rendering in SurveyJS\nDESCRIPTION: This code creates a custom PDF brick by extending the PdfBrick class to render a color picker question. The renderInteractive method uses jsPDF API to draw a colored rectangle representing the selected color value.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/export-custom-components.md#2025-04-18_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { PdfBrick } from \"survey-pdf\";\n\nclass CustomPdfBrick extends PdfBrick {\n  async renderInteractive() {\n    const doc = this.controller.doc;\n    let oldFillColor = doc.getFillColor();\n    doc.setFillColor(this.question.value || \"black\");\n    doc.rect(this.xLeft, this.yTop, this.width, this.height, \"F\");\n    doc.setFillColor(oldFillColor);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Predefined Renderer for Custom Questions in SurveyJS PDF Generator\nDESCRIPTION: This snippet demonstrates how to configure a custom question type (color-picker) to use an existing Text Input question renderer for PDF export. The code imports the FlatRepository and registers the color-picker type to use the text renderer.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/export-custom-components.md#2025-04-18_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport { FlatRepository } from \"survey-pdf\";\n\nFlatRepository.register(\n  \"color-picker\",\n  FlatRepository.getRenderer(\"text\")\n);\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Structure for SurveyJS PDF Export in Knockout\nDESCRIPTION: This snippet provides the full HTML structure for implementing SurveyJS PDF export in a Knockout application. It includes all necessary script and link tags, as well as the survey element.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-knockout.md#2025-04-18_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Export Survey to PDF - SurveyJS for Knockout</title>\n    <meta charset=\"utf-8\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <link href=\"https://unpkg.com/survey-knockout/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    \n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <survey params=\"survey: model\"></survey>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Calculating Drawing Area Size in PDF Header/Footer\nDESCRIPTION: This snippet shows how to calculate the width and height of the available drawing area in a PDF header by accessing the canvas rectangle coordinates. These measurements are needed for proper positioning of custom content.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nsurveyPdf.onRenderHeader.add((_, canvas) => {\n  const width = canvas.rect.xRight - canvas.rect.xLeft;\n  const height = canvas.rect.yBot - canvas.rect.yTop;\n});\n```\n\n----------------------------------------\n\nTITLE: Drawing Styled Text in PDF Footer\nDESCRIPTION: This code example shows how to add custom text to a PDF form footer using the drawText() method. It demonstrates setting text content, font size, and making the text bold.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nsurveyPdf.onRenderFooter.add((_, canvas) => {\n  canvas.drawText({\n    text: \"Created by SurveyJS PDF Generator\",\n    fontSize: 10,\n    isBold: true\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Rendering Options in SurveyJS PDF Generator\nDESCRIPTION: This snippet demonstrates how to enable the applyImageFit option to control image rendering in PDF forms, preserving the imageFit property of Image questions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-survey-question-rendering-in-pdf-form.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst options = {\n  applyImageFit: true\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Configuring Matrix Rendering Options in SurveyJS PDF Generator\nDESCRIPTION: This snippet shows how to set the matrixRenderAs option to control matrix question rendering in PDF forms. It also demonstrates how to override this setting for individual matrix questions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-survey-question-rendering-in-pdf-form.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  matrixRenderAs: \"list\"\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n  \"elements\": [{\n    \"type\": \"matrix\",\n    // ...\n    \"renderAs\": \"list\"\n  }]\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Rendering Options in SurveyJS PDF Generator\nDESCRIPTION: This snippet demonstrates how to set the htmlRenderAs option to control HTML question rendering in PDF forms. It also shows how to override this setting for individual questions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/customize-survey-question-rendering-in-pdf-form.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n  htmlRenderAs: \"image\" // or \"standard\" | \"auto\"\n};\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n  \"elements\": [{\n    \"type\": \"html\",\n    // ...\n    \"renderAs\": \"image\" // or \"standard\"\n  }]\n};\n```\n\n----------------------------------------\n\nTITLE: Linking SurveyJS PDF Generator Resources in HTML\nDESCRIPTION: HTML code showing how to include the required jsPDF library and SurveyJS PDF Generator scripts in the head section of an HTML page.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    <!-- ... -->\n</head>\n```\n\n----------------------------------------\n\nTITLE: Linking Required Resources for PDF Export in jQuery\nDESCRIPTION: HTML code that links necessary resources including jQuery, jsPDF library, and SurveyJS PDF Generator library. These resources must be included in the head section of your HTML page in the specified order.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    <!-- ... -->\n</head>\n```\n\n----------------------------------------\n\nTITLE: Configuring Export Properties for SurveyJS PDF in Node.js\nDESCRIPTION: This snippet shows how to configure export properties for customizing the PDF output, such as font size, and how to create a SurveyPDF instance with these properties.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-nodejs.md#2025-04-18_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nconst pdfDocOptions = {\n  fontSize: 12\n};\n\nconst surveyJson = { ... };\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Linking SurveyJS PDF Generator Resources in HTML\nDESCRIPTION: This snippet shows how to include the necessary script tags for jsPDF and SurveyJS PDF Generator in the HTML file. These resources should be added after the Knockout script.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-knockout.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script type=\"text/javascript\" src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    <!-- ... -->\n</head>\n```\n\n----------------------------------------\n\nTITLE: Installing the survey-pdf Package via npm\nDESCRIPTION: Command to install the survey-pdf npm package and its dependencies including jsPDF.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nnpm install survey-pdf --save\n```\n\n----------------------------------------\n\nTITLE: Installing survey-pdf Package with npm\nDESCRIPTION: Command to install the survey-pdf npm package which provides PDF export functionality for SurveyJS. This package is built on the jsPDF library and will install all necessary dependencies.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-vue.md#2025-04-18_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nnpm install survey-pdf --save\n```\n\n----------------------------------------\n\nTITLE: Adding a Logo to a Survey in SurveyJS PDF Generator\nDESCRIPTION: This snippet demonstrates how to add a Base64-encoded logo to a survey JSON schema and position it to the right of the survey title. It shows both the standard and modular application approaches for initializing the SurveyPDF object.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst surveyJson = {\n  \"logo\": \"data:image/png;base64,...\",\n  \"logoPosition\": \"right\"\n};\nconst pdfDocOptions = { ... };\n\nconst surveyPdf = new SurveyPDF.SurveyPDF(surveyJson, pdfDocOptions);\n\n// In modular applications:\nimport { SurveyPDF } from \"survey-pdf\";\nconst surveyPdf = new SurveyPDF(surveyJson, pdfDocOptions);\n```\n\n----------------------------------------\n\nTITLE: Installing survey-pdf Package via npm\nDESCRIPTION: Command to install the survey-pdf npm package and its dependencies, including jsPDF.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install survey-pdf --save\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Properties\nDESCRIPTION: JavaScript code that demonstrates how to configure PDF export options, specifically setting the font size property.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n    fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Properties in JavaScript\nDESCRIPTION: JavaScript code that defines export properties for the PDF document. This example sets the font size to 12 points, but many other properties can be configured as per the IDocOptions interface.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n    fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Page Numbers to PDF Footer\nDESCRIPTION: This code shows how to include page numbers in a PDF form footer by accessing the pageNumber and pageCount properties of the canvas object and drawing them as text.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nsurveyPdf.onRenderFooter.add((_, canvas) => {\n  canvas.drawText({\n    text: \"Page \" + canvas.pageNumber + \" of \" + canvas.pageCount\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Properties in JavaScript\nDESCRIPTION: Code snippet showing how to configure export properties for PDF generation using the IDocOptions interface.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { IDocOptions } from 'survey-pdf';\n\nconst pdfDocOptions: IDocOptions = {\n  fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Properties in JavaScript\nDESCRIPTION: Example of setting custom PDF export properties by creating a pdfDocOptions object. This shows how to adjust the fontSize property, but the IDocOptions interface provides many more customization options.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-vue.md#2025-04-18_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst pdfDocOptions = {\n    fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Options in TypeScript\nDESCRIPTION: Example of setting export properties for PDF generation, specifically changing the fontSize.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { IDocOptions } from \"survey-pdf\";\n\nconst pdfDocOptions: IDocOptions = {\n  fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Positioning Page Numbers in Bottom-Right Corner of PDF Footer\nDESCRIPTION: This example demonstrates how to align page numbers in the bottom-right corner of a PDF footer with specified margins. It uses horizontalAlign, verticalAlign, and margins properties for precise positioning.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nsurveyPdf.onRenderFooter.add((_, canvas) => {\n  canvas.drawText({\n    text: \"Page \" + canvas.pageNumber + \" of \" + canvas.pageCount,\n    horizontalAlign: \"right\",\n    verticalAlign: \"bottom\",\n    margins: {\n      right: 12,\n      bot: 12\n    }\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a PDF Export Button to SurveyJS in jQuery\nDESCRIPTION: JavaScript code that adds a navigation button to the survey UI. When clicked, this button triggers the savePdf function with the current survey data, allowing users to export the survey with their responses.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst survey = new Survey.Model(surveyJson);\n\nsurvey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a React Component with PDF Export Button\nDESCRIPTION: Code example showing how to add a navigation button to a survey component that triggers PDF export functionality when clicked.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n'use client'\n\nimport { Model } from 'survey-core';\nimport { Survey } from 'survey-react-ui';\n// ...\nexport default function SurveyComponent() {\n  const survey = new Model(surveyJson);\n  \n  survey.addNavigationItem({\n    id: \"pdf-export\",\n    title: \"Save as PDF\",\n    action: () => savePdf(survey.data)\n  });\n\n  return (\n    <Survey model={survey} id=\"surveyContainer\" />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Drawing an Image in PDF Footer with Size Constraints\nDESCRIPTION: This snippet demonstrates how to add a Base64-encoded image to a PDF footer, with the image size set to half the height and width of the available drawing area.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/add-header-and-footer-to-pdf-form.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nsurveyPdf.onRenderFooter.add((_, canvas) => {\n  canvas.drawImage({\n    base64: \"data:image/png;base64,...\",\n    width: (canvas.rect.yBot - canvas.rect.yTop) * 0.5,\n    height: (canvas.rect.yBot - canvas.rect.yTop) * 0.5\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Angular Component Template for Survey Rendering\nDESCRIPTION: HTML template for rendering the survey in an Angular component.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<survey [model]=\"surveyModel\"></survey>\n```\n\n----------------------------------------\n\nTITLE: Setting Up JSDOM for HTML and Signature Pad Questions in Node.js\nDESCRIPTION: This code snippet demonstrates how to set up JSDOM to create a simulated web environment in Node.js, which is necessary for surveys containing HTML or Signature Pad questions.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-nodejs.md#2025-04-18_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nconst jsdom = require(\"jsdom\");\nconst { JSDOM } = jsdom;\nconst SurveyPDF = require(\"survey-pdf\");\n\nconst { window } = new JSDOM(`...`);\nglobal.window = window;\nglobal.document = window.document;\n```\n\n----------------------------------------\n\nTITLE: Next.js Page Implementation with Dynamic Survey Component Import\nDESCRIPTION: Code showing how to implement a Next.js page that dynamically imports the Survey component with the PDF export functionality.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-react.md#2025-04-18_snippet_5\n\nLANGUAGE: js\nCODE:\n```\n// survey/page.tsx\nimport dynamic from 'next/dynamic';\n\nconst SurveyComponent = dynamic(() => import(\"@/components/Survey\"), {\n  ssr: false\n});\n\nexport default function Survey() {\n  return (\n    <SurveyComponent />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Export Properties in JavaScript\nDESCRIPTION: This snippet demonstrates how to set up export properties for customizing the PDF output. In this example, the fontSize property is set to 12.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-knockout.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst pdfDocOptions = {\n    fontSize: 12\n};\n```\n\n----------------------------------------\n\nTITLE: Cloning the SurveyJS PDF Generator Repository\nDESCRIPTION: Commands to clone the SurveyJS PDF Generator repository from GitHub and navigate to the project directory.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/surveyjs/survey-pdf.git\ncd survey-pdf\n```\n\n----------------------------------------\n\nTITLE: Building the SurveyJS PDF Generator Library\nDESCRIPTION: Command to build production-ready scripts and stylesheets for the SurveyJS PDF Generator library. Output files will be placed in the survey-pdf folder under the packages directory.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build_prod\n```\n\n----------------------------------------\n\nTITLE: Building the SurveyJS PDF Generator Library\nDESCRIPTION: Command to build the production version of the SurveyJS PDF Generator library. The built files will be located in the 'survey-pdf' folder under the 'packages' directory.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build_prod\n```\n\n----------------------------------------\n\nTITLE: Angular Module Configuration for SurveyJS\nDESCRIPTION: Angular module configuration that includes necessary imports for SurveyJS functionality.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-angular.md#2025-04-18_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SurveyModule } from \"survey-angular-ui\";\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    SurveyModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Running Test Examples for SurveyJS PDF Generator\nDESCRIPTION: Command to start a local HTTP server for running test examples. The server will be accessible at http://localhost:7777/.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/README.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for SurveyJS PDF Generator\nDESCRIPTION: Command to execute the unit tests for the SurveyJS PDF Generator project.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/README.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Bug Fix for Signature Pad Question in Survey PDF\nDESCRIPTION: A bug fix that addresses the usage of signatureWidth/Height properties instead of width/height for signature pad questions in the Survey PDF library.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* use signatureWidth/Height instead of width/height for signature pad question ([6c10b60](https://github.com/surveyjs/survey-pdf/commit/6c10b604e2dbb597e4e11aa741fc9e15feb08321))\n```\n\n----------------------------------------\n\nTITLE: Installing SurveyJS PDF Generator Dependencies\nDESCRIPTION: Command to install the required npm dependencies for the SurveyJS PDF Generator project. Requires Node.js v6.0.0+ and npm v2.7.0+.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for SurveyJS PDF Generator\nDESCRIPTION: Command to install the necessary dependencies for the SurveyJS PDF Generator project. Requires Node.js v6.0.0+ and npm v2.7.0+.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running SurveyJS PDF Generator Test Examples\nDESCRIPTION: Command to start a local HTTP server at http://localhost:7777/ to run and view test examples of the SurveyJS PDF Generator.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/README.md#2025-04-18_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Implementation for SurveyJS PDF Export\nDESCRIPTION: Full HTML code example that includes all required resources and sets up a container for the survey. This includes jQuery, jsPDF library, SurveyJS library with default V2 theme, and the SurveyJS PDF Generator library.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-jquery.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Export Survey to PDF - SurveyJS for jQuery</title>\n    <meta charset=\"utf-8\">\n    <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n\n    <!-- jsPDF library -->\n    <script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.umd.min.js\"></script>\n\n    <link href=\"https://unpkg.com/survey-jquery/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-jquery/survey.jquery.min.js\"></script>\n\n    <!-- SurveyJS PDF Generator library -->\n    <script src=\"https://unpkg.com/survey-pdf/survey.pdf.min.js\"></script>\n    \n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyContainer\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Running SurveyJS PDF Generator Unit Tests\nDESCRIPTION: Command to execute the unit tests for the SurveyJS PDF Generator library, validating its functionality.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/README.md#2025-04-18_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing survey-pdf Package in Node.js\nDESCRIPTION: This snippet shows how to install the survey-pdf npm package, which is required for generating PDF forms with SurveyJS in a Node.js environment.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/get-started-nodejs.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install survey-pdf --save\n```\n\n----------------------------------------\n\nTITLE: Cloning the SurveyJS PDF Generator Repository\nDESCRIPTION: Commands to clone the SurveyJS PDF Generator repository and navigate to the project directory.\nSOURCE: https://github.com/surveyjs/survey-pdf/blob/master/docs/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/surveyjs/survey-pdf.git\ncd survey-pdf\n```"
  }
]
[
  {
    "owner": "rango-ramesh",
    "repo": "advanced-chunker",
    "content": "TITLE: Basic Usage of SemanticChunker in Python\nDESCRIPTION: A complete example demonstrating how to initialize the SemanticChunker, process a list of text chunks, and view the resulting merged chunks that are semantically related.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom semantic_chunker.core import SemanticChunker\n\nchunks = [\n    {\"text\": \"Artificial intelligence is a growing field.\"},\n    {\"text\": \"Machine learning is a subset of AI.\"},\n    {\"text\": \"Photosynthesis occurs in plants.\"},\n    {\"text\": \"Deep learning uses neural networks.\"},\n    {\"text\": \"Plants convert sunlight into energy.\"},\n]\n\nchunker = SemanticChunker(max_tokens=512)\nmerged_chunks = chunker.chunk(chunks)\n\nfor i, merged in enumerate(merged_chunks):\n    print(f\"Chunk {i}:\")\n    print(merged[\"text\"])\n    print()\n```\n\n----------------------------------------\n\nTITLE: Integrating with LangChain using SemanticChunkerSplitter\nDESCRIPTION: Example of how to integrate Semantic Chunker with LangChain by using the SemanticChunkerSplitter class as a replacement for standard document splitters.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom langchain_core.documents import Document\nfrom semantic_chunker.integrations.langchain import SemanticChunkerSplitter\n\nsplitter = SemanticChunkerSplitter(cluster_threshold=0.4, return_merged=True)\n\ndocs = [Document(page_content=\"Some long technical text here\", metadata={\"source\": \"report.pdf\"})]\nsplit = splitter.split_documents(docs)\n```\n\n----------------------------------------\n\nTITLE: Using Semantic Chunker CLI for Text Processing\nDESCRIPTION: Command-line interface example showing how to process chunks from a JSON file, apply semantic chunking with specific thresholds, and export the results with visualization options.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchunker chunk \\\n  --chunks path/to/chunks.json \\\n  --threshold 0.5 \\\n  --similarity-threshold 0.4 \\\n  --max-tokens 512 \\\n  --preview \\\n  --visualize \\\n  --export \\\n  --export-path output/merged \\\n  --export-format json\n```\n\n----------------------------------------\n\nTITLE: Debugging and Visualization with SemanticChunker\nDESCRIPTION: Example showing how to use the visualization tools to debug and analyze the chunking process, including generating attention matrices, semantic graphs, and cluster previews.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom semantic_chunker.visualization import plot_attention_matrix, plot_semantic_graph, preview_clusters\n\nchunker = SemanticChunker(max_tokens=512)\ndebug = chunker.get_debug_info(chunks)\n\npreview_clusters(debug[\"original_chunks\"], debug[\"clusters\"])\nplot_attention_matrix(debug[\"similarity_matrix\"], debug[\"clusters\"])\nplot_semantic_graph(debug[\"original_chunks\"], debug[\"semantic_pairs\"], debug[\"clusters\"])\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Semantic Chunker\nDESCRIPTION: Command to run the test suite using pytest to verify the package is functioning correctly.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npytest tests/\n```\n\n----------------------------------------\n\nTITLE: Architecture Overview of Semantic Chunker\nDESCRIPTION: A text-based diagram showing the processing flow of Semantic Chunker, from input chunks through embeddings, similarity calculation, clustering, and finally to visualization and export.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nChunks → Embeddings → Cosine Similarity → Clustering → Merging\n                               ↓\n                         Semantic Pairs (Optional)\n                               ↓\n                     Visualization & Export (Optional)\n```\n\n----------------------------------------\n\nTITLE: Installing Semantic Chunker with pip\nDESCRIPTION: Command to install the advanced-chunker package via pip package manager.\nSOURCE: https://github.com/rango-ramesh/advanced-chunker/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install advanced-chunker\n```"
  }
]
[
  {
    "owner": "sagernet",
    "repo": "sing-box",
    "content": "TITLE: Initializing JSON Configuration Structure for sing-box\nDESCRIPTION: Defines the basic structure of a sing-box configuration file with main components including log, dns, ntp, certificate, endpoints, inbounds, outbounds, route, and experimental settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"log\": {},\n  \"dns\": {},\n  \"ntp\": {},\n  \"certificate\": {},\n  \"endpoints\": [],\n  \"inbounds\": [],\n  \"outbounds\": [],\n  \"route\": {},\n  \"experimental\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DNS Configuration Structure in JSON for sing-box\nDESCRIPTION: JSON schema defining the structure of DNS configuration in sing-box. It includes fields for servers, rules, final server selection, strategy, caching options, reverse mapping, client subnet, and FakeIP configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [],\n    \"rules\": [],\n    \"final\": \"\",\n    \"strategy\": \"\",\n    \"disable_cache\": false,\n    \"disable_expire\": false,\n    \"independent_cache\": false,\n    \"cache_capacity\": 0,\n    \"reverse_mapping\": false,\n    \"client_subnet\": \"\",\n    \"fakeip\": {}\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Merging sing-box Configurations\nDESCRIPTION: Command to merge multiple sing-box configuration files into a single output file, combining config.json and configurations from a specified directory.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/index.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsing-box merge output.json -c config.json -D config_directory\n```\n\n----------------------------------------\n\nTITLE: Defining Rule Structure in JSON for sing-box\nDESCRIPTION: JSON structure for defining rules in sing-box. It includes various matching criteria such as query type, network, domain, IP CIDR, ports, process information, and network characteristics. The structure also supports logical operators for combining rules.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/headless-rule.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rules\": [\n    {\n      \"query_type\": [\n        \"A\",\n        \"HTTPS\",\n        32768\n      ],\n      \"network\": [\n        \"tcp\"\n      ],\n      \"domain\": [\n        \"test.com\"\n      ],\n      \"domain_suffix\": [\n        \".cn\"\n      ],\n      \"domain_keyword\": [\n        \"test\"\n      ],\n      \"domain_regex\": [\n        \"^stun\\\\..+\"\n      ],\n      \"source_ip_cidr\": [\n        \"10.0.0.0/24\",\n        \"192.168.0.1\"\n      ],\n      \"ip_cidr\": [\n        \"10.0.0.0/24\",\n        \"192.168.0.1\"\n      ],\n      \"source_port\": [\n        12345\n      ],\n      \"source_port_range\": [\n        \"1000:2000\",\n        \":3000\",\n        \"4000:\"\n      ],\n      \"port\": [\n        80,\n        443\n      ],\n      \"port_range\": [\n        \"1000:2000\",\n        \":3000\",\n        \"4000:\"\n      ],\n      \"process_name\": [\n        \"curl\"\n      ],\n      \"process_path\": [\n        \"/usr/bin/curl\"\n      ],\n      \"process_path_regex\": [\n        \"^/usr/bin/.+\"\n      ],\n      \"package_name\": [\n        \"com.termux\"\n      ],\n      \"network_type\": [\n        \"wifi\"\n      ],\n      \"network_is_expensive\": false,\n      \"network_is_constrained\": false,\n      \"wifi_ssid\": [\n        \"My WIFI\"\n      ],\n      \"wifi_bssid\": [\n        \"00:00:00:00:00:00\"\n      ],\n      \"invert\": false\n    },\n    {\n      \"type\": \"logical\",\n      \"mode\": \"and\",\n      \"rules\": [],\n      \"invert\": false\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Route Structure in sing-box JSON\nDESCRIPTION: JSON schema showing the complete route configuration structure for sing-box, including rules, rule sets, network settings, and domain resolution options. Some fields are platform-specific and only work on Linux, Windows, macOS or Android.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [],\n    \"rule_set\": [],\n    \"final\": \"\",\n    \"auto_detect_interface\": false,\n    \"override_android_vpn\": false,\n    \"default_interface\": \"\",\n    \"default_mark\": 0,\n    \"default_domain_resolver\": \"\", // or {}\n    \"default_network_strategy\": \"\",\n    \"default_network_type\": [],\n    \"default_fallback_network_type\": [],\n    \"default_fallback_delay\": \"\",\n    \n    // Removed\n\n    \"geoip\": {},\n    \"geosite\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic TUN Usage with FakeIP in sing-box\nDESCRIPTION: This JSON configuration sets up a basic TUN interface with FakeIP support in sing-box. It includes DNS settings with FakeIP configuration, inbound TUN configuration for both IPv4 and IPv6, outbound rules, and routing rules for transparent proxying.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"223.5.5.5\",\n        \"detour\": \"direct\"\n      },\n      {\n        \"tag\": \"remote\",\n        \"address\": \"fakeip\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      },\n      {\n        \"query_type\": [\n          \"A\",\n          \"AAAA\"\n        ],\n        \"server\": \"remote\"\n      }\n    ],\n    \"fakeip\": {\n      \"enabled\": true,\n      \"inet4_range\": \"198.18.0.0/15\",\n      \"inet6_range\": \"fc00::/18\"\n    },\n    \"independent_cache\": true\n  },\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"inet4_address\": \"172.19.0.1/30\",\n      \"inet6_address\": \"fdfe:dcba:9876::1/126\",\n      \"auto_route\": true,\n      \"strict_route\": true\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"type\": \"direct\",\n      \"tag\": \"direct\"\n    },\n    {\n      \"type\": \"dns\",\n      \"tag\": \"dns-out\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"protocol\": \"dns\",\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"geoip\": [\n          \"private\"\n        ],\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"auto_detect_interface\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DNS Rules Structure in sing-box Configuration\nDESCRIPTION: This code snippet shows the complete structure of the DNS rules configuration for sing-box, including all available fields for matching conditions such as domains, IPs, ports, and network properties.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"rules\": [\n      {\n        \"inbound\": [\n          \"mixed-in\"\n        ],\n        \"ip_version\": 6,\n        \"query_type\": [\n          \"A\",\n          \"HTTPS\",\n          32768\n        ],\n        \"network\": \"tcp\",\n        \"auth_user\": [\n          \"usera\",\n          \"userb\"\n        ],\n        \"protocol\": [\n          \"tls\",\n          \"http\",\n          \"quic\"\n        ],\n        \"domain\": [\n          \"test.com\"\n        ],\n        \"domain_suffix\": [\n          \".cn\"\n        ],\n        \"domain_keyword\": [\n          \"test\"\n        ],\n        \"domain_regex\": [\n          \"^stun\\\\..+\"\n        ],\n        \"source_ip_cidr\": [\n          \"10.0.0.0/24\",\n          \"192.168.0.1\"\n        ],\n        \"source_ip_is_private\": false,\n        \"ip_cidr\": [\n          \"10.0.0.0/24\",\n          \"192.168.0.1\"\n        ],\n        \"ip_is_private\": false,\n        \"ip_accept_any\": false,\n        \"source_port\": [\n          12345\n        ],\n        \"source_port_range\": [\n          \"1000:2000\",\n          \":3000\",\n          \"4000:\"\n        ],\n        \"port\": [\n          80,\n          443\n        ],\n        \"port_range\": [\n          \"1000:2000\",\n          \":3000\",\n          \"4000:\"\n        ],\n        \"process_name\": [\n          \"curl\"\n        ],\n        \"process_path\": [\n          \"/usr/bin/curl\"\n        ],\n        \"process_path_regex\": [\n          \"^/usr/bin/.+\"\n        ],\n        \"package_name\": [\n          \"com.termux\"\n        ],\n        \"user\": [\n          \"sekai\"\n        ],\n        \"user_id\": [\n          1000\n        ],\n        \"clash_mode\": \"direct\",\n        \"network_type\": [\n          \"wifi\"\n        ],\n        \"network_is_expensive\": false,\n        \"network_is_constrained\": false,\n        \"wifi_ssid\": [\n          \"My WIFI\"\n        ],\n        \"wifi_bssid\": [\n          \"00:00:00:00:00:00\"\n        ],\n        \"rule_set\": [\n          \"geoip-cn\",\n          \"geosite-cn\"\n        ],\n        \"rule_set_ip_cidr_match_source\": false,\n        \"rule_set_ip_cidr_accept_empty\": false,\n        \"invert\": false,\n        \"outbound\": [\n          \"direct\"\n        ],\n        \"action\": \"route\",\n        \"server\": \"local\",\n\n        // Deprecated\n        \n        \"rule_set_ipcidr_match_source\": false,\n        \"geosite\": [\n          \"cn\"\n        ],\n        \"source_geoip\": [\n          \"private\"\n        ],\n        \"geoip\": [\n          \"cn\"\n        ]\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [],\n        \"action\": \"route\",\n        \"server\": \"local\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Experimental Configuration Structure in JSON for sing-box\nDESCRIPTION: This JSON structure outlines the experimental configuration options for sing-box. It includes fields for cache_file, clash_api, and v2ray_api, each represented as nested objects.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimental\": {\n    \"cache_file\": {},\n    \"clash_api\": {},\n    \"v2ray_api\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic TUN Usage for IPv4 in sing-box\nDESCRIPTION: This JSON configuration sets up a basic TUN interface for IPv4 traffic in sing-box. It includes DNS settings, inbound TUN configuration, outbound rules, and routing rules for transparent proxying.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"223.5.5.5\",\n        \"detour\": \"direct\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      }\n    ],\n    \"strategy\": \"ipv4_only\"\n  },\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"inet4_address\": \"172.19.0.1/30\",\n      \"auto_route\": true,\n      \"strict_route\": false\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"type\": \"direct\",\n      \"tag\": \"direct\"\n    },\n    {\n      \"type\": \"dns\",\n      \"tag\": \"dns-out\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"protocol\": \"dns\",\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"geoip\": [\n          \"private\"\n        ],\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"auto_detect_interface\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Secure Enhanced DNS Rules Configuration\nDESCRIPTION: Enhanced DNS configuration without DNS leaks, using client subnet specification and additional security measures.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"https://223.5.5.5/dns-query\",\n        \"detour\": \"direct\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Direct\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Global\",\n        \"server\": \"google\"\n      },\n      {\n        \"rule_set\": \"geosite-geolocation-cn\",\n        \"server\": \"local\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          {\n            \"rule_set\": \"geosite-geolocation-!cn\",\n            \"invert\": true\n          },\n          {\n            \"rule_set\": \"geoip-cn\"\n          }\n        ],\n        \"server\": \"google\",\n        \"client_subnet\": \"114.114.114.114/24\"\n      }\n    ]\n  },\n  \"route\": {\n    \"rule_set\": [\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-cn.srs\"\n      },\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-!cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-!cn.srs\"\n      },\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geoip-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"store_rdrc\": true\n    },\n    \"clash_api\": {\n      \"default_mode\": \"Enhanced\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Inbound Structure in JSON for sing-box\nDESCRIPTION: This JSON snippet demonstrates the basic structure for configuring inbounds in sing-box. It shows an array of inbound objects, each containing a 'type' and 'tag' field.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"\",\n      \"tag\": \"\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic TUN Usage for IPv4 & IPv6 in sing-box\nDESCRIPTION: This JSON configuration sets up a basic TUN interface for both IPv4 and IPv6 traffic in sing-box. It includes DNS settings, inbound TUN configuration with IPv6 support, outbound rules, and routing rules for transparent proxying.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"223.5.5.5\",\n        \"detour\": \"direct\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      }\n    ]\n  },\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"inet4_address\": \"172.19.0.1/30\",\n      \"inet6_address\": \"fdfe:dcba:9876::1/126\",\n      \"auto_route\": true,\n      \"strict_route\": false\n    }\n  ],\n  \"outbounds\": [\n    {\n      \"type\": \"direct\",\n      \"tag\": \"direct\"\n    },\n    {\n      \"type\": \"dns\",\n      \"tag\": \"dns-out\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"protocol\": \"dns\",\n        \"outbound\": \"dns-out\"\n      },\n      {\n        \"geoip\": [\n          \"private\"\n        ],\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"auto_detect_interface\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tun Inbound in sing-box (JSON)\nDESCRIPTION: JSON schema for configuring the Tun inbound in sing-box. Includes options for interface name, IP addresses, routing, and platform-specific settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tun\",\n  \"tag\": \"tun-in\",\n  \"interface_name\": \"tun0\",\n  \"address\": [\n    \"172.18.0.1/30\",\n    \"fdfe:dcba:9876::1/126\"\n  ],\n  \"mtu\": 9000,\n  \"auto_route\": true,\n  \"iproute2_table_index\": 2022,\n  \"iproute2_rule_index\": 9000,\n  \"auto_redirect\": false,\n  \"auto_redirect_input_mark\": \"0x2023\",\n  \"auto_redirect_output_mark\": \"0x2024\",\n  \"strict_route\": true,\n  \"route_address\": [\n    \"0.0.0.0/1\",\n    \"128.0.0.0/1\",\n    \"::/1\",\n    \"8000::/1\"\n  ],\n  \"route_exclude_address\": [\n    \"192.168.0.0/16\",\n    \"fc00::/7\"\n  ],\n  \"route_address_set\": [\n    \"geoip-cloudflare\"\n  ],\n  \"route_exclude_address_set\": [\n    \"geoip-cn\"\n  ],\n  \"endpoint_independent_nat\": false,\n  \"udp_timeout\": \"5m\",\n  \"stack\": \"system\",\n  \"include_interface\": [\n    \"lan0\"\n  ],\n  \"exclude_interface\": [\n    \"lan1\"\n  ],\n  \"include_uid\": [\n    0\n  ],\n  \"include_uid_range\": [\n    \"1000:99999\"\n  ],\n  \"exclude_uid\": [\n    1000\n  ],\n  \"exclude_uid_range\": [\n    \"1000:99999\"\n  ],\n  \"include_android_user\": [\n    0,\n    10\n  ],\n  \"include_package\": [\n    \"com.android.chrome\"\n  ],\n  \"exclude_package\": [\n    \"com.android.captiveportallogin\"\n  ],\n  \"platform\": {\n    \"http_proxy\": {\n      \"enabled\": false,\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"bypass_domain\": [],\n      \"match_domain\": []\n    }\n  },\n  \"gso\": false,\n  \"inet4_address\": [\n    \"172.19.0.1/30\"\n  ],\n  \"inet6_address\": [\n    \"fdfe:dcba:9876::1/126\"\n  ],\n  \"inet4_route_address\": [\n    \"0.0.0.0/1\",\n    \"128.0.0.0/1\"\n  ],\n  \"inet6_route_address\": [\n    \"::/1\",\n    \"8000::/1\"\n  ],\n  \"inet4_route_exclude_address\": [\n    \"192.168.0.0/16\"\n  ],\n  \"inet6_route_exclude_address\": [\n    \"fc00::/7\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Shadowsocks Structure in JSON\nDESCRIPTION: JSON configuration structure for Shadowsocks outbound connection in sing-box. Includes server settings, encryption method, password, plugin options, and network configurations. Supports various encryption methods and optional features like UDP over TCP and multiplexing.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/shadowsocks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"shadowsocks\",\n  \"tag\": \"ss-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"method\": \"2022-blake3-aes-128-gcm\",\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"plugin\": \"\",\n  \"plugin_opts\": \"\",\n  \"network\": \"udp\",\n  \"udp_over_tcp\": false | {},\n  \"multiplex\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DNS Server Configuration Structure in JSON\nDESCRIPTION: The basic JSON structure for configuring DNS servers in sing-box. The configuration includes a 'dns' object containing a 'servers' array where each server is defined with a type and tag.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"\",\n        \"tag\": \"\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Inbound TLS Settings in sing-box\nDESCRIPTION: JSON configuration for inbound TLS settings in sing-box, including options for ECH, ACME, and Reality. This snippet covers certificate configuration, ACME settings, and Reality handshake options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/tls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"server_name\": \"\",\n  \"alpn\": [],\n  \"min_version\": \"\",\n  \"max_version\": \"\",\n  \"cipher_suites\": [],\n  \"certificate\": [],\n  \"certificate_path\": \"\",\n  \"key\": [],\n  \"key_path\": \"\",\n  \"acme\": {\n    \"domain\": [],\n    \"data_directory\": \"\",\n    \"default_server_name\": \"\",\n    \"email\": \"\",\n    \"provider\": \"\",\n    \"disable_http_challenge\": false,\n    \"disable_tls_alpn_challenge\": false,\n    \"alternative_http_port\": 0,\n    \"alternative_tls_port\": 0,\n    \"external_account\": {\n      \"key_id\": \"\",\n      \"mac_key\": \"\"\n    },\n    \"dns01_challenge\": {}\n  },\n  \"ech\": {\n    \"enabled\": false,\n    \"key\": [],\n    \"key_path\": \"\",\n\n    // Deprecated\n    \n    \"pq_signature_schemes_enabled\": false,\n    \"dynamic_record_sizing_disabled\": false\n  },\n  \"reality\": {\n    \"enabled\": false,\n    \"handshake\": {\n      \"server\": \"google.com\",\n      \"server_port\": 443,\n\n      ... // Dial Fields\n    },\n    \"private_key\": \"UuMBgl7MXTPx9inmQp2UC7Jcnwc6XYbwDNebonM-FCc\",\n    \"short_id\": [\n      \"0123456789abcdef\"\n    ],\n    \"max_time_difference\": \"1m\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining sing-box Outbound Configuration Structure\nDESCRIPTION: JSON structure showing all available configuration fields for sing-box outbound settings. Includes networking parameters, DNS settings, and routing options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/dial.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"detour\": \"\",\n  \"bind_interface\": \"\",\n  \"inet4_bind_address\": \"\",\n  \"inet6_bind_address\": \"\",\n  \"routing_mark\": 0,\n  \"reuse_addr\": false,\n  \"connect_timeout\": \"\",\n  \"tcp_fast_open\": false,\n  \"tcp_multi_path\": false,\n  \"udp_fragment\": false,\n  \"netns\": \"\",\n  \"domain_resolver\": \"\",\n  \"network_strategy\": \"\",\n  \"network_type\": [],\n  \"fallback_network_type\": [],\n  \"fallback_delay\": \"\",\n\n  \"domain_strategy\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Mixed Inbound Server in JSON\nDESCRIPTION: JSON configuration structure for a mixed inbound that provides socks4, socks4a, socks5, and http proxy functionality. The configuration supports user authentication and system proxy integration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/mixed.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"mixed\",\n  \"tag\": \"mixed-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"username\": \"admin\",\n      \"password\": \"admin\"\n    }\n  ],\n  \"set_system_proxy\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Endpoints Structure in JSON\nDESCRIPTION: Defines the base JSON structure for configuring endpoints in sing-box. Endpoints are protocols that have both inbound and outbound behavior, with support for WireGuard and Tailscale types.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/endpoint/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"endpoints\": [\n    {\n      \"type\": \"\",\n      \"tag\": \"\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating GeoIP to Rule-sets in sing-box 1.8.0\nDESCRIPTION: Example configuration demonstrating the migration from GeoIP to the new rule-sets system in sing-box 1.8.0. This change improves flexibility and management of geographical IP rules.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"geoip\": \"private\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"geoip\": \"cn\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"source_geoip\": \"cn\",\n        \"outbound\": \"block\"\n      }\n    ],\n    \"geoip\": {\n      \"download_detour\": \"proxy\"\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"ip_is_private\": true,\n        \"outbound\": \"direct\"\n      },\n      {\n        \"rule_set\": \"geoip-cn\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"rule_set\": \"geoip-us\",\n        \"rule_set_ipcidr_match_source\": true,\n        \"outbound\": \"block\"\n      }\n    ],\n    \"rule_set\": [\n      {\n        \"tag\": \"geoip-cn\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs\",\n        \"download_detour\": \"proxy\"\n      },\n      {\n        \"tag\": \"geoip-us\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-us.srs\",\n        \"download_detour\": \"proxy\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true // required to save rule-set cache\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Routing Rules Structure in JSON for sing-box\nDESCRIPTION: This JSON structure defines the schema for configuring routing rules in sing-box. It includes various matching criteria such as inbound, IP version, network type, domains, and more.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"inbound\": [\n          \"mixed-in\"\n        ],\n        \"ip_version\": 6,\n        \"network\": [\n          \"tcp\"\n        ],\n        \"auth_user\": [\n          \"usera\",\n          \"userb\"\n        ],\n        \"protocol\": [\n          \"tls\",\n          \"http\",\n          \"quic\"\n        ],\n        \"client\": [\n          \"chromium\",\n          \"safari\",\n          \"firefox\",\n          \"quic-go\"\n        ],\n        \"domain\": [\n          \"test.com\"\n        ],\n        \"domain_suffix\": [\n          \".cn\"\n        ],\n        \"domain_keyword\": [\n          \"test\"\n        ],\n        \"domain_regex\": [\n          \"^stun\\\\..+\"\n        ],\n        \"geosite\": [\n          \"cn\"\n        ],\n        \"source_geoip\": [\n          \"private\"\n        ],\n        \"geoip\": [\n          \"cn\"\n        ],\n        \"source_ip_cidr\": [\n          \"10.0.0.0/24\",\n          \"192.168.0.1\"\n        ],\n        \"source_ip_is_private\": false,\n        \"ip_cidr\": [\n          \"10.0.0.0/24\",\n          \"192.168.0.1\"\n        ],\n        \"ip_is_private\": false,\n        \"source_port\": [\n          12345\n        ],\n        \"source_port_range\": [\n          \"1000:2000\",\n          \":3000\",\n          \"4000:\"\n        ],\n        \"port\": [\n          80,\n          443\n        ],\n        \"port_range\": [\n          \"1000:2000\",\n          \":3000\",\n          \"4000:\"\n        ],\n        \"process_name\": [\n          \"curl\"\n        ],\n        \"process_path\": [\n          \"/usr/bin/curl\"\n        ],\n        \"process_path_regex\": [\n          \"^/usr/bin/.+\"\n        ],\n        \"package_name\": [\n          \"com.termux\"\n        ],\n        \"user\": [\n          \"sekai\"\n        ],\n        \"user_id\": [\n          1000\n        ],\n        \"clash_mode\": \"direct\",\n        \"network_type\": [\n          \"wifi\"\n        ],\n        \"network_is_expensive\": false,\n        \"network_is_constrained\": false,\n        \"wifi_ssid\": [\n          \"My WIFI\"\n        ],\n        \"wifi_bssid\": [\n          \"00:00:00:00:00:00\"\n        ],\n        \"rule_set\": [\n          \"geoip-cn\",\n          \"geosite-cn\"\n        ],\n        \"rule_set_ipcidr_match_source\": false,\n        \"rule_set_ip_cidr_match_source\": false,\n        \"invert\": false,\n        \"action\": \"route\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [],\n        \"invert\": false,\n        \"action\": \"route\",\n        \"outbound\": \"direct\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sing-box Inbound Configuration Structure\nDESCRIPTION: JSON structure defining the configuration options for sing-box inbound connections. Includes networking parameters, protocol settings, and connection behavior options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/listen.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"listen\": \"\",\n  \"listen_port\": 0,\n  \"tcp_fast_open\": false,\n  \"tcp_multi_path\": false,\n  \"udp_fragment\": false,\n  \"udp_timeout\": \"\",\n  \"netns\": \"\",\n  \"detour\": \"\",\n  \"sniff\": false,\n  \"sniff_override_destination\": false,\n  \"sniff_timeout\": \"\",\n  \"domain_strategy\": \"\",\n  \"udp_disable_domain_unmapping\": false\n}\n```\n\n----------------------------------------\n\nTITLE: WireGuard Outbound Configuration Structure in JSON\nDESCRIPTION: Complete JSON configuration structure for WireGuard outbound connections including all available fields and their default values. Shows the structure for both single-peer and multi-peer configurations.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/wireguard.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"wireguard\",\n  \"tag\": \"wireguard-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"system_interface\": false,\n  \"interface_name\": \"wg0\",\n  \"local_address\": [\n    \"10.0.0.1/32\"\n  ],\n  \"private_key\": \"YNXtAzepDqRv9H52osJVDQnznT5AM11eCK3ESpwSt04=\",\n  \"peers\": [\n    {\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 1080,\n      \"public_key\": \"Z1XXLsKYkYxuiYjJIkRvtIKFepCYHTgON+GwPq7SOV4=\",\n      \"pre_shared_key\": \"31aIhAPwktDGpH4JDhA8GNvjFXEf/a6+UaQRyOAiyfM=\",\n      \"allowed_ips\": [\n        \"0.0.0.0/0\"\n      ],\n      \"reserved\": [0, 0, 0]\n    }\n  ],\n  \"peer_public_key\": \"Z1XXLsKYkYxuiYjJIkRvtIKFepCYHTgON+GwPq7SOV4=\",\n  \"pre_shared_key\": \"31aIhAPwktDGpH4JDhA8GNvjFXEf/a6+UaQRyOAiyfM=\",\n  \"reserved\": [0, 0, 0],\n  \"workers\": 4,\n  \"mtu\": 1408,\n  \"network\": \"tcp\",\n\n  \"gso\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring NTP Client in sing-box JSON Configuration\nDESCRIPTION: This snippet shows the JSON structure for configuring the built-in NTP client service in sing-box. It includes options for enabling the service, specifying the NTP server, port, and synchronization interval, along with additional Dial Fields for connection configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/ntp/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ntp\": {\n    \"enabled\": false,\n    \"server\": \"time.apple.com\",\n    \"server_port\": 123,\n    \"interval\": \"30m\",\n    \n    ... // Dial Fields\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting UDP NAT timeout in YAML\nDESCRIPTION: Configures the UDP NAT expiration time. If not set, the default value is 5 minutes.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nudp_timeout: 5m\n```\n\n----------------------------------------\n\nTITLE: Basic DNS Rules Configuration for Sing-box\nDESCRIPTION: Basic DNS configuration that sets up Google DNS and local Chinese DNS servers with rules for handling different traffic modes and Chinese geolocation.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"223.5.5.5\",\n        \"detour\": \"direct\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Direct\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Global\",\n        \"server\": \"google\"\n      },\n      {\n        \"rule_set\": \"geosite-geolocation-cn\",\n        \"server\": \"local\"\n      }\n    ]\n  },\n  \"route\": {\n    \"rule_set\": [\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-cn.srs\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring VLESS Outbound Configuration in JSON\nDESCRIPTION: This JSON structure outlines the configuration for a VLESS outbound connection in sing-box. It includes essential fields such as server details, UUID, and optional configurations for TLS, packet encoding, and transport.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/vless.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"vless\",\n  \"tag\": \"vless-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"uuid\": \"bf000d23-0752-40b4-affe-68f7707a9661\",\n  \"flow\": \"xtls-rprx-vision\",\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \"packet_encoding\": \"\",\n  \"multiplex\": {},\n  \"transport\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Clash API Configuration Structure in JSON\nDESCRIPTION: JSON structure defining the configuration options for the Clash API in sing-box. It includes fields for external controller, UI settings, access control, and deprecated options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/clash-api.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"external_controller\": \"127.0.0.1:9090\",\n  \"external_ui\": \"\",\n  \"external_ui_download_url\": \"\",\n  \"external_ui_download_detour\": \"\",\n  \"secret\": \"\",\n  \"default_mode\": \"\",\n  \"access_control_allow_origin\": [],\n  \"access_control_allow_private_network\": false,\n  \n  // Deprecated\n  \n  \"store_mode\": false,\n  \"store_selected\": false,\n  \"store_fakeip\": false,\n  \"cache_file\": \"\",\n  \"cache_id\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Structure in sing-box JSON\nDESCRIPTION: JSON structure for configuring certificates in sing-box. Defines the certificate store type, individual certificates, certificate paths, and directory paths. Supports system certificates, Mozilla certificates, or custom certificate management.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/certificate/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"store\": \"\",\n  \"certificate\": [],\n  \"certificate_path\": [],\n  \"certificate_directory_path\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Outbound Structure in JSON for Sing-Box\nDESCRIPTION: This JSON snippet demonstrates the structure for configuring outbound connections in Sing-Box. It includes an array of outbound objects, each with a type and tag field.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"\",\n      \"tag\": \"\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TUIC Server in sing-box\nDESCRIPTION: JSON structure for configuring a TUIC (TLS over QUIC) server in sing-box. The configuration includes essential fields for server identification, user authentication, connection parameters, and TLS settings. It handles user credentials, QUIC congestion control, authentication timeouts, and connection maintenance.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tuic.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tuic\",\n  \"tag\": \"tuic-in\",\n  \n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"uuid\": \"059032A9-7D40-4A96-9BB1-36823D848068\",\n      \"password\": \"hello\"\n    }\n  ],\n  \"congestion_control\": \"cubic\",\n  \"auth_timeout\": \"3s\",\n  \"zero_rtt_handshake\": false,\n  \"heartbeat\": \"10s\",\n  \"tls\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Settings in sing-box JSON\nDESCRIPTION: JSON structure for configuring cache settings in sing-box. Includes options for enabling cache, specifying file path, cache identification, fakeip storage, and DNS response caching with timeout settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/cache-file.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"path\": \"\",\n  \"cache_id\": \"\",\n  \"store_fakeip\": false,\n  \"store_rdrc\": false,\n  \"rdrc_timeout\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Enhanced DNS Rules with DNS Leaks Configuration\nDESCRIPTION: Enhanced DNS configuration with potential DNS leaks, including additional rule sets for non-Chinese geolocation and IP addresses.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"google\",\n        \"address\": \"tls://8.8.8.8\"\n      },\n      {\n        \"tag\": \"local\",\n        \"address\": \"https://223.5.5.5/dns-query\",\n        \"detour\": \"direct\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Direct\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Global\",\n        \"server\": \"google\"\n      },\n      {\n        \"rule_set\": \"geosite-geolocation-cn\",\n        \"server\": \"local\"\n      },\n      {\n        \"clash_mode\": \"Default\",\n        \"server\": \"google\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"and\",\n        \"rules\": [\n          {\n            \"rule_set\": \"geosite-geolocation-!cn\",\n            \"invert\": true\n          },\n          {\n            \"rule_set\": \"geoip-cn\"\n          }\n        ],\n        \"server\": \"local\"\n      }\n    ]\n  },\n  \"route\": {\n    \"rule_set\": [\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-cn.srs\"\n      },\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-!cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-!cn.srs\"\n      },\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geoip-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"store_rdrc\": true\n    },\n    \"clash_api\": {\n      \"default_mode\": \"Enhanced\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Trojan Outbound Structure in JSON for sing-box\nDESCRIPTION: This JSON structure outlines the configuration for a Trojan outbound connection. It includes essential fields such as server address, port, password, and network type, as well as optional configurations for TLS, multiplexing, and transport.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/trojan.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"trojan\",\n  \"tag\": \"trojan-out\",\n\n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \"multiplex\": {},\n  \"transport\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring UDP DNS Server in sing-box 1.12.0+\nDESCRIPTION: JSON structure for configuring a UDP DNS server in sing-box. This includes the required server address, optional server port (defaults to 53), and supports additional dial fields. Note that domain names require domain_resolver to be set.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/udp.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"udp\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 53,\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Trojan Inbound Server in JSON\nDESCRIPTION: A sample JSON configuration for a Trojan inbound server, showing essential fields like user authentication, TLS configuration, and fallback behavior. This structure defines how the Trojan server will accept and handle incoming connections.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/trojan.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"trojan\",\n  \"tag\": \"trojan-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"password\": \"8JCsPssfgS8tiRwiMlhARg==\"\n    }\n  ],\n  \"tls\": {},\n  \"fallback\": {\n    \"server\": \"127.0.0.1\",\n    \"server_port\": 8080\n  },\n  \"fallback_for_alpn\": {\n    \"http/1.1\": {\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8081\n    }\n  },\n  \"multiplex\": {},\n  \"transport\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TUN Interface JSON Structure in sing-box\nDESCRIPTION: Complete JSON structure for configuring a TUN interface in sing-box, including network addressing, routing options, platform-specific settings, and both current and deprecated fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tun\",\n  \"tag\": \"tun-in\",\n  \"interface_name\": \"tun0\",\n  \"address\": [\n    \"172.18.0.1/30\",\n    \"fdfe:dcba:9876::1/126\"\n  ],\n  \"mtu\": 9000,\n  \"auto_route\": true,\n  \"iproute2_table_index\": 2022,\n  \"iproute2_rule_index\": 9000,\n  \"auto_redirect\": false,\n  \"auto_redirect_input_mark\": \"0x2023\",\n  \"auto_redirect_output_mark\": \"0x2024\",\n  \"strict_route\": true,\n  \"route_address\": [\n    \"0.0.0.0/1\",\n    \"128.0.0.0/1\",\n    \"::/1\",\n    \"8000::/1\"\n  ],\n  \n  \"route_exclude_address\": [\n    \"192.168.0.0/16\",\n    \"fc00::/7\"\n  ],\n  \"route_address_set\": [\n    \"geoip-cloudflare\"\n  ],\n  \"route_exclude_address_set\": [\n    \"geoip-cn\"\n  ],\n  \"endpoint_independent_nat\": false,\n  \"udp_timeout\": \"5m\",\n  \"stack\": \"system\",\n  \"include_interface\": [\n    \"lan0\"\n  ],\n  \"exclude_interface\": [\n    \"lan1\"\n  ],\n  \"include_uid\": [\n    0\n  ],\n  \"include_uid_range\": [\n    \"1000:99999\"\n  ],\n  \"exclude_uid\": [\n    1000\n  ],\n  \"exclude_uid_range\": [\n    \"1000:99999\"\n  ],\n  \"include_android_user\": [\n    0,\n    10\n  ],\n  \"include_package\": [\n    \"com.android.chrome\"\n  ],\n  \"exclude_package\": [\n    \"com.android.captiveportallogin\"\n  ],\n  \"platform\": {\n    \"http_proxy\": {\n      \"enabled\": false,\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"bypass_domain\": [],\n      \"match_domain\": []\n    }\n  },\n\n  // Deprecated\n  \"gso\": false,\n  \"inet4_address\": [\n    \"172.19.0.1/30\"\n  ],\n  \"inet6_address\": [\n    \"fdfe:dcba:9876::1/126\"\n  ],\n  \"inet4_route_address\": [\n    \"0.0.0.0/1\",\n    \"128.0.0.0/1\"\n  ],\n  \"inet6_route_address\": [\n    \"::/1\",\n    \"8000::/1\"\n  ],\n  \"inet4_route_exclude_address\": [\n    \"192.168.0.0/16\"\n  ],\n  \"inet6_route_exclude_address\": [\n    \"fc00::/7\"\n  ],\n  \n  ... // Listen Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Local File Rule-set in sing-box JSON\nDESCRIPTION: JSON structure for configuring a local file rule-set in sing-box. This type allows loading rules from a local file in either source or binary format.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"local\",\n  \"tag\": \"\",\n  \"format\": \"source\", // or binary\n  \"path\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Outbound TLS Settings in sing-box JSON\nDESCRIPTION: This JSON snippet defines the outbound TLS configuration options for sing-box. It includes settings for standard TLS parameters, ECH (Encrypted Client Hello), uTLS for ClientHello fingerprinting resistance, and Reality for enhanced security.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/tls.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"disable_sni\": false,\n  \"server_name\": \"\",\n  \"insecure\": false,\n  \"alpn\": [],\n  \"min_version\": \"\",\n  \"max_version\": \"\",\n  \"cipher_suites\": [],\n  \"certificate\": [],\n  \"certificate_path\": \"\",\n  \"ech\": {\n    \"enabled\": false,\n    \"pq_signature_schemes_enabled\": false,\n    \"dynamic_record_sizing_disabled\": false,\n    \"config\": [],\n    \"config_path\": \"\"\n  },\n  \"utls\": {\n    \"enabled\": false,\n    \"fingerprint\": \"\"\n  },\n  \"reality\": {\n    \"enabled\": false,\n    \"public_key\": \"jNXHt1yRo0vDuchQlIP6Z0ZvjT3KtzVI-T4E7RoLJS0\",\n    \"short_id\": \"0123456789abcdef\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Inbound TLS Settings in sing-box JSON\nDESCRIPTION: This JSON snippet defines the inbound TLS configuration options for sing-box. It includes settings for standard TLS parameters, ACME for certificate management, ECH (Encrypted Client Hello), and Reality for enhanced security.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/tls.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"server_name\": \"\",\n  \"alpn\": [],\n  \"min_version\": \"\",\n  \"max_version\": \"\",\n  \"cipher_suites\": [],\n  \"certificate\": [],\n  \"certificate_path\": \"\",\n  \"key\": [],\n  \"key_path\": \"\",\n  \"acme\": {\n    \"domain\": [],\n    \"data_directory\": \"\",\n    \"default_server_name\": \"\",\n    \"email\": \"\",\n    \"provider\": \"\",\n    \"disable_http_challenge\": false,\n    \"disable_tls_alpn_challenge\": false,\n    \"alternative_http_port\": 0,\n    \"alternative_tls_port\": 0,\n    \"external_account\": {\n      \"key_id\": \"\",\n      \"mac_key\": \"\"\n    },\n    \"dns01_challenge\": {}\n  },\n  \"ech\": {\n    \"enabled\": false,\n    \"key\": [],\n    \"key_path\": \"\",\n\n    // 废弃的\n    \n    \"pq_signature_schemes_enabled\": false,\n    \"dynamic_record_sizing_disabled\": false\n  },\n  \"reality\": {\n    \"enabled\": false,\n    \"handshake\": {\n      \"server\": \"google.com\",\n      \"server_port\": 443,\n      \n      ... // 拨号字段\n    },\n    \"private_key\": \"UuMBgl7MXTPx9inmQp2UC7Jcnwc6XYbwDNebonM-FCc\",\n    \"short_id\": [\n      \"0123456789abcdef\"\n    ],\n    \"max_time_difference\": \"1m\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TUIC Outbound Configuration Structure in JSON\nDESCRIPTION: JSON schema showing the structure for configuring a TUIC outbound connection in sing-box. It includes server details, authentication parameters, connection options, and TLS settings. The configuration supports various QUIC congestion control algorithms and UDP relay modes.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/tuic.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tuic\",\n  \"tag\": \"tuic-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"uuid\": \"2DD61D93-75D8-4DA4-AC0E-6AECE7EAC365\",\n  \"password\": \"hello\",\n  \"congestion_control\": \"cubic\",\n  \"udp_relay_mode\": \"native\",\n  \"udp_over_stream\": false,\n  \"zero_rtt_handshake\": false,\n  \"heartbeat\": \"10s\",\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VMess Outbound Structure in JSON for sing-box\nDESCRIPTION: This JSON structure defines the configuration for a VMess outbound connection in sing-box. It includes essential fields like server address, port, UUID, and various optional parameters for security, network, and protocol settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/vmess.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"vmess\",\n  \"tag\": \"vmess-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"uuid\": \"bf000d23-0752-40b4-affe-68f7707a9661\",\n  \"security\": \"auto\",\n  \"alter_id\": 0,\n  \"global_padding\": false,\n  \"authenticated_length\": true,\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \"packet_encoding\": \"\",\n  \"transport\": {},\n  \"multiplex\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Inbound Server in sing-box with JSON\nDESCRIPTION: JSON structure for configuring an HTTP inbound server in sing-box. Includes type designation, tag for identification, user authentication options, TLS configuration, and system proxy settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/http.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"http\",\n  \"tag\": \"http-in\",\n  \n  ... // Listen Fields\n  \n  \"users\": [\n    {\n      \"username\": \"admin\",\n      \"password\": \"admin\"\n    }\n  ],\n  \"tls\": {},\n  \"set_system_proxy\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Selector Outbound Structure in JSON\nDESCRIPTION: JSON configuration structure for setting up a selector outbound that enables switching between multiple proxy outbounds. The selector requires Clash API for control and supports features like default outbound selection and connection interruption management.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/selector.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"selector\",\n  \"tag\": \"select\",\n  \n  \"outbounds\": [\n    \"proxy-a\",\n    \"proxy-b\",\n    \"proxy-c\"\n  ],\n  \"default\": \"proxy-c\",\n  \"interrupt_exist_connections\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Predefined Action in sing-box\nDESCRIPTION: The predefined action responds with custom-defined DNS records. It allows specifying response code and custom DNS records for answers, name servers, and extra records.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"predefined\",\n  \"rcode\": \"\",\n  \"answer\": [],\n  \"ns\": [],\n  \"extra\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hysteria Inbound Connection in JSON\nDESCRIPTION: JSON configuration structure for setting up a Hysteria inbound connection in sing-box. It includes bandwidth settings, obfuscation, user authentication, and QUIC connection parameters with TLS configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/hysteria.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"hysteria\",\n  \"tag\": \"hysteria-in\",\n  \n  ... // Listen Fields\n\n  \"up\": \"100 Mbps\",\n  \"up_mbps\": 100,\n  \"down\": \"100 Mbps\",\n  \"down_mbps\": 100,\n  \"obfs\": \"fuck me till the daylight\",\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"auth\": \"\",\n      \"auth_str\": \"password\"\n    }\n  ],\n  \n  \"recv_window_conn\": 0,\n  \"recv_window_client\": 0,\n  \"max_conn_client\": 0,\n  \"disable_mtu_discovery\": false,\n  \"tls\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Outbound Configuration Structure in JSON\nDESCRIPTION: JSON structure defining the configuration options for outbound connections in sing-box. Includes fields for network settings, DNS resolution, and connection parameters.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/dial.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"detour\": \"\",\n  \"bind_interface\": \"\",\n  \"inet4_bind_address\": \"\",\n  \"inet6_bind_address\": \"\",\n  \"routing_mark\": 0,\n  \"reuse_addr\": false,\n  \"connect_timeout\": \"\",\n  \"tcp_fast_open\": false,\n  \"tcp_multi_path\": false,\n  \"udp_fragment\": false,\n  \"netns\": \"\",\n  \"domain_resolver\": \"\", // 或 {}\n  \"network_strategy\": \"\",\n  \"network_type\": [],\n  \"fallback_network_type\": [],\n  \"fallback_delay\": \"\",\n  \n  // 废弃的\n\n  \"domain_strategy\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SOCKS Inbound in Sing-Box (JSON)\nDESCRIPTION: JSON configuration structure for setting up a SOCKS inbound server in sing-box. This defines a SOCKS server that supports versions 4, 4a, and 5, with optional user authentication. The configuration includes the inbound type, tag for identification, and user credentials for authentication.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/socks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"socks\",\n  \"tag\": \"socks-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"username\": \"admin\",\n      \"password\": \"admin\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Outbound TLS Settings in sing-box\nDESCRIPTION: JSON configuration for outbound TLS settings in sing-box. This snippet includes options for ECH, uTLS, and Reality, as well as general TLS settings like server name, insecure mode, and ALPN.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/tls.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"disable_sni\": false,\n  \"server_name\": \"\",\n  \"insecure\": false,\n  \"alpn\": [],\n  \"min_version\": \"\",\n  \"max_version\": \"\",\n  \"cipher_suites\": [],\n  \"certificate\": \"\",\n  \"certificate_path\": \"\",\n  \"ech\": {\n    \"enabled\": false,\n    \"config\": [],\n    \"config_path\": \"\",\n\n    // Deprecated\n    \"pq_signature_schemes_enabled\": false,\n    \"dynamic_record_sizing_disabled\": false\n  },\n  \"utls\": {\n    \"enabled\": false,\n    \"fingerprint\": \"\"\n  },\n  \"reality\": {\n    \"enabled\": false,\n    \"public_key\": \"jNXHt1yRo0vDuchQlIP6Z0ZvjT3KtzVI-T4E7RoLJS0\",\n    \"short_id\": \"0123456789abcdef\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AnyTLS Structure in sing-box\nDESCRIPTION: JSON structure for configuring AnyTLS outbound settings. Includes required fields for server configuration, connection management parameters, and TLS settings. Available since sing-box version 1.12.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/anytls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"anytls\",\n  \"tag\": \"anytls-out\",\n\n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"idle_session_check_interval\": \"30s\",\n  \"idle_session_timeout\": \"30s\",\n  \"min_idle_session\": 5,\n  \"tls\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Server Configuration with Local Certificate\nDESCRIPTION: JSON configuration for setting up a Trojan server using local TLS certificates with multiplexing enabled\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"users\": [\n        {\n          \"name\": \"example\",\n          \"password\": \"password\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"key_path\": \"/path/to/key.pem\",\n        \"certificate_path\": \"/path/to/certificate.pem\"\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Route Rules Configuration for Traffic Management\nDESCRIPTION: Route rules configuration for managing different types of traffic including DNS, private IPs, and geolocation-based routing for Chinese traffic.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"direct\",\n      \"tag\": \"direct\"\n    },\n    {\n      \"type\": \"block\",\n      \"tag\": \"block\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [\n          {\n            \"protocol\": \"dns\"\n          },\n          {\n            \"port\": 53\n          }\n        ],\n        \"outbound\": \"dns\"\n      },\n      {\n        \"ip_is_private\": true,\n        \"outbound\": \"direct\"\n      },\n      {\n        \"clash_mode\": \"Direct\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"clash_mode\": \"Global\",\n        \"outbound\": \"default\"\n      },\n      {\n        \"type\": \"logical\",\n        \"mode\": \"or\",\n        \"rules\": [\n          {\n            \"port\": 853\n          },\n          {\n            \"network\": \"udp\",\n            \"port\": 443\n          },\n          {\n            \"protocol\": \"stun\"\n          }\n        ],\n        \"outbound\": \"block\"\n      },\n      {\n        \"rule_set\": [\n          \"geoip-cn\",\n          \"geosite-geolocation-cn\"\n        ],\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"rule_set\": [\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geoip-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs\"\n      },\n      {\n        \"type\": \"remote\",\n        \"tag\": \"geosite-geolocation-cn\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-geolocation-cn.srs\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS over QUIC Server Structure\nDESCRIPTION: JSON configuration structure for setting up a DNS over QUIC server in sing-box. Includes server configuration, TLS settings, and dial fields. The structure supports customization of server address, port (default 853), and TLS configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/quic.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"quic\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 853,\n        \n        \"tls\": {},\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AnyTLS Inbound Structure in JSON for sing-box\nDESCRIPTION: This JSON structure defines the configuration for an AnyTLS inbound in sing-box. It includes type, tag, user details, padding scheme, and TLS configuration options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/anytls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"anytls\",\n  \"tag\": \"anytls-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"password\": \"8JCsPssfgS8tiRwiMlhARg==\"\n    }\n  ],\n  \"padding_scheme\": [],\n  \"tls\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hysteria2 Inbound in sing-box JSON\nDESCRIPTION: This snippet shows the complete JSON structure for setting up a Hysteria2 inbound connection in sing-box. It includes all available configuration options including bandwidth settings, obfuscation, user authentication, TLS configuration, and masquerade settings for handling failed authentication.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/hysteria2.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"hysteria2\",\n  \"tag\": \"hy2-in\",\n  \n  ... // Listen Fields\n\n  \"up_mbps\": 100,\n  \"down_mbps\": 100,\n  \"obfs\": {\n    \"type\": \"salamander\",\n    \"password\": \"cry_me_a_r1ver\"\n  },\n  \"users\": [\n    {\n      \"name\": \"tobyxdd\",\n      \"password\": \"goofy_ahh_password\"\n    }\n  ],\n  \"ignore_client_bandwidth\": false,\n  \"tls\": {},\n  \"masquerade\": \"\", // or {}\n  \"brutal_debug\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating from Clash API to Independent Cache Options in sing-box 1.8.0\nDESCRIPTION: Example configuration showing the migration from Clash API cache configuration to the new independent cache file options in sing-box 1.8.0. This change separates cache functionality from the Clash API system.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimental\": {\n    \"clash_api\": {\n      \"cache_file\": \"cache.db\", // default value\n      \"cahce_id\": \"my_profile2\",\n      \"store_mode\": true,\n      \"store_selected\": true,\n      \"store_fakeip\": true\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimental\"  : {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"path\": \"cache.db\", // default value\n      \"cache_id\": \"my_profile2\",\n      \"store_fakeip\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating WireGuard Keys with Command Line Tools\nDESCRIPTION: Commands for generating the required base64-encoded public and private keys for WireGuard using either the wg utility or sing-box's built-in key generation tool.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/endpoint/wireguard.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwg genkey\necho \"private key\" || wg pubkey\n```\n\n----------------------------------------\n\nTITLE: Configuring Hysteria2 Outbound Connection in sing-box JSON\nDESCRIPTION: JSON configuration structure for Hysteria2 outbound connections in sing-box. This includes server settings, bandwidth parameters, obfuscation options, authentication, and network preferences. Recent additions include server_ports for port ranges and hop_interval for port hopping.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/hysteria2.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"hysteria2\",\n  \"tag\": \"hy2-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"server_ports\": [\n    \"2080:3000\"\n  ],\n  \"hop_interval\": \"\",\n  \"up_mbps\": 100,\n  \"down_mbps\": 100,\n  \"obfs\": {\n    \"type\": \"salamander\",\n    \"password\": \"cry_me_a_r1ver\"\n  },\n  \"password\": \"goofy_ahh_password\",\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \"brutal_debug\": false,\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Naive Inbound in JSON for sing-box\nDESCRIPTION: This JSON structure defines the configuration for a Naive inbound in sing-box. It includes fields for type, tag, network, users, and TLS settings. The 'users' field is required and contains an array of user objects with username and password.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/naive.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"naive\",\n  \"tag\": \"naive-in\",\n  \"network\": \"udp\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"username\": \"sekai\",\n      \"password\": \"password\"\n    }\n  ],\n  \"tls\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ShadowTLS Outbound Connection in JSON\nDESCRIPTION: This JSON structure defines the configuration for a ShadowTLS outbound connection. It includes essential fields such as server address, port, protocol version, password, and TLS settings. Additional dial fields can be included as needed.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/shadowtls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"shadowtls\",\n  \"tag\": \"st-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"version\": 3,\n  \"password\": \"fuck me till the daylight\",\n  \"tls\": {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Inbound Fields to Rule Actions\nDESCRIPTION: Demonstrates how to migrate legacy inbound fields like sniff and domain_strategy to the new rule actions format.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"mixed\",\n      \"sniff\": true,\n      \"sniff_timeout\": \"1s\",\n      \"domain_strategy\": \"prefer_ipv4\"\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"mixed\",\n      \"tag\": \"in\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"inbound\": \"in\",\n        \"action\": \"resolve\",\n        \"strategy\": \"prefer_ipv4\"\n      },\n      {\n        \"inbound\": \"in\",\n        \"action\": \"sniff\",\n        \"timeout\": \"1s\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SOCKS Outbound Client in JSON for sing-box\nDESCRIPTION: JSON structure for configuring a SOCKS outbound client in sing-box. Supports SOCKS4, SOCKS4a, and SOCKS5 protocols with options for authentication, network selection, and UDP over TCP functionality.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/socks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"socks\",\n  \"tag\": \"socks-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"version\": \"5\",\n  \"username\": \"sekai\",\n  \"password\": \"admin\",\n  \"network\": \"udp\",\n  \"udp_over_tcp\": false | {},\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Server Configuration with Local Certificate\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 server using local TLS certificates, including bandwidth limits and user authentication.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"users\": [\n        {\n          \"name\": \"sekai\",\n          \"password\": \"<password>\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"key_path\": \"/path/to/key.pem\",\n        \"certificate_path\": \"/path/to/certificate.pem\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Local DNS Server in sing-box\nDESCRIPTION: JSON structure for defining a local DNS server in sing-box 1.12.0+. The configuration includes a type identifier, optional tag, and dial fields. This server can handle all types of DNS requests and supports concurrent processing for IP requests.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/local.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"local\",\n        \"tag\": \"\",\n\n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VMess Inbound Connection in JSON\nDESCRIPTION: This snippet shows the basic structure for configuring a VMess inbound connection in sing-box. It includes the type, tag, user configurations with optional alterId settings, and references to TLS, multiplexing, and transport configurations.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/vmess.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"vmess\",\n  \"tag\": \"vmess-in\",\n\n  ... // 监听字段\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"uuid\": \"bf000d23-0752-40b4-affe-68f7707a9661\",\n      \"alterId\": 0\n    }\n  ],\n  \"tls\": {},\n  \"multiplex\": {},\n  \"transport\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Client Configuration with Valid Certificate\nDESCRIPTION: JSON configuration for setting up a Trojan client with uTLS and multiplexing using a valid server certificate\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"password\": \"password\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"utls\": {\n          \"enabled\": true,\n          \"fingerprint\": \"firefox\"\n        }\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Test Outbound Structure in JSON\nDESCRIPTION: JSON configuration structure for URL test outbound settings. Defines outbound proxy selection, test URL, intervals, tolerance, and connection management options. Used to automatically test and select the best performing proxy from a list of outbounds.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/urltest.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"urltest\",\n  \"tag\": \"auto\",\n  \n  \"outbounds\": [\n    \"proxy-a\",\n    \"proxy-b\",\n    \"proxy-c\"\n  ],\n  \"url\": \"\",\n  \"interval\": \"\",\n  \"tolerance\": 0,\n  \"idle_timeout\": \"\",\n  \"interrupt_exist_connections\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Shadowsocks Structure in JSON\nDESCRIPTION: Basic JSON structure for Shadowsocks configuration in sing-box. Includes the type, tag, method, password and multiplex fields, with placeholder for Listen Fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/shadowsocks.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"shadowsocks\",\n  \"tag\": \"ss-in\",\n\n  ... // Listen Fields\n\n  \"method\": \"2022-blake3-aes-128-gcm\",\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"multiplex\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Predefined Action in sing-box\nDESCRIPTION: The predefined action responds to DNS queries with custom-defined DNS records. It allows specifying response code, answer records, name server records, and extra records for complete control over DNS responses.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"predefined\",\n  \"rcode\": \"\",\n  \"answer\": [],\n  \"ns\": [],\n  \"extra\": []\n}\n```\n\n----------------------------------------\n\nTITLE: WireGuard Configuration Structure in JSON for sing-box\nDESCRIPTION: The complete JSON structure for configuring a WireGuard endpoint in sing-box. It includes network settings, keys configuration, peer specifications, and performance tuning parameters.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/endpoint/wireguard.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"wireguard\",\n  \"tag\": \"wg-ep\",\n  \n  \"system\": false,\n  \"name\": \"\",\n  \"mtu\": 1408,\n  \"address\": [],\n  \"private_key\": \"\",\n  \"listen_port\": 10000,\n  \"peers\": [\n    {\n      \"address\": \"127.0.0.1\",\n      \"port\": 10001,\n      \"public_key\": \"\",\n      \"pre_shared_key\": \"\",\n      \"allowed_ips\": [],\n      \"persistent_keepalive_interval\": 0,\n      \"reserved\": [0, 0, 0]\n    }\n  ],\n  \"udp_timeout\": \"\",\n  \"workers\": 0,\n \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Server Configuration with ACME\nDESCRIPTION: JSON configuration for setting up a Trojan server using automatic ACME certificate provisioning\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"users\": [\n        {\n          \"name\": \"example\",\n          \"password\": \"password\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"acme\": {\n          \"domain\": \"example.org\",\n          \"email\": \"admin@example.org\"\n        }\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailscale Endpoint Structure in JSON\nDESCRIPTION: Defines the complete JSON structure for configuring a Tailscale endpoint in sing-box. Includes fields for state management, authentication, network configuration, and routing options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/endpoint/tailscale.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tailscale\",\n  \"tag\": \"ts-ep\",\n  \"state_directory\": \"\",\n  \"auth_key\": \"\",\n  \"control_url\": \"\",\n  \"ephemeral\": false,\n  \"hostname\": \"\",\n  \"exit_node\": \"\",\n  \"exit_node_allow_lan_access\": false,\n  \"advertise_routes\": [],\n  \"advertise_exit_node\": false,\n  \"udp_timeout\": \"5m\",\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Reject Action in sing-box\nDESCRIPTION: The reject action is used to refuse DNS requests using specified methods. It can return NXDOMAIN responses or completely drop requests, with an optional protection against excessive requests.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"reject\",\n  \"method\": \"\",\n  \"no_drop\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Route Action in Sing-box JSON\nDESCRIPTION: Defines the 'route' action for routing connections to a specified outbound. Includes the required 'outbound' field and inherits route-options fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route\", // default\n  \"outbound\": \"\",\n \n  ... // route-options Fields\n}\n```\n\n----------------------------------------\n\nTITLE: WireGuard Configuration Structure in JSON\nDESCRIPTION: JSON configuration structure for WireGuard outbound connections, including server settings, interface configuration, encryption keys, and network parameters.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/wireguard.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"wireguard\",\n  \"tag\": \"wireguard-out\",\n\n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"system_interface\": false,\n  \"interface_name\": \"wg0\",\n  \"local_address\": [\n    \"10.0.0.1/32\"\n  ],\n  \"private_key\": \"YNXtAzepDqRv9H52osJVDQnznT5AM11eCK3ESpwSt04=\",\n  \"peer_public_key\": \"Z1XXLsKYkYxuiYjJIkRvtIKFepCYHTgON+GwPq7SOV4=\",\n  \"pre_shared_key\": \"31aIhAPwktDGpH4JDhA8GNvjFXEf/a6+UaQRyOAiyfM=\",\n  \"reserved\": [0, 0, 0],\n  \"workers\": 4,\n  \"mtu\": 1408,\n  \"network\": \"tcp\",\n  \n  \"gso\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP Brutal in JSON for sing-box\nDESCRIPTION: JSON structure for enabling TCP Brutal congestion control algorithm in sing-box. It includes fields for enabling the feature and setting upload and download bandwidth in Mbps.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/tcp-brutal.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"up_mbps\": 100,\n  \"down_mbps\": 100\n}\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Server Configuration with Cloudflare ACME\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 server using ACME with Cloudflare DNS validation.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"users\": [\n        {\n          \"name\": \"sekai\",\n          \"password\": \"<password>\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"acme\": {\n          \"domain\": \"example.org\",\n          \"email\": \"admin@example.org\",\n          \"dns01_challenge\": {\n            \"provider\": \"cloudflare\",\n            \"api_token\": \"my_token\"\n          }\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP DNS Server Structure in JSON\nDESCRIPTION: JSON structure for configuring TCP DNS servers in sing-box. Includes required server address, optional port configuration (defaulting to 53), and support for additional dial fields. The configuration is part of the DNS servers array.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/tcp.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tcp\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 53,\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Route Options in Sing-box JSON\nDESCRIPTION: Defines various routing options including address and port overrides, network strategies, and UDP-specific settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route-options\",\n  \"override_address\": \"\",\n  \"override_port\": 0,\n  \"network_strategy\": \"\",\n  \"fallback_delay\": \"\",\n  \"udp_disable_domain_unmapping\": false,\n  \"udp_connect\": false,\n  \"udp_timeout\": \"\",\n  \"tls_fragment\": false,\n  \"tls_fragment_fallback_delay\": \"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH Connection Structure in JSON\nDESCRIPTION: JSON configuration structure for SSH outbound connections. Includes server connection details, authentication options (password/key-based), host key verification, and client version settings. All fields are customizable with sensible defaults.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/ssh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"ssh\",\n  \"tag\": \"ssh-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 22,\n  \"user\": \"root\",\n  \"password\": \"admin\",\n  \"private_key\": \"\",\n  \"private_key_path\": \"$HOME/.ssh/id_rsa\",\n  \"private_key_passphrase\": \"\",\n  \"host_key\": [\n    \"ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdH...\"\n  ],\n  \"host_key_algorithms\": [],\n  \"client_version\": \"SSH-2.0-OpenSSH_7.4p1\",\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Servers with Strategy in sing-box JSON\nDESCRIPTION: Shows the updated configuration for DNS servers with strategies. The 'strategy' field is moved to the DNS rules, and a global 'strategy' field is introduced in the DNS configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"udp\",\n        \"server\": \"1.1.1.1\"\n      },\n      {\n        \"type\": \"udp\",\n        \"tag\": \"google\",\n        \"server\": \"8.8.8.8\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"domain\": \"google.com\",\n        \"server\": \"google\",\n        \"strategy\": \"prefer_ipv6\"\n      }\n    ],\n    \"strategy\": \"ipv4_only\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Resolve Action in Sing-box JSON\nDESCRIPTION: Defines the 'resolve' action for resolving domain names to IP addresses. Includes options for DNS server selection, resolution strategy, and cache control.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"resolve\",\n  \"server\": \"\",\n  \"strategy\": \"\",\n  \"disable_cache\": false,\n  \"rewrite_ttl\": null,\n  \"client_subnet\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring VMess Inbound Server Structure in JSON\nDESCRIPTION: JSON structure for configuring a VMess inbound server in sing-box. It includes basic server configuration with user settings, TLS options, multiplexing capabilities, and transport configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/vmess.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"vmess\",\n  \"tag\": \"vmess-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"uuid\": \"bf000d23-0752-40b4-affe-68f7707a9661\",\n      \"alterId\": 0\n    }\n  ],\n  \"tls\": {},\n  \"multiplex\": {},\n  \"transport\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Rule Set Structure in JSON for sing-box\nDESCRIPTION: Basic structure for a sing-box rule set configuration. Contains version number and rules array. Version 3 supports network_type, network_is_expensive and network_is_constrainted rule items.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/source-format.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": 3,\n  \"rules\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TProxy Inbound Configuration in JSON for sing-box\nDESCRIPTION: This JSON structure outlines the configuration for a TProxy inbound in sing-box. It includes fields for type, tag, and network, along with additional listen fields. The network field can be set to either 'tcp' or 'udp', or left empty to include both.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tproxy.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tproxy\",\n  \"tag\": \"tproxy-in\",\n\n  ... // Listen Fields\n\n  \"network\": \"udp\"\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Client Configuration with Self-signed Certificate\nDESCRIPTION: JSON configuration for setting up a Trojan client using a self-signed certificate with custom certificate path\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"password\": \"password\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"certificate_path\": \"/path/to/certificate.pem\",\n        \"utls\": {\n          \"enabled\": true,\n          \"fingerprint\": \"firefox\"\n        }\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Server Configuration with ACME and Cloudflare\nDESCRIPTION: JSON configuration for setting up a Trojan server using ACME with Cloudflare DNS validation\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"users\": [\n        {\n          \"name\": \"example\",\n          \"password\": \"password\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"acme\": {\n          \"domain\": \"example.org\",\n          \"email\": \"admin@example.org\",\n          \"dns01_challenge\": {\n            \"provider\": \"cloudflare\",\n            \"api_token\": \"my_token\"\n          }\n        }\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Server Configuration with ACME\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 server using automatic ACME certificate provisioning.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"users\": [\n        {\n          \"name\": \"sekai\",\n          \"password\": \"<password>\"\n        }\n      ],\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"acme\": {\n          \"domain\": \"example.org\",\n          \"email\": \"admin@example.org\"\n        }\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Rule Set Structure in JSON for sing-box\nDESCRIPTION: This JSON structure defines the format for a rule set in sing-box. It includes the version number and an array of rules. The version field is required and indicates the rule set format version, while the rules array contains a set of headless rules.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/source-format.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": 3,\n  \"rules\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ShadowTLS Server in sing-box JSON\nDESCRIPTION: A complete JSON schema for configuring a ShadowTLS server in sing-box. This includes connection parameters, protocol version selection, user authentication, handshake options, and additional features like wildcard_sni.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/shadowtls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"shadowtls\",\n  \"tag\": \"st-in\",\n\n  ... // Listen Fields\n\n  \"version\": 3,\n  \"password\": \"fuck me till the daylight\",\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"password\": \"8JCsPssfgS8tiRwiMlhARg==\"\n    }\n  ],\n  \"handshake\": {\n    \"server\": \"google.com\",\n    \"server_port\": 443,\n    \n    ... // Dial Fields\n  },\n  \"handshake_for_server_name\": {\n    \"example.com\": {\n      \"server\": \"example.com\",\n      \"server_port\": 443,\n\n      ... // Dial Fields\n    }\n  },\n  \"strict_mode\": false,\n  \"wildcard_sni\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Alibaba Cloud DNS Configuration\nDESCRIPTION: Configuration structure for Alibaba Cloud DNS (AliDNS) provider, requiring access key ID, secret, and region ID.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/dns01_challenge.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"provider\": \"alidns\",\n  \"access_key_id\": \"\",\n  \"access_key_secret\": \"\",\n  \"region_id\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Outbound Multiplex Settings in JSON\nDESCRIPTION: JSON configuration for outbound multiplex settings including protocol selection, connection limits, stream management, padding, and brutal configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/multiplex.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"protocol\": \"smux\",\n  \"max_connections\": 4,\n  \"min_streams\": 4,\n  \"max_streams\": 0,\n  \"padding\": false,\n  \"brutal\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Shadowsocks Relay in JSON\nDESCRIPTION: JSON structure for Shadowsocks relay configuration in sing-box. Includes the type, method, password, and destinations array where each destination has a name, server, server_port, and password.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/shadowsocks.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"shadowsocks\",\n  \"method\": \"2022-blake3-aes-128-gcm\",\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"destinations\": [\n    {\n      \"name\": \"test\",\n      \"server\": \"example.com\",\n      \"server_port\": 8080,\n      \"password\": \"PCD2Z4o12bKUoFa3cC97Hw==\"\n    }\n  ],\n  \"multiplex\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Basic V2Ray Transport Structure in JSON\nDESCRIPTION: Demonstrates the basic JSON structure for configuring V2Ray transport in sing-box. The 'type' field specifies the transport protocol to be used.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Direct Outbound in JSON for sing-box\nDESCRIPTION: JSON structure for configuring a direct outbound connection in sing-box. It includes fields for type, tag, and deprecated override options. Additional dial fields can be included as needed.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/direct.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"direct\",\n  \"tag\": \"direct-out\",\n  \n  \"override_address\": \"1.0.0.1\",\n  \"override_port\": 53,\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Sniff Action in Sing-box JSON\nDESCRIPTION: Defines the 'sniff' action for performing protocol sniffing on connections. Includes options for specifying sniffers and timeout.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"sniff\",\n  \"sniffer\": [],\n  \"timeout\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Direct Inbound Tunnel Server in JSON for sing-box\nDESCRIPTION: JSON structure for configuring a 'direct' inbound tunnel server in sing-box. It includes basic fields like type and tag, as well as network-specific options for overriding address and port. Listen Fields are referenced separately.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/direct.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"direct\",\n  \"tag\": \"direct-in\",\n  \n  ... // Listen Fields\n\n  \"network\": \"udp\",\n  \"override_address\": \"1.0.0.1\",\n  \"override_port\": 53\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-user Shadowsocks Server Configuration\nDESCRIPTION: JSON configuration for setting up a multi-user Shadowsocks server with separate server and user passwords, using the 2022-blake3-aes-128-gcm cipher.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/shadowsocks.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"shadowsocks\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"network\": \"tcp\",\n      \"method\": \"2022-blake3-aes-128-gcm\",\n      \"password\": \"<server_password>\",\n      \"users\": [\n        {\n          \"name\": \"sekai\",\n          \"password\": \"<user_password>\"\n        }\n      ],\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Rule-set in sing-box JSON\nDESCRIPTION: JSON structure for configuring an inline rule-set in sing-box. This type allows specifying rules directly in the configuration file.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"inline\", // optional\n  \"tag\": \"\",\n  \"rules\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TUIC Inbound Server in JSON\nDESCRIPTION: JSON configuration structure for setting up a TUIC inbound server in sing-box. Includes user authentication with UUID and password, connection parameters like congestion control algorithm, authentication timeout, and TLS configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tuic.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tuic\",\n  \"tag\": \"tuic-in\",\n\n  ... // 监听字段\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"uuid\": \"059032A9-7D40-4A96-9BB1-36823D848068\",\n      \"password\": \"hello\"\n    }\n  ],\n  \"congestion_control\": \"cubic\",\n  \"auth_timeout\": \"3s\",\n  \"zero_rtt_handshake\": false,\n  \"heartbeat\": \"10s\",\n  \"tls\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring UDP over TCP Protocol in JSON\nDESCRIPTION: This JSON structure defines the configuration for enabling the UDP over TCP protocol and specifying its version. The 'enabled' field activates the protocol, while the 'version' field can be set to 1 or 2, with 2 being the default.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/udp-over-tcp.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"version\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-User Shadowsocks in JSON\nDESCRIPTION: JSON structure for Shadowsocks with multiple users in sing-box. Includes the method, password, and a users array where each user has a name and password.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/shadowsocks.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"method\": \"2022-blake3-aes-128-gcm\",\n  \"password\": \"8JCsPssfgS8tiRwiMlhARg==\",\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"password\": \"PCD2Z4o12bKUoFa3cC97Hw==\"\n    }\n  ],\n  \"multiplex\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Single-user Shadowsocks Client Configuration\nDESCRIPTION: JSON configuration for setting up a single-user Shadowsocks client with TCP multiplexing enabled.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/shadowsocks.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"shadowsocks\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"method\": \"2022-blake3-aes-128-gcm\",\n      \"password\": \"<pasword>\",\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Local File Rule Set in sing-box JSON\nDESCRIPTION: JSON structure for configuring a local file rule set in sing-box. Includes type, tag, format, and path fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"local\",\n  \"tag\": \"\",\n  \"format\": \"source\", // or binary\n  \"path\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hysteria Outbound Structure in JSON\nDESCRIPTION: This snippet shows the complete JSON structure for configuring a hysteria outbound connection in sing-box. It includes all available fields like server address, port settings, bandwidth limits, authentication options, and TLS configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/hysteria.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"hysteria\",\n  \"tag\": \"hysteria-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"server_ports\": [\n    \"2080:3000\"\n  ],\n  \"hop_interval\": \"\",\n  \"up\": \"100 Mbps\",\n  \"up_mbps\": 100,\n  \"down\": \"100 Mbps\",\n  \"down_mbps\": 100,\n  \"obfs\": \"fuck me till the daylight\",\n  \"auth\": \"\",\n  \"auth_str\": \"password\",\n  \"recv_window_conn\": 0,\n  \"recv_window\": 0,\n  \"disable_mtu_discovery\": false,\n  \"network\": \"tcp\",\n  \"tls\": {},\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS DNS Server in sing-box JSON\nDESCRIPTION: Illustrates the new format for configuring a TLS DNS server. The 'address' field is replaced with 'type' set to 'tls' and a separate 'server' field for the IP address.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tls\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Redirect Inbound Structure in JSON\nDESCRIPTION: Basic JSON structure for configuring a redirect inbound connection in sing-box. This configuration type is only available on Linux and macOS systems and requires additional Listen Fields to be specified.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/redirect.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"redirect\",\n  \"tag\": \"redirect-in\",\n\n  ... // Listen Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box via Debian/APT Repository\nDESCRIPTION: Commands to add the sing-box repository key, configure the repository source, and install sing-box package on Debian-based systems.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo mkdir -p /etc/apt/keyrings &&\n   sudo curl -fsSL https://sing-box.app/gpg.key -o /etc/apt/keyrings/sagernet.asc &&\n   sudo chmod a+r /etc/apt/keyrings/sagernet.asc &&\n   echo '\nTypes: deb\nURIs: https://deb.sagernet.org/\nSuites: *\nComponents: *\nEnabled: yes\nSigned-By: /etc/apt/keyrings/sagernet.asc\n' | sudo tee /etc/apt/sources.list.d/sagernet.sources &&\n   sudo apt-get update &&\n   sudo apt-get install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: GeoIP Configuration Structure in JSON\nDESCRIPTION: JSON configuration structure for GeoIP in sing-box routing system. Defines fields for database path, download URL, and download routing.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/geoip.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"geoip\": {\n      \"path\": \"\",\n      \"download_url\": \"\",\n      \"download_detour\": \"\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SOCKS Outbound in JSON for sing-box\nDESCRIPTION: JSON structure for configuring SOCKS outbound in sing-box. It includes fields for server details, authentication, network settings, and UDP over TCP options. Some fields are required while others have default values or are optional.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/socks.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"socks\",\n  \"tag\": \"socks-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"version\": \"5\",\n  \"username\": \"sekai\",\n  \"password\": \"admin\",\n  \"network\": \"udp\",\n  \"udp_over_tcp\": false | {},\n\n  ... // 拨号字段\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS DNS Server in sing-box JSON\nDESCRIPTION: Demonstrates the new configuration for an HTTPS DNS server. The 'address' field is replaced with 'type' set to 'https' and a separate 'server' field for the domain.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"https\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DHCP DNS Server in sing-box JSON\nDESCRIPTION: This snippet demonstrates the JSON structure for configuring a DHCP DNS server in sing-box 1.12.0+. It shows the required fields including server type, tag, and interface settings, along with placeholder for dial fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/dhcp.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"dhcp\",\n        \"tag\": \"\",\n\n        \"interface\": \"\",\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box on Debian/Ubuntu using APT\nDESCRIPTION: This snippet shows how to add the sing-box repository to APT sources and install sing-box on Debian-based systems. It includes steps to add the GPG key, create the source list, and install the package.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo mkdir -p /etc/apt/keyrings &&\n   sudo curl -fsSL https://sing-box.app/gpg.key -o /etc/apt/keyrings/sagernet.asc &&\n   sudo chmod a+r /etc/apt/keyrings/sagernet.asc &&\n   echo '\nTypes: deb\nURIs: https://deb.sagernet.org/\nSuites: *\nComponents: *\nEnabled: yes\nSigned-By: /etc/apt/keyrings/sagernet.asc\n' | sudo tee /etc/apt/sources.list.d/sagernet.sources &&\n   sudo apt-get update &&\n   sudo apt-get install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: Configuring V2Ray API and Traffic Statistics in JSON for sing-box\nDESCRIPTION: This JSON snippet demonstrates the structure for configuring V2Ray API listening address and traffic statistics settings in sing-box. It includes options for enabling statistics, specifying inbounds, outbounds, and users for traffic counting.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/v2ray-api.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"listen\": \"127.0.0.1:8080\",\n  \"stats\": {\n    \"enabled\": true,\n    \"inbounds\": [\n      \"socks-in\"\n    ],\n    \"outbounds\": [\n      \"proxy\",\n      \"direct\"\n    ],\n    \"users\": [\n      \"sekai\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: VLESS Protocol JSON Configuration Structure for sing-box\nDESCRIPTION: JSON structure for configuring VLESS protocol in sing-box. Includes the type, tag, user configuration with UUID and flow options, along with TLS, multiplex, and transport configuration objects.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/vless.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"vless\",\n  \"tag\": \"vless-in\",\n\n  ... // Listen Fields\n\n  \"users\": [\n    {\n      \"name\": \"sekai\",\n      \"uuid\": \"bf000d23-0752-40b4-affe-68f7707a9661\",\n      \"flow\": \"\"\n    }\n  ],\n  \"tls\": {},\n  \"multiplex\": {},\n  \"transport\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring UDP DNS Server in sing-box JSON\nDESCRIPTION: Shows the updated configuration for a UDP DNS server. The 'address' field is replaced with 'type' set to 'udp' and a separate 'server' field for the IP address.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"udp\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Route Action in sing-box\nDESCRIPTION: The route action inherits the classic rule behavior of routing DNS requests to a specified server. It supports options for domain strategy, cache control, TTL rewriting, and client subnet configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route\",  // default\n  \"server\": \"\",\n  \"strategy\": \"\",\n  \"disable_cache\": false,\n  \"rewrite_ttl\": null,\n  \"client_subnet\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Inbound Multiplex Settings in JSON\nDESCRIPTION: JSON configuration for inbound multiplex settings including enabled state, padding option, and brutal configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/multiplex.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"padding\": false,\n  \"brutal\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Clash API with UI Download in JSON\nDESCRIPTION: Example JSON configuration for Clash API with UI download in sing-box. It shows how to set up the external controller and UI options introduced in sing-box 1.10.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/clash-api.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"external_controller\": \"0.0.0.0:9090\",\n  \"external_ui\": \"dashboard\"\n  // external_ui_download_detour: \"direct\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP CONNECT Proxy Outbound in JSON\nDESCRIPTION: JSON configuration structure for HTTP CONNECT proxy client in sing-box. Defines server connection details, authentication credentials, path, headers, TLS settings, and additional dial fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/http.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"http\",\n  \"tag\": \"http-out\",\n  \n  \"server\": \"127.0.0.1\",\n  \"server_port\": 1080,\n  \"username\": \"sekai\",\n  \"password\": \"admin\",\n  \"path\": \"\",\n  \"headers\": {},\n  \"tls\": {},\n  \n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up WebSocket Transport for V2Ray in JSON\nDESCRIPTION: Shows the configuration for WebSocket transport in V2Ray. It includes options for path, headers, and early data settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"ws\",\n  \"path\": \"\",\n  \"headers\": {},\n  \"max_early_data\": 0,\n  \"early_data_header_name\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Route-Options Action in sing-box\nDESCRIPTION: The route-options action sets options for DNS routing including cache control, TTL rewriting, and client subnet configuration without specifying a target server.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route-options\",\n  \"disable_cache\": false,\n  \"rewrite_ttl\": null,\n  \"client_subnet\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Client Configuration with Valid Certificate\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 client using a valid TLS certificate.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"password\": \"<password>\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Legacy DNS Servers Structure in sing-box\nDESCRIPTION: JSON configuration structure for legacy DNS servers in sing-box. This defines the structure of DNS server configurations with fields for tag, address, resolution strategies, and routing options. Note this is deprecated in sing-box 1.12.0 and will be removed in version 1.14.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/legacy.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"tag\": \"\",\n        \"address\": \"\",\n        \"address_resolver\": \"\",\n        \"address_strategy\": \"\",\n        \"strategy\": \"\",\n        \"detour\": \"\",\n        \"client_subnet\": \"\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Outbound in sing-box (JSON)\nDESCRIPTION: JSON structure for configuring a DNS outbound in sing-box. This outbound type functions as an internal DNS server with no outbound connections, handling all requests internally. Note that this feature is deprecated in sing-box 1.11.0 and will be removed in version 1.13.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/dns.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"dns\",\n  \"tag\": \"dns-out\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring QUIC Transport for V2Ray in JSON\nDESCRIPTION: Demonstrates the simple configuration for QUIC transport in V2Ray. No additional settings are required beyond specifying the type.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"quic\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring UID-based routing in YAML\nDESCRIPTION: Sets up routing rules based on user IDs (UIDs). This allows including or excluding specific users or ranges of users from routing.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ninclude_uid:\n  - 1000\n  - 1001\ninclude_uid_range:\n  - '2000-3000'\nexclude_uid:\n  - 0\nexclude_uid_range:\n  - '4000-5000'\n```\n\n----------------------------------------\n\nTITLE: Defining Predefined Hosts in sing-box\nDESCRIPTION: Example of configuring predefined host mappings in sing-box. This allows for defining custom host-to-IP mappings directly in the configuration, supporting both single IP address and multiple IP addresses per host.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/hosts.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"predefined\": {\n    \"www.google.com\": \"127.0.0.1\",\n    \"localhost\": [\n      \"127.0.0.1\",\n      \"::1\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Single-user Shadowsocks Server Configuration\nDESCRIPTION: JSON configuration for setting up a single-user Shadowsocks server using the 2022-blake3-aes-128-gcm cipher with TCP multiplexing enabled.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/shadowsocks.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"shadowsocks\",\n      \"listen\": \"::\",\n      \"listen_port\": 8080,\n      \"network\": \"tcp\",\n      \"method\": \"2022-blake3-aes-128-gcm\",\n      \"password\": \"<password>\",\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS over HTTPS (DoH) Server in sing-box JSON\nDESCRIPTION: JSON structure for configuring DNS over HTTPS (DoH) servers in sing-box. Includes server address, port, path, headers, TLS settings, and dial fields. The server field is required and specifies the DNS server address.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/https.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"https\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 443,\n        \n        \"path\": \"\",\n        \"headers\": {},\n        \n        \"tls\": {},\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Sing-Box Container via Command Line\nDESCRIPTION: This bash command runs a Sing-Box container with specific volume mounts and runtime parameters. It uses the ghcr.io/sagernet/sing-box image, mounts the /etc/sing-box directory, sets the container name, and specifies restart policy and runtime arguments.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/docker.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -d \\\n  -v /etc/sing-box:/etc/sing-box/ \\\n  --name=sing-box \\\n  --restart=always \\\n  ghcr.io/sagernet/sing-box \\\n  -D /var/lib/sing-box \\\n  -C /etc/sing-box/ run\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote File Rule-set in sing-box JSON\nDESCRIPTION: JSON structure for configuring a remote file rule-set in sing-box. This type allows downloading rules from a URL and optionally caching them.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"remote\",\n  \"tag\": \"\",\n  \"format\": \"source\", // or binary\n  \"url\": \"\",\n  \"download_detour\": \"\", // optional\n  \"update_interval\": \"\" // optional\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Log Configuration Structure in JSON for sing-box\nDESCRIPTION: This JSON structure defines the configuration options for logging in sing-box. It includes fields for enabling/disabling logs, setting log level, specifying output file, and adding timestamps.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/log/index.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"log\": {\n    \"disabled\": false,\n    \"level\": \"info\",\n    \"output\": \"box.log\",\n    \"timestamp\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP/IP stack in YAML\nDESCRIPTION: Selects the TCP/IP stack to use. Options include 'system', 'gvisor', and 'mixed'. The default depends on build tags and available options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nstack: mixed\n```\n\n----------------------------------------\n\nTITLE: Basic Hosts Configuration Structure in sing-box\nDESCRIPTION: The basic JSON structure for configuring a hosts DNS server in sing-box. This configuration defines the structure for hosts-based DNS resolution, which can use system host files or custom predefined mappings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/hosts.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"hosts\",\n        \"tag\": \"\",\n\n        \"path\": [],\n        \"predefined\": {}\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Password Generation Script in JavaScript\nDESCRIPTION: JavaScript function to generate random base64-encoded passwords of specified lengths for Shadowsocks authentication. Supports both 16-byte and 32-byte password generation.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/shadowsocks.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction generatePassword(element, length) {\n    const array = new Uint8Array(length);\n    window.crypto.getRandomValues(array);\n    document.getElementById(element).textContent = btoa(String.fromCharCode.apply(null, array));\n}\nfunction generate() {\n  generatePassword(\"password_16\", 16);\n  generatePassword(\"password_32\", 32);\n}\ngenerate();\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS to Use Hosts with Fallback in sing-box\nDESCRIPTION: Example of a complete DNS configuration that uses hosts server as the first lookup option with a fallback to another server. The configuration uses rules to check hosts records first before trying other DNS servers.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/hosts.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        ...\n      },\n      {\n        \"type\": \"hosts\",\n        \"tag\": \"hosts\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"ip_accept_any\": true,\n        \"server\": \"hosts\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Inline Rule Set in sing-box JSON\nDESCRIPTION: JSON structure for configuring an inline rule set in sing-box 1.10.0 and later. Includes type, tag, and rules fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"inline\", // optional\n  \"tag\": \"\",\n  \"rules\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-user Shadowsocks Client Configuration\nDESCRIPTION: JSON configuration for setting up a multi-user Shadowsocks client using combined server and user passwords.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/shadowsocks.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"shadowsocks\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"method\": \"2022-blake3-aes-128-gcm\",\n      \"password\": \"<server_pasword>:<user_password>\",\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fake IP DNS Server in sing-box\nDESCRIPTION: JSON configuration structure for setting up a Fake IP DNS server in sing-box. This configuration allows specifying IPv4 and IPv6 address ranges for the Fake IP functionality.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/fakeip.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"fakeip\",\n        \"tag\": \"\",\n\n        \"inet4_range\": \"198.18.0.0/15\",\n        \"inet6_range\": \"fc00::/18\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Password Generator Implementation in JavaScript\nDESCRIPTION: Client-side JavaScript code to generate random base64-encoded passwords for Hysteria 2 authentication.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction generate() {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    document.getElementById(\"password\").textContent = btoa(String.fromCharCode.apply(null, array));\n}\ngenerate();\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Client Configuration with Self-signed Certificate\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 client using a self-signed certificate.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"password\": \"<password>\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"certificate_path\": \"/path/to/certificate.pem\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hijacking in Sing-box JSON\nDESCRIPTION: Defines the 'hijack-dns' action for redirecting DNS requests to the sing-box DNS module.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"hijack-dns\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS over HTTP3 (DoH3) Server in JSON\nDESCRIPTION: JSON structure for configuring a DNS over HTTP3 server in sing-box. Includes fields for server address, port, path, headers, TLS configuration, and dial fields. The server address is required, and if a domain name is used, domain_resolver must be set.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/http3.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"h3\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 443,\n        \n        \"path\": \"\",\n        \"headers\": {},\n        \n        \"tls\": {},\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Password Generator Implementation\nDESCRIPTION: JavaScript function to generate random base64-encoded passwords for Trojan authentication\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction generate() {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    document.getElementById(\"password\").textContent = btoa(String.fromCharCode.apply(null, array));\n}\n```\n\n----------------------------------------\n\nTITLE: Hysteria 2 Client Configuration with Insecure TLS\nDESCRIPTION: JSON configuration for setting up a Hysteria 2 client with certificate verification disabled.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/hysteria2.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"hysteria2\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"up_mbps\": 100,\n      \"down_mbps\": 100,\n      \"password\": \"<password>\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"insecure\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Reject Action in Sing-box JSON\nDESCRIPTION: Defines the 'reject' action for rejecting connections. Includes options for rejection method and a no_drop flag for temporary method override.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/rule_action.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"reject\",\n  \"method\": \"default\", // default\n  \"no_drop\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing System Proxy Traffic Flow with Mermaid\nDESCRIPTION: This diagram illustrates the flow of different types of network traffic through a system proxy, showing how HTTP requests are handled differently from other types of traffic.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart LR\n    dns[DNS query] -- Is HTTP request? --> proxy[HTTP proxy]\n    dns --> leak[Leak]\n    tcp[TCP connection] -- Is HTTP request? --> proxy\n    tcp -- Check and use HTTP CONNECT? --> proxy\n    tcp --> leak\n    udp[UDP packet] --> leak\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Route-Options Action in sing-box\nDESCRIPTION: The route-options action sets options for routing DNS requests, including cache control, TTL rewriting, and client subnet specification without changing the target server.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route-options\",\n  \"disable_cache\": false,\n  \"rewrite_ttl\": null,\n  \"client_subnet\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Cache File Configuration from Clash API to Standalone Option in JSON\nDESCRIPTION: This snippet demonstrates how to migrate the cache file configuration from the Clash API to a standalone option in sing-box. It shows the deprecated and new JSON structures for this configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimental\": {\n    \"clash_api\": {\n      \"cache_file\": \"cache.db\",\n      \"cahce_id\": \"my_profile2\",\n      \"store_mode\": true,\n      \"store_selected\": true,\n      \"store_fakeip\": true\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"experimental\"  : {\n    \"cache_file\": {\n      \"enabled\": true,\n      \"path\": \"cache.db\",\n      \"cache_id\": \"my_profile2\",\n      \"store_fakeip\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Trojan Client Configuration with Insecure Certificate\nDESCRIPTION: JSON configuration for setting up a Trojan client with certificate verification disabled\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy-protocol/trojan.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"trojan\",\n      \"server\": \"127.0.0.1\",\n      \"server_port\": 8080,\n      \"password\": \"password\",\n      \"tls\": {\n        \"enabled\": true,\n        \"server_name\": \"example.org\",\n        \"insecure\": true,\n        \"utls\": {\n          \"enabled\": true,\n          \"fingerprint\": \"firefox\"\n        }\n      },\n      \"multiplex\": {\n        \"enabled\": true\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Cache in sing-box (JSON)\nDESCRIPTION: JSON structure for configuring DNS caching in sing-box. Includes options for enabling caching, specifying file paths, setting cache identifiers, and controlling storage of FakeIP and rejected DNS response data.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/cache-file.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"path\": \"\",\n  \"cache_id\": \"\",\n  \"store_fakeip\": false,\n  \"store_rdrc\": false,\n  \"rdrc_timeout\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating macOS Data Folder for Updated Bundle Identifiers\nDESCRIPTION: Bash command to move the sing-box data folder on macOS due to Bundle Identifier changes, which allows users to preserve their existing configuration when upgrading.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ncd ~/Library/Group\\ Containers && \\ \n  mv group.io.nekohasekai.sfa group.io.nekohasekai.sfavt\n```\n\n----------------------------------------\n\nTITLE: MagicDNS-only Configuration Example for Tailscale in sing-box\nDESCRIPTION: Example configuration for using Tailscale DNS with MagicDNS only. This setup includes a local DNS server alongside Tailscale and defines rules to direct queries to the appropriate server.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/tailscale.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"local\",\n        \"tag\": \"local\"\n      },\n      {\n        \"type\": \"tailscale\",\n        \"tag\": \"ts\",\n        \"endpoint\": \"ts-ep\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"ip_accept_any\": true,\n        \"server\": \"ts\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPUpgrade Transport for V2Ray in JSON\nDESCRIPTION: Shows the configuration for HTTPUpgrade transport in V2Ray. It includes options for host, path, and additional headers.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"httpupgrade\",\n  \"host\": \"\",\n  \"path\": \"\",\n  \"headers\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPUpgrade V2Ray Transport in Go\nDESCRIPTION: This code snippet shows how to configure the HTTPUpgrade V2Ray transport in sing-box. This transport offers better performance than WebSocket and is more suitable for CDN abuse scenarios.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\ntransport := &V2RayTransport{\n    Type: \"http_upgrade\",\n    // Additional HTTPUpgrade specific configuration\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Tor Outbound Connection in sing-box (JSON)\nDESCRIPTION: JSON structure for configuring a Tor outbound connection in sing-box. Includes options for executable path, arguments, data directory, and torrc settings. Note that embedded Tor functionality requires specific build tags.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/tor.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"tor\",\n  \"tag\": \"tor-out\",\n  \n  \"executable_path\": \"/usr/bin/tor\",\n  \"extra_args\": [],\n  \"data_directory\": \"$HOME/.cache/tor\",\n  \"torrc\": {\n    \"ClientOnly\": 1\n  },\n\n  ... // Dial Fields\n}\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of sing-box on Redhat-based Systems\nDESCRIPTION: This snippet shows a one-line command to download and execute a script for manually installing sing-box on Redhat-based systems. It uses curl to fetch and execute the RPM installation script.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbash <(curl -fsSL https://sing-box.app/rpm-install.sh)\n```\n\n----------------------------------------\n\nTITLE: Global DNS Configuration Example for Tailscale in sing-box\nDESCRIPTION: Example configuration for using Tailscale DNS as the global resolver in sing-box. This setup enables acceptance of default resolvers for non-Tailscale domain queries.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/tailscale.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tailscale\",\n        \"endpoint\": \"ts-ep\",\n        \"accept_default_resolvers\": true\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up gRPC Transport for V2Ray in JSON\nDESCRIPTION: Illustrates the configuration options for gRPC transport in V2Ray. It includes settings for service name, timeouts, and stream permissions.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"grpc\",\n  \"service_name\": \"TunService\",\n  \"idle_timeout\": \"15s\",\n  \"ping_timeout\": \"15s\",\n  \"permit_without_stream\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Route Action in sing-box\nDESCRIPTION: The route action inherits the classic rule action of routing DNS requests to a specified server. It supports parameters for server selection, domain strategy, cache control, TTL rewriting, and client subnet specification.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"route\", // 默认\n  \"server\": \"\",\n  \"strategy\": \"\",\n  \"disable_cache\": false,\n  \"rewrite_ttl\": null,\n  \"client_subnet\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Build with Make and Tags\nDESCRIPTION: Make command with custom build tags for enabling specific features\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/build-from-source.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nTAGS=\"tag_a tag_b\" make\n```\n\n----------------------------------------\n\nTITLE: Configuring FakeIP Service in sing-box (JSON)\nDESCRIPTION: JSON structure for configuring the deprecated FakeIP service in sing-box. It includes options for enabling the service and defining IPv4 and IPv6 address ranges for FakeIP functionality.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/fakeip.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"enabled\": true,\n  \"inet4_range\": \"198.18.0.0/15\",\n  \"inet6_range\": \"fc00::/18\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Transport for V2Ray in JSON\nDESCRIPTION: Illustrates the configuration options for HTTP transport in V2Ray. It includes settings for host, path, method, headers, and timeouts.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/v2ray-transport.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"http\",\n  \"host\": [],\n  \"path\": \"\",\n  \"method\": \"\",\n  \"headers\": {},\n  \"idle_timeout\": \"15s\",\n  \"ping_timeout\": \"15s\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Reject Action in sing-box\nDESCRIPTION: The reject action blocks DNS requests with configurable rejection methods. It can reply with NXDOMAIN or drop requests completely, with a safety mechanism that automatically switches to drop method after excessive triggers.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/rule_action.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"reject\",\n  \"method\": \"\",\n  \"no_drop\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box Binary to GOBIN\nDESCRIPTION: Command to build and install the sing-box binary to the Go binary directory\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/build-from-source.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake install\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote File Rule Set in sing-box JSON\nDESCRIPTION: JSON structure for configuring a remote file rule set in sing-box. Includes type, tag, format, url, download_detour, and update_interval fields.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/index.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"remote\",\n  \"tag\": \"\",\n  \"format\": \"source\", // or binary\n  \"url\": \"\",\n  \"download_detour\": \"\", // optional\n  \"update_interval\": \"\" // optional\n}\n```\n\n----------------------------------------\n\nTITLE: WireGuard Key Generation Commands\nDESCRIPTION: Shell commands for generating WireGuard public and private key pairs using the wg utility.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/wireguard.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwg genkey\necho \"private key\" || wg pubkey\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Servers with Domain Address in sing-box JSON\nDESCRIPTION: Demonstrates the new configuration for DNS servers with domain addresses. The 'address_resolver' field is replaced with 'domain_resolver', and server types are explicitly specified.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"https\",\n        \"server\": \"dns.google\",\n        \"domain_resolver\": \"google\"\n      },\n      {\n        \"type\": \"udp\",\n        \"tag\": \"google\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Online Clash API Access in JSON\nDESCRIPTION: Example JSON configuration for online Clash API access in sing-box. It demonstrates setting the external controller and access control options introduced in sing-box 1.10.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/experimental/clash-api.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"external_controller\": \"127.0.0.1:9090\",\n  \"access_control_allow_origin\": [\n    \"http://127.0.0.1\",\n    \"http://yacd.haishan.me\"\n  ],\n  \"access_control_allow_private_network\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box via DNF 4 Repository\nDESCRIPTION: Commands to add the sing-box repository and install the package on Redhat-based systems using DNF 4.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf config-manager --add-repo https://sing-box.app/sing-box.repo &&\nsudo dnf -y install dnf-plugins-core &&\nsudo dnf install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: WireGuard Key Generation Commands\nDESCRIPTION: Shell commands for generating WireGuard public and private key pairs using the wg utility.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/wireguard.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwg genkey\necho \"private key\" || wg pubkey\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailscale DNS Server Structure in sing-box\nDESCRIPTION: JSON structure for configuring a Tailscale DNS server in sing-box. The configuration includes specifying the endpoint tag and whether to accept default resolvers for non-Tailscale domain queries.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/tailscale.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tailscale\",\n        \"tag\": \"\",\n\n        \"endpoint\": \"ts-ep\",\n        \"accept_default_resolvers\": false\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box on Redhat/Fedora using DNF 4\nDESCRIPTION: This snippet shows the process of adding the sing-box repository and installing sing-box using DNF 4 on Redhat-based systems. It includes steps to add the repository, install dnf-plugins-core, and then install the package.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf config-manager --add-repo https://sing-box.app/sing-box.repo &&\nsudo dnf -y install dnf-plugins-core &&\nsudo dnf install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP3 DNS Server in sing-box JSON\nDESCRIPTION: Illustrates the new format for configuring an HTTP3 DNS server. The 'address' field is replaced with 'type' set to 'h3' and a separate 'server' field for the domain.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"h3\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS over TLS (DoT) Server Structure in JSON\nDESCRIPTION: JSON structure for configuring a DNS over TLS server in sing-box. It defines the server type, address, port, TLS settings, and dial fields. This configuration is part of the DNS servers array in the sing-box configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/tls.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tls\",\n        \"tag\": \"\",\n        \n        \"server\": \"\",\n        \"server_port\": 853,\n        \n        \"tls\": {},\n        \n        // Dial Fields\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Cloudflare DNS Configuration\nDESCRIPTION: Configuration structure for Cloudflare DNS provider, requiring only an API token for authentication.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/dns01_challenge.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"provider\": \"cloudflare\",\n  \"api_token\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling UDP Domain Unmapping in Go\nDESCRIPTION: This snippet demonstrates how to enable the udp_disable_domain_unmapping option for inbound connections in sing-box. When enabled, UDP proxy requests with domain addresses will return responses with the original packet address instead of the mapped domain.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\ninbound := &Inbound{\n    Listen: ListenOptions{\n        UDPDisableDomainUnmapping: true,\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Local DNS Server in sing-box JSON\nDESCRIPTION: Shows the new format for configuring a local DNS server in sing-box. The 'address' field is replaced with a 'type' field set to 'local'.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"local\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Host File Paths in sing-box\nDESCRIPTION: Example of configuring paths to host files in sing-box. By default, '/etc/hosts' is used on Unix-like systems and 'C:\\Windows\\System32\\Drivers\\etc\\hosts' on Windows, but custom paths can be specified.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/dns/server/hosts.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  // \"path\": \"/etc/hosts\"\n  \n  \"path\": [\n    \"/etc/hosts\",\n    \"$HOME/.hosts\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DHCP DNS Server in sing-box JSON\nDESCRIPTION: Demonstrates the new configuration for DHCP DNS servers. The 'address' field is replaced with 'type' set to 'dhcp', and an optional 'interface' field for specifying the network interface.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"dhcp\"\n      },\n      {\n        \"type\": \"dhcp\",\n        \"interface\": \"en0\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring WiFi SSID and BSSID Rules in Go\nDESCRIPTION: This code snippet shows how to add WiFi SSID and BSSID rules for routing and DNS in sing-box. These rules are supported in graphical clients on Android and Apple platforms.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nrule := &Rule{\n    WifiSSID: \"MyHomeNetwork\",\n    WifiBSSID: \"00:11:22:33:44:55\",\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP DNS Server in sing-box JSON\nDESCRIPTION: Demonstrates the new configuration for a TCP DNS server. The 'address' field is replaced with 'type' set to 'tcp' and a separate 'server' field for the IP address.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"tcp\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Remote Profile Import URL Scheme\nDESCRIPTION: URL scheme specification for importing remote profiles in sing-box graphical clients. The scheme includes encoded URL and name parameters.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/clients/general.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsing-box://import-remote-profile?url=urlEncodedURL#urlEncodedName\n```\n\n----------------------------------------\n\nTITLE: Enabling TCP Brutal for Multiplex in Go\nDESCRIPTION: This snippet demonstrates how to enable TCP Brutal support for multiplex connections in sing-box. TCP Brutal is the Hysteria Brutal Congestion Control Algorithm implemented for TCP, requiring a kernel module on Linux servers.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nmultiplex := &Multiplex{\n    TCPBrutal: true,\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Servers with Client Subnet in sing-box JSON\nDESCRIPTION: Illustrates the new format for configuring DNS servers with client subnet. The 'client_subnet' field is moved to the DNS rules section.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"udp\",\n        \"server\": \"1.1.1.1\"\n      },\n      {\n        \"type\": \"udp\",\n        \"tag\": \"google\",\n        \"server\": \"8.8.8.8\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"domain\": \"google.com\",\n        \"server\": \"google\",\n        \"client_subnet\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring QUIC DNS Server in sing-box JSON\nDESCRIPTION: Shows the updated configuration for a QUIC DNS server. The 'address' field is replaced with 'type' set to 'quic' and a separate 'server' field for the IP address.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"quic\",\n        \"server\": \"1.1.1.1\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Domain Strategy to Domain Resolver\nDESCRIPTION: Demonstrates migration from the deprecated domain_strategy option to the new domain resolver configuration in outbound settings.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"socks\",\n      \"server\": \"example.org\",\n      \"server_port\": 2080,\n      \"domain_strategy\": \"prefer_ipv4\"\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"local\",\n        \"tag\": \"local\"\n      }\n    ]\n  },\n  \"outbounds\": [\n    {\n      \"type\": \"socks\",\n      \"server\": \"example.org\",\n      \"server_port\": 2080,\n      \"domain_resolver\": {\n        \"server\": \"local\",\n        \"strategy\": \"prefer_ipv4\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating DNS Rules to Domain Resolver\nDESCRIPTION: Shows how to migrate legacy outbound DNS rules to the new domain resolver configuration format. The new format allows for more granular control through domain_resolver options.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"address\": \"local\",\n        \"tag\": \"local\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"outbound\": \"any\",\n        \"server\": \"local\"\n      }\n    ]\n  },\n  \"outbounds\": [\n    {\n      \"type\": \"socks\",\n      \"server\": \"example.org\",\n      \"server_port\": 2080\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"local\",\n        \"tag\": \"local\"\n      }\n    ]\n  },\n  \"outbounds\": [\n    {\n      \"type\": \"socks\",\n      \"server\": \"example.org\",\n      \"server_port\": 2080,\n      \"domain_resolver\": {\n        \"server\": \"local\",\n        \"rewrite_ttl\": 60,\n        \"client_subnet\": \"1.1.1.1\"\n      }\n    }\n  ],\n  \"route\": {\n    \"default_domain_resolver\": {\n      \"server\": \"local\",\n      \"rewrite_ttl\": 60,\n      \"client_subnet\": \"1.1.1.1\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating Special Outbounds to Rule Actions\nDESCRIPTION: Shows how to migrate legacy special outbound types (block and DNS) to the new rule actions configuration format.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"outbounds\": [\n    {\n      \"type\": \"block\",\n      \"tag\": \"block\"\n    }\n  ],\n  \"route\": {\n    \"rules\": [\n      {\n        \"outbound\": \"block\"\n      }\n    ]\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"action\": \"reject\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring FakeIP DNS Server in sing-box JSON\nDESCRIPTION: Shows the updated configuration for a FakeIP DNS server. The 'fakeip' section is removed, and FakeIP settings are included directly in the server configuration.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"udp\",\n        \"server\": \"1.1.1.1\"\n      },\n      {\n        \"type\": \"fakeip\",\n        \"tag\": \"fakeip\",\n        \"inet4_range\": \"198.18.0.0/15\",\n        \"inet6_range\": \"fc00::/18\"\n      }\n    ],\n    \"rules\": [\n      {\n        \"query_type\": [\n          \"A\",\n          \"AAAA\"\n        ],\n        \"server\": \"fakeip\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: ShadowTLS Configuration Example\nDESCRIPTION: Configuration settings showing removed fallback_after option for ShadowTLS server in version 1.1-beta18\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nThe `fallback_after` option has been removed.\n```\n\n----------------------------------------\n\nTITLE: Migrating TUN Address Fields\nDESCRIPTION: Shows how to migrate separated IPv4 and IPv6 TUN address fields to the new consolidated address fields format.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"inet4_address\": \"172.19.0.1/30\",\n      \"inet6_address\": \"fdfe:dcba:9876::1/126\",\n      \"inet4_route_address\": [\n        \"0.0.0.0/1\",\n        \"128.0.0.0/1\"\n      ],\n      \"inet6_route_address\": [\n        \"::/1\",\n        \"8000::/1\"\n      ],\n      \"inet4_route_exclude_address\": [\n        \"192.168.0.0/16\"\n      ],\n      \"inet6_route_exclude_address\": [\n        \"fc00::/7\"\n      ]\n    }\n  ]\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"inbounds\": [\n    {\n      \"type\": \"tun\",\n      \"address\": [\n        \"172.19.0.1/30\",\n        \"fdfe:dcba:9876::1/126\"\n      ],\n      \"route_address\": [\n        \"0.0.0.0/1\",\n        \"128.0.0.0/1\",\n        \"::/1\",\n        \"8000::/1\"\n      ],\n      \"route_exclude_address\": [\n        \"192.168.0.0/16\",\n        \"fc00::/7\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring RCode DNS Server in sing-box JSON\nDESCRIPTION: Illustrates the new format for configuring an RCode DNS server. The 'address' field is replaced with 'type' set to 'predefined' and a 'responses' array for specifying the RCode.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dns\": {\n    \"servers\": [\n      {\n        \"type\": \"predefined\",\n        \"responses\": [\n          {\n            \"rcode\": \"REFUSED\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Sing-Box using Docker Compose\nDESCRIPTION: This YAML configuration defines a Docker Compose service for Sing-Box. It specifies the image, container name, restart policy, volume mounts, and command to run. This allows for easy deployment and management of the Sing-Box container.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/docker.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.8\"\nservices:\n  sing-box:\n    image: ghcr.io/sagernet/sing-box\n    container_name: sing-box\n    restart: always\n    volumes:\n      - /etc/sing-box:/etc/sing-box/\n    command: -D /var/lib/sing-box -C /etc/sing-box/ run\n```\n\n----------------------------------------\n\nTITLE: Displaying Route/DNS Rule Options Compatibility Table in Markdown\nDESCRIPTION: A markdown table showing the availability and notes for various route and DNS rule options in sing-box on Apple platforms.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/clients/apple/features.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Route/DNS rule option | Available        | Note                  |\n|-----------------------|------------------|-----------------------|\n| `process_name`        | :material-close: | No permission         |\n| `process_path`        | :material-close: | No permission         |\n| `process_path_regex`  | :material-close: | No permission         |\n| `package_name`        | :material-close: | /                     |\n| `user`                | :material-close: | No permission         |\n| `user_id`             | :material-close: | No permission         |\n| `wifi_ssid`           | :material-alert: | Only supported on iOS |\n| `wifi_bssid`          | :material-alert: | Only supported on iOS |\n```\n\n----------------------------------------\n\nTITLE: Migrating Geosite to Rule-sets in sing-box 1.8.0\nDESCRIPTION: Example configuration showing how to migrate from Geosite to the new rule-sets system in sing-box 1.8.0. This change provides more flexibility and better management of domain-based rules.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.md#2025-04-22_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"geosite\": \"cn\",\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"geosite\": {\n      \"download_detour\": \"proxy\"\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"rule_set\": \"geosite-cn\",\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"rule_set\": [\n      {\n        \"tag\": \"geosite-cn\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-cn.srs\",\n        \"download_detour\": \"proxy\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true // required to save rule-set cache\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Migrating GeoIP Configuration to Rule Set in JSON\nDESCRIPTION: This snippet shows how to migrate GeoIP configuration to a rule set in sing-box. It includes the deprecated GeoIP configuration and the new rule set-based configuration with remote rule sets.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"geoip\": \"private\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"geoip\": \"cn\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"source_geoip\": \"cn\",\n        \"outbound\": \"block\"\n      }\n    ],\n    \"geoip\": {\n      \"download_detour\": \"proxy\"\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"ip_is_private\": true,\n        \"outbound\": \"direct\"\n      },\n      {\n        \"rule_set\": \"geoip-cn\",\n        \"outbound\": \"direct\"\n      },\n      {\n        \"rule_set\": \"geoip-us\",\n        \"rule_set_ipcidr_match_source\": true,\n        \"outbound\": \"block\"\n      }\n    ],\n    \"rule_set\": [\n      {\n        \"tag\": \"geoip-cn\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs\",\n        \"download_detour\": \"proxy\"\n      },\n      {\n        \"tag\": \"geoip-us\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-us.srs\",\n        \"download_detour\": \"proxy\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring route_exclude_address_set in YAML\nDESCRIPTION: Demonstrates how to configure route_exclude_address_set with and without auto_redirect enabled. This setting allows bypassing sing-box routes for specified IP CIDR rules.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nroute_exclude_address_set:\n  - rule_set_1\n  - rule_set_2\n```\n\n----------------------------------------\n\nTITLE: Visualizing Virtual Interface Traffic Flow with Mermaid\nDESCRIPTION: This diagram shows the flow of network traffic through a virtual interface setup using sing-box's TUN inbound, illustrating the process from IP packet handling to final destination routing.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/manual/proxy/client.md#2025-04-22_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nflowchart TB\n    packet[IP Packet]\n    packet --> windows[Windows / macOS]\n    packet --> linux[Linux]\n    tun[TUN interface]\n    windows -. route .-> tun\n    linux -. iproute2 route/rule .-> tun\n    tun --> gvisor[gVisor TUN stack]\n    tun --> system[system TUN stack]\n    assemble([L3 to L4 assemble])\n    gvisor --> assemble\n    system --> assemble\n    assemble --> conn[TCP and UDP connections]\n    conn --> router[sing-box Router]\n    router --> direct[Direct outbound]\n    router --> proxy[Proxy outbounds]\n    router -- DNS hijack --> dns_out[DNS outbound]\n    dns_out --> dns_router[DNS router]\n    dns_router --> router\n    direct --> adi([auto detect interface])\n    proxy --> adi\n    adi --> default[Default network interface in the system]\n    default --> destination[Destination server]\n    default --> proxy_server[Proxy server]\n    proxy_server --> destination\n```\n\n----------------------------------------\n\nTITLE: Migrating Geosite Configuration to Rule Set in JSON\nDESCRIPTION: This snippet demonstrates how to migrate Geosite configuration to a rule set in sing-box. It shows the deprecated Geosite configuration and the new rule set-based configuration with a remote rule set.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/migration.zh.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"geosite\": \"cn\",\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"geosite\": {\n      \"download_detour\": \"proxy\"\n    }\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"rules\": [\n      {\n        \"rule_set\": \"geosite-cn\",\n        \"outbound\": \"direct\"\n      }\n    ],\n    \"rule_set\": [\n      {\n        \"tag\": \"geosite-cn\",\n        \"type\": \"remote\",\n        \"format\": \"binary\",\n        \"url\": \"https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-cn.srs\",\n        \"download_detour\": \"proxy\"\n      }\n    ]\n  },\n  \"experimental\": {\n    \"cache_file\": {\n      \"enabled\": true\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Build with Go Build Command\nDESCRIPTION: Direct Go build command with custom tags for enabling specific features\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/build-from-source.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngo build -tags \"tag_a tag_b\" ./cmd/sing-box\n```\n\n----------------------------------------\n\nTITLE: Formatting sing-box Configuration\nDESCRIPTION: Command to format a sing-box configuration file and directory with write option (-w) for config.json and config directory (-D).\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/index.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsing-box format -w -c config.json -D config_directory\n```\n\n----------------------------------------\n\nTITLE: Displaying TUN Inbound Options Compatibility Table in Markdown\nDESCRIPTION: A markdown table showing the availability and notes for various TUN inbound options in sing-box on Apple platforms.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/clients/apple/features.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| TUN inbound option            | Available         | Note              |\n|-------------------------------|-------------------|-------------------|\n| `interface_name`              | :material-close:️ | Managed by Darwin |\n| `inet4_address`               | :material-check:  | /                 |\n| `inet6_address`               | :material-check:  | /                 |\n| `mtu`                         | :material-check:  | /                 |\n| `gso`                         | :material-close:  | Not implemented   |\n| `auto_route`                  | :material-check:  | /                 |\n| `strict_route`                | :material-close:️ | Not implemented   |\n| `inet4_route_address`         | :material-check:  | /                 |\n| `inet6_route_address`         | :material-check:  | /                 |\n| `inet4_route_exclude_address` | :material-check:  | /                 |\n| `inet6_route_exclude_address` | :material-check:  | /                 |\n| `endpoint_independent_nat`    | :material-check:  | /                 |\n| `stack`                       | :material-check:  | /                 |\n| `include_interface`           | :material-close:️ | Not implemented   |\n| `exclude_interface`           | :material-close:️ | Not implemented   |\n| `include_uid`                 | :material-close:️ | Not implemented   |\n| `exclude_uid`                 | :material-close:️ | Not implemented   |\n| `include_android_user`        | :material-close:️ | Not implemented   |\n| `include_package`             | :material-close:️ | Not implemented   |\n| `exclude_package`             | :material-close:️ | Not implemented   |\n| `platform`                    | :material-check:  | /                 |\n```\n\n----------------------------------------\n\nTITLE: Configuring Geosite Database Settings in Sing-box JSON\nDESCRIPTION: JSON configuration structure for geosite settings in sing-box routing. Includes fields for database path, download URL, and download detour settings. This feature was removed in sing-box 1.12.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/route/geosite.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"route\": {\n    \"geosite\": {\n      \"path\": \"\",\n      \"download_url\": \"\",\n      \"download_detour\": \"\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking sing-box Configuration\nDESCRIPTION: Command to validate the sing-box configuration file.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/index.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsing-box check\n```\n\n----------------------------------------\n\nTITLE: ShadowTLS Server Configuration\nDESCRIPTION: Reference to new fallback_after configuration option added in version 1.1-beta17\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nAdded [fallback_after](/configuration/inbound/shadowtls#fallback_after) option.\n```\n\n----------------------------------------\n\nTITLE: Configuring Block Outbound in sing-box JSON\nDESCRIPTION: The configuration structure for the 'block' outbound type in sing-box. This is a simple outbound type that blocks connections with no additional configuration fields required. Note that this is deprecated as of sing-box 1.11.0 and will be removed in version 1.13.0.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/outbound/block.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"block\",\n  \"tag\": \"block\"\n}\n```\n\n----------------------------------------\n\nTITLE: Simple Build Command for sing-box\nDESCRIPTION: Basic make command to build sing-box from source\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/build-from-source.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Converting AdGuard DNS Filter to sing-box Binary Rule-Set\nDESCRIPTION: Command to convert an AdGuard DNS Filter text file to a sing-box binary rule-set file. This conversion is necessary as sing-box doesn't directly support the AdGuard format.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/adguard.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsing-box rule-set convert --type adguard [--output <file-name>.srs] <file-name>.txt\n```\n\n----------------------------------------\n\nTITLE: Simple-Obfs Module Reference\nDESCRIPTION: Reference link and version information for the simple-obfs module modified from Clash's transport implementation. Version 1.11.8 is documented.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/transport/simple-obfs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# simple-obfs\n\nmod from https://github.com/Dreamacro/clash/transport/simple-obfs\nversion: 1.11.8\n```\n\n----------------------------------------\n\nTITLE: GPL-3.0 License Declaration for Sing-box Project\nDESCRIPTION: Standard GNU General Public License v3.0 text with additional custom clause restricting derivative work naming and association. Includes copyright notice for nekohasekai and basic terms of the GPL license.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/index.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopyright (C) 2022 by nekohasekai <contact-sagernet@sekai.icu>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n\nIn addition, no derivative work may use the name or imply association\nwith this application without prior consent.\n```\n\n----------------------------------------\n\nTITLE: Merging Configuration Files Command Usage\nDESCRIPTION: Command line usage instructions for the sing-box merge command that combines configuration files and embeds resources like TLS certificates and SSH keys.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/changelog.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nMerge configurations\n\nUsage:\n  sing-box merge [output] [flags]\n\nFlags:\n  -h, --help   help for merge\n\nGlobal Flags:\n  -c, --config stringArray             set configuration file path\n  -C, --config-directory stringArray   set configuration directory path\n  -D, --directory string               set working directory\n      --disable-color                  disable color output\n```\n\n----------------------------------------\n\nTITLE: Converting AdGuard DNS Filter to sing-box Binary Rule Set\nDESCRIPTION: Command to convert an AdGuard DNS Filter text file to a sing-box binary rule set (.srs) format. This conversion is necessary for sing-box to use these rule sets efficiently.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/rule-set/adguard.zh.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsing-box rule-set convert --type adguard [--output <file-name>.srs] <file-name>.txt\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Latest sing-box Release\nDESCRIPTION: Shell command to download and install the latest sing-box package from GitHub releases for supported Linux distributions.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl -fsSL https://sing-box.app/install.sh | sh\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Latest Beta sing-box Release\nDESCRIPTION: Shell command to download and install the latest beta version of sing-box from GitHub releases.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl -fsSL https://sing-box.app/install.sh | sh -s -- --beta\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of Specific sing-box Version\nDESCRIPTION: Shell command to download and install a specific version of sing-box from GitHub releases.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl -fsSL https://sing-box.app/install.sh | sh -s -- --version <version>\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box via DNF 5 Repository\nDESCRIPTION: Commands to add the sing-box repository and install the package on Redhat-based systems using DNF 5.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf config-manager addrepo --from-repofile=https://sing-box.app/sing-box.repo &&\nsudo dnf install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: Installing sing-box on Redhat/Fedora using DNF 5\nDESCRIPTION: This snippet demonstrates how to add the sing-box repository and install sing-box using DNF 5 on Redhat-based systems. It uses the config-manager to add the repository and then installs the package.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf config-manager addrepo --from-repofile=https://sing-box.app/sing-box.repo &&\nsudo dnf install sing-box # or sing-box-beta\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of sing-box on Debian-based Systems\nDESCRIPTION: This snippet provides a one-line command to download and execute a script for manually installing sing-box on Debian-based systems. It uses curl to fetch and execute the installation script.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nbash <(curl -fsSL https://sing-box.app/deb-install.sh)\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of sing-box on Arch Linux\nDESCRIPTION: This snippet demonstrates a one-line command to download and execute a script for manually installing sing-box on Arch Linux. It uses curl to fetch and execute the Arch-specific installation script.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/installation/package-manager.zh.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbash <(curl -fsSL https://sing-box.app/arch-install.sh)\n```\n\n----------------------------------------\n\nTITLE: Installing SFM via Homebrew on macOS\nDESCRIPTION: Command to install the SFM (sing-box for macOS) application using Homebrew package manager.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/clients/apple/index.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew install sfm\n```\n\n----------------------------------------\n\nTITLE: Markdown Platform Support Table\nDESCRIPTION: A markdown table showing supported platforms and their corresponding client applications, including Android, iOS/macOS/Apple tvOS, and Desktop platforms.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/clients/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Platform                              | Client                                   |\n|---------------------------------------|------------------------------------------|\n| :material-android: Android            | [sing-box for Android](./android/)       |\n| :material-apple: iOS/macOS/Apple tvOS | [sing-box for Apple platforms](./apple/) |\n| :material-laptop: Desktop             | Working in progress                      |\n```\n\n----------------------------------------\n\nTITLE: Displaying License Information for sing-box Project\nDESCRIPTION: This code block contains the license information for the sing-box project. It specifies the copyright holder, distribution terms under GNU General Public License v3, and additional restrictions on derivative works.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nCopyright (C) 2022 by nekohasekai <contact-sagernet@sekai.icu>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n\nIn addition, no derivative work may use the name or imply association\nwith this application without prior consent.\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Default AnyTLS Padding Scheme\nDESCRIPTION: This snippet shows the default padding scheme for AnyTLS. It defines various stop points and padding ranges for different scenarios.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/anytls.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nstop=8\n0=30-30\n1=100-400\n2=400-500,c,500-1000,c,500-1000,c,500-1000,c,500-1000\n3=9-9,500-1000\n4=500-1000\n5=500-1000\n6=500-1000\n7=500-1000\n```\n\n----------------------------------------\n\nTITLE: Configuring platform-specific HTTP proxy settings in YAML\nDESCRIPTION: Sets up system-wide HTTP proxy settings, including server address, port, and domain bypass rules. Some options are platform-specific.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplatform:\n  http_proxy:\n    enabled: true\n    server: 127.0.0.1\n    server_port: 8080\n    bypass_domain:\n      - example.com\n      - *.example.org\n    match_domain:\n      - google.com\n```\n\n----------------------------------------\n\nTITLE: Setting interface inclusion/exclusion in YAML\nDESCRIPTION: Configures which network interfaces to include or exclude in routing. These options are mutually exclusive and only supported on Linux with auto_route enabled.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ninclude_interface:\n  - eth0\n  - wlan0\n\n# OR\n\nexclude_interface:\n  - docker0\n  - virbr0\n```\n\n----------------------------------------\n\nTITLE: Setting Android-specific routing options in YAML\nDESCRIPTION: Configures routing rules specific to Android, including Android user IDs and package names for inclusion or exclusion.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/inbound/tun.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ninclude_android_user:\n  - 0\n  - 10\ninclude_package:\n  - com.example.app1\n  - com.example.app2\nexclude_package:\n  - com.example.app3\n```\n\n----------------------------------------\n\nTITLE: Base DNS Provider Structure\nDESCRIPTION: The base JSON structure for configuring a DNS provider, showing the required 'provider' field.\nSOURCE: https://github.com/sagernet/sing-box/blob/dev-next/docs/configuration/shared/dns01_challenge.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"provider\": \"\",\n  \n  ... // Provider Fields\n}\n```"
  }
]
[
  {
    "owner": "jj-vcs",
    "repo": "jj",
    "content": "TITLE: Adding a Commit Description in Jujutsu\nDESCRIPTION: Demonstrates how to add a description (commit message) to the current change using the 'jj describe' command. This opens an editor for entering the description.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ jj describe\nWorking copy  (@) now at: kntqzsqt e427edcf (empty) Say goodbye\nParent commit (@-)      : orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\n```\n\n----------------------------------------\n\nTITLE: Resolving Conflicts in Jujutsu\nDESCRIPTION: Illustrates the process of resolving conflicts after a rebase operation, including creating a new commit, editing the conflicted file, and squashing the resolution.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new puqltutt  # Replace the ID by what you have for B2\nWorking copy  (@) now at: zxoosnnp c7068d1c (conflict) (empty) (no description set)\nParent commit (@-)      : puqltutt f7fb5943 (conflict) B2\nAdded 0 files, modified 0 files, removed 1 files\nThere are unresolved conflicts at these paths:\nfile1    2-sided conflict\n\n$ jj st\nThe working copy has no changes.\nThere are unresolved conflicts at these paths:\nfile1    2-sided conflict\nWorking copy  (@) : zxoosnnp c7068d1c (conflict) (empty) (no description set)\nParent commit (@-): puqltutt f7fb5943 (conflict) B2\nTo resolve the conflicts, start by updating to it:\n  jj new puqltutt\nThen use `jj resolve`, or edit the conflict markers in the file directly.\nOnce the conflicts are resolved, you may want to inspect the result with `jj diff`.\nThen run `jj squash` to move the resolution into the conflicted commit.\n\n$ cat file1\n<<<<<<< Conflict 1 of 1\n%%%%%%% Changes from base to side #1\n-b1\n+a\n+++++++ Contents of side #2\nb2\n>>>>>>> Conflict 1 of 1 ends\n\n$ echo resolved > file1\n\n$ jj st\nWorking copy changes:\nM file1\nWorking copy  (@) : zxoosnnp c2a31a06 (no description set)\nParent commit (@-): puqltutt f7fb5943 (conflict) B2\nConflict in parent commit has been resolved in working copy\n\n$ jj squash\nRebased 1 descendant commits\nWorking copy  (@) now at: ntxxqymr e3c279cc (empty) (no description set)\nParent commit (@-)      : puqltutt 2c7a658e B2\nExisting conflicts were resolved or abandoned from these commits:\n  qzvqqupx hidden 1978b534 (conflict) C\n  puqltutt hidden f7fb5943 (conflict) B2\n\n$ jj log\n@  ntxxqymr martinvonz@google.com 2023-02-12 19:34:09.000 -08:00 e3c279cc\n│  (empty) (no description set)\n│ ◉  qzvqqupx martinvonz@google.com 2023-02-12 19:34:09.000 -08:00 b9da9d28\n├─╯  C\n◉  puqltutt martinvonz@google.com 2023-02-12 19:34:09.000 -08:00 2c7a658e\n│  B2\n│ ◉  ovknlmro martinvonz@google.com 2023-02-12 15:07:24.000 -08:00 7d7c6e6b\n├─╯  B1\n◉  nuvyytnq martinvonz@google.com 2023-02-12 15:07:05.000 -08:00 5dda2f09\n│  A\n│ ◉  kntqzsqt martinvonz@google.com 2023-02-12 14:56:59.000 -08:00 5d39e19d\n├─╯  Say goodbye\n│ ◉  tpstlust support+octocat@github.com 2018-05-10 12:55:19.000 -05:00 octocat-patch-1@origin b1b3f972\n├─╯  sentence case\n│ ◉  kowxouwz octocat@nowhere.com 2014-06-10 15:22:26.000 -07:00 test@origin b3cbd5bb\n├─╯  Create CONTRIBUTING.md\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: Making Changes and Checking Status in Jujutsu\nDESCRIPTION: Shows how to make changes to a file and check the status using 'jj st'. This demonstrates how Jujutsu automatically tracks file modifications without explicit add commands.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ sed -i 's/Hello/Goodbye/' README\n$ jj st\nWorking copy changes:\nM README\nWorking copy  (@) : kntqzsqt 5d39e19d Say goodbye\nParent commit (@-): orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\n```\n\n----------------------------------------\n\nTITLE: Development Environment Setup Commands for Jujutsu\nDESCRIPTION: Series of shell commands for setting up a complete development environment for Jujutsu, including installing the nightly Rust toolchain and necessary cargo tools like bacon, cargo-insta, and cargo-nextest.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nrustup toolchain add nightly  # wanted for 'rustfmt'\nrustup toolchain add 1.84     # also specified in Cargo.toml\ncargo install --locked bacon\ncargo install --locked cargo-insta\ncargo install --locked cargo-nextest\n```\n\n----------------------------------------\n\nTITLE: Cloning a Git Repository with Jujutsu\nDESCRIPTION: Demonstrates how to clone a Git repository using the Jujutsu 'jj git clone' command. This creates a new Jujutsu repository based on the Git remote.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ jj git clone https://github.com/octocat/Hello-World\nFetching into new repo in \"/tmp/tmp.O1DWMiaKd4/Hello-World\"\nbookmark: master@origin          [new] untracked\nbookmark: octocat-patch-1@origin [new] untracked\nbookmark: test@origin            [new] untracked\nSetting the revset alias \"trunk()\" to \"master@origin\"\nWorking copy  (@) now at: kntqzsqt d7439b06 (empty) (no description set)\nParent commit (@-)      : orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\nAdded 1 files, modified 0 files, removed 0 files\n$ cd Hello-World\n```\n\n----------------------------------------\n\nTITLE: Creating Commits in Jujutsu\nDESCRIPTION: Demonstrates how to create a series of commits using the jj new command, modifying files, and viewing the commit log.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new master -m A; echo a > file1\nWorking copy  (@) now at: nuvyytnq 00a2aeed (empty) A\nParent commit (@-)      : orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\nAdded 0 files, modified 1 files, removed 0 files\n$ jj new -m B1; echo b1 > file1\nWorking copy  (@) now at: ovknlmro 967d9f9f (empty) B1\nParent commit (@-)      : nuvyytnq 5dda2f09 A\n$ jj new -m B2; echo b2 > file1\nWorking copy  (@) now at: puqltutt 8ebeaffa (empty) B2\nParent commit (@-)      : ovknlmro 7d7c6e6b B1\n$ jj new -m C; echo c > file2\nWorking copy  (@) now at: qzvqqupx 62a3c6d3 (empty) C\nParent commit (@-)      : puqltutt daa6ffd5 B2\n$ jj log\n@  qzvqqupx martinvonz@google.com 2023-02-12 15:07:41.946 -08:00 2370ddf3\n│  C\n◉  puqltutt martinvonz@google.com 2023-02-12 15:07:33.000 -08:00 daa6ffd5\n│  B2\n◉  ovknlmro martinvonz@google.com 2023-02-12 15:07:24.000 -08:00 7d7c6e6b\n│  B1\n◉  nuvyytnq martinvonz@google.com 2023-02-12 15:07:05.000 -08:00 5dda2f09\n│  A\n│ ◉  kntqzsqt martinvonz@google.com 2023-02-12 14:56:59.000 -08:00 5d39e19d\n├─╯  Say goodbye\n│ ◉  tpstlust support+octocat@github.com 2018-05-10 12:55:19.000 -05:00 octocat-patch-1@origin b1b3f972\n├─╯  sentence case\n│ ◉  kowxouwz octocat@nowhere.com 2014-06-10 15:22:26.000 -07:00 test@origin b3cbd5bb\n├─╯  Create CONTRIBUTING.md\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: Addressing Review Comments by Adding New Commits\nDESCRIPTION: Demonstrates how to address review comments by adding new commits on top of existing work in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ # Create a new commit on top of the `your-feature` bookmark from above.\n$ jj new your-feature\n$ # Address the comments by updating the code. Then review the changes.\n$ jj diff\n$ # Give the fix a description and create a new working-copy on top.\n$ jj commit -m 'address pr comments'\n$ # Update the bookmark to point to the new commit.\n$ jj bookmark move your-feature --to @-\n$ # Push it to your remote\n$ jj git push\n```\n\n----------------------------------------\n\nTITLE: Repository Creation Commands\nDESCRIPTION: Commands for initializing and cloning repositories in Git and Jujutsu\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit init\njj git init [--colocate]\n\ngit clone <source> <destination> [--origin <remote name>]\njj git clone <source> <destination> [--remote <remote name>]\n```\n\n----------------------------------------\n\nTITLE: Installing jj with cargo-binstall\nDESCRIPTION: Installs the latest release of jj using cargo-binstall, which downloads pre-compiled binaries from GitHub rather than building from source.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Will put the jj binary for the latest release in ~/.cargo/bin by default\ncargo binstall --strategies crate-meta-data jj-cli\n```\n\n----------------------------------------\n\nTITLE: Configuring user name and email for jj\nDESCRIPTION: Sets the user name and email in jj's configuration, which will be used for authoring commits.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_17\n\nLANGUAGE: shell\nCODE:\n```\n$ jj config set --user user.name \"Martin von Zweigbergk\"\n$ jj config set --user user.email \"martinvonz@google.com\"\n```\n\n----------------------------------------\n\nTITLE: Manually Tracking a Remote Bookmark in Jujutsu\nDESCRIPTION: This snippet demonstrates how to track a remote bookmark in Jujutsu, making it sync with a local bookmark. The process involves listing all bookmarks, identifying the desired bookmark, tracking it, and then fetching from the remote to update it locally.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ # List all available bookmarks, as we want our colleague's bookmark.\n$ jj bookmark list --all\n$ # Find the bookmark.\n$ # [...]\n$ # Actually track the bookmark.\n$ jj bookmark track <bookmark name>@<remote name> # Example: jj bookmark track my-feature@origin\n$ # From this point on, <bookmark name> will be imported when fetching from <remote name>.\n$ jj git fetch --remote <remote name>\n$ # A local bookmark <bookmark name> should have been created or updated while fetching.\n$ jj new <bookmark name> # Do some local testing, etc.\n```\n\n----------------------------------------\n\nTITLE: User Configuration Settings in TOML\nDESCRIPTION: Basic user configuration settings including name and email\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[user]\nname = \"YOUR NAME\"\nemail = \"YOUR_EMAIL@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New Change in Jujutsu\nDESCRIPTION: Shows how to create a new change using the 'jj new' command. This creates a new commit on top of the current working-copy commit.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new\nWorking copy  (@) now at: mpqrykyp aef4df99 (empty) (no description set)\nParent commit (@-)      : kntqzsqt 5d39e19d Say goodbye\n$ jj st\nThe working copy has no changes.\nWorking copy  (@) : mpqrykyp aef4df99 (empty) (no description set)\nParent commit (@-): kntqzsqt 5d39e19d Say goodbye\n```\n\n----------------------------------------\n\nTITLE: Showing Diff Excluding Cargo.lock in Jujutsu VCS (Shell)\nDESCRIPTION: This command uses the jj diff command with a fileset expression to show differences for all files except Cargo.lock.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/filesets.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\njj diff '~Cargo.lock'\n```\n\n----------------------------------------\n\nTITLE: Recommended Development Workflow Commands for Jujutsu\nDESCRIPTION: Common commands used during Jujutsu development including running clippy for linting, formatting code with rustfmt, and running tests with nextest and insta for snapshot testing.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbacon clippy-all\ncargo +nightly fmt # Occasionally\ncargo nextest run --workspace # Occasionally\ncargo insta test --workspace --test-runner nextest # Occasionally\n```\n\n----------------------------------------\n\nTITLE: Using Revsets in Jujutsu Log\nDESCRIPTION: Shows how to use revsets with the 'jj log' command to filter and select specific commits to display. This example uses the '-r' flag with a revset expression.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ jj log -r '@ | root() | bookmarks()'\n@  mpqrykyp martinvonz@google.com 2023-02-12 15:00:22.000 -08:00 aef4df99\n╷  (empty) (no description set)\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n╷  (empty) Merge pull request #6 from Spaceghost/patch-1\n◉  zzzzzzzz root() 00000000\n```\n\n----------------------------------------\n\nTITLE: Viewing Commit History in Jujutsu\nDESCRIPTION: Command to view the commit history in Jujutsu, showing change IDs, author information, timestamps, and commit messages.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ jj log\n@  xxxxxxxx me@example.com 2024-08-21 11:13:21 ef612875\n│  Add new feature\n◉  yyyyyyyy me@example.com 2024-08-21 11:13:09 main b624cf12\n│  Existing work\n~\n```\n\n----------------------------------------\n\nTITLE: Remote Repository Operations\nDESCRIPTION: Commands for fetching, pushing, and managing remote repositories\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit fetch [<remote>]\njj git fetch [--remote <remote>]\n\ngit push --all [<remote>]\njj git push --all [--remote <remote>]\n\ngit push <remote> <bookmark name>\njj git push --bookmark <bookmark name> [--remote <remote>]\n\ngit remote add <remote> <url>\njj git remote add <remote> <url>\n```\n\n----------------------------------------\n\nTITLE: Listing Files in src Directory Excluding Rust Sources in Jujutsu VCS (Shell)\nDESCRIPTION: This command lists files in the src directory, excluding Rust source files (*.rs) using a combination of fileset patterns and operators.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/filesets.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\njj file list 'src ~ glob:\"**/*.rs\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring Delta Formatter with Git-style Diffs in JJ\nDESCRIPTION: Sets up the Delta diff formatter as the pager and configures JJ to output git-style diffs for better compatibility with the formatter. This combination provides enhanced diff visualization.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\npager = \"delta\"\n\n[ui.diff]\nformat = \"git\"\n```\n\n----------------------------------------\n\nTITLE: Interactively Squashing Changes in jj\nDESCRIPTION: Demonstrates using the interactive squash feature to selectively move changes from one commit to its parent, allowing for a cleaner commit history.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\n$ jj squash -i\nHint: Using default editor ':builtin'; run `jj config set --user ui.diff-editor :builtin` to disable this message.\nRebased 1 descendant commits\nWorking copy  (@) now at: mrxqplyk 52a6c7fd ABCD\nParent commit (@-)      : kwtuwqnm 643061ac ABC\n```\n\n----------------------------------------\n\nTITLE: Commit and Log Commands\nDESCRIPTION: Commands for managing commits and viewing history\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -a\njj commit\n\ngit log --oneline --graph --decorate\njj log -r ::@\n\ngit log --oneline --graph --decorate --branches\njj log -r 'all()' or jj log -r ::\n```\n\n----------------------------------------\n\nTITLE: Splitting a Revision Excluding 'foo' File in Jujutsu VCS (Shell)\nDESCRIPTION: This command splits a revision into two commits, with the second commit containing only the 'foo' file, using the fileset negation operator.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/filesets.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\njj split '~foo'\n```\n\n----------------------------------------\n\nTITLE: Installing jj with Homebrew\nDESCRIPTION: Installs the latest release of jj using the Homebrew package manager on macOS or Linux.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n# Installs the latest release\nbrew install jj\n```\n\n----------------------------------------\n\nTITLE: Configuring GnuPG signing for commits in Jujutsu\nDESCRIPTION: This TOML configuration sets up GnuPG signing for commits. It specifies the signing behavior, backend, and optionally the signing key.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_38\n\nLANGUAGE: toml\nCODE:\n```\n[signing]\nbehavior = \"own\"\nbackend = \"gpg\"\n## You can set `key` to anything accepted by `gpg -u`\n## If not set then defaults to the key associated with `user.email`\n# key = \"4ED556E9729E000F\"\n# key = \"signing@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Rebasing Commits in Jujutsu\nDESCRIPTION: Shows how to rebase a commit and its descendants onto a different parent using the jj rebase command, and demonstrates handling of conflicts.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ jj rebase -s puqltutt -d nuvyytnq  # Replace the IDs by what you have for B2 and A\nRebased 2 commits\nWorking copy  (@) now at: qzvqqupx 1978b534 (conflict) C\nParent commit (@-)      : puqltutt f7fb5943 (conflict) B2\nAdded 0 files, modified 1 files, removed 0 files\nThere are unresolved conflicts at these paths:\nfile1    2-sided conflict\nNew conflicts appeared in these commits:\n  qzvqqupx 1978b534 (conflict) C\n  puqltutt f7fb5943 (conflict) B2\nTo resolve the conflicts, start by updating to the first one:\n  jj new puqltuttzvly\nThen use `jj resolve`, or edit the conflict markers in the file directly.\nOnce the conflicts are resolved, you may want to inspect the result with `jj diff`.\nThen run `jj squash` to move the resolution into the conflicted commit.\n\n$ jj log\n@  qzvqqupx martinvonz@google.com 2023-02-12 15:08:33.000 -08:00 1978b534 conflict\n│  C\n◉  puqltutt martinvonz@google.com 2023-02-12 15:08:33.000 -08:00 f7fb5943 conflict\n│  B2\n│ ◉  ovknlmro martinvonz@google.com 2023-02-12 15:07:24.000 -08:00 7d7c6e6b\n├─╯  B1\n◉  nuvyytnq martinvonz@google.com 2023-02-12 15:07:05.000 -08:00 5dda2f09\n│  A\n│ ◉  kntqzsqt martinvonz@google.com 2023-02-12 14:56:59.000 -08:00 5d39e19d\n├─╯  Say goodbye\n│ ◉  tpstlust support+octocat@github.com 2018-05-10 12:55:19.000 -05:00 octocat-patch-1@origin b1b3f972\n├─╯  sentence case\n│ ◉  kowxouwz octocat@nowhere.com 2014-06-10 15:22:26.000 -07:00 test@origin b3cbd5bb\n├─╯  Create CONTRIBUTING.md\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: List Bookmarks/Branches\nDESCRIPTION: Commands to list all bookmarks/branches in the repository\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit branch\n```\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark list\n```\n\nLANGUAGE: bash\nCODE:\n```\njj b l\n```\n\n----------------------------------------\n\nTITLE: Viewing Diff in Jujutsu\nDESCRIPTION: Demonstrates how to view the diff of changes using the 'jj diff' command with the '--git' flag to display the diff in a Git-like format.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ jj diff --git\ndiff --git a/README b/README\nindex 980a0d5f19...1ce3f81130 100644\n--- a/README\n+++ b/README\n@@ -1,1 +1,1 @@\n-Hello World!\n+Goodbye World!\n```\n\n----------------------------------------\n\nTITLE: Status and Diff Commands\nDESCRIPTION: Commands for viewing repository status and comparing changes\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit status\njj st\n\ngit diff HEAD\njj diff\n\ngit diff <revision>^ <revision>\njj diff -r <revision>\n\ngit diff <revision>\njj diff --from <revision>\n\ngit diff A B\njj diff --from A --to B\n\ngit diff A...B\njj diff -r A..B\n```\n\n----------------------------------------\n\nTITLE: Defining Simple Command Aliases in JJ\nDESCRIPTION: Creates a shorthand alias 'l' for a complex log command that shows commits on the working copy's bookmark compared to the main bookmark. Demonstrates how to create aliases for JJ commands with arguments.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_23\n\nLANGUAGE: toml\nCODE:\n```\n[aliases]\n# `jj l` shows commits on the working-copy commit's (anonymous) bookmark\n# compared to the `main` bookmark\nl = [\"log\", \"-r\", \"(main..@):: | (main..@)-\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring User Details with Conditional Scopes in JJ (TOML)\nDESCRIPTION: Demonstrates using conditional scopes to set different user email addresses based on repository location and override UI settings for specific commands.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_54\n\nLANGUAGE: toml\nCODE:\n```\n[user]\nname = \"YOUR NAME\"\nemail = \"YOUR_DEFAULT_EMAIL@example.com\"\n\n[[--scope]]\n--when.repositories = [\"~/oss\"]\n[--scope.user]\nemail = \"YOUR_OSS_EMAIL@example.org\"\n\n[[--scope]]\n--when.commands = [\"status\"]\n[--scope.ui]\npaginate = \"never\"\n[[--scope]]\n--when.commands = [\"diff\", \"show\"]\n[--scope.ui]\npager = \"delta\"\n```\n\n----------------------------------------\n\nTITLE: Using the Operation Log in Jujutsu\nDESCRIPTION: Demonstrates how to view the operation log using jj op log, and how to undo operations using jj undo. Shows the effects of undoing a squash operation.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n$ jj op log\n@  d3b77addea49 martinvonz@vonz.svl.corp.google.com 3 minutes ago, lasted 3 milliseconds\n│  squash commit 63874fe6c4fba405ffc38b0dd926f03b715cf7ef\n│  args: jj squash\n◉  6fc1873c1180 martinvonz@vonz.svl.corp.google.com 3 minutes ago, lasted 1 milliseconds\n│  snapshot working copy\n│  args: jj squash\n◉  ed91f7bcc1fb martinvonz@vonz.svl.corp.google.com 6 minutes ago, lasted 1 milliseconds\n│  new empty commit\n│  args: jj new puqltutt\n◉  367400773f87 martinvonz@vonz.svl.corp.google.com 12 minutes ago, lasted 3 milliseconds\n│  rebase commit daa6ffd5a09a8a7d09a65796194e69b7ed0a566d and descendants\n│  args: jj rebase -s puqltutt -d nuvyytnq\n[many more lines]\n\n$ jj undo\nNew conflicts appeared in these commits:\n  qzvqqupx 1978b534 (conflict) C\n  puqltutt f7fb5943 (conflict) B2\nTo resolve the conflicts, start by updating to the first one:\n  jj new puqltuttzvly\nThen use `jj resolve`, or edit the conflict markers in the file directly.\nOnce the conflicts are resolved, you may want to inspect the result with `jj diff`.\nThen run `jj squash` to move the resolution into the conflicted commit.\nWorking copy  (@) now at: zxoosnnp 63874fe6 (no description set)\nParent commit (@-)      : puqltutt f7fb5943 (conflict) B2\n\n$ jj log\n@  zxoosnnp martinvonz@google.com 2023-02-12 19:34:09.000 -08:00 63874fe6\n│  (no description set)\n│ ◉  qzvqqupx martinvonz@google.com 2023-02-12 15:08:33.000 -08:00 1978b534 conflict\n├─╯  C\n◉  puqltutt martinvonz@google.com 2023-02-12 15:08:33.000 -08:00 f7fb5943 conflict\n│  B2\n│ ◉  ovknlmro martinvonz@google.com 2023-02-12 15:07:24.000 -08:00 7d7c6e6b\n├─╯  B1\n◉  nuvyytnq martinvonz@google.com 2023-02-12 15:07:05.000 -08:00 5dda2f09\n│  A\n│ ◉  kntqzsqt martinvonz@google.com 2023-02-12 14:56:59.000 -08:00 5d39e19d\n├─╯  Say goodbye\n│ ◉  tpstlust support+octocat@github.com 2018-05-10 12:55:19.000 -05:00 octocat-patch-1@origin b1b3f972\n├─╯  sentence case\n│ ◉  kowxouwz octocat@nowhere.com 2014-06-10 15:22:26.000 -07:00 test@origin b3cbd5bb\n├─╯  Create CONTRIBUTING.md\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: Resolving Local Bookmark Conflicts in Jujutsu\nDESCRIPTION: Provides commands for resolving conflicts in local bookmarks, including moving bookmarks, creating new revisions, and rebasing.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n`jj bookmark move`\n`jj new 'all:main'`\n`jj rebase`\n```\n\n----------------------------------------\n\nTITLE: Checking Status in Jujutsu\nDESCRIPTION: Shows how to check the status of the working copy and parent commit using the 'jj st' command. This displays information about the current change and its parent.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ jj st\nThe working copy has no changes.\nWorking copy  (@) : kntqzsqt d7439b06 (empty) (no description set)\nParent commit (@-): orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\n```\n\n----------------------------------------\n\nTITLE: File Management Commands\nDESCRIPTION: Commands for managing files in the repository\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntouch filename; git add filename\ntouch filename\n\ngit rm filename\nrm filename\n\necho stuff >> filename\necho stuff >> filename\n```\n\n----------------------------------------\n\nTITLE: Creating Advanced Command Aliases with External Scripts in JJ\nDESCRIPTION: Demonstrates how to create more powerful aliases that can execute external scripts or run multiple commands. Uses the 'util exec' command to execute arbitrary shell commands or scripts as JJ aliases.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_24\n\nLANGUAGE: toml\nCODE:\n```\n[aliases]\nmy-script = [\"util\", \"exec\", \"--\", \"my-jj-script\"]\n#                            ^^^^\n# This makes sure that flags are passed to your script instead of parsed by jj.\nmy-inline-script = [\"util\", \"exec\", \"--\", \"bash\", \"-c\", \"\"\"\n#!/usr/bin/env bash\nset -euo pipefail\necho \"Look Ma, everything in one file!\"\necho \"args: $@\"\n\"\"\", \"\"]\n#    ^^\n# This last empty string will become \"$0\" in bash, so your actual arguments\n# are all included in \"$@\" and start at \"$1\" as expected.\n```\n\n----------------------------------------\n\nTITLE: Addressing Review Comments by Amending Existing Commit\nDESCRIPTION: Shows how to address review comments by amending the existing commit without creating a new one in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ # Create a new commit on top of the `your-feature` bookmark from above.\n$ jj new your-feature\n$ # Address the comments by updating the code. Then review the changes.\n$ jj diff\n$ # Give the fix a description.\n$ jj describe -m 'address pr comments'\n$ # Update the bookmark to point to the current commit.\n$ jj bookmark move your-feature --to @\n$ # Push it to your remote\n$ jj git push\n```\n\n----------------------------------------\n\nTITLE: Creating a New Change and Viewing Current State in Jujutsu\nDESCRIPTION: This snippet shows how to view the current state of a repository with 'jj log' and then create a new empty child commit with 'jj new'. The new commit inherits the contents of its parent commit.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n$ jj log\n@  lnvvtrzo jjfan@example.org 2025-02-28 21:01:10 31a347e0\n│  featureA\n◆  zzzzzzzz root() 00000000\n```\n\nLANGUAGE: console\nCODE:\n```\n$ jj new -m \"featureB\"\nWorking copy  (@) now at: pvnrkl 47171aa (empty) featureB\nParent commit (@-)      : lnvvtr 31a347e featureA\n$ cat file\nDone with feature A\nWorking on feature B\n```\n\n----------------------------------------\n\nTITLE: Creating New Commits with Insert Options in Jujutsu\nDESCRIPTION: Commands to insert new commits after or between existing commits using the --insert-after and --insert-before options, which help maintain a clean commit history.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n# Insert a new commit after xxxxxxxx\n$ jj new --no-edit -A xxxxxxxx -m \"Another feature\"\nWorking copy  (@) now at: uuuuuuuu 1c3cff09 (empty) Another feature\nParent commit (@-)      : xxxxxxxx ef612875 Add new feature\n\n# Insert a new commit between yyyyyyyy and vvvvvvvv\n$ jj new --no-edit -A yyyyyyyy -B vvvvvvvv -m \"Yet another feature\"\nWorking copy  (@) now at: tttttttt 938ab831 (empty) Yet another feature\nParent commit (@-)      : yyyyyyyy b624cf12 Existing work\n```\n\n----------------------------------------\n\nTITLE: Move Branch/Bookmark Forward\nDESCRIPTION: Commands to move a branch or bookmark to a new revision\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngit branch -f <name> <revision>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark move <name> --to <revision>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj b m <name> --to <revision>\n```\n\n----------------------------------------\n\nTITLE: Default Command Configuration\nDESCRIPTION: Setting the default command when running jj without explicit subcommand\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\ndefault-command = [\"log\", \"--reversed\"]\n```\n\n----------------------------------------\n\nTITLE: Using Diffedit to Edit Changes Without Checkout in jj\nDESCRIPTION: Demonstrates using the diffedit command to modify changes in a commit without checking it out, which may result in conflicts that need to be resolved.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\n$ jj diffedit -r @-\nHint: Using default editor ':builtin'; run `jj config set --user ui.diff-editor :builtin` to disable this message.\nCreated kwtuwqnm 70985eaa (empty) ABC\nRebased 1 descendant commits\nWorking copy  (@) now at: mrxqplyk 1c72cd50 (conflict) ABCD\nParent commit (@-)      : kwtuwqnm 70985eaa (empty) ABC\nAdded 0 files, modified 1 files, removed 0 files\nThere are unresolved conflicts at these paths:\nfile    2-sided conflict\nNew conflicts appeared in these commits:\n  mrxqplyk 1c72cd50 (conflict) ABCD\nTo resolve the conflicts, start by updating to it:\n  jj new mrxqplykmyqv\nThen use `jj resolve`, or edit the conflict markers in the file directly.\nOnce the conflicts are resolved, you may want to inspect the result with `jj diff`.\nThen run `jj squash` to move the resolution into the conflicted commit.\n```\n\n----------------------------------------\n\nTITLE: Working in Git Co-located Repository with Jujutsu\nDESCRIPTION: Demonstrates how to work in a Git co-located repository using Jujutsu commands.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ nvim docs/tutorial.md\n$ # Do some more work.\n$ jj commit -m \"Update tutorial\"\n# Create a bookmark on the working-copy commit's parent\n$ jj bookmark create doc-update -r @-\n$ jj git push --allow-new\n```\n\n----------------------------------------\n\nTITLE: Create Branch/Bookmark\nDESCRIPTION: Commands to create a new branch or bookmark at a specified revision\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit branch <name> <revision>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark create <name> -r <revision>\n```\n\n----------------------------------------\n\nTITLE: Showing Parent of Working Copy Commit\nDESCRIPTION: Shell command to show the parent(s) of the working-copy commit, similar to 'git log -1 HEAD'.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\njj log -r @-\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Text Editors in JJ\nDESCRIPTION: Sets the default text editor used for commit messages and other text editing operations in JJ. Shows examples for configuring console-based editors like Pico and NeoVim.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_25\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\neditor = \"pico\"\n```\n\n----------------------------------------\n\nTITLE: Installing jj on Arch Linux with pacman\nDESCRIPTION: Installs the Jujutsu package from the official Arch Linux repositories using pacman.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npacman -S jujutsu\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Remotes with Jujutsu\nDESCRIPTION: Shows how to set up and use multiple remotes (upstream and origin) with Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ jj git clone --remote upstream https://github.com/upstream-org/repo\n$ cd repo\n$ jj git remote add origin git@github.com:your-org/your-repo-fork\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Template Usage in Jujutsu Commands\nDESCRIPTION: Shows how to use templates with Jujutsu commands via the -T/--template option.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nA couple of `jj` commands accept a template via `-T`/`--template` option.\n```\n\n----------------------------------------\n\nTITLE: Resolving Remote Bookmark Conflicts in Jujutsu\nDESCRIPTION: Shows how to resolve conflicts in remote bookmarks by fetching from the remote repository.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n`jj git fetch`\n```\n\n----------------------------------------\n\nTITLE: Reachable Function Examples\nDESCRIPTION: Examples showing the output of the reachable() function with different inputs on the sample commit graph.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nreachable(E, A..) ⇒ {E,D,C,B}\nreachable(D, A..) ⇒ {E,D,C,B}\nreachable(C, A..) ⇒ {E,D,C,B}\nreachable(B, A..) ⇒ {E,D,C,B}\nreachable(A, A..) ⇒ {}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Revset Aliases in TOML Configuration\nDESCRIPTION: Shows how to define custom revset aliases in the TOML configuration file, including a simple HEAD alias and overloaded user functions with different parameter counts.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[revset-aliases]\n'HEAD' = '@-'\n'user()' = 'user(\"me@example.org\")'\n'user(x)' = 'author(x) | committer(x)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Line Endings and Resetting Working Copy in Jujutsu on Windows\nDESCRIPTION: Sets Git's line ending behavior to 'input' mode and then abandons the working copy in Jujutsu to ensure consistent LF line endings. This helps Windows users manage line ending differences between Git and Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/windows.md#2025-04-17_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nPS> git config core.autocrlf input\n\n# Abandoning the working copy will cause Jujutsu to overwrite all files with\n# CRLF line endings with the line endings they are committed with, probably LF\nPS> jj abandon\n```\n\n----------------------------------------\n\nTITLE: Displaying Elided Revisions in Jujutsu Log\nDESCRIPTION: This snippet demonstrates how to view elided revisions in jj log output by using the connected() revset function. It shows the difference between a basic log command and one that displays connecting revisions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$  jj log -r 'tyl|mus'\n○  musnqzvt me@example.com 1 minute ago 9a09f8a5\n│  Revision C\n~  (elided revisions)\n○  tylynnzk me@example.com 1 minute ago f26967c8\n│  Revision A\n```\n\nLANGUAGE: sh\nCODE:\n```\n$ jj log -r 'connected(tyl|mus)'\n○  musnqzvt me@example.com 43 seconds ago 9a09f8a5\n│  Revision C\n○  rsvnrznr me@example.com 43 seconds ago 5b490f30\n│  Revision B\n○  tylynnzk me@example.com 43 seconds ago f26967c8\n│  Revision A\n```\n\n----------------------------------------\n\nTITLE: Verifying the Final State After Restore with Log and Diff in Jujutsu\nDESCRIPTION: This snippet demonstrates how to verify the final state after a restore operation using 'jj log -p --git' to view commits with patches, and 'jj diff' to compare specific revisions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_14\n\nLANGUAGE: console\nCODE:\n```\n$ jj log -p --git\n@  pvnrklkn jjfan@example.org 2025-02-28 21:39:29 468104c2\n│  featureB\n│  diff --git a/file b/file\n│  index 2b455c4207..2a7e05a01a 100644\n│  --- a/file\n│  +++ b/file\n│  @@ -1,1 +1,2 @@\n│   Done with feature A\n│  +Working on feature B\n○  lnvvtrzo jjfan@example.org 2025-02-28 21:39:29 599994ee\n│  featureA\n│  diff --git a/file b/file\n│  new file mode 100644\n│  index 0000000000..2b455c4207\n│  --- /dev/null\n│  +++ b/file\n│  @@ -0,0 +1,1 @@\n│  +Done with feature A\n◆  zzzzzzzz root() 00000000\n$ jj diff --from b80 --to @- # No output means these are identical\n$ jj diff --from 31a --to @  # No output means these are identical\n```\n\n----------------------------------------\n\nTITLE: Configuring Revset Aliases in TOML\nDESCRIPTION: Example of creating custom revset aliases in JJ's configuration file to define reusable revset expressions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\nrevset-aliases.<name> = <expression>\n```\n\n----------------------------------------\n\nTITLE: Defining Template Aliases in TOML Configuration\nDESCRIPTION: Example showing how to define custom template aliases in the JJ configuration file. This snippet demonstrates defining a 'commit_change_ids' template and a 'format_field' function alias that can be used in templates.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[template-aliases]\n'commit_change_ids' = '''\nconcat(\n  format_field(\"Commit ID\", commit_id),\n  format_field(\"Change ID\", change_id),\n)\n'''\n'format_field(key, value)' = 'key ++ \": \" ++ value ++ \"\\n\"'\n```\n\n----------------------------------------\n\nTITLE: Configuring rustfmt with jj fix command\nDESCRIPTION: Shell command to configure the jj fix tool to automatically run rustfmt with the nightly toolchain on all Rust files in the repository.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\njj config set --repo fix.tools.rustfmt '{ command = [\"rustfmt\", \"+nightly\"], patterns = [\"glob:**/*.rs\"] }'\n```\n\n----------------------------------------\n\nTITLE: Showing All Ancestors of Working Copy\nDESCRIPTION: Shell command to show all ancestors of the working copy, similar to plain 'git log'.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\njj log -r ::@\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Fetch Remotes in Jujutsu\nDESCRIPTION: Shows how to configure Jujutsu to fetch from multiple remotes by default.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nfetch = [\"upstream\", \"origin\"]\npush = \"origin\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Watchman for Filesystem Monitoring\nDESCRIPTION: TOML configuration to enable background filesystem monitoring using watchman triggers.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\ncore.watchman.register_snapshot_trigger = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Merge Tools in JJ\nDESCRIPTION: TOML configuration for setting up custom merge tools in JJ. It shows the default configurations for kdiff3, meld, and vimdiff, demonstrating how to specify the program path, merge arguments, and special behavior flags.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_32\n\nLANGUAGE: toml\nCODE:\n```\n[merge-tools.kdiff3]\n# program  = \"kdiff3\"     # Defaults to the name of the tool if not specified\nmerge-args = [\"$base\", \"$left\", \"$right\", \"-o\", \"$output\", \"--auto\"]\n[merge-tools.meld]\nmerge-args = [\"$left\", \"$base\", \"$right\", \"-o\", \"$output\", \"--auto-merge\"]\n\n[merge-tools.vimdiff]\nmerge-args = [\"-f\", \"-d\", \"$output\", \"-M\",\n    \"$left\", \"$base\", \"$right\",\n    \"-c\", \"wincmd J\", \"-c\", \"set modifiable\",\n    \"-c\", \"set write\"]\nprogram = \"vim\"\nmerge-tool-edits-conflict-markers = true    # See below for an explanation\n```\n\n----------------------------------------\n\nTITLE: Viewing Commit Log in Jujutsu\nDESCRIPTION: Demonstrates how to view the commit log using the 'jj log' command. This shows the history of commits, including change IDs, commit IDs, and descriptions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ jj log\n@  mpqrykyp martinvonz@google.com 2023-02-12 15:00:22.000 -08:00 aef4df99\n│  (empty) (no description set)\n◉  kntqzsqt martinvonz@google.com 2023-02-12 14:56:59.000 -08:00 5d39e19d\n│  Say goodbye\n│ ◉  tpstlust support+octocat@github.com 2018-05-10 12:55:19.000 -05:00 octocat-patch-1@origin b1b3f972\n├─╯  sentence case\n│ ◉  kowxouwz octocat@nowhere.com 2014-06-10 15:22:26.000 -07:00 test@origin b3cbd5bb\n├─╯  Create CONTRIBUTING.md\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Commits for Testing in jj\nDESCRIPTION: Creates a series of related commits with progressively modified content to demonstrate how to manipulate changes between them later.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new master -m abc; printf 'a\\nb\\nc\\n' > file\nWorking copy  (@) now at: ztqrpvnw f94e49cf (empty) abc\nParent commit (@-)      : orrkosyo 7fd1a60b master | (empty) Merge pull request #6 from Spaceghost/patch-1\nAdded 0 files, modified 0 files, removed 1 files\n\n$ jj new -m ABC; printf 'A\\nB\\nc\\n' > file\nWorking copy  (@) now at: kwtuwqnm 6f30cd1f (empty) ABC\nParent commit (@-)      : ztqrpvnw 51002261 ab\n\n$ jj new -m ABCD; printf 'A\\nB\\nC\\nD\\n' > file\nWorking copy  (@) now at: mrxqplyk a6749154 (empty) ABCD\nParent commit (@-)      : kwtuwqnm 30aecc08 ABC\n\n$ jj log -r master::@\n@  mrxqplyk martinvonz@google.com 2023-02-12 19:38:21.000 -08:00 b98c607b\n│  ABCD\n◉  kwtuwqnm martinvonz@google.com 2023-02-12 19:38:12.000 -08:00 30aecc08\n│  ABC\n◉  ztqrpvnw martinvonz@google.com 2023-02-12 19:38:03.000 -08:00 51002261\n│  abc\n◉  orrkosyo octocat@nowhere.com 2012-03-06 15:06:50.000 -08:00 master 7fd1a60b\n│  (empty) Merge pull request #6 from Spaceghost/patch-1\n~\n```\n\n----------------------------------------\n\nTITLE: Restoring a Change to an Earlier State While Preserving Descendants in Jujutsu\nDESCRIPTION: This snippet demonstrates how to use 'jj restore' with the '--restore-descendants' flag to revert a change to a previous state while preserving the file contents of its descendant changes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n$ # We refer to `lnvvtr` as `@-` for brevity\n$ jj restore --from b80 --into @- --restore-descendants\nCreated lnvvtr 599994e featureA\nRebased 1 descendant commits (while preserving their content)\nWorking copy  (@) now at: pvnrkl 468104c featureB\nParent commit (@-)      : lnvvtr 599994e featureA\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Branch for Local-Only Changes in Jujutsu\nDESCRIPTION: Command to create a new commit branched from main for storing private credentials or configuration that should not be shared with others.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new main -m \"private: my credentials\"\nWorking copy  (@) now at: wwwwwwww 861de9eb (empty) private: my credentials\nParent commit (@-)      : yyyyyyyy b624cf12 main | Existing work\nAdded 0 files, modified 1 files, removed 0 files\n\n$ echo '{ \"password\": \"p@ssw0rd1\" }' > secret_config.json\n```\n\n----------------------------------------\n\nTITLE: Configuring External Diff Tools in TOML\nDESCRIPTION: TOML configuration example for setting up external diff tools to invoke on files individually rather than directories.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\nmerge-tools.$TOOL.diff-invocation-mode=\"file-by-file\"\n```\n\n----------------------------------------\n\nTITLE: Rewriting Commits in Jujutsu\nDESCRIPTION: Demonstrates how to rewrite commits to keep them clean when addressing review comments in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ # Create a new commit on top of the second-to-last commit in `your-feature`,\n$ # as reviewers requested a fix there.\n$ jj new your-feature- # NOTE: the trailing hyphen is not a typo!\n$ # Address the comments by updating the code. Then review the changes.\n$ jj diff\n$ # Squash the changes into the parent commit\n$ jj squash\n$ # Push the updated bookmark to the remote. Jujutsu automatically makes it a\n$ # force push\n$ jj git push --bookmark your-feature\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Remotes in Jujutsu\nDESCRIPTION: Demonstrates how to configure default remotes for fetching and pushing in Jujutsu's configuration file.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nfetch = \"upstream\"\npush = \"origin\"\n```\n\n----------------------------------------\n\nTITLE: Untracking a Remote Bookmark in Jujutsu\nDESCRIPTION: This snippet shows how to untrack a remote bookmark in Jujutsu, stopping automatic updates when fetching from the remote. It includes listing bookmarks, identifying the bookmark to untrack, and using the untrack command.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ # List all local and remote bookmarks.\n$ jj bookmark list --all\n$ # Find the bookmark we no longer want to track.\n$ # [...]\n# # Actually untrack it.\n$ jj bookmark untrack <bookmark name>@<remote name> # Example: jj bookmark untrack stuff@origin\n$ # From this point on, this remote bookmark won't be imported anymore.\n$ # The local bookmark (e.g. stuff) is unaffected. It may or may not still\n$ # be tracking bookmarks on other remotes (e.g. stuff@upstream).\n```\n\n----------------------------------------\n\nTITLE: Heads Function Examples\nDESCRIPTION: Examples showing the output of the heads() function with different inputs on the sample commit graph.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nheads(E|D) ⇒ {E,D}\nheads(E|C) ⇒ {E,C}\nheads(E|B) ⇒ {E}\nheads(E|A) ⇒ {E}\nheads(A) ⇒ {A}\n```\n\n----------------------------------------\n\nTITLE: Installing prerelease jj with vendored OpenSSL on macOS\nDESCRIPTION: Installs the prerelease version of jj from the main branch using Cargo with vendored OpenSSL on macOS.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n# To install the *prerelease* version from the main branch\ncargo install --git https://github.com/jj-vcs/jj.git \\\n     --features vendored-openssl --locked --bin jj jj-cli\n```\n\n----------------------------------------\n\nTITLE: UI Color Configuration\nDESCRIPTION: Configuration for UI color settings and output colorization\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\ncolor = \"never\" # Turn off color\n```\n\n----------------------------------------\n\nTITLE: Configuring multiple tools with execution order in Jujutsu\nDESCRIPTION: This TOML configuration sets up two tools to process a numbers.txt file. The first tool sorts the numbers, and the second truncates the list to the first 10 entries. The execution order is controlled by the tool names.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_35\n\nLANGUAGE: toml\nCODE:\n```\n[fix.tools.1-sort-numbers-file]\ncommand = [\"sort\", \"-n\"]\npatterns = [\"numbers.txt\"]\n\n[fix.tools.2-truncate-numbers-file]\ncommand = [\"head\", \"-n\", \"10\"]\npatterns = [\"numbers.txt\"]\n```\n\n----------------------------------------\n\nTITLE: Filtering Commits by Author and Description\nDESCRIPTION: Shell command to show commits authored by a specific person and containing a specific word in the description.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\njj log -r 'author(martinvonz) & description(reset)'\n```\n\n----------------------------------------\n\nTITLE: Configuring Private Commits Pattern in Jujutsu\nDESCRIPTION: Command to configure Jujutsu to recognize commits with descriptions matching a pattern as private, preventing them from being pushed accidentally.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\njj config set --user git.private-commits \"'''description(glob:'private:*')'''\"\n```\n\n----------------------------------------\n\nTITLE: Installing jj with Nix profile\nDESCRIPTION: Installs the prerelease version of jj from the main branch to your Nix user profile.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n# Installs the prerelease version from the main branch\nnix profile install 'github:jj-vcs/jj'\n```\n\n----------------------------------------\n\nTITLE: Markdown Document Structure and Commands\nDESCRIPTION: Structured markdown document explaining differences between Git and Jujutsu VCS, including command examples and references to other documentation.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-comparison.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Comparison with Git\n\n## Introduction\n\nThis document attempts to describe how Jujutsu is different from Git. See\n[the Git-compatibility doc](git-compatibility.md) for information about how\nthe `jj` command interoperates with Git repos. See\n[the Git command table](git-command-table.md) for a table of similar commands.\n```\n\n----------------------------------------\n\nTITLE: Configuring Work-Specific Settings in JJ (TOML)\nDESCRIPTION: Shows how to use conditional variables in a separate config file to set work-specific email, create custom revset aliases, and define new command aliases.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_55\n\nLANGUAGE: toml\nCODE:\n```\n--when.repositories = [\"~/the/work/repo\"]\n\n[user]\nemail = \"YOUR_WORK_EMAIL@workplace.com\"\n\n[revset-aliases]\nwork = \"heads(::@ ~ description(exact:''))::\"\n\n[aliases]\nwip = [\"log\", \"-r\", \"work\"]\n```\n\n----------------------------------------\n\nTITLE: Installing latest release of jj with vendored OpenSSL on Windows\nDESCRIPTION: Installs the latest released version of jj from crates.io using Cargo with vendored OpenSSL on Windows.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\n# To install the latest release\ncargo install --locked --bin jj jj-cli --features vendored-openssl\n```\n\n----------------------------------------\n\nTITLE: Move Branch/Bookmark Backward\nDESCRIPTION: Commands to move a branch or bookmark backward or sideways in history\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngit branch -f <name> <revision>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark move <name> --to <revision> --allow-backwards\n```\n\n----------------------------------------\n\nTITLE: Using Named Bookmark in Jujutsu\nDESCRIPTION: Shows how to create a named bookmark and push it to the remote in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Start a new commit off of the default bookmark.\n$ jj new main\n# Refactor some files, then add a description and start a new commit\n$ jj commit -m 'refactor(foo): restructure foo()'\n# Add a feature, then add a description and start a new commit\n$ jj commit -m 'feat(bar): add support for bar'\n# Create a bookmark so we can push it to GitHub. Note that we created the bookmark\n# on the working-copy commit's *parent* because the working copy itself is empty.\n$ jj bookmark create bar -r @- # `bar` now contains the previous two commits.\n# Push the bookmark to GitHub (pushes only `bar`)\n$ jj git push --allow-new\n```\n\n----------------------------------------\n\nTITLE: Jujutsu Help Command Examples\nDESCRIPTION: Examples of using the jj help command to get information about specific commands and configuration options.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\njj help rebase\njj help -k config\njj help --help\n```\n\n----------------------------------------\n\nTITLE: Generating Machine-Readable Commit Information\nDESCRIPTION: Shell command demonstrating how to create a machine-readable output of full commit and change IDs with JJ's template language.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\njj log --no-graph -T 'commit_id ++ \" \" ++ change_id ++ \"\\n\"'\n```\n\n----------------------------------------\n\nTITLE: Converting Jujutsu Repo to Co-located Repo (Bash)\nDESCRIPTION: This bash script demonstrates how to convert a Jujutsu repository backed by a Git repo into a co-located repo. It involves moving the Git repo, updating configurations, and ensuring proper HEAD setup.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-compatibility.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Ignore the .jj directory in Git\necho '/*' > .jj/.gitignore\n# Move the Git repo\nmv .jj/repo/store/git .git\n# Tell jj where to find it\necho -n '../../../.git' > .jj/repo/store/git_target\n# Make the Git repository non-bare and set HEAD\ngit config --unset core.bare\n# Convince jj to update .git/HEAD to point to the working-copy commit's parent\njj new && jj undo\n```\n\n----------------------------------------\n\nTITLE: Delete Branch/Bookmark\nDESCRIPTION: Commands to delete a branch or bookmark\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngit branch --delete <name>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark delete <name>\n```\n\n----------------------------------------\n\nTITLE: Displaying Conflicted Bookmarks in Jujutsu\nDESCRIPTION: Shows how conflicted bookmarks are displayed in various Jujutsu commands. This includes status display, bookmark listing, and log output.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`jj status`\n`jj bookmark list`\n`jj log`\n```\n\n----------------------------------------\n\nTITLE: Documentation Build Command\nDESCRIPTION: Command to build and serve the documentation locally using mkdocs.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nuv run mkdocs serve\n```\n\n----------------------------------------\n\nTITLE: Showing Commits Not on Any Remote Bookmark\nDESCRIPTION: Shell command to display commits that aren't present on any remote bookmark.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\njj log -r 'remote_bookmarks()..'\n```\n\n----------------------------------------\n\nTITLE: Configuring External Diff Formatters with Pager in JJ\nDESCRIPTION: Sets up an external diff formatter like diff-so-fancy to process output before it's displayed in the pager. Uses a shell command to pipe the output through the formatter before passing it to the pager.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\npager = [\"sh\", \"-c\", \"diff-so-fancy | less -RFX\"]\n```\n\n----------------------------------------\n\nTITLE: Showing Commits Not on Origin Remote\nDESCRIPTION: Shell command to display commits that aren't present on the 'origin' remote when you have multiple remotes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\njj log -r 'remote_bookmarks(remote=origin)..'\n```\n\n----------------------------------------\n\nTITLE: Creating a Merge Commit with Private Changes in Jujutsu\nDESCRIPTION: Commands to create a merge commit that combines a feature branch with private changes, allowing development with private configuration without pushing those changes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ jj new xxxxxxxx wwwwwwww\nWorking copy  (@) now at: vvvvvvvv ac4d9fbe (empty) (no description set)\nParent commit (@-)      : xxxxxxxx ef612875 Add new feature\nParent commit (@-)      : wwwwwwww 2106921e private: my credentials\nAdded 0 files, modified 1 files, removed 0 files\n\n$ jj log\n@    vvvvvvvv me@example.com 2024-08-22 08:57:40 ac4d9fbe\n├─╮  (empty) (no description set)\n│ ◉  wwwwwwww me@example.com 2024-08-22 08:57:40 2106921e\n│ │  private: my credentials\n◉ │  xxxxxxxx me@example.com 2024-08-21 11:13:21 ef612875\n├─╯  Add new feature\n◉  yyyyyyyy me@example.com 2024-08-21 11:13:09 main b624cf12\n│  Existing work\n~\n```\n\n----------------------------------------\n\nTITLE: Viewing Evolution Log with Patches in Jujutsu\nDESCRIPTION: Command to view detailed changes between different versions of a commit using the evolution log with patch display, helping to identify the correct point to split work.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\n$ # When was the last saved point before we started working on feature B?\n$ jj evolog -p --git  # We use `--git` to make diffs clear without colors\n@  lnvvtrzo jjfan@example.org 2025-02-28 21:01:10 31a347e0\n│  featureA\n│  diff --git a/file b/file\n│  index 2b455c4207..2a7e05a01a 100644\n│  --- a/file\n│  +++ b/file\n│  @@ -1,1 +1,2 @@\n│   Done with feature A\n│  +Working on feature B\n○  lnvvtrzo hidden jjfan@example.org 2025-02-28 21:00:51 b8004ab8\n│  featureA\n│  diff --git a/file b/file\n│  index cb61245109..2b455c4207\n│  --- a/file\n│  +++ b/file\n│  @@ -1,1 +1,1 @@\n│  -Working on feature A\n│  +Done with feature A\n○  lnvvtrzo hidden jjfan@example.org 2025-02-28 20:50:05 e4d831d\n   (no description set)\n   diff --git a/file b/file\n   index 0000000000..cb61245109\n   --- /dev/null\n   +++ b/file\n   @@ 0,0 +1,1 @@\n   +Working on feature A\n```\n\n----------------------------------------\n\nTITLE: Profiling 'jj' with Samply Sampling Profiler\nDESCRIPTION: Instructions for installing and using samply to profile the jj command. After running these commands, samply will provide a link to view the profiling results.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ncargo install samply\nsamply record jj diff\n```\n\n----------------------------------------\n\nTITLE: Showing Initial Commits in Repository\nDESCRIPTION: Shell command to show the initial commits in the repository (equivalent to Git's 'root commits').\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\njj log -r 'root()+'\n```\n\n----------------------------------------\n\nTITLE: Installing latest release of jj with vendored OpenSSL on macOS\nDESCRIPTION: Installs the latest released version of jj from crates.io using Cargo with vendored OpenSSL on macOS.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\n# To install the latest release\ncargo install --features vendored-openssl --locked --bin jj jj-cli\n```\n\n----------------------------------------\n\nTITLE: Configuring a Merge Editor in JJ\nDESCRIPTION: TOML configuration example showing how to set the merge editor in JJ. It demonstrates specifying a predefined tool like 'meld' or directly providing the merge arguments as an array with placeholders that JJ will substitute.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_31\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\n# Use merge-tools.meld.merge-args\nmerge-editor = \"meld\"  # Or \"vscode\" or \"vscodium\" or \"kdiff3\" or \"vimdiff\"\n# Specify merge-args inline\nmerge-editor = [\"meld\", \"$left\", \"$base\", \"$right\", \"-o\", \"$output\"]\n```\n\n----------------------------------------\n\nTITLE: Setting up PowerShell completion for jj\nDESCRIPTION: Configures command-line completion for jj in PowerShell by adding the completion script to the PowerShell profile.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\nInvoke-Expression (& { (jj util completion power-shell | Out-String) })\n```\n\n----------------------------------------\n\nTITLE: Detailed Evolution Log with Patches in Jujutsu\nDESCRIPTION: Command and output showing the detailed evolution history with patches, revealing the specific changes made at each step to help identify where work should be split into different commits.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n$ # Note the word \"hidden\", the commit ids on the right,\n$ # and the unchanging change id on the left.\n$ jj evolog\n@  lnvvtrzo jjfan@example.org 2025-02-28 21:01:10 31a347e0\n│  featureA\n○  lnvvtrzo hidden jjfan@example.org 2025-02-28 21:00:51 b8004ab8\n│  featureA\n○  lnvvtrzo hidden jjfan@example.org 2025-02-28 20:50:05 e4d831d\n   (no description set)\n```\n\n----------------------------------------\n\nTITLE: Creating Template Aliases in TOML Configuration\nDESCRIPTION: Demonstrates how to define custom template aliases in JJ's configuration file, allowing for custom symbols and functions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\ntemplate-aliases.<name> = <expression>\n```\n\n----------------------------------------\n\nTITLE: Showing Important Decorated Commits\nDESCRIPTION: Shell command to show important commits like tags and bookmarks, similar to 'git --simplify-by-decoration'.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\njj log -r 'tags() | bookmarks()'\n```\n\n----------------------------------------\n\nTITLE: Installing OpenSSL and setting up environment for jj on macOS\nDESCRIPTION: Installs OpenSSL via Homebrew and configures the environment variables for building jj from source on macOS.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nxcode-select --install\nbrew install openssl\nbrew install pkg-config\nexport PKG_CONFIG_PATH=\"$(brew --prefix)/opt/openssl@3/lib/pkgconfig\"\n```\n\n----------------------------------------\n\nTITLE: Setting up dynamic Bash completion for jj\nDESCRIPTION: Configures improved context-aware command-line completion for jj in Bash shell using the dynamic completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\nsource <(COMPLETE=bash jj)\n```\n\n----------------------------------------\n\nTITLE: Viewing Change History with Evolution Log in Jujutsu\nDESCRIPTION: Example output of the 'jj evolog' command, which shows the evolution history of changes, including hidden (obsolete) versions that are not visible in the regular log.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n$ jj log\n@  lnvvtrzo jjfan@example.org 2025-02-28 21:01:10 31a347e0\n│  featureA\n◆  zzzzzzzz root() 00000000\n$ cat file  # Oh no, the work on \"feature B\" should be in a separate commit!\nDone with feature A\nWorking on feature B\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Graph Style in TOML Configuration\nDESCRIPTION: Example of configuring the ASCII graph style for commands that display commit graphs, using the curved style option.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\nui.graph.style = \"curved\"\n```\n\n----------------------------------------\n\nTITLE: Configuring External Diff Tool in TOML\nDESCRIPTION: Specifies configuration for using external diff tools with file-by-file invocation mode.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\ndiff.tool = \"vimdiff\"\n\n[merge-tools.vimdiff]\ndiff-invocation-mode = \"file-by-file\"\n```\n\n----------------------------------------\n\nTITLE: Managing bookmark tracking in Jujutsu\nDESCRIPTION: These shell commands demonstrate how to track or untrack specific bookmarks in Jujutsu, including importing remote bookmarks and deleting local ones.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_46\n\nLANGUAGE: shell\nCODE:\n```\n# import feature1 bookmark and start tracking it\njj bookmark track feature1@origin\n# delete local gh-pages bookmark and stop tracking it\njj bookmark delete gh-pages\njj bookmark untrack gh-pages@upstream\n```\n\n----------------------------------------\n\nTITLE: Accessing Commit Properties in Templates\nDESCRIPTION: Demonstrates how to access commit properties in Jujutsu log templates using keywords.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nIn `jj log`/`jj evolog` templates, all 0-argument methods of [the `Commit`\ntype](#commit-type) are available as keywords. For example, `commit_id` is\nequivalent to `self.commit_id()`.\n```\n\n----------------------------------------\n\nTITLE: Setting User Email in Jujutsu Config (Shell)\nDESCRIPTION: Demonstrates how to set the user email in the Jujutsu repository configuration using the new 'jj config set' command.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\njj config set --repo user.email \"somebody@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Child and Descendant Queries for Recent Commits in Revset\nDESCRIPTION: Revset commands that find children and descendants of recent commits. These commands retrieve direct children, all descendants, and filtered descendant sets of a recent version tag.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_15\n\nLANGUAGE: revset\nCODE:\n```\nv2.40.0+\nv2.40.0+++\nv2.40.0+++::\n```\n\n----------------------------------------\n\nTITLE: Setting Background Colors in TOML Configuration\nDESCRIPTION: Example of how to configure text styling options in JJ's TOML configuration file, demonstrating background colors, bold text, and underlining for error messages.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\ncolor.error = { bg = \"red\", bold = true, underline = true }\n```\n\n----------------------------------------\n\nTITLE: Running jj directly from Nix flake\nDESCRIPTION: Runs the prerelease version of jj directly from the GitHub repository using Nix flakes without installing it permanently.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnix run 'github:jj-vcs/jj'\n```\n\n----------------------------------------\n\nTITLE: Configuring default Git remotes for fetch in Jujutsu\nDESCRIPTION: These shell commands set the default Git remote(s) for fetching in Jujutsu. It demonstrates setting a single remote and multiple remotes using exact names or glob patterns.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_43\n\nLANGUAGE: shell\nCODE:\n```\njj config set --repo git.fetch \"upstream\"\njj config set --repo git.fetch '[\"origin\", \"upstream\"]'\njj config set --repo git.fetch \"glob:*\"\njj config set --repo git.fetch '[\"glob:remote*\", \"glob:upstream*\"]'\n```\n\n----------------------------------------\n\nTITLE: Viewing Diff After Interactive Squash in jj\nDESCRIPTION: Shows how to examine the changes in a commit after performing an interactive squash operation, confirming that the selected changes were properly moved to the parent commit.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/tutorial.md#2025-04-17_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\n$ jj diff -r @- --git\ndiff --git a/file b/file\nindex de980441c3..b1e67221af 100644\n--- a/file\n+++ b/file\n@@ -1,3 +1,3 @@\n-a\n-b\n-c\n+A\n+B\n+C\n```\n\n----------------------------------------\n\nTITLE: Customizing Jujutsu Log Template (Jujutsu Template)\nDESCRIPTION: Shows how to customize the Jujutsu log template to highlight the working copy commit and handle empty descriptions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_14\n\nLANGUAGE: jujutsu\nCODE:\n```\nlabel(if(current_working_copy, \"working_copy\"), ...)\n```\n\nLANGUAGE: jujutsu\nCODE:\n```\nif(description, description, \"(no description set)\\n\")\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies for jj on Linux\nDESCRIPTION: Installs required dependencies for building jj from source on Debian-based Linux distributions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nsudo apt-get install libssl-dev openssl pkg-config build-essential\n```\n\n----------------------------------------\n\nTITLE: Retrieving Parent Commit IDs in JJ\nDESCRIPTION: Shell command showing how to use JJ's template language to get and display the short commit IDs of the working-copy parents, joined by commas.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\njj log --no-graph -r @ -T 'parents.map(|c| c.commit_id().short()).join(\",\")'\n```\n\n----------------------------------------\n\nTITLE: Installing jj-git from AUR on Arch Linux\nDESCRIPTION: Installs the development version of jj from the AUR repository using an AUR helper like yay.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nyay -S jujutsu-git\n```\n\n----------------------------------------\n\nTITLE: Configuring default Git remote for push in Jujutsu\nDESCRIPTION: This shell command sets the default Git remote for pushing in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_44\n\nLANGUAGE: shell\nCODE:\n```\njj config set --repo git.push \"github\"\n```\n\n----------------------------------------\n\nTITLE: Example Diff Editor Configurations in JJ\nDESCRIPTION: Various examples showing different ways to configure the diff editor in JJ. Includes using a named tool from merge-tools config, specifying a path with custom arguments, and using default arguments.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_28\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\n# Use merge-tools.meld.edit-args\ndiff-editor = \"meld\"  # Or `kdiff3`, or `diffedit3`, ...\n# Specify edit-args inline\ndiff-editor = [\"/path/to/binary\", \"--be-helpful\", \"$left\", \"$right\"]\n# Equivalent to [\"binary\", \"$left\", \"$right\"] arguments by default\ndiff-editor = \"binary\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Diff Output in Jujutsu Templates\nDESCRIPTION: Shows how to use the new 'diff.files()' method to customize diff output in commit templates.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_5\n\nLANGUAGE: jujutsu-template\nCODE:\n```\ndiff.files().map(|e| e.path().display())\n```\n\n----------------------------------------\n\nTITLE: Installing prerelease jj from source on Linux\nDESCRIPTION: Installs the prerelease version of jj from the main branch using Cargo on Linux.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# To install the *prerelease* version from the main branch\ncargo install --git https://github.com/jj-vcs/jj.git --locked --bin jj jj-cli\n```\n\n----------------------------------------\n\nTITLE: Accessing Configuration Variables in Jujutsu Templates\nDESCRIPTION: Shows how to use the new 'config' template function to access configuration variables within templates.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: jujutsu-template\nCODE:\n```\nconfig(name)\n```\n\n----------------------------------------\n\nTITLE: Installing jj with MacPorts\nDESCRIPTION: Installs the latest release of jj using the MacPorts package manager on macOS.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\n# Installs the latest release\nsudo port install jujutsu\n```\n\n----------------------------------------\n\nTITLE: Enabling a disabled tool for a specific repository in Jujutsu\nDESCRIPTION: This shell command enables a previously disabled tool (rustfmt) for a specific repository using the jj config command.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_37\n\nLANGUAGE: shell\nCODE:\n```\n$ jj config set --repo fix.tools.rustfmt.enabled true\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Subprocess in Jujutsu\nDESCRIPTION: Sets a configuration option to enable using an external Git subprocess for push, clone, and fetch operations, addressing SSH issues with libgit2.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\ngit.subprocess = true\n```\n\n----------------------------------------\n\nTITLE: Installing latest release of jj from crates.io\nDESCRIPTION: Installs the latest released version of jj from crates.io using Cargo.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# To install the latest release\ncargo install --locked --bin jj jj-cli\n```\n\n----------------------------------------\n\nTITLE: Filtering Lists in Jujutsu Templates\nDESCRIPTION: Demonstrates the new list filtering capability in Jujutsu templates.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: jujutsu-template\nCODE:\n```\nlist.filter(|x| ..)\n```\n\n----------------------------------------\n\nTITLE: Undo Operation\nDESCRIPTION: Commands to undo a previous operation using its ID\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\njj [op] undo <operation ID>\n```\n\n----------------------------------------\n\nTITLE: Using Generated Bookmark Name in Jujutsu\nDESCRIPTION: Demonstrates how to create a stack of commits and push to GitHub using a generated bookmark name in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Start a new commit off of the default bookmark.\n$ jj new main\n# Refactor some files, then add a description and start a new commit\n$ jj commit -m 'refactor(foo): restructure foo()'\n# Add a feature, then add a description and start a new commit\n$ jj commit -m 'feat(bar): add support for bar'\n# Let Jujutsu generate a bookmark name and push that to GitHub. Note that we\n# push the working-copy commit's *parent* because the working-copy commit\n# itself is empty.\n$ jj git push -c @-\n```\n\n----------------------------------------\n\nTITLE: Configuring GUI Text Editors in JJ\nDESCRIPTION: Shows how to configure various GUI text editors to work with JJ for editing commit messages. Includes examples for VS Code, BBEdit, Sublime Text, TextMate, Notepad++, and IntelliJ with appropriate wait flags.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_26\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\neditor = \"code -w\"       # VS Code\neditor = \"code.cmd -w\"   # VS Code on Windows\neditor = \"bbedit -w\"     # BBEdit\neditor = \"subl -n -w\"    # Sublime Text\neditor = \"mate -w\"       # TextMate\neditor = [\"C:/Program Files/Notepad++/notepad++.exe\",\n    \"-multiInst\", \"-notabbar\", \"-nosession\", \"-noPlugin\"] # Notepad++\neditor = \"idea --temp-project --wait\"   #IntelliJ\n```\n\n----------------------------------------\n\nTITLE: Historical Range Queries in Revset\nDESCRIPTION: Revset commands that query historical changes in the Git repository. These include ancestors of specific versions and range expressions to select commits from the repository history.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_1\n\nLANGUAGE: revset\nCODE:\n```\n::v1.0.0\n..v1.0.0\n::v2.40.0\n..v2.40.0\n```\n\n----------------------------------------\n\nTITLE: Monitoring Jujutsu Log Evolution with watch\nDESCRIPTION: This command uses the watch utility to continuously update and display the colored log output of jj in the terminal. It ignores the working copy to avoid conflicts with manual operations during snapshot creation.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nwatch --color jj --ignore-working-copy log --color=always\n```\n\n----------------------------------------\n\nTITLE: Accessing Email Components in Jujutsu Templates\nDESCRIPTION: Demonstrates how to access the local part of an email address using the new Email template type.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_6\n\nLANGUAGE: jujutsu-template\nCODE:\n```\nSignature.email().local()\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH signing for commits in Jujutsu\nDESCRIPTION: This TOML configuration sets up SSH signing for commits. It specifies the signing behavior, backend, and the SSH key to use for signing.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_41\n\nLANGUAGE: toml\nCODE:\n```\n[signing]\nbehavior = \"own\"\nbackend = \"ssh\"\nkey = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGj+J6N6SO+4P8dOZqfR1oiay2yxhhHnagH52avUqw5h\"\n## You can also use a path instead of embedding the key\n# key = \"~/.ssh/id_for_signing.pub\"\n```\n\n----------------------------------------\n\nTITLE: Setting up standard Bash completion for jj\nDESCRIPTION: Configures command-line completion for jj in Bash shell using the standard completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\nsource <(jj util completion bash)\n```\n\n----------------------------------------\n\nTITLE: External Diff Tool Configuration\nDESCRIPTION: Configuration for using external diff tools\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\n# Use Difftastic by default\ndiff.tool = [\"difft\", \"--color=always\", \"$left\", \"$right\"]\n# Use tool named \"<name>\" (see below)\ndiff.tool = \"<name>\"\n\n[merge-tools.<name>]\n```\n\n----------------------------------------\n\nTITLE: Current State and Reference Queries in Revset\nDESCRIPTION: Revset commands that query the most recent history and named references. These commands focus on the latest commits and repository references like tags and bookmarks.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_3\n\nLANGUAGE: revset\nCODE:\n```\nv2.40.0-..\n~(::v2.40.0)\ntags()\nbookmarks()\n```\n\n----------------------------------------\n\nTITLE: Using GitHub CLI with Jujutsu\nDESCRIPTION: Shows how to use GitHub CLI with Jujutsu by setting the GIT_DIR environment variable.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ GIT_DIR=.jj/repo/store/git gh issue list\n```\n\n----------------------------------------\n\nTITLE: Publishing Crates\nDESCRIPTION: Sequential commands to publish the different crates to crates.io in the correct order: proc-macros, lib, and cli.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/releasing.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n(cd lib/proc-macros && cargo publish)\n(cd lib && cargo publish)\n(cd cli && cargo publish)\n```\n\n----------------------------------------\n\nTITLE: Configuring lazy commit signing on Git push in Jujutsu\nDESCRIPTION: This TOML configuration sets up lazy commit signing, where commits are only signed when pushing to Git. It specifies the signing backend and key, and enables the git.sign-on-push option.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_42\n\nLANGUAGE: toml\nCODE:\n```\n# Configure signing backend as before, but lazily signing only on push.\n[signing]\nbehavior = \"drop\"\nbackend = \"ssh\"\nkey = \"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGj+J6N6SO+4P8dOZqfR1oiay2yxhhHnagH52avUqw5h\"\n\n[git]\nsign-on-push = true\n```\n\n----------------------------------------\n\nTITLE: Working with @ Symbol in PowerShell with Jujutsu\nDESCRIPTION: Demonstrates how to escape or quote the @ symbol in PowerShell when using Jujutsu commands, since @ is part of PowerShell's array sub-expression operator syntax.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/windows.md#2025-04-17_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nPS> jj log -r `@\nPS> jj log -r '@'\n```\n\n----------------------------------------\n\nTITLE: Configuring Conflict Marker Styles\nDESCRIPTION: Defines different styles for displaying conflict markers including diff, snapshot, and git modes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_14\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\n# Shows a single snapshot and one or more diffs to apply to it\nconflict-marker-style = \"diff\"\n# Shows a snapshot for each side and base of the conflict\nconflict-marker-style = \"snapshot\"\n# Uses Git's \"diff3\" conflict markers to support tools that depend on it\nconflict-marker-style = \"git\"\n```\n\n----------------------------------------\n\nTITLE: Connected Function Examples\nDESCRIPTION: Examples showing the output of the connected() function with different inputs on the sample commit graph.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nconnected(E|A) ⇒ {E,B,A}\nconnected(D|A) ⇒ {D,C,B,A}\nconnected(A) ⇒ {A}\n```\n\n----------------------------------------\n\nTITLE: Configuring direnv for GitHub CLI with Jujutsu\nDESCRIPTION: Demonstrates how to configure direnv to automatically set the GIT_DIR for GitHub CLI when using Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nexport GIT_DIR=$PWD/.jj/repo/store/git\n```\n\n----------------------------------------\n\nTITLE: Configuring Git's Less Pager for Jujutsu in Windows\nDESCRIPTION: Configures Jujutsu to use Git's less pager instead of the built-in streampager. This sets the user configuration to point to the Git-bundled less executable with appropriate options for terminal handling.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/windows.md#2025-04-17_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nPS> jj config set --user ui.pager '[\"C:\\\\Program Files\\\\Git\\\\usr\\\\bin\\\\less.exe\", \"-FRX\"]'\nPS> jj config set --user ui.paginate auto\n```\n\n----------------------------------------\n\nTITLE: Configuring PKCS#12 certificate signing in Jujutsu\nDESCRIPTION: This TOML configuration sets up PKCS#12 certificate signing for commits using the gpgsm backend. It specifies the signing behavior, backend, and optionally the signing key.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_40\n\nLANGUAGE: toml\nCODE:\n```\n[signing]\nbehavior = \"own\"\nbackend = \"gpgsm\"\n## You can set `key` to anything accepted by `gpgsm -u`\n## If not set then defaults to the key associated with `user.email`\n# key = \"4ED556E9729E000F\"\n# key = \"signing@example.com\"\n```\n\n----------------------------------------\n\nTITLE: Custom Color and Style Settings\nDESCRIPTION: Examples of custom color and style configurations for different UI elements\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_3\n\nLANGUAGE: toml\nCODE:\n```\n[colors]\ncommit_id = { fg = \"green\", bg = \"#ff1525\", bold = true, underline = true }\nchange_id = { reverse = true, italic = true }\n```\n\n----------------------------------------\n\nTITLE: Setting up dynamic Zsh completion for jj\nDESCRIPTION: Configures improved context-aware command-line completion for jj in Zsh shell using the dynamic completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_21\n\nLANGUAGE: shell\nCODE:\n```\nsource <(COMPLETE=zsh jj)\n```\n\n----------------------------------------\n\nTITLE: Extrema Queries for Version Ranges in Revset\nDESCRIPTION: Revset commands that find boundary commits (roots and heads) in version ranges. These commands identify the oldest and newest commits in the ancestors of a specific version.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_11\n\nLANGUAGE: revset\nCODE:\n```\nroots(::v2.40.0)\nheads(::v2.40.0)\n```\n\n----------------------------------------\n\nTITLE: Configuring External Diff Editors in JJ\nDESCRIPTION: Shows how to configure external tools for editing diffs in JJ. Provides examples for configuring the diff editor tool with both string format and list format, including custom path and arguments.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_27\n\nLANGUAGE: toml\nCODE:\n```\n[merge-tools.meld]\n# program = \"meld\"      # Defaults to the name of the tool if not specified\nprogram = \"/path/to/meld\" # May be necessary if `meld` is not in the PATH\nedit-args = [\"--newtab\", \"$left\", \"$right\"]\n```\n\n----------------------------------------\n\nTITLE: Creating a gitignore File to Avoid Tracking Scratch Files\nDESCRIPTION: Instructions for creating a .gitignore file that ignores everything in a directory, including the .gitignore file itself, to prevent files from being tracked in version control.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n*\n```\n\n----------------------------------------\n\nTITLE: Configuring custom GnuPG program for signing in Jujutsu\nDESCRIPTION: This TOML configuration specifies a custom GnuPG program (gpg2) to be used for signing commits.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_39\n\nLANGUAGE: toml\nCODE:\n```\n[signing]\nbackends.gpg.program = \"gpg2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Templates and Styles\nDESCRIPTION: Defines templates for log commands and customizes log display options.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_18\n\nLANGUAGE: toml\nCODE:\n```\n[templates]\nlog = \"builtin_log_compact\"\nop_log = \"builtin_op_log_compact\"\nshow = \"builtin_log_detailed\"\n\n[ui]\ngraph.style = \"square\"\n\n[templates]\nlog_node = '''\ncoalesce(\n  if(!self, \"🮀\"),\n  if(current_working_copy, \"@\"),\n  if(root, \"┴\"),\n  if(immutable, \"●\", \"○\"),\n)\n'''\nop_log_node = 'if(current_operation, \"@\", \"○\")'\n```\n\n----------------------------------------\n\nTITLE: Child and Descendant Queries for Old Commits in Revset\nDESCRIPTION: Revset commands that find children and descendants of old commits. These commands retrieve direct children, all descendants, and filtered descendant sets of an old version tag.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_13\n\nLANGUAGE: revset\nCODE:\n```\nv1.0.0+\nv1.0.0+++\nv1.0.0+++::\n```\n\n----------------------------------------\n\nTITLE: Verifying Preserved File Contents After Restore in Jujutsu\nDESCRIPTION: This snippet shows how to verify that the '--restore-descendants' flag preserved the file contents of the working copy change, even though its parent was modified.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/FAQ.md#2025-04-17_snippet_13\n\nLANGUAGE: console\nCODE:\n```\n$ jj file show -r @ file  # Same as `cat file`\nDone with feature A\nWorking on feature B\n$ jj file show -r @- file\nDone with feature A\n```\n\n----------------------------------------\n\nTITLE: Configuring clang-format for C/C++ files in Jujutsu\nDESCRIPTION: This TOML configuration sets up clang-format to format *.c and *.h files, including sorting #include directives. It uses the $path substitution to provide the filename to clang-format.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_33\n\nLANGUAGE: toml\nCODE:\n```\n[fix.tools.clang-format]\ncommand = [\"/usr/bin/clang-format\", \"--sort-includes\", \"--assume-filename=$path\"]\npatterns = [\"glob:'**/*.c'\",\n            \"glob:'**/*.h'\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Wrapping Options in JJ's Built-in Streampager\nDESCRIPTION: Sets how text wrapping should be handled by JJ's built-in pager. Options include wrapping at screen edge (default), wrapping on word boundaries, or disabling wrapping to allow horizontal scrolling.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n[ui.streampager]\nwrapping = \"anywhere\"  # wrap at screen edge (default)\nwrapping = \"word\"      # wrap on word boundaries\nwrapping = \"none\"      # strip long lines, allow scrolling\n                       # left and right like `less -S`\n```\n\n----------------------------------------\n\nTITLE: Draft Commit Description Template\nDESCRIPTION: Template configuration for populating commit description editor content\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[templates]\ndraft_commit_description = '''\nconcat(\n  coalesce(description, \"\\n\"),\n  surround(\n    \"\\nJJ: This commit contains the following changes:\\n\", \"\",\n    indent(\"JJ:     \", diff.stat(72)),\n  ),\n  \"\\nJJ: ignore-rest\\n\",\n  diff.git(),\n)'''\n```\n\n----------------------------------------\n\nTITLE: Parent and Ancestor Queries for Recent Commits in Revset\nDESCRIPTION: Revset commands that find parents and ancestors of recent commits. These commands retrieve direct parents, all ancestors, and filtered ancestor sets of a recent version tag.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_14\n\nLANGUAGE: revset\nCODE:\n```\nv2.40.0-\nv2.40.0---\n::v2.40.0---\n```\n\n----------------------------------------\n\nTITLE: Configuring Diff Editor Arguments in TOML\nDESCRIPTION: Example TOML configuration for specifying diff editor command arguments in Jujutsu. This snippet shows how to configure the kdiff3 merge tool with custom arguments.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_22\n\nLANGUAGE: toml\nCODE:\n```\n[merge-tools.kdiff3]\nprogram = \"kdiff3\"\nedit-args = [\"--merge\", \"--cs\", \"CreateBakFiles=0\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring sort and unique for text files in Jujutsu\nDESCRIPTION: This TOML configuration sets up a tool to sort and remove duplicate lines from a specific text file (word_list.txt) in the repository.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_34\n\nLANGUAGE: toml\nCODE:\n```\n[fix.tools.sort-word-list]\ncommand = [\"sort\", \"-u\"]\npatterns = [\"word_list.txt\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring automatic local bookmark creation in Jujutsu\nDESCRIPTION: This TOML configuration enables automatic creation of local bookmarks when importing remote-tracking bookmarks from Git.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_45\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nauto-local-bookmark = true\n```\n\n----------------------------------------\n\nTITLE: Commit Trailers Configuration\nDESCRIPTION: Template for automatically adding trailers to commit descriptions\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[templates]\ncommit_trailers = '''\n\"Signed-off-by: \" ++ committer ++ \"\\n\"\n'''\n```\n\n----------------------------------------\n\nTITLE: Parent and Ancestor Queries for Tag Sets in Revset\nDESCRIPTION: Revset commands that find parents and ancestors of tagged commits. These commands retrieve direct parents, all ancestors, and filtered ancestor sets of all tagged revisions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_16\n\nLANGUAGE: revset\nCODE:\n```\ntags()-\ntags()---\n::tags()---\n```\n\n----------------------------------------\n\nTITLE: Configuring Regular Expression Pattern Matching\nDESCRIPTION: Example of using regex pattern matching in string patterns with the regex: prefix.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\nregex:\"pattern\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Private Commits in JJ (TOML)\nDESCRIPTION: Defines a pattern to prevent pushing work-in-progress or private commits. This setting uses glob patterns to match commit descriptions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_49\n\nLANGUAGE: toml\nCODE:\n```\nprivate-commits = \"description(glob:'wip:*') | description(glob:'private:*')\"\n```\n\n----------------------------------------\n\nTITLE: Showing Local Commits and Their Descendants\nDESCRIPTION: Shell command to display local commits leading up to the working copy, as well as descendants of those commits.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\njj log -r '(remote_bookmarks()..@)::'\n```\n\n----------------------------------------\n\nTITLE: Configuring Screen Interface Behavior in JJ's Built-in Pager\nDESCRIPTION: Controls how the pager clears the screen and handles short outputs. Options include auto-quitting for short outputs, always using full-screen mode, or conditionally using the alternate screen based on output length and processing time.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[ui.streampager]\n# Do not clear screen on exit. Use a full-screen interface for long\n# output only. Like `less -FX`.\ninterface = \"quit-if-one-page\"  # (default).\n# Always use a full-screen interface, ask the terminal to clear the\n# screen on exit. Like `less -+FX`.\ninterface = \"full-screen-clear-output\"\n# Use the alternate screen if the input is either long or takes more\n# than 2 seconds to finish. Similar but not identical to `less -F -+X`.\ninterface = \"quit-quickly-or-clear-output\"\n```\n\n----------------------------------------\n\nTITLE: Child and Descendant Queries for Tag Sets in Revset\nDESCRIPTION: Revset commands that find children and descendants of tagged commits. These commands retrieve direct children, all descendants, and filtered descendant sets of all tagged revisions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_17\n\nLANGUAGE: revset\nCODE:\n```\ntags()+\ntags()+++\ntags()+++::\n```\n\n----------------------------------------\n\nTITLE: Creating a Revset Alias in Jujutsu on Windows\nDESCRIPTION: Creates a user configuration alias named 'HEAD' that points to '@' in Jujutsu revsets. This provides a workaround for PowerShell's handling of the @ symbol.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/windows.md#2025-04-17_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nPS> jj config set --user revset-aliases.HEAD '@'\nPS> jj log -r HEAD\n```\n\n----------------------------------------\n\nTITLE: Local Change Queries in Revset\nDESCRIPTION: Revset commands that identify local changes not yet published to remote references. This command finds commits that exist after tags or remote bookmarks.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_4\n\nLANGUAGE: revset\nCODE:\n```\n(tags() | remote_bookmarks())..\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum New File Size in JJ (TOML)\nDESCRIPTION: Configures the maximum size for new files to be added to the snapshot. This can be specified in bytes or using human-readable suffixes like MiB or GB.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_53\n\nLANGUAGE: toml\nCODE:\n```\n[snapshot]\nmax-new-file-size = \"10MiB\"\n# the following is equivalent\nmax-new-file-size = 10485760\n```\n\n----------------------------------------\n\nTITLE: Configuring Immutable Commits\nDESCRIPTION: Defines configuration for immutable commits and preventing rewriting of certain commits.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_15\n\nLANGUAGE: toml\nCODE:\n```\n[revset-aliases]\n\"immutable_heads()\" = \"builtin_immutable_heads() | release@origin\"\n\n# The `trunk().. &` bit is an optimization to scan for non-`mine()` commits\n# only among commits that are not in `trunk()`.\n[revset-aliases]\n\"immutable_heads()\" = \"builtin_immutable_heads() | (trunk().. & ~mine())\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Movement Commands\nDESCRIPTION: Sets default behavior for prev and next commands to use edit mode.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\n[ui.movement]\nedit = true\n```\n\n----------------------------------------\n\nTITLE: Extrema Queries for Small Sets in Revset\nDESCRIPTION: Revset commands that find boundary commits (roots and heads) in small commit sets. These commands identify the oldest and newest commits in tagged revisions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_9\n\nLANGUAGE: revset\nCODE:\n```\nroots(tags())\nheads(tags())\n```\n\n----------------------------------------\n\nTITLE: Installing jj on Gentoo Linux\nDESCRIPTION: Installs jj via Portage package manager on Gentoo Linux, after enabling the GURU repository.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nemerge -av dev-vcs/jj\n```\n\n----------------------------------------\n\nTITLE: Author and Committer Filters in Revset\nDESCRIPTION: Revset commands that filter commits by author or committer name. These commands select commits based on who authored or committed them.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_6\n\nLANGUAGE: revset\nCODE:\n```\nauthor(peff)\ncommitter(gitster)\n```\n\n----------------------------------------\n\nTITLE: Configuring prefix for generated bookmarks on push in Jujutsu\nDESCRIPTION: This TOML configuration sets a custom prefix for bookmarks generated during 'jj git push --change'.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_48\n\nLANGUAGE: toml\nCODE:\n```\n[git]\npush-bookmark-prefix = \"martinvonz/push-\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Default Conflict Markers in Jujutsu\nDESCRIPTION: Example of Jujutsu's default conflict marker style showing a conflict between a text change (grape to grapefruit) and a style change (lowercase to uppercase).\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n<<<<<<< Conflict 1 of 1\n%%%%%%% Changes from base to side #1\n apple\n-grape\n+grapefruit\n orange\n+++++++ Contents of side #2\nAPPLE\nGRAPE\nORANGE\n>>>>>>> Conflict 1 of 1 ends\n```\n\n----------------------------------------\n\nTITLE: Bookmark List Sort Configuration\nDESCRIPTION: Configuration for customizing bookmark listing order\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\nbookmark-list-sort-keys = [\"name\"]\n```\n\n----------------------------------------\n\nTITLE: Current Data Model Schema Definition\nDESCRIPTION: Defines the current data model structure for branch tracking in jj 0.8.0, showing how local and remote branches, tags, and git refs are stored.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/tracking-branches.md#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nbranches\n  [name]:\n    local_target?\n    remote_targets[remote]: target\ntags\n  [name]: target\ngit_refs\n  [\"refs/heads/{name}\"]: target             # last-known local branches\n  [\"refs/remotes/{remote}/{name}\"]: target  # last-known remote branches\n                                            # (copied to remote_targets)\n  [\"refs/tags/{name}\"]: target              # last-known tags\ngit_head: target?\n```\n\n----------------------------------------\n\nTITLE: Setting up standard Zsh completion for jj\nDESCRIPTION: Configures command-line completion for jj in Zsh shell using the standard completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\nautoload -U compinit\ncompinit\nsource <(jj util completion zsh)\n```\n\n----------------------------------------\n\nTITLE: Set Operation Queries with Tags in Revset\nDESCRIPTION: Revset commands using set intersection to find commits that match multiple criteria. These commands find the intersection of tags and version ranges or specific versions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_5\n\nLANGUAGE: revset\nCODE:\n```\ntags() & ::v2.40.0\nv2.39.0 & ::v2.40.0\n```\n\n----------------------------------------\n\nTITLE: Setting up dynamic Fish completion for jj\nDESCRIPTION: Configures improved context-aware command-line completion for jj in Fish shell using the dynamic completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_23\n\nLANGUAGE: shell\nCODE:\n```\nCOMPLETE=fish jj | source\n```\n\n----------------------------------------\n\nTITLE: Configuring Snapshot Auto-tracking in JJ (TOML)\nDESCRIPTION: Sets the paths to be automatically tracked when added to the working copy. This uses the fileset syntax to specify which files should be tracked.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_52\n\nLANGUAGE: toml\nCODE:\n```\n[snapshot]\nauto-track = \"<fileset pattern>\"\n```\n\n----------------------------------------\n\nTITLE: Default State Calculation for New Branches\nDESCRIPTION: Rust function that determines the default tracking state for newly imported branches based on configuration and remote type.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/tracking-branches.md#2025-04-17_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nfn default_state_for_newly_imported_branch(config, remote) {\n    if remote == \"git\" {\n        State::Tracked\n    } else if config[\"git.auto-local-bookmark\"] {\n        State::Tracked\n    } else {\n        State::New\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up standard Fish completion for jj\nDESCRIPTION: Configures command-line completion for jj in Fish shell using the standard completion mechanism.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_22\n\nLANGUAGE: shell\nCODE:\n```\njj util completion fish | source\n```\n\n----------------------------------------\n\nTITLE: Complex Set Operations on Author/Committer Filters in Revset\nDESCRIPTION: Revset commands that combine author and committer filters with set operations. These commands find the intersection or union of commits matching author and committer criteria.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_7\n\nLANGUAGE: revset\nCODE:\n```\nauthor(peff) & committer(gitster)\nauthor(peff) | committer(gitster)\n```\n\n----------------------------------------\n\nTITLE: Setting up Xonsh completion for jj\nDESCRIPTION: Configures command-line completion for jj in Xonsh shell by sourcing the Bash completion script.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\nsource-bash $(jj util completion)\n```\n\n----------------------------------------\n\nTITLE: Specifying Git Executable Path in JJ Config (TOML)\nDESCRIPTION: Configures the path to the Git executable for JJ to use when spawning Git subprocesses. This is useful if Git is not on the system PATH or a specific binary is needed.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_50\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nexecutable-path = \"/path/to/git\"\n```\n\n----------------------------------------\n\nTITLE: Working in Jujutsu Repository\nDESCRIPTION: Shows a simplified workflow in a Jujutsu repository, using generated bookmarks.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/github.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ # Do your work\n$ jj commit\n$ # Push change \"mw\", letting Jujutsu automatically create a bookmark called\n$ # \"push-mwmpwkwknuz\"\n$ jj git push --change mw\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Trunk Bookmark in TOML Configuration\nDESCRIPTION: Example of overriding the built-in trunk() revset alias to point to a specific bookmark at a specific remote.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[revset-aliases]\n'trunk()' = 'your-bookmark@your-remote'\n```\n\n----------------------------------------\n\nTITLE: Complex Intersections with Version Ranges in Revset\nDESCRIPTION: Revset commands that perform intersections between version ranges and author/committer filters. These commands find commits that match both version range and author/committer criteria.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_8\n\nLANGUAGE: revset\nCODE:\n```\n::v1.0.0 & (author(peff) & committer(gitster))\n::v1.0.0 & (author(peff) | committer(gitster))\n```\n\n----------------------------------------\n\nTITLE: Displaying Snapshot Style Conflict Markers in Jujutsu\nDESCRIPTION: Example of Jujutsu's alternative 'snapshot' conflict marker style that shows the contents of each side instead of using diffs.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n<<<<<<< Conflict 1 of 1\n+++++++ Contents of side #1\napple\ngrapefruit\norange\n------- Contents of base\napple\ngrape\norange\n+++++++ Contents of side #2\nAPPLE\nGRAPE\nORANGE\n>>>>>>> Conflict 1 of 1 ends\n```\n\n----------------------------------------\n\nTITLE: Configuring Command Matching in Jujutsu VCS using TOML\nDESCRIPTION: This TOML snippet demonstrates how to use the --when.commands condition key in Jujutsu VCS configuration. It shows examples of matching specific commands and subcommands using prefix matching and multiple command options.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_56\n\nLANGUAGE: toml\nCODE:\n```\n--when.commands = [\"file\"]        # matches `jj file show`, `jj file list`, etc\n--when.commands = [\"file show\"]   # matches `jj file show` but *NOT* `jj file list`\n--when.commands = [\"file\", \"log\"] # matches `jj file` *OR* `jj log` (or subcommand of either)\n```\n\n----------------------------------------\n\nTITLE: Installing macOS development tools for jj\nDESCRIPTION: Installs the Xcode command-line tools required for building jj from source on macOS.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nxcode-select --install\n```\n\n----------------------------------------\n\nTITLE: Using Bookmark Shortcuts in Jujutsu\nDESCRIPTION: Demonstrates the use of shortcuts for bookmark-related commands in Jujutsu, improving ease of use for frequent operations.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n`jj bookmark create BOOKMARK-NAME -r@`\n`jj b c BOOKMARK-NAME -r@`\n```\n\n----------------------------------------\n\nTITLE: Recent History Range Queries in Revset\nDESCRIPTION: Revset commands focusing on recent version history. These commands define ranges between versions and use set operations to isolate specific portions of repository history.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_2\n\nLANGUAGE: revset\nCODE:\n```\nv2.39.0..v2.40.0\n::v2.40.0 ~ ::v2.39.0\nv2.39.0::v2.40.0\n```\n\n----------------------------------------\n\nTITLE: Displaying Git-style Conflict Markers in Jujutsu\nDESCRIPTION: Example of Git's 'diff3' style conflict markers which can be enabled in Jujutsu for compatibility with Git tooling.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n<<<<<<< Side #1 (Conflict 1 of 1)\napple\ngrapefruit\norange\n||||||| Base\napple\ngrape\norange\n=======\nAPPLE\nGRAPE\nORANGE\n>>>>>>> Side #2 (Conflict 1 of 1 ends)\n```\n\n----------------------------------------\n\nTITLE: Create Revert Commit\nDESCRIPTION: Commands to create a commit that reverts changes from a previous commit\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ngit revert <revision>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj backout -r <revision>\n```\n\n----------------------------------------\n\nTITLE: Installing prerelease jj with vendored OpenSSL on Windows\nDESCRIPTION: Installs the prerelease version of jj from the main branch using Cargo with vendored OpenSSL on Windows.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\n# To install the *prerelease* version from the main branch\ncargo install --git https://github.com/jj-vcs/jj.git --locked --bin jj jj-cli --features vendored-openssl\n```\n\n----------------------------------------\n\nTITLE: Extrema Queries for Large Sets in Revset\nDESCRIPTION: Revset commands that find boundary commits (roots and heads) in larger commit sets. These commands identify the oldest and newest commits matching author criteria.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_10\n\nLANGUAGE: revset\nCODE:\n```\nroots(author(peff))\nheads(author(peff))\n```\n\n----------------------------------------\n\nTITLE: Single Tag References in Revset\nDESCRIPTION: Simple revset commands that reference individual Git version tags. These commands retrieve single revisions identified by specific version tags.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_0\n\nLANGUAGE: revset\nCODE:\n```\nv1.0.0\nv2.40.0\n```\n\n----------------------------------------\n\nTITLE: Displaying Conflict Resolution Result in Jujutsu\nDESCRIPTION: The expected result after resolving the conflict by applying the diff (grape to grapefruit) to the snapshot (uppercase text).\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nAPPLE\nGRAPEFRUIT\nORANGE\n```\n\n----------------------------------------\n\nTITLE: Displaying Long Conflict Markers in Jujutsu\nDESCRIPTION: Example of Jujutsu's extended conflict markers which are used when file content might be confused with regular conflict markers.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n<<<<<<<<<<<<<<< Conflict 1 of 1\n%%%%%%%%%%%%%%% Changes from base to side #1\n-Heading\n+HEADING\n =======\n+++++++++++++++ Contents of side #2\nNew Heading\n===========\n>>>>>>>>>>>>>>> Conflict 1 of 1 ends\n```\n\n----------------------------------------\n\nTITLE: Setting up Nushell completion for jj\nDESCRIPTION: Configures command-line completion for jj in Nushell by saving the completion script to a file and then loading it.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/install-and-setup.md#2025-04-17_snippet_24\n\nLANGUAGE: shell\nCODE:\n```\njj util completion nushell | save completions-jj.nu\nuse completions-jj.nu *  # Or `source completions-jj.nu`\n```\n\n----------------------------------------\n\nTITLE: Parent and Ancestor Queries for Old Commits in Revset\nDESCRIPTION: Revset commands that find parents and ancestors of old commits. These commands retrieve direct parents, all ancestors, and filtered ancestor sets of an old version tag.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_12\n\nLANGUAGE: revset\nCODE:\n```\nv1.0.0-\nv1.0.0---\n::v1.0.0---\n```\n\n----------------------------------------\n\nTITLE: Annotate File\nDESCRIPTION: Commands to show revision and author information for each line in a file\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ngit blame <file>\n```\n\nLANGUAGE: bash\nCODE:\n```\njj file annotate <path>\n```\n\n----------------------------------------\n\nTITLE: Example Commit Graph Structure\nDESCRIPTION: ASCII diagram showing a sample commit graph structure used to demonstrate various revset function behaviors.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_1\n\nLANGUAGE: text\nCODE:\n```\no E\n|\n| o D\n|/|\n| o C\n| |\no | B\n|/\no A\n|\no root()\n```\n\n----------------------------------------\n\nTITLE: Configuring Git-unreachable commit handling in Jujutsu\nDESCRIPTION: This TOML configuration disables the default behavior of abandoning commits that become unreachable in Git during import.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_47\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nabandon-unreachable-commits = false\n```\n\n----------------------------------------\n\nTITLE: Implementing WorkingCopyPatterns Trait in Rust\nDESCRIPTION: Defines a new WorkingCopyPatterns trait in Rust, which will be expanded with richer types and functionality in the future.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nimpl WorkingCopyPatterns {\n    pub fn to_matcher(&self) -> Box<dyn Matcher> {\n        ...\n    }\n\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Contributor List Using GitHub API\nDESCRIPTION: Shell script to generate a formatted list of contributors since the last release using GitHub API and jq for parsing. Excludes bot accounts and sorts uniquely.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/releasing.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nroot=$(jj log --no-graph -r 'heads(tags())' -T 'commit_id')\nfor i in $(seq 5); do\n    gh api \"/repos/jj-vcs/jj/compare/$root...main?per_page=100;page=$i\"\ndone | jq -r '.commits[] | select(.author.login | endswith(\"[bot]\") | not) | \"* \" + .commit.author.name + \" (@\" + .author.login + \")\"' | sort -fu\n```\n\n----------------------------------------\n\nTITLE: Merge Commit Filters in Revset\nDESCRIPTION: Revset commands that filter commits based on their merge status. These commands select merge commits or non-merge commits without reading the full commit objects.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_18\n\nLANGUAGE: revset\nCODE:\n```\nmerges()\n~merges()\n```\n\n----------------------------------------\n\nTITLE: Defining jj CLI Commands for Copy and Move Operations in Shell\nDESCRIPTION: Specifies new jj commands for recording copies and moves, including options for specifying revisions, forcing overwrite, and retroactive recording. These commands will update the target commit and record copy information for supporting backends.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/copy-tracking.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\njj cp $SRC $DEST [OPTIONS]\njj mv $SRC $DEST [OPTIONS]\n\n# Flags:\n# -r/--revision\n# -f\n# --after\n# --resolve\n# --allow-ignore-copy\n# --from REV\n\njj forget-cp $DEST [-r REV]\n```\n\n----------------------------------------\n\nTITLE: VS Code Editor Configuration\nDESCRIPTION: Recommended VS Code settings for the JJ project, including file formatting rules for different file types.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"files.insertFinalNewline\": true,\n    \"files.trimTrailingWhitespace\": true,\n    \"[rust]\": {\n        \"files.trimTrailingWhitespace\": false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fork Point Function Examples\nDESCRIPTION: Examples showing the output of the fork_point() function with different inputs on the sample commit graph.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nfork_point(E|D) ⇒ {B}\nfork_point(E|C) ⇒ {A}\nfork_point(E|B) ⇒ {B}\nfork_point(E|A) ⇒ {A}\nfork_point(D|C) ⇒ {C}\nfork_point(D|B) ⇒ {A}\nfork_point(B|C) ⇒ {A}\nfork_point(A) ⇒ {A}\nfork_point(none()) ⇒ {}\n```\n\n----------------------------------------\n\nTITLE: Linking to Merge Implementation Source Code\nDESCRIPTION: Markdown link reference defining the location of the merge.rs file in the Jujutsu repository, which contains the implementation of conflict handling.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/technical/conflicts.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[merge-rs]: https://github.com/jj-vcs/jj/blob/main/lib/src/merge.rs\n```\n\n----------------------------------------\n\nTITLE: Content-Based Filters in Revset\nDESCRIPTION: Revset commands that filter commits based on file content, empty status, or conflict status. These operations are limited to a small range due to their performance impact.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/cli/testing/bench-revsets-git.txt#2025-04-17_snippet_19\n\nLANGUAGE: revset\nCODE:\n```\nfile(root:\"Makefile\") & v1.0.0..v1.2.0\nempty() & v1.0.0..v1.2.0\nconflict() & v1.0.0..v1.2.0\n```\n\n----------------------------------------\n\nTITLE: Displaying Basic Text File Content Example in Jujutsu\nDESCRIPTION: An example of a simple text file with lowercase content that will be used to demonstrate conflict resolution in Jujutsu.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\napple\ngrape\norange\n```\n\n----------------------------------------\n\nTITLE: Using Mold Linker Shell Command\nDESCRIPTION: Command to run cargo tests using the mold linker for improved performance on Linux systems.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmold -run cargo insta test --workspace --test-runner nextest\n```\n\n----------------------------------------\n\nTITLE: Diff Format and Options Configuration\nDESCRIPTION: Configuration for diff format and related options\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[ui]\ndiff.format = \"git\"\n\n[diff.color-words]\nmax-inline-alternation = 3\ncontext = 3\n\n[diff.git]\ncontext = 3\n```\n\n----------------------------------------\n\nTITLE: Creating a WSL Workspace for Jujutsu on Windows\nDESCRIPTION: Adds a workspace in the Linux filesystem to avoid issues with the Windows Subsystem for Linux (WSL) setting execute bits on all files when accessing Windows drives.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/windows.md#2025-04-17_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nPS> jj workspace add --name wsl ~/my-repo\n```\n\n----------------------------------------\n\nTITLE: Accessing Operation Properties in Templates\nDESCRIPTION: Shows how to access operation properties in Jujutsu operation log templates using keywords.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/templates.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nIn `jj op log` templates, all 0-argument methods of [the `Operation`\ntype](#operation-type) are available as keywords. For example,\n`current_operation` is equivalent to `self.current_operation()`.\n```\n\n----------------------------------------\n\nTITLE: Panic Usage Example in Rust\nDESCRIPTION: Demonstrates an acceptable use of unwrap() where safety is guaranteed by function preconditions. Shows calling slice[0] on a slice that's documented to be non-empty.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/style_guide.md#2025-04-17_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nslice[0]\n```\n\n----------------------------------------\n\nTITLE: Configuring a disabled rustfmt tool in Jujutsu\nDESCRIPTION: This TOML configuration defines a disabled tool for running rustfmt on Rust files. It can be enabled for specific repositories as needed.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_36\n\nLANGUAGE: toml\nCODE:\n```\n[fix.tools.rustfmt]\nenabled = false\ncommand = [\"rustfmt\", \"--emit\", \"stdout\"]\npatterns = [\"glob:'**/*.rs'\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Release Clone\nDESCRIPTION: Commands to create a fresh clone of the repository in a temporary directory for safe publishing of the release.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/releasing.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd $(mktemp -d)\njj git clone https://github.com/jj-vcs/jj\ncd jj\njj new v0.<number>.0\n```\n\n----------------------------------------\n\nTITLE: Creating a Bookmark with Space in Name in JJ VCS\nDESCRIPTION: Example of creating a bookmark with spaces in the name, which requires proper quoting due to revset symbol parsing rules. This demonstrates how to properly escape bookmark names containing spaces.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njj bookmark create -r@- \"'name with space'\"\n```\n\n----------------------------------------\n\nTITLE: View Operation Log\nDESCRIPTION: Commands to view the log of operations performed on the repository\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/git-command-table.md#2025-04-17_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\njj op log\n```\n\n----------------------------------------\n\nTITLE: Defining Sparse Patterns Command Syntax\nDESCRIPTION: Illustrates the new command syntax for specifying SparsePatternsPath rules on the CLI and in an editor, including examples of various rule combinations.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\n(include|exclude):(dir|files|exact):<path>\n\ninclude:dir:foo\nexclude:dir:foo/bar\ninclude:dir:foo/bar/baz\nexclude:dir:foo/bar/baz/qux\n```\n\n----------------------------------------\n\nTITLE: Configuring Expected Exit Codes for Diff Tool\nDESCRIPTION: Defines expected exit codes to suppress warning messages for specific diff tool outcomes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_13\n\nLANGUAGE: toml\nCODE:\n```\n[merge-tools.delta]\ndiff-expected-exit-codes = [0, 1]\n```\n\n----------------------------------------\n\nTITLE: Displaying Conflict with Missing Newline Character in Jujutsu\nDESCRIPTION: Example of how Jujutsu handles conflicts involving missing terminating newline characters with additional comments to help interpretation.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/conflicts.md#2025-04-17_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n<<<<<<< Conflict 1 of 1\n+++++++ Contents of side #1 (no terminating newline)\ngrapefruit\n%%%%%%% Changes from base to side #2 (adds terminating newline)\n-grape\n+grape\n>>>>>>> Conflict 1 of 1 ends\n```\n\n----------------------------------------\n\nTITLE: Configuring Revsets Log Pattern (Rust)\nDESCRIPTION: Configuration example showing how to restore old behavior of listing all tagged heads in log output using revsets.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_11\n\nLANGUAGE: rust\nCODE:\n```\nrevsets.log = \"@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())\"\n```\n\n----------------------------------------\n\nTITLE: Dotted Style TOML Configuration Example\nDESCRIPTION: Examples of equivalent TOML configurations using dotted style and heading notation\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_1\n\nLANGUAGE: toml\nCODE:\n```\n# Dotted style\ntemplate-aliases.\"format_short_id(id)\" = \"id.shortest(12)\"\ncolors.\"commit_id prefix\".bold = true\n\n# is equivalent to:\n[template-aliases]\n\"format_short_id(id)\" = \"id.shortest(12)\"\n\n[colors]\n\"commit_id prefix\" = { bold = true }\n```\n\n----------------------------------------\n\nTITLE: Implementing New Sparse Patterns Data Structures in Rust\nDESCRIPTION: Defines new Rust data structures for Sparse Patterns v2, including WorkingCopyPathBuf, SparsePatternsPathType, SparsePatternsPath, WorkingCopyMapping, and WorkingCopyPatterns.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\nstruct WorkingCopyPathBuf {\n    String\n}\nstruct WorkingCopyPath {\n    str\n}\n\npub enum SparsePatternsPathType {\n    Dir,    // Everything under <path>/...\n    Files,  // Files under <path>/*\n    Exact,  // <path> exactly\n}\n\npub struct SparsePatternsPath {\n    path_type: SparsePatternsPathType,\n    include: bool,  // True if included, false if excluded.\n    path: RepoPathBuf,\n}\n\npub struct WorkingCopyMapping {\n    src_path: RepoPathBuf,\n    dst_path: WorkingCopyPathBuf,\n    recursive: bool,  // If false, only immediate children of src_path (files) are renamed.\n}\n\npub struct WorkingCopyPatterns {\n    sparse_paths: Vec<SparsePatternsPath>,\n    mappings: Vec<WorkingCopyMapping>,\n}\n\npub trait OpStore {\n    ...\n    pub fn read_working_copy_patterns(&self, id: &WorkingCopyPatternsId) -> OpStoreResult<WorkingCopyPatterns> { ... }\n    pub fn write_working_copy_patterns(&self, sparse_patterns: &WorkingCopyPatterns) -> OpStoreResult<WorkingCopyPatternsId> { .. }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Current Sparse Pattern Format in JJ\nDESCRIPTION: Shows the current format of sparse patterns in JJ, which is an unordered list of prefix strings stored in working copy state files.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\npath/one\npath/to/dir/two\n```\n\n----------------------------------------\n\nTITLE: Diff Color and Style Configuration\nDESCRIPTION: Configuration for customizing diff color styles\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[colors]\n\"diff removed token\" = { bg = \"#221111\", underline = false }\n\"diff added token\" = { bg = \"#002200\", underline = false }\n\"diff token\" = { reverse = true, underline = false }\n```\n\n----------------------------------------\n\nTITLE: Enabling Synthetic Nodes in Log (Rust)\nDESCRIPTION: Configuration setting to make jj log include synthetic nodes in the graph where some revisions were elided.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_12\n\nLANGUAGE: rust\nCODE:\n```\nui.log-synthetic-elided-nodes = true\n```\n\n----------------------------------------\n\nTITLE: Configuring List Templates\nDESCRIPTION: Specifies templates for config list display including detailed view options.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_17\n\nLANGUAGE: toml\nCODE:\n```\n[templates]\n# Use builtin config list template\nconfig_list = \"builtin_config_list\"\n\n[templates]\nconfig_list = \"builtin_config_list_detailed\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Working Copy Mapping in Rust\nDESCRIPTION: Shows the default no-op mapping for WorkingCopyPatterns, which maps the root repo path to the root working copy path recursively.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\nvec![WorkingCopyMapping {\n    src_path: RepoPathBuf::root(),\n    dst_path: WorkingCopyPathBuf::root(),\n    recursive: true,\n}]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Sparse Patterns Canonicalization\nDESCRIPTION: Shows how sparse pattern rules are canonicalized to a minimal, functionally equivalent form before serialization.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\n# Before\ninclude:dir:foo\nexclude:dir:foo/bar/baz/qux\ninclude:dir:foo/bar/baz\nexclude:dir:foo/bar\n\n# Canonicalized\ninclude:dir:foo\nexclude:dir:foo/bar\n```\n\n----------------------------------------\n\nTITLE: Duplicate Description Template\nDESCRIPTION: Template configuration for customizing duplicate commit descriptions\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[templates]\nduplicate_description = '''\nconcat(\n  description,\n  \"\\n(cherry picked from commit \",\n  commit_id,\n  \")\")\n'''\n```\n\n----------------------------------------\n\nTITLE: Using Conditional Diff Template Methods\nDESCRIPTION: Example of using the new .diff() template methods to conditionally display diffs in commit templates.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\nif(current_working_copy, diff.summary())\n```\n\n----------------------------------------\n\nTITLE: Zed Editor Configuration\nDESCRIPTION: Configuration settings for the Zed editor including formatting rules and language-specific settings for the JJ project.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"ensure_final_newline_on_save\": true,\n  \"remove_trailing_whitespace_on_save\": true,\n\n  \"languages\": {\n    \"Markdown\": { \"format_on_save\": \"off\" }\n    \"Rust\": {\n      \"format_on_save\": \"on\",\n      \"remove_trailing_whitespace_on_save\": false\n    }\n  },\n\n  \"lsp\": {\n    \"rust-analyzer\": {\n      \"initialization_options\": {\n        \"rustfmt\": { \"extraArgs\": [\"+nightly\"] }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Refactoring View Object Storage in Rust for Working Copy Patterns\nDESCRIPTION: Shows the transformation of the View object from storing direct commit IDs to using a WorkingCopyInfo struct that adds indirection via WorkingCopyPatternsId. This change improves storage efficiency since working copy patterns don't change frequently.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\n// Before:\npub wc_commit_ids: HashMap<WorkspaceNameBuf, CommitId>,\n\n// After:\npub struct WorkingCopyInfo {\n    pub commit_id: CommitId,\n    pub wc_patterns_id: WorkingCopyPatternsId,\n}\n...\npub wc_info: HashMap<WorkspaceNameBuf, WorkingCopyInfo>,\n```\n\n----------------------------------------\n\nTITLE: Proposed Data Model Schema Definition\nDESCRIPTION: Defines the new proposed data model structure with enhanced support for tracking states and remote branch management.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/tracking-branches.md#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nbranches\n  [name]: target\ntags\n  [name]: target\nremotes\n  [\"git\"]:\n    branches\n      [name]: target, state                 # refs/heads/{name}\n    tags\n      [name]: target, state = tracking      # refs/tags/{name}\n    head: target?, state = TBD              # refs/HEAD\n  [remote]:\n    branches\n      [name]: target, state                 # refs/remotes/{remote}/{name}\n    tags: (empty)\n    head: (empty)\ngit_refs                                    # last imported/exported refs\n  [\"refs/heads/{name}\"]: target\n  [\"refs/remotes/{remote}/{name}\"]: target\n  [\"refs/tags/{name}\"]: target\n```\n\n----------------------------------------\n\nTITLE: Commit History Graph Example\nDESCRIPTION: ASCII diagram showing example commit history used to demonstrate various revset operators. Shows a simple branching history with commits A through D and their relationships.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/revsets.md#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\no D\n|\\\n| o C\n| |\no | B\n|/\no A\n|\no root()\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation - Project Roles and Governance\nDESCRIPTION: Comprehensive markdown documentation that defines the governance structure, roles, and processes for the Jujutsu version control system project. Includes sections on maintainer responsibilities, contributor definitions, and decision-making procedures.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/GOVERNANCE.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Jujutsu Governance\n\n## Overview\n\nJujutsu is an open source project, led, maintained and designed for a worldwide\ncommunity. Anyone who is interested can join, contribute, and participate in the\ndecision-making process. This document is intended to help you understand how\nyou can do that.\n\n## Project roles\n\nWe greatly appreciate everyone's contributions, and Jujutsu has benefited\ngreatly from people who shared a single idea, change, or a suggestion, without\never becoming a regular contributor. We also want everybody to feel welcome to\nshare their suggestions for the project (as long as you follow the Community\nGuidelines).\n\nThere are two special roles for participants in the Jujutsu projects:\nMaintainers and Contributors.\n\nThe role of the Maintainer is formally defined. These are the people empowered\nto collectively make final decisions about most aspects of the project. They are\nexpected to take community's input seriously and to aim for the benefit of the\nentire community.\n\nThe role of a Contributor is less formal. In situations where opinions become\nnumerous or contentious, it is acceptable for the maintainers to assign more\nweight to the voices of the more established Contributors.\n```\n\n----------------------------------------\n\nTITLE: Profiling 'jj' with Built-in Instrumentation\nDESCRIPTION: Instructions for using JJ's built-in instrumentation (implemented with tracing::instrument) to generate a JSON trace file. The trace can be visualized by loading it in Chrome's perfetto UI.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nJJ_TRACE=/tmp/trace.json jj diff\n```\n\n----------------------------------------\n\nTITLE: Protocol Buffer References in Operation Log\nDESCRIPTION: References to Protocol Buffer definitions for operation store types in op_store.proto file, which define the view objects containing repository state and operation objects for tracking changes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/technical/concurrency.md#2025-04-17_snippet_0\n\nLANGUAGE: protobuf\nCODE:\n```\n// Referenced from op_store.proto\\nRefTarget // Definition for handling conflicted bookmark states\\nview object // Contains repository state including heads, bookmarks, tags\\noperation object // Contains pointers to view and parent operations\n```\n\n----------------------------------------\n\nTITLE: Target Calculation in Merge Context\nDESCRIPTION: Rust function that calculates the branch target based on its tracking state during merge operations.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/tracking-branches.md#2025-04-17_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\nfn target_in_merge_context(known_target, state) {\n    match state {\n        State::New => RefTarget::absent(),\n        State::Tracked => known_target,\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Jujutsu CLI Help Command in Markdown\nDESCRIPTION: This snippet demonstrates how to reference the Jujutsu CLI help command using inline code formatting in Markdown.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/index.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`jj help`\n```\n\n----------------------------------------\n\nTITLE: Creating New Revision with Conflicted Bookmark in Jujutsu\nDESCRIPTION: Demonstrates the error that occurs when attempting to create a new revision using a conflicted bookmark name.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/bookmarks.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`jj new main`\n```\n\n----------------------------------------\n\nTITLE: Markdown Header with HTML Styling\nDESCRIPTION: Title block for the Jujutsu project documentation, including centered alignment and logo image placement.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<div class=\"title-block\" style=\"text-align: center;\" align=\"center\">\n\n# Jujutsu—a version control system\n\n<p><img title=\"jj logo\" src=\"docs/images/jj-logo.svg\" width=\"320\" height=\"320\"></p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Defining Copy Tracking Structures and Backend Trait in Rust\nDESCRIPTION: Defines structures and traits for copy tracking in jj, including CopySource, CopyRecord, and Backend trait with get_copy_records method. This enables extensible APIs for recording and retrieving copy info for diffing and rebasing purposes.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/copy-tracking.md#2025-04-17_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\npub struct CopySource {\n    path: RepoPathBuf,\n    file: FileId,\n    commit: Option<CommitId>,\n}\n\npub enum CopySources {\n    Resolved(CopySource),\n    Conflict(HashSet<CopySource>),\n}\n\npub struct CopyRecord {\n    target: RepoPathBuf,\n    id: CommitId,\n    sources: CopySources,\n}\n\npub struct CopyRecordOpts {\n    // TODO: Probably something for git similarity detection\n}\n\npub type CopyRecordStream = BoxStream<BackendResult<CopyRecord>>;\n\npub trait Backend {\n    async fn get_copy_records(&self, paths: &[RepoPathBuf], roots: &[CommitId], heads: &[CommitId]) -> CopyRecordStream;\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Git Subprocess in JJ (TOML)\nDESCRIPTION: Configures JJ to use libgit2 instead of Git subprocesses for remote interactions. This is a legacy option that will be removed in future versions.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_51\n\nLANGUAGE: toml\nCODE:\n```\n[git]\nsubprocess = false\n```\n\n----------------------------------------\n\nTITLE: UV Installation Commands\nDESCRIPTION: Installation commands for UV package manager across different platforms.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/contributing.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\nLANGUAGE: shell\nCODE:\n```\npowershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n```\n\nLANGUAGE: shell\nCODE:\n```\nbrew install uv\n```\n\nLANGUAGE: shell\nCODE:\n```\ncargo install --git https://github.com/astral-sh/uv uv\n```\n\n----------------------------------------\n\nTITLE: Generating Local Contributor List\nDESCRIPTION: Alternative method to generate contributor list using local JJ commands, producing a sorted list of author names.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/releasing.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\njj log --no-graph -r 'heads(tags())..main' -T '\"* \" ++ author ++ \"\\n\"' | sort -fu\n```\n\n----------------------------------------\n\nTITLE: Displaying Jujutsu Logo in Markdown\nDESCRIPTION: This snippet embeds the Jujutsu logo image into the documentation using Markdown syntax. It specifies the image title, source, width, and height.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/index.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<figure>\n<img title=\"jj logo\" src=\"images/jj-logo.svg\" width=\"320\" height=\"320\">\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Markdown Design Document Structure\nDESCRIPTION: A markdown template showing the structure and sections expected in a project design document, including title, summary, goals, detailed design and related work sections.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design_doc_blueprint.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Title\n\n> A cool name for your Project\n\nAuthor: [Your-Name](mailto:your-name@reachable.com)\n\n> If there are multiple authors, just list them all\n\n## Summary\n\nA short summary of your project/re-design/component and what problems it\naddresses in about 3-10 sentences.\n\n## State of the Feature as of `$VERSION` (optional)\n\nThe state of the feature you want to improve and where it currently falls\nshort. If there's nothing to compare to, leave it out.\n\n## Prior work (optional)\n\nDoes this feature exist somewhere else and which tradeoffs it made.\n\n> If there's no prior work, then use the related work section below.\n\n## Goals and non-goals\n\nDirect goals of the project and features deemed not worth pursuing.\n\n## Overview\n\nA detailed overview of the project and the improvements it brings.\n\n### Detailed Design\n\nThe place to describe all new interfaces and interactions and how it plays into\nthe existing code and behavior. This is the place for all nitty-gritty details\nwhich interact with the system.\n\n## Alternatives considered (optional)\n\nOther alternatives to your suggested approach, and why they fall short.\n\n## Issues addressed (optional)\n\nA list of issues which are addressed by this design.\n\n## Related Work (optional)\n\nIf there's a feature in another VCS which shares some similarities to your\nproposed work, it belongs here. An example would be Jujutsu sparse workspaces\nand Perforce client workspaces.\n\n## Future Possibilities\n\nThe section for things which could be added to it or deemed out of scope during\nthe discussion.\n```\n\n----------------------------------------\n\nTITLE: Configuring SSH for diffedit3-ssh in SSH Config File\nDESCRIPTION: SSH configuration snippet to add to ~/.ssh/config for automatically setting up port forwarding when connecting to a specific host. It forwards the ports required by diffedit3-ssh, simplifying the connection process.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_30\n\nLANGUAGE: ssh-config\nCODE:\n```\nHost myhost\n    User     myself\n    Hostname myhost.example.com\n    LocalForward 17376 localhost:17376\n    LocalForward 17377 localhost:17377\n    LocalForward 17378 localhost:17378\n    LocalForward 17379 localhost:17379\n    LocalForward 17380 localhost:17380\n```\n\n----------------------------------------\n\nTITLE: Defining Working Copy Mapping Syntax\nDESCRIPTION: Illustrates the compact text syntax for editing working copy mappings in file form or on the CLI.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/sparse-v2.md#2025-04-17_snippet_6\n\nLANGUAGE: txt\nCODE:\n```\n\"<from>\" -> \"<to>\" [nonrecursive]\n```\n\n----------------------------------------\n\nTITLE: Running Demo Scripts to Generate Images\nDESCRIPTION: Command to execute all demo scripts and generate SVG/PNG images while viewing the output in a pager. This must be run from the demos directory and requires ImageMagick and term-transcript-cli to be installed.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/demos/README.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd demos\n./run_scripts.sh demo_*.sh |less\n```\n\n----------------------------------------\n\nTITLE: Including Markdown Content in CLI Reference\nDESCRIPTION: This snippet uses a custom include-markdown directive to insert the contents of the CLI reference from another file. It specifies options for rewriting URLs and defining the start point of the included content.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/cli-reference.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{%\n  include-markdown \"../cli/tests/cli-reference@.md.snap\"\n  rewrite-relative-urls=false\n  start=\"<!-- BEGIN MARKDOWN-->\"\n  comments=true\n%}\n```\n\n----------------------------------------\n\nTITLE: Setting up SSH Port Forwarding for diffedit3-ssh\nDESCRIPTION: Command to establish SSH connection with port forwarding for diffedit3-ssh. It forwards ports 17376-17380 from the local machine to the same ports on the remote host, enabling the use of diffedit3 over SSH.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/config.md#2025-04-17_snippet_29\n\nLANGUAGE: shell\nCODE:\n```\nssh -L 17376:localhost:17376 \\\n    -L 17377:localhost:17377 \\\n    -L 17378:localhost:17378 \\\n    -L 17379:localhost:17379 \\\n    -L 17380:localhost:17380 \\\n    myhost.example.com\n```\n\n----------------------------------------\n\nTITLE: Referencing Merge Implementation in Jujutsu\nDESCRIPTION: Reference to the Rust implementation of conflict flattening and simplification in the merge.rs file. These functions handle simplifying conflict expressions by removing canceling terms.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/technical/conflicts.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`Merge::flatten()` and `Merge::simplify()` in [`merge.rs`][merge-rs]\n```\n\n----------------------------------------\n\nTITLE: Implementing Copy Tracking in Backend Commit Structure in Rust\nDESCRIPTION: Extends the Backend trait and Commit structure to support copy tracking. Adds a new field to Commit for storing copy records and a method to check if a backend supports copy tracking.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/docs/design/copy-tracking.md#2025-04-17_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\npub struct Commit {\n    ...\n    copies: Option<HashMap<RepoPathBuf, CopySources>>,\n}\n\npub trait Backend {\n    fn supports_copy_tracking(&self) -> bool;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Git Remotes in TOML\nDESCRIPTION: Shows how to set default remotes for git fetch and push operations in JJ's configuration file, allowing for multiple default remotes for fetching.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_16\n\nLANGUAGE: toml\nCODE:\n```\ngit.fetch = [\"remote1\", \"remote2\"]  # For multiple remotes\ngit.push = \"origin\"  # For single remote\n```\n\n----------------------------------------\n\nTITLE: Disabling Diff Instructions in TOML Configuration\nDESCRIPTION: Shows how to disable the creation of the JJ-INSTRUCTIONS file during diff editing by setting the appropriate configuration value to false.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\nui.diff-instructions = false\n```\n\n----------------------------------------\n\nTITLE: Enabling Relative Timestamps in TOML Configuration\nDESCRIPTION: Shows how to enable relative timestamps display in commands like log, show, and obslog through configuration.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_21\n\nLANGUAGE: toml\nCODE:\n```\nui.relative-timestamps = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Italic Text in Jujutsu\nDESCRIPTION: Demonstrates how to set a configuration option for displaying error messages in red italic text.\nSOURCE: https://github.com/jj-vcs/jj/blob/main/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\ncolor.error = { fg = \"red\", italic = true }\n```"
  }
]
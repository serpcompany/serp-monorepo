[
  {
    "owner": "casper-network",
    "repo": "casper-sidecar",
    "content": "TITLE: Querying Block by Hash in Casper Network\nDESCRIPTION: This command retrieves information about a specific block using its unique hash identifier via the Sidecar REST API. The response includes the complete block details including header and body information.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/block/bd2e0c36150a74f50d9884e38a0955f8b1cba94821b9828c5f54d8929d6151bc\n```\n\n----------------------------------------\n\nTITLE: Fetching Latest Block in Casper Network via REST API\nDESCRIPTION: This command retrieves information about the last block added to the Casper blockchain linear chain using the Sidecar REST API. It returns the block hash and detailed block data in JSON format.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/block\n```\n\n----------------------------------------\n\nTITLE: Fetching Transaction Details by Hash in Casper Network\nDESCRIPTION: This command retrieves comprehensive transaction information using a transaction hash and type. The endpoint returns an aggregate of the various states a transaction goes through in its lifecycle, including acceptance and processing status.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888//transaction/version1/3141e85f8075c3a75c2a1abcc79810c07d103ff97c03200ab0d0baf91995fe4a\n```\n\n----------------------------------------\n\nTITLE: Checking Sidecar Liveness with curl\nDESCRIPTION: This shell command checks if the Casper Sidecar is running by requesting the newest stored block via the REST API. It provides a basic liveness check to ensure the service is operational.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_25\n\nLANGUAGE: sh\nCODE:\n```\ncurl http://SIDECAR_URL:SIDECAR_REST_PORT/block\n```\n\n----------------------------------------\n\nTITLE: Implementing JSON-RPC Server with casper-json-rpc in Rust\nDESCRIPTION: A complete example showing how to set up a JSON-RPC server using the casper-json-rpc library. It demonstrates registering handlers for 'get' and 'put' methods, creating a warp route, and starting a hyper server.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/json_rpc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse casper_json_rpc::{ConfigLimit, Error, Params, RequestHandlersBuilder};\nuse std::{convert::Infallible};\n\nasync fn get(params: Option<Params>) -> Result<String, Error> {\n    // * parse params or return `ReservedErrorCode::InvalidParams` error\n    // * handle request and return result\n    Ok(\"got it\".to_string())\n}\n\nasync fn put(params: Option<Params>, other_input: &str) -> Result<String, Error> {\n    Ok(other_input.to_string())\n}\n\n#[tokio::main]\nasync fn main() {\n    // Register handlers for methods \"get\" and \"put\".\n    let mut handlers = RequestHandlersBuilder::new();\n    let limit = ConfigLimit::default();\n    handlers.register_handler(\"get\", get, &limit);\n    let put_handler = move |params| async move { put(params, \"other input\").await };\n    handlers.register_handler(\"put\", put_handler, &limit);\n    let handlers = handlers.build();\n\n    // Get the new route.\n    let path = \"rpc\";\n    let max_body_bytes = 1024;\n    let route = casper_json_rpc::route(path, max_body_bytes, handlers);\n\n    // Convert it into a `Service` and run it.\n    let make_svc = hyper::service::make_service_fn(move |_| {\n        let svc = warp::service(route.clone());\n        async move { Ok::<_, Infallible>(svc.clone()) }\n    });\n\n    hyper::Server::bind(&([127, 0, 0, 1], 3030).into())\n        .serve(make_svc)\n        .await\n        .unwrap();\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Casper Sidecar Components Architecture\nDESCRIPTION: Mermaid diagram showing the main components of Casper Sidecar including SSE server, RPC API server, REST API server and Admin API server along with their external dependencies like config file, storage and node connections.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n---\ntitle: The Casper Sidecar Components\n---\n   graph LR;\n   subgraph CASPER_SIDECAR\n      SSE_SERVER[\"SSE server\"]\n      RPC_API_SERVER[\"RPC API server (JSON)\"]\n      REST_API[\"Rest API server\"]\n      ADMIN_API[\"Admin API server\"]\n   end\n   CONFIG{{\"Config file (TOML)\"}}\n   CONFIG --> CASPER_SIDECAR\n   STORAGE[(Storage)]\n   NODE_SSE((\"Casper node SSE port\"))\n   NODE_BINARY((\"Casper node binary port\"))\n   RPC_API_SERVER --> NODE_BINARY\n   SSE_SERVER --> NODE_SSE\n   SSE_SERVER --> STORAGE\n   STORAGE --> REST_API\n```\n\n----------------------------------------\n\nTITLE: Visualizing RPC API Server Architecture\nDESCRIPTION: Mermaid diagram showing the RPC API server architecture including client interaction and connection to Casper node binary port.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\n   graph LR;\n   CLIENT{Client}\n   CLIENT --> RPC_API\n   CONFIG{{Config file}}\n   MAIN --1.reads--> CONFIG\n   CASPER_NODE((\"Casper Node binary port\"))\n   RPC_API --forwards request--> CASPER_NODE\n   subgraph \"Casper Sidecar\"\n      MAIN[main.rs]\n      MAIN --2.spawns--> RPC_API\n      RPC_API[\"RPC JSON API\"]\n   end\n```\n\n----------------------------------------\n\nTITLE: Monitoring Sidecar Event Stream with cURL\nDESCRIPTION: Basic cURL command to monitor the Sidecar event stream. Users need to replace HOST and PORT with their specific configuration values.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://<HOST:PORT>/events\n```\n\n----------------------------------------\n\nTITLE: Querying Processed Transaction by Hash with curl\nDESCRIPTION: Example of how to retrieve information about a processed transaction using its transaction hash. This endpoint provides details about transactions that have been processed by the network.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/transaction/processed/version1/8204af872d7d19ef8da947bce67c7a55449bc4e2aa12d2756e9ec7472b4854f7\n```\n\n----------------------------------------\n\nTITLE: Querying Node Events Stream with Example Configuration\nDESCRIPTION: cURL command to monitor node events using the example configuration settings with the default host (127.0.0.1) and port (19999).\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events\n```\n\n----------------------------------------\n\nTITLE: Configuring REST API Server in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration for the REST API server in Casper Sidecar. Includes settings for enabling the server, port configuration, request limiting, and timeout parameters.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_10\n\nLANGUAGE: toml\nCODE:\n```\n[rest_api_server]\nenable_server = true\nport = 18888\nmax_concurrent_requests = 50\nmax_requests_per_second = 50\nrequest_timeout_in_seconds = 10\n```\n\n----------------------------------------\n\nTITLE: Querying Accepted Transaction by Hash with curl\nDESCRIPTION: Example of how to retrieve information about an accepted transaction using its transaction hash. This endpoint provides details about the accepted transaction with the specified hash.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/transaction/accepted/version1/8204af872d7d19ef8da947bce67c7a55449bc4e2aa12d2756e9ec7472b4854f7\n```\n\n----------------------------------------\n\nTITLE: Sample JSON-RPC Request Using curl\nDESCRIPTION: Demonstrates how to make a POST request to the JSON-RPC server using curl. This example shows the proper format for a JSON-RPC 2.0 request.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/json_rpc/README.md#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl -X POST -H 'Content-Type: application/json' -d '{\"jsonrpc\":\"2.0\",\"id\":\"id\",\"method\":\"get\"}' http://127.0.0.1:3030/rpc\n```\n\n----------------------------------------\n\nTITLE: Configuring RPC Server in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration for the RPC API server in Casper Sidecar. Includes settings for the main server, node client connection, speculative execution server, and exponential backoff parameters.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[rpc_server.main_server]\nenable_server = true\naddress = '0.0.0.0:7777'\nqps_limit = 100\nmax_body_bytes = 2_621_440\ncors_origin = ''\n\n[rpc_server.node_client]\naddress = '0.0.0.0:28101'\nmax_message_size_bytes = 4_194_304\nmessage_timeout_secs = 10\nclient_access_timeout_secs = 10\n\n[rpc_server.speculative_exec_server]\nenable_server = true\naddress = '0.0.0.0:7778'\nqps_limit = 1\nmax_body_bytes = 2_621_440\ncors_origin = ''\n\n\n[rpc_server.node_client.exponential_backoff]\ninitial_delay_ms = 1000\nmax_delay_ms = 32_000\ncoefficient = 2\nmax_attempts = 30\n```\n\n----------------------------------------\n\nTITLE: Retrieving Block by Height in Casper Network\nDESCRIPTION: This command fetches block details by specifying the block height in the Casper blockchain. The height parameter represents the position of the block in the blockchain sequence.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/block/336460\n```\n\n----------------------------------------\n\nTITLE: Querying Step Events by Era with curl\nDESCRIPTION: Example of how to retrieve step events emitted at the end of a specific era using the era identifier. This endpoint returns information about step events for the specified era.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_22\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/step/7268\n```\n\n----------------------------------------\n\nTITLE: Discovering JSON-RPC API using curl\nDESCRIPTION: This snippet demonstrates how to use curl to query the Sidecar for its JSON-RPC API using the rpc.discover method. It sends a POST request to the Sidecar's RPC endpoint with a JSON payload.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/rpc_sidecar/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -X POST http://localhost:<RPC_SERVER_PORT>/rpc -H 'Content-Type: application/json' -d '{\"jsonrpc\": \"2.0\", \"method\": \"rpc.discover\", \"id\": 1}'\n```\n\n----------------------------------------\n\nTITLE: Accessing Sidecar-Generated Events\nDESCRIPTION: cURL command to access Sidecar-specific events that are not directly from the node but generated by the Sidecar service itself.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events/sidecar\n```\n\n----------------------------------------\n\nTITLE: Visualizing SSE Server Components\nDESCRIPTION: Mermaid diagram detailing the internal components of the SSE Server including the main process, SSE API, event buffer, and listener along with their interactions with config, storage and node SSE port.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\n   graph TD;\n   CLIENT{Client}\n   CLIENT --> SSE_SERVER_API\n   STORAGE[(\"Storage\")]\n   CONFIG{{\"Config file (TOML)\"}}\n   MAIN --1.reads--> CONFIG\n   NODE_SSE{Node SSE port}\n   SSE_LISTENER --2--> STORAGE\n   NODE_SSE --1--> SSE_LISTENER\n   subgraph CASPER_SIDECAR\n     MAIN[main.rs]\n     MAIN --2.spawns---> SSE_SERVER\n     subgraph SSE_SERVER\n        SSE_SERVER_API[\"SSE API\"]\n        RING_BUFFER[\"Events buffer\"]\n        SSE_SERVER_API --> RING_BUFFER\n        SSE_LISTENER --3--> RING_BUFFER\n        subgraph \"connection\"\n          SSE_LISTENER[\"SSE listener\"]\n        end\n     end\n   end\n```\n\n----------------------------------------\n\nTITLE: Replaying Event Stream from Specific Event ID\nDESCRIPTION: cURL command to replay the event stream from a specified event ID, useful for recovering events after a connection interruption.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://HOST:PORT/events?start_from=ID\n```\n\n----------------------------------------\n\nTITLE: Querying Finality Signatures by Block Hash with curl\nDESCRIPTION: Example of how to retrieve finality signatures for a specific block using its block hash. This endpoint returns the finality signatures associated with the specified block.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_21\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/signatures/85aa2a939bc3a4afc6d953c965bab333bb5e53185b96bb07b52c295164046da2\n```\n\n----------------------------------------\n\nTITLE: Querying Validator Faults by Era with curl\nDESCRIPTION: Example of how to retrieve faults that occurred in a specific era using the era identifier. This endpoint returns information about all validator faults that happened during the specified era.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_20\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/faults/2304\n```\n\n----------------------------------------\n\nTITLE: Example of Event Stream Replay from Specific ID\nDESCRIPTION: Example cURL command showing how to replay the event stream from a specific event ID using a live host and port.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://65.21.235.219:9999/events?start_from=29267508\n```\n\n----------------------------------------\n\nTITLE: Installing Casper Sidecar Debian Package\nDESCRIPTION: Command to install the Debian package for the Casper Sidecar service on Linux systems. This assumes the package is available locally.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install ./casper-sidecar_0.1.0-0_amd64.deb\n```\n\n----------------------------------------\n\nTITLE: Running Casper Sidecar with Specific Log Level\nDESCRIPTION: This shell command runs the Casper Sidecar with INFO log level by setting the RUST_LOG environment variable. It specifies the configuration file to use and targets the casper-sidecar package specifically.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_22\n\nLANGUAGE: sh\nCODE:\n```\nRUST_LOG=info cargo run -p casper-sidecar -- --path-to-config ./resources/example_configs/EXAMPLE_NCTL_CONFIG.toml\n```\n\n----------------------------------------\n\nTITLE: Configuring SSE Server in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration example for the SSE (Server-Sent Events) server in Casper Sidecar. Sets up event streaming capabilities with placeholders for connection details and event stream server configuration.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[sse_server]\nenable_server = true\nemulate_legacy_sse_apis = [\"V1\"]\ndisable_event_persistence = false\n\n[[sse_server.connections]]\n <Described later in the document>\n\n[sse_server.event_stream_server]\n <Described later in the document>\n```\n\n----------------------------------------\n\nTITLE: Querying Validator Faults by Public Key with curl\nDESCRIPTION: Example of how to retrieve faults associated with a validator using their public key. This endpoint returns information about validator faults identified by the given public key.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_19\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/faults/01a601840126a0363a6048bfcbb0492ab5a313a1a19dc4c695650d8f3b51302703\n```\n\n----------------------------------------\n\nTITLE: Configuring SSE Node Connections in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration for multiple SSE node connections in Casper Sidecar. Demonstrates how to connect to multiple nodes with different connection parameters including retry logic, timeouts, and logging settings.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_7\n\nLANGUAGE: toml\nCODE:\n```\n[sse_server]\nenable_server = true\ndisable_event_persistence = false\n\n[[sse_server.connections]]\nip_address = \"127.0.0.1\"\nsse_port = 18101\nrest_port = 14101\nmax_attempts = 10\ndelay_between_retries_in_seconds = 5\nallow_partial_connection = false\nenable_logging = true\nconnection_timeout_in_seconds = 3\nno_message_timeout_in_seconds = 60\nsleep_between_keep_alive_checks_in_seconds = 30\n\n[[sse_server.connections]]\nip_address = \"127.0.0.1\"\nsse_port = 18102\nrest_port = 14102\nmax_attempts = 10\ndelay_between_retries_in_seconds = 5\nallow_partial_connection = false\nenable_logging = false\nconnection_timeout_in_seconds = 3\nno_message_timeout_in_seconds = 60\nsleep_between_keep_alive_checks_in_seconds = 30\n\n[[sse_server.connections]]\nip_address = \"127.0.0.1\"\nsse_port = 18103\nrest_port = 14103\nmax_attempts = 10\ndelay_between_retries_in_seconds = 5\nallow_partial_connection = false\nenable_logging = false\nconnection_timeout_in_seconds = 3\nno_message_timeout_in_seconds = 60\nsleep_between_keep_alive_checks_in_seconds = 30\n```\n\n----------------------------------------\n\nTITLE: Example Node Events Stream Output\nDESCRIPTION: Sample output when monitoring the node events stream, showing an ApiVersion event followed by a TransactionProcessed event and keep-alive messages.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events\n\ndata:{\"ApiVersion\":\"2.0.0\"}\n\ndata:{\"TransactionProcessed\": {\"transaction_hash\": {\"Version1\": \"56642d06d9642c512a7bf55413108ce65bfd1105361bf36ff3586998529e116b\" }, \"initiator_addr\": {\"PublicKey\": \"014962b395b25a89cf970340fb51da2adbfb0f5836716e26dbae6754e79e01ab68\" }, \"timestamp\": \"2020-08-07T01:22:10.209Z\", \"ttl\": \"11h 9m 50s 128ms\", \"block_hash\": \"08ad20808db3098e4461182d18c6efd68db6b01f4e22d4005bfdc4f007a7c0d0\", \"execution_result\": {\"Version1\": {\"Failure\": {\"effect\": {\"operations\": [], \"transforms\": [ {\"key\": \"12570563858918177191\", \"transform\": \"Identity\" }, {\"key\": \"14635000063685912943\", \"transform\": {\"AddUInt64\": 5592565879698622687 } } ] }, \"transfers\": [ \"transfer-9a9304069e5a68e408824ba9a16a99bb50179926f58023371ef82cc9565d68fb\" ], \"cost\": \"3760779910350774860\", \"error_message\": \"Error message 15494687491298509010\" } } }, \"messages\": [ {\"entity_addr\": \"addressable-entity-68c22b361a3a74f49dde2873f93d8485e9a08cc14c7f154b46a25435ca8ef449\", \"message\": {\"String\": \"Va6WL5U9dFhLbG3HCJQvuqcA46EslCY9fymlYbHqpvFlo4PeUs0nUVgeXavUIYc7\" }, \"block_index\": 0, \"topic_index\": 0, \"topic_name\": \"QnlypxwtJpoTOF8opgGiuGYseeNvcU5A\", \"topic_name_hash\": \"e9c77898578d8d1e5063cf3c7c60ca048b8176f10ba1684c2f05961a152acfa7\", \"index\": 3213106390 }, {\"entity_addr\": \"addressable-entity-063582249fa5823b94f883f6c784e3b5b9742780b7fa7c0549823be7debc7680\", \"message\": {\"String\": \"nwOXDbkcq5xEyDxONQizPdBIpWpPi1SBtLCws0a3F0v1nu7FyjbvjErKOjAYYwg0\" }, \"block_index\": 1, \"topic_index\": 1, \"topic_name\": \"hQLIE3k8zWLnslrmN9RRROhLk4g2LxeQ\", \"topic_name_hash\": \"1747f053151847f43ae3b8cac607dc7bb672aa3aec1c2bbb7e3a866613fe3803\", \"index\": 1507321819 }, {\"entity_addr\": \"addressable-entity-acbce74845514977568693e79876f60a9fd0459a4419cc8392820cce7c25ca8e\", \"message\": {\"String\": \"w7aWCBO3uIjQf91hjSFZ6xog0w8b6HyPAVW5iBUFVx7XWPOho7tLrw6a3DpJMA9o\" }, \"block_index\": 2, \"topic_index\": 2, \"topic_name\": \"TNXBnGjXCGANWJK4YSvD5HUZnoWRQGRn\", \"topic_name_hash\": \"f7c3f5fa51fd729bc3af86f724e764e66efae425aa47025ec0dd88f8c062baad\", \"index\": 1303188972 }, {\"entity_addr\": \"addressable-entity-8f1f553f3ca14a9510557cd85e42a7e0269d4a344e74cf1e83d9751e875559f0\", \"message\": {\"String\": \"ZJsXLKE3V08ihPnxZxtZmDffb68zl6A4vsVQsYkSCm8Tvg8RCGNXRWOR6c12zphq\" }, \"block_index\": 3, \"topic_index\": 3, \"topic_name\": \"sfYdJVcjs68cwCpd9pSeQ7NwWdvLi2Q0\", \"topic_name_hash\": \"16b791cf5685e45ecf6a41c3442173ca2bf6c8b6971ada579420b3e28803c992\", \"index\": 1637472264 } ] }}\nid:21821471\n\n:\n\n:\n\n:\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Processed Transaction\nDESCRIPTION: Sample JSON response when querying a processed transaction. The response includes transaction hash, initiator address, timestamp, execution result with effects, transforms, transfers, and messages.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\"transaction_hash\":{\"Version1\":\"29cdf4ccfade736e191bd94835b8560d623b0bcf1a933a183ae484d7924c20ad\"},\"initiator_addr\":{\"PublicKey\":\"0119dfb1d2c12464158a6c2842ab0ea4ebc7723421b22d83dd626b5dfc7b95835c\"},\"timestamp\":\"2020-08-07T01:30:42.019Z\",\"ttl\":\"17h 54m 57s 382ms\",\"block_hash\":\"5a1e6c4cfba0173e2ffbdb6e694554770f8f60c277b87ef3eb97cac2b9521d83\",\"execution_result\":{\"Version1\":{\"Success\":{\"effect\":{\"operations\":[{\"key\":\"17644600125096963714\",\"kind\":\"NoOp\"},{\"key\":\"13459827733103253581\",\"kind\":\"Read\"},{\"key\":\"11676014375412053969\",\"kind\":\"Read\"},{\"key\":\"9909232825903509900\",\"kind\":\"Read\"},{\"key\":\"8850104445275773933\",\"kind\":\"Add\"}],\"transforms\":[{\"key\":\"2531221168812666934\",\"transform\":{\"AddUInt128\":\"3115144695416809598\"}},{\"key\":\"1392271867216378917\",\"transform\":\"WriteContract\"},{\"key\":\"16280628745773001665\",\"transform\":{\"AddUInt512\":\"8249938852511436756\"}}]},\"transfers\":[\"transfer-93b2d942db077f0659f63c0073b8c5cfc42f418e07c5da559cb6474fa7655123\",\"transfer-d91deab111799e0b6fc2c1c8509b80aa2e78823605b11ce56b4177a7ab29a0de\",\"transfer-4eaa442f898aa44df25ab9b52b9f09177c170b43b0f68015c307a7cf004d772a\",\"transfer-73616d87fe918b059d673c7da9dca13c883894f4ff0bab1ffb9db825175e3cc1\",\"transfer-f7472a12eeeaa23adf0cf5ca2329cc64a87b35bd478ac0d3c5774ef309fb4c49\"],\"cost\":\"6115103606978039045\"}}}},\"messages\":[{\"entity_addr\":{\"SmartContract\":[96,208,170,249,191,53,191,48,11,3,51,170,76,50,48,255,137,130,50,209,124,138,205,61,75,151,239,3,242,196,126,127]},\"message\":{\"String\":\"KXpjKX96KMEDRqOnSHyivAF1sATg2RorsXp2CC7P69kM5wxXlTD83bM0zIv6X44U\"},\"topic_name\":\"rcMtmYrZOKhJATCXSN7Z57BUNW1UPzF0\",\"topic_name_hash\":\"2e58fa22f0d51c7c886c3114510ba577b4a413c89aa044de55d972a2600450ac\",\"topic_index\":475963101,\"block_index\":16528668961632653036},{\"entity_addr\":{\"System\":[233,58,15,34,92,205,78,176,36,51,210,212,114,33,41,29,40,75,197,219,12,183,180,32,102,174,222,29,101,7,56,7]},\"message\":{\"String\":\"fzagGCeHuPXnvMrn1I64kq4RPwcMLW2tOiBsmD1tUmIIz5Dgr9cAokY2KuDPVGMM\"},\"topic_name\":\"tsI4hSjHroXRXdim8IBZ3Gd1oOHitCE1\",\"topic_name_hash\":\"0cebb0111bbe91d29d57ec175d011112362a73af58e7ddf6844609ab0d81ef3c\",\"topic_index\":152649425,\"block_index\":9888272225071285086}]}\n```\n\n----------------------------------------\n\nTITLE: Starting Casper Sidecar Service\nDESCRIPTION: Command to start the Casper Sidecar service using systemctl.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl start casper-sidecar.service\n```\n\n----------------------------------------\n\nTITLE: Configuring Event Stream Server in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration for the Sidecar's event stream server. Specifies the port, maximum number of concurrent subscribers, and event buffer length for the SSE endpoint.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_9\n\nLANGUAGE: toml\nCODE:\n```\n[sse_server.event_stream_server]\nport = 19999\nmax_concurrent_subscribers = 100\nevent_stream_buffer_length = 5000\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Host Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable defines the host address for the PostgreSQL database connection. It specifies where the PostgreSQL server is running that the Sidecar should connect to.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_16\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_HOST=\"your host\"\n```\n\n----------------------------------------\n\nTITLE: Querying Expired Transaction by Hash with curl\nDESCRIPTION: Example of how to retrieve information about an expired transaction using its transaction type and hash. This endpoint provides details about transactions that have expired in the network.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\ncurl -s http://127.0.0.1:18888/transaction/expired/version1/3dcf9cb73977a1163129cb0801163323bea2a780815bc9dc46696a43c00e658c\n```\n\n----------------------------------------\n\nTITLE: Checking Sidecar Node Connection Status with curl\nDESCRIPTION: This shell command checks the node connection status by accessing the metrics endpoint of the Sidecar's admin server. It provides information about connection states to various nodes.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_27\n\nLANGUAGE: sh\nCODE:\n```\ncurl http://SIDECAR_URL:SIDECAR_ADMIN_PORT/metrics\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Max Connections Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable controls the maximum number of connections the Sidecar can maintain to the PostgreSQL database. This setting helps manage database connection resources.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_MAX_CONNECTIONS=\"max connections\"\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Accepted Transaction\nDESCRIPTION: Sample JSON response when querying an accepted transaction. The response includes the API version, network name, and transaction details such as hash, header information, and approvals.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\"header\": {\"api_version\": \"2.0.0\",\"network_name\": \"casper-net-1\"},\"payload\": {\"transaction\": {\"Version1\": {\"hash\": \"3141e85f8075c3a75c2a1abcc79810c07d103ff97c03200ab0d0baf91995fe4a\",\"header\": {\"chain_name\": \"casper-net-1\",\"timestamp\": \"2024-03-20T13:31:59.772Z\",\"ttl\": \"30m\",\"body_hash\": \"40c7476a175fb97656ec6da1ace2f1900a9d353f1637943a30edd5385494b345\",\"pricing_mode\": {\"Fixed\": {\"gas_price_tolerance\": 1000}},\"initiator_addr\": {\"PublicKey\": \"01d848e225db95e34328ca1c64d73ecda50f5070fd6b21037453e532d085a81973\"}},\"body\": {\"args\": [],\"target\": {\"Session\": {\"kind\": \"Standard\",\"module_bytes\": \"<REDACTED>\",\"runtime\": \"VmCasperV1\"}},\"entry_point\": {\"Custom\": \"test\"},\"scheduling\": \"Standard\"},\"approvals\": [{\"signer\": \"01d848e225db95e34328ca1c64d73ecda50f5070fd6b21037453e532d085a81973\",\"signature\": \"0154fd295f5d4d62544f63d70470de28b2bf2cddecac2a237b6a2a78d25ee14b21ea2861d711a51f57b3f9f74e247a8d26861eceead6569f233949864a9d5fa100\"}]}}}}\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Username Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable sets the PostgreSQL username for the Sidecar's database connection. Environment variables are the recommended method for configuring PostgreSQL connection details.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_USERNAME=\"your username\"\n```\n\n----------------------------------------\n\nTITLE: Sample Response for Expired Transaction\nDESCRIPTION: Sample JSON response when querying an expired transaction. The response includes the API version, network name, and the hash of the expired transaction.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\"header\": {\"api_version\": \"2.0.0\",\"network_name\": \"some-network\"},\"payload\": {\"transaction_hash\": {\"Version1\": \"3dcf9cb73977a1163129cb0801163323bea2a780815bc9dc46696a43c00e658c\"}}}\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Password Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable sets the PostgreSQL password for the Sidecar's database connection. This is part of the recommended approach for securely configuring database credentials.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_PASSWORD=\"your password\"\n```\n\n----------------------------------------\n\nTITLE: Checking Sidecar Block Timestamp with curl and jq\nDESCRIPTION: This shell command requests the latest block from the Sidecar and extracts the timestamp using jq. It's useful for monitoring if the Sidecar is keeping up with new blocks from the node.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_26\n\nLANGUAGE: sh\nCODE:\n```\ncurl http://SIDECAR_URL:SIDECAR_REST_PORT/block | jq '.block.header.timestamp'\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Error Codes for JSON-RPC in Rust\nDESCRIPTION: Demonstrates how to create custom error codes for a JSON-RPC server by implementing the ErrorCodeT trait. Includes examples of error code definitions and their associated messages.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/json_rpc/README.md#2025-04-22_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\nuse serde::{Deserialize, Serialize};\nuse casper_json_rpc::ErrorCodeT;\n\n#[derive(Copy, Clone, Eq, PartialEq, Serialize, Deserialize, Debug)]\n#[repr(i64)]\npub enum ErrorCode {\n    /// The requested item was not found.\n    NoSuchItem = -1,\n    /// Failed to put the requested item to storage.\n    FailedToPutItem = -2,\n}\n\nimpl From<ErrorCode> for (i64, &'static str) {\n    fn from(error_code: ErrorCode) -> Self {\n        match error_code {\n            ErrorCode::NoSuchItem => (error_code as i64, \"No such item\"),\n            ErrorCode::FailedToPutItem => (error_code as i64, \"Failed to put item\"),\n        }\n    }\n}\n\nimpl ErrorCodeT for ErrorCode {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Casper Sidecar Storage Path\nDESCRIPTION: TOML configuration for specifying the storage path for the Casper Sidecar service. This directory stores the SSE cache and a database if the Sidecar is configured to use one.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_6\n\nLANGUAGE: toml\nCODE:\n```\n[storage]\nstorage_path = \"/var/lib/casper-sidecar\"\n```\n\n----------------------------------------\n\nTITLE: Example Sidecar Events Stream Output\nDESCRIPTION: Sample output when monitoring the Sidecar-specific events stream, showing the SidecarVersion event followed by keep-alive messages.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events/sidecar\n\ndata:{\"SidecarVersion\":\"1.1.0\"}\n\n:\n\n:\n```\n\n----------------------------------------\n\nTITLE: Configuring Casper Sidecar Storage\nDESCRIPTION: TOML configuration for specifying the storage folder for the Casper Sidecar service. This directory stores the SSE cache and an SQLite database if configured.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_5\n\nLANGUAGE: toml\nCODE:\n```\n[storage]\nstorage_folder = \"./target/storage\"\n```\n\n----------------------------------------\n\nTITLE: Checking Casper Sidecar Service Status\nDESCRIPTION: Command to check the status of the Casper Sidecar service using systemctl.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status casper-sidecar\n```\n\n----------------------------------------\n\nTITLE: Running Casper Sidecar with Configuration File\nDESCRIPTION: This shell command runs the Casper Sidecar with a specified configuration file using cargo. The command requires root privileges and passes the path to the configuration file as a command-line argument.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_21\n\nLANGUAGE: sh\nCODE:\n```\nsudo cargo run -- --path-to-config ./resources/example_configs/EXAMPLE_NODE_CONFIG.toml\n```\n\n----------------------------------------\n\nTITLE: Stopping Casper Sidecar Service\nDESCRIPTION: Command to stop the Casper Sidecar service using systemctl.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl stop casper-sidecar.service\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Connection in TOML for Casper Sidecar\nDESCRIPTION: This TOML configuration block defines PostgreSQL database connection parameters, including database name, host, credentials, and connection pool size. This can be used instead of or alongside environment variables.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_19\n\nLANGUAGE: toml\nCODE:\n```\n[storage.postgresql_config]\ndatabase_name = \"event_sidecar\"\nhost = \"localhost\"\ndatabase_password = \"p@$$w0rd\"\ndatabase_username = \"postgres\"\nmax_connections_in_pool = 30\n```\n\n----------------------------------------\n\nTITLE: Viewing Casper Sidecar Service Logs\nDESCRIPTION: Command to view the logs of the Casper Sidecar service using journalctl.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/resources/ETC_README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\njournalctl --no-pager -u casper-sidecar\n```\n\n----------------------------------------\n\nTITLE: Configuring Legacy SSE Emulation in Casper Sidecar with TOML\nDESCRIPTION: TOML configuration for enabling legacy V1 SSE API emulation in Casper Sidecar. Allows applications using version 1 of a Casper node's event stream server to continue functioning with the Sidecar.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_8\n\nLANGUAGE: toml\nCODE:\n```\n[sse_server]\nenable_server = true\nemulate_legacy_sse_apis = [\"V1\"]\ndisable_event_persistence = false\n```\n\n----------------------------------------\n\nTITLE: Configuring SQLite Database Settings in TOML for Casper Sidecar\nDESCRIPTION: This TOML configuration defines SQLite database settings for the Casper Sidecar, including the database filename, connection pool size, and WAL autocheckpointing interval. These parameters control the database storage and performance behavior.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_12\n\nLANGUAGE: toml\nCODE:\n```\n[storage.sqlite_config]\nfile_name = \"sqlite_database.db3\"\nmax_connections_in_pool = 100\nwal_autocheckpointing_interval = 1000\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Database Name Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable specifies the PostgreSQL database name that the Sidecar should connect to. This is one of several environment variables that can be used to configure the database connection.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_DATABASE_NAME=\"your database name\"\n```\n\n----------------------------------------\n\nTITLE: Visualizing REST API Server Architecture\nDESCRIPTION: Mermaid diagram showing the REST API server architecture including client interaction, storage connectivity, and configuration handling.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\n   graph LR;\n   CLIENT{Client}\n   CLIENT --> REST_API\n   STORAGE[(\"Storage\")]\n   REST_API --> STORAGE\n   CONFIG{{\"Config file (TOML)\"}}\n   MAIN --1.reads--> CONFIG\n   subgraph CASPER_SIDECAR\n      MAIN[main.rs]\n      MAIN --2.spawns--> REST_API\n      REST_API[\"REST API\"]\n   end\n```\n\n----------------------------------------\n\nTITLE: Sample JSON-RPC Response Format\nDESCRIPTION: Shows the expected format of a successful JSON-RPC 2.0 response. This is the response from the 'get' method in the example server.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/json_rpc/README.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n{\"jsonrpc\":\"2.0\",\"id\":\"id\",\"result\":\"got it\"}\n```\n\n----------------------------------------\n\nTITLE: Displaying Version1 BlockAdded Event Structure in Casper Sidecar\nDESCRIPTION: Example of a Version1 BlockAdded event structure in Casper Sidecar 2.x format. This shows the nested Version1 structure within a BlockAdded event, including block details, header information, era end data, and transaction hashes.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BlockAdded\": {\n    \"block_hash\": \"d59359690ca5a251b513185da0767f744e77645adec82bb6ff785a89edc7591c\",\n    \"block\": {\n      \"Version1\": {\n        \"hash\": \"d59359690ca5a251b513185da0767f744e77645adec82bb6ff785a89edc7591c\",\n        \"header\": {\n          \"parent_hash\": \"90ca56a697f8b1b19cba08c642fd7f04669b8cd49bb9d652fca989f8a9f8bcea\",\n          \"state_root_hash\": \"9cce223fdbeab41dbbcf0b62f3fd857373131378d51776de26bb9f4fefe1e849\",\n          \"body_hash\": \"5f37be399c15b2394af48243ce10a62a7d12769dc5f7740b18ad3bf55bde5271\",\n          \"random_bit\": true,\n          \"accumulated_seed\": \"b3e1930565a80a874a443eaadefa1a340927fb8b347729bbd93e93935a47a9e4\",\n          \"era_end\": {\n            \"era_report\": {\n              \"equivocators\": [\n                \"0203c9da857cfeccf001ce00720ae2e0d083629858b60ac05dd285ce0edae55f0c8e\",\n                \"02026fb7b629a2ec0132505cdf036f6ffb946d03a1c9b5da57245af522b842f145be\"\n              ],\n              \"rewards\": [\n                {\n                  \"validator\": \"01235b932586ae5cc3135f7a0dc723185b87e5bd3ae0ac126a92c14468e976ff25\",\n                  \"amount\": 129457537\n                }\n              ],\n              \"inactive_validators\": []\n            },\n            \"next_era_validator_weights\": [\n              {\n                \"validator\": \"0198957673ad060503e2ec7d98dc71af6f90ad1f854fe18025e3e7d0d1bbe5e32b\",\n                \"weight\": \"1\"\n              },\n              {\n                \"validator\": \"02022d6bc4e3012cc4ae467b5525111cf7ed65883b05a1d924f1e654c64fad3a027c\",\n                \"weight\": \"2\"\n              }\n            ]\n          },\n          \"timestamp\": \"2024-04-25T20:00:35.640Z\",\n          \"era_id\": 601701,\n          \"height\": 6017012,\n          \"protocol_version\": \"1.0.0\"\n        },\n        \"body\": {\n          \"proposer\": \"0203426736da2554ebf1f8ee1d2ce4ab11b1e33419d7dfc1ce2fe1945faf00bacc9e\",\n          \"deploy_hashes\": [\n            \"06950e4374dc88685634ec30bcddd68e6b46c109ccf6d29e2dfcf5367df75571\",\n            \"27a89dd58e6297a5244342b68b117afe2555131b896ad6ed4321edcd4130ae7b\"\n          ],\n          \"transfer_hashes\": [\n            \"3e30b6c1c5dbca9277425846b42dc832cd3d8ce889c38d6bfc8bd95b3e1c403e\",\n            \"c990ba47146270655eaacc53d4115cbd980697f3d4e9c76bccfdfce82af6ce08\"\n          ]\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Admin API Server Architecture\nDESCRIPTION: Mermaid diagram illustrating the Admin API server setup including client connections and configuration handling.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_3\n\nLANGUAGE: mermaid\nCODE:\n```\n   graph LR;\n   CLIENT{Client}\n   CLIENT --> ADMIN_API\n   CONFIG{{Config file}}\n   MAIN --1.reads--> CONFIG\n   subgraph CASPER_SIDECAR\n      MAIN[main.rs]\n      MAIN --2.spawns--> ADMIN_API\n      ADMIN_API[\"ADMIN API\"]\n   end\n```\n\n----------------------------------------\n\nTITLE: Configuring Storage Path in TOML for Casper Sidecar\nDESCRIPTION: This TOML configuration snippet specifies the storage folder path for the Sidecar's SSE cache and SQLite database files. It sets the storage directory to a subdirectory within the target folder.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_11\n\nLANGUAGE: toml\nCODE:\n```\n[storage]\nstorage_folder = \"./target/storage\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Version2 BlockAdded Event Structure in Casper Sidecar\nDESCRIPTION: Example of a Version2 BlockAdded event structure in Casper Sidecar 2.x format. This shows the Version2 data structure with different reward formats, transactions organization, and additional fields like current_gas_price.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BlockAdded\": {\n    \"block_hash\": \"2df9fb8909443fba928ed0536a79780cdb4557d0c05fdf762a1fd61141121422\",\n    \"block\": {\n      \"Version2\": {\n        \"hash\": \"2df9fb8909443fba928ed0536a79780cdb4557d0c05fdf762a1fd61141121422\",\n        \"header\": {\n          \"proposer\": \"01d3eec0445635f136ae560b43e9d8f656a6ba925f01293eaf2610b39ebe0fc28d\",\n          \"parent_hash\": \"b8f5e9afd2e54856aa1656f962d07158f0fdf9cfac0f9992875f31f6bf2623a2\",\n          \"state_root_hash\": \"cbf02d08bb263aa8915507c172b5f590bbddcd68693fb1c71758b5684b011730\",\n          \"body_hash\": \"6041ab862a1e14a43a8e8a9a42dad27091915a337d18060c22bd3fe7b4f39607\",\n          \"random_bit\": false,\n          \"accumulated_seed\": \"a0e424710f4fba036ba450b40f2bd7a842b176cf136f3af1952a2a13eb02616c\",\n          \"era_end\": {\n            \"equivocators\": [\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc54\",\n              \"0203e4532e401326892aa8ebc16b6986bd35a6c96a1f16c28db67fd7e87cb6913817\",\n              \"020318a52d5b2d545def8bf0ee5ea7ddea52f1fbf106c8b69848e40c5460e20c9f62\"\n            ],\n            \"inactive_validators\": [\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc55\",\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc56\"\n            ],\n            \"next_era_validator_weights\": [\n              {\n                \"validator\": \"02038b238d774c3c4228a0430e3a078e1a2533f9c87cccbcf695637502d8d6057a63\",\n                \"weight\": \"1\"\n              },\n              {\n                \"validator\": \"0102ffd4d2812d68c928712edd012fbcad54367bc6c5c254db22cf696772856566\",\n                \"weight\": \"2\"\n              }\n            ],\n            \"rewards\": {\n              \"02028b18c949d849b377988ea5191b39340975db25f8b80f37cc829c9f79dbfb19fc\": \"749546792\",\n              \"02028002c063228ff4e9d22d69154c499b86a4f7fdbf1d1e20f168b62da537af64c2\": \"788342677\",\n              \"02038efa405f648c72f36b0e5f37db69ab213d44404591b24de21383d8cc161101ec\": \"86241635\",\n              \"01f6bbd4a6fd10534290c58edb6090723d481cea444a8e8f70458e5136ea8c733c\": \"941794198\"\n            },\n            \"next_era_gas_price\": 1\n          },\n          \"timestamp\": \"2024-04-25T20:31:39.895Z\",\n          \"era_id\": 419571,\n          \"height\": 4195710,\n          \"protocol_version\": \"2.0.0\",\n          \"current_gas_price\": 1\n        },\n        \"body\": {\n          \"transactions\": {\n            \"0\": [{\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e80\"\n            },\n            {\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e81\"\n            },\n            {\n              \"Version1\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e82\"\n            }],\n            \"1\": [{\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e83\"\n            },\n            {\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e84\"\n            },\n            {\n              \"Version1\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e85\"\n            }],\n            \"2\": [{\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e86\"\n            },\n            {\n              \"Deploy\": \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e87\"\n            },\n            {\n\n\n\n```\n\n----------------------------------------\n\nTITLE: Setting PostgreSQL Port Environment Variable for Casper Sidecar\nDESCRIPTION: This environment variable defines the port number for connecting to the PostgreSQL database. This is the final environment variable in the set used for PostgreSQL connection configuration.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_18\n\nLANGUAGE: sh\nCODE:\n```\nSIDECAR_POSTGRES_PORT=\"port\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Emulated Version1 BlockAdded Event Structure in Casper Sidecar\nDESCRIPTION: Example of an emulated Version1 BlockAdded event after transformation from Version1 format. This demonstrates how the nested Version1 structure is unwrapped to create a 1.x compatible structure for legacy support.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BlockAdded\": {\n    \"block_hash\": \"d59359690ca5a251b513185da0767f744e77645adec82bb6ff785a89edc7591c\",\n    \"block\": {\n      \"hash\": \"d59359690ca5a251b513185da0767f744e77645adec82bb6ff785a89edc7591c\",\n      \"header\": {\n        \"parent_hash\": \"90ca56a697f8b1b19cba08c642fd7f04669b8cd49bb9d652fca989f8a9f8bcea\",\n        \"state_root_hash\": \"9cce223fdbeab41dbbcf0b62f3fd857373131378d51776de26bb9f4fefe1e849\",\n        \"body_hash\": \"5f37be399c15b2394af48243ce10a62a7d12769dc5f7740b18ad3bf55bde5271\",\n        \"random_bit\": true,\n        \"accumulated_seed\": \"b3e1930565a80a874a443eaadefa1a340927fb8b347729bbd93e93935a47a9e4\",\n        \"era_end\": {\n          \"era_report\": {\n            \"equivocators\": [\n              \"0203c9da857cfeccf001ce00720ae2e0d083629858b60ac05dd285ce0edae55f0c8e\",\n              \"02026fb7b629a2ec0132505cdf036f6ffb946d03a1c9b5da57245af522b842f145be\"\n            ],\n            \"rewards\": [\n              {\n                \"validator\": \"01235b932586ae5cc3135f7a0dc723185b87e5bd3ae0ac126a92c14468e976ff25\",\n                \"amount\": 129457537\n              }\n            ],\n            \"inactive_validators\": []\n          },\n          \"next_era_validator_weights\": [\n            {\n              \"validator\": \"0198957673ad060503e2ec7d98dc71af6f90ad1f854fe18025e3e7d0d1bbe5e32b\",\n              \"weight\": \"1\"\n            },\n            {\n              \"validator\": \"02022d6bc4e3012cc4ae467b5525111cf7ed65883b05a1d924f1e654c64fad3a027c\",\n              \"weight\": \"2\"\n            }\n          ]\n        },\n        \"timestamp\": \"2024-04-25T20:00:35.640Z\",\n        \"era_id\": 601701,\n        \"height\": 6017012,\n        \"protocol_version\": \"1.0.0\"\n      },\n      \"body\": {\n        \"proposer\": \"0203426736da2554ebf1f8ee1d2ce4ab11b1e33419d7dfc1ce2fe1945faf00bacc9e\",\n        \"deploy_hashes\": [\n          \"06950e4374dc88685634ec30bcddd68e6b46c109ccf6d29e2dfcf5367df75571\",\n          \"27a89dd58e6297a5244342b68b117afe2555131b896ad6ed4321edcd4130ae7b\"\n        ],\n        \"transfer_hashes\": [\n          \"3e30b6c1c5dbca9277425846b42dc832cd3d8ce889c38d6bfc8bd95b3e1c403e\",\n          \"c990ba47146270655eaacc53d4115cbd980697f3d4e9c76bccfdfce82af6ce08\"\n        ]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Translating BlockAdded Event from Version2 to Version1 in Casper\nDESCRIPTION: This snippet shows the structure of a Version2 BlockAdded event and how it is translated to a Version1 compatible format. It includes details like block hash, header information, and body content.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"BlockAdded\": {\n    \"block_hash\": \"2df9fb8909443fba928ed0536a79780cdb4557d0c05fdf762a1fd61141121422\",\n    \"block\": {\n      \"hash\": \"2df9fb8909443fba928ed0536a79780cdb4557d0c05fdf762a1fd61141121422\",\n      \"header\": {\n        \"parent_hash\": \"b8f5e9afd2e54856aa1656f962d07158f0fdf9cfac0f9992875f31f6bf2623a2\",\n        \"state_root_hash\": \"cbf02d08bb263aa8915507c172b5f590bbddcd68693fb1c71758b5684b011730\",\n        \"body_hash\": \"6041ab862a1e14a43a8e8a9a42dad27091915a337d18060c22bd3fe7b4f39607\",\n        \"random_bit\": false,\n        \"accumulated_seed\": \"a0e424710f4fba036ba450b40f2bd7a842b176cf136f3af1952a2a13eb02616c\",\n        \"era_end\": {\n          \"era_report\": {\n            \"equivocators\": [\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc54\",\n              \"0203e4532e401326892aa8ebc16b6986bd35a6c96a1f16c28db67fd7e87cb6913817\",\n              \"020318a52d5b2d545def8bf0ee5ea7ddea52f1fbf106c8b69848e40c5460e20c9f62\"\n            ],\n            \"rewards\": [\n              {\n                \"validator\": \"01f6bbd4a6fd10534290c58edb6090723d481cea444a8e8f70458e5136ea8c733c\",\n                \"amount\": 941794198\n              },\n              {\n                \"validator\": \"02028002c063228ff4e9d22d69154c499b86a4f7fdbf1d1e20f168b62da537af64c2\",\n                \"amount\": 788342677\n              },\n              {\n                \"validator\": \"02028b18c949d849b377988ea5191b39340975db25f8b80f37cc829c9f79dbfb19fc\",\n                \"amount\": 749546792\n              },\n              {\n                \"validator\": \"02038efa405f648c72f36b0e5f37db69ab213d44404591b24de21383d8cc161101ec\",\n                \"amount\": 86241635\n              }\n            ],\n            \"inactive_validators\": [\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc55\",\n              \"01cc718e9dea652577bffad3471d0db7d03ba30923780a2a8fd1e3dd9b4e72dc56\"\n            ]\n          },\n          \"next_era_validator_weights\": [\n            {\n              \"validator\": \"0102ffd4d2812d68c928712edd012fbcad54367bc6c5c254db22cf696772856566\",\n              \"weight\": \"2\"\n            },\n            {\n              \"validator\": \"02038b238d774c3c4228a0430e3a078e1a2533f9c87cccbcf695637502d8d6057a63\",\n              \"weight\": \"1\"\n            }\n          ]\n        },\n        \"timestamp\": \"2024-04-25T20:31:39.895Z\",\n        \"era_id\": 419571,\n        \"height\": 4195710,\n        \"protocol_version\": \"1.0.0\"\n      },\n      \"body\": {\n        \"proposer\": \"01d3eec0445635f136ae560b43e9d8f656a6ba925f01293eaf2610b39ebe0fc28d\",\n        \"deploy_hashes\": [\n          \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e89\",\n          \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e90\"\n        ],\n        \"transfer_hashes\": [\n          \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e80\",\n          \"58aca0009fc41bd045d303db9e9f07416ff1fd8c76ecd98545eedf86f9459e81\"\n        ]\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Admin Server in TOML for Casper Sidecar\nDESCRIPTION: This TOML configuration sets up the Sidecar's administrative server, defining the port, request limits, and enabling the server. The admin server provides metrics and monitoring capabilities.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_20\n\nLANGUAGE: toml\nCODE:\n```\n[admin_api_server]\nenable_server = true\nport = 18887\nmax_concurrent_requests = 1\nmax_requests_per_second = 1\n```\n\n----------------------------------------\n\nTITLE: Translating TransactionAccepted Event from Version1 to DeployAccepted in Casper\nDESCRIPTION: This snippet demonstrates how a Version1 TransactionAccepted event is unwrapped and translated to a legacy DeployAccepted event. It includes deploy details such as hash, header, payment, session, and approvals.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DeployAccepted\": {\n    \"hash\": \"5a7709969c210db93d3c21bf49f8bf705d7c75a01609f606d04b0211af171d43\",\n    \"header\": {\n      \"account\": \"02022c07e061d6e0b43bbaa25717b021c2ddc0f701a223946a0883b57ae842917438\",\n      \"timestamp\": \"2020-08-07T01:28:27.360Z\",\n      \"ttl\": \"4m 22s\",\n      \"gas_price\": 72,\n      \"body_hash\": \"aa2a111c086628a161001160756c5884e32fde0356bb85f484a3e55682ad089f\",\n      \"dependencies\": [],\n      \"chain_name\": \"casper-example\"\n    },\n    \"payment\": {\n      \"StoredContractByName\": {\n        \"name\": \"casper-example\",\n        \"entry_point\": \"example-entry-point\",\n        \"args\": [\n          [\n            \"amount\",\n            {\n              \"cl_type\": \"U512\",\n              \"bytes\": \"0400f90295\",\n              \"parsed\": \"2500000000\"\n            }\n          ]\n        ]\n      }\n    },\n    \"session\": {\n      \"StoredContractByHash\": {\n        \"hash\": \"dfb621e7012df48fe1d40fd8015b5e2396c477c9587e996678551148a06d3a89\",\n        \"entry_point\": \"8sY9fUUCwoiFZmxKo8kj\",\n        \"args\": [\n          [\n            \"YbZWtEuL4D6oMTJmUWvj\",\n            {\n              \"cl_type\": {\n                \"List\": \"U8\"\n              },\n              \"bytes\": \"5a000000909ffe7807b03a5db0c3c183648710db16d408d8425a4e373fc0422a4efed1ab0040bc08786553fcac4521528c9fafca0b0fb86f4c6e9fb9db7a1454dda8ed612c4ea4c9a6378b230ae1e3c236e37d6ebee94339a56cb4be582a\",\n              \"parsed\": [144, 159, 254, 120, 7]\n            }\n          ]\n        ]\n      }\n    },\n    \"approvals\": [\n      {\n        \"signer\": \"02022c07e061d6e0b43bbaa25717b021c2ddc0f701a223946a0883b57ae842917438\",\n        \"signature\": \"025d0a7ba37bebe6774681ca5adecb70fa4eef56821eb344bf0f6867e171a899a87edb2b8bf70f2cb47a1670a6baf2cded1fad535ee53a2f65da91c82ebf30945b\"\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Unit and Integration Tests for Casper Sidecar\nDESCRIPTION: This shell command runs the unit and integration tests for the Casper Sidecar project using cargo. It executes all tests without additional flags to focus on functionality testing.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_23\n\nLANGUAGE: sh\nCODE:\n```\ncargo test\n```\n\n----------------------------------------\n\nTITLE: Example Node Shutdown and Reconnection Stream\nDESCRIPTION: Sample output showing a node shutdown event, reconnection attempts, and resumption with a new API version when the node comes back online after an upgrade.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events\n\ndata:{\"ApiVersion\":\"2.0.0\"}\n\ndata:{\"BlockAdded\":{\"block_hash\":\"bb5332a4f0feae6a760d67b3e2a24adf4599aaf6845584f20d80f037e2505f69\",\"block\":{\"Version2\":{\"hash\":\"bb5332a4f0feae6a760d67b3e2a24adf4599aaf6845584f20d80f037e2505f69\",\"header\":{\"parent_hash\":\"4c1fb7a23f0de75e14ef5077dbf6ffedbdf2c4a26c2e5890f2694be1be9c78de\",\"state_root_hash\":\"e7e75dd4500801195276096ffe274973e8da2b73430138bd4d9c1804f658d277\",\"body_hash\":\"a8f9c258f7276ca6ab2788c5df78ac4a94480a327de9d4675c2b528bb0e7faed\",\"random_bit\":true,\"accumulated_seed\":\"630d9b48148044845d91867646685a3a85ec2ddc11634a935aa0b22e248bc17d\",\"era_end\":null,\"timestamp\":\"2024-03-19T15:17:09.163Z\",\"era_id\":178172,\"height\":1781728,\"protocol_version\":\"2.0.0\"},\"body\":{\"proposer\":\"0202b55941afeb1ec56170b12752f5a592e3d8fe222e4f9830eca538e667c790f2ae\",\"mint\":[],\"auction\":[],\"install_upgrade\":[],\"standard\":[],\"rewarded_signatures\":[]}}}}}}\nid:1\n\n:\n\ndata:\"Shutdown\"\nid:2\n\n:\n\n:\n\n:\n\ndata:{\"ApiVersion\":\"2.0.1\"}\n\ndata:{\"BlockAdded\":{\"block_hash\":\"8d7b333799ed9d0dd8764d75947c618ae0a198cf6551e4026521011b31a53934\",\"block\":{\"Version2\":{\"hash\":\"8d7b333799ed9d0dd8764d75947c618ae0a198cf6551e4026521011b31a53934\",\"header\":{\"parent_hash\":\"98789674cd19222df62d9bf7293642a6193ad60eec204802cd1f3ea9a601a8af\",\"state_root_hash\":\"d4386260b30b66704c6d99c70b01afe09671f29b8cb6ed69afae0abeef4a84e3\",\"body_hash\":\"85210d3bf069c9f534b4af9c8ddc8cd63ef971f4c9d7f4d3dcbc57c5164a0737\",\"random_bit\":true,\"accumulated_seed\":\"2787dcda83de66d13502aad716ac4469efda1f3072bece0c11bd902d3cdcbeaa\",\"era_end\":null,\"timestamp\":\"2024-03-20T14:45:55.936Z\",\"era_id\":895818,\"height\":8958184,\"protocol_version\":\"1.0.0\",\"current_gas_price\":1},\"body\":{\"proposer\":\"014e6a488e8cb7c64ee7ca1263e8b3df15e8e5cc28512bd7d5a17fd210d00b0947\",\"mint\":[],\"auction\":[],\"install_upgrade\":[],\"standard\":[],\"rewarded_signatures\":[]}}}}}}\nid:3\n\n:\n\n:\n```\n\n----------------------------------------\n\nTITLE: Sample Error Response for Missing Filter\nDESCRIPTION: Sample JSON error response when no filter is specified in the API request. The response indicates that an invalid request path was provided with a 400 error code.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\"code\":400,\"message\":\"Invalid request path provided\"}\n```\n\n----------------------------------------\n\nTITLE: Example of Invalid Filter Request with curl\nDESCRIPTION: Example of an API request with an invalid filter, which results in an error. When an unrecognized filter is provided, the API returns an error message indicating an invalid request path.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_25\n\nLANGUAGE: sh\nCODE:\n```\ncurl http://127.0.0.1:18888/other\n```\n\n----------------------------------------\n\nTITLE: Example of Missing Filter Request with curl\nDESCRIPTION: Example of an API request with no filter specified, which results in an error. When no filter URL is provided after the root address, the API returns an error message indicating an invalid request path.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_23\n\nLANGUAGE: sh\nCODE:\n```\ncurl http://127.0.0.1:18888\n```\n\n----------------------------------------\n\nTITLE: Running Performance Tests for Casper Sidecar\nDESCRIPTION: This shell command runs the performance tests for the Casper Sidecar project, including tests that are normally ignored. The --include-ignored flag ensures comprehensive performance testing.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/README.md#2025-04-22_snippet_24\n\nLANGUAGE: sh\nCODE:\n```\ncargo test -- --include-ignored\n```\n\n----------------------------------------\n\nTITLE: Metrics Module Header\nDESCRIPTION: Markdown header and description defining the metrics library module and its relationship to other components.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/metrics/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `metrics`\n\nLibrary to keep metrics for the project. This is kept separately from `types` since not all modules that use metrics need `types`.\n```\n\n----------------------------------------\n\nTITLE: Translating TransactionExpired Event to DeployExpired in Casper\nDESCRIPTION: This snippet shows how a TransactionExpired event is mapped to a DeployExpired event. It includes the transaction hash which is used as the deploy hash in the legacy format.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DeployExpired\": {\n    \"deploy_hash\": \"565d7147e28be402c34208a133fd59fde7ac785ae5f0298cb5fb7adfb1b054a8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Sidecar Shutdown Event\nDESCRIPTION: Sample output showing the Sidecar shutdown event that occurs when the service fails to reconnect to a node after the maximum number of retry attempts.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/USAGE.md#2025-04-22_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ncurl -sN http://127.0.0.1:19999/events/sidecar\n\ndata:{\"SidecarVersion\":\"1.1.0\"}\n\n:\n\n:\n\n:\n\ndata:\"Shutdown\"\nid:8\n```\n\n----------------------------------------\n\nTITLE: Configuring Legacy SSE Emulation in TOML Configuration\nDESCRIPTION: TOML configuration snippet to enable legacy SSE emulation in Casper Sidecar by setting the 'emulate_legacy_sse_apis' parameter to [\"V1\"] in the sse_server section.\nSOURCE: https://github.com/casper-network/casper-sidecar/blob/dev/LEGACY_SSE_EMULATION.md#2025-04-22_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[sse_server]\n(...)\nemulate_legacy_sse_apis = [\"V1\"]\n(...)\n```"
  }
]
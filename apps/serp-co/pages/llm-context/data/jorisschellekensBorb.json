[
  {
    "owner": "jorisschellekens",
    "repo": "borb",
    "content": "TITLE: Creating a Simple PDF Document with borb in Python\nDESCRIPTION: This code demonstrates how to create a basic 'Hello World' PDF document using the borb library. It shows the core workflow of creating a document, adding a page, using a layout manager, and adding content like paragraphs before saving the PDF to disk.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom pathlib import Path\n\nfrom borb.pdf import Document\nfrom borb.pdf import Page\nfrom borb.pdf import SingleColumnLayout\nfrom borb.pdf import Paragraph\nfrom borb.pdf import PDF\n\n# create an empty Document\npdf = Document()\n\n# add an empty Page\npage = Page()\npdf.add_page(page)\n\n# use a PageLayout (SingleColumnLayout in this case)\nlayout = SingleColumnLayout(page)\n\n# add a Paragraph object\nlayout.add(Paragraph(\"Hello World!\"))\n    \n# store the PDF\nwith open(Path(\"output.pdf\"), \"wb\") as pdf_file_handle:\n    PDF.dumps(pdf_file_handle, pdf)\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for borb Project\nDESCRIPTION: This snippet defines the required Python packages and their minimum or exact versions needed for the borb project. It includes libraries for cryptography, font handling, image processing, barcode generation, QR code creation, HTTP requests, and setup tools.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncryptography>=41.0.1\nfonttools>=4.38.0\nPillow==9.5.0\npython-barcode>=0.14.0\nqrcode[pil]>=6.1\nrequests>=2.31.0\nsetuptools>=68.0.0\n```\n\n----------------------------------------\n\nTITLE: Dependency Requirements List for borb Python Library\nDESCRIPTION: A requirements.txt style list specifying package dependencies and their minimum version constraints for the borb project. It includes essential libraries for various functionalities like cryptography, font handling, data visualization, and barcode generation.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/test-requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncryptography>=41.0.1\nfonttools>=4.38.0\ngTTS>=2.4.0\nlxml>=4.9.2\nmarkdown-it-py>=3.0.0\nmatplotlib>=3.8.2\npandas>=2.1.3\nPillow==9.5.0\npygments>=2.17.2\npython-barcode>=0.14.0\nqrcode[pil]>=6.1\nrequests>=2.31.0\nsetuptools>=68.0.0\n```\n\n----------------------------------------\n\nTITLE: Formatting Git Commit Messages in Markdown\nDESCRIPTION: This snippet demonstrates the recommended format for git commit messages, including subject, body, and footer. It emphasizes the importance of clear and concise commit messages for project history readability.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n<subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\n----------------------------------------\n\nTITLE: Enabling Usage Statistics in Borb\nDESCRIPTION: Code snippet showing how to enable or re-enable anonymous usage statistics collection in Borb. This allows the library to collect anonymous usage data for improvement purposes.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/PRIVACY_POLICY.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nUsageStatistics.enable()\n```\n\n----------------------------------------\n\nTITLE: Disabling Usage Statistics in Borb\nDESCRIPTION: Code snippet showing how to disable anonymous usage statistics collection in Borb. This will prevent the library from sending any usage data and will create a zero-byte file to signal this preference.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/PRIVACY_POLICY.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nUsageStatistics.disable()\n```\n\n----------------------------------------\n\nTITLE: Fenced JSON Code Block in Markdown\nDESCRIPTION: Demonstrates how to create a fenced code block using triple backticks to display JSON data.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-007.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"age\": 25\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Heading Levels Using Hash Symbols in Markdown\nDESCRIPTION: This example demonstrates how to create headings of different levels (1-6) by using corresponding numbers of hash symbols (#) before the heading text.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-001.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Heading level 1\n## Heading level 2\n### Heading level 3\n#### Heading level 4\n##### Heading level 5\n###### Heading level 6\n```\n\n----------------------------------------\n\nTITLE: Aligned Markdown Table Columns\nDESCRIPTION: Demonstrates column alignment in Markdown tables using colons with hyphens. Left, center, and right alignment are shown.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-008.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Syntax      | Description | Test Text     |\n| :---        |    :----:   |          ---: |\n| Header      | Title       | Here's this   |\n| Paragraph   | Text        | And more      |\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Ordered Lists in Markdown\nDESCRIPTION: This example demonstrates how to create nested (indented) items within an ordered list by indenting the nested item with spaces or a tab.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-005.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n1. First item\n3. Second item\n    1. Indented item\n4. Third item\n```\n\n----------------------------------------\n\nTITLE: Adding Paragraphs Within List Items in Markdown\nDESCRIPTION: Shows how to add additional paragraphs or elements within a list item while maintaining list continuity. The extra content is indented with four spaces or a tab.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-006.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* This is the first list item.\n* Here's the second list item.\n    I need to add another paragraph below the second list item.\n* And here's the third list item.\n```\n\n----------------------------------------\n\nTITLE: Basic Markdown Table Structure\nDESCRIPTION: Demonstrates the basic structure of a Markdown table with headers and content rows.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-008.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Unordered Lists in Markdown\nDESCRIPTION: Demonstrates how to create nested unordered lists by indenting sub-items. The main list uses dashes, and the nested item is indented with spaces or a tab.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-006.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- First item\n- Second item\n    - Indented item\n- Third item\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Ordered Lists in Markdown\nDESCRIPTION: A basic ordered list in Markdown created with sequential numbers followed by periods. Each item appears on a new line with a number prefix.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-005.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. First item\n2. Second item\n3. Third item\n```\n\n----------------------------------------\n\nTITLE: Combined Bold and Italic Formatting in Markdown\nDESCRIPTION: Shows how to apply both bold and italic formatting simultaneously using triple asterisks or underscores. Includes examples for full phrases with both emphasis styles.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-003.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nThis text is ***really important***.   \nThis text is ___really important___.\n```\n\n----------------------------------------\n\nTITLE: Implementing Network and Memory Operations in Pseudocode\nDESCRIPTION: This pseudocode demonstrates various computing operations including flash memory access, tunneling, and network operations. It includes conditional logic for system configuration and superscalar operations.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-012.md#2025-04-21_snippet_0\n\nLANGUAGE: pseudocode\nCODE:\n```\nruby.rfid = flashMetadataFile;\ntunneling.device = remoteLeakScroll * 1 + simplex_boot_quad +\n        python_vlog_compatible;\nif (reciprocal + barTerminalIeee + rootQuery + pciSoft) {\n    technologyMegahertz.ipodHard.memoryFi(21, 3,\n            sector_macro.editor_infotainment_partition(mouse_page));\n    page(install, regular(1, favorites));\n}\nsuperscalar -= cssWormWin + rjClient * character_recursive +\n        jumperWpaGoogle(pointKindleBezel, ring_isa_lan + -2);\nif (web_drive_compression.wepCacheBoot(icio_rdf_media * domain) >\n        dual_iphone_file - domain) {\n    smtp_card_laser.systrayCrop = clusterCopyrightRay;\n    checksumSpyware += documentWinIde.mountFormatDisk(browser_box,\n            spyware_nui_sector, checksumHeuristicCard(font));\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Network and System Settings in Pseudocode\nDESCRIPTION: This pseudocode snippet shows the configuration of network settings including ring wired null assignment, OCR network bookmark minimization, and mountain error calculations using petaflops.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-012.md#2025-04-21_snippet_1\n\nLANGUAGE: pseudocode\nCODE:\n```\nringWiredNull = nativeRegistryWysiwyg;\nocr_network_bookmark.minimize = ping_cron_express + cd_ivr;\nmountain -= error_petaflops / icf.fileGnutellaGuid(broadband, rwIcio, apache\n        + systemBoot);\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Paragraph Blockquotes in Markdown\nDESCRIPTION: Shows how to create blockquotes containing multiple paragraphs by placing a '>' character on the blank lines between paragraphs.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-004.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n> The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Unordered Lists in Markdown\nDESCRIPTION: Demonstrates how to create simple unordered lists using dashes as list markers. Each item is on a new line, preceded by a dash and a space.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-006.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- First item\n- Second item\n- Third item\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists with Asterisks in Markdown\nDESCRIPTION: Shows an alternative syntax for unordered lists using asterisks as list markers. Each item is on a new line, preceded by an asterisk and a space.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-006.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* First item\n* Second item\n* Third item\n```\n\n----------------------------------------\n\nTITLE: Italic Text Formatting in Markdown\nDESCRIPTION: Demonstrates how to italicize text in Markdown using single asterisks or underscores. Includes examples for italicizing phrases and parts of words.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-003.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nItalicized text is the *cat's meow*.  \nItalicized text is the _cat's meow_.  \nA*cat*meow\n```\n\n----------------------------------------\n\nTITLE: Bold Text Formatting in Markdown\nDESCRIPTION: Shows three different ways to make text bold in Markdown using asterisks or underscores. Includes examples of making entire phrases bold and emphasizing parts of words.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-003.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nI just love **bold text**.  \nI just love __bold text__.  \nLove**is**bold\n```\n\n----------------------------------------\n\nTITLE: Creating Headings Using Alternate Syntax in Markdown\nDESCRIPTION: This example shows the alternate syntax for creating level 1 and level 2 headings by underlining text with equal signs (=) for level 1 or hyphens (-) for level 2.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-001.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nHeading level 1\n===============\n\nHeading level 2\n---------------\n```\n\n----------------------------------------\n\nTITLE: Creating Line Breaks in Markdown\nDESCRIPTION: This snippet shows how to create line breaks in Markdown by ending a line with two or more spaces before typing return. It demonstrates a line break between two sentences.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-002.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nThis is the first line.  \nAnd this is the second line.\n```\n\n----------------------------------------\n\nTITLE: Creating Paragraphs in Markdown\nDESCRIPTION: This snippet demonstrates how to create paragraphs in Markdown by using blank lines to separate text. It shows two distinct paragraphs.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-002.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nI really like using Markdown.\n\nI think I'll use it to format all of my documents from now on.\n```\n\n----------------------------------------\n\nTITLE: Simplified Markdown Table Structure\nDESCRIPTION: Shows a simplified table structure with minimal spacing that produces the same output.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-008.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Syntax | Description |\n| --- | ----------- |\n| Header | Title |\n| Paragraph | Text |\n```\n\n----------------------------------------\n\nTITLE: Creating Ordered Lists with Non-Sequential Numbers\nDESCRIPTION: Markdown will create a properly ordered list regardless of the actual numbers used in the source. The list will still display as sequential in the rendered output.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-005.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. First item\n8. Second item\n3. Third item\n```\n\n----------------------------------------\n\nTITLE: Creating Ordered Lists with Same Number Prefix\nDESCRIPTION: Markdown will automatically increment numbers in ordered lists even if you use the same number for each item. This example shows using '1.' for all items.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-005.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. First item\n1. Second item\n1. Third item\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to nest blockquotes within other blockquotes by using '>>' in front of the paragraph to be nested.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-004.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n>\n>> The :older_woman: bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Blockquotes in Markdown\nDESCRIPTION: Demonstrates how to create a simple blockquote by adding a '>' character in front of a paragraph of text.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-004.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> Dorothy followed her through many of the beautiful rooms in her castle.\n```\n\n----------------------------------------\n\nTITLE: Displaying Emoji Table for People in Markdown\nDESCRIPTION: This markdown code creates a table displaying various emoji representations of human faces and expressions. Each cell contains an emoji, its visual representation, and the corresponding shortcode used to invoke it in text.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-009.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| :bowtie: `:bowtie:` | :smile: `:smile:` | :laughing: `:laughing:` |\n|---|---|---|\n| :blush: `:blush:` | :smiley: `:smiley:` | :relaxed: `:relaxed:` |\n| :smirk: `:smirk:` | :heart_eyes: `:heart_eyes:` | :kissing_heart: `:kissing_heart:` |\n| :kissing_closed_eyes: `:kissing_closed_eyes:` | :flushed: `:flushed:` | :relieved: `:relieved:` |\n| :satisfied: `:satisfied:` | :grin: `:grin:` | :wink: `:wink:` |\n| :stuck_out_tongue_winking_eye: `:stuck_out_tongue_winking_eye:` | :stuck_out_tongue_closed_eyes: `:stuck_out_tongue_closed_eyes:` | :grinning: `:grinning:` |\n| :kissing: `:kissing:` | :kissing_smiling_eyes: `:kissing_smiling_eyes:` | :stuck_out_tongue: `:stuck_out_tongue:` |\n| :sleeping: `:sleeping:` | :worried: `:worried:` | :frowning: `:frowning:` |\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists with Plus Signs in Markdown\nDESCRIPTION: Illustrates another option for creating unordered lists using plus signs as list markers. Each item is on a new line, preceded by a plus sign and a space.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-006.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n+ First item\n+ Second item\n+ Third item\n```\n\n----------------------------------------\n\nTITLE: Indented HTML Code Block in Markdown\nDESCRIPTION: Shows how to create a code block by indenting text with four spaces or one tab in Markdown.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-007.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<html>\n      <head>\n      </head>\n    </html>\n```\n\n----------------------------------------\n\nTITLE: Inline Code Formatting in Markdown\nDESCRIPTION: Demonstrates how to format inline code using backticks in Markdown syntax.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/tests/toolkit/export/markdown_to_pdf/artifacts_test_export_markdown_to_pdf/example-markdown-input-007.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`nano`\n```\n\n----------------------------------------\n\nTITLE: Referencing borb Project with Double Backticks in Markdown\nDESCRIPTION: This snippet shows how to reference the borb project using double backticks for code formatting in Markdown. It's an alternative way to highlight the project name within the text.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/SECURITY.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n``borb\n```\n\n----------------------------------------\n\nTITLE: Referencing borb Project in Markdown\nDESCRIPTION: This snippet demonstrates how to reference the borb project using inline code formatting in Markdown. It's used to highlight the project name within the text.\nSOURCE: https://github.com/jorisschellekens/borb/blob/master/SECURITY.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`borb`\n```"
  }
]
[
  {
    "owner": "spantaleev",
    "repo": "matrix-docker-ansible-deploy",
    "content": "TITLE: Define template file path for Synapse\nDESCRIPTION: This variable specifies the relative path to the templates directory within the container. If the templates are located at the root path, this line should be deleted.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_image_customizations_templates_in_container_template_files_relative_path: templates\n```\n\n----------------------------------------\n\nTITLE: Increasing Dendrite Logging Verbosity - YAML\nDESCRIPTION: This code snippet demonstrates how to increase the logging verbosity for Dendrite by adding a logging configuration to the `matrix_dendrite_configuration_extension_yaml` variable in the `vars.yml` file.  Setting the logging level to `debug` provides more detailed output for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dendrite.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dendrite_configuration_extension_yaml: |\n  logging:\n  - type: std\n    level: debug\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring LDAP Provider - YAML\nDESCRIPTION: This YAML snippet configures the LDAP password provider for Matrix Synapse. It enables the provider, specifies the LDAP URIs, enables TLS, and sets the base DN and attribute mappings.  It's crucial to adapt these values to match your specific LDAP server configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ldap-auth.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_ext_password_provider_ldap_enabled: true\nmatrix_synapse_ext_password_provider_ldap_uri:\n  - \"ldap://ldap-01.example.com:389\"\n  - \"ldap://ldap-02.example.com:389\"\nmatrix_synapse_ext_password_provider_ldap_start_tls: true\nmatrix_synapse_ext_password_provider_ldap_base: \"ou=users,dc=example,dc=com\"\nmatrix_synapse_ext_password_provider_ldap_attributes_uid: \"uid\"\nmatrix_synapse_ext_password_provider_ldap_attributes_mail: \"mail\"\nmatrix_synapse_ext_password_provider_ldap_attributes_name: \"cn\"\nmatrix_synapse_ext_password_provider_ldap_bind_dn: \"\"\nmatrix_synapse_ext_password_provider_ldap_bind_password: \"\"\nmatrix_synapse_ext_password_provider_ldap_filter: \"\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Template Customization for Synapse in Ansible\nDESCRIPTION: This configuration snippet enables custom templates for Synapse, which allows customization of web pages and email notifications. It also shows how to configure the playbook to build a custom container image based on the official one, to ensure the customizations are applied.  The custom templates should reside in a Git repository that is cloned during the image customization process.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# If you'd like to ensure that the customized image is built each time the playbook runs, enable this.\n# Otherwise, the customized image will only be rebuilt whenever the Synapse version changes (once every ~2 weeks).\n# matrix_synapse_docker_image_customized_build_nocache: true\n\nmatrix_synapse_container_image_customizations_templates_enabled: true\n\n# Our templates live in a templates/ directory within the repository.\n```\n\n----------------------------------------\n\nTITLE: Registering a User Account with Ansible\nDESCRIPTION: This command registers a new user account on the Matrix server using the Ansible playbook. It uses the `setup.yml` playbook and passes extra variables for the username, password, and administrator status.  The `register-user` tag ensures that only the user registration task is executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=YOUR_USERNAME_HERE password=YOUR_PASSWORD_HERE admin=yes' --tags=register-user\n```\n\nLANGUAGE: sh\nCODE:\n```\n# Example: ansible-playbook -i inventory/hosts setup.yml --extra-vars='username=alice password=secret-password admin=yes' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Configuring Synapse OIDC with Keycloak in Ansible\nDESCRIPTION: This example configuration demonstrates how to enable OpenID Connect (OIDC) authentication with Synapse using Keycloak as the Identity Provider. It requires specifying the `idp_id`, `idp_name`, `issuer`, `client_id`, `client_secret`, and `scopes`. It also uses Jinja2 templating (with `{% raw %}` and `{% endraw %}`) to map user attributes from Keycloak to Synapse user properties.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_oidc_enabled: true\n\nmatrix_synapse_oidc_providers:\n  - idp_id: keycloak\n    idp_name: \"My KeyCloak server\"\n    issuer: \"https://url.ix/realms/{realm_name}\"\n    client_id: \"matrix\"\n    client_secret: \"{{ vault_synapse_keycloak }}\"\n    scopes: [\"openid\", \"profile\"]\n    user_mapping_provider:\n      config:\n        localpart_template: \"{% raw %}{{ user.preferred_username }}{% endraw %}\"\n        display_name_template: \"{% raw %}{{ user.name }}{% endraw %}\"\n        email_template: \"{% raw %}{{ user.email }}{% endraw %}\"\n    allow_existing_users: true # Optional\n    backchannel_logout_enabled: true # Optional\n```\n\n----------------------------------------\n\nTITLE: Enabling Node Exporter for System Metrics in Ansible vars.yml\nDESCRIPTION: This snippet demonstrates enabling the Node Exporter for collecting generic system information (CPU, memory, filesystem) by setting the `prometheus_node_exporter_enabled` variable to `true` in the `vars.yml` file. This provides Prometheus with system-level metrics.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nprometheus_node_exporter_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Start Matrix services after data import\nDESCRIPTION: Starts the Matrix services after data has been imported by running the Ansible playbook with the `ensure-matrix-users-created` and `start` tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Copying Sample Configuration File - Bash\nDESCRIPTION: This command copies a sample configuration file (vars.yml) from the examples directory to the host-specific configuration directory.  It serves as a starting point for customizing the Matrix server setup.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncp examples/vars.yml inventory/host_vars/matrix.example.com/vars.yml\n```\n\n----------------------------------------\n\nTITLE: Exposing Public Rooms Over Federation in Matrix Synapse (YAML)\nDESCRIPTION: This snippet enables exposing the public rooms directory to other Matrix servers via federation. Add this to your `vars.yml` file to allow federation of your public rooms directory.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-federation.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_allow_public_rooms_over_federation: true\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook to Install Matrix\nDESCRIPTION: This command executes the Ansible playbook to install and configure Matrix services. It uses the `inventory/hosts` file for host definitions and runs the `setup.yml` playbook with specific tags: `install-all` to install all services, `ensure-matrix-users-created` to create the necessary Matrix users, and `start` to start the services. Additional flags such as `--ask-pass` and `-K` are included for different authentication scenarios.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Disabling Local DB Authentication - YAML\nDESCRIPTION: This YAML snippet disables authentication against the local Synapse database, forcing users to authenticate only against configured password providers such as the LDAP provider. This enforces centralized authentication via LDAP.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ldap-auth.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_password_config_localdb_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Install Matrix server (brand new, no data import)\nDESCRIPTION: Installs a brand new Matrix server by running the Ansible playbook with the `install-all`, `ensure-matrix-users-created`, and `start` tags. This performs a full installation and starts all Matrix services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Enabling S3 media store in Ansible YAML configuration\nDESCRIPTION: This YAML snippet configures the Ansible playbook to enable the S3 media store for Synapse. It sets the bucket name, access key, secret key, and region. Replace the placeholder values with your actual S3 credentials and bucket name.  It assumes you've already created the S3 bucket.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_s3_media_store_enabled: true\nmatrix_s3_media_store_bucket_name: \"your-bucket-name\"\nmatrix_s3_media_store_aws_access_key: \"access-key-goes-here\"\nmatrix_s3_media_store_aws_secret_key: \"secret-key-goes-here\"\nmatrix_s3_media_store_region: \"eu-central-1\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Postgres Exporter for Postgres Metrics in Ansible vars.yml\nDESCRIPTION: This snippet shows how to enable the Postgres exporter for collecting detailed Postgres database metrics by setting `prometheus_postgres_exporter_enabled` to `true` in `vars.yml`. It also shows optional configuration for database username and password.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nprometheus_postgres_exporter_enabled: true\n\n# The username for the user that the exporter uses to connect to the database.\n# Uncomment and adjust this part if you'd like to use a username different than the default.\n# prometheus_postgres_exporter_database_username: \"matrix_prometheus_postgres_exporter\"\n\n# The password for the user that the exporter uses to connect to the database. By default, this is auto-generated by the playbook.\n# Uncomment and adjust this part if you'd like to set the password by yourself.\n# prometheus_postgres_exporter_database_password: \"PASSWORD_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Syncing to Backblaze B2 using Docker in Shell\nDESCRIPTION: This shell command uses a Docker container to synchronize the local Synapse media store to Backblaze B2.  It mounts the local media store as a volume and uses the `tianon/backblaze-b2` image to perform the synchronization.  The `B2_KEY_ID`, `B2_KEY_SECRET`, and `B2_BUCKET_NAME` environment variables must be set correctly. The `--skipNewer` flag avoids re-uploading files that already exist in the B2 bucket with a newer timestamp.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\ndocker run -it --rm -w /work \\\n--env='B2_KEY_ID=YOUR_KEY_GOES_HERE' \\\n--env='B2_KEY_SECRET=YOUR_SECRET_GOES_HERE' \\\n--env='B2_BUCKET_NAME=YOUR_BUCKET_NAME_GOES_HERE' \\\n--mount type=bind,src=/matrix/synapse/storage/media-store,dst=/work,ro \\\n--entrypoint=/bin/sh \\\ndocker.io/tianon/backblaze-b2:3.6.0 \\\n-c 'b2 authorize-account $B2_KEY_ID $B2_KEY_SECRET && b2 sync /work b2://$B2_BUCKET_NAME --skipNewer'\n```\n\n----------------------------------------\n\nTITLE: Enabling Appservice Double Puppet in vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable the Appservice Double Puppet service by adding the `matrix_appservice_double_puppet_enabled: true` line to your `vars.yml` file. This automatically enables double puppeting for all bridges that support it via the appservice method. This method is the easiest and most recommended way of enabling double puppeting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_double_puppet_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible in Docker on Matrix Server\nDESCRIPTION: This command starts a Docker container to run Ansible on the Matrix server itself. It mounts the playbook directory into the container and sets the entrypoint to a shell.  It requires Docker to be installed on the Matrix server. It uses the `ghcr.io/devture/ansible` image.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndocker run \\\n-it \\\n--rm \\\n--privileged \\\n--pid=host \\\n-w /work \\\n--mount type=bind,src=`pwd`,dst=/work \\\n--entrypoint=/bin/sh \\\nghcr.io/devture/ansible:11.1.0-r0-0\n```\n\n----------------------------------------\n\nTITLE: Extending Element Web Configuration with Custom JSON in Ansible\nDESCRIPTION: This snippet demonstrates how to extend the Element Web configuration using custom JSON via the `matrix_client_element_configuration_extension_json` variable in the Ansible playbook's `vars.yml` file.  This allows overriding default settings or introducing new ones.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# Your custom JSON configuration for Element Web should go to `matrix_client_element_configuration_extension_json`.\n # This configuration extends the default starting configuration (`matrix_client_element_configuration_default`).\n #\n # You can override individual variables from the default configuration, or introduce new ones.\n #\n # If you need something more special, you can take full control by\n # completely redefining `matrix_client_element_configuration_default`.\n #\nmatrix_client_element_configuration_extension_json: |\n {\n \"disable_3pid_login\": true,\n \"disable_login_language_selector\": true\n }\n```\n\n----------------------------------------\n\nTITLE: Configuring Mjolnir Logging Verbosity\nDESCRIPTION: This YAML snippet configures the logging level for Mjolnir.  Valid values are ERROR, WARN, INFO, and DEBUG.  Place this configuration within your `vars.yml` file and rerun the playbook to apply the changes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: ERROR, WARN, INFO, DEBUG\nmatrix_bot_mjolnir_configuration_extension_yaml: |\n  logLevel: \"DEBUG\"\n```\n\n----------------------------------------\n\nTITLE: Run Ansible playbook for Synapse setup\nDESCRIPTION: This command executes the Ansible playbook to set up and start Synapse. It uses the `setup-all` and `start` tags to perform all necessary configuration and initialization steps.  Inventory file `inventory/hosts` must exist.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Public Registration for Synapse (YAML)\nDESCRIPTION: Enables public user registration for Synapse by setting the `matrix_synapse_enable_registration` variable to `true` in the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_enable_registration: true\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook for Pantalaimon\nDESCRIPTION: This snippet shows the command to run the Ansible playbook with specific tags to set up and start Pantalaimon. The `setup-all` tag ensures that all necessary steps are executed, and the `start` tag initiates the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-pantalaimon.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Synapse S3 Storage Provider\nDESCRIPTION: This YAML snippet demonstrates how to configure the synapse-s3-storage-provider in the `inventory/host_vars/matrix.example.com/vars.yml` file. It includes settings for enabling the provider, specifying the S3 bucket, region, endpoint URL, and storage class. It also shows how to configure authentication using either access key ID and secret key or EC2 instance profile.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-s3-storage-provider.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_synapse_s3_storage_provider_enabled: true\n\nmatrix_synapse_ext_synapse_s3_storage_provider_config_bucket: your-bucket-name\nmatrix_synapse_ext_synapse_s3_storage_provider_config_region_name: some-region-name # e.g. eu-central-1\nmatrix_synapse_ext_synapse_s3_storage_provider_config_endpoint_url: https://s3.REGION_NAME.amazonaws.com # adjust this\nmatrix_synapse_ext_synapse_s3_storage_provider_config_storage_class: STANDARD # or STANDARD_IA, etc.\n\n# Authentication Method 1 — (access key ID + secret)\n# This works on all providers (AWS and other compatible systems).\n# Uncomment the variables below to use it.\n# matrix_synapse_ext_synapse_s3_storage_provider_config_access_key_id: access-key-goes-here\n# matrix_synapse_ext_synapse_s3_storage_provider_config_secret_access_key: secret-key-goes-here\n\n# Authentication Method 2 — EC2 instance profile which grants permission to access S3\n# This only works on AWS when your server is hosted on an EC2 instance with the correct instance profile set.\n# Uncomment the variable below to use it.\n# matrix_synapse_ext_synapse_s3_storage_provider_config_ec2_instance_profile: true\n```\n\n----------------------------------------\n\nTITLE: Disabling Default PostgreSQL and Configuring Synapse in YAML\nDESCRIPTION: This YAML snippet disables the default PostgreSQL instance managed by the playbook and configures Synapse to connect to an external PostgreSQL server. It requires specifying the host, user, password, and database name of the external server. The specified database must be accessible and either empty or contain a valid Synapse database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-external-postgres.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\npostgres_enabled: false\n\n# Rewire Synapse to use your external Postgres server\nmatrix_synapse_database_host: \"your-postgres-server-hostname\"\nmatrix_synapse_database_user: \"your-postgres-server-username\"\nmatrix_synapse_database_password: \"your-postgres-server-password\"\nmatrix_synapse_database_database: \"your-postgres-server-database-name\"\n\n# Rewire any other service (each `matrix-*` role) you may wish to use to use your external Postgres server.\n# Each service expects to have its own dedicated database on the Postgres server\n# and uses its own variable names (see `roles/custom/matrix-*/defaults/main.yml`) for configuring Postgres connectivity.\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS-01 ACME Challenge with Cloudflare (YAML)\nDESCRIPTION: This snippet configures Traefik to use the DNS-01 challenge type for Let's Encrypt using Cloudflare as the DNS provider. It includes setting the DNS challenge provider, enabling the challenge, setting the delay before checking, defining resolvers and setting the environment variables for Cloudflare authentication.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ssl-certificates.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\ntraefik_config_certificatesResolvers_acme_dnsChallenge_enabled: true\ntraefik_config_certificatesResolvers_acme_dnsChallenge_provider: \"cloudflare\"\ntraefik_config_certificatesResolvers_acme_dnsChallenge_delayBeforeCheck: 60\ntraefik_config_certificatesResolvers_acme_dnsChallenge_resolvers:\n  - \"1.1.1.1:53\"\ntraefik_environment_variables: |\n  CF_API_EMAIL=redacted\n  CF_ZONE_API_TOKEN=redacted\n  CF_DNS_API_TOKEN=redacted\n  LEGO_DISABLE_CNAME_SUPPORT=true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Setup\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` to configure and deploy Matrix services on the target server. It uses specific tags (`setup-all`, `ensure-matrix-users-created`, `start`) to control the execution flow.  The `-i` option specifies the inventory file containing host information.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Prometheus in Ansible vars.yml\nDESCRIPTION: This snippet shows how to enable Prometheus by setting the `prometheus_enabled` variable to `true` in the `vars.yml` file. This enables Prometheus to collect metrics from the Matrix homeserver.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprometheus_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configure Upstream OAuth2 Providers in vars.yml (YAML)\nDESCRIPTION: This YAML snippet shows an example configuration for setting up an upstream OAuth2 provider in the `vars.yml` file, which is used by the Ansible playbook to configure Matrix Authentication Service. It defines provider ID, issuer URL, client ID, client secret, scope, and other parameters required for OAuth2 authentication.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_authentication_service_config_upstream_oauth2_providers:\n  - # A unique identifier for the provider\n    # Must be a valid ULID\n    id: 01HFVBY12TMNTYTBV8W921M5FA\n    # The issuer URL, which will be used to discover the provider's configuration.\n    # If discovery is enabled, this *must* exactly match the `issuer` field\n    # advertised in `<issuer>/.well-known/openid-configuration`.\n    issuer: https://example.com/\n    # A human-readable name for the provider,\n    # which will be displayed on the login page\n    #human_name: Example\n    # A brand identifier for the provider, which will be used to display a logo\n    # on the login page. Values supported by the default template are:\n    #  - `apple`\n    #  - `google`\n    #  - `facebook`\n    #  - `github`\n    #  - `gitlab`\n    #  - `twitter`\n    #brand_name: google\n    # The client ID to use to authenticate to the provider\n    client_id: mas-fb3f0c09c4c23de4\n    # The client secret to use to authenticate to the provider\n    # This is only used by the `client_secret_post`, `client_secret_basic`\n    # and `client_secret_jwk` authentication methods\n    #client_secret: f4f6bb68a0269264877e9cb23b1856ab\n    # Which authentication method to use to authenticate to the provider\n    # Supported methods are:\n    #   - `none`\n    #   - `client_secret_basic`\n    #   - `client_secret_post`\n    #   - `client_secret_jwt`\n    #   - `private_key_jwt` (using the keys defined in the `secrets.keys` section)\n    token_endpoint_auth_method: client_secret_post\n    # Which signing algorithm to use to sign the authentication request when using\n    # the `private_key_jwt` or the `client_secret_jwt` authentication methods\n    #token_endpoint_auth_signing_alg: RS256\n    # The scopes to request from the provider\n    # In most cases, it should always include `openid` scope\n    scope: \"openid email profile\"\n    # How the provider configuration and endpoints should be discovered\n    # Possible values are:\n    #  - `oidc`: discover the provider through OIDC discovery,\n    #     with strict metadata validation (default)\n    #  - `insecure`: discover through OIDC discovery, but skip metadata validation\n    #  - `disabled`: don't discover the provider and use the endpoints below\n    #discovery_mode: oidc\n    # Whether PKCE should be used during the authorization code flow.\n    # Possible values are:\n    #  - `auto`: use PKCE if the provider supports it (default)\n    #    Determined through discovery, and disabled if discovery is disabled\n    #  - `always`: always use PKCE (with the S256 method)\n    #  - `never`: never use PKCE\n    #pkce_method: auto\n    # The provider authorization endpoint\n    # This takes precedence over the discovery mechanism\n    #authorization_endpoint: https://example.com/oauth2/authorize\n    # The provider token endpoint\n    # This takes precedence over the discovery mechanism\n    #token_endpoint: https://example.com/oauth2/token\n    # The provider JWKS URI\n    # This takes precedence over the discovery mechanism\n    #jwks_uri: https://example.com/oauth2/keys\n    # How user attributes should be mapped\n    #\n    # Most of those attributes have two main properties:\n    #   - `action`: what to do with the attribute. Possible values are:\n    #      - `ignore`: ignore the attribute\n    #      - `suggest`: suggest the attribute to the user, but let them opt out\n    #      - `force`: always import the attribute, and don't fail if it's missing\n    #      - `require`: always import the attribute, and fail if it's missing\n    #   - `template`: a Jinja2 template used to generate the value. In this template,\n    #      the `user` variable is available, which contains the user's attributes\n    #      retrieved from the `id_token` given by the upstream provider.\n    #\n    # Each attribute has a default template which follows the well-known OIDC claims.\n    #\n    claims_imports:\n      # The subject is an internal identifier used to link the\n      # user's provider identity to local accounts.\n      # By default it uses the `sub` claim as per the OIDC spec,\n      # which should fit most use cases.\n      subject:\n        #template: \"{% raw %}{{ user.sub }}{% endraw %}\"\n      # The localpart is the local part of the user's Matrix ID.\n      # For example, on the `example.com` server, if the localpart is `alice`,\n      #  the user's Matrix ID will be `@alice:example.com`.\n      localpart:\n        #action: force\n        #template: \"{% raw %}{{ user.preferred_username }}{% endraw %}\"\n      # The display name is the user's display name.\n      #displayname:\n        #action: suggest\n        #template: \"{% raw %}{{ user.name }}{% endraw %}\"\n      # An email address to import.\n      email:\n        #action: suggest\n        #template: \"{% raw %}{{ user.email }}{% endraw %}\"\n        # Whether the email address must be marked as verified.\n        # Possible values are:\n        #  - `import`: mark the email address as verified if the upstream provider\n        #     has marked it as verified, using the `email_verified` claim.\n        #     This is the default.\n        #   - `always`: mark the email address as verified\n        #   - `never`: mark the email address as not verified\n        #set_email_verification: import\n```\n\n----------------------------------------\n\nTITLE: Editing Reloading Schedule in YAML\nDESCRIPTION: This snippet shows how to edit the coturn reloading schedule in the `vars.yml` file. The schedule is defined in systemd timer calendar format.  Adjust the `matrix_coturn_reload_schedule` variable to your desired schedule.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_coturn_reload_schedule: \"*-*-* 06:30:00\"\n```\n\n----------------------------------------\n\nTITLE: Enable Traefik Dashboard - YAML\nDESCRIPTION: This snippet enables the Traefik dashboard UI and configures basic authentication for it. It sets the `traefik_dashboard_enabled`, `traefik_dashboard_hostname`, `traefik_dashboard_basicauth_enabled`, `traefik_dashboard_basicauth_user`, and `traefik_dashboard_basicauth_password` variables in the `vars.yml` file.  Remember to replace YOUR_USERNAME_HERE and YOUR_PASSWORD_HERE with actual credentials.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_dashboard_enabled: true\ntraefik_dashboard_hostname: \"{{ matrix_server_fqn_matrix }}\"\ntraefik_dashboard_basicauth_enabled: true\ntraefik_dashboard_basicauth_user: YOUR_USERNAME_HERE\ntraefik_dashboard_basicauth_password: YOUR_PASSWORD_HERE\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Maubot Setup (Bash)\nDESCRIPTION: This command executes the Ansible playbook to set up maubot. It uses specific tags to ensure all dependencies are installed and users are created. The setup includes ensuring matrix users are created and then starting the services. The `setup-all` tag covers all setup tasks.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-maubot.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom SSL Certificates in Traefik (YAML)\nDESCRIPTION: This snippet configures Traefik to use custom SSL certificates.  It disables ACME/Let's Encrypt, enables the SSL directory, and configures Traefik to load the custom SSL key pair by extending the provider configuration. It also includes an example using the `aux` role to create the necessary certificate files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ssl-certificates.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Disable ACME / Let's Encrypt support.\ntraefik_config_certificatesResolvers_acme_enabled: false\n\n# Disabling ACME support (above) automatically disables the SSL directory to be created.\n# Force-enable it to be created with this configuration, because we'll add our certificate files there.\ntraefik_ssl_dir_enabled: true\n\n# Tell Traefik to load our custom SSL key pair by extending provider configuration.\n# The key pair files are created below, in `aux_file_definitions`.\n# Note that the `/ssl/…` path is an **in-container path**, not a path on the host (like `/matrix/traefik/ssl`). Do not change it!\ntraefik_provider_configuration_extension_yaml:\n  tls:\n    certificates:\n      - certFile: /ssl/cert.pem\n        keyFile: /ssl/privkey.pem\n    stores:\n      default:\n        defaultCertificate:\n          certFile: /ssl/cert.pem\n          keyFile: /ssl/privkey.pem\n\n# Use the aux role to create our custom files on the server.\n# If you'd like to do this manually, remove this `aux_file_definitions` variable.\naux_file_definitions:\n  # Create the privkey.pem file on the server by\n  # uploading a file from the computer where Ansible is running.\n  - dest: \"{{ traefik_ssl_dir_path }}/privkey.pem\"\n    src: /path/on/your/Ansible/computer/to/privkey.pem\n    # Alternatively, comment out `src` above and uncomment the lines below to provide the certificate content inline.\n    # Mind the indentation level (indented with two white space characters).\n    # content: |\n    #   FILE CONTENT\n    #   HERE\n\n  # Create the cert.pem file on the server\n  # uploading a file from the computer where Ansible is running.\n  - dest: \"{{ traefik_ssl_dir_path }}/cert.pem\"\n    src: /path/on/your/Ansible/computer/to/cert.pem\n    # Alternatively, comment out `src` above and uncomment the lines below to provide the certificate content inline.\n    # Mind the indentation level (indented with two white space characters).\n    # content: |\n    #   FILE CONTENT\n    #   HERE\n```\n\n----------------------------------------\n\nTITLE: Configuring Synapse S3 Storage Migration Schedule - YAML\nDESCRIPTION: This configuration snippet allows customizing the schedule for the periodic migration of local files to S3 storage. The schedule is defined in the format of a systemd timer calendar and can be added to the `vars.yml` file. The default schedule is daily at 05:00.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-s3-storage-provider.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_synapse_s3_storage_provider_periodic_migration_schedule: \"*-*-* 05:00:00\"\n```\n\n----------------------------------------\n\nTITLE: Registering Users via Ansible Playbook (Manual) (Shell)\nDESCRIPTION: Registers a user by manually invoking `ansible-playbook`. This command takes username, password, and admin access (yes or no) as extra variables and uses the `register-user` tag.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=USERNAME_HERE password=PASSWORD_HERE admin=<yes|no>' --tags=register-user\n\n# Example: ansible-playbook -i inventory/hosts setup.yml --extra-vars='username=alice password=secret-password admin=yes' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Changing Federation Port for CDN Compatibility (YAML)\nDESCRIPTION: This snippet changes the federation port to 443 for compatibility with CDNs that only accept ports 443/80. This can help mitigate DOS/DDOS attacks. Add the following configuration to your `vars.yml` file. Use with caution and at your own risk.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-federation.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_http_listener_resource_names: [\"client\",\"federation\"]\n# Any port can be used but in this case we use 443\nmatrix_federation_public_port: 443\nmatrix_synapse_federation_port_enabled: false\n# Note that the following change might not be \"required per se\" but probably will be due to the proxying of the traffic through the CDN proxy servers (CloudFlare for instance). The security impact of doing this should be minimal as your CDN itself will encrypt the traffic no matter what on their proxy servers. You could however first try and see if federation works while setting the following to true.\nmatrix_synapse_tls_federation_listener_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enabling Telemetry for Synapse and Dendrite using YAML\nDESCRIPTION: This snippet shows the YAML configuration required in the `inventory/host_vars/matrix.example.com/vars.yml` file to enable telemetry reporting for both Synapse and Dendrite Matrix homeservers. By setting `matrix_synapse_report_stats` and `matrix_dendrite_report_stats` to `true`, general usage statistics will be submitted regularly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-telemetry.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_report_stats: true # for synapse\n\nmatrix_dendrite_report_stats: true # for dendrite\n```\n\n----------------------------------------\n\nTITLE: Enabling Synapse Worker Support in Ansible\nDESCRIPTION: This snippet shows how to enable Synapse worker support by adding configuration to your `inventory/host_vars/matrix.example.com/vars.yml` file.  This allows Synapse to handle thousands of users by spreading the load of incoming client and server-to-server traffic between multiple processes. The configuration enables the `one-of-each` worker preset by default.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_workers_enabled: true\n\nmatrix_synapse_workers_preset: one-of-each\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook to Setup MAS (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook to set up Matrix Authentication Service, applying the `setup-all` and `start` tags.  This command assumes that the Ansible inventory file is located at `inventory/hosts` and the playbook is `setup.yml`. This command also handles the initial setup and starting the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Synapse Admin in Ansible configuration - YAML\nDESCRIPTION: This code snippet demonstrates how to enable Synapse Admin by setting the `matrix_synapse_admin_enabled` variable to `true` in the `vars.yml` file for your Matrix server. This configuration is required to instruct the Ansible playbook to install and configure Synapse Admin.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-admin.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_admin_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring IRC Bridge with YAML\nDESCRIPTION: This snippet configures the `matrix-appservice-irc` bridge by setting various parameters in the `vars.yml` file.  It enables the bridge, defines IRC server connection details (including SSL, ports, and SASL), configures bot settings (nick, channel joining), specifies private message and dynamic channel behavior, sets membership list options, configures Matrix and IRC client templates, and sets client limits and timeouts.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-irc.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_irc_enabled: true\n\nmatrix_appservice_irc_ircService_servers:\n  irc.example.com:\n    name: \"ExampleNet\"\n    port: 6697\n    ssl: true\n    sasl: false\n    allowExpiredCerts: false\n    sendConnectionMessages: true\n    botConfig:\n      enabled: true\n      nick: \"MatrixBot\"\n      joinChannelsIfNoUsers: true\n    privateMessages:\n      enabled: true\n      federate: true\n    dynamicChannels:\n      enabled: true\n      createAlias: true\n      published: true\n      joinRule: public\n      groupId: +myircnetwork:localhost\n      federate: true\n      aliasTemplate: \"#irc_$CHANNEL\"\n    membershipLists:\n      enabled: false\n      floodDelayMs: 10000\n      global:\n        ircToMatrix:\n          initial: false\n          incremental: false\n        matrixToIrc:\n          initial: false\n          incremental: false\n    matrixClients:\n      userTemplate: \"@irc_$NICK\"\n      displayName: \"$NICK (IRC)\"\n      joinAttempts: -1\n    ircClients:\n      nickTemplate: \"$DISPLAY[m]\"\n      allowNickChanges: true\n      maxClients: 30\n      idleTimeout: 10800\n      reconnectIntervalMs: 5000\n      concurrentReconnectLimit: 50\n      lineLimit: 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Dendrite Implementation in vars.yml - YAML\nDESCRIPTION: This code snippet shows how to change the Matrix homeserver implementation from Synapse to Dendrite by modifying the `matrix_homeserver_implementation` variable in the `vars.yml` file. This is a crucial step before running the Ansible playbook to install Dendrite.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dendrite.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_homeserver_implementation: dendrite\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook - Shell\nDESCRIPTION: This shell command executes the Ansible playbook to install and configure the Matrix Synapse instance with the specified tags. The `setup-all` tag ensures all necessary components are configured, while the `start` tag starts the Synapse service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ldap-auth.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Setting Default Country Code for Element Web in Ansible\nDESCRIPTION: This snippet demonstrates how to set the default country code for phone number inputs in Element Web using the `matrix_client_element_default_country_code` variable in the Ansible playbook's `vars.yml` file.  It changes the default from 'GB' to 'FR'.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_client_element_default_country_code: \"FR\"\n```\n\n----------------------------------------\n\nTITLE: Completely Disabling Federation and Federation Port (YAML)\nDESCRIPTION: This snippet disables federation and the federation port, including the Synapse and reverse proxy companion ports. This is necessary to completely isolate the server. Add the following configuration to your `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-federation.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_homeserver_federation_enabled: false\n\n# This stops the federation port on the Synapse side (normally `matrix-synapse:8048` on the container network).\nmatrix_synapse_federation_port_enabled: false\n\n# This stops the federation port on the synapse-reverse-proxy-companion side (normally `matrix-synapse-reverse-proxy-companion:8048` on the container network).\nmatrix_synapse_reverse_proxy_companion_federation_api_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Traefik Behind proxy_protocol - YAML\nDESCRIPTION: This snippet configures Traefik to work behind a reverse proxy that speaks the `proxy_protocol`.  It sets the `trustedIPs` for the `web-secure` and `matrix-federation` entry points.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_configuration_extension_yaml: |\n  entryPoints:\n    web-secure:\n      proxyProtocol:\n        trustedIPs:\n          - \"127.0.0.1/32\"\n          - \"<proxy internal IPv4>/32\"\n          - \"<proxy IPv6>/128\"\n    matrix-federation:\n        proxyProtocol:\n          trustedIPs:\n            - \"127.0.0.1/32\"\n            - \"<proxy internal IPv4>/32\"\n            - \"<proxy IPv6>/128\"\n```\n\n----------------------------------------\n\nTITLE: Configuring matrix-bot-chatgpt in vars.yml\nDESCRIPTION: This YAML configuration enables the matrix-bot-chatgpt, sets the OpenAI API key, optionally customizes the bot's username, sets the Matrix access token, and configures the system prompt used by the bot.  Replace `API_KEY_HERE` and `ACCESS_TOKEN_HERE` with the appropriate values.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-chatgpt.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_chatgpt_enabled: true\n\nmatrix_bot_chatgpt_openai_api_key: 'API_KEY_HERE'\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_chatgpt_matrix_bot_username_localpart: 'bot.chatgpt'\n\nmatrix_bot_chatgpt_matrix_access_token: 'ACCESS_TOKEN_HERE'\n\n# Configuring the system promt used, needed if the bot is used for special tasks.\n# More information: https://github.com/mustvlad/ChatGPT-System-Prompts\nmatrix_bot_chatgpt_matrix_bot_prompt_prefix: 'Instructions:\\nYou are ChatGPT, a large language model trained by OpenAI.'\n```\n\n----------------------------------------\n\nTITLE: Setting Conduit as Homeserver Implementation in YAML\nDESCRIPTION: This snippet shows how to set the `matrix_homeserver_implementation` variable to `conduit` in your `vars.yml` file.  This is a necessary step to tell the playbook to configure a Conduit server instead of the default Synapse server. The input is the desired server implementation, and the output is the configured variable in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-conduit.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_homeserver_implementation: conduit\n```\n\n----------------------------------------\n\nTITLE: Full Example Configuration for Matrix with DNS SRV and Traefik\nDESCRIPTION: This is a full example configuration showing various variables that need to be changed in the playbook to enable federation via DNS SRV and a wildcard certificate managed by Traefik.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n# Choosing the reverse proxy implementation\nmatrix_playbook_reverse_proxy_type: playbook-managed-traefik\n\n# To serve the federation from any domain, as long as the path matches\nmatrix_synapse_container_labels_public_federation_api_traefik_rule: PathPrefix(`/_matrix/federation`)\n\n# To let Traefik know which domains' certificates to serve\nmatrix_synapse_container_labels_additional_labels: |\n  traefik.http.routers.matrix-synapse-federation-api.tls.domains.main=\"example.com\"\n  traefik.http.routers.matrix-synapse-federation-api.tls.domains.sans=\"*.example.com\"\n\n# Add a new ACME configuration without having to disable the default one, since it would have a wide range of side effects\ntraefik_configuration_extension_yaml: |\n  certificatesResolvers:\n    dns:\n      acme:\n        # To use a staging endpoint for testing purposes, uncomment the line below.\n        # caServer: https://acme-staging-v02.api.letsencrypt.org/directory\n        dnsChallenge:\n          provider: cloudflare\n          resolvers:\n            - \"1.1.1.1:53\"\n            - \"8.8.8.8:53\"\n        storage: {{ traefik_config_certificatesResolvers_acme_storage | to_json }}\n\n# Instruct thep laybook to use the new ACME configuration\ntraefik_certResolver_primary: \"dns\"\n\n# Configure the environment variables needed by Traefik to automate the ACME DNS Challenge (example for Cloudflare)\ntraefik_environment_variables: |\n  CF_API_EMAIL=redacted\n  CF_ZONE_API_TOKEN=redacted\n  CF_DNS_API_TOKEN=redacted\n  LEGO_DISABLE_CNAME_SUPPORT=true\n\n# Only depend on docker.service, this removes the dependency on the certificate exporter, might imply the need to manually restart coturn on the first installation once the certificates are obtained, afterwards, the reload service should handle things\nmatrix_coturn_systemd_required_services_list: ['docker.service']\n```\n\n----------------------------------------\n\nTITLE: Configuring Synapse Simple Antispam in vars.yml\nDESCRIPTION: This YAML snippet configures synapse-simple-antispam by enabling it and specifying a list of blocked homeservers.  The `matrix_synapse_ext_spam_checker_synapse_simple_antispam_enabled` variable enables the antispam checker. `matrix_synapse_ext_spam_checker_synapse_simple_antispam_config_blocked_homeservers` defines the list of homeservers to block.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-simple-antispam.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_ext_spam_checker_synapse_simple_antispam_enabled: true\n\nmatrix_synapse_ext_spam_checker_synapse_simple_antispam_config_blocked_homeservers:\n- example.com\n- example.net\n```\n\n----------------------------------------\n\nTITLE: Register a new user account\nDESCRIPTION: Registers a new user account on the Matrix server using the Ansible playbook and the `register-user` tag. It requires specifying the username, password, and administrator status via extra variables.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=YOUR_USERNAME_HERE password=YOUR_PASSWORD_HERE admin=yes' --tags=register-user\n\n# Example: ansible-playbook -i inventory/hosts setup.yml --extra-vars='username=alice password=secret-password admin=yes' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Reverse Proxying Without SSL Termination - YAML\nDESCRIPTION: This snippet demonstrates how to reverse-proxy traffic to a remote server without terminating SSL at the Traefik instance.  It uses `tls.passthrough` in the dynamic configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\naux_file_definitions:\n  - dest: \"{{ traefik_config_dir_path }}/providers_my_fancy_website.yml\"\n    content: |\n      tcp:\n        routers:\n          webserver-router:\n            rule: Host(`my-fancy-website.example.net`)\n            service: webserver-service\n            tls:\n              passthrough: true\n        services:\n          webserver-service:\n            loadBalancer:\n              servers:\n                - url: \"https://<internal webserver IP address>:<internal port>\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Grafana in Ansible vars.yml\nDESCRIPTION: This snippet shows how to enable Grafana and configure the default admin user and password by setting the corresponding variables in `vars.yml`. It also includes an option to enable anonymous access to Grafana.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ngrafana_enabled: true\n\ngrafana_default_admin_user: \"USERNAME_HERE\"\ngrafana_default_admin_password: \"PASSWORD_HERE\"\n\n# Uncomment to allow viewing Grafana without logging in.\n# grafana_anonymous_access: true\n```\n\n----------------------------------------\n\nTITLE: Using External Coturn Server in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure Synapse to use an external coturn server instead of the one installed by the playbook. Replace `HOSTNAME_OR_IP` with the hostname or IP address of your external coturn server.  It also includes configuring Jitsi to use the external TURN server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n# Disable integrated coturn server\nmatrix_coturn_enabled: false\n\n# Point Synapse to your other coturn server\nmatrix_synapse_turn_uris:\n- turns:HOSTNAME_OR_IP?transport=udp\n- turns:HOSTNAME_OR_IP?transport=tcp\n- turn:HOSTNAME_OR_IP?transport=udp\n- turn:HOSTNAME_OR_IP?transport=tcp\n```\n\nLANGUAGE: YAML\nCODE:\n```\njitsi_web_stun_servers:\n- stun:HOSTNAME_OR_IP:PORT\n```\n\n----------------------------------------\n\nTITLE: Traefik HTTP to HTTPS Redirect Configuration (TOML)\nDESCRIPTION: This TOML configuration snippet demonstrates how to configure Traefik to redirect HTTP traffic on port 80 to HTTPS on port 443 using a file provider. It defines a router, a service, and middleware to enforce the redirect.  The `web` entrypoint must be bound to port 80.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_2\n\nLANGUAGE: toml\nCODE:\n```\n[http]\n  [http.routers]\n    [http.routers.redirect-http]\n      entrypoints = [\"web\"] # The 'web' entrypoint must bind to port 80\n      rule = \"HostRegexp(`{host:.+}`)\" # Change if you don't want to redirect all hosts to HTTPS\n      service = \"dummy\" # Unused, but all routers need services (for now)\n      middlewares = [\"https\"]\n  [http.services]\n    [http.services.dummy.loadbalancer]\n      [[http.services.dummy.loadbalancer.servers]]\n        url = \"localhost\"\n  [http.middlewares]\n    [http.middlewares.https.redirectscheme]\n      scheme = \"https\"\n      permanent = true\n```\n\n----------------------------------------\n\nTITLE: Changing Authentication Mechanism in YAML\nDESCRIPTION: This snippet shows how to change the coturn authentication mechanism from the default `auth-secret` to `lt-cred-mech` in the `vars.yml` file. This may be necessary for compatibility with certain clients. Note that switching to `lt-cred-mech` will disable the integration between Jitsi and coturn server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_coturn_authentication_method: lt-cred-mech\n```\n\n----------------------------------------\n\nTITLE: Adjusting Element Web URL via Ansible Configuration\nDESCRIPTION: This snippet shows how to adjust the Element Web URL by modifying the `matrix_client_element_hostname` and `matrix_client_element_path_prefix` variables in the Ansible playbook's `vars.yml` file.  This allows serving Element Web on a different hostname or path.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Element Web.\nmatrix_client_element_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /element subpath\nmatrix_client_element_path_prefix: /element\n```\n\n----------------------------------------\n\nTITLE: Enabling synapse-auto-invite-accept in Ansible\nDESCRIPTION: This snippet enables the synapse-auto-invite-accept module and configures it to only accept direct messages. It should be added to the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-accept-invite.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_synapse_auto_accept_invite_enabled: true\n\nmatrix_synapse_ext_synapse_auto_accept_invite_accept_invites_only_direct_messages: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Sygnal and configuring apps in vars.yml (YAML)\nDESCRIPTION: This YAML snippet shows how to enable Sygnal within the Ansible playbook and configure example applications for iOS (APNS) and Android (GCM).  It defines the `matrix_sygnal_enabled` flag and the `matrix_sygnal_apps` dictionary, including types, keyfile paths, and API keys. The `aux_file_definitions` section demonstrates how to create the APNS keyfile.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sygnal.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_sygnal_enabled: true\n\n# You need at least 1 app defined.\n# The configuration below is incomplete. Read more below.\nmatrix_sygnal_apps:\n  com.example.myapp.ios:\n    type: apns\n    keyfile: /data/my_key.p8\n    # … more configuration …\n  com.example.myapp.android:\n    type: gcm\n    api_key: your_api_key_for_gcm\n    # … more configuration …\n\naux_file_definitions:\n  - dest: \"{{ matrix_sygnal_data_path }}/my_key.p8\"\n    content: |\n      some\n      content\n      here\n    mode: '0600'\n    owner: \"{{ matrix_user_username }}\"\n    group: \"{{ matrix_user_groupname }}\"\n```\n\n----------------------------------------\n\nTITLE: Copying Data to Amazon S3 using Docker\nDESCRIPTION: This shell command shows how to use Docker to copy existing media files from the local Synapse media store to an Amazon S3 bucket. It mounts the media store directory into the container and uses the AWS CLI to sync the files to S3. The AWS CLI version 2.9.16 is used. Requires Docker and AWS CLI to be installed and configured with the appropriate credentials.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-s3-storage-provider.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it --rm \\\n-w /work \\\n--env-file=/matrix/synapse/ext/s3-storage-provider/env \\\n--mount type=bind,src=/matrix/synapse/storage/media-store,dst=/work,ro \\\n--entrypoint=/bin/sh \\\ndocker.io/amazon/aws-cli:2.9.16 \\\n-c 'aws s3 sync /work/. s3://$BUCKET/'\n```\n\n----------------------------------------\n\nTITLE: Enabling Open Registration for All Domains in ma1sd (YAML)\nDESCRIPTION: This snippet shows how to configure ma1sd to allow open registration for any email domain by setting the `blacklist` and `whitelist` to `~` (null). This configuration overrides the default behavior and enables registration regardless of the email domain. Note that top-level domains cannot be blocked.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_ma1sd_configuration_extension_yaml: |\n  register:\n    policy:\n      allowed: true\n      threepid:\n        email:\n          domain:\n            blacklist: ~\n            whitelist: ~\n```\n\n----------------------------------------\n\nTITLE: Enabling Support Service Discovery in Matrix with YAML\nDESCRIPTION: This YAML snippet configures support service discovery for a Matrix server by enabling the generation of the /.well-known/matrix/support file and defining admin contacts and a support page URL. This configuration enables automated services to access contact information and support resources for the domain, as outlined in MSC 1929.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-well-known.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable generation of `/.well-known/matrix/support`.\nmatrix_static_files_file_matrix_support_enabled: true\n\n# Homeserver admin contacts as per MSC 1929 https://github.com/matrix-org/matrix-spec-proposals/pull/1929\nmatrix_static_files_file_matrix_support_property_m_contacts:\n  - matrix_id: \"@admin1:{{ matrix_domain }}\"\n    email_address: admin@example.com\n    role: m.role.admin\n  - matrix_id: \"@admin2:{{ matrix_domain }}\"\n    email_address: admin2@example.com\n    role: m.role.admin\n  - email_address: security@example.com\n    role: m.role.security\n\n# Your organization's support page on the base (or another) domain, if any\nmatrix_static_files_file_matrix_support_property_m_support_page: \"https://example.com/support\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Slack Bridge - YAML\nDESCRIPTION: This snippet shows how to enable the mautrix-slack bridge by setting the `matrix_mautrix_slack_enabled` variable to `true` in the `vars.yml` file. This enables the playbook to install and configure the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-slack.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_slack_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Adjusting Sygnal URL with custom hostname/path (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to customize the Sygnal URL by setting the `matrix_sygnal_hostname` and `matrix_sygnal_path_prefix` variables.  It allows you to make Sygnal available at a different hostname and/or subpath than the default. It configures Sygnal to use the same domain as the Matrix server and expose it under the `/sygnal` subpath.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sygnal.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Sygnal.\nmatrix_sygnal_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /sygnal subpath\nmatrix_sygnal_path_prefix: /sygnal\n```\n\n----------------------------------------\n\nTITLE: Enabling Appservice Discord bridge in vars.yml\nDESCRIPTION: This YAML snippet enables the Discord bridge and sets the client ID and bot token. The Synapse backwards compatibility setting may also need to be enabled.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_discord_enabled: true\nmatrix_appservice_discord_client_id: \"YOUR DISCORD APP CLIENT ID\"\nmatrix_appservice_discord_bot_token: \"YOUR DISCORD APP BOT TOKEN\"\n\n# As of Synapse 1.90.0, uncomment to enable the backwards compatibility (https://matrix-org.github.io/synapse/latest/upgrade#upgrading-to-v1900) that this bridge needs.\n# Note: This deprecated method is considered insecure.\n#\n# matrix_synapse_configuration_extension_yaml: |\n#   use_appservice_legacy_authorization: true\n```\n\n----------------------------------------\n\nTITLE: Enable Shared Secret Authentication in Ansible YAML\nDESCRIPTION: Enables the shared secret authentication provider and sets the shared secret in the Ansible configuration file. Requires generating a strong shared secret.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-shared-secret-auth.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_password_provider_shared_secret_auth_enabled: true\n\n# Generate a strong shared secret here. You can create one with a command like `pwgen -s 64 1`.\nmatrix_synapse_ext_password_provider_shared_secret_auth_shared_secret: YOUR_SHARED_SECRET_GOES_HERE\n```\n\n----------------------------------------\n\nTITLE: Enabling IPv6 Daemon Options (YAML)\nDESCRIPTION: This snippet shows how to enable IPv6 daemon options by setting the `devture_systemd_docker_base_ipv6_daemon_options_changing_enabled` variable to `true` in the `vars.yml` configuration file, if Docker is managed by the playbook. This allows forcing IPv6 enablement for older Docker versions.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\ndevture_systemd_docker_base_ipv6_daemon_options_changing_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling and configuring matrix-alertmanager-receiver with Ansible\nDESCRIPTION: This YAML configuration snippet enables the matrix-alertmanager-receiver, sets the access token, and defines a room mapping for user-friendly alert URLs. The access token should be replaced with the actual token obtained from the Matrix homeserver.  Room mapping provides easier-to-use URLs to target specific Matrix rooms for alerts.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_alertmanager_receiver_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_alertmanager_receiver_config_matrix_user_id_localpart: \"bot.alertmanager.receiver\"\n\nmatrix_alertmanager_receiver_config_matrix_access_token: \"ACCESS_TOKEN_HERE\"\n\n# Optionally, configure some mappings (URL-friendly room name -> actual Matrix room ID).\n#\n# If you don't configure mappings, you can still deliver alerts using URLs like this:\n# https://matrix.example.com/matrix-alertmanager-receiver-RANDOM_VALUE_HERE/alert/!qporfwt:example.com\n#\n# If a mapping like the one below is configured, you can deliver alerts using friendlier URLs like this:\n# https://matrix.example.com/matrix-alertmanager-receiver-RANDOM_VALUE_HERE/alert/some-room-name\nmatrix_alertmanager_receiver_config_matrix_room_mapping:\n  some-room-name: \"!qporfwt:{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Disable Local Database Authentication in Ansible YAML\nDESCRIPTION: Disables Synapse's local database authentication, forcing users to authenticate only against configured password providers. This configuration is added to the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-shared-secret-auth.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_password_config_localdb_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Define Git repository URL for Synapse templates\nDESCRIPTION: These variables define the URL and branch of the Git repository containing custom Synapse templates.  The repository is expected to be accessible via SSH.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_image_customizations_templates_git_repository_url: git@github.com:organization/repository.git\nmatrix_synapse_container_image_customizations_templates_git_repository_branch: main\n```\n\n----------------------------------------\n\nTITLE: Using Synapse LDAP values for matrix-ldap-registration-proxy\nDESCRIPTION: This YAML snippet demonstrates how to reuse existing LDAP configuration from the Synapse external password provider for the matrix-ldap-registration-proxy.  This is useful when Synapse is already configured to authenticate against LDAP, ensuring consistency and avoiding redundant configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-ldap-registration-proxy.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Use the LDAP values specified for the synapse role to setup LDAP proxy\nmatrix_ldap_registration_proxy_ldap_uri: \"{{ matrix_synapse_ext_password_provider_ldap_uri }}\"\nmatrix_ldap_registration_proxy_ldap_base_dn: \"{{ matrix_synapse_ext_password_provider_ldap_base }}\"\nmatrix_ldap_registration_proxy_ldap_user: \"{{ matrix_synapse_ext_password_provider_ldap_bind_dn }}\"\nmatrix_ldap_registration_proxy_ldap_password: \"{{ matrix_synapse_ext_password_provider_ldap_bind_password }}\"\n\nmatrix_ldap_registration_proxy_systemd_wanted_services_list_custom:\n  - matrix-synapse.service\n```\n\n----------------------------------------\n\nTITLE: Adjusting rageshake URL (YAML)\nDESCRIPTION: This snippet shows how to adjust the hostname and path prefix for the rageshake service. `matrix_rageshake_hostname` is set to the Matrix server's FQDN, and `matrix_rageshake_path_prefix` is set to `/rageshake`, making the service available under the /rageshake subpath of the Matrix domain. This avoids requiring additional DNS records.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rageshake.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for rageshake.\nmatrix_rageshake_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /rageshake subpath\nmatrix_rageshake_path_prefix: /rageshake\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring matrix-registration-bot with YAML\nDESCRIPTION: This snippet shows the YAML configuration required to enable and configure the matrix-registration-bot. It includes options to enable the bot, set the bot password, enable registration, and require a token for registration. The bot username can also be configured, but defaults to `@bot.matrix-registration-bot:example.com`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-registration-bot.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_matrix_registration_bot_enabled: true\n\n# By default, the playbook will set use the bot with a username like this: `@bot.matrix-registration-bot:example.com`.\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_matrix_registration_bot_matrix_user_id_localpart: bot.matrix-registration-bot\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_bot_matrix_registration_bot_bot_password: PASSWORD_FOR_THE_BOT\n\n# Enables registration\nmatrix_synapse_enable_registration: true\n\n# Restrict registration to users with a token\nmatrix_synapse_registration_requires_token: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Base Domain Serving\nDESCRIPTION: Enables the base domain serving functionality within the Matrix server configuration, allowing it to handle requests for the base domain.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-base-domain-serving.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_static_files_container_labels_base_domain_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configure Synapse Rate Limits for Matrix Corporal - YAML\nDESCRIPTION: This YAML snippet configures Synapse's rate limits to accommodate the login behavior of Matrix Corporal, adjusting the limits for address, account, and failed attempts.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n# Because Corporal peridoically performs lots of user logins from the same IP,\n# you may need raise Synapse's ratelimits.\n# The values below are just an example. Tweak to your use-case (number of users, etc.)\nmatrix_synapse_rc_login:\n  address:\n    per_second: 50\n    burst_count: 300\n  account:\n    per_second: 0.17\n    burst_count: 3\n  failed_attempts:\n    per_second: 0.17\n    burst_count: 3\n```\n\n----------------------------------------\n\nTITLE: Adjusting Sliding Sync Proxy URL (YAML)\nDESCRIPTION: This snippet allows customizing the hostname and path prefix for the Sliding Sync proxy. The `matrix_sliding_sync_hostname` and `matrix_sliding_sync_path_prefix` variables can be set in your `vars.yml` file to define the desired URL for the proxy, such as `ss.example.com` at the root path `/`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sliding-sync-proxy.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_sliding_sync_hostname: ss.example.com\nmatrix_sliding_sync_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Enable Traefik to Load Config Files - YAML\nDESCRIPTION: This configuration allows Traefik to load configuration files from the `/config/` directory within the Traefik container. It sets `traefik_configuration_extension_yaml` to enable the file provider.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_configuration_extension_yaml: |\n  providers:\n    file:\n      directory: /config/\n      watch: true\n      filename: \"\"\n```\n\n----------------------------------------\n\nTITLE: Overriding Conduit Configuration Template Path in YAML\nDESCRIPTION: This snippet demonstrates how to override the default Conduit configuration template with a custom one.  By setting `matrix_conduit_template_conduit_config` variable in `vars.yml`, you can point the playbook to your own `conduit.toml.j2` template file. The input is the file path to the custom template, and the output is the variable configured in the `vars.yml` file pointing to the custom template.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-conduit.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_conduit_template_conduit_config: \"{{ playbook_dir }}/inventory/host_vars/matrix.example.com/conduit.toml.j2\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dimension with Ansible\nDESCRIPTION: This command runs the Ansible playbook with the `setup-all` and `start` tags to install and start the Dimension service. It uses the inventory file `inventory/hosts` to target the relevant servers.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dimension.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Increasing matrix-registration-bot Logging Verbosity with YAML\nDESCRIPTION: This YAML snippet demonstrates how to increase the logging verbosity of the matrix-registration-bot by setting the `matrix_bot_matrix_registration_bot_logging_level` variable to `DEBUG`. The default logging level is `INFO`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-registration-bot.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: ERROR, INFO, DEBUG\nmatrix_bot_matrix_registration_bot_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Prometheus Configuration for Synapse Workers - YAML\nDESCRIPTION: This YAML snippet shows an example Prometheus configuration file for scraping metrics from a Synapse instance, including the main process and worker threads. It includes configuration for basic authentication and defines labels for different job types.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: 'synapse'\n    metrics_path: /metrics/synapse/main-process\n    scheme: https\n    basic_auth:\n      username: prometheus\n      password_file: /etc/prometheus/password.pwd\n    static_configs:\n      - targets: ['matrix.example.com:443']\n        labels:\n          job: \"master\"\n          index: 1\n  - job_name: 'matrix-synapse-synapse-worker-generic-worker-0'\n    metrics_path: /metrics/synapse/worker/generic-worker-0\n    scheme: https\n    basic_auth:\n      username: prometheus\n      password_file: /etc/prometheus/password.pwd\n    static_configs:\n      - targets: ['matrix.example.com:443']\n        labels:\n          job: \"generic_worker\"\n          index: 18111\n```\n\n----------------------------------------\n\nTITLE: Specifying Multiple External IPs in YAML\nDESCRIPTION: This YAML snippet shows how to configure coturn with multiple external IP addresses. This is useful for servers with multiple external network interfaces. Replace the example IPs with your actual IP addresses.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Note: matrix_coturn_turn_external_ip_addresses is different than matrix_coturn_turn_external_ip_address\nmatrix_coturn_turn_external_ip_addresses: ['1.2.3.4', '4.5.6.7']\n```\n\n----------------------------------------\n\nTITLE: Enabling FluffyChat Web in Ansible vars.yml (YAML)\nDESCRIPTION: This YAML snippet shows how to enable FluffyChat Web by setting the `matrix_client_fluffychat_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file.  This is a prerequisite for the playbook to install and configure FluffyChat Web.  You must replace `matrix.example.com` with your actual server name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-fluffychat-web.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_client_fluffychat_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enable UVS with Access Token - YAML\nDESCRIPTION: This YAML configuration enables the Matrix User Verification Service (UVS) and sets the access token for the UVS admin user. Replace `ACCESS_TOKEN_HERE` with the actual access token obtained for the dedicated UVS user.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_user_verification_service_enabled: true\n\nmatrix_user_verification_service_uvs_access_token: \"ACCESS_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Defining Public IP Manually in YAML\nDESCRIPTION: This snippet demonstrates how to manually define the server's public IP address in the `vars.yml` file for coturn configuration.  Replace `YOUR_PUBLIC_IP` with the actual public IP address of the server. This is useful if the `ansible_host` uses a local IP.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_coturn_turn_external_ip_address: \"YOUR_PUBLIC_IP\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Matrix Media Repo Metrics - YAML\nDESCRIPTION: This snippet enables metrics for matrix-media-repo. This allows Prometheus to collect metrics, which can then be visualized in Grafana.  It is necessary to enable Prometheus first, according to the linked documentation.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Expose metrics (locally, on the container network).\nmatrix_media_repo_metrics_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Homeserver URLs for Mjolnir with Pantalaimon\nDESCRIPTION: This configuration snippet defines the homeserver URLs used by Mjolnir when Pantalaimon is enabled. `matrix_bot_mjolnir_homeserver_url` is set to the Pantalaimon URL, while `matrix_bot_mjolnir_raw_homeserver_url` points to the public client API URL. This allows Mjolnir to interact with the homeserver through Pantalaimon for regular operations and directly for fetching reports.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Endpoint URL that Mjolnir uses to interact with the Matrix homeserver (client-server API).\n# Set this to the pantalaimon URL if you're using that.\nmatrix_bot_mjolnir_homeserver_url: \"{{ 'http://matrix-pantalaimon:8009' if matrix_bot_mjolnir_pantalaimon_use else matrix_addons_homeserver_client_api_url }}\"\n\n# Endpoint URL that Mjolnir could use to fetch events related to reports (client-server API and /_synapse/),\n# only set this to the public-internet homeserver client API URL, do NOT set this to the pantalaimon URL.\nmatrix_bot_mjolnir_raw_homeserver_url: \"{{ matrix_addons_homeserver_client_api_url }}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling IPv6 for Docker Container Networks in vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable IPv6 support for Docker container networks by setting the `devture_systemd_docker_base_ipv6_enabled` variable to `true` in the `vars.yml` configuration file. This ensures that all container networks are IPv6-enabled and use NAT66 for address translation.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Controls whether container networks will be created with IPv6 support.\n#\n# If you also have IPv6 support on your server/network and AAAA DNS records pointing to the server,\n# enabling this will effectively give you full public IPv6 connectivity (powered by NAT66).\n#\n# We recommend leaving this enabled even if you don't currently have IPv6 connectivity on your server/network.\n# This way, once you eventually get IPv6 connectivity, you won't have to change anything (besides DNS records).\n#\n# Flipping this setting later on requires manual work (stopping services, deleting and recreating all container networks).\n#\n# In the future, this setting will likely default to `true`, so if you really want IPv6 disabled, explicitly set this to `false`.\n#\n# People managing Docker themselves and running an older Docker version will need additional configuration.\n#\n# Learn more in `docs/configuring-ipv6.md`.\ndevture_systemd_docker_base_ipv6_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Cinny in Ansible Configuration (YAML)\nDESCRIPTION: This YAML snippet enables the Cinny Matrix web client by setting the `matrix_client_cinny_enabled` variable to `true` in the `vars.yml` file. This configuration is necessary for the Ansible playbook to install and configure Cinny.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-cinny.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_client_cinny_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling ma1sd in Ansible Playbook (YAML)\nDESCRIPTION: This snippet shows how to enable the ma1sd Identity Server by setting the `matrix_ma1sd_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This configuration is required to instruct the Ansible playbook to install and configure ma1sd.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_ma1sd_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Maubot in Ansible Configuration (YAML)\nDESCRIPTION: This configuration snippet enables the maubot bot, sets a password, and defines admins. It's added to the `inventory/host_vars/matrix.example.com/vars.yml` file.  A strong password should be generated for `matrix_bot_maubot_initial_password`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-maubot.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_maubot_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_maubot_login: bot.maubot\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_bot_maubot_initial_password: PASSWORD_FOR_THE_BOT\n\nmatrix_bot_maubot_admins:\n  - yourusername: securepassword\n```\n\n----------------------------------------\n\nTITLE: Expose Synapse metrics with basic auth - YAML\nDESCRIPTION: This YAML snippet shows how to enable and expose Synapse metrics, and optionally protect them with basic authentication, using Ansible variables.  It demonstrates setting `matrix_synapse_metrics_enabled` to `true` and provides commented-out examples for enabling metrics proxying and basic authentication.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# Expose metrics (locally, on the container network).\nmatrix_synapse_metrics_enabled: true\n\n# Uncomment to expose metrics on https://matrix.example.com/metrics/synapse/main-process and https://matrix.example.com/metrics/synapse/worker/TYPE-ID.\n# Read the section below (\"Collecting Synapse worker metrics to an external Prometheus server\") if you're running a Synapse worker setup by setting `matrix_synapse_workers_enabled` to true.\n# matrix_synapse_metrics_proxying_enabled: true\n\n# Uncomment to password-protect the metrics for Synapse.\n# matrix_synapse_container_labels_public_metrics_middleware_basic_auth_enabled: true\n\n# Uncomment and set this part to the Basic Authentication credentials (raw `htpasswd` file content) used to protect the endpoints.\n# See https://doc.traefik.io/traefik/middlewares/http/basicauth/#users\n# matrix_synapse_container_labels_public_metrics_middleware_basic_auth_users: ''\n```\n\n----------------------------------------\n\nTITLE: Configure Git repository keyscan for Synapse templates\nDESCRIPTION: These variables configure SSH keyscan functionality for the Git repository. It allows to fetch the server's SSH public key and thus securely connect to the repository.  If the Git repository is public, defining the private key is not necessary and variable should be removed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_image_customizations_templates_git_repository_keyscan_enabled: true\nmatrix_synapse_container_image_customizations_templates_git_repository_keyscan_hostname: github.com\n\n# If your git repository is public, do not define the private key (remove the variable).\nmatrix_synapse_container_image_customizations_templates_git_repository_ssh_private_key: |\n```\n\nLANGUAGE: text\nCODE:\n```\n  -----BEGIN OPENSSH PRIVATE KEY-----\n  …\n  -----END OPENSSH PRIVATE KEY-----\n```\n\n----------------------------------------\n\nTITLE: Enabling Staging Let's Encrypt Certificates in Traefik (YAML)\nDESCRIPTION: This snippet configures Traefik to use staging certificates provided by Let's Encrypt for testing purposes, helping to avoid rate limits. It sets the `traefik_config_certificatesResolvers_acme_use_staging` variable to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ssl-certificates.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntraefik_config_certificatesResolvers_acme_use_staging: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Whatsapp Bridge in Ansible YAML\nDESCRIPTION: This YAML snippet enables the mautrix-whatsapp bridge within the Ansible playbook. It needs to be added to the `inventory/host_vars/matrix.example.com/vars.yml` file to activate the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-whatsapp.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_whatsapp_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible playbook for installation SH\nDESCRIPTION: This command executes the Ansible playbook to install and start matrix-hookshot.  It uses the specified inventory file and applies the 'setup-all' and 'start' tags to target the relevant tasks.  Ensure the inventory file is correctly configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Twitter bridge in vars.yml - YAML\nDESCRIPTION: This YAML snippet shows the required configuration to enable and configure the mx-puppet-twitter bridge within the `vars.yml` file. It includes settings for the consumer key, consumer secret, access token, access token secret, and environment variables necessary for the Twitter bridge to function correctly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-twitter.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_twitter_enabled: true\nmatrix_mx_puppet_twitter_consumer_key: ''\nmatrix_mx_puppet_twitter_consumer_secret: ''\nmatrix_mx_puppet_twitter_access_token: ''\nmatrix_mx_puppet_twitter_access_token_secret: ''\nmatrix_mx_puppet_twitter_environment: ''\n```\n\n----------------------------------------\n\nTITLE: Import Synapse Media Store using Docker\nDESCRIPTION: This command executes the `import_synapse` tool within the `matrix-media-repo` Docker container to import media files. It requires specifying the Synapse database connection parameters, including database name, host, port, username, and password. Replace `postgres_connection_password` with the actual password from your `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\ndocker exec -it matrix-media-repo \\\n    /usr/local/bin/import_synapse \\\n        -dbName synapse \\\n        -dbHost matrix-postgres \\\n        -dbPort 5432 \\\n        -dbUsername matrix \\\n        -dbPassword postgres_connection_password\n```\n\n----------------------------------------\n\nTITLE: Enable ntfy server in vars.yml - Ansible YAML\nDESCRIPTION: This code snippet shows the minimal configuration needed to enable the ntfy server in the `inventory/host_vars/matrix.example.com/vars.yml` file. It sets the `ntfy_enabled` variable to `true`, which triggers the Ansible playbook to install and configure the ntfy server with default settings.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ntfy.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n########################################################################\n#                                                                      #\n# ntfy                                                                 #\n#                                                                      #\n########################################################################\n\nntfy_enabled: true\n\n########################################################################\n#                                                                      #\n# /ntfy                                                                #\n#                                                                      #\n########################################################################\n```\n\n----------------------------------------\n\nTITLE: Enabling matrix-registration in vars.yml (YAML)\nDESCRIPTION: This configuration snippet shows how to enable matrix-registration and set the admin secret in the `vars.yml` file. A strong secret is required for security.  The secret can be generated using a command like `pwgen -s 64 1`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-registration.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_registration_enabled: true\n\n# Generate a strong secret here. You can create one with a command like `pwgen -s 64 1`.\nmatrix_registration_admin_secret: \"ENTER_SOME_SECRET_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Combining Configuration Extensions\nDESCRIPTION: This snippet showcases how to combine multiple configuration extensions for a Mautrix bridge using the `matrix_mautrix_SERVICENAME_configuration_extension_yaml` variable. This example combines relay mode, admin permissions, and encryption settings.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_configuration_extension_yaml: |\n  bridge:\n    relay:\n      enabled: true\n    permissions:\n      '@alice:{{ matrix_domain }}': admin\n    encryption:\n      allow: true\n      default: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Jitsi in Ansible vars.yml (YAML)\nDESCRIPTION: This YAML snippet enables Jitsi within the Ansible playbook configuration. It is placed in the `inventory/host_vars/matrix.example.com/vars.yml` file and is the minimal configuration needed to enable Jitsi. Reviewing and optimizing other Jitsi settings is recommended for optimal performance.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-jitsi.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n########################################################################\n#                                                                      #\n# jitsi                                                                #\n#                                                                      #\n########################################################################\n\njitsi_enabled: true\n\n########################################################################\n#                                                                      #\n# /jitsi                                                               #\n#                                                                      #\n########################################################################\n```\n\n----------------------------------------\n\nTITLE: Setting Mautrix Facebook Logging Level with Ansible\nDESCRIPTION: This snippet configures the logging level for the Mautrix Facebook bridge to `DEBUG` in the `vars.yml` file. This is useful for troubleshooting and provides more detailed logs.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-facebook.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_facebook_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Ansible: Configuring syn2mas upstream provider mapping\nDESCRIPTION: This snippet shows how to configure upstream OIDC provider mapping for syn2mas in the vars.yml file. It is necessary when using OIDC with Synapse to map the Synapse-configured OIDC provider to the new MAS-configured OIDC provider. The example demonstrates mapping a Synapse provider with the id 'oidc-keycloak' to a MAS provider with the id '01HFVBY12TMNTYTBV8W921M5FA'.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Adjust the mapping below to match your provider IDs on the Synapse side and the MAS side.\n# Don't forget that Synapse automatically adds an `oidc-` prefix to provider ids defined in its configuration.\nmatrix_authentication_service_syn2mas_process_extra_arguments:\n  - \"--upstreamProviderMapping oidc-keycloak:01HFVBY12TMNTYTBV8W921M5FA\"\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook to set up the rageshake service. It specifies the inventory file and uses tags `setup-all` and `start` to ensure all necessary tasks are run and the service is started. The ansible-playbook command requires ansible to be installed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rageshake.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook - Shell\nDESCRIPTION: This code snippet shows the command to run the Ansible playbook to install and configure the ntfy server. It uses the `ansible-playbook` command with the inventory file and the `setup.yml` playbook, applying the `setup-all` and `start` tags. This command ensures that the ntfy server is set up and started correctly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ntfy.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Linking Slack Channel to Matrix Room with File Bridging\nDESCRIPTION: This command is used in the administration control room to link a Slack channel to a Matrix room, enabling file bridging. It requires the channel ID, room ID, Slack bot token, and Slack user token.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nlink --channel_id CHANNELID --room !qporfwt:example.com --slack_bot_token xoxb-xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxx --slack_user_token xoxp-xxxxxxxx-xxxxxxxxx-xxxxxxxx-xxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This command executes the Ansible playbook with specific tags to setup the bot, ensure the bot's user is created, and start the bot.  The inventory file is specified using the `-i` flag.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-reminder-bot.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Shell: Performing a syn2mas dry-run\nDESCRIPTION: This command executes a dry-run of the syn2mas migration process using the `just` command with the `matrix-authentication-service-syn2mas` tag.  The `-e matrix_authentication_service_syn2mas_dry_run=true` option enables the dry-run mode, preventing actual data migration and any potential downtime.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags matrix-authentication-service-syn2mas -e matrix_authentication_service_syn2mas_dry_run=true\n```\n\n----------------------------------------\n\nTITLE: Customizing FluffyChat Web URL in Ansible vars.yml (YAML)\nDESCRIPTION: This YAML snippet allows you to customize the URL where FluffyChat Web will be accessible. It sets `matrix_client_fluffychat_hostname` to the Matrix server's FQDN and `matrix_client_fluffychat_path_prefix` to `/fluffychat`.  This configuration avoids the need for additional DNS records if you reuse the matrix domain. Ensure `matrix_server_fqn_matrix` is properly defined in your Ansible variables.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-fluffychat-web.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for FluffyChat Web.\nmatrix_client_fluffychat_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /fluffychat subpath\nmatrix_client_fluffychat_path_prefix: /fluffychat\n```\n\n----------------------------------------\n\nTITLE: Set Custom Auth Token for UVS - YAML\nDESCRIPTION: This YAML configuration sets a custom authorization token for the Matrix User Verification Service (UVS). Replace `YOUR_TOKEN_HERE` with the desired authorization token, which will be used in the `Authorization` header for accessing UVS.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_user_verification_service_uvs_auth_token: \"YOUR_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Registering a bot user with Ansible\nDESCRIPTION: This command registers a new user for the bot using the Ansible playbook. It specifies the username, password, and admin status for the new user. The `--tags=register-user` flag ensures that only the register-user task is executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-chatgpt.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=bot.chatgpt password=PASSWORD_FOR_THE_BOT admin=no' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook to Install Cinny (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook to set up Cinny and other configured components. It uses the `setup-all` and `start` tags to ensure complete installation and service startup. DNS records should be adjusted before running this command.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-cinny.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Admin Users - YAML\nDESCRIPTION: This snippet configures the administrative users for matrix-media-repo.  The users listed here will have full access to the administrative functions of the media repository.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# These users have full access to the administrative functions of the media repository.\n# See docs/admin.md for information on what these people can do. They must belong to one of the\n# configured homeservers above.\n# matrix_media_repo_admins: [\n#   \"@alice:example.org\"\n# ]\n\nmatrix_media_repo_admins: []\n```\n\n----------------------------------------\n\nTITLE: Adjusting matrix-alertmanager-receiver URL with Ansible\nDESCRIPTION: This YAML configuration snippet adjusts the hostname and path prefix for the matrix-alertmanager-receiver service.  This allows the service to be accessed at a custom URL. The example shows how to change the hostname to `alertmanager.example.com` and the path to `/`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_alertmanager_receiver_hostname: alertmanager.example.com\nmatrix_alertmanager_receiver_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Registering Mjolnir Bot User with Ansible\nDESCRIPTION: This command uses Ansible to register a new user for the Mjolnir bot on the Matrix homeserver. It requires specifying the username, password, and admin status.  The `--tags=register-user` flag ensures only the user registration task is executed. Adjust the `admin` parameter based on desired privileges for Mjolnir.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=bot.mjolnir password=PASSWORD_FOR_THE_BOT admin=no' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Configuring Playbook-Managed Traefik in vars.yml (YAML)\nDESCRIPTION: To have the playbook install and use Traefik, you must add the `matrix_playbook_reverse_proxy_type` variable with the value `playbook-managed-traefik` to your `inventory/host_vars/matrix.example.com/vars.yml` file. This configuration enables Traefik to manage SSL certificates seamlessly for all services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_reverse_proxy_type: playbook-managed-traefik\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Pooling - YAML\nDESCRIPTION: This snippet configures database pooling options for matrix-media-repo, including the maximum number of connections and idle connections. Adjusting these values can optimize performance based on the expected traffic.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# The Postgres database pooling options\n\n# The maximum number of connects to hold open. More of these allow for more concurrent\n# processes to happen.\nmatrix_media_repo_database_max_connections: 25\n\n# The maximum number of connects to leave idle. More of these reduces the time it takes\n# to serve requests in low-traffic scenarios.\nmatrix_media_repo_database_max_idle_connections: 5\n```\n\n----------------------------------------\n\nTITLE: Running mas-cli for Administration\nDESCRIPTION: Executes the `mas-cli` command-line tool located at `/matrix/matrix-authentication-service/bin/mas-cli` to perform administrative tasks against Matrix Authentication Service (MAS). It is essential for tasks like user registration and verification when other methods fail.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n/matrix/matrix-authentication-service/bin/mas-cli\n```\n\n----------------------------------------\n\nTITLE: Enabling Etherpad in Ansible vars.yml\nDESCRIPTION: This YAML snippet shows the minimum configuration required in `inventory/host_vars/matrix.example.com/vars.yml` to enable Etherpad. It sets the `etherpad_enabled` variable to `true`, leveraging the default settings already configured by the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-etherpad.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n########################################################################\n#                                                                      #\n# etherpad                                                             #\n#                                                                      #\n########################################################################\n\netherpad_enabled: true\n\n########################################################################\n#                                                                      #\n# /etherpad                                                            #\n#                                                                      #\n########################################################################\n```\n\n----------------------------------------\n\nTITLE: Configuring the Telegram bridge for direct chats only - YAML\nDESCRIPTION: This YAML snippet configures the Telegram bridge to only allow direct chats, excluding all groups from syncing. This is done by setting the `filter_mode` to `whitelist`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-telegram.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_telegram_filter_mode: whitelist\n```\n\n----------------------------------------\n\nTITLE: Listing IPv6 Addresses (Shell)\nDESCRIPTION: This snippet shows how to use the `ip` command to list IPv6 addresses assigned to the server. This helps verify if IPv6 addresses are configured on the system, excluding link-local addresses.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nip -6 addr\n```\n\n----------------------------------------\n\nTITLE: Defining admin users for Dimension in vars.yml\nDESCRIPTION: This YAML snippet defines admin users for Dimension, allowing them to modify integrations.  Replace `@alice:{{ matrix_domain }}` and `@bob:{{ matrix_domain }}` with the Matrix IDs of the desired admin users, using the `matrix_domain` variable for the domain part of the ID.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dimension.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dimension_admins:\n  - \"@alice:{{ matrix_domain }}\"\n  - \"@bob:{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Telegram relay-bot feature - YAML\nDESCRIPTION: This YAML snippet configures the relay-bot feature, allowing anonymous users to chat with Telegram users. Replace `YOUR_TELEGRAM_BOT_TOKEN` with the bot token obtained from BotFather on Telegram. The `configuration_extension_yaml` configures permissions for the relaybot.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-telegram.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_telegram_bot_token: YOUR_TELEGRAM_BOT_TOKEN\nmatrix_mautrix_telegram_configuration_extension_yaml: |\n  bridge:\n    permissions:\n      '*': relaybot\n```\n\n----------------------------------------\n\nTITLE: Enabling Abuse Reporting for Draupnir (YAML)\nDESCRIPTION: This YAML snippet enables abuse reporting for Draupnir by setting `matrix_bot_draupnir_config_web_abuseReporting` to true in the `vars.yml` file.  This requires integration with the reverse proxy (Traefik) in front of the homeserver. This allows the bot to intercept the report API endpoint.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_draupnir_config_web_abuseReporting: true\n```\n\n----------------------------------------\n\nTITLE: Extending Mjolnir Configuration with YAML\nDESCRIPTION: This snippet demonstrates how to extend the default Mjolnir configuration using the `matrix_bot_mjolnir_configuration_extension_yaml` variable in `vars.yml`. This allows overriding individual variables or introducing new ones.  This example changes the `recordIgnoredInvites` option to `true`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_mjolnir_configuration_extension_yaml: |\n  # Your custom YAML configuration goes here.\n  # This configuration extends the default starting configuration (`matrix_bot_mjolnir_configuration_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `matrix_bot_mjolnir_configuration_yaml`.\n  recordIgnoredInvites: true\n```\n\n----------------------------------------\n\nTITLE: Custom Traefik Configuration for Forwarded Headers\nDESCRIPTION: This snippet demonstrates how to configure Traefik to accept insecure forwarded headers.  This is needed when using a reverse proxy.  The trustedIPs option should be set to the IP address of your reverse proxy. This configuration assumes Traefik is already running and you are modifying its existing configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_custom:\n  forwardedHeaders:\n    insecure: true\n  # trustedIPs: ['IP-ADDRESS-OF-YOUR-REVERSE-PROXY']\n```\n\n----------------------------------------\n\nTITLE: Disabling Coturn in YAML\nDESCRIPTION: This YAML snippet shows how to disable the installation or uninstall coturn by setting `matrix_coturn_enabled` to `false` in the `vars.yml` file. Disabling coturn will prevent Synapse from pointing to any coturn servers.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_coturn_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible playbook (Shell)\nDESCRIPTION: This command executes the Ansible playbook with specific tags to set up and start the synapse-auto-compressor.  The `--tags` option specifies which parts of the playbook to run.  `setup-all` likely performs the main configuration and installation, while `start` initiates the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-compressor.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Moving local media store in Shell\nDESCRIPTION: This shell command renames the local Synapse media store directory as a backup after syncing to S3.  This ensures that if something goes wrong, the original data is preserved. This operation must be run on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nmv /matrix/synapse/storage/media-store /matrix/synapse/storage/media-store-local-backup\n```\n\n----------------------------------------\n\nTITLE: Enabling Self-Service Bridging in vars.yml\nDESCRIPTION: This YAML snippet enables self-service bridging, allowing users to bridge Matrix rooms to Discord rooms themselves.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_discord_bridge_enableSelfServiceBridging: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Google Chat Bridge - YAML\nDESCRIPTION: This code snippet shows how to enable the mautrix-googlechat bridge by setting the `matrix_mautrix_googlechat_enabled` variable to `true` in the `vars.yml` file. This is the primary step to activate the bridge during playbook execution.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-googlechat.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_googlechat_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Guest Access for Element Call in Synapse\nDESCRIPTION: This code snippet demonstrates how to enable guest access for Element Call in Synapse homeserver, allowing non-registered users to participate in calls. Setting `matrix_synapse_allow_guest_access` to `true` enables guest access.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-element-call.md#_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\nmatrix_synapse_allow_guest_access: true\n```\n\n----------------------------------------\n\nTITLE: Extend Traefik Configuration - YAML\nDESCRIPTION: This snippet demonstrates how to extend the default Traefik configuration using the `traefik_configuration_extension_yaml` variable in the `vars.yml` file.  It shows an example of enabling the dashboard through this extension, which is redundant as it can be done through dedicated variables as described above.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_configuration_extension_yaml: |\n  # Your custom YAML configuration for Traefik goes here.\n  # This configuration extends the default starting configuration (`traefik_configuration_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `traefik_configuration_yaml`.\n  #\n  # Example configuration extension follows:\n  #\n  api:\n    dashboard: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Hydrogen in Ansible vars.yml\nDESCRIPTION: This code snippet shows how to enable Hydrogen in the Ansible playbook by setting the `matrix_client_hydrogen_enabled` variable to `true` in the `vars.yml` file for the target host. This is the primary step to include Hydrogen in the deployment.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-hydrogen.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_client_hydrogen_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Pantalaimon with Ansible\nDESCRIPTION: This snippet shows how to enable Pantalaimon by setting the `matrix_pantalaimon_enabled` variable to `true` in the `vars.yml` file. This is the basic configuration required to enable the component using the Ansible playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-pantalaimon.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_pantalaimon_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (Shell)\nDESCRIPTION: This snippet demonstrates how to run the Ansible playbook with specific tags to install and start the Sliding Sync proxy. The `--tags=setup-all,start` option ensures that all necessary setup tasks are executed, including starting the proxy service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sliding-sync-proxy.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Extending Draupnir Configuration (YAML)\nDESCRIPTION: This YAML snippet shows how to extend the Draupnir configuration using the `matrix_bot_draupnir_configuration_extension_yaml` variable in `vars.yml`. It allows overriding default settings or introducing new ones. The example shows how to change the `acceptInvitesFromSpace` option.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_draupnir_configuration_extension_yaml: |\n  # Your custom YAML configuration goes here.\n  # This configuration extends the default starting configuration (`matrix_bot_draupnir_configuration_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `matrix_bot_draupnir_configuration_yaml`.\n  acceptInvitesFromSpace: \"!qporfwt:example.com\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Element Call Hostname in Ansible\nDESCRIPTION: This code snippet shows how to customize the Element Call hostname using the `matrix_element_call_hostname` variable in the Ansible playbook configuration file (vars.yml).  This allows you to make the Element Call service available at a hostname different from the default.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-element-call.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_element_call_hostname: element-call.example.com\n```\n\n----------------------------------------\n\nTITLE: Adjusting the schedule in vars.yml (YAML)\nDESCRIPTION: This code snippet shows how to adjust the schedule for the synapse-auto-compressor by modifying the `matrix_synapse_auto_compressor_schedule` variable in your `vars.yml` file. The schedule is defined in the format of a systemd timer calendar. The snippet also shows how to adjust or disable the randomized delay.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-compressor.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_auto_compressor_schedule: \"*-*-* 00:00:00\"\n\n# Consider adjusting the randomized delay or setting it to 0 to disable randomized delays.\n# matrix_synapse_auto_compressor_schedule_randomized_delay_sec: 6h\n```\n\n----------------------------------------\n\nTITLE: Enabling and configuring matrix-hookshot YAML\nDESCRIPTION: This configuration snippet shows how to enable matrix-hookshot and optionally enable end-to-bridge encryption and configure the GitHub bridge by directly embedding the private key. Replace `GITHUB_PRIVATE_KEY_HERE` with the actual private key content.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_hookshot_enabled: true\n\n# Uncomment to enable end-to-bridge encryption.\n# See: https://matrix-org.github.io/matrix-hookshot/latest/advanced/encryption.html\n# matrix_hookshot_experimental_encryption_enabled: true\n\n# Uncomment and paste the contents of GitHub app private key to enable GitHub bridge.\n# Alternatively, you can use one of the other methods explained below on the \"Manage GitHub Private Key with aux role\" section.\n# matrix_hookshot_github_private_key: \"GITHUB_PRIVATE_KEY_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Verify Email with mas-cli\nDESCRIPTION: Manually verifies an email address for a user using the `mas-cli` tool. This is used as a workaround when automatic email delivery fails and provides a way to verify email addresses manually for newly registered or existing users.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n/matrix/matrix-authentication-service/bin/mas-cli manage verify-email some.username email@example.com\n```\n\n----------------------------------------\n\nTITLE: Running Ansible in Docker on Another Computer\nDESCRIPTION: This command starts a Docker container to run Ansible on a computer separate from the Matrix server. It mounts the playbook directory and optionally an SSH key into the container. It requires Docker to be installed on the host machine. It uses the `ghcr.io/devture/ansible` image.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndocker run \\\n-it \\\n--rm \\\n-w /work \\\n--mount type=bind,src=`pwd`,dst=/work \\\n--mount type=bind,src$HOME/.ssh/id_ed25519,dst=/root/.ssh/id_ed25519,ro \\\n--entrypoint=/bin/sh \\\nghcr.io/devture/ansible:11.1.0-r0-0\n```\n\n----------------------------------------\n\nTITLE: Getting Administrator Access in Portal Bridged Room\nDESCRIPTION: This command allows you to gain administrator access in a portal bridged room.  It executes a command inside the `matrix-appservice-discord` Docker container to set privileges. Replace placeholders with actual values.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndocker exec -it matrix-appservice-discord \\\n/bin/sh -c 'cp /cfg/registration.yaml /tmp/discord-registration.yaml && cd /tmp && node /build/tools/adminme.js -c /cfg/config.yaml -m \"!qporfwt:example.com\" -u \"@alice:example.com\" -p 100'\n```\n\n----------------------------------------\n\nTITLE: Configuring Maubot Logging Level (YAML)\nDESCRIPTION: This snippet configures the logging level for maubot. It sets the level to DEBUG for increased verbosity.  Valid values for the logging level are: CRITICAL, ERROR, WARNING, INFO, DEBUG.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-maubot.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: CRITICAL, ERROR, WARNING, INFO, DEBUG\nmatrix_bot_maubot_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Honoroit Bot in vars.yml (YAML)\nDESCRIPTION: This YAML snippet enables the Honoroit bot and configures its login credentials and the Matrix room ID.  It requires defining the bot's password and the target room ID. Make sure to replace PASSWORD_FOR_THE_BOT with a strong, randomly generated password.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-honoroit.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_honoroit_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_honoroit_login: honoroit\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_bot_honoroit_password: PASSWORD_FOR_THE_BOT\n\n# Adjust this to your room ID\nmatrix_bot_honoroit_roomid: \"!qporfwt:{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Baibot Logging Verbosity in vars.yml\nDESCRIPTION: This YAML snippet shows how to configure the logging verbosity for the Baibot Matrix bot using Ansible variables in the `vars.yml` file. It demonstrates setting the logging level for the bot, the mxlink library, and other libraries individually to `debug`. It also shows an alternative, consolidated approach using `matrix_bot_baibot_config_logging`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n# Adjust the bot's own logging level.\nmatrix_bot_baibot_config_logging_level_baibot: debug\n\n# Adjust the logging level for the mxlink bot library used by the bot.\nmatrix_bot_baibot_config_logging_level_mxlink: debug\n\n# Adjust the logging level for other libraries used by the bot.\n# Having this set to a value other than \"warn\" can be very noisy.\nmatrix_bot_baibot_config_logging_level_other_libs: debug\n```\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_logging: debug\n```\n\n----------------------------------------\n\nTITLE: Adjusting Dimension hostname and path prefix in vars.yml\nDESCRIPTION: This YAML snippet adjusts the Dimension hostname and path prefix.  Setting `matrix_dimension_hostname` to `{{ matrix_server_fqn_matrix }}` reuses the main Matrix domain.  Uncommenting `matrix_dimension_path_prefix: /dimension` would, in theory, expose Dimension under a subpath, but is not recommended due to a known issue.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dimension.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Dimension.\nmatrix_dimension_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /dimension subpath\n# matrix_dimension_path_prefix: /dimension\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook with Tags\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` targeting the hosts defined in `inventory/hosts`. It utilizes tags `setup-all` and `start` to selectively run specific tasks within the playbook.  This approach allows for a focused setup and startup of services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-irc.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Relay Mode for a Specific Bridge\nDESCRIPTION: This snippet demonstrates how to enable relay mode for a specific Mautrix bridge.  It uses `matrix_mautrix_SERVICENAME_configuration_extension_yaml` to configure the relay settings.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_configuration_extension_yaml: |\n  bridge:\n    relay:\n      enabled: true\n```\n\n----------------------------------------\n\nTITLE: Setting hCaptcha keys for Dendrite in YAML\nDESCRIPTION: This snippet shows how to configure hCaptcha keys and related settings for a Dendrite homeserver in the `vars.yml` file.  It involves enabling the registration captcha, setting public and private keys, and defining API endpoints and form field configurations specific to hCaptcha. Replace 'YOUR_SITE_KEY' and 'YOUR_SECRET_KEY' with your actual hCaptcha keys.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-captcha.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dendrite_client_api_enable_registration_captcha: true\nmatrix_dendrite_client_api_recaptcha_public_key: 'YOUR_SITE_KEY'\nmatrix_dendrite_client_api_recaptcha_private_key: 'YOUR_SECRET_KEY'\n\nmatrix_dendrite_client_api_recaptcha_siteverify_api: 'https://hcaptcha.com/siteverify'\nmatrix_dendrite_client_api_recaptcha_api_js_url: 'https://js.hcaptcha.com/1/api.js'\nmatrix_dendrite_client_api_recaptcha_form_field: 'h-captcha-response'\nmatrix_dendrite_client_api_recaptcha_sitekey_class: 'h-captcha'\n```\n\n----------------------------------------\n\nTITLE: Enabling matrix-ldap-registration-proxy in Ansible\nDESCRIPTION: This YAML snippet shows how to enable the matrix-ldap-registration-proxy and configure LDAP credentials in the Ansible playbook's `vars.yml` file.  It requires setting the `matrix_ldap_registration_proxy_enabled` flag to `true` and providing the necessary LDAP connection details.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-ldap-registration-proxy.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_ldap_registration_proxy_enabled: true\n\n# LDAP credentials\nmatrix_ldap_registration_proxy_ldap_uri: YOUR_URI_HERE\nmatrix_ldap_registration_proxy_ldap_base_dn: YOUR_DN_HERE\nmatrix_ldap_registration_proxy_ldap_user: YOUR_USER_HERE\nmatrix_ldap_registration_proxy_ldap_password: YOUR_PASSWORD_HERE\n```\n\n----------------------------------------\n\nTITLE: Disabling Federation in Matrix Synapse (YAML)\nDESCRIPTION: This snippet disables federation completely, isolating the server from the rest of the Matrix network. Add the following to your `vars.yml` file.  Users will only be able to communicate with other users on the same server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-federation.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_homeserver_federation_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Example Appservice Registration Configuration\nDESCRIPTION: This example shows the contents of a `registration.yaml` file for appservice registration, which is used to configure bridges and bots for Conduit. The YAML defines details for the appservice, including the token, namespaces, and URL, allowing Conduit to communicate with external services. Note that placeholder values like `<token>` and `example.org` are used and must be replaced with actual values.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-conduit.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nas_token: <token>\nde.sorunome.msc2409.push_ephemeral: true\nhs_token: <token>\nid: signal\nnamespaces:\n  aliases:\n  - exclusive: true\n    regex: ^#signal_.+:example\\.org$\n  users:\n  - exclusive: true\n    regex: ^@signal_.+:example\\.org$\n  - exclusive: true\n    regex: ^@signalbot:example\\.org$\nrate_limited: false\nsender_localpart: _bot_signalbot\nurl: http://matrix-mautrix-signal:29328\n```\n\n----------------------------------------\n\nTITLE: Sliding Sync External Database Configuration (YAML)\nDESCRIPTION: This snippet shows the configuration parameters for an external database to be used with the Sliding Sync proxy. Configuration includes username, password, hostname, port, and database name, all under the `matrix_sliding_sync_` prefix.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sliding-sync-proxy.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_sliding_sync_database_username: 'matrix_sliding_sync'\nmatrix_sliding_sync_database_password: ''\nmatrix_sliding_sync_database_hostname: ''\nmatrix_sliding_sync_database_port: 5432\nmatrix_sliding_sync_database_name: 'matrix_sliding_sync'\n```\n\n----------------------------------------\n\nTITLE: Increasing Postmoogle Logging Verbosity in Ansible\nDESCRIPTION: This YAML snippet shows how to increase the logging level of Postmoogle to DEBUG by adding the `matrix_postmoogle_loglevel` variable to the `vars.yml` file. This allows for more detailed logging information for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-postmoogle.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_postmoogle_loglevel: 'DEBUG'\n```\n\n----------------------------------------\n\nTITLE: Enabling Matrix Media Repo in vars.yml - YAML\nDESCRIPTION: This snippet enables the matrix-media-repo in the `vars.yml` file. Setting this variable to `true` instructs the Ansible playbook to install and configure matrix-media-repo, which is a multi-domain media repository for Matrix.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_media_repo_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Nginx Logs Exporter in Ansible vars.yml\nDESCRIPTION: This snippet demonstrates how to enable the `prometheus-nginxlog-exporter` for exposing nginx logs to Prometheus.  It requires setting the `matrix_prometheus_nginxlog_exporter_enabled` variable to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_prometheus_nginxlog_exporter_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Increase Synapse logging verbosity\nDESCRIPTION: This configuration snippet increases the logging verbosity for Synapse to `INFO`. This is useful for debugging issues or reporting bugs to the developers. It overrides the default `WARNING` level.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_log_level: \"INFO\"\nmatrix_synapse_storage_sql_log_level: \"INFO\"\nmatrix_synapse_root_log_level: \"INFO\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Matrix Authentication Service with Ansible\nDESCRIPTION: This YAML snippet shows how to enable the Matrix Authentication Service in the Ansible playbook configuration. It also includes settings for the encryption secret and a migration flag for existing homeservers. The encryption secret needs to be generated using `openssl rand -hex 32`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_authentication_service_enabled: true\n\n# Generate this encryption secret with: `openssl rand -hex 32`\nmatrix_authentication_service_config_secrets_encryption: ''\n\n# When migrating an existing homeserver to Matrix Authentication Service, uncomment the line below.\n# Learn more about the migration process in the \"Marking an existing homeserver for migration\" section below.\n# For brand-new installations which start directly on MAS, this line can be removed.\n# matrix_authentication_service_migration_in_progress: true\n```\n\n----------------------------------------\n\nTITLE: Serving Static Website with Base Domain\nDESCRIPTION: Configures the Matrix server to serve a static website at the base domain by disabling the default index.html and preventing automatic redirection.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-base-domain-serving.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable base-domain serving\nmatrix_static_files_container_labels_base_domain_enabled: true\n\n# Prevent the default index.html file from being installed\nmatrix_static_files_file_index_html_enabled: false\n\n# Disable the automatic redirectin of `https://example.com/` to `https://matrix.example.com/`.\n# This gets automatically enabled when you disable `matrix_static_files_file_index_html_enabled`, as we're doing above.\nmatrix_static_files_container_labels_base_domain_root_path_redirection_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible playbook to set up system user (Bash)\nDESCRIPTION: This command executes an Ansible playbook to create the `matrix` user and group on the new server.  The inventory file specifies the target host. It uses the `setup-system-user` tag to only execute tasks related to user setup.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-migrating.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-system-user\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Matrix SMS Bridge in vars.yml\nDESCRIPTION: This YAML snippet demonstrates how to enable the matrix-sms-bridge, configure the default room, region, timezone, and settings to connect to android-sms-gateway-server. It includes optional configurations like truststore path and password if the android-sms-gateway-server uses a self-signed certificate. This configuration needs to be added to `inventory/host_vars/matrix.example.com/vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-matrix-bridge-sms.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_sms_bridge_enabled: true\n\n# (optional but recommended) a room ID to a default room\nmatrix_sms_bridge_default_room: \"\"\n\n# (optional but recommended) configure your server location\nmatrix_sms_bridge_default_region: DE\nmatrix_sms_bridge_default_timezone: Europe/Berlin\n\n# Settings to connect to android-sms-gateway-server\nmatrix_sms_bridge_provider_android_baseurl: https://192.168.24.24:9090\nmatrix_sms_bridge_provider_android_username: admin\nmatrix_sms_bridge_provider_android_password: supeSecretPassword\n\n# (optional) if your android-sms-gateway-server uses a self signed vertificate, the bridge needs a \"truststore\". This can be the certificate itself.\nmatrix_sms_bridge_provider_android_truststore_local_path: android-sms-gateway-server.p12\nmatrix_sms_bridge_provider_android_truststore_password: 123\n```\n\n----------------------------------------\n\nTITLE: Backing Up PostgreSQL with Docker\nDESCRIPTION: This command creates a one-off backup of the PostgreSQL database using `pg_dumpall` inside a Docker container and compresses it with gzip. It requires the `matrix-postgres` container to be running and access to the `/matrix/postgres/env-postgres-psql` file for credentials.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n/usr/bin/docker exec \\\n--env-file=/matrix/postgres/env-postgres-psql \\\nmatrix-postgres \\\n/usr/local/bin/pg_dumpall -h matrix-postgres \\\n| gzip -c \\\n> /matrix/postgres.sql.gz\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags (Shell)\nDESCRIPTION: This snippet shows the command to execute the Ansible playbook with specific tags (`setup-all`, `start`). This allows running only the parts of the playbook relevant to setting up and starting the ma1sd service. The `setup-all` tag ensures all configuration steps are applied, while `start` initiates the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags\nDESCRIPTION: This shell command demonstrates how to run the Ansible playbook with specific tags to set up and start Synapse with the S3 storage provider. The command targets the `setup-all` and `start` tags. Requires Ansible to be installed and configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-s3-storage-provider.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring MX Puppet Slack - YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable the MX Puppet Slack bridge and configure the OAuth credentials within the `vars.yml` file. It sets the `matrix_mx_puppet_slack_enabled` flag to `true` and provides placeholders for the Slack app's client ID and client secret.  The Client ID must be quoted to prevent YAML from misinterpreting it as a float.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-slack.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_slack_enabled: true\n# Client ID must be quoted so YAML does not parse it as a float.\nmatrix_mx_puppet_slack_oauth_client_id: \"<SLACK_APP_CLIENT_ID>\"\nmatrix_mx_puppet_slack_oauth_client_secret: \"<SLACK_APP_CLIENT_SECRET>\"\n```\n\n----------------------------------------\n\nTITLE: Adjusting Synapse Admin URL in Ansible config - YAML\nDESCRIPTION: This code snippet shows how to adjust the hostname and path prefix for Synapse Admin by modifying the `matrix_synapse_admin_hostname` and `matrix_synapse_admin_path_prefix` variables in the `vars.yml` file. This allows customization of the URL where Synapse Admin is accessible.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-admin.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_synapse_admin_hostname: admin.example.com\nmatrix_synapse_admin_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags in Shell\nDESCRIPTION: This shell command executes the Ansible playbook (`setup.yml`) with specific tags (`setup-all`, `start`). It is used to install and start the mautrix-whatsapp bridge after the configuration has been adjusted. The command ensures that all dependencies are set up correctly and the service is started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-whatsapp.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This command executes the Ansible playbook (`setup.yml`) using specific tags (`setup-all`, `start`). It is used to configure and start all necessary components for the Matrix deployment. The `-i inventory/hosts` specifies the inventory file to use.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-email.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with tags\nDESCRIPTION: This code snippet shows the command to run the Ansible playbook with specific tags to set up and start the Matrix RTC stack. The `setup-all` tag ensures that all necessary tasks are executed, while the `start` tag initiates the services.  The alternative `just` command simplifies running common playbook commands.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-rtc.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling REST Authentication in Matrix Synapse with YAML\nDESCRIPTION: This configuration snippet enables the REST authentication provider in Matrix Synapse, specifies the endpoint for authentication requests, and sets registration options such as enforcing lowercase usernames and auto-filling profile names. It is configured within the `vars.yml` file of the Ansible inventory.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rest-auth.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_password_provider_rest_auth_enabled: true\nmatrix_synapse_ext_password_provider_rest_auth_endpoint: \"http://matrix-ma1sd:8090\"\nmatrix_synapse_ext_password_provider_rest_auth_registration_enforce_lowercase: false\nmatrix_synapse_ext_password_provider_rest_auth_registration_profile_name_autofill: true\nmatrix_synapse_ext_password_provider_rest_auth_login_profile_name_autofill: false\n```\n\n----------------------------------------\n\nTITLE: Disabling Element Web Installation via Ansible\nDESCRIPTION: This snippet demonstrates how to disable Element Web installation (or uninstall it if previously installed) by setting the `matrix_client_element_enabled` variable to `false` in the Ansible playbook's `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_client_element_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Anthropic Agent - YAML\nDESCRIPTION: This YAML snippet demonstrates how to statically define an Anthropic agent within the baibot Matrix bot configuration.  The configuration includes enabling the agent, setting the API key, configuring the text generation model and the agent prompt.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_agents_static_definitions_anthropic_enabled: true\n\nmatrix_bot_baibot_config_agents_static_definitions_anthropic_config_api_key: \"YOUR_API_KEY_HERE\"\n\n# Uncomment and adjust this part if you'd like to use another text-generation agent\n# matrix_bot_baibot_config_agents_static_definitions_anthropic_config_text_generation_model_id: claude-3-5-sonnet-20240620\n\n# The playbook defines a default prompt for all statically-defined agents.\n# You can adjust it in the `matrix_bot_baibot_config_agents_static_definitions_prompt` variable,\n# or you can adjust it below only for the Anthropic agent.\n# matrix_bot_baibot_config_agents_static_definitions_anthropic_config_text_generation_prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n```\n\n----------------------------------------\n\nTITLE: Setting WeChat Bridge Log Level in vars.yml (YAML)\nDESCRIPTION: This snippet demonstrates how to configure the logging level for the matrix-wechat bridge by setting the `matrix_wechat_log_level` variable in your `vars.yml` file. Valid values include `fatal`, `error`, `warn`, `info`, and `debug`. You need to re-run the playbook for the changes to take effect.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-wechat.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug\nmatrix_wechat_log_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Installing Mautrix Facebook Bridge with Ansible Playbook\nDESCRIPTION: This command executes the Ansible playbook with specific tags to install and start the Mautrix Facebook bridge.  The `setup-all` and `start` tags ensure that all necessary setup tasks are performed and the service is started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-facebook.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Disabling Exim Relay in Ansible Vars File\nDESCRIPTION: This code snippet shows how to disable the Exim relay service by setting the `exim_relay_enabled` variable to `false` in the `inventory/host_vars/matrix.example.com/vars.yml` file. Disabling Exim relay will prevent email notifications and other email-related features from working.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-email.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nexim_relay_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags - Shell\nDESCRIPTION: This code snippet shows the command to run the Ansible playbook with specific tags: `setup-all` and `start`. This ensures that all necessary setup tasks are executed and that the Dendrite server is started after installation. This command is crucial for correctly installing and initializing Dendrite.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dendrite.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication for ma1sd (YAML)\nDESCRIPTION: This snippet shows the configuration needed to enable LDAP authentication for ma1sd. It includes enabling the REST authentication provider in Synapse and configuring the LDAP connection parameters within the `matrix_ma1sd_configuration_extension_yaml` variable.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_ext_password_provider_rest_auth_enabled: true\n\n# matrix-ma1sd is the hostname of the ma1sd Docker container\nmatrix_synapse_ext_password_provider_rest_auth_endpoint: \"http://matrix-ma1sd:8090\"\n\nmatrix_ma1sd_configuration_extension_yaml: |\n  ldap:\n    enabled: true\n    connection:\n      host: ldapHostnameOrIp\n      tls: false\n      port: 389\n      baseDNs: ['OU=Users,DC=example,DC=org']\n      bindDn: CN=My ma1sd User,OU=Users,DC=example,DC=org\n      bindPassword: TheUserPassword\n```\n\n----------------------------------------\n\nTITLE: Setting ReCaptcha keys for Synapse and Dendrite in YAML\nDESCRIPTION: This snippet demonstrates how to configure ReCaptcha keys for Synapse and Dendrite homeservers within the `vars.yml` file. It includes enabling the registration captcha and setting the public and private keys obtained from the ReCaptcha admin console. Replace 'YOUR_SITE_KEY' and 'YOUR_SECRET_KEY' with the actual keys.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-captcha.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# for Synapse\nmatrix_synapse_enable_registration_captcha: true\nmatrix_synapse_recaptcha_public_key: 'YOUR_SITE_KEY'\nmatrix_synapse_recaptcha_private_key: 'YOUR_SECRET_KEY'\n\n# for Dendrite\nmatrix_dendrite_client_api_enable_registration_captcha: true\nmatrix_dendrite_client_api_recaptcha_public_key: 'YOUR_SITE_KEY'\nmatrix_dendrite_client_api_recaptcha_private_key: 'YOUR_SECRET_KEY'\n```\n\n----------------------------------------\n\nTITLE: Stopping Matrix services on the old server using systemctl (Bash)\nDESCRIPTION: This command disables and stops all Matrix-related services on the old server using `systemctl`. This ensures that the services won't restart after a reboot, preventing conflicts during the migration process. It should be run as root or with sudo.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-migrating.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd /etc/systemd/system/ && systemctl disable --now matrix*\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Discord Bridge in Ansible YAML\nDESCRIPTION: This YAML snippet enables the Mautrix Discord bridge in the Ansible playbook. By setting `matrix_mautrix_discord_enabled` to `true` in the `vars.yml` file, the playbook will install and configure the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-discord.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_discord_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Instagram Bridge with YAML\nDESCRIPTION: This YAML snippet shows how to enable the Instagram bridge by setting the `matrix_mx_puppet_instagram_enabled` variable to `true` in the `vars.yml` file. This configuration activates the mx-puppet-instagram bridge during the Ansible playbook execution.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-instagram.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_instagram_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Shell: Verify MAS installation using mas-cli doctor\nDESCRIPTION: This command verifies the MAS installation by running the `mas-cli doctor` command. It checks the connectivity and configuration of MAS and Synapse.  This can be executed either via Ansible tag or directly from the server. It relies on `mas-cli` tool being present in the container.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n/matrix/matrix-authentication-service/bin/mas-cli doctor\n```\n\n----------------------------------------\n\nTITLE: Configure Shared Secret Auth for Matrix Corporal - YAML\nDESCRIPTION: This YAML snippet configures the Shared Secret Auth password provider module, which is required for Matrix Corporal to work. It enables the module and sets the shared secret.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# The Shared Secret Auth password provider module is required for Corporal to work.\n# See configuring-playbook-shared-secret-auth.md\nmatrix_synapse_ext_password_provider_shared_secret_auth_enabled: true\nmatrix_synapse_ext_password_provider_shared_secret_auth_shared_secret: YOUR_SHARED_SECRET_GOES_HERE\n```\n\n----------------------------------------\n\nTITLE: Enabling a Mautrix Bridge with Ansible\nDESCRIPTION: This snippet shows how to enable a specific Mautrix bridge by setting the `matrix_mautrix_SERVICENAME_enabled` variable to `true` in the `vars.yml` file. Replace `SERVICENAME` with the name of the bridge you want to enable (e.g., `twitter`, `discord`, `signal`).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# Replace SERVICENAME with one of: twitter, discord, signal, googlechat, etc.\nmatrix_mautrix_SERVICENAME_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enable Metrics Proxying for Prometheus\nDESCRIPTION: This snippet enables the exposure of metrics on `https://matrix.example.com/metrics/hookshot`, which allows an external Prometheus server to collect the metrics. This setting needs to be enabled in addition to enabling the metrics themselves.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_hookshot_metrics_proxying_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook with Tags\nDESCRIPTION: This shell command demonstrates how to run the Ansible playbook with specific tags to set up and start Etherpad. The `--tags=setup-all,start` option ensures that all necessary setup tasks are executed, including starting the service. Running this command after configuring the playbook will install Etherpad.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-etherpad.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Slack Appservice in vars.yml\nDESCRIPTION: This YAML snippet enables the matrix-appservice-slack, sets the control room ID, and provides options to enable puppeting and Team Sync.  It is placed inside the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_slack_enabled: true\nmatrix_appservice_slack_control_room_id: \"Your Matrix admin room ID\"\n\n# Uncomment to enable puppeting (optional, but recommended)\n# matrix_appservice_slack_puppeting_enabled: true\n# matrix_appservice_slack_puppeting_slackapp_client_id: \"Your Classic Slack App Client ID\"\n# matrix_appservice_slack_puppeting_slackapp_client_secret: \"Your Classic Slack App Client Secret\"\n\n# Uncomment to enable Team Sync (optional)\n# See https://matrix-appservice-slack.readthedocs.io/en/latest/team_sync/\n# matrix_appservice_slack_team_sync_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Disable Traefik Access Logs - YAML\nDESCRIPTION: This snippet disables access logging in Traefik by setting the `traefik_config_accessLog_enabled` variable to `false` in the `vars.yml` file. This prevents Traefik from generating access logs.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_config_accessLog_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enable Base Domain Serving in Ansible Vars File (YAML)\nDESCRIPTION: This code snippet shows how to enable serving the base domain from the integrated web server by setting the `matrix_static_files_container_labels_base_domain_enabled` variable to `true` in the Ansible vars file. This allows the Matrix server to present itself as the base domain in the Matrix network, which is required for federation to work. Place this configuration in the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_static_files_container_labels_base_domain_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Setting Traefik Log Level to DEBUG in vars.yml\nDESCRIPTION: This snippet demonstrates how to increase the Traefik logging verbosity by setting the `traefik_config_log_level` variable to `DEBUG` in the `vars.yml` configuration file.  This requires modifying the Ansible configuration and re-running the playbook. The default log level is INFO.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\ntraefik_config_log_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Disabling User Directory Search Configuration\nDESCRIPTION: This configuration disables user directory search functionality to address a security issue in ma1sd. Setting `matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled` to `false` prevents user directory search requests from being directed to the ma1sd identity server. This mitigates the risk of information leakage related to users created by bridges and other services. It is recommended to re-run the playbook and restart services to apply this workaround.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_76\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_nginx_proxy_proxy_matrix_user_directory_search_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Verbosity - YAML\nDESCRIPTION: This code snippet demonstrates how to increase the logging verbosity for the Mautrix Meta Instagram bridge. By setting the `matrix_mautrix_meta_instagram_logging_min_level` variable to `debug` (or other levels like `trace`, `info`, `warn`, `error`, `fatal`, or `panic`), you can get more detailed logs for troubleshooting purposes. This requires rerunning the playbook after making the changes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-instagram.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# This bridge uses zerolog, so valid levels are: panic, fatal, error, warn, info, debug, trace\nmatrix_mautrix_meta_instagram_logging_min_level: debug\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Upgrading Matrix Services\nDESCRIPTION: This snippet shows how to run the Ansible playbook to upgrade Matrix services after updating the roles. It uses the `install-all` and `start` tags to install new components and restart services. This command is generally faster than running `setup-all`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-upgrading-services.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This command runs the Ansible playbook with specific tags to set up and start the Matrix Synapse server. The `--tags` option specifies which parts of the playbook to execute.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rest-auth.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Setting Pantalaimon Log Level via Ansible\nDESCRIPTION: This snippet shows how to configure the logging level for Pantalaimon by setting the `matrix_pantalaimon_log_level` variable in the `vars.yml` file. Valid values include 'Error', 'Warning', 'Info', and 'Debug'.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-pantalaimon.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: Error, Warning, Info, Debug\nmatrix_pantalaimon_log_level: Debug\n```\n\n----------------------------------------\n\nTITLE: Registering Users via Ansible Playbook (Shell)\nDESCRIPTION: Registers a user via the Ansible playbook, which works regardless of the homeserver implementation or usage of Matrix Authentication Service (MAS). The command takes a username, password, and admin access (yes or no) as arguments.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\njust register-user USERNAME_HERE PASSWORD_HERE <admin access: yes or no>\n\n# Example: `just register-user alice secret-password yes`\n```\n\n----------------------------------------\n\nTITLE: Configure Traefik Environment Variables for DNS-01 Challenge\nDESCRIPTION: This snippet configures the environment variables needed by Traefik to automate the ACME DNS Challenge.  The example is tailored for Cloudflare, requiring API email, zone API token and DNS API token to be set. It also disables CNAME support.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\n# 2. Configure the environment variables needed by Traefik to automate the ACME DNS Challenge (example for Cloudflare)\ntraefik_environment_variables: |\n  CF_API_EMAIL=redacted\n  CF_ZONE_API_TOKEN=redacted\n  CF_DNS_API_TOKEN=redacted\n  LEGO_DISABLE_CNAME_SUPPORT=true\n```\n\n----------------------------------------\n\nTITLE: Enabling Element Themes in SchildiChat Web\nDESCRIPTION: This YAML snippet enables the use of themes from the `element-themes` project in SchildiChat Web. Setting `matrix_client_schildichat_themes_enabled` to `true` will automatically install and enable themes from the specified repository.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_client_schildichat_themes_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Fronting Traefik with Another Reverse-Proxy in vars.yml (YAML)\nDESCRIPTION: To front the integrated Traefik reverse proxy with another reverse proxy, configure the `matrix_playbook_reverse_proxy_type` to `playbook-managed-traefik`, disable the `web-secure` entrypoint, and bind the `web` entrypoint to a local port (e.g., `127.0.0.1:81`).  Additionally, the `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port` variable should be set to a local port to expose the federation entrypoint.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_reverse_proxy_type: playbook-managed-traefik\n\n# Ensure that public urls use https\nmatrix_playbook_ssl_enabled: true\n\n# Disable the web-secure (port 443) endpoint, which also disables SSL certificate retrieval.\n# This has the side-effect of also automatically disabling TLS for the matrix-federation entrypoint\n# (by toggling `matrix_federation_traefik_entrypoint_tls`).\ntraefik_config_entrypoint_web_secure_enabled: false\n\n# If your reverse-proxy runs on another machine, consider using `0.0.0.0:81`, just `81` or `SOME_IP_ADDRESS_OF_THIS_MACHINE:81`\ntraefik_container_web_host_bind_port: '127.0.0.1:81'\n\n# We bind to `127.0.0.1` by default (see above), so trusting `X-Forwarded-*` headers from\n# a reverse-proxy running on the local machine is safe enough.\n# If you're publishing the port (`traefik_container_web_host_bind_port` above) to a public network interface:\n# - remove the `traefik_config_entrypoint_web_forwardedHeaders_insecure` variable definition below\n# - uncomment and adjust the `traefik_config_entrypoint_web_forwardedHeaders_trustedIPs` line below\ntraefik_config_entrypoint_web_forwardedHeaders_insecure: true\n# traefik_config_entrypoint_web_forwardedHeaders_trustedIPs: ['IP-ADDRESS-OF-YOUR-REVERSE-PROXY']\n\n# Expose the federation entrypoint on a custom port (other than port 8448, which is normally used publicly).\n#\n# We bind to `127.0.0.1` by default (see above), so trusting `X-Forwarded-*` headers from\n# a reverse-proxy running on the local machine is safe enough.\n#\n# If your reverse-proxy runs on another machine, consider:\n# - using `0.0.0.0:8449`, just `8449` or `SOME_IP_ADDRESS_OF_THIS_MACHINE:8449` below\n# - adjusting `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_custom` (below) - removing `insecure: true` and enabling/configuring `trustedIPs`\nmatrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port: '127.0.0.1:8449'\n\n# Disable HTTP/3 for the federation entrypoint.\n# If you'd like HTTP/3, consider configuring it for your other reverse-proxy.\n#\n# Disabling this also sets `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port_udp` to an empty value.\n# If you'd like to keep HTTP/3 enabled here (for whatever reason), you may wish to explicitly\n```\n\n----------------------------------------\n\nTITLE: Configuring baibot Administrator - YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure administrator access for the baibot Matrix bot.  It can either define admin patterns directly or utilize the `matrix_admin` variable if it is already configured. The snippet adds one or more admins to this bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Uncomment to add one or more admins to this bridge:\n#\n# matrix_bot_baibot_config_access_admin_patterns:\n#   - \"@*:example.com\"\n#   - \"@admin:example.net\"\n#\n# … unless you've made yourself an admin of all bots/bridges like this:\n#\n# matrix_admin: '@yourAdminAccount:{{ matrix_domain }}'\n```\n\n----------------------------------------\n\nTITLE: Enabling Appservice Double Puppet in Ansible vars.yml\nDESCRIPTION: This code snippet shows how to enable the Appservice Double Puppet service by setting the `matrix_appservice_double_puppet_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This is the primary step to activate the service during playbook execution.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-appservice-double-puppet.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_double_puppet_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Adjusting SchildiChat Web URL in Ansible\nDESCRIPTION: This YAML snippet shows how to adjust the SchildiChat Web URL by tweaking the `matrix_client_schildichat_hostname` and `matrix_client_schildichat_path_prefix` variables. This allows making the service available at a different hostname and/or path.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for SchildiChat Web.\nmatrix_client_schildichat_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /schildichat subpath\nmatrix_client_schildichat_path_prefix: /schildichat\n```\n\n----------------------------------------\n\nTITLE: Enabling Native E2EE Support for Draupnir (YAML)\nDESCRIPTION: This snippet shows how to enable native E2EE support for the Draupnir bot by setting the `matrix_bot_draupnir_config_experimentalRustCrypto` and `matrix_bot_draupnir_config_accessToken` variables in the `vars.yml` file. It requires obtaining a clean access token via curl, as tokens obtained via Element Web are incompatible. Replace `CLEAN_ACCESS_TOKEN_HERE` with your actual access token.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Enables the native E2EE support\nmatrix_bot_draupnir_config_experimentalRustCrypto: true\n\n# Access token which the bot will use for logging in.\n# Comment out `matrix_bot_draupnir_login_native` when using this option.\nmatrix_bot_draupnir_config_accessToken: \"CLEAN_ACCESS_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Alertmanager receiver\nDESCRIPTION: This YAML configuration snippet configures a Matrix receiver in Prometheus Alertmanager.  It specifies the URL to send alerts to, along with routing and grouping settings. `URL_HERE` should point to the matrix-alertmanager-receiver endpoint.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nreceivers:\n  - name: matrix\n    webhook_configs:\n      - send_resolved: true\n        url: URL_HERE\nroute:\n  group_by:\n    - namespace\n  group_interval: 5m\n  group_wait: 30s\n  receiver: \"matrix\"\n  repeat_interval: 12h\n  routes:\n    - receiver: matrix\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible playbook - Shell\nDESCRIPTION: This shell command runs the Ansible playbook to set up the Mautrix Telegram bridge. It uses specific tags to ensure only the necessary tasks are executed. It includes setup-all and start tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-telegram.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags in Shell\nDESCRIPTION: This shell command demonstrates how to run the Ansible playbook with specific tags to install and start coturn. The `--tags` option specifies the tags to run.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-turn.md#_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible playbook to setup bot\nDESCRIPTION: This command executes the Ansible playbook with specific tags to set up the matrix-bot-chatgpt. The `setup-all` tag ensures all setup tasks are run, `ensure-matrix-users-created` creates the bot's user account if it doesn't exist, and `start` starts the bot service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-chatgpt.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Allowing Anyone to Become a Relay User\nDESCRIPTION: This snippet shows how to allow any user on the homeserver to become a relay user by setting the `matrix_mautrix_SERVICENAME_bridge_relay_admin_only` variable to `false` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_bridge_relay_admin_only: false\n```\n\n----------------------------------------\n\nTITLE: Disabling Gravatar in Ansible vars.yml (YAML)\nDESCRIPTION: This YAML snippet disables Gravatar integration with Jitsi to avoid leaking user data to third-party services. Add this to `vars.yml` to explicitly disable Gravatar, if it's enabled by default.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-jitsi.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\njitsi_disable_gravatar: false\n```\n\n----------------------------------------\n\nTITLE: Configuring baibot Initial Users - YAML\nDESCRIPTION: This YAML snippet shows how to configure initial users for the baibot Matrix bot. This configures `matrix_bot_baibot_config_initial_global_config_user_patterns` to define users who have access to the bot.  Subsequent changes to `matrix_bot_baibot_config_initial_global_config_user_patterns` do not affect the bot's behavior.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Uncomment and adjust the bot users if necessary:\n#\n# Subsequent changes to `matrix_bot_baibot_config_initial_global_config_user_patterns` do not affect the bot's behavior.\n# Once initially configured, the allowed users list is managed via bot commands, not via Ansible.\n#\n# matrix_bot_baibot_config_initial_global_config_user_patterns:\n#   - \"@*:{{ matrix_bot_baibot_config_homeserver_server_name }}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Mjolnir with Pantalaimon for E2EE\nDESCRIPTION: This configuration in `vars.yml` enables Pantalaimon for E2EE support with Mjolnir. It sets `matrix_pantalaimon_enabled` and `matrix_bot_mjolnir_pantalaimon_use` to `true`, and configures the username and password for the bot account. These credentials are used by Mjolnir to log in through Pantalaimon.  Ensure the username and password match the bot's credentials.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable Pantalaimon. See docs/configuring-playbook-pantalaimon.md\nmatrix_pantalaimon_enabled: true\n\n# Tell Mjolnir to use Pantalaimon\nmatrix_bot_mjolnir_pantalaimon_use: true\n\n# User name and password for the bot you have created above. Required when using Pantalaimon.\nmatrix_bot_mjolnir_pantalaimon_username: \"bot.mjolnir\"\nmatrix_bot_mjolnir_pantalaimon_password: \"PASSWORD_FOR_THE_BOT\"\n```\n\n----------------------------------------\n\nTITLE: Enable and Configure Buscarron Bot - YAML\nDESCRIPTION: This snippet shows the configuration required in `inventory/host_vars/matrix.example.com/vars.yml` to enable and configure the Buscarron bot. It includes settings for the bot's login, password, accepted forms, and spam list. Replace `PASSWORD_FOR_THE_BOT` with a strong, generated password. The `matrix_domain` variable is used to construct the room ID. Ensure the `redirect` URL is a valid and accessible endpoint.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-buscarron.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_buscarron_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_buscarron_login: bot.buscarron\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_bot_buscarron_password: PASSWORD_FOR_THE_BOT\n\n# Adjust accepted forms\nmatrix_bot_buscarron_forms:\n  - name: contact # (mandatory) Your form name, will be used as endpoint, eg: buscarron.example.com/contact\n    room: \"!qporfwt:{{ matrix_domain }}\" # (mandatory) Room ID where form submission will be posted\n    redirect: https://example.com # (mandatory) To what page user will be redirected after the form submission\n    ratelimit: 1r/m # (optional) rate limit of the form, format: <max requests>r/<interval:s,m>, eg: 1r/s or 54r/m\n    hasemail: 1 # (optional) form has \"email\" field that should be validated\n    extensions: [] # (optional) list of form extensions (not used yet)\n\nmatrix_bot_buscarron_spamlist: [] # (optional) list of emails/domains/hosts (with wildcards support) that should be rejected automatically\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenAI Agent in vars.yml with Ansible\nDESCRIPTION: This snippet details how to configure an OpenAI-powered Baibot agent by adding the provided configuration to the vars.yml file. It requires setting the API key. The agent ID will be prefixed with `static/`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_agents_static_definitions_openai_enabled: true\n\nmatrix_bot_baibot_config_agents_static_definitions_openai_config_api_key: \"YOUR_API_KEY_HERE\"\n\n# The playbook defines a default prompt for all statically-defined agents.\n# You can adjust it in the `matrix_bot_baibot_config_agents_static_definitions_prompt` variable,\n# or you can adjust it below only for the OpenAI agent.\n# matrix_bot_baibot_config_agents_static_definitions_openai_config_text_generation_prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n\n# If you'd like to use another text-generation agent, uncomment and adjust:\n# matrix_bot_baibot_config_agents_static_definitions_openai_config_text_generation_model_id: gpt-4o\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (setup-all, start)\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` with specific tags to configure and start services. It uses the inventory file `inventory/hosts` and targets setup-all and start tags for execution. This is a conservative approach to ensure changes are applied correctly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-riot-web.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Google Messages Bridge in Ansible\nDESCRIPTION: This code snippet demonstrates how to enable the Mautrix Google Messages bridge by setting the `matrix_mautrix_gmessages_enabled` variable to `true` in the `vars.yml` file. This configuration is essential for the playbook to install and configure the bridge. The snippet assumes that the user has access to the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-gmessages.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_gmessages_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Dynamic DNS in Ansible vars.yml\nDESCRIPTION: This code snippet shows how to enable Dynamic DNS and configure the provider settings in the `inventory/host_vars/matrix.example.com/vars.yml` file. It configures the provider, protocol, username, password, and domain.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dynamic-dns.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dynamic_dns_enabled: true\n\nmatrix_dynamic_dns_domain_configurations:\n  - provider: example.net\n    protocol: dyndn2\n    username: YOUR_USERNAME_HERE\n    password: YOUR_PASSWORD_HERE\n    domain: \"{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Configure coturn to Use Wildcard Certificate\nDESCRIPTION: This snippet configures coturn to load the wildcard certificate. It modifies the container's volume mounts to point to the wildcard certificate and private key files, assuming that Traefik and the certificate dumper are enabled.  This ensures that coturn uses the correct certificate for TLS.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n# This changes the path of the loaded certificate, while maintaining the original functionality, we're now loading the wildcard certificate.\nmatrix_coturn_container_additional_volumes: |\n  {{\n    (\n      [\n       {\n         'src': (traefik_certs_dumper_dumped_certificates_dir_path +  '/*.' + matrix_domain + '/certificate.crt'),\n         'dst': '/certificate.crt',\n         'options': 'ro',\n       },\n       {\n         'src': (traefik_certs_dumper_dumped_certificates_dir_path +  '/*.' + matrix_domain + '/privatekey.key'),\n         'dst': '/privatekey.key',\n         'options': 'ro',\n       },\n      ] if matrix_playbook_reverse_proxy_type in ['playbook-managed-traefik', 'other-traefik-container'] and traefik_certs_dumper_enabled and matrix_coturn_tls_enabled else []\n    )\n  }}\n```\n\n----------------------------------------\n\nTITLE: Disabling Rate Limiting for Mjolnir with Curl\nDESCRIPTION: This command uses curl to disable rate limiting for the Mjolnir bot user on a Synapse homeserver. It requires an admin access token and the bot's MXID. It is crucial to replace the placeholder values with actual values.  If the APIs are not exposed to the internet, run locally on the homeserver.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncurl --header \"Authorization: Bearer ADMIN_ACCESS_TOKEN_HERE\" -X POST https://matrix.example.com/_synapse/admin/v1/users/@bot.mjolnir:example.com/override_ratelimit\n```\n\n----------------------------------------\n\nTITLE: Enabling Matrix Media Repo Metrics Proxying - YAML\nDESCRIPTION: This snippet enables proxying of metrics for matrix-media-repo, allowing an external Prometheus server to collect metrics. This configuration exposes metrics on `https://matrix.example.com/metrics/matrix-media-repo`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_media_repo_metrics_proxying_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Checking Matrix Synapse Service Status\nDESCRIPTION: This command uses `systemctl` to check the status of the `matrix-synapse` service. It displays information about whether the service is running, when it was started, and any related logs or errors.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-and-troubleshooting.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsudo systemctl status matrix-synapse\n```\n\nLANGUAGE: sh\nCODE:\n```\n● matrix-synapse.service - Synapse server\n     Loaded: loaded (/etc/systemd/system/matrix-synapse.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sun 2024-01-14 09:13:06 UTC; 1h 31min ago\n```\n\n----------------------------------------\n\nTITLE: Customizing Hydrogen URL in Ansible vars.yml\nDESCRIPTION: This example demonstrates how to customize the Hydrogen URL by setting the `matrix_client_hydrogen_hostname` and `matrix_client_hydrogen_path_prefix` variables in the Ansible `vars.yml` file. This allows serving Hydrogen under a different domain or subpath. Adjusting the domain may require DNS record updates.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-hydrogen.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Hydrogen.\nmatrix_client_hydrogen_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /hydrogen subpath\nmatrix_client_hydrogen_path_prefix: /hydrogen\n```\n\n----------------------------------------\n\nTITLE: Enabling Kakaotalk Appservice\nDESCRIPTION: This configuration enables the matrix-appservice-kakaotalk bridge. Add this to your `inventory/host_vars/matrix.example.com/vars.yml` file to activate the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-kakaotalk.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_kakaotalk_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Postmoogle in Ansible\nDESCRIPTION: This YAML snippet shows the configuration needed in the `inventory/host_vars/matrix.example.com/vars.yml` file to enable Postmoogle, set a password for the bot, and optionally configure admins. It uses variables like `matrix_postmoogle_enabled`, `matrix_postmoogle_password`, and `matrix_postmoogle_admins`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-postmoogle.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_postmoogle_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_postmoogle_login: postmoogle\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_postmoogle_password: PASSWORD_FOR_THE_BOT\n\n# Uncomment to add one or more admins to this bridge:\n#\n# matrix_postmoogle_admins:\n#  - '@yourAdminAccount:{{ matrix_domain }}'\n#\n# … unless you've made yourself an admin of all bots/bridges like this:\n#\n# matrix_admin: '@yourAdminAccount:{{ matrix_domain }}'\n```\n\n----------------------------------------\n\nTITLE: Setting the Bot's Username\nDESCRIPTION: This snippet demonstrates how to set the bot's username by configuring the `matrix_mautrix_SERVICENAME_appservice_bot_username` variable in `vars.yml`.  Replace `BOTNAME` with the desired username.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_9\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_appservice_bot_username: \"BOTNAME\"\n```\n\n----------------------------------------\n\nTITLE: Password-Protecting Matrix Media Repo Metrics - YAML\nDESCRIPTION: This snippet enables password protection for the matrix-media-repo metrics endpoint using Basic Authentication. It configures Traefik middleware to require authentication. The `matrix_media_repo_container_labels_traefik_metrics_middleware_basic_auth_users` variable should be set to the contents of a `htpasswd` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_media_repo_container_labels_traefik_metrics_middleware_basic_auth_enabled: true\nmatrix_media_repo_container_labels_traefik_metrics_middleware_basic_auth_users: ''\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Signal Bridge in YAML Configuration\nDESCRIPTION: This YAML snippet enables the mautrix-signal bridge within the Ansible playbook by setting the `matrix_mautrix_signal_enabled` variable to `true`. This configuration should be added to the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-signal.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_signal_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Datastore Options - YAML\nDESCRIPTION: This snippet configures the options for the S3 datastore in matrix-media-repo, including the temporary path, endpoint, access key ID, access secret, SSL setting, and bucket name. It also provides options for region and storage class.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n# The s3 uploader needs a temporary location to buffer files to reduce memory usage on\n# small file uploads. If the file size is unknown, the file is written to this location\n# before being uploaded to s3 (then the file is deleted). If you aren't concerned about\n# memory usage, set this to an empty string.\nmatrix_media_repo_datastore_s3_opts_temp_path: \"\"\nmatrix_media_repo_datastore_s3_opts_endpoint: \"sfo2.digitaloceanspaces.com\"\nmatrix_media_repo_datastore_s3_opts_access_key_id: \"\"\nmatrix_media_repo_datastore_s3_opts_access_secret: \"\"\nmatrix_media_repo_datastore_s3_opts_ssl: true\nmatrix_media_repo_datastore_s3_opts_bucket_name: \"your-media-bucket\"\n\n# An optional region for where this S3 endpoint is located. Typically not needed, though\n# some providers will need this (like Scaleway). Uncomment to use.\n# matrix_media_repo_datastore_s3_opts_region: \"sfo2\"\n\n# An optional storage class for tuning how the media is stored at s3.\n# See https://aws.amazon.com/s3/storage-classes/ for details; uncomment to use.\n# matrix_media_repo_datastore_s3_opts_storage_class: \"STANDARD\"\n```\n\n----------------------------------------\n\nTITLE: Adjusting Cactus Comments Client URL in Ansible\nDESCRIPTION: This YAML snippet demonstrates how to configure the `matrix_cactus_comments_client_hostname` and `matrix_cactus_comments_client_path_prefix` variables to host the Cactus Comments client assets at a custom hostname and path.  This is useful if you don't want to use the default `matrix.example.com/cactus-comments` URL.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Change the default hostname and path prefix to host the client assets at a different location\n# These variables are used only if (`matrix_cactus_comments_client_enabled: true`)\nmatrix_cactus_comments_client_hostname: cactus.example.com\nmatrix_cactus_comments_client_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Serving Matrix Files with Existing Base Domain\nDESCRIPTION: Configures the Matrix server to only serve the /.well-known/matrix files for an existing base domain setup, allowing another container to handle other requests.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-base-domain-serving.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# keep `matrix_static_files_container_labels_base_domain_enabled: true`\nmatrix_static_files_container_labels_base_domain_enabled: true\n\n# add an extra: `matrix_static_files_container_labels_base_domain_traefik_path_prefix: /.well-known/matrix`\nmatrix_static_files_container_labels_base_domain_traefik_path_prefix: /.well-known/matrix\n```\n\n----------------------------------------\n\nTITLE: Running Self-Check via Ansible\nDESCRIPTION: This command executes the `setup.yml` playbook with the `self-check` tag. This allows you to check if the services are running and configured correctly.  It targets the hosts defined in the `inventory/hosts` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-and-troubleshooting.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=self-check\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook - Bash\nDESCRIPTION: This snippet shows how to run the Ansible playbook with specific tags to install and start the GroupMe bridge. The `setup-all` tag executes all setup tasks, and the `start` tag starts the necessary services. This command ensures that all dependencies are installed and the bridge is running.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-groupme.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Viewing Matrix Synapse Logs\nDESCRIPTION: This command uses `journalctl` to view the logs for the `matrix-synapse` service. The `-fu` flags ensure that the logs are followed in real-time and filtered to only show entries related to the specified service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-and-troubleshooting.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nsudo journalctl -fu matrix-synapse\n```\n\n----------------------------------------\n\nTITLE: Register a dedicated Matrix user (optional, recommended) - Shell\nDESCRIPTION: This command uses the Ansible playbook to register a new Matrix user for the UVS. It sets the username, password, and admin status using extra variables and the `register-user` tag. Replace PASSWORD_FOR_THE_USER with the actual password.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=uvs password=PASSWORD_FOR_THE_USER admin=yes' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Mounting S3 bucket to a temporary path in Ansible YAML\nDESCRIPTION: This YAML snippet configures a temporary path for mounting the S3 bucket before switching Synapse to use it as its media store.  `matrix_s3_media_store_path` defines the mount point.  This allows for an initial file synchronization without interrupting Synapse.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_s3_media_store_path: /matrix/s3-media-store\n```\n\n----------------------------------------\n\nTITLE: Setting up a Matrix Admin User\nDESCRIPTION: This snippet shows how to define a Matrix admin user by setting the `matrix_admin` variable in the `vars.yml` file. Replace `@alice:{{ matrix_domain }}` with the actual Matrix ID of the admin user.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_admin: \"@alice:{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Datastore Kinds - YAML\nDESCRIPTION: This snippet configures the datastore kinds for matrix-media-repo, specifying which datastore (file or S3) should be used for different types of media. This allows splitting data across different storage backends.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n# Datastores can be split into many areas when handling uploads. Media is still de-duplicated\n# across all datastores (local content which duplicates remote content will re-use the remote\n# content's location). This option is useful if your datastore is becoming very large, or if\n# you want faster storage for a particular kind of media.\n#\n# To disable this datastore, making it readonly, specify `forKinds: []`.\n#\n# The kinds available are:\n#   thumbnails    — Used to store thumbnails of media (local and remote).\n#   remote_media  — Original copies of remote media (servers not configured by this repo).\n#   local_media   — Original uploads for local media.\n#   archives      — Archives of content (GDPR and similar requests).\nmatrix_media_repo_datastore_file_for_kinds: [\"thumbnails\", \"remote_media\", \"local_media\", \"archives\"]\nmatrix_media_repo_datastore_s3_for_kinds: []\n```\n\n----------------------------------------\n\nTITLE: Configure Matrix Corporal Policy Provider - YAML\nDESCRIPTION: This YAML snippet configures the Matrix Corporal policy provider, specifying the type, URI, authorization token, cache path, reload interval, and timeout. It uses an HTTP policy provider.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_corporal_policy_provider_config: |\n  {\n    \"Type\": \"http\",\n    \"Uri\": \"https://intranet.example.com/matrix/policy\",\n    \"AuthorizationBearerToken\": \"SOME_SECRET\",\n    \"CachePath\": \"/var/cache/matrix-corporal/last-policy.json\",\n    \"ReloadIntervalSeconds\": 1800,\n    \"TimeoutMilliseconds\": 300\n  }\n```\n\n----------------------------------------\n\nTITLE: Configuring Draupnir Bot (YAML)\nDESCRIPTION: This YAML snippet configures the Draupnir bot by enabling it, setting the management room ID, generating a password, and enabling native login (if not using access token or experimental rust crypto). Replace `MANAGEMENT_ROOM_ID_HERE` with the actual room ID, and `PASSWORD_FOR_THE_BOT` with a strong password. This should be added to your `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable Draupnir\nmatrix_bot_draupnir_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_draupnir_login: bot.draupnir\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\n# If creating the user on your own and using `matrix_bot_draupnir_config_accessToken` to login you can comment out this line.\nmatrix_bot_draupnir_password: PASSWORD_FOR_THE_BOT\n\n# Comment out if using `matrix_bot_draupnir_config_experimentalRustCrypto: true` or `matrix_bot_draupnir_config_accessToken` to login.\nmatrix_bot_draupnir_login_native: true\n\nmatrix_bot_draupnir_config_managementRoom: \"MANAGEMENT_ROOM_ID_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This snippet shows the command to run the Ansible playbook with specific tags (`setup-all`, `start`). This command will execute only the tasks associated with those tags, which is useful for installing and starting all necessary services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Customizing Etherpad URL in Ansible vars.yml\nDESCRIPTION: This YAML snippet shows how to customize the Etherpad URL by setting the `etherpad_hostname` and `etherpad_path_prefix` variables in `vars.yml`. This allows you to serve Etherpad on a different domain or subpath, such as the Matrix domain with a `/etherpad` prefix.  Adjusting DNS records may be required.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-etherpad.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Etherpad.\netherpad_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /etherpad subpath\netherpad_path_prefix: /etherpad\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook (Shell)\nDESCRIPTION: This snippet shows the command to execute the Ansible playbook with specific tags (`setup-all` and `start`). This command installs, configures, and starts the mx-puppet-steam bridge, ensuring that all necessary dependencies are set up correctly. The command uses the inventory file `inventory/hosts` and the playbook `setup.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-steam.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling baibot - Base Configuration - YAML\nDESCRIPTION: This YAML snippet shows the base configuration required to enable the baibot Matrix bot within the matrix-docker-ansible-deploy project.  It includes settings for enabling the bot, setting the password, encryption recovery passphrase, session encryption key and configuration encryption key.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_baibot_config_user_mxid_localpart: baibot\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\n# If you'd like to change this password subsequently, see the details below.\nmatrix_bot_baibot_config_user_password: 'PASSWORD_FOR_THE_BOT'\n\n# An optional passphrase to use for backing up and recovering the bot's encryption keys.\n# You can create one with a command like `pwgen -s 64 1`.\n#\n# If set to null, the recovery module will not be used and losing your session/database\n# will mean you lose access to old messages in encrypted room.\n# It's highly recommended that you configure this to avoid losing access to encrypted messages.\n#\n# Changing this subsequently will also cause you to lose access to old messages in encrypted rooms.\n# For details about changing this subsequently or resetting, see `defaults/main.yml` in the baibot role.\nmatrix_bot_baibot_config_user_encryption_recovery_passphrase: 'ANY_LONG_AND_SECURE_PASSPHRASE_STRING_HERE'\n\n# An optional secret for encrypting the bot's session data (see `matrix_bot_baibot_data_path`).\n# This must be 32-bytes (64 characters when HEX-encoded).\n# Generate it with: `openssl rand -hex 32`\n# Set to null or empty to avoid using encryption.\n# Changing this subsequently requires that you also throw away all data (see `matrix_bot_baibot_data_path`)\nmatrix_bot_baibot_config_persistence_session_encryption_key: 'A_HEX_STRING_OF_64_CHARACTERS_HERE'\n\n# An optional secret for encrypting bot configuration stored in Matrix's account data.\n# This must be 32-bytes (64 characters when HEX-encoded).\n# Generate it with: `openssl rand -hex 32`\n# Set to null or empty to avoid using encryption.\n# Changing this subsequently will make you lose your configuration.\nmatrix_bot_baibot_config_persistence_config_encryption_key: 'A_HEX_STRING_OF_64_CHARACTERS_HERE'\n```\n\n----------------------------------------\n\nTITLE: Updating Password in Postgres Database\nDESCRIPTION: This SQL query updates the `password_hash` in the `users` table of the Postgres database.  It requires replacing `<password-hash>` with the hash generated by the `hash_password` command, and ensuring that the `name` matches the full user ID (e.g., `@alice:example.com`).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/updating-users-passwords.md#_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nUPDATE users SET password_hash = '<password-hash>' WHERE name = '@alice:example.com';\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Cactus Comments\nDESCRIPTION: This shell command executes the Ansible playbook to install and configure Cactus Comments. It uses specific tags to ensure that all necessary setup and start tasks are performed. This is preferred to using `install-all` initially to ensure any failures indicate a clear problem.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Twilio SMS Verification with ma1sd (YAML)\nDESCRIPTION: This snippet demonstrates how to integrate ma1sd with Twilio for SMS verification. It involves setting the `account_sid`, `auth_token`, and `number` parameters within the `matrix_ma1sd_configuration_extension_yaml` variable.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_ma1sd_configuration_extension_yaml: |\n  threepid:\n    medium:\n      msisdn:\n        connectors:\n          twilio:\n            account_sid: '<secret-SID>'\n            auth_token: '<secret-token>'\n            number: '+<msisdn-number>'\n```\n\n----------------------------------------\n\nTITLE: Enabling synapse-auto-compressor in vars.yml (YAML)\nDESCRIPTION: This code snippet shows how to enable the synapse-auto-compressor feature by setting the `matrix_synapse_auto_compressor_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file.  This activates the automatic compression of Synapse's `state_groups` database table.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-compressor.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_auto_compressor_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Mjolnir Synapse Antispam Module\nDESCRIPTION: This configuration in `vars.yml` enables the Mjolnir antispam module for Synapse. It includes options to block invites, messages, and usernames, as well as specifying ban lists. Adjust the boolean values and ban lists according to your needs.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_spam_checker_mjolnir_antispam_enabled: true\nmatrix_synapse_ext_spam_checker_mjolnir_antispam_config_block_invites: true\nmatrix_synapse_ext_spam_checker_mjolnir_antispam_config_block_messages: false\nmatrix_synapse_ext_spam_checker_mjolnir_antispam_config_block_usernames: false\nmatrix_synapse_ext_spam_checker_mjolnir_antispam_config_ban_lists: []\n```\n\n----------------------------------------\n\nTITLE: Customizing Maubot Container Image (YAML)\nDESCRIPTION: This example configuration shows how to enable customizations for the maubot container image within the Ansible configuration. It modifies the Dockerfile to install additional dependencies like ffmpeg. The `matrix_bot_maubot_container_image_customizations_dockerfile_body_custom` variable allows injecting custom Dockerfile instructions.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-maubot.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_maubot_container_image_customizations_enabled: true\n\n# Adjust the Dockerfile and install ffmpeg.\n#\nmatrix_bot_maubot_container_image_customizations_dockerfile_body_custom: |\n  RUN apk add --no-cache ffmpeg\n```\n\n----------------------------------------\n\nTITLE: Creating a registration token with Ansible (Shell)\nDESCRIPTION: This command uses `ansible-playbook` to generate a new user registration token.  The `--tags=generate-matrix-registration-token` option specifies the task to run.  The `one_time` and `ex_date` variables control the token's usage and expiration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-registration.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml \\\n--tags=generate-matrix-registration-token \\\n--extra-vars=\"one_time=yes ex_date=2021-12-31\"\n```\n\n----------------------------------------\n\nTITLE: Pin Synapse Version - Ansible\nDESCRIPTION: This snippet sets the Synapse version to v1.98.0 in the Ansible configuration.  This ensures that the deployed Synapse instance will be at this specific version. It requires Ansible to be installed and configured to manage the target Matrix deployment.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_version: v1.98.0\n```\n\n----------------------------------------\n\nTITLE: Enable Federation for UVS - YAML\nDESCRIPTION: This YAML configuration enables federation support for the Matrix User Verification Service (UVS).  It instructs UVS to verify OpenID tokens against any domain given in a request, discovering homeservers via `.well-known/matrix/server`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_user_verification_service_uvs_pin_openid_verify_server_name: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This command executes the Ansible playbook 'setup.yml' using the inventory file 'inventory/hosts'. The '--tags' option specifies a comma-separated list of tags to include in the playbook execution, limiting the run to only tasks associated with 'setup-coturn', 'setup-synapse', and 'start'. This is useful for rebuilding specific components of the Matrix server, such as coturn and Synapse, after configuration changes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_99\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-coturn,setup-synapse,start\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible playbook to install Sygnal (Bash)\nDESCRIPTION: This shell command shows how to execute the Ansible playbook with specific tags to set up and start the Sygnal component. The command utilizes `ansible-playbook` with the `setup-all` and `start` tags, triggering the installation and startup processes defined in the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sygnal.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Example: Output from mas-cli doctor\nDESCRIPTION: This is an example of the output you should see after running the `mas-cli doctor` command.  It shows a series of checks confirming the proper configuration and reachability of MAS and Synapse components, including the matrix client well-known, homeserver reachability, admin API access, and legacy login API handling.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_9\n\nLANGUAGE: text\nCODE:\n```\n💡 Running diagnostics, make sure that both MAS and Synapse are running, and that MAS is using the same configuration files as this tool.\n✅ Matrix client well-known at \"https://example.com/.well-known/matrix/client\" is valid\n✅ Homeserver is reachable at \"http://matrix-synapse:8008/_matrix/client/versions\"\n✅ Homeserver at \"http://matrix-synapse:8008/_matrix/client/v3/account/whoami\" is reachable, and it correctly rejected an invalid token.\n✅ The Synapse admin API is reachable at \"http://matrix-synapse:8008/_synapse/admin/v1/server_version\".\n✅ The Synapse admin API is reachable with authentication at \"http://matrix-synapse:8008/_synapse/admin/v1/background_updates/status\".\n✅ The legacy login API at \"https://matrix.example.com/_matrix/client/v3/login\" is reachable and is handled by MAS.\n```\n\n----------------------------------------\n\nTITLE: Enabling Matrix RTC stack in Ansible\nDESCRIPTION: This code snippet shows how to enable the Matrix RTC stack by setting the `matrix_rtc_enabled` variable to `true` in the `vars.yml` file. This configuration will trigger the installation of the necessary supporting services for Element Call.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-rtc.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable the Matrix RTC stack.\n# This provides all supporting services for Element Call, without the Element Call frontend.\nmatrix_rtc_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags for Mautrix Discord\nDESCRIPTION: This shell command executes the Ansible playbook with specific tags to install and start the Mautrix Discord bridge. It ensures that all necessary setup tasks are performed and the bridge is started correctly. This requires Ansible to be installed and configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-discord.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configure Matrix Corporal User ID - YAML\nDESCRIPTION: This YAML snippet configures the Matrix Corporal user ID's local part, ensuring that this Matrix user is created on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# If you need to change matrix-corporal's user ID from the default (matrix-corporal).\n# In any case, you need to make sure this Matrix user is created on your server.\nmatrix_corporal_corporal_user_id_local_part: \"matrix-corporal\"\n```\n\n----------------------------------------\n\nTITLE: Running Adminer Container (Bash)\nDESCRIPTION: This command runs a Docker container for Adminer, a database management tool, and connects it to the 'matrix-postgres' container within the 'matrix' network.  It publishes port 1799 on the host to port 8080 on the container, allowing access to the Adminer GUI. Database credentials will be needed to login.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm --publish 1799:8080 --link matrix-postgres --net matrix adminer\n```\n\n----------------------------------------\n\nTITLE: Traefik Docker Compose Configuration (YAML)\nDESCRIPTION: This `docker-compose.yml` file provides an example of how to launch Traefik using Docker Compose. It configures Traefik to use Docker as a provider, exposes necessary ports (443 and 8448), configures a certificate resolver, and mounts volumes for Let's Encrypt certificates and the Docker socket. The Traefik version used in this example is 3.2.0.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.3\"\n\nservices:\n\n  traefik:\n    image: \"docker.io/traefik:v3.2.0\"\n    restart: always\n    container_name: \"traefik\"\n    networks:\n      - traefik\n    command:\n      - \"--api.insecure=true\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.network=traefik\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--entrypoints.web-secure.address=:443\"\n      - \"--entrypoints.matrix-federation.address=:8448\"\n      - \"--entrypoints.matrix-internal-matrix-client-api.address=:8008\"\n      - \"--certificatesresolvers.default.acme.tlschallenge=true\"\n      - \"--certificatesresolvers.default.acme.email=YOUR EMAIL\"\n      - \"--certificatesresolvers.default.acme.storage=/letsencrypt/acme.json\"\n    ports:\n      - \"443:443\"\n      - \"8448:8448\"\n    volumes:\n      - \"./letsencrypt:/letsencrypt\"\n      - \"/var/run/docker.sock:/var/run/docker.sock:ro\"\n\nnetworks:\n  traefik:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Cactus Comments Components in Ansible\nDESCRIPTION: This YAML snippet configures the Ansible playbook to enable the Cactus Comments backend (appservice) and the client assets serving.  It also shows optional configurations for setting a custom username and allowing guest access, which require enabling guest registration on the homeserver (Synapse or Dendrite).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# This enables the backend (appservice)\nmatrix_cactus_comments_enabled: true\n\n# This enables client assets static files serving on `https://matrix.example.com/cactus-comments`.\n# When the backend (appservice) is enabled, this is also enabled automatically, but we explicitly enable it here.\nmatrix_cactus_comments_client_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_cactus_comments_user_id: \"bot.cactusbot\"\n\n# To allow guest comments without users needing to log in, you need to have guest registration enabled.\n# To do this you need to uncomment one of the following lines (depending if you are using Synapse or Dendrite as a homeserver)\n# If you don't know which one you use: The default is Synapse ;)\n# matrix_synapse_allow_guest_access: true\n# matrix_dendrite_allow_guest_access: true\n```\n\n----------------------------------------\n\nTITLE: Running synapse-auto-invite-accept on a worker\nDESCRIPTION: This snippet configures the synapse-auto-invite-accept module to run on a specific worker in a workerized Synapse deployment.  This helps to reduce the load on the main Synapse process.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-accept-invite.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_ext_synapse_auto_accept_invite_worker_to_run_on: 'matrix-synapse-worker-generic-0'\n```\n\n----------------------------------------\n\nTITLE: Enable Matrix Hookshot Metrics\nDESCRIPTION: This snippet enables metrics collection for Matrix Hookshot, making them available on the container network. This is the first step towards monitoring Hookshot with Prometheus.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_hookshot_metrics_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Shell: Verify MAS installation using Ansible tag\nDESCRIPTION: This command verifies the MAS installation by running the `mas-cli doctor` command through the Ansible playbook's `matrix-authentication-service-mas-cli-doctor` tag.  It checks the connectivity and configuration of MAS and Synapse.  It relies on `mas-cli` tool being present in the container.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags matrix-authentication-service-mas-cli-doctor\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Draupnir Setup\nDESCRIPTION: This snippet shows the Ansible command to run the playbook for setting up the Draupnir bot, creating Matrix users, and starting the bot. The `setup-all` tag is crucial for initial setup or when major changes are made, ensuring all components are correctly installed and configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Mjolnir without Pantalaimon (Access Token)\nDESCRIPTION: This snippet shows the configuration needed in `vars.yml` when NOT using Pantalaimon for Mjolnir. The `matrix_bot_mjolnir_access_token` variable is set to the access token obtained for the bot account.  Ensure `ACCESS_TOKEN_HERE` is replaced with the actual token.  This is required when Pantalaimon is not used.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_mjolnir_access_token: \"ACCESS_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Registering Users Manually for Synapse (Shell)\nDESCRIPTION: Registers a user manually for Synapse homeserver via the command line after SSH-ing to the server. Requires that all services have been started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n/matrix/synapse/bin/register-user USERNAME_HERE PASSWORD_HERE <admin access: 0 or 1>\n\n# Example: `/matrix/synapse/bin/register-user alice secret-password 1`\n```\n\n----------------------------------------\n\nTITLE: Updating User Password via Ansible\nDESCRIPTION: This snippet shows how to update a user's password using the Ansible playbook. It requires specifying the username and password as extra variables. Ensure to replace `USERNAME_HERE` and `PASSWORD_HERE` with the correct values. The username should be a plain username (e.g., `alice`), not a full ID (e.g., `@alice:example.com`).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/updating-users-passwords.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=USERNAME_HERE password=PASSWORD_HERE' --tags=update-user-password\n```\n\n----------------------------------------\n\nTITLE: Disabling SSL Termination in Traefik (YAML)\nDESCRIPTION: This snippet disables SSL termination for testing or other purposes, exposing services via `http://` instead of `https://`.  It sets the `traefik_config_entrypoint_web_secure_enabled` variable to `false` in the `vars.yml` file. This configuration will prevent Traefik from handling SSL certificates.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ssl-certificates.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\ntraefik_config_entrypoint_web_secure_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This shell command executes the ansible playbook to install and start the configured components using the `setup-all` and `start` tags. It utilizes the inventory file to target the correct hosts. The setup-all tag handles initial setup, and start tag initiates the services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-simple-antispam.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Disabling /.well-known file generation in Matrix playbook\nDESCRIPTION: This configuration disables the generation and serving of the `/.well-known/matrix/server` file, which is necessary when using DNS SRV records for server delegation. This prevents conflicts between the two methods.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-server-delegation.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_static_files_file_matrix_server_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook - Shell\nDESCRIPTION: This shell command executes the Ansible playbook with specific tags to set up and start the mautrix-wsproxy service.  It targets the setup-all and start tags, which install and start all services and it's recommended to use instead of `install-all` to make sure something is clearly broken if the command fails.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-wsproxy.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Ansible Command to Start Services\nDESCRIPTION: This Ansible command starts services managed by the Ansible playbook. It is executed after database migrations and other setup tasks. The `-i inventory/hosts` specifies the inventory file and `--tags=start` indicates that only tasks tagged with `start` should be executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_53\n\nLANGUAGE: ansible\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=start\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook with Tags - Shell\nDESCRIPTION: This shell command runs the Ansible playbook with specific tags to set up Matrix Corporal.  The tags include setup-all and start.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_9\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Registering a new user using Ansible\nDESCRIPTION: This command uses Ansible to register a new user with a specified username, password, and admin status. It utilizes the `setup.yml` playbook and the `register-user` tag.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=bot.alertmanager.receiver password=PASSWORD_FOR_THE_BOT admin=no' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Configuring Bridge Admin Permissions\nDESCRIPTION: This snippet demonstrates how to configure admin permissions for a specific Mautrix bridge using the `matrix_mautrix_SERVICENAME_configuration_extension_yaml` variable. This allows you to specify which users have admin access to the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_configuration_extension_yaml: |\n  bridge:\n    permissions:\n      '@alice:{{ matrix_domain }}': admin\n```\n\n----------------------------------------\n\nTITLE: Configuring Initial Baibot Handlers in vars.yml\nDESCRIPTION: This YAML snippet demonstrates how to configure initial default handlers for the Baibot Matrix bot's global configuration using Ansible variables in the `vars.yml` file. It sets the `catch_all` handler to `static/openai` and explicitly sets other handlers to `null`.  Changing these values after the initial configuration will have no effect, as the global configuration is subsequently managed via bot commands.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n# Note: these are initial defaults for the bot's global configuration.\n# As such, changing any of these values subsequently has no effect on the bot's behavior.\n# Once initially configured, the global configuration is managed via bot commands, not via Ansible.\n\nmatrix_bot_baibot_config_initial_global_config_handler_catch_all: static/openai\n\n# In this example, there's no need to define any of these below.\n# Configuring the catch-all purpose handler is enough.\nmatrix_bot_baibot_config_initial_global_config_handler_text_generation: null\nmatrix_bot_baibot_config_initial_global_config_handler_text_to_speech: null\nmatrix_bot_baibot_config_initial_global_config_handler_speech_to_text: null\nmatrix_bot_baibot_config_initial_global_config_handler_image_generation: null\n```\n\n----------------------------------------\n\nTITLE: Retrieving MAS Logs with journalctl\nDESCRIPTION: This command retrieves logs for the Matrix Authentication Service (MAS) from systemd-journald. It is used for troubleshooting and monitoring the service by providing real-time log updates, which are useful to identify the cause of errors or unexpected behavior.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -fu matrix-authentication-service\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook to install Synapse Admin - Shell\nDESCRIPTION: This code snippet demonstrates the command to run the Ansible playbook to install Synapse Admin, using specific tags to ensure all necessary setup tasks are executed. It uses the `setup-all` and `start` tags for comprehensive installation and service startup. The command requires Ansible to be installed and configured correctly with access to the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-admin.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Install Matrix server (for data import, no start)\nDESCRIPTION: Installs a Matrix server for importing existing data by running the Ansible playbook with the `install-all` tag. This installs the server but does not start the services, allowing for data import without interference.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-all\n```\n\n----------------------------------------\n\nTITLE: Resetting Hookshot Encryption with Ansible SH\nDESCRIPTION: This command executes the Ansible playbook to reset the matrix-hookshot encryption store.  It is useful if the crypto store becomes corrupted. The command applies the `reset-hookshot-encryption` tag.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=reset-hookshot-encryption\n```\n\n----------------------------------------\n\nTITLE: Linking Slack Channel to Matrix Room without File Bridging\nDESCRIPTION: This command is used in the administration control room to link a Slack channel to a Matrix room, without file bridging. It requires the channel ID, room ID, and Slack bot token.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nlink --channel_id CHANNELID --room !qporfwt:example.com --slack_bot_token xoxb-xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Syncing media files using rsync in Shell\nDESCRIPTION: This shell command synchronizes media files from the local Synapse media store to the mounted S3 bucket using rsync. The `--size-only` option compares files based on size, `--ignore-existing` skips files that already exist in the destination, `-avr` enables archive mode, verbosity, and recursion.  It is run as the `matrix` user.  This assumes rsync is installed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nsudo -u matrix -- rsync --size-only --ignore-existing -avr /matrix/synapse/storage/media-store/. /matrix/s3-media-store/.\n```\n\n----------------------------------------\n\nTITLE: Running Postgres Import Command (Shell)\nDESCRIPTION: This command imports a Postgres database dump file into the Synapse database. It uses `just run-tags` to execute the `import-postgres` task with specific extra variables, including the path to the dump file on the server and the target database name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-postgres.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags import-postgres \\\n--extra-vars=server_path_postgres_dump=SERVER_PATH_TO_POSTGRES_DUMP_FILE \\\n--extra-vars=postgres_default_import_database=matrix\n```\n\n----------------------------------------\n\nTITLE: Changing Default Theme in SchildiChat Web\nDESCRIPTION: This YAML snippet changes the default theme of SchildiChat Web from 'light' to 'dark'. The `matrix_client_schildichat_default_theme` variable controls the default theme. You can switch between 'light' and 'dark'.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Controls the default theme\nmatrix_client_schildichat_default_theme: 'dark'\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Twitter Bridge in Ansible\nDESCRIPTION: This snippet shows how to enable the mautrix-twitter bridge by setting the `matrix_mautrix_twitter_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This is the basic requirement to install the bridge. No dependencies are required as this is a configuration variable.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-twitter.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_twitter_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Obtaining Access Token via Curl\nDESCRIPTION: This snippet demonstrates how to obtain a Matrix access token for a user using curl and the Matrix Client-Server API. It requires specifying the username, password, and Matrix server URL.  The `device_id` is optional, but recommended for identifying the session later. It sends a POST request to the `/login` endpoint of the Matrix API.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/obtaining-access-tokens.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -XPOST -d '{\n    \"identifier\": { \"type\": \"m.id.user\", \"user\": \"alice\" },\n    \"password\": \"PASSWORD\",\n    \"type\": \"m.login.password\",\n    \"device_id\": \"YOURDEVICEID\"\n}' 'https://matrix.example.com/_matrix/client/r0/login'\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook\nDESCRIPTION: This snippet shows the command to run the Ansible playbook with specific tags to set up and start the Mautrix bridges. It uses the `setup-all` and `start` tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Force-enable IPv6 with Docker Daemon Options\nDESCRIPTION: This configuration is required for older Docker versions (< 27.0.1) to properly enable IPv6 support. It involves setting `devture_systemd_docker_base_ipv6_daemon_options_changing_enabled` to `true` to force changes to the Docker daemon's options and also enabling IPv6 for container networks using `devture_systemd_docker_base_ipv6_enabled`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_2\n\nLANGUAGE: yml\nCODE:\n```\n# Force-enable IPv6 by changing the Docker daemon's options.\n# This is necessary for Docker < 27.0.1, but not for newer versions.\ndevture_systemd_docker_base_ipv6_daemon_options_changing_enabled: true\n\n# Request that individual container networks are created with IPv6 enabled.\ndevture_systemd_docker_base_ipv6_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (Bash)\nDESCRIPTION: This command executes the Ansible playbook (`setup.yml`) with specific tags (`setup-all`, `start`) to install and start the WeChat bridge. It requires Ansible to be installed and configured with access to the inventory file. The `-i` flag specifies the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-wechat.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Cleaning matrix-registration-bot Cache with just command\nDESCRIPTION: This command shows how to clean the matrix-registration-bot's cache using the `just` command. This is useful after changing the bot's username or login method. It uses the `bot-matrix-registration-bot-clean-cache` tag.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-registration-bot.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags bot-matrix-registration-bot-clean-cache\n```\n\n----------------------------------------\n\nTITLE: Linux: Update inventory/hosts\nDESCRIPTION: This command updates the `inventory/hosts` file by replacing `matrix-servers` with `matrix_servers` using the `sed` command in Linux. This is necessary for compatibility with Ansible 2.8.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_87\n\nLANGUAGE: bash\nCODE:\n```\nsed -i 's/matrix-servers/matrix_servers/g' inventory/hosts\n```\n\n----------------------------------------\n\nTITLE: Update Ansible roles using `just`\nDESCRIPTION: Updates the Ansible roles defined in the `requirements.yml` file using the `just` command. This ensures the playbook uses the latest versions of the required roles.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\njust update\n```\n\n----------------------------------------\n\nTITLE: Adjusting matrix-registration URL in vars.yml (YAML)\nDESCRIPTION: This configuration snippet demonstrates how to adjust the hostname and path prefix for matrix-registration using the `matrix_registration_hostname` and `matrix_registration_path_prefix` variables in the `vars.yml` file.  This allows customizing the URL where the service is accessible.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-registration.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_registration_hostname: registration.example.com\nmatrix_registration_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Bluesky Bridge in Ansible vars.yml\nDESCRIPTION: This code snippet shows how to enable the Mautrix Bluesky bridge by setting the `matrix_mautrix_bluesky_enabled` variable to `true` in the `inventory/host_vars/matrix.example.com/vars.yml` file. This enables the bridge during the playbook execution.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bluesky.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_bluesky_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Upgrading PostgreSQL using Ansible\nDESCRIPTION: This command upgrades an existing PostgreSQL setup using the Ansible playbook. It backs up the old data directory and performs a dump/restore to migrate the data to the new version. It leverages the `upgrade-postgres` tag within the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags upgrade-postgres\n```\n\n----------------------------------------\n\nTITLE: Configure Matrix Domain and Server FQDN in YAML\nDESCRIPTION: This YAML snippet configures the Matrix domain, server FQDN, and Element Web access point. It defines where Matrix services are hosted and how users access the Element Web interface. The `matrix_server_fqn_etherpad` configures the etherpad if you have enabled it.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# This is what your identifiers are like (e.g. `@bob:matrix.example.com`).\nmatrix_domain: \"matrix.example.com\"\n\n# This is where Matrix services\nmatrix_server_fqn_matrix: \"matrix.example.com\"\n\n# This is where you access the Element Web from (if enabled via `matrix_client_element_enabled: true`; enabled by default).\n# This and the Matrix FQN (see above) are expected to be on the same server.\n#\n# Feel free to use `element.matrix.example.com`, if you'd prefer that.\nmatrix_server_fqn_element: \"element.example.com\"\n\n# This is where you access Etherpad (if enabled via `etherpad_enabled: true`; NOT enabled by default).\n#\n# Feel free to use `etherpad.matrix.example.com`, if you'd prefer that.\nmatrix_server_fqn_etherpad: \"etherpad.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Element Call Setup\nDESCRIPTION: This command executes the Ansible playbook to install and configure Element Call, including setting up all necessary components and starting the services.  The `--tags` option specifies the playbook tags to execute.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-element-call.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Checking IPv6 Connectivity with curl (Shell)\nDESCRIPTION: This snippet demonstrates how to use `curl` to check if a server has IPv6 connectivity. It first attempts to retrieve the server's IP address. If an IPv4 address is returned, it forces `curl` to use IPv6 to confirm IPv6 connectivity.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\ncurl https://icanhazip.com\n```\n\nLANGUAGE: Shell\nCODE:\n```\ncurl -6 https://icanhazip.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik in Matrix Docker Ansible Deploy\nDESCRIPTION: This snippet demonstrates how to switch to Traefik as the reverse proxy in the Matrix Docker Ansible Deploy setup. It involves adding a specific variable to your configuration file, allowing the system to use Traefik instead of the default nginx proxy.  It's crucial to retain the original nginx variables initially.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_reverse_proxy_type: playbook-managed-traefik\n```\n\n----------------------------------------\n\nTITLE: IAM Security Policy for Amazon S3 Bucket Access in JSON\nDESCRIPTION: This JSON snippet defines an IAM security policy granting full write access to an Amazon S3 bucket.  It should be attached to an IAM user, not configured as a bucket policy. The policy allows all S3 actions on the specified bucket and its contents and needs to be customized with the actual bucket name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3.md#_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Sid\": \"Stmt1400105486000\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:*\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:s3:::your-bucket-name\",\n\t\t\t\t\"arn:aws:s3:::your-bucket-name/*\"\n\t\t\t]\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Usage Exporter in vars.yml (YAML)\nDESCRIPTION: This YAML snippet shows how to enable the synapse-usage-exporter by setting the `matrix_synapse_usage_exporter_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. Optionally, you can configure whether the endpoint is publicly exposed for collecting statistics from other homeservers.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-usage-exporter.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_usage_exporter_enabled: true\n\n# (Optional) Expose endpoint if you want to collect statistics from outside (from other homeservers).\n# If enabled, synapse-usage-exporter will be exposed publicly at `matrix.example.com/report-usage-stats/push`.\n# When collecting usage statistics for Synapse running on the same host, you don't need to enable this.\n# You can adjust the hostname and path via `matrix_synapse_usage_exporter_hostname` and `matrix_synapse_usage_exporter_path_prefix`.\n# matrix_synapse_usage_exporter_proxying_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Increasing Logging Verbosity in vars.yml\nDESCRIPTION: This YAML snippet increases the logging verbosity of the Discord bridge to 'info'.  Adapt to your needs and re-run the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_discord_configuration_extension_yaml: |\n  logging:\n    # What level should the logger output to the console at.\n    console: \"info\" # Valid values: silent, error, warn, http, info, verbose, silly\n```\n\n----------------------------------------\n\nTITLE: Removing Docker Networks (Shell)\nDESCRIPTION: This snippet shows how to remove all Docker networks, which is required when changing the `devture_systemd_docker_base_ipv6_enabled` setting. It uses `docker network ls` to list all network IDs and then `docker network rm` to remove them.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\ndocker network rm $(docker network ls -q)\n```\n\n----------------------------------------\n\nTITLE: Adjusting Grafana Hostname in Ansible vars.yml\nDESCRIPTION: This snippet shows how to adjust the Grafana hostname by setting the `grafana_hostname` variable in `vars.yml`. This allows serving Grafana on a custom subdomain.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname\ngrafana_hostname: grafana.example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Level for Go Skype Bridge\nDESCRIPTION: This YAML snippet demonstrates how to configure the logging level for the go-skype-bridge. By setting the `matrix_go_skype_bridge_log_level` variable in the `vars.yml` file, users can control the verbosity of the bridge's logs. Valid values include `fatal`, `error`, `warn`, `info`, and `debug`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-go-skype-bridge.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug\nmatrix_go_skype_bridge_log_level: 'info'\n```\n\n----------------------------------------\n\nTITLE: Enable Matrix Corporal - YAML\nDESCRIPTION: This YAML snippet enables Matrix Corporal within the Ansible configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_corporal_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling MX Puppet Discord - YAML\nDESCRIPTION: This configuration enables the Discord bridge by setting the `matrix_mx_puppet_discord_enabled` variable to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-discord.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_discord_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Disabling authenticated media in Synapse (YAML)\nDESCRIPTION: This configuration snippet disables authenticated media for the Synapse homeserver. This is useful for users experiencing issues with older or unmaintained bridges and software that do not support authenticated media. Setting this variable to `false` reverts to the previous behavior.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_enable_authenticated_media: false\n```\n\n----------------------------------------\n\nTITLE: Enabling matrix.org Forwarding in ma1sd (YAML)\nDESCRIPTION: This snippet demonstrates how to enable forwarding of lookups to the central matrix.org Identity Server using the `matrix_ma1sd_matrixorg_forwarding_enabled` variable. Enabling this feature can improve discoverability at the cost of potentially leaking contact information to matrix.org.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_ma1sd_matrixorg_forwarding_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Changing Table Ownership with sed (Shell)\nDESCRIPTION: This command uses `sed` to replace the table owner in a Postgres dump file. It performs an in-place replacement of the old username with the new username, ensuring that table ownership is correctly set after the import. The `-i` option modifies the file directly, and `/g` ensures all occurrences are replaced.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-postgres.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n$ sed -i \"s/OWNER TO synapse_user;/OWNER TO synapse;/g\" homeserver.sql\n```\n\n----------------------------------------\n\nTITLE: SQL Query for Synapse Database Repair\nDESCRIPTION: This SQL query is used to remove duplicate entries in the `state_group_edges` table in the Synapse database. It is necessary when upgrading to Synapse v1.60 if the database is corrupted, which could cause the upgrade to fail. The query identifies and deletes duplicate rows based on `state_group` and `prev_state_group` columns, keeping only the row with the minimum `ctid`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_50\n\nLANGUAGE: sql\nCODE:\n```\nBEGIN;\nDELETE FROM state_group_edges WHERE (ctid, state_group, prev_state_group) IN (\n  SELECT row_id, state_group, prev_state_group\n  FROM (\n    SELECT\n      ctid AS row_id,\n      MIN(ctid) OVER (PARTITION BY state_group, prev_state_group) AS min_row_id,\n      state_group,\n      prev_state_group\n    FROM state_group_edges\n  ) AS t1\n  WHERE row_id <> min_row_id\n);\nCOMMIT;\n```\n\n----------------------------------------\n\nTITLE: Setting matrix-alertmanager-receiver logging verbosity with Ansible\nDESCRIPTION: This YAML configuration snippet sets the logging level for the matrix-alertmanager-receiver container process.  Valid values include `error`, `warn`, `info`, and `debug`. Setting to `debug` increases the logging verbosity for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: error, warn, info, debug\nmatrix_alertmanager_receiver_container_process_argument_log_level: debug\n```\n\n----------------------------------------\n\nTITLE: Update Ansible roles using `git pull` and `just roles`\nDESCRIPTION: Updates the playbook directory and Ansible roles by first pulling the latest changes from the Git repository and then using the `just roles` command to install or update the roles.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ngit pull\n```\n\nLANGUAGE: Shell\nCODE:\n```\njust roles\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook to install and configure Jitsi. It uses the `setup.yml` playbook and applies the `setup-all` and `start` tags. This command ensures that all necessary components are set up and started. It's recommended to use this command to ensure all dependencies are correctly installed and configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-jitsi.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Meta Messenger Bridge in vars.yml\nDESCRIPTION: This code snippet shows how to enable the Mautrix Meta Messenger bridge by setting the `matrix_mautrix_meta_messenger_enabled` variable to `true` in the `inventory/host_vars/matrix.example.com/vars.yml` file. This is a prerequisite for installing and configuring the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-messenger.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_meta_messenger_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Override default ntfy hostname - Ansible YAML\nDESCRIPTION: This code snippet shows how to override the default ntfy hostname by setting the `ntfy_hostname` variable in the `vars.yml` file. This allows you to make the ntfy service available at a different hostname than the default one (ntfy.example.com). After changing the hostname, you need to update your DNS records to point the new domain to your Matrix server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ntfy.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname\nntfy_hostname: push.example.com\n```\n\n----------------------------------------\n\nTITLE: Enabling rageshake in vars.yml (YAML)\nDESCRIPTION: This code snippet shows how to enable the rageshake service by setting the `matrix_rageshake_enabled` variable to `true` in the `vars.yml` file. This is the basic requirement for enabling rageshake deployment.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rageshake.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_rageshake_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enable serving the base domain\nDESCRIPTION: Enables serving the base domain from the integrated web server by setting the `matrix_static_files_container_labels_base_domain_enabled` variable to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_static_files_container_labels_base_domain_enabled: true\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL max_connections Configuration Update\nDESCRIPTION: This snippet describes the automated tuning of PostgreSQL parameters, including adjusting `max_connections`.  For setups with Synapse workers enabled, the playbook automatically increases the `postgres_max_connections` value from `200` to `500`. A new variable `postgres_max_connections` is introduced for controlling this parameter.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_26\n\nLANGUAGE: YAML\nCODE:\n```\npostgres_max_connections: 500\n```\n\n----------------------------------------\n\nTITLE: Configure Static File Policy Provider - YAML\nDESCRIPTION: This YAML snippet configures the Matrix Corporal policy provider to use a static file.  It specifies the type as `static_file` and sets the path to the policy file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_corporal_policy_provider_config: |\n  {\n    \"Type\": \"static_file\",\n    \"Path\": \"/etc/matrix-corporal/policy.json\"\n  }\n```\n\n----------------------------------------\n\nTITLE: Enabling TLS for Federation in Synapse\nDESCRIPTION: This configuration enables TLS for Federation traffic in Synapse, specifying the paths to the certificate and private key files.  This ensures that Federation traffic is encrypted and secure. Make sure that the paths specified correspond to the location the certificates are mounted to.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-server-delegation.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_tls_federation_listener_enabled: true\nmatrix_synapse_tls_certificate_path: /some/path/inside/the/container/certificate.crt\nmatrix_synapse_tls_private_key_path: /some/path/inside/the/container/private.key\n```\n\n----------------------------------------\n\nTITLE: Enable Matrix Corporal HTTP API - YAML\nDESCRIPTION: This YAML snippet enables the Matrix Corporal HTTP API and sets the authentication token.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# If you also want to enable Matrix Corporal's HTTP API…\nmatrix_corporal_http_api_enabled: true\nmatrix_corporal_http_api_auth_token: \"AUTH_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Level for Mautrix Twitter Bridge\nDESCRIPTION: This snippet shows how to configure the logging level for the mautrix-twitter bridge.  You need to add this to your `vars.yml` file and re-run the playbook. Possible values are `fatal`, `error`, `warn`, `info`, `debug`, and `trace`. Changing this variable affects the verbosity of logs produced by the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-twitter.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_twitter_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook with Just - Shell\nDESCRIPTION: This shell command utilizes the `just` program to execute Ansible playbook tasks using specific tags for setting up auxiliary files, corporal, and starting the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\njust run-tags setup-aux-files,setup-corporal,start\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Level for Mautrix Google Messages Bridge\nDESCRIPTION: This code snippet shows how to adjust the logging verbosity for the Mautrix Google Messages bridge. It sets the `matrix_mautrix_gmessages_logging_level` variable to `debug` in the `vars.yml` file. Valid values include `fatal`, `error`, `warn`, `info`, `debug`, and `trace`. Changing this requires re-running the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-gmessages.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_gmessages_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix wsproxy - YAML\nDESCRIPTION: This YAML configuration snippet enables the mautrix-wsproxy bridge and defines the necessary tokens for mautrix-androidsms and mautrix-imessage. The tokens must match the configuration on the Android or Mac device running the respective bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-wsproxy.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_wsproxy_enabled: true\n\nmatrix_mautrix_androidsms_appservice_token: 'secret token from bridge'\nmatrix_mautrix_androidsms_homeserver_token: 'secret token from bridge'\nmatrix_mautrix_imessage_appservice_token: 'secret token from bridge'\nmatrix_mautrix_imessage_homeserver_token: 'secret token from bridge'\nmatrix_mautrix_wsproxy_syncproxy_shared_secret: 'secret token from bridge'\n```\n\n----------------------------------------\n\nTITLE: Python Package Installation\nDESCRIPTION: This snippet illustrates how to install the Python package `passlib`. This is a required dependency on the local machine. Depending on the Linux distribution, the package name may vary (e.g., python-passlib, py3-passlib).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/prerequisites.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\napt-get install python3-passlib\n```\n\n----------------------------------------\n\nTITLE: Configure Synapse Log Levels\nDESCRIPTION: This code snippet shows how to configure Synapse log levels using Ansible variables.  This allows users to control the verbosity of Synapse logging for different components.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_103\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_log_level: \"INFO\"\nmatrix_synapse_storage_sql_log_level: \"INFO\"\nmatrix_synapse_root_log_level: \"INFO\"\n```\n\n----------------------------------------\n\nTITLE: Adjusting Cinny Hostname in Ansible (YAML)\nDESCRIPTION: This YAML snippet allows customization of the Cinny hostname using the `matrix_client_cinny_hostname` variable. This allows the service to be exposed under a different subdomain or domain, requiring corresponding DNS adjustments.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-cinny.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Switch to a different domain (`app.example.com`) than the default one (`cinny.example.com`)\nmatrix_client_cinny_hostname: \"app.{{ matrix_domain }}\"\n\n# Expose under the /cinny subpath\n# matrix_client_cinny_path_prefix: /cinny\n```\n\n----------------------------------------\n\nTITLE: Increase Logging Verbosity\nDESCRIPTION: This snippet increases the logging verbosity of Matrix Hookshot, aiding in troubleshooting. Valid values are: error, warn, info, debug. The default logging level is 'warn'.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n# Valid values: error, warn, info, debug\nmatrix_hookshot_logging_level: debug\n```\n\n----------------------------------------\n\nTITLE: Mounting Certificate Files into Synapse Container\nDESCRIPTION: This configuration snippet shows how to mount certificate files from the host machine into the Synapse container using Docker volume mounts. This allows Synapse to access the necessary certificates for serving Federation traffic over TLS.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-server-delegation.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_extra_arguments:\n  - \"--mount type=bind,src=/some/path/on/the/host,dst=/some/path/inside/the/container,ro\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Coturn Host Networking\nDESCRIPTION: This snippet shows how to configure coturn to use host networking in the Matrix Docker Ansible Deploy setup. This is especially useful for large coturn deployments with a wide range of ports to avoid performance issues related to Docker's port publishing.  However, it requires manual configuration of firewall rules.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_coturn_container_network: host\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Draupnir for All - YAML\nDESCRIPTION: This configuration snippet enables Draupnir for All and sets the admin room. Replace `MANAGEMENT_ROOM_ALIAS_HERE` with the actual alias of the management room. This configuration needs to be added to `inventory/host_vars/matrix.example.com/vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-appservice-draupnir-for-all.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_draupnir_for_all_enabled: true\n\nmatrix_appservice_draupnir_for_all_config_adminRoom: \"MANAGEMENT_ROOM_ALIAS_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Configuring User-Managed Traefik in vars.yml (YAML)\nDESCRIPTION: To use your own Traefik container, you need to configure the `matrix_playbook_reverse_proxy_type` variable to `other-traefik-container` and adjust other variables, such as the hostname and SSL certificate path, to point to your Traefik instance in your `inventory/host_vars/matrix.example.com/vars.yml` file. The Traefik container requires 4 entrypoints for proper functionality: `web`, `web-secure`, `matrix-federation`, and `matrix-internal-matrix-client-api`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_reverse_proxy_type: other-traefik-container\n\n# Uncomment and adjust this part if your Traefik container is on another network\n# matrix_playbook_reverse_proxy_container_network: traefik\n\n# Adjust to point to your Traefik container\nmatrix_playbook_reverse_proxy_hostname: name-of-your-traefik-container\n\ntraefik_certs_dumper_ssl_dir_path: \"/path/to/your/traefiks/acme.json/directory\"\n\n# Uncomment and adjust the variable below if the name of your federation entrypoint is different\n# than the default value (matrix-federation).\n# matrix_federation_traefik_entrypoint_name: matrix-federation\n\n# Uncomment and adjust the variables below if you'd like to enable HTTP-compression.\n#\n# For this to work, you will need to define a compress middleware (https://doc.traefik.io/traefik/middlewares/http/compress/) for your Traefik instance\n# using a file (https://doc.traefik.io/traefik/providers/file/) or Docker (https://doc.traefik.io/traefik/providers/docker/) configuration provider.\n#\n# matrix_playbook_reverse_proxy_traefik_middleware_compression_enabled: true\n# matrix_playbook_reverse_proxy_traefik_middleware_compression_name: my-compression-middleware@file\n```\n\n----------------------------------------\n\nTITLE: Adjusting Matrix Authentication Service URL with Ansible\nDESCRIPTION: This YAML snippet demonstrates how to adjust the Matrix Authentication Service URL by modifying the hostname and path prefix variables in the Ansible configuration. This allows customizing the service's accessibility.  A CNAME record might be required to point the new hostname to the matrix server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_authentication_service_hostname: auth.example.com\nmatrix_authentication_service_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Customizing PostgreSQL Upgrade Backup Path\nDESCRIPTION: This command upgrades PostgreSQL and specifies a custom path for the backup of the old data directory.  It uses the `--extra-vars` flag to override the default backup path, providing flexibility in managing storage space.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags upgrade-postgres --extra-vars=\"postgres_auto_upgrade_backup_data_path=/another/disk/matrix-postgres-before-upgrade\"\n```\n\n----------------------------------------\n\nTITLE: Docker Pull Nginx Image\nDESCRIPTION: This command forces a re-pull of the nginx Docker image to ensure the latest version with TLS v1.3 support is used. It is particularly relevant when using the integrated nginx server and the automatic update hasn't occurred yet. This ensures that the deployment uses the latest nginx build.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_100\n\nLANGUAGE: shell\nCODE:\n```\ndocker pull nginx:1.15.8-alpine\n```\n\n----------------------------------------\n\nTITLE: Registering a Matrix user with Ansible\nDESCRIPTION: This command registers a new Matrix user using the Ansible playbook. It requires specifying a username, password, and whether the user should be an administrator. The `--tags=register-user` option ensures that only the user registration task is executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dimension.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=dimension password=PASSWORD_FOR_THE_USER admin=no' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook for installation\nDESCRIPTION: This command runs the Ansible playbook to install and start the Discord bridge using specific tags. It requires Ansible to be installed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Add custom regexes to matrix-reminder-bot allowlist\nDESCRIPTION: This snippet illustrates how to inject additional allowed servers or users by adding custom regexes to the `matrix_bot_matrix_reminder_bot_allowlist_regexes_custom` list variable in your vars.yml file. These regexes are added on top of the default allowlist defined in `matrix_bot_matrix_reminder_bot_allowlist_regexes_auto`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_23\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_matrix_reminder_bot_allowlist_regexes_custom: # Your custom regexes here\n```\n\n----------------------------------------\n\nTITLE: Increasing Honoroit Logging Verbosity (YAML)\nDESCRIPTION: This YAML snippet increases the logging verbosity of the Honoroit bot to DEBUG level. Add this to your vars.yml and rerun the playbook. This will provide more detailed logs for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-honoroit.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_honoroit_loglevel: 'DEBUG'\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Galaxy to Install Roles\nDESCRIPTION: This command updates Ansible roles from Galaxy. It removes the existing `roles/galaxy` directory and then uses `ansible-galaxy` to install the roles specified in `requirements.yml` into the `roles/galaxy` directory, forcing re-installation. This ensures the playbook uses the latest versions of required roles.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nrm -rf roles/galaxy; ansible-galaxy install -r requirements.yml -p roles/galaxy/ --force\n```\n\n----------------------------------------\n\nTITLE: Extending Slack Appservice Configuration in vars.yml\nDESCRIPTION: This YAML snippet demonstrates extending the default configuration of the matrix-appservice-slack, specifically changing the bot's username. The `matrix_appservice_slack_configuration_extension_yaml` variable is used to override settings in `config.yaml.j2`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_slack_configuration_extension_yaml: |\n  bot_username: \"examplebot\"\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook to import `media_store`\nDESCRIPTION: This command executes an Ansible playbook to import the Synapse media store. It utilizes the `setup.yml` playbook and applies the `import-synapse-media-store` tag. The `server_path_media_store` variable must be specified, pointing to the server's `media_store` directory. Ensure the path is on the server, not the local machine.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-synapse-media-store.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='server_path_media_store=<server-path-to-media_store>' --tags=import-synapse-media-store\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Themes Manually in SchildiChat Web\nDESCRIPTION: This YAML snippet demonstrates how to define custom themes manually for SchildiChat Web. The `matrix_client_schildichat_setting_defaults_custom_themes` variable allows adding and adjusting custom themes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# Controls the `setting_defaults.custom_themes` setting of the SchildiChat Web configuration.\nmatrix_client_schildichat_setting_defaults_custom_themes: []\n```\n\n----------------------------------------\n\nTITLE: Extending rageshake Configuration (YAML)\nDESCRIPTION: This code extends the default rageshake configuration using `matrix_rageshake_configuration_extension_yaml`. It allows overriding individual variables or introducing new ones. The example sets `github_token` and defines `github_project_mappings` for custom GitHub project mappings.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rageshake.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_rageshake_configuration_extension_yaml: |\n  # Your custom YAML configuration goes here.\n  # This configuration extends the default starting configuration (`matrix_rageshake_configuration_extension_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `matrix_rageshake_configuration_extension_yaml`.\n\n  github_token: secrettoken\n\n  github_project_mappings:\n     my-app: octocat/HelloWorld\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Level for Mautrix Discord in Ansible YAML\nDESCRIPTION: This YAML snippet configures the logging level for the Mautrix Discord bridge. By setting `matrix_mautrix_discord_logging_level` to a desired level (e.g., 'debug') in the `vars.yml` file, the verbosity of the bridge's logs can be adjusted, which is helpful for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-discord.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_discord_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Creating Configuration Directory - Bash\nDESCRIPTION: This command creates a directory to store configuration variables for a specific Matrix domain. The `mkdir -p` command ensures that parent directories are created if they don't already exist.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p inventory/host_vars/matrix.example.com\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-prometheus Variables - Ansible\nDESCRIPTION: This snippet details the necessary variable renames after the `matrix-prometheus` role was moved to the `ansible-role-prometheus` repository. It illustrates how to update the `vars.yml` file to reflect the new naming conventions.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_prometheus_docker_image_ -> matrix_prometheus_container_image_\nmatrix_prometheus_ -> prometheus_\n```\n\n----------------------------------------\n\nTITLE: Executing Ansible Playbook with Just (Bash)\nDESCRIPTION: This command executes a shortcut command using the `just` program to run Ansible playbook with the tag 'rust-synapse-compress-state'. This is an alternative to the full `ansible-playbook` command.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags rust-synapse-compress-state\n```\n\n----------------------------------------\n\nTITLE: Disabling Rate Limiting for Draupnir Bot (SH)\nDESCRIPTION: This curl command disables rate limiting for the Draupnir bot account on Synapse. It requires an admin access token, the base domain, and the MXID of the Draupnir bot user.  Replace `ADMIN_ACCESS_TOKEN_HERE`, `example.com`, and `@bot.draupnir:example.com` with the appropriate values.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncurl --header \"Authorization: Bearer ADMIN_ACCESS_TOKEN_HERE\" -X POST https://matrix.example.com/_synapse/admin/v1/users/@bot.draupnir:example.com/override_ratelimit\n```\n\n----------------------------------------\n\nTITLE: Running Docker Prune via Ansible\nDESCRIPTION: This command uses Ansible to execute the `docker system prune` command on the target server. This removes unused Docker data, freeing up disk space. The `setup.yml` playbook is executed with the `run-docker-prune` tag, targeting the hosts defined in the `inventory/hosts` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-and-troubleshooting.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=run-docker-prune\n```\n\n----------------------------------------\n\nTITLE: Checking Ansible Version\nDESCRIPTION: This command is used to display the version of Ansible installed on the system. It helps verify if the installed version meets the playbook's requirements.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible --version\n```\n\n----------------------------------------\n\nTITLE: Adjusting Go-NEB URL Configuration\nDESCRIPTION: This YAML configuration demonstrates how to adjust the Go-NEB URL by modifying the `matrix_bot_go_neb_hostname` and `matrix_bot_go_neb_path_prefix` variables in the `vars.yml` file. This allows you to serve Go-NEB under a different hostname or path.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-go-neb.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Go-NEB.\nmatrix_bot_go_neb_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /go-neb subpath\nmatrix_bot_go_neb_path_prefix: /go-neb\n```\n\n----------------------------------------\n\nTITLE: Enabling Verbose Logging for ma1sd (YAML)\nDESCRIPTION: This snippet shows how to enable verbose logging for ma1sd by setting the `matrix_ma1sd_verbose_logging` variable to `true` in your `vars.yml` file. This increases the verbosity of the logs, aiding in troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ma1sd.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_ma1sd_verbose_logging: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags - Shell\nDESCRIPTION: This snippet shows how to run the Ansible playbook to install and configure the mautrix-slack bridge using specific tags. The `setup-all` tag ensures all necessary tasks are executed, and the `start` tag starts the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-slack.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Sliding Sync Proxy in vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable the Sliding Sync proxy by setting the `matrix_sliding_sync_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This is the primary way to activate the Sliding Sync proxy during the Ansible playbook execution.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-sliding-sync-proxy.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_sliding_sync_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Setting logging level for Mautrix Whatsapp in Ansible YAML\nDESCRIPTION: This YAML snippet configures the logging level for the mautrix-whatsapp bridge in the Ansible playbook.  It allows increasing the logging verbosity for debugging purposes. The configuration is added to `vars.yml` and requires a playbook re-run to take effect.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-whatsapp.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_whatsapp_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Shell Command to Check Logs\nDESCRIPTION: This shell command uses `journalctl` to view the logs for a specific systemd service. It is used to monitor the progress of the matrix-sms-bridge initial sync. Requires shell access to the host.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_74\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u matrix-sms-bridge\n```\n\n----------------------------------------\n\nTITLE: Adjusting wsproxy Hostname - YAML\nDESCRIPTION: This YAML configuration allows overriding the default hostname for the mautrix-wsproxy service. This snippet demonstrates changing the hostname to ws.example.com. Adjusting DNS records may be necessary after changing the domain.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-wsproxy.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname\nmatrix_mautrix_wsproxy_hostname: ws.example.com\n```\n\n----------------------------------------\n\nTITLE: Disabling Valkey and KeyDB to use Redis (YAML)\nDESCRIPTION: This configuration snippet explicitly disables both Valkey and KeyDB, causing the playbook to fall back to Redis if a Redis-compatible implementation is required. This configuration is useful for users on architectures like `arm32` where there isn't a prebuilt container image for Valkey.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# Explicitly disable both Valkey and KeyDB.\n#\n# Redis will be auto-enabled if necessary,\n# because there's no other Redis-compatible implementation being enabled.\nvalkey_enabled: false\nkeydb_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Extending SchildiChat Web Configuration with JSON\nDESCRIPTION: This YAML snippet demonstrates how to extend the default SchildiChat Web configuration using a custom JSON configuration. The `matrix_client_schildichat_configuration_extension_json` variable allows overriding individual variables or introducing new ones.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n # Your custom JSON configuration for SchildiChat Web should go to `matrix_client_schildichat_configuration_extension_json`.\n # This configuration extends the default starting configuration (`matrix_client_schildichat_configuration_default`).\n #\n # You can override individual variables from the default configuration, or introduce new ones.\n #\n # If you need something more special, you can take full control by\n # completely redefining `matrix_client_schildichat_configuration_default`.\n #\nmatrix_client_schildichat_configuration_extension_json: |\n {\n \"disable_3pid_login\": true,\n \"disable_login_language_selector\": true\n }\n```\n\n----------------------------------------\n\nTITLE: Configure generic secret key for Synapse\nDESCRIPTION: This configuration snippet is necessary for existing Synapse installations to align with the new playbook structure. It defines the `matrix_homeserver_generic_secret_key` based on the existing `matrix_synapse_macaroon_secret_key`, ensuring compatibility with changes in how secrets are managed. This allows existing installations to continue functioning without generating new secrets.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_56\n\nLANGUAGE: yaml\nCODE:\n```\n# All secrets keys are now derived from `matrix_homeserver_generic_secret_key`, not from `matrix_synapse_macaroon_secret_key`.\n# To keep them all the same, define `matrix_homeserver_generic_secret_key` in terms of `matrix_synapse_macaroon_secret_key`.\n# Using a new secret value for this configuration key is also possible and should not cause any problems.\n#\n# Fun fact: new installations (based on the new `examples/vars.yml` file) do this in reverse.\n# That is, the Synapse macaroon secret is derived from `matrix_homeserver_generic_secret_key`.\nmatrix_homeserver_generic_secret_key: \"{{ matrix_synapse_macaroon_secret_key }}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Public Registration for Dendrite (YAML)\nDESCRIPTION: Enables public user registration for Dendrite by setting the `matrix_dendrite_client_api_registration_disabled` variable to `false` in the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dendrite_client_api_registration_disabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This snippet shows the command to run the Ansible playbook with specific tags: `setup-all` and `start`. It's used after configuring the playbook and adjusting DNS records. This will execute only the tasks associated with the specified tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Registering a new user with Ansible\nDESCRIPTION: This command uses ansible-playbook to register a new user for the Go-NEB bot. It sets the username, password, and admin status using extra variables and the register-user tag. Replace PASSWORD_FOR_THE_BOT with a strong password.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-go-neb.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --extra-vars='username=bot.go-neb password=PASSWORD_FOR_THE_BOT admin=no' --tags=register-user\n```\n\n----------------------------------------\n\nTITLE: Installing Ansible Roles with ansible-galaxy\nDESCRIPTION: This command directly installs Ansible roles from the `requirements.yml` file, bypassing the 'just' command runner. It forcefully reinstalls the roles.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/just.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nrm -rf roles/galaxy; ansible-galaxy install -r requirements.yml -p roles/galaxy/ --force\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Roles with Just\nDESCRIPTION: This command executes the ansible roles using the just tool, which is a faster alternative. It's used to pull external roles defined in the requirements.yml file, which are now external to the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/YEAR-IN-REVIEW.md#_snippet_1\n\nLANGUAGE: Justfile\nCODE:\n```\njust roles\n```\n\n----------------------------------------\n\nTITLE: Enabling LiveKit JWT Service in Ansible\nDESCRIPTION: This snippet shows how to enable the LiveKit JWT Service by setting the `matrix_livekit_jwt_service_enabled` variable to `true` in the `vars.yml` file.  This configuration is necessary to trigger the installation and setup of the service by the Ansible playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-jwt-service.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_livekit_jwt_service_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible playbook to install and start all services (Bash)\nDESCRIPTION: This command executes an Ansible playbook to install all necessary components and start the Matrix services on the new server. It uses the `install-all` and `start` tags to execute relevant tasks. The inventory file specifies the target host.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-migrating.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-all,start\n```\n\n----------------------------------------\n\nTITLE: Porting Dimension Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_dimension_container_expose_port` variable with the `matrix_dimension_container_http_host_bind_port` variable. It shows how to expose the Dimension container port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_95\n\n\n\n----------------------------------------\n\nTITLE: Enabling native Synapse auto-accept invites\nDESCRIPTION: This snippet enables the native auto-accept invites feature in Synapse.  It also shows how to configure additional options such as accepting invites only for direct messages or only from local users. The snippet also demonstrates running this feature on a worker.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-auto-accept-invite.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_auto_accept_invites_enabled: true\n\n# Default settings below. Uncomment and adjust this part if necessary.\n# matrix_synapse_auto_accept_invites_only_for_direct_messages: false\n# matrix_synapse_auto_accept_invites_only_from_local_users: false\n\n# If workers are enabled, you may delegate usage to a specific worker.\n# matrix_synapse_auto_accept_invites_worker_to_run_on: 'matrix-synapse-worker-generic-0'\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Nginx Logs Exporter Docker Image in Ansible vars.yml\nDESCRIPTION: This snippet shows how to configure a custom Docker image for the nginx logs exporter, disabling the architecture check and specifying the image path. This enables using custom-built images for architectures not officially supported.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-prometheus-grafana.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_prometheus_nginxlog_exporter_docker_image_arch_check_enabled: false\nmatrix_prometheus_nginxlog_exporter_docker_image: path/to/docker/image:tag\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook with Specific Tags\nDESCRIPTION: Executes the Ansible playbook with the `setup-all` and `start` tags. This ensures that all necessary setup tasks are run and the Matrix Synapse service is started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-shared-secret-auth.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible playbook with specific tags\nDESCRIPTION: This command executes the Ansible playbook with the `setup-all` and `start` tags.  This is used to install and start all configured components. The `-i inventory/hosts` option specifies the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-alertmanager-receiver.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Porting Synapse Federation API Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_synapse_container_expose_federation_api_port` variable with the `matrix_synapse_container_federation_api_plain_host_bind_port` and `matrix_synapse_container_federation_api_tls_host_bind_port` variables. It shows how to expose the Synapse federation API ports.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_91\n\n\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook - Shell\nDESCRIPTION: This command executes the Ansible playbook to install and configure the Buscarron bot. The `--tags` option specifies the playbook tags to run, ensuring that the necessary tasks are executed, including setting up all components, creating the matrix users, and starting the services. The `inventory/hosts` file defines the target hosts for the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-buscarron.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook to Install FluffyChat Web (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook (`setup.yml`) to install and start FluffyChat Web. It uses the `setup-all` and `start` tags to ensure all necessary setup tasks are run. The `-i inventory/hosts` option specifies the inventory file containing the target server. The command requires Ansible to be installed and configured correctly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-fluffychat-web.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Roles with Make\nDESCRIPTION: This command executes the ansible roles using the make tool. It's used to pull external roles defined in the requirements.yml file, which are now external to the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/YEAR-IN-REVIEW.md#_snippet_0\n\nLANGUAGE: Makefile\nCODE:\n```\nmake roles\n```\n\n----------------------------------------\n\nTITLE: Configuring Reverse Proxy Type in vars.yml (Ansible)\nDESCRIPTION: This snippet shows how to explicitly define the reverse proxy type in your `vars.yml` configuration file. This is a required step for existing users to either migrate to Traefik or remain on `matrix-nginx-proxy`. If you wish to continue to use the nginx reverse proxy, you must add this line to your configuration file. If you choose not to define this variable, the default (Traefik) will be used for new installations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_reverse_proxy_type: playbook-managed-nginx\n```\n\n----------------------------------------\n\nTITLE: Disabling Matrix Media Repo Signing Key Generation - YAML\nDESCRIPTION: This configuration snippet disables the automatic generation of signing keys for Authenticated Media in matrix-media-repo. This feature is enabled by default and is associated with MSC3916. Setting `matrix_media_repo_generate_signing_key` to `false` disables this feature.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_media_repo_generate_signing_key: false\n```\n\n----------------------------------------\n\nTITLE: Adjusting Honoroit Hostname and Path Prefix (YAML)\nDESCRIPTION: This YAML snippet configures the hostname and path prefix for the Honoroit bot, allowing it to be accessed at a custom URL.  It requires setting the `matrix_bot_honoroit_hostname` and `matrix_bot_honoroit_path_prefix` variables in `vars.yml`. Changing the hostname may require updating DNS records.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-honoroit.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_bot_honoroit_hostname: honoroit.example.com\nmatrix_bot_honoroit_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Exposing Synapse Admin APIs Publicly (YAML)\nDESCRIPTION: This YAML snippet exposes the Synapse Admin APIs publicly by adding configuration to your `vars.yml` file, allowing external access. Note: while this should not be a security concern as access is restricted, it's still recommended to follow official Synapse reverse-proxying recommendations for additional security.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_labels_public_client_synapse_admin_api_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Increase Logging Verbosity - YAML\nDESCRIPTION: This snippet shows the configuration required to increase the logging verbosity of the Buscarron bot.  Setting `matrix_bot_buscarron_loglevel` to `DEBUG` increases the verbosity.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-buscarron.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_buscarron_loglevel: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Limit Room Complexity in Synapse Configuration YAML\nDESCRIPTION: This YAML snippet extends the Synapse configuration to limit room complexity. It enables the `limit_remote_rooms` feature and sets a complexity threshold. Adjusting the `complexity` value restricts users from joining very large or complex rooms, which can help reduce server load.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_configuration_extension_yaml: |\n  limit_remote_rooms:\n    enabled: true\n    complexity: 1.0 # this limits joining complex (~large) rooms, can be\n\t\t\t\t\t# increased, but larger values can require more RAM\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Level - YAML\nDESCRIPTION: This snippet configures the logging level for the mautrix-slack bridge. It defines the `matrix_mautrix_slack_logging_level` variable in `vars.yml`. Valid values are fatal, error, warn, info, debug, and trace. The default level is warn.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-slack.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_slack_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Extending Dendrite Configuration with YAML - YAML\nDESCRIPTION: This code snippet demonstrates how to extend the default Dendrite configuration using the `matrix_dendrite_configuration_extension_yaml` variable in the `vars.yml` file. It allows users to override existing settings or introduce new ones without completely redefining the entire configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dendrite.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dendrite_configuration_extension_yaml: |\n  # Your custom YAML configuration for Dendrite goes here.\n  # This configuration extends the default starting configuration (`matrix_dendrite_configuration_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `matrix_dendrite_configuration_yaml`.\n  #\n  # Example configuration extension follows:\n  #\n  server_notices:\n    system_mxid_localpart: notices\n    system_mxid_display_name: \"Server Notices\"\n    system_mxid_avatar_url: \"mxc://example.com/oumMVlgDnLYFaPVkExemNVVZ\"\n    room_name: \"Server Notices\"\n```\n\n----------------------------------------\n\nTITLE: Importing Synapse SQLite Database with Ansible\nDESCRIPTION: This command imports a Synapse SQLite database to the PostgreSQL database using the Ansible playbook. It requires specifying the path to the SQLite database file on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-synapse-sqlite.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags import-synapse-sqlite-db --extra-vars=server_path_homeserver_db=<server-path-to-homeserver.db>\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible playbook (Bash)\nDESCRIPTION: This command executes the Ansible playbook to set up and start the beeper-linkedin bridge.  It uses specific tags to ensure only necessary tasks are run.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-beeper-linkedin.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Revert to Old SSL Configuration in Nginx\nDESCRIPTION: Configuration to revert Nginx SSL settings to the previous behavior. This snippet sets the ciphers and enables server cipher preference to match older configurations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_66\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_nginx_proxy_ssl_ciphers: \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\"\nmatrix_nginx_proxy_ssl_prefer_server_ciphers: \"on\"\n```\n\n----------------------------------------\n\nTITLE: Disable synapse-admin Homeserver Restriction YAML Configuration\nDESCRIPTION: This configuration snippet shows how to disable the restriction of synapse-admin to a specific homeserver URL. By setting `matrix_synapse_admin_config_restrictBaseUrl` to an empty list, synapse-admin will allow management of any homeserver instance. No specific dependencies are required.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n# Use this configuration to allow synapse-admin to manage any homeserver instance.\nmatrix_synapse_admin_config_restrictBaseUrl: []\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags - Bash\nDESCRIPTION: This bash command demonstrates how to run the Ansible playbook with specific tags to set up and start the Twitter bridge. It uses the `setup-all` and `start` tags to ensure that all necessary components are configured and the bridge is initiated.  Dependencies include Ansible being installed and the correct inventory file being present.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-twitter.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Shell Command to Rename Database Files\nDESCRIPTION: This shell command renames a database backup file to its original name. This is used to revert to a previous database state after a failed migration. Requires SSH access to the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_69\n\nLANGUAGE: bash\nCODE:\n```\nmv /matrix/mautrix-facebook/data/mautrix-facebook.db.backup /matrix/mautrix-facebook/data/mautrix-facebook.db\n```\n\n----------------------------------------\n\nTITLE: Embedding Cactus Comments Section in HTML\nDESCRIPTION: This HTML snippet demonstrates how to embed the Cactus Comments section into a webpage. It includes a `<div>` element where the comment section will be displayed. You must initialize the comment section with appropriate parameters, including the Matrix homeserver URL, the server name, and the site name that you registered with the Cactus Comments bot.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"comment-section\"></div>\n```\n\n----------------------------------------\n\nTITLE: Enabling Encryption for a Specific Bridge\nDESCRIPTION: This snippet demonstrates how to enable encryption for a specific Mautrix bridge. It sets both `matrix_mautrix_SERVICENAME_bridge_encryption_enabled` and `matrix_mautrix_SERVICENAME_bridge_encryption_default` to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_bridge_encryption_enabled: true\nmatrix_mautrix_SERVICENAME_bridge_encryption_default: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Heisenbridge Setup (Shell)\nDESCRIPTION: This command executes the Ansible playbook to set up and start Heisenbridge. It uses specific tags to target the relevant tasks. Running this command after configuring the playbook and DNS (if necessary) installs Heisenbridge on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-heisenbridge.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Updating Mautrix-Whatsapp space after upgrade\nDESCRIPTION: If you've updated mautrix-whatsapp and have existing bridged rooms, send this command to the bridge bot to create a space and add the rooms into it. This is necessary as the bridge now supports spaces by default, after the update.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_45\n\nLANGUAGE: text\nCODE:\n```\n!wa sync space\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Hydrogen Setup\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` with specific tags (`setup-all`, `start`) to install and start Hydrogen. It utilizes the inventory file to target the appropriate hosts and apply the defined configurations. The tags ensure that all necessary setup tasks are executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-hydrogen.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Adjusting Hostname and Path in vars.yml (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to adjust the default hostname and path prefix for the synapse-usage-exporter service by setting the `matrix_synapse_usage_exporter_hostname` and `matrix_synapse_usage_exporter_path_prefix` variables in your `vars.yml` file. These variables are used only if `matrix_synapse_usage_exporter_proxying_enabled` is set to `true`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-usage-exporter.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\n# These variables are used only if (`matrix_synapse_usage_exporter_proxying_enabled: true`)\nmatrix_synapse_usage_exporter_hostname: sue.example.com\nmatrix_synapse_usage_exporter_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: matrix-registration-bot Configuration Update\nDESCRIPTION: This snippet documents changes to the matrix-registration-bot configuration.  The bot now supports password-only-based login and obtains access tokens automatically. Existing users who previously used access tokens need to set the `matrix_bot_matrix_registration_bot_bot_password` and remove the deprecated `matrix_bot_matrix_registration_bot_bot_access_token` and `matrix_bot_matrix_registration_bot_api_token` settings from their `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_27\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_matrix_registration_bot_bot_password: \"your_password\"\nmatrix_bot_matrix_registration_bot_bot_access_token:\nmatrix_bot_matrix_registration_bot_api_token:\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-redis Variables (Ansible)\nDESCRIPTION: This snippet highlights the variable renaming required after extracting the `matrix-redis` role into its own repository. Existing users of the playbook who are using Redis need to update their `vars.yml` file with these new variable references. This ensures that the Redis configuration remains functional after the role extraction.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_redis_ -> redis_\n```\n\n----------------------------------------\n\nTITLE: Configuring Mautrix Bluesky Logging Level in Ansible vars.yml\nDESCRIPTION: This code snippet shows how to configure the logging level for the Mautrix Bluesky bridge by setting the `matrix_mautrix_bluesky_logging_level` variable in the `vars.yml` file.  Valid values include: fatal, error, warn, info, debug, trace. The playbook needs to be re-run after making this change.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bluesky.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_bluesky_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Adjusting file ownership to matrix user:group (Bash)\nDESCRIPTION: This command changes the ownership of the `/matrix` directory and its contents to the `matrix` user and group on the new server. This ensures that the Matrix services have the necessary permissions to access and modify the data. It must be run on the *new* server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-migrating.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nchown -R matrix:matrix /matrix\n```\n\n----------------------------------------\n\nTITLE: Configure Ansible for Local Connection (Ansible)\nDESCRIPTION: This snippet demonstrates how to configure Ansible to connect locally to the server instead of using SSH. This is applicable when running the playbook directly on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_5\n\nLANGUAGE: Ansible\nCODE:\n```\nansible_connection=local\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags - Shell\nDESCRIPTION: This code snippet demonstrates how to execute the Ansible playbook with specific tags (`setup-all`, `start`).  This ensures that all necessary setup tasks, including the mautrix-googlechat bridge, are executed and the services are started. The playbook uses the `inventory/hosts` file for host definitions.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-googlechat.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Element Web Themes from a Repository via Ansible\nDESCRIPTION: This snippet shows how to enable themes from a repository like `element-themes` for Element Web using the `matrix_client_element_themes_enabled` variable in the Ansible playbook's `vars.yml` file.  Setting it to `true` installs and enables all themes from the specified repository.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_client_element_themes_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Registering Users Manually for Dendrite (Shell)\nDESCRIPTION: Registers a user manually for Dendrite homeserver via the command line after SSH-ing to the server. Requires that all services have been started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n/matrix/dendrite/bin/create-account USERNAME_HERE PASSWORD_HERE <admin access: 0 or 1>\n\n# Example: `/matrix/dendrite/bin/create-account alice secret-password 1`\n```\n\n----------------------------------------\n\nTITLE: Disable base domain redirection in matrix-docker-ansible-deploy (YAML)\nDESCRIPTION: This snippet shows how to disable the default redirection of the base domain to the Matrix subdomain when serving a static website at the base domain in the matrix-docker-ansible-deploy playbook. It prevents the playbook from redirecting `https://example.com/` to `https://matrix.example.com/` when `index.html` is managed externally.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_static_files_container_labels_base_domain_root_path_redirection_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring custom S3 endpoint in Ansible YAML\nDESCRIPTION: This YAML snippet extends the S3 configuration to support custom S3-compatible object stores.  `matrix_s3_media_store_custom_endpoint_enabled` enables the custom endpoint and `matrix_s3_media_store_custom_endpoint` specifies the URL. This is necessary if you're not using Amazon S3 directly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-s3-goofys.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_s3_media_store_custom_endpoint_enabled: true\nmatrix_s3_media_store_custom_endpoint: \"https://your-custom-endpoint\"\n```\n\n----------------------------------------\n\nTITLE: Finding ALTER TABLE Statements (Shell)\nDESCRIPTION: This command uses `grep` to search for `ALTER TABLE` statements within a Postgres dump file, typically to identify potential table ownership issues during import.  The output shows which tables are owned by a specific user.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-postgres.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n$ grep \"ALTER TABLE\" homeserver.sql\nALTER TABLE public.access_tokens OWNER TO synapse_user;\nALTER TABLE public.account_data OWNER TO synapse_user;\nALTER TABLE public.account_data_max_stream_id OWNER TO synapse_user;\nALTER TABLE public.account_validity OWNER TO synapse_user;\nALTER TABLE public.application_services_state OWNER TO synapse_user;\n…\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-backup-borg Variables (Ansible)\nDESCRIPTION: This snippet illustrates the variable updates needed for BorgBackup after the `matrix-backup-borg` role was extracted. If you're making use of BorgBackup functionality through the playbook, it's essential to update your `vars.yml` file to reflect the new variable names. Failing to update these variables will likely cause errors during the backup configuration process.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_39\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_backup_borg_ -> backup_borg_\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Go-NEB Bot in Ansible\nDESCRIPTION: This YAML configuration enables the Go-NEB bot and defines its clients, realms, sessions, and services. It includes settings for access tokens, user IDs, device IDs, homeserver URLs, and various service configurations for echo, Giphy, Guggy, Google, Imgur, Wikipedia, RSS, Github command, Github Webhook, SlackAPI and Alertmanager.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-go-neb.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_go_neb_enabled: true\n\n# You need at least 1 client.\n# Use the access token you obtained in the step above.\nmatrix_bot_go_neb_clients:\n  - UserID: \"@goneb:{{ matrix_domain }}\"\n    AccessToken: \"ACCESS_TOKEN_FOR_GONEB_HERE\"\n    DeviceID: \"DEVICE1\"\n    HomeserverURL: \"{{ matrix_addons_homeserver_client_api_url }}\"\n    Sync: true\n    AutoJoinRooms: true\n    DisplayName: \"Go-NEB!\"\n    AcceptVerificationFromUsers: [\":{{ matrix_domain }}\"]\n\n  - UserID: \"@another_goneb:{{ matrix_domain }}\"\n    AccessToken: \"ACCESS_TOKEN_FOR_ANOTHER_GONEB_HERE\"\n    DeviceID: \"DEVICE2\"\n    HomeserverURL: \"{{ matrix_addons_homeserver_client_api_url }}\"\n    Sync: false\n    AutoJoinRooms: false\n    DisplayName: \"Go-NEB!\"\n    AcceptVerificationFromUsers: [\"^@admin:{{ matrix_domain }}\"]\n\n# Optional, for use with the github_cmd, github_webhooks or jira services\nmatrix_bot_go_neb_realms:\n  - ID: \"github_realm\"\n    Type: \"github\"\n    Config: {} # No need for client ID or Secret as Go-NEB isn't generating OAuth URLs\n\n# Optional. The list of *authenticated* sessions which Go-NEB is aware of.\nmatrix_bot_go_neb_sessions:\n  - SessionID: \"your_github_session\"\n    RealmID: \"github_realm\"\n    UserID: \"@alice:{{ matrix_domain }}\" # This needs to be the username of the person that's allowed to use the !github commands\n    Config:\n      # Populate these fields by generating a \"Personal Access Token\" on github.com\n      AccessToken: \"YOUR_GITHUB_ACCESS_TOKEN\"\n      Scopes: \"admin:org_hook,admin:repo_hook,repo,user\"\n\n# The list of services which Go-NEB is aware of.\n# Delete or modify this list as appropriate.\n# See the docs for /configureService for the full list of options:\n# https://matrix-org.github.io/go-neb/pkg/github.com/matrix-org/go-neb/api/index.html#ConfigureServiceRequest\n# You need at least 1 service.\nmatrix_bot_go_neb_services:\n  - ID: \"echo_service\"\n    Type: \"echo\"\n    UserID: \"@goneb:{{ matrix_domain }}\"\n    Config: {}\n\n# Can be obtained from https://developers.giphy.com/dashboard/\n  - ID: \"giphy_service\"\n    Type: \"giphy\"\n    UserID: \"@goneb:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n      api_key: \"qwg4672vsuyfsfe\"\n      use_downsized: false\n\n# This service has been dead for over a year :/\n  - ID: \"guggy_service\"\n    Type: \"guggy\"\n    UserID: \"@goneb:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n      api_key: \"2356saaqfhgfe\"\n\n# API Key via https://developers.google.com/custom-search/v1/introduction\n# CX via http://www.google.com/cse/manage/all\n# https://stackoverflow.com/questions/6562125/getting-a-cx-id-for-custom-search-google-api-python\n# 'Search the entire web' and 'Image search' enabled for best results\n  - ID: \"google_service\"\n    Type: \"google\"\n    UserID: \"@goneb:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n      api_key: \"AIzaSyA4FD39m9\"\n      cx: \"AIASDFWSRRtrtr\"\n\n# Obtain a key via https://api.imgur.com/oauth2/addclient\n# Select \"oauth2 without callback url\"\n  - ID: \"imgur_service\"\n    Type: \"imgur\"\n    UserID: \"@imgur:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n      client_id: \"AIzaSyA4FD39m9\"\n      client_secret: \"somesecret\"\n\n  - ID: \"wikipedia_service\"\n    Type: \"wikipedia\"\n    UserID: \"@goneb:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n\n  - ID: \"rss_service\"\n    Type: \"rssbot\"\n    UserID: \"@another_goneb:{{ matrix_domain }}\"\n    Config:\n      feeds:\n        \"http://lorem-rss.herokuapp.com/feed?unit=second&interval=60\":\n          rooms: [\"!qporfwt:{{ matrix_domain }}\"]\n          must_include:\n            author:\n              - author1\n            description:\n              - lorem\n              - ipsum\n          must_not_include:\n            title:\n              - Lorem\n              - Ipsum\n\n  - ID: \"github_cmd_service\"\n    Type: \"github\"\n    UserID: \"@goneb:{{ matrix_domain }}\" # requires a Syncing client\n    Config:\n      RealmID: \"github_realm\"\n\n    # Make sure your BASE_URL can be accessed by Github!\n  - ID: \"github_webhook_service\"\n    Type: \"github-webhook\"\n    UserID: \"@another_goneb:{{ matrix_domain }}\"\n    Config:\n      RealmID: \"github_realm\"\n      ClientUserID: \"@alice:{{ matrix_domain }}\" # needs to be an authenticated user so Go-NEB can create webhooks. Check the UserID field in the github_realm in matrix_bot_go_neb_sessions.\n      Rooms:\n        \"!qporfwt:example.com\":\n          Repos:\n            \"element-hq/synapse\":\n              Events: [\"push\", \"issues\"]\n            \"matrix-org/dendron\":\n              Events: [\"pull_request\"]\n        \"!aaabaa:example.com\":\n          Repos:\n            \"element-hq/synapse\":\n              Events: [\"push\", \"issues\"]\n            \"matrix-org/dendron\":\n              Events: [\"pull_request\"]\n\n  - ID: \"slackapi_service\"\n    Type: \"slackapi\"\n    UserID: \"@slackapi:{{ matrix_domain }}\"\n    Config:\n      Hooks:\n        \"hook1\":\n          RoomID: \"!qporfwt:example.com\"\n          MessageType: \"m.text\" # default is m.text\n\n  - ID: \"alertmanager_service\"\n    Type: \"alertmanager\"\n    UserID: \"@alertmanager:{{ matrix_domain }}\"\n    Config:\n      # This is for information purposes only. It should point to Go-NEB path as follows:\n      # `/services/hooks/<base64 encoded service ID>`\n      # Where in this case \"service ID\" is \"alertmanager_service\"\n      # Make sure your BASE_URL can be accessed by the Alertmanager instance!\n      webhook_url: \"http://localhost/services/hooks/YWxlcnRtYW5hZ2VyX3NlcnZpY2U\"\n      # Each room will get the notification with the alert rendered with the given template\n      rooms:\n        \"!qporfwt:example.com\":\n          text_template: \"{% raw %}{{range .Alerts -}} [{{ .Status }}] {{index .Labels \\\"alertname\\\" }}: {{index .Annotations \\\"description\\\"}} {{ end -}}{% endraw %}\"\n          html_template: \"{% raw %}{{range .Alerts -}}  {{ $severity := index .Labels \\\"severity\\\" }}    {{ if eq .Status \\\"firing\\\" }}      {{ if eq $severity \\\"critical\\\"}}        <font color='red'><b>[FIRING - CRITICAL]</b></font>      {{ else if eq $severity \\\"warning\\\"}}        <font color='orange'><b>[FIRING - WARNING]</b></font>      {{ else }}        <b>[FIRING - {{ $severity }}]</b>      {{ end }}    {{ else }}      <font color='green'><b>[RESOLVED]</b></font>    {{ end }}  {{ index .Labels \\\"alertname\\\"}} : {{ index .Annotations \\\"description\\\"}}   <a href=\\\"{{ .GeneratorURL }}\\\">source</a><br/>{{end -}}{% endraw %}\"\n          msg_type: \"m.text\"  # Must be either `m.text` or `m.notice`\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration for ma1sd\nDESCRIPTION: This YAML configuration snippet enables the `ma1sd` identity server within the matrix-docker-ansible-deploy setup. It is used to explicitly enable `ma1sd`, which is no longer installed by default. Add this to `vars.yml` to install and configure ma1sd.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_55\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_ma1sd_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Install UVS with Ansible Playbook - Shell\nDESCRIPTION: This command runs the Ansible playbook to install and start the Matrix User Verification Service (UVS). It uses the `setup-all` and `start` tags. This ensures all configurations are applied and the service is running.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Mjolnir in vars.yml\nDESCRIPTION: This snippet shows the configuration needed in `vars.yml` to enable the Mjolnir bot. It sets `matrix_bot_mjolnir_enabled` to `true` and specifies the management room ID using `matrix_bot_mjolnir_management_room`. The placeholder `MANAGEMENT_ROOM_ID_HERE` should be replaced with the actual room ID.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable Mjolnir\nmatrix_bot_mjolnir_enabled: true\n\nmatrix_bot_mjolnir_management_room: \"MANAGEMENT_ROOM_ID_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Rename Ansible Variables (Paths and URLs)\nDESCRIPTION: This snippet outlines renamed Ansible variables, specifically those related to file paths and URLs for Riot Web. These changes enhance clarity and consistency within the playbook's configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_107\n\nLANGUAGE: text\nCODE:\n```\n- from `matrix_nginx_riot_web_data_path` to `matrix_riot_web_data_path`\n- from `matrix_riot_web_default_identity_server_url` to `matrix_identity_server_url`\n```\n\n----------------------------------------\n\nTITLE: Installing Mautrix Google Messages Bridge with Ansible Playbook\nDESCRIPTION: This code snippet shows the command to execute the Ansible playbook with specific tags to set up and start the Mautrix Google Messages bridge. The command targets the `setup.yml` playbook and uses the `setup-all` and `start` tags. This command requires Ansible to be installed and configured with access to the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-gmessages.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Proxying Traffic Through Matrix Server using sshuttle\nDESCRIPTION: This command uses sshuttle to proxy all network traffic through the Matrix server.  This can be useful to ensure that Facebook login attempts originate from the same IP address as the Matrix server, potentially avoiding login rejections.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-facebook.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nsshuttle -r root@matrix.example.com:22 0/0\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-etherpad Variables for Dimension - Ansible\nDESCRIPTION: These code snippets show how to configure the Etherpad integration with Dimension, specifically when using matrix-nginx-proxy. It requires setting `etherpad_nginx_proxy_dimension_integration_enabled` to true and specifying the `etherpad_hostname`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\netherpad_nginx_proxy_dimension_integration_enabled: true\netherpad_hostname: \"{{ matrix_server_fqn_dimension }}\"\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook - Shell\nDESCRIPTION: This command executes the Ansible playbook to set up and start Draupnir for All. It uses the `setup.yml` playbook and applies the `setup-all` and `start` tags. This command ensures that all necessary components are properly configured and running.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-appservice-draupnir-for-all.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Re-enable TLSv1 and TLSv1.1 for coturn\nDESCRIPTION: This configuration snippet re-enables TLSv1 and TLSv1.1 support for coturn, which are disabled by default for security reasons. Enabling these protocols allows supporting older clients that require them. This should be done with caution as it reduces overall security.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_58\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_coturn_tls_v1_enabled: true\nmatrix_coturn_tls_v1_1_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Cloning the Matrix Ansible Playbook with Git\nDESCRIPTION: This command clones the Matrix Docker Ansible Deploy playbook from GitHub to a local directory. It requires Git to be installed on the user's computer. The playbook is fetched into a new directory named `matrix-docker-ansible-deploy`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/spantaleev/matrix-docker-ansible-deploy.git\n```\n\n----------------------------------------\n\nTITLE: Extending Draupnir for All Configuration - YAML\nDESCRIPTION: This snippet demonstrates how to extend the default Draupnir for All configuration by overriding the `protectAllJoinedRooms` option to `true`.  This allows for custom configuration of the Draupnir instances managed by the appservice. This configuration needs to be added to `vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-appservice-draupnir-for-all.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_draupnir_for_all_configuration_extension_yaml: |\n  # Your custom YAML configuration goes here.\n  # This configuration extends the default starting configuration (`matrix_appservice_draupnir_for_all_configuration_yaml`).\n  #\n  # You can override individual variables from the default configuration, or introduce new ones.\n  #\n  # If you need something more special, you can take full control by\n  # completely redefining `matrix_appservice_draupnir_for_all_configuration_yaml`.\n  protectAllJoinedRooms: true\n```\n\n----------------------------------------\n\nTITLE: Disable HTTP/3 for Federation Entrypoint YAML Configuration\nDESCRIPTION: This configuration snippet demonstrates how to disable HTTP/3 specifically for the Matrix Federation entrypoint when using your own webserver. Disabling this setting also sets `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port_udp` to an empty value. Consider configuring HTTP/3 for your other reverse-proxy if desired.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n# Disable HTTP/3 for the federation entrypoint.\n# If you'd like HTTP/3, consider configuring it for your other reverse-proxy.\n#\n# Disabling this also sets `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port_udp` to an empty value.\n# If you'd like to keep HTTP/3 enabled here (for whatever reason), you may wish to explicitly\n# set `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port_udp` to something like '127.0.0.1:8449'.\nmatrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_http3_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enable ntfy web app - Ansible YAML\nDESCRIPTION: This code snippet demonstrates how to enable the ntfy web app by setting the `ntfy_web_root` variable in the `vars.yml` file. Enabling the web app allows users to subscribe to and push to topics directly from the browser, which can be useful for troubleshooting or using ntfy for other purposes besides UnifiedPush notifications for Matrix.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-ntfy.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nntfy_web_root: app\n```\n\n----------------------------------------\n\nTITLE: Add Dynamic Traefik Config File - YAML\nDESCRIPTION: This snippet creates a dynamic configuration file for Traefik using the `aux_file_definitions` variable. It defines a router and service to reverse-proxy traffic to a remote HTTPS server, terminating SSL at Traefik.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\naux_file_definitions:\n  - dest: \"{{ traefik_config_dir_path }}/provider_my_fancy_website.yml\"\n    content: |\n      http:\n        routers:\n          webserver-router:\n            rule: Host(`my-fancy-website.example.net`)\n            service: webserver-service\n            tls:\n              certResolver: default\n        services:\n          webserver-service:\n            loadBalancer:\n              servers:\n                - url: \"https://<internal webserver IP address>:<internal port>\"\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Level for Mautrix Google Chat - YAML\nDESCRIPTION: This code snippet allows you to configure the logging level for the mautrix-googlechat bridge. Setting `matrix_mautrix_googlechat_logging_level` to `DEBUG` will increase the verbosity of the logs, aiding in troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-googlechat.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_googlechat_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Shell Command to Remove docker-src Directories\nDESCRIPTION: This shell command recursively removes all `docker-src` directories within the `/matrix` directory. It's used to correct file permissions when self-building container images, particularly after changes in the playbook that affect how `docker-src` directories are created. This command should be run on the Matrix server itself.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_54\n\nLANGUAGE: shell\nCODE:\n```\nfind /matrix -maxdepth 2 -name 'docker-src' | xargs rm -rf\n```\n\n----------------------------------------\n\nTITLE: Increasing logging verbosity for Telegram bridge - YAML\nDESCRIPTION: This YAML snippet increases the logging verbosity for the Mautrix Telegram bridge to DEBUG. This is useful for troubleshooting issues. This should be added to your `vars.yml` file and the playbook should be re-run.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-telegram.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_telegram_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Sending Webhook Command to Bot (Text)\nDESCRIPTION: This snippet shows the command to send to the bridge bot to receive the webhook link. It's required for the bridge to function.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\n!webhook\n```\n\n----------------------------------------\n\nTITLE: Force SQLite and Downgrade mautrix-facebook\nDESCRIPTION: Configuration snippet to force the mautrix-facebook bridge to use SQLite and downgrade to a version that supports it. This is a temporary solution as the SQLite-supporting version will eventually break and lose support.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_65\n\nLANGUAGE: yaml\nCODE:\n```\n# Force-change the database engine to SQLite.\nmatrix_mautrix_facebook_database_engine: 'sqlite'\n\n# Force-downgrade to the last bridge version which supported SQLite.\nmatrix_mautrix_facebook_docker_image: \"{{ matrix_mautrix_facebook_docker_image_name_prefix }}tulir/mautrix-facebook:da1b4ec596e334325a1589e70829dea46e73064b\"\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` with the tags `setup-all` and `start`. This ensures that all setup tasks are run and the service is started. Requires Ansible to be installed and configured with the correct inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bluesky.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Porting Riot Web Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_riot_web_container_expose_port` variable with the `matrix_riot_web_container_http_host_bind_port` variable. It shows how to expose the Riot Web container port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_93\n\n\n\n----------------------------------------\n\nTITLE: Disable Authorization for UVS - YAML\nDESCRIPTION: This YAML configuration disables authorization requirements for the Matrix User Verification Service (UVS). This should be used with caution, as it removes access control to UVS endpoints.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_user_verification_service_uvs_require_auth: false\n```\n\n----------------------------------------\n\nTITLE: Clearing Postgres Database (Shell)\nDESCRIPTION: These commands stop the Postgres service, remove the database data directory, and restart the Postgres service. This is used to clear the database before retrying an import after a previous failure. It ensures a clean slate for the import process.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-postgres.md#_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\n# systemctl stop matrix-postgres\n# rm -rf /matrix/postgres/data/*\n# systemctl start matrix-postgres\n```\n\n----------------------------------------\n\nTITLE: Configuring Groq Agent in vars.yml with Ansible\nDESCRIPTION: This snippet demonstrates how to configure a Groq-powered Baibot agent by adding the provided configuration to the vars.yml file. It requires setting the API key and the desired text-generation model ID. The agent ID will be prefixed with `static/`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_agents_static_definitions_groq_enabled: true\n\nmatrix_bot_baibot_config_agents_static_definitions_groq_config_api_key: \"YOUR_API_KEY_HERE\"\n\n# Specify the text-generation agent you'd like to use\nmatrix_bot_baibot_config_agents_static_definitions_groq_config_text_generation_model_id: \"llama3-70b-8192\"\n\n# The playbook defines a default prompt for all statically-defined agents.\n# You can adjust it in the `matrix_bot_baibot_config_agents_static_definitions_prompt` variable,\n# or you can adjust it below only for the Groq agent.\n# matrix_bot_baibot_config_agents_static_definitions_groq_config_text_generation_prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n\n# Uncomment and adjust this part if you're not happy with these speech-to-text defaults:\n#\n# matrix_bot_baibot_config_agents_static_definitions_groq_config_speech_to_text_enabled: true\n# matrix_bot_baibot_config_agents_static_definitions_groq_config_speech_to_text_model_id: whisper-large-v3\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik Timeout Values in YAML\nDESCRIPTION: This code snippet demonstrates how to configure Traefik's transport.respondingTimeouts values (readTimeout, writeTimeout, idleTimeout) for the 'web' entrypoint using Ansible variables in a YAML file.  The `readTimeout` is set to 300 seconds, `writeTimeout` is set to no timeout, and `idleTimeout` is set to 180 seconds.  These variables cascade to other entrypoints unless overridden.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_config_entrypoint_web_transport_respondingTimeouts_readTimeout: 300s\n\n# 0s means \"no timeout\"\ntraefik_config_entrypoint_web_transport_respondingTimeouts_writeTimeout: 0s\n\ntraefik_config_entrypoint_web_transport_respondingTimeouts_idleTimeout: 180s\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This command demonstrates how to run the Ansible playbook with specific tags to set up and start the Mautrix Meta Messenger bridge. The `--tags` option specifies the tags to include in the run, ensuring that only the necessary tasks are executed. Using `setup-all,start` ensures all setup tasks and services are started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-messenger.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Establishing SSH Tunnel to Matrix Server (Bash)\nDESCRIPTION: This command establishes an SSH tunnel to the Matrix server, allowing access to services running on the server's localhost. It forwards local port 1799 to the server's localhost on port 1799.  You may need to adjust port numbers if 1799 is already in use.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# you may replace 1799 with an arbitrary port unbound on both machines\nssh -L 1799:localhost:1799 matrix.example.com\n```\n\n----------------------------------------\n\nTITLE: Setting Kakaotalk Appservice Logging Level\nDESCRIPTION: This configuration sets the logging level for the matrix-appservice-kakaotalk bridge to DEBUG.  Add this to your `vars.yml` file and re-run the playbook to increase logging verbosity for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-kakaotalk.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_kakaotalk_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (Bash)\nDESCRIPTION: This Bash snippet shows how to run the Ansible playbook with specific tags to set up and start the synapse-usage-exporter service. The command targets the `setup.yml` playbook using the `setup-all` and `start` tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-usage-exporter.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring Mistral Agent in vars.yml with Ansible\nDESCRIPTION: This snippet shows how to configure a Mistral-powered Baibot agent by adding the provided configuration to the vars.yml file. It requires setting the API key. The agent ID will be prefixed with `static/`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_agents_static_definitions_mistral_enabled: true\n\nmatrix_bot_baibot_config_agents_static_definitions_mistral_config_api_key: \"YOUR_API_KEY_HERE\"\n\n# The playbook defines a default prompt for all statically-defined agents.\n# You can adjust it in the `matrix_bot_baibot_config_agents_static_definitions_prompt` variable,\n# or you can adjust it below only for the Mistral agent.\n# matrix_bot_baibot_config_agents_static_definitions_mistral_config_text_generation_prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n\n# Uncomment and adjust this part if you're not happy with these defaults:\n# matrix_bot_baibot_config_agents_static_definitions_mistral_config_text_generation_model_id: mistral-large-latest\n```\n\n----------------------------------------\n\nTITLE: Trusting Self-Signed Certificates - YAML\nDESCRIPTION: This snippet configures Traefik to trust self-signed certificates on backend servers by setting `insecureSkipVerify` to `true` within `traefik_configuration_extension_yaml`.  This should be done with caution due to security implications.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntraefik_configuration_extension_yaml: |\n  providers:\n    file:\n      directory: /config/\n      watch: true\n      filename: \"\"\n  serversTransport:\n    insecureSkipVerify: true\n```\n\n----------------------------------------\n\nTITLE: Setting matrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_http3_enabled\nDESCRIPTION: Disables HTTP/3 support for the Matrix Federation API Traefik entrypoint. The default for this option is enabled (true).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-own-webserver.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_http3_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Porting Corporal Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_corporal_container_expose_ports` variable with the `matrix_corporal_container_http_gateway_host_bind_port` and `matrix_corporal_container_http_api_host_bind_port` variables. It shows how to expose the Corporal container ports.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_96\n\n\n\n----------------------------------------\n\nTITLE: Enabling SchildiChat Web in Ansible\nDESCRIPTION: This YAML snippet enables SchildiChat Web by setting the `matrix_client_schildichat_enabled` variable to `true` in the `vars.yml` file. This is a prerequisite for installing and configuring SchildiChat Web using the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_client_schildichat_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This shell command shows how to run the Ansible playbook with specific tags (`setup-all`, `start`) to install and start the matrix-ldap-registration-proxy.  Using specific tags allows for targeted execution of the playbook, focusing only on the relevant tasks for this component.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-ldap-registration-proxy.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configure Traefik TLS Domains for Matrix Synapse Federation\nDESCRIPTION: This snippet configures Traefik to use a wildcard certificate in addition to the base domain certificate for the Matrix Synapse federation endpoint. This ensures that both the base domain and other resources on the endpoint have valid certificates, fulfilling the Matrix specification requirements.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# To let Traefik know which domains' certificates to serve\nmatrix_synapse_container_labels_additional_labels: |\n  traefik.http.routers.matrix-synapse-federation-api.tls.domains.main=\"example.com\"\n  traefik.http.routers.matrix-synapse-federation-api.tls.domains.sans=\"*.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Viewing Synapse Logs via Journalctl\nDESCRIPTION: This command is used to view Synapse logs when Synapse is configured to log to the console (systemd's journald). The `-fu` flags ensure that the logs are followed in real-time and that the output is filtered to only show logs from the `matrix-synapse` service. This is necessary since Synapse no longer logs to text files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_82\n\nLANGUAGE: shell\nCODE:\n```\njournalctl -fu matrix-synapse\n```\n\n----------------------------------------\n\nTITLE: Enable Matrix Corporal Debug Mode - YAML\nDESCRIPTION: This YAML snippet enables debug mode for Matrix Corporal, increasing the logging verbosity. This setting is useful for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_corporal_debug: true\n```\n\n----------------------------------------\n\nTITLE: Shortened Command for Linking Slack Channel to Matrix Room\nDESCRIPTION: This is a shortened version of the link command, using single-letter arguments for brevity.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nlink -I CHANNELID -R !qporfwt:example.com -t xoxb-xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxx\n```\n\n----------------------------------------\n\nTITLE: Enabling Beeper LinkedIn bridge in vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable the beeper-linkedin bridge by adding `matrix_beeper_linkedin_enabled: true` to the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-beeper-linkedin.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_beeper_linkedin_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling matrix-reminder-bot configuration\nDESCRIPTION: This configuration snippet enables the matrix-reminder-bot, sets the password, and configures the timezone. It's designed to be placed in the `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-reminder-bot.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_matrix_reminder_bot_enabled: true\n\n# Uncomment and adjust this part if you'd like to use a username different than the default\n# matrix_bot_matrix_reminder_bot_matrix_user_id_localpart: bot.matrix-reminder-bot\n\n# Generate a strong password for the bot. You can create one with a command like `pwgen -s 64 1`.\nmatrix_bot_matrix_reminder_bot_matrix_user_password: PASSWORD_FOR_THE_BOT\n\n# Adjust this to your timezone\nmatrix_bot_matrix_reminder_bot_reminders_timezone: Europe/London\n```\n\n----------------------------------------\n\nTITLE: Enabling Appservice Webhooks in vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable the matrix-appservice-webhooks bridge and configure the API secret in the `vars.yml` file.  Uncomment the `use_appservice_legacy_authorization` if you need backwards compatibility with older Synapse versions (prior to 1.90.0).\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_appservice_webhooks_enabled: true\nmatrix_appservice_webhooks_api_secret: '<your_secret>'\n\n# As of Synapse 1.90.0, uncomment to enable the backwards compatibility (https://matrix-org.github.io/synapse/latest/upgrade#upgrading-to-v1900) that this bridge needs.\n# Note: This deprecated method is considered insecure.\n#\n# matrix_synapse_configuration_extension_yaml: |\n#   use_appservice_legacy_authorization: true\n```\n\n----------------------------------------\n\nTITLE: Setting Country Code for Phone Number Input in SchildiChat Web\nDESCRIPTION: This YAML snippet changes the default country code for phone number inputs in SchildiChat Web. The `matrix_client_schildichat_default_country_code` variable is set to \"FR\", which corresponds to France. Replace \"FR\" with the desired country code.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_client_schildichat_default_country_code: \"FR\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Level for Mautrix Signal in YAML\nDESCRIPTION: This YAML snippet configures the logging level for the mautrix-signal bridge.  Valid values are `fatal`, `error`, `warn`, `info`, `debug`, and `trace`.  This configuration should be added to the `vars.yml` file and the playbook should be re-run for the changes to take effect.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-signal.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# Valid values: fatal, error, warn, info, debug, trace\nmatrix_mautrix_signal_logging_level: 'debug'\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for SchildiChat Web\nDESCRIPTION: This shell command executes the Ansible playbook to set up SchildiChat Web. The command includes specific tags to ensure only the necessary tasks are executed, focusing on setup and starting the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-schildichat-web.md#_snippet_7\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling MX Puppet Steam in vars.yml (YAML)\nDESCRIPTION: This snippet demonstrates how to enable the mx-puppet-steam bridge by setting the `matrix_mx_puppet_steam_enabled` variable to `true` in the `vars.yml` file. This configuration is necessary for the Ansible playbook to install and configure the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-steam.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_steam_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Ansible Variable for SMS Bridge Extra Arguments\nDESCRIPTION: This variable is used to add extra arguments to the matrix-sms-bridge container. In this case, it's used to enable the `initialsync` Spring profile.  Added to `vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_72\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_sms_bridge_container_extra_arguments=['--env SPRING_PROFILES_ACTIVE=initialsync']\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Email2Matrix with Shell commands\nDESCRIPTION: This snippet disables and removes the Email2Matrix service and deletes the Email2Matrix directory. It relies on systemctl and rm commands available in the server's shell environment. It assumes the Email2Matrix service is named `matrix-email2matrix.service` and that the Email2Matrix files are stored in `/matrix/email2matrix`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-email2matrix.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsystemctl disable --now matrix-email2matrix.service\n\nrm -rf /matrix/email2matrix\n```\n\n----------------------------------------\n\nTITLE: Synapse Container Customization YAML Configuration\nDESCRIPTION: This snippet configures Synapse container image customization by enabling it and providing custom Dockerfile steps. It allows users to inject their own build steps into the Synapse image build process, offering a faster alternative to forking the repository and building from scratch. The configuration uses the `matrix_synapse_container_image_customizations_dockerfile_body_custom` variable to specify custom commands to be executed during the image build.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_42\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_container_image_customizations_enabled: true\n\nmatrix_synapse_container_image_customizations_dockerfile_body_custom: |\n RUN echo 'This is a custom step for building the customized Docker image for Synapse.'\n RUN echo 'You can override matrix_synapse_container_image_customizations_dockerfile_body_custom to add your own steps.'\n RUN echo 'You do NOT need to include a FROM clause yourself.'\n```\n\n----------------------------------------\n\nTITLE: Copying Sample Inventory Hosts File - Bash\nDESCRIPTION: This command copies a sample inventory hosts file from the examples directory to the inventory directory. This file defines the target hosts for the Ansible playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncp examples/hosts inventory/hosts\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook - Shell\nDESCRIPTION: This command executes the Ansible playbook to install and start the Discord bridge. It uses specific tags to ensure only the necessary tasks are performed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-discord.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Starting Postgres Service via Systemctl\nDESCRIPTION: This command is used to start the Postgres database server using systemctl. It's necessary to run this command before attempting to connect to the database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_60\n\nLANGUAGE: shell\nCODE:\n```\nsystemctl start matrix-postgres\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Full Setup and Upgrade\nDESCRIPTION: This snippet shows how to run the Ansible playbook with the `setup-all`, `ensure-matrix-users-created`, and `start` tags. This is required when components have been removed from `vars.yml` or have changed default install status. The `ensure-matrix-users-created` tag creates bot user accounts.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-upgrading-services.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Configure Traefik rule for Federation Endpoint in Matrix Synapse\nDESCRIPTION: This code snippet configures a Traefik rule to serve the federation endpoint for Matrix Synapse from any domain, as long as the path matches `/_matrix/`. This is necessary when using SRV federation, as some servers attempt to access the federation API using the resolved IP address instead of the domain name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# To serve the federation from any domain, as long as the path matches\nmatrix_synapse_container_labels_public_federation_api_traefik_rule: PathPrefix(`/_matrix/`)\n```\n\n----------------------------------------\n\nTITLE: Nginx Configuration for Matrix Web Traffic in NPM\nDESCRIPTION: This snippet shows the Nginx Proxy Manager configuration for routing Matrix web traffic. It defines the domain name, forwarding details, SSL settings, and a custom Nginx configuration for setting the maximum body size.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/examples/reverse-proxies/nginx-proxy-manager/README.md#_snippet_0\n\nLANGUAGE: nginx\nCODE:\n```\nclient_max_body_size 50M;\n```\n\n----------------------------------------\n\nTITLE: Copying Sample Host YAML File - Bash\nDESCRIPTION: This command copies a sample host YAML file, allowing specific configuration for each host. This is useful when running Ansible against multiple servers with different `sudo` credentials.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp examples/host.yml inventory/my_host1.yml\n```\n\n----------------------------------------\n\nTITLE: Removing Old Synapse Log Files\nDESCRIPTION: This command is used to remove old Synapse log files after upgrading, since Synapse no longer logs to text files. This prevents confusion and frees up disk space. It's recommended to execute this after upgrading to a version where Synapse logs to console instead of files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_83\n\nLANGUAGE: shell\nCODE:\n```\nrm -f /matrix/synapse/run/homeserver.log*\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This command executes the Ansible playbook with specific tags to set up and start the go-skype-bridge. The `--tags` option specifies the `setup-all` and `start` tags, ensuring that all necessary setup tasks are performed and the bridge is started. It assumes that you are in the base directory of the project.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-go-skype-bridge.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Go Skype Bridge in Ansible vars.yml\nDESCRIPTION: This configuration snippet enables the go-skype-bridge within the Ansible playbook by setting the `matrix_go_skype_bridge_enabled` variable to `true` in the `vars.yml` file. This triggers the playbook to install and configure the bridge during deployment.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-go-skype-bridge.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_go_skype_bridge_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (Shell)\nDESCRIPTION: This shell command executes the Ansible playbook to install and configure the Honoroit bot.  It uses the `setup-all`, `ensure-matrix-users-created`, and `start` tags to perform the necessary tasks. This command ensures the bot user is created and the bot is started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-honoroit.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Configuring IRC Bridge Logging with YAML\nDESCRIPTION: This YAML snippet extends the IRC bridge configuration to adjust logging behavior.  It defines the logging level for console/logfile output (e.g., \"debug\"), specifies the file paths for both regular logs (logfile) and error logs (errfile). The specified file paths are relative to the project directory.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-irc.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_irc_configuration_extension_yaml: |\n  logging:\n    # Level to log on console/logfile.\n    # Valid values: error, warn, info, debug\n    level: \"debug\"\n    # The file location to log to. This is relative to the project directory.\n    logfile: \"debug.log\"\n    # The file location to log errors to. This is relative to the project directory.\n    errfile: \"errors.log\"\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Setup All with Just - Shell\nDESCRIPTION: This shell command uses the `just` program to execute all setup tasks.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\njust setup-all\n```\n\n----------------------------------------\n\nTITLE: Configure CoTURN Container Volumes with Wildcard Certificates (YAML/Jinja)\nDESCRIPTION: This snippet defines the `matrix_coturn_container_additional_volumes` variable, which specifies additional volumes to mount into the Matrix CoTURN container. It dynamically creates a list of volume mappings for the certificate and private key if Traefik is used as a reverse proxy, the certificate dumper is enabled, and TLS is enabled for CoTURN. The source paths are constructed using Ansible variables, pointing to the dumped wildcard certificate files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_coturn_container_additional_volumes: |+\n  {{\n    (\n      [\n       {\n         'src': (traefik_certs_dumper_dumped_certificates_dir_path +  '/*.' + matrix_domain + '/certificate.crt'),\n         'dst': '/certificate.crt',\n         'options': 'ro',\n       },\n       {\n         'src': (traefik_certs_dumper_dumped_certificates_dir_path +  '/*.' + matrix_domain + '/privatekey.key'),\n         'dst': '/privatekey.key',\n         'options': 'ro',\n       },\n      ] if matrix_playbook_reverse_proxy_type in ['playbook-managed-traefik', 'other-traefik-container'] and traefik_certs_dumper_enabled and matrix_coturn_tls_enabled else []\n    )\n  }}\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Setup\nDESCRIPTION: This command executes the Ansible playbook to set up and start Mjolnir. It uses the specified inventory file and tags to target specific tasks.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-mjolnir.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Configuring aux role for GitHub private key YAML\nDESCRIPTION: This YAML configuration snippet configures the `aux` role to copy the GitHub private key file from a local path on the Ansible control node to the correct path on the target server. Ensure the `matrix_hookshot_github_private_key` variable is empty when using this method.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\naux_file_definitions:\n  - dest: \"{{ matrix_hookshot_base_path }}/{{ matrix_hookshot_github_private_key_file }}\"\n    content: \"{{ lookup('file', '/path/to/your-github-private-key.pem') }}\"\n    mode: '0400'\n    owner: \"{{ matrix_user_username }}\"\n    group: \"{{ matrix_user_groupname }}\"\n```\n\n----------------------------------------\n\nTITLE: Configure DNS-01 Challenge for Let's Encrypt in Traefik\nDESCRIPTION: This snippet adds a new ACME configuration to Traefik that uses the DNS-01 challenge for obtaining wildcard certificates from Let's Encrypt. It configures the DNS challenge provider (e.g., Cloudflare) and specifies the resolvers to be used.  This configuration allows obtaining wildcard certificates necessary for SRV delegation.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n# 1. Add a new ACME configuration without having to disable the default one, since it would have a wide range of side effects\ntraefik_configuration_extension_yaml: |\n  certificatesResolvers:\n    dns:\n      acme:\n        # To use a staging endpoint for testing purposes, uncomment the line below.\n        # caServer: https://acme-staging-v02.api.letsencrypt.org/directory\n        dnsChallenge:\n          provider: cloudflare\n          resolvers:\n            - \"1.1.1.1:53\"\n            - \"8.8.8.8:53\"\n        storage: {{ traefik_config_certificatesResolvers_acme_storage | to_json }}\n```\n\n----------------------------------------\n\nTITLE: Disabling Portal Bridging in vars.yml\nDESCRIPTION: This YAML snippet disables portal bridging, preventing the bot from automatically creating and bridging Matrix rooms to Discord rooms based on the room name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-discord.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_discord_bridge_disablePortalBridging: true\n```\n\n----------------------------------------\n\nTITLE: Example HTML Form - HTML\nDESCRIPTION: This is an example HTML form that submits data to the Buscarron bot. The `action` attribute specifies the URL of the form endpoint.  The `method` is set to `POST`. The form should include the necessary input fields for the data you want to submit. Ensure that the form URL matches the `name` defined in the `matrix_bot_buscarron_forms` configuration in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-buscarron.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"POST\" action=\"https://buscarron.example.com/contact\">\n<!--your fields-->\n</form>\n```\n\n----------------------------------------\n\nTITLE: Disable Coturn STUN Port UDP Exposure\nDESCRIPTION: This snippet demonstrates how to disable the exposure of the Coturn STUN port (3478) over UDP.  Setting the `matrix_coturn_container_stun_plain_host_bind_port_udp` variable to an empty string effectively closes the UDP port, mitigating potential DDoS amplification attacks.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_coturn_container_stun_plain_host_bind_port_udp: \"\"\n```\n\n----------------------------------------\n\nTITLE: Customizing Maubot URL in Ansible (YAML)\nDESCRIPTION: This snippet demonstrates how to customize the default hostname and path prefix for maubot in the `vars.yml` file. Changing these variables allows you to make the service available at a different address. DNS record update might be required if hostname is changed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-maubot.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_bot_maubot_hostname: maubot.example.com\nmatrix_bot_maubot_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Shell: Performing a real syn2mas migration\nDESCRIPTION: This command executes the syn2mas migration process using the `just` command with the `matrix-authentication-service-syn2mas` tag.  It performs the actual data migration from Synapse to Matrix Authentication Service. It is important to ensure you have backed up your Postgres database before executing this command.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-authentication-service.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags matrix-authentication-service-syn2mas\n```\n\n----------------------------------------\n\nTITLE: Update Ansible Variable (LDAP Base DN)\nDESCRIPTION: This change updates the Ansible variable for configuring the LDAP base DN for mxisd to support multiple base DNs. This is a breaking change that requires users to update their configuration files from a single string to an array of strings.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_102\n\nLANGUAGE: text\nCODE:\n```\n- before: `matrix_mxisd_ldap_connection_baseDn: OU=Users,DC=example,DC=org`\n- after: `matrix_mxisd_ldap_connection_baseDns: ['OU=Users,DC=example,DC=org']`\n```\n\n----------------------------------------\n\nTITLE: Adding Postgres Password to Ansible Inventory\nDESCRIPTION: This snippet shows how to add the generated Postgres password to the Ansible inventory file. This password will be used by the playbook to connect to the Postgres database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_59\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_postgres_connection_password: 'YOUR_POSTGRES_PASSWORD_HERE'\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags\nDESCRIPTION: This command executes the Ansible playbook with specific tags to set up and start the Kakaotalk appservice. It ensures all necessary setup tasks are performed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-kakaotalk.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Generating Password Hash with Docker\nDESCRIPTION: This command generates a password hash for use when updating the password directly in the Postgres database. It requires SSH access to the server and that all services have been started. The `-c /data/homeserver.yaml` flag specifies the configuration file for Synapse.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/updating-users-passwords.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker exec -it matrix-synapse /usr/local/bin/hash_password -c /data/homeserver.yaml\n```\n\n----------------------------------------\n\nTITLE: Define Static Policy File - YAML\nDESCRIPTION: This YAML snippet defines the content of a static policy file for Matrix Corporal, including schema version, identification stamp, flags, managed community IDs, managed room IDs, and users.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\n# Modify the policy below as you see fit\naux_file_definitions:\n  - dest: \"{{ matrix_corporal_config_dir_path }}/policy.json\"\n    content: |\n      {\n        \"schemaVersion\": 1,\n        \"identificationStamp\": \"stamp-1\",\n        \"flags\": {\n          \"allowCustomUserDisplayNames\": false,\n          \"allowCustomUserAvatars\": false,\n          \"forbidRoomCreation\": false,\n          \"forbidEncryptedRoomCreation\": true,\n          \"forbidUnencryptedRoomCreation\": false,\n          \"allowCustomPassthroughUserPasswords\": true,\n          \"allowUnauthenticatedPasswordResets\": false,\n          \"allow3pidLogin\": false\n        },\n        \"managedCommunityIds\": [],\n        \"managedRoomIds\": [],\n        \"users\": []\n      }\n```\n\n----------------------------------------\n\nTITLE: Debugging ddclient Configuration outside Docker\nDESCRIPTION: This command executes the ddclient tool outside of the container for debugging purposes.  It specifies the configuration file, disables daemon mode, enables debugging and verbose output, and suppresses quiet mode.  Requires ddclient to be installed on the host system.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dynamic-dns.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nddclient -file ./ddclient.conf -daemon=0 -debug -verbose -noquiet\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook with Specific Tags in Shell\nDESCRIPTION: This shell command executes the Ansible playbook with specified tags for setting up and starting the Matrix server. It uses the `setup-all` and `start` tags to configure the server and initiate the services. It uses the inventory file to target the hosts defined in it.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This shell command executes the Ansible playbook `setup.yml` with specific tags (`setup-all` and `start`). This will install and start the mautrix-signal bridge, along with other components configured in the playbook.  It assumes that the inventory file is located at `inventory/hosts`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-signal.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Disable Services for Low-Power Server in YAML\nDESCRIPTION: This YAML snippet disables certain services to optimize resource usage on a low-power server.  It disables email notifications, unreliable audio/video calls, and Synapse presence tracking to reduce memory consumption. Modifying these variables directly impacts the functionality of the services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Disabling this will prevent email-notifications and other such things from working.\nexim_relay_enabled: false\n\n# You can also disable this to save more RAM,\n# at the expense of audio/video calls being unreliable.\nmatrix_coturn_enabled: false\n\n# This makes Synapse not keep track of who is online/offline.\n#\n# Keeping track of this and announcing such online-status in federated rooms with\n# hundreds of servers inside is insanely heavy (https://github.com/matrix-org/synapse/issues/3971).\n#\n# If your server does not federate with hundreds of others, enabling this doesn't hurt much.\nmatrix_synapse_presence_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Verbosity in vars.yml\nDESCRIPTION: This snippet shows how to adjust the logging verbosity for the Mautrix Meta Messenger bridge.  By setting the `matrix_mautrix_meta_messenger_logging_min_level` variable, you can control the level of detail in the logs, aiding in troubleshooting and debugging. Valid levels include: panic, fatal, error, warn, info, debug, trace.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-messenger.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# This bridge uses zerolog, so valid levels are: panic, fatal, error, warn, info, debug, trace\nmatrix_mautrix_meta_messenger_logging_min_level: debug\n```\n\n----------------------------------------\n\nTITLE: Postgres Database Migration Queries\nDESCRIPTION: This set of SQL queries performs several database migrations, including creating a new database 'matrix', altering ownership of existing databases, renaming the 'homeserver' database to 'synapse', and modifying the 'synapse' role. These migrations are required to update the database schema after changes in the matrix-docker-ansible-deploy project.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_63\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE matrix OWNER matrix;\n\nALTER DATABASE postgres OWNER TO matrix;\nALTER DATABASE template0 OWNER TO matrix;\nALTER DATABASE template1 OWNER TO matrix;\n\n\\c matrix;\n\nALTER DATABASE homeserver RENAME TO synapse;\n\nALTER ROLE synapse NOSUPERUSER NOCREATEDB NOCREATEROLE;\n\n\\quit\n```\n\n----------------------------------------\n\nTITLE: Disable and Stop Systemd Service for mx-puppet-skype\nDESCRIPTION: This command stops and disables the systemd service associated with the mx-puppet-skype bridge. It is executed on the server to prevent the bridge from starting automatically.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl disable --now matrix-mx-puppet-skype\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-etherpad Variables for Traefik - Ansible\nDESCRIPTION: This snippet describes the configuration changes required to use Etherpad with Traefik after the `matrix-etherpad` role was relocated.  Users need to define their own `etherpad_hostname` and `etherpad_path_prefix` as appropriate for their setup.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\ndefine your own `etherpad_hostname` and `etherpad_path_prefix` as you see fit\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This shell command demonstrates how to run the Ansible playbook with specific tags to set up Postmoogle, create Matrix users, and start the service. The tags `setup-all`, `ensure-matrix-users-created`, and `start` are used to control which tasks are executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-postmoogle.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Extracting translation templates\nDESCRIPTION: Executes a shell script to extract English translation templates from the Markdown files, storing them in the translation-templates/ directory. This prepares the base for creating translations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./bin/extract-translation-templates.sh\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags\nDESCRIPTION: This shell command executes the Ansible playbook to set up the Instagram bridge and start related services. The `--tags` option specifies the `setup-all` and `start` tags, ensuring that all necessary tasks for setting up the bridge and initiating the services are executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-instagram.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Initializing Git Repository - Bash\nDESCRIPTION: This command initializes a Git repository inside the inventory directory, allowing the user to track changes to their configuration files. This is optional but recommended for version control.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit init\n```\n\n----------------------------------------\n\nTITLE: Nginx Configuration for Reverse Proxying Matrix Well-Known Files\nDESCRIPTION: This Nginx configuration snippet sets up a reverse proxy for the /.well-known/matrix location to forward requests to the Matrix domain's server. This allows the base domain to serve the necessary well-known files for Matrix service discovery without needing to copy files manually. No extra HTTP headers for CORS are needed in this setup, as the Matrix server handles those configurations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-well-known.md#_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\nlocation /.well-known/matrix {\n    proxy_pass https://matrix.example.com/.well-known/matrix;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n}\n```\n\n----------------------------------------\n\nTITLE: Drop mx-puppet-skype Database\nDESCRIPTION: This command connects to the PostgreSQL database using `matrix-postgres-cli` and executes a SQL query to drop the `matrix_mx_puppet_skype` database. This removes the database associated with the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\n/usr/local/bin/matrix-postgres-cli\n```\n\nLANGUAGE: sql\nCODE:\n```\nDROP DATABASE matrix_mx_puppet_skype;\n```\n\n----------------------------------------\n\nTITLE: Porting Synapse Client API Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_synapse_container_expose_client_api_port` variable with the `matrix_synapse_container_client_api_host_bind_port` variable for exposing the Synapse client API port. It binds the port to localhost on port 8008.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_90\n\n\n\n----------------------------------------\n\nTITLE: Disabling Local Database Authentication in Matrix Synapse with YAML\nDESCRIPTION: This configuration snippet disables Synapse's local database authentication, forcing users to authenticate only against configured password providers.  This setting is defined within the `vars.yml` file of the Ansible inventory.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-rest-auth.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_password_config_localdb_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Telegram bridge configuration - YAML\nDESCRIPTION: This YAML snippet enables the Mautrix Telegram bridge, configures the Telegram API ID, and the Telegram API Hash. Replace `YOUR_TELEGRAM_APP_ID` and `YOUR_TELEGRAM_API_HASH` with your actual Telegram application credentials obtained from my.telegram.org/apps.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-telegram.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_telegram_enabled: true\nmatrix_mautrix_telegram_api_id: YOUR_TELEGRAM_APP_ID\nmatrix_mautrix_telegram_api_hash: YOUR_TELEGRAM_API_HASH\n```\n\n----------------------------------------\n\nTITLE: Increase UVS Logging Verbosity - YAML\nDESCRIPTION: This YAML configuration increases the logging verbosity of the Matrix User Verification Service (UVS).  It sets the log level to `debug` to provide more detailed logging information for troubleshooting purposes. See the linked GitHub repository for other available logging levels.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-user-verification-service.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n# See choices here: https://github.com/winstonjs/winston#logging-levels\nmatrix_user_verification_service_uvs_log_level: debug\n```\n\n----------------------------------------\n\nTITLE: Initializing Cactus Comments with JavaScript\nDESCRIPTION: This JavaScript snippet initializes the Cactus Comments section on a webpage. It uses the `initComments` function to configure the comment section, specifying the DOM node, the default homeserver URL, the server name, and the site name.  Make sure to replace `example.com` and `YOUR_SITE_NAME_HERE` with your actual values.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<script>\ninitComments({\n  node: document.getElementById(\"comment-section\"),\n  defaultHomeserverUrl: \"https://matrix.example.com:8448\",\n  serverName: \"example.com\",\n  siteName: \"YOUR_SITE_NAME_HERE\",\n  commentSectionId: \"1\"\n})\n</script>\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Facebook Bridge with Ansible\nDESCRIPTION: This snippet shows how to enable the Mautrix Facebook bridge by setting the `matrix_mautrix_facebook_enabled` variable to `true` in the `vars.yml` file. This configuration is a prerequisite for installing and using the bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-facebook.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_facebook_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This command demonstrates how to run the Ansible playbook with specific tags to set up the matrix-registration-bot. It utilizes the `setup-all`, `ensure-matrix-users-created`, and `start` tags.  The `ensure-matrix-users-created` tag ensures that the bot's user account is automatically created.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-registration-bot.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Migrating Telegram Bridge Configuration\nDESCRIPTION: This snippet describes how to migrate manual changes made to the Telegram bridge configuration to the `matrix_mautrix_telegram_configuration_extension_yaml` variable, ensuring the playbook applies them.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_86\n\n\n\n----------------------------------------\n\nTITLE: Porting Synapse Metrics API Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_synapse_container_expose_metrics_port` variable with the `matrix_synapse_container_metrics_api_host_bind_port` variable. It shows how to expose the Synapse metrics API port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_92\n\n\n\n----------------------------------------\n\nTITLE: Enabling WeChat Bridge in Ansible vars.yml (YAML)\nDESCRIPTION: This snippet shows how to enable the matrix-wechat bridge by setting the `matrix_wechat_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This is a prerequisite step for installing and configuring the bridge using the Ansible playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-wechat.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_wechat_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Resetting Password via Synapse Admin API\nDESCRIPTION: This curl command uses the Synapse User Admin API to reset a user's password. It requires an access token from a server admin account. Replace `ACCESS_TOKEN_HERE` with the valid access token and ensure the URL matches your Matrix homeserver address. This method logs the user out of all their clients.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/updating-users-passwords.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ncurl -XPOST -d '{ \"new_password\": \"correct_horse_battery_staple\" }' \"https://matrix.example.com/_matrix/client/r0/admin/reset_password/@alice:example.com?access_token=ACCESS_TOKEN_HERE\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Specific Tags\nDESCRIPTION: This snippet shows the command to run the Ansible playbook with specific tags to install and start the mautrix-twitter bridge. It requires Ansible to be installed and the `inventory/hosts` and `setup.yml` files to be present. This will execute only the tasks tagged with `setup-all` and `start`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-twitter.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Disabling MMR Signing Key Generation - YAML\nDESCRIPTION: This snippet disables the automatic generation of a signing key for matrix-media-repo during playbook execution.  If set to `false`, the user must manually generate and configure the signing key.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_8\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_media_repo_generate_signing_key: false\n```\n\n----------------------------------------\n\nTITLE: Pinning Synapse version for Postgres compatibility (YAML)\nDESCRIPTION: This configuration snippet pins the Synapse version to v1.121.1, the last version compatible with Postgres v11 and v12. This is useful for users who are not yet ready to upgrade their Postgres setup to v13 or newer. This is a temporary workaround.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# Pinning to the last Synapse version which supports Postgres v11 and v12.\nmatrix_synapse_version: v1.121.1\n```\n\n----------------------------------------\n\nTITLE: Disabling Guest Access for Element Call in Dendrite\nDESCRIPTION: This code snippet demonstrates how to allow guest access for Element Call in Dendrite homeserver by disabling the default setting. Setting `matrix_dendrite_guests_disabled` to `false` allows guest access.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-element-call.md#_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\nmatrix_dendrite_guests_disabled: false\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Installation\nDESCRIPTION: This command runs the Ansible playbook to install and start the Mautrix Instagram bridge. It uses the `setup-all` and `start` tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-instagram.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Themes Manually for Element Web in Ansible\nDESCRIPTION: This snippet demonstrates how to define custom themes manually for Element Web by adjusting the `matrix_client_element_setting_defaults_custom_themes` variable in the Ansible playbook's `vars.yml` file. This controls the `setting_defaults.custom_themes` setting in the Element Web configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# Controls the `setting_defaults.custom_themes` setting of the Element Web configuration.\nmatrix_client_element_setting_defaults_custom_themes: []\n```\n\n----------------------------------------\n\nTITLE: Enabling Appservice Double Puppet - YAML\nDESCRIPTION: This configuration enables the Appservice method for double-puppeting in Mautrix bridges. It is a recommended replacement for Shared Secret Auth which is being phased out.  The configuration sets the `matrix_appservice_double_puppet_enabled` variable to `true`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_appservice_double_puppet_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Encryption for All Bridges\nDESCRIPTION: This snippet shows how to enable encryption for all Mautrix bridges that support it. It sets both `matrix_bridges_encryption_enabled` and `matrix_bridges_encryption_default` to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bridges_encryption_enabled: true\nmatrix_bridges_encryption_default: true\n```\n\n----------------------------------------\n\nTITLE: Stopping Matrix Services with Ansible\nDESCRIPTION: This command uses Ansible to stop all Matrix-related services on the target server. It runs the `setup.yml` playbook against the hosts defined in the `inventory/hosts` file, applying the 'stop' tag. If Ansible is not working, equivalent `systemctl` commands can be used directly on the server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=stop\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook for Setup\nDESCRIPTION: This command runs the Ansible playbook to set up and start the matrix-bot-go-neb bot. It uses the `setup-all` and `start` tags to ensure all necessary components are configured and the bot is running.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-go-neb.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Ansible Variable for SQLite Database Engine\nDESCRIPTION: This variable is used to specify that a service should use SQLite as its database engine. It can be added to the `vars.yml` file for each service.  Some services use `nedb` instead of `sqlite`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_67\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_COMPONENT_database_engine: sqlite\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with setup-all and start tags\nDESCRIPTION: This command executes the Ansible playbook with the `setup-all` and `start` tags. It ensures that all necessary configurations and services are set up and started. Requires Ansible to be installed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dynamic-dns.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Customize Riot config.json\nDESCRIPTION: This code snippet shows how to customize parts of Riot's `config.json` using Ansible variables.  This allows users to configure various Riot settings, such as disabling custom URLs and guests, and configuring integration manager URLs.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_104\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_riot_web_disable_custom_urls: true\nmatrix_riot_web_disable_guests: true\nmatrix_riot_web_integrations_ui_url: \"https://scalar.vector.im/\"\nmatrix_riot_web_integrations_rest_url: \"https://scalar.vector.im/api\"\nmatrix_riot_web_integrations_widgets_urls: \"https://scalar.vector.im/api\"\nmatrix_riot_web_integrations_jitsi_widget_url: \"https://scalar.vector.im/api/widgets/jitsi.html\"\n```\n\n----------------------------------------\n\nTITLE: Checking Outgoing IPv6 Connectivity with Docker\nDESCRIPTION: This command runs a temporary Docker container using the `quay.io/curl/curl:latest` image to check outgoing IPv6 connectivity. It connects to the `matrix-homeserver` network and uses `curl` to fetch the IPv6 address from `https://icanhazip.com`. This verifies that the container can reach IPv6 addresses.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm --network=matrix-homeserver quay.io/curl/curl:latest curl -6 https://icanhazip.com\n```\n\n----------------------------------------\n\nTITLE: Installing matrix-registration with Ansible (Shell)\nDESCRIPTION: This command uses `ansible-playbook` to install and start matrix-registration.  The `--tags=setup-all,start` option ensures that all necessary setup tasks are executed. This is a conservative command that ensures everything is correctly configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-registration.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Removing Ansible Package (yum)\nDESCRIPTION: This command removes the Ansible package using the yum package manager, typically used on CentOS, RHEL, and Fedora systems. This is a step in upgrading Ansible using pip.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nyum remove ansible\n```\n\n----------------------------------------\n\nTITLE: Configure REST Auth for Matrix Corporal - YAML\nDESCRIPTION: This YAML snippet configures the REST authentication password provider module, which is necessary for Interactive User Authentication to work when Matrix Corporal is the primary authentication provider.  It enables the module and sets the endpoint.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-corporal.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\n# When matrix-corporal is acting as the primary authentication provider,\n# you need to set up the REST authentication password provider module\n# to make Interactive User Authentication work.\n# This is necessary for certain user actions (like E2EE, device management, etc).\n#\n# See configuring-playbook-rest-auth.md\nmatrix_synapse_ext_password_provider_rest_auth_enabled: true\nmatrix_synapse_ext_password_provider_rest_auth_endpoint: \"http://matrix-corporal:41080/_matrix/corporal\"\n```\n\n----------------------------------------\n\nTITLE: Running the Ansible Playbook - Shell\nDESCRIPTION: This shell command executes the Ansible playbook to install and start the MX Puppet Slack bridge. It uses the `setup-all` and `start` tags to ensure all necessary components are configured and running. This command is preferred over `install-all` to ensure clear error reporting if something is broken.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-slack.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Meta Instagram Bridge - YAML\nDESCRIPTION: This code snippet shows how to enable the Mautrix Meta Instagram bridge by setting the `matrix_mautrix_meta_instagram_enabled` variable to `true` in your `inventory/host_vars/matrix.example.com/vars.yml` file. This is the basic step to enable the Instagram bridge functionality.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-instagram.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_meta_instagram_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-ntfy Variables (Ansible)\nDESCRIPTION: This snippet demonstrates the necessary variable updates after the `matrix-ntfy` role was extracted. If you're using Ntfy, you must change your variable references in your `vars.yml` to reflect the new role name and structure. This ensures that your Ntfy configuration continues to work correctly after the role migration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_ntfy_ -> ntfy_\n```\n\n----------------------------------------\n\nTITLE: Opening Postgres Shell\nDESCRIPTION: This command opens a Postgres shell, allowing the user to execute SQL queries directly against the database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_61\n\nLANGUAGE: shell\nCODE:\n```\n/usr/local/bin/matrix-postgres-cli\n```\n\n----------------------------------------\n\nTITLE: Customize Riot Web Server Name - YAML\nDESCRIPTION: This snippet shows the YAML variable used to customize the server name displayed in Riot-web's login page. The `matrix_riot_web_default_server_name` variable, defaults to the `matrix_domain`, allowing you to customize the displayed name.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_79\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_riot_web_default_server_name: \"{{ matrix_domain }}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging Level\nDESCRIPTION: This snippet details how to specify the logging level by setting the `matrix_mautrix_SERVICENAME_logging_level` in `vars.yml`. Possible values: `trace`, `debug`, `info`, `warn`, `error` or `fatal`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_10\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_mautrix_SERVICENAME_logging_level: warn\n```\n\n----------------------------------------\n\nTITLE: Enabling Relay Mode for All Bridges\nDESCRIPTION: This snippet shows how to enable relay mode for all Mautrix bridges that support it. It sets the `matrix_bridges_relay_enabled` variable to `true` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-bridges.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bridges_relay_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Enabling GroupMe bridge - YAML\nDESCRIPTION: This snippet shows how to enable the mx-puppet-groupme bridge by setting the `matrix_mx_puppet_groupme_enabled` variable to `true` in the `vars.yml` file. This tells the Ansible playbook to install and configure the GroupMe bridge.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mx-puppet-groupme.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mx_puppet_groupme_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Creating Python virtual environment\nDESCRIPTION: Creates a Python virtual environment using the virtualenv tool and activates it. This isolates the project's dependencies.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvirtualenv .venv\n```\n\n----------------------------------------\n\nTITLE: Executing Ansible Playbook for State Compression (Bash)\nDESCRIPTION: This command executes an Ansible playbook to run rust-synapse-compress-state, optimizing state tables used by Synapse.  It uses the inventory file 'inventory/hosts' and applies the 'rust-synapse-compress-state' tag.  An optional extra variable can be passed to adjust the minimum number of state group rows for compression.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=rust-synapse-compress-state\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook to Install Static Files (Shell)\nDESCRIPTION: This command executes the Ansible playbook to install the Matrix static files and start the services. It uses the `install-matrix-static-files` tag to optimize the execution. Ensure that Ansible is installed and configured correctly before running this command.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-matrix-static-files,start\n```\n\n----------------------------------------\n\nTITLE: Listing registration tokens with Ansible (Shell)\nDESCRIPTION: This command uses `ansible-playbook` to list existing user registration tokens. The `--tags=list-matrix-registration-tokens` option specifies the task to run. This displays the existing tokens for management purposes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-registration.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml \\\n--tags=list-matrix-registration-tokens\n```\n\n----------------------------------------\n\nTITLE: Install Matrix static files and start services\nDESCRIPTION: Installs the Matrix static files and starts the services by running the Ansible playbook with the `install-matrix-static-files` and `start` tags. This finalizes the installation process by configuring delegation.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_8\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=install-matrix-static-files,start\n```\n\n----------------------------------------\n\nTITLE: Modifying Docker Daemon Options Manually (JSON)\nDESCRIPTION: If Docker is managed manually, this snippet demonstrates how to enable IPv6 at the Docker daemon level by adding `{\"experimental\": true, \"ip6tables\": true}` to the Docker daemon options.  A restart of the Docker service is required for this configuration to take effect.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\"experimental\": true, \"ip6tables\": true}\n```\n\n----------------------------------------\n\nTITLE: Adjusting Buscarron URL - YAML\nDESCRIPTION: This configuration allows you to customize the hostname and path prefix used for the Buscarron service. By setting `matrix_bot_buscarron_hostname` and `matrix_bot_buscarron_path_prefix`, you can make the service available under a different domain or subpath than the default. This requires updating DNS records accordingly if a different domain is used.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-buscarron.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Switch to the domain used for Matrix services (`matrix.example.com`),\n# so we won't need to add additional DNS records for Buscarron.\nmatrix_bot_buscarron_hostname: \"{{ matrix_server_fqn_matrix }}\"\n\n# Expose under the /buscarron subpath\nmatrix_bot_buscarron_path_prefix: /buscarron\n```\n\n----------------------------------------\n\nTITLE: Enabling Dimension in vars.yml\nDESCRIPTION: This YAML snippet enables Dimension in the `vars.yml` file and sets the access token. Replace `ACCESS_TOKEN_HERE` with the actual access token obtained for Dimension to connect to your homeserver.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-dimension.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_dimension_enabled: true\n\nmatrix_dimension_access_token: \"ACCESS_TOKEN_HERE\"\n```\n\n----------------------------------------\n\nTITLE: Configuring logging verbosity for matrix-reminder-bot\nDESCRIPTION: This configuration snippet adjusts the logging level of the matrix-reminder-bot to DEBUG.  It should be added to your `vars.yml` file and the playbook re-run to apply the changes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-matrix-reminder-bot.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_matrix_reminder_bot_configuration_extension_yaml: |\n  logging:\n    # Valid values: ERROR, WARNING, INFO, DEBUG\n    level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Ansible Variable for OpenID API Exposure\nDESCRIPTION: This Ansible variable controls whether the OpenID APIs are exposed on the federation port when federation is disabled. Setting it to `false` prevents the exposure of these APIs. Used in `vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_71\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_federation_port_openid_resource_required: false\n```\n\n----------------------------------------\n\nTITLE: Ansible Command to Re-run Playbook\nDESCRIPTION: This Ansible command re-runs the playbook, executing all tasks tagged with `setup-all`. It's used during upgrade processes to ensure all necessary configurations are applied. The `-i inventory/hosts` specifies the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_52\n\nLANGUAGE: ansible\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all\n```\n\n----------------------------------------\n\nTITLE: Porting Discord Appservice Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_appservice_discord_container_expose_client_server_api_port` variable with the `matrix_appservice_discord_container_http_host_bind_port` variable. It shows how to expose the Discord appservice container port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_98\n\n\n\n----------------------------------------\n\nTITLE: Unsetting Cache Auto-Tuning (YAML)\nDESCRIPTION: This YAML snippet disables cache autotuning by unsetting its configuration variables. This is done to prevent synapse from tuning the cache automatically.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_cache_autotuning_max_cache_memory_usage: ''\nmatrix_synapse_cache_autotuning_target_cache_memory_usage: ''\nmatrix_synapse_cache_autotuning_min_cache_ttl: ''\n```\n\n----------------------------------------\n\nTITLE: Cloning Ansible Playbook using Git\nDESCRIPTION: This command uses Git to clone the matrix-docker-ansible-deploy repository from GitHub. It creates a new directory named `matrix-docker-ansible-deploy` in the current location. All subsequent installation commands should be run from within this directory.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/getting-the-playbook.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/spantaleev/matrix-docker-ansible-deploy.git\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook to Install Slack Appservice\nDESCRIPTION: This shell command executes the Ansible playbook to install and start the matrix-appservice-slack.  The `--tags` option specifies the tasks to run.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Heisenbridge in Ansible Configuration (YAML)\nDESCRIPTION: This snippet shows how to enable Heisenbridge and set the owner in the `vars.yml` file.  Setting the owner is optional, as the first local user to DM `@heisenbridge:example.com` will become the owner. If no local user is available, explicitly setting it is required. The `matrix_domain` variable is used to define the domain.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-heisenbridge.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_heisenbridge_enabled: true\n\n# Setting the owner is optional as the first local user to DM `@heisenbridge:example.com` will be made the owner.\n# If you are not using a local user you must set it as otherwise you can't DM it at all.\nmatrix_heisenbridge_owner: \"@alice:{{ matrix_domain }}\"\n\n# Uncomment to enable identd on host port 113/TCP (optional)\n# matrix_heisenbridge_identd_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Disable matrix-reminder-bot allowlist in vars.yml\nDESCRIPTION: This snippet demonstrates how to disable the allowlist for the matrix-reminder-bot in your vars.yml file. Disabling the allowlist allows anyone, even across the Matrix Federation, to use the bot.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_22\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_matrix_reminder_bot_allowlist_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-grafana Variables (Ansible)\nDESCRIPTION: This snippet outlines the variable renaming needed after the `matrix-grafana` role's extraction. Existing Grafana users must update their `vars.yml` file accordingly to ensure that Grafana is properly configured and continues to function as expected. Without these changes, the playbook might fail to configure Grafana correctly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_grafana_ -> grafana_\n```\n\n----------------------------------------\n\nTITLE: Setting logging verbosity (YAML)\nDESCRIPTION: This configuration snippet shows how to increase the logging verbosity for the beeper-linkedin bridge by setting `matrix_beeper_linkedin_logging_level: DEBUG` in the `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-beeper-linkedin.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_beeper_linkedin_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Level in Ansible\nDESCRIPTION: This configuration snippet sets the logging level for the Mautrix Instagram bridge to DEBUG. Add this to your `vars.yml` file and re-run the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-instagram.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_instagram_logging_level: DEBUG\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags\nDESCRIPTION: Demonstrates the command syntax for running the Ansible playbook with specific tags, using both `just` and `ansible-playbook`. The tags allow executing specific parts of the playbook, such as installing or uninstalling certain components. The `COMMA_SEPARATED_TAGS_GO_HERE` placeholder should be replaced with the desired tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/playbook-tags.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n- (**recommended**) when using `just`: `just run-tags COMMA_SEPARATED_TAGS_GO_HERE`\n- when not using `just`: `ansible-playbook -i inventory/hosts setup.yml --tags=COMMA_SEPARATED_TAGS_GO_HERE`\n```\n\n----------------------------------------\n\nTITLE: Removing Ansible Package (apt-get)\nDESCRIPTION: This command removes the Ansible package using the apt-get package manager, typically used on Debian and Ubuntu systems. This is a step in upgrading Ansible using pip.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\napt-get remove ansible\n```\n\n----------------------------------------\n\nTITLE: Enable Sentry Debugging in vars.yml\nDESCRIPTION: This configuration snippet enables Sentry debugging for the Matrix Media Repo. It should be added to the `vars.yml` file and the playbook must be re-run for the changes to take effect. This will increase logging verbosity and provide more detailed information for troubleshooting.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_media_repo_sentry_debug: true\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with specific tags\nDESCRIPTION: This command shows how to execute the Ansible playbook with specific tags to install and start the Appservice Double Puppet service.  The `--tags=setup-all,start` option ensures that all necessary setup tasks and service startup are performed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-appservice-double-puppet.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Element Call in Ansible Playbook\nDESCRIPTION: This code snippet demonstrates how to enable Element Call and the Matrix RTC stack within the Ansible playbook configuration file (vars.yml). Setting `matrix_element_call_enabled` to `true` enables the Element Call frontend UI, allowing standalone use of Element Call and automatically enables the Matrix RTC stack.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-element-call.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Enable the Element Call frontend UI to allow standalone use of Element Call.\n# Enabling this also auto-enables the Matrix RTC stack.\nmatrix_element_call_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Disabling Synapse Presence Feature (YAML)\nDESCRIPTION: This YAML snippet disables the Synapse presence feature, which tracks user online status. Disabling presence can reduce processing power consumption.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-synapse.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_presence_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Ansible Command to Stop Services\nDESCRIPTION: This Ansible command stops all services defined in the `setup.yml` playbook using the tags `stop`.  It requires an inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_68\n\nLANGUAGE: ansible\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=stop\n```\n\n----------------------------------------\n\nTITLE: Delete Systemd Service File for mx-puppet-skype\nDESCRIPTION: This command removes the systemd service file for mx-puppet-skype from the server. This prevents the service from being started or managed by systemd.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\nrm /etc/systemd/system/matrix-mx-puppet-skype.service\n```\n\n----------------------------------------\n\nTITLE: Enable Dendrite homeserver implementation\nDESCRIPTION: This configuration snippet enables the Dendrite homeserver implementation in a new server setup. Setting `matrix_homeserver_implementation` to `dendrite` configures the playbook to install and configure Dendrite instead of the default Synapse. Note that this change should only be applied to new server installations to avoid data loss.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_57\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_homeserver_implementation: dendrite\n```\n\n----------------------------------------\n\nTITLE: Re-running Ansible Playbook\nDESCRIPTION: This command re-runs the Ansible playbook to apply the changes made to the configuration and start all services. It uses the 'setup-all' and 'start' tags to ensure that all necessary tasks are executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_64\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Update Ansible roles using `ansible-galaxy`\nDESCRIPTION: Updates Ansible roles using the `ansible-galaxy` command. This command removes the existing `roles/galaxy` directory and then installs the roles specified in `requirements.yml` into the `roles/galaxy` directory, forcing a fresh installation.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/installing.md#_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nrm -rf roles/galaxy; ansible-galaxy install -r requirements.yml -p roles/galaxy/ --force\n```\n\n----------------------------------------\n\nTITLE: Adjusting Heisenbridge Hostname and Path (YAML)\nDESCRIPTION: This snippet demonstrates how to modify the default hostname and path prefix for Heisenbridge in the `vars.yml` file.  Changing these variables allows the service to be accessed at a different URL.  This requires updating DNS records accordingly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-heisenbridge.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Change the default hostname and path prefix\nmatrix_heisenbridge_hostname: heisenbridge.example.com\nmatrix_heisenbridge_path_prefix: /\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags\nDESCRIPTION: This shell command executes the Ansible playbook `setup.yml` using the inventory file `inventory/hosts` and applying the tags `setup-all` and `start`. This command is used to install and start the configured services and ensure they are properly set up. The command is intended to be conservative, ensuring that failures indicate a significant issue.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-matrix-bridge-sms.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Postgres Docker Container for Import (Shell)\nDESCRIPTION: This command runs a Docker container to import a Postgres dump file into a Synapse database. It filters out CREATE/ALTER ROLE and CREATE DATABASE statements to prevent errors during the import process. The dump file is mounted into the container, and `psql` is used to import the data into the `synapse` database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/importing-postgres.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n/usr/bin/env docker run --rm --name matrix-postgres-import --log-driver=none --user=998:1001 --cap-drop=ALL --network=matrix --env-file=/matrix/postgres/env-postgres-psql --mount type=bind,src=/migration/synapse_dump.sql,dst=/synapse_dump.sql,ro --entrypoint=/bin/sh docker.io/postgres:15.0-alpine -c \"cat /synapse_dump.sql | grep -vE '^(CREATE|ALTER) ROLE (matrix)(;| WITH)' | grep -vE '^CREATE DATABASE (matrix)\\s' | psql -v ON_ERROR_STOP=1 -h matrix-postgres --dbname=synapse\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Conduit Homeserver Implementation with YAML\nDESCRIPTION: This snippet configures the Ansible playbook to deploy Conduit as the Matrix homeserver implementation. It's intended for new server installations and requires setting the `matrix_homeserver_implementation` variable to `conduit` in the `vars.yml` file. This should only be done on a new server because changing the homeserver implementation will result in data loss.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_44\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_homeserver_implementation: conduit\n```\n\n----------------------------------------\n\nTITLE: Switching to Upstream Synapse Admin Docker Image - YAML\nDESCRIPTION: This configuration snippet allows users to revert from the etke.cc fork back to the original Awesome-Technologies synapse-admin docker image.  It sets the image name, registry prefix and version, allowing control over which synapse-admin version is deployed. The version is set to `0.10.3`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_admin_docker_image: \"{{ matrix_synapse_admin_docker_image_registry_prefix }}awesometechnologies/synapse-admin:{{ matrix_synapse_admin_version }}\"\nmatrix_synapse_admin_docker_image_registry_prefix_upstream: docker.io/\n\nmatrix_synapse_admin_version: 0.10.3\n\n# If you need self-building (if running on arm32), uncomment this.\n# matrix_synapse_admin_container_image_self_build_repo: \"https://github.com/Awesome-Technologies/synapse-admin.git\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Agents in vars.yml with Ansible\nDESCRIPTION: This snippet demonstrates how to configure custom Baibot agents using the `matrix_bot_baibot_config_agents_static_definitions_custom` variable in vars.yml. It allows defining agents with specific providers and configurations without using presets. It shows configurations for OpenAI and Ollama agents.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_bot_baibot_config_agents_static_definitions_custom:\n  # This agent will use the GPT 3.5 model and will only support text-generation,\n  # even though the `openai` provider could support other features (e.g. image-generation).\n  - id: my-openai-gpt-3.5-turbo-agent\n    provider: openai\n    config:\n        base_url: https://api.openai.com/v1\n        api_key: \"YOUR_API_KEY_HERE\"\n        text_generation:\n          model_id: gpt-3.5-turbo-0125\n          prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n          temperature: 1.0\n          max_response_tokens: 4096\n          max_context_tokens: 16385\n        speech_to_text: null\n        text_to_speech: null\n        image_generation: null\n\n  # This agent uses the `openai` provider, but adjusts the base URL, so that it points to some Ollama instance\n  # (which supports an OpenAI-compatible API).\n  - id: my-ollama-agent\n    provider: openai\n    config:\n      base_url: http://ollama-service:1234/v1\n      api_key: \"\"\n      text_generation:\n        model_id: \"llama3.1:8b\"\n        prompt: \"{{ matrix_bot_baibot_config_agents_static_definitions_prompt }}\"\n        temperature: 1.0\n        max_response_tokens: 4096\n        max_context_tokens: 128000\n          speech_to_text: null\n          text_to_speech: null\n          image_generation: null\n```\n\n----------------------------------------\n\nTITLE: Disable Docker Installation via Ansible in YAML\nDESCRIPTION: This YAML snippet disables the automatic installation of Docker by the Ansible playbook. Setting `matrix_playbook_docker_installation_enabled` to `false` prevents the playbook from installing Docker, allowing users to manage their own Docker installations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/faq.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_playbook_docker_installation_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Installing sshpass in Docker Container\nDESCRIPTION: This command installs the `sshpass` package inside the Docker container. This is required to use password-based authentication when connecting to the remote server via Ansible.  It assumes you are already inside the shell of a running ansible docker container.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\napk add sshpass\n```\n\n----------------------------------------\n\nTITLE: Testing Webhook with curl (Shell)\nDESCRIPTION: This snippet demonstrates how to test the webhook using curl. It sends a JSON payload with the specified content type to the webhook URL, emulating a Slack-compatible webhook request. Replace `<the webhook link you've gotten from the bridge bot>` with the actual URL.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ncurl --header \"Content-Type: application/json\" \\\n--data '{\n\"text\": \"Hello world!\",\n\"format\": \"plain\",\n\"displayName\": \"My Cool Webhook\",\n\"avatar_url\": \"http://i.imgur.com/IDOBtEJ.png\"\n}' \\\n<the webhook link you've gotten from the bridge bot>\n```\n\n----------------------------------------\n\nTITLE: Re-enable Coturn STUN Port UDP Exposure\nDESCRIPTION: This code snippet shows how to re-enable the exposure of the Coturn STUN port (3478) over UDP.  Setting the `matrix_coturn_container_stun_plain_host_bind_port_udp` variable to `3478` reverts to the previous behavior, allowing older Element clients to connect via UDP.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_coturn_container_stun_plain_host_bind_port_udp: \"3478\"\n```\n\n----------------------------------------\n\nTITLE: Upgrade Postgres Collation - Shell\nDESCRIPTION: This snippet shows the command to run an Ansible playbook that forces a Postgres database upgrade to use the correct (C) collation.  This addresses a potential issue with UTF-8 collation causing problems with Synapse on glibc systems.  It is essential to back up your database before running this command.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_81\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=upgrade-postgres --extra-vars='{\"postgres_force_upgrade\": true}'\n```\n\n----------------------------------------\n\nTITLE: Override default matrix-reminder-bot allowlist\nDESCRIPTION: This snippet shows how to override the default allowlist (defined in the `group_vars/matrix_servers` file) by redefining the `matrix_bot_matrix_reminder_bot_allowlist_regexes_auto` variable in your vars.yml file. This allows for complete control over the allowed servers and users.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_24\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_bot_matrix_reminder_bot_allowlist_regexes_auto: # Your custom regexes here\n```\n\n----------------------------------------\n\nTITLE: Re-run Full Ansible Setup (Shell)\nDESCRIPTION: This command re-runs the full Ansible setup with specific tags. This command is used if there are any issues with the server configuration and it needs to be re-initialized. The tags included are `setup-all`, `ensure-matrix-users-created`, and `start` to ensure a complete setup.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/quick-start.md#_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Increasing Logging Verbosity for Cactus Comments Client in Ansible\nDESCRIPTION: This YAML snippet demonstrates how to increase the logging verbosity for the `matrix-cactus-comments-client` component. It sets the `SERVER_LOG_LEVEL` environment variable to `debug`, which enables more detailed logging. This is useful for troubleshooting issues with the client.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\n# Controls the SERVER_LOG_LEVEL environment variable.\n# See: https://static-web-server.net/configuration/environment-variables/\n# Valid values: error, warn, info, debug, trace\nmatrix_cactus_comments_client_environment_variable_server_log_level: debug\n```\n\n----------------------------------------\n\nTITLE: Including Cactus Comments Assets from Homeserver\nDESCRIPTION: This HTML snippet shows how to include the Cactus Comments JavaScript and CSS assets from your own homeserver instead of the default `cactus.chat` domain. This requires replacing `example.com` with your base domain and ensuring that the assets are served from the correct path. If the client hostname and path prefix are tweaked, you need to adjust the URLs accordingly.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-cactus-comments.md#_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<script type=\"text/javascript\" src=\"https://matrix.example.com/cactus-comments/cactus.js\"></script>\n<link rel=\"stylesheet\" href=\"https://matrix.example.com/cactus-comments/style.css\" type=\"text/css\">\n```\n\n----------------------------------------\n\nTITLE: Setting Synapse forget_rooms_on_leave Option - Ansible\nDESCRIPTION: This snippet shows how to override the default `forget_rooms_on_leave` setting in Synapse, reverting to the old behavior where rooms are not automatically forgotten upon leaving. This setting is configured in the `vars.yml` file used by the Ansible playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_forget_rooms_on_leave: false\n```\n\n----------------------------------------\n\nTITLE: JSON Body for Posting Messages (JSON)\nDESCRIPTION: This snippet shows the JSON structure for posting messages to the bridge. The `text` field contains the message, `format` specifies the format (plain), `displayName` is the name of the webhook, and `avatar_url` is the URL of the avatar. All fields are required.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"text\": \"Hello world!\",\n    \"format\": \"plain\",\n    \"displayName\": \"My Cool Webhook\",\n    \"avatar_url\": \"http://i.imgur.com/IDOBtEJ.png\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rename Ansible Variables (Docker Images)\nDESCRIPTION: This code snippet illustrates a series of renamed Ansible variables related to Docker image names for various services.  This change was made to improve organization and maintainability of the playbook's configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_106\n\nLANGUAGE: text\nCODE:\n```\n- from `matrix_docker_image_mxisd` to `matrix_mxisd_docker_image`\n- from `matrix_docker_image_mautrix_telegram` to `matrix_mautrix_telegram_docker_image`\n- from `matrix_docker_image_mautrix_whatsapp` to `matrix_mautrix_whatsapp_docker_image`\n- from `matrix_docker_image_mailer` to `matrix_mailer_docker_image`\n- from `matrix_docker_image_coturn` to `matrix_coturn_docker_image`\n- from `matrix_docker_image_goofys` to `matrix_s3_goofys_docker_image`\n- from `matrix_docker_image_riot` to `matrix_riot_web_docker_image`\n- from `matrix_docker_image_nginx` to `matrix_nginx_proxy_docker_image`\n- from `matrix_docker_image_synapse` to `matrix_synapse_docker_image`\n- from `matrix_docker_image_postgres_v9` to `matrix_postgres_docker_image_v9`\n- from `matrix_docker_image_postgres_v10` to `matrix_postgres_docker_image_v10`\n- from `matrix_docker_image_postgres_latest` to `matrix_postgres_docker_image_latest`\n```\n\n----------------------------------------\n\nTITLE: Configuring Matrix Synapse Rate Limiting (YAML)\nDESCRIPTION: These variables allow configuration of Matrix Synapse's rate-limiting settings.  The `matrix_synapse_rc_messages_per_second` variable controls the number of messages allowed per second, and `matrix_synapse_rc_message_burst_count` defines the burst count for messages.  These settings are used to prevent abuse and manage server load.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_108\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_rc_messages_per_second: 0.2\nmatrix_synapse_rc_message_burst_count: 10.0\n```\n\n----------------------------------------\n\nTITLE: Applying Configuration Changes (Shell)\nDESCRIPTION: Applies the configuration changes to the Matrix server by running the Ansible playbook with specific tags. Also mentions shortcut commands using `just`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Installing Baibot with Ansible Playbook\nDESCRIPTION: This shell command shows how to run the Ansible playbook to install and configure the Baibot Matrix bot.  It uses specific tags to ensure user creation and bot startup. It assumes an `inventory/hosts` file exists.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-baibot.md#_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created,start\n```\n\n----------------------------------------\n\nTITLE: Enabling Mautrix Instagram bridge in Ansible\nDESCRIPTION: This configuration snippet enables the Mautrix Instagram bridge within the Ansible playbook. Add this to your `inventory/host_vars/matrix.example.com/vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-instagram.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_mautrix_instagram_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Running PostgreSQL Vacuum with Default Preset\nDESCRIPTION: This command executes the default `vacuum-complete` PostgreSQL vacuum preset using the Ansible playbook. It stops all services, performs a full vacuum with analysis, and then restarts the services.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags run-postgres-vacuum\n```\n\n----------------------------------------\n\nTITLE: Synapse Stream Writer Worker Configuration YAML\nDESCRIPTION: This snippet configures the number of stream writer workers for different streams in Synapse. It allows customization of the number of workers for the `events`, `typing`, `to_device`, `account_data`, `receipts`, and `presence` streams.  Only the `events` stream supports more than one worker. The configuration uses variables such as `matrix_synapse_workers_stream_writer_events_stream_workers_count` to specify the worker count for each stream.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\n# Synapse only supports more than 1 worker for the `events` stream.\n# All other streams can utilize either 0 or 1 workers, not more than that.\nmatrix_synapse_workers_stream_writer_events_stream_workers_count: 5\nmatrix_synapse_workers_stream_writer_typing_stream_workers_count: 1\nmatrix_synapse_workers_stream_writer_to_device_stream_workers_count: 1\nmatrix_synapse_workers_stream_writer_account_data_stream_workers_count: 1\nmatrix_synapse_workers_stream_writer_receipts_stream_workers_count: 1\nmatrix_synapse_workers_stream_writer_presence_stream_workers_count: 1\n```\n\n----------------------------------------\n\nTITLE: Synapse Configuration Change: allow_public_rooms_over_federation\nDESCRIPTION: This snippet describes a change in the default configuration of Synapse regarding the `allow_public_rooms_over_federation` setting. The setting is flipped to `true`, making public rooms discoverable across the Matrix federation. This goes against the upstream default of `false`. To revert to the old behavior, users can add `matrix_synapse_allow_public_rooms_over_federation: false` to their `vars.yml` configuration file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_25\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_synapse_allow_public_rooms_over_federation: false\n```\n\n----------------------------------------\n\nTITLE: Ansible Command to Run Playbook with Tags\nDESCRIPTION: This command executes the Ansible playbook `setup.yml` against the hosts defined in the `inventory/hosts` file. It uses the specified tags to selectively run parts of the playbook.  Tags `setup-all` and `start` are common.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_70\n\nLANGUAGE: ansible\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook - Shell\nDESCRIPTION: This command executes the Ansible playbook to install and start the Mautrix Meta Instagram bridge using specific tags. It's crucial for deploying the configured bridge to the target system. The `--tags` option ensures that only the necessary components are set up and started.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-meta-instagram.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Import Dendrite Media Store using Docker\nDESCRIPTION: This command executes the `import_dendrite` tool within the `matrix-media-repo` Docker container to import media files. It requires specifying the Dendrite database connection parameters, including database name, host, port, username, and password. Replace `postgres_connection_password` with the actual password from your `vars.yml` file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-matrix-media-repo.md#_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\ndocker exec -it matrix-media-repo \\\n    /usr/local/bin/import_dendrite \\\n        -dbName dendrite_mediaapi \\\n        -dbHost matrix-postgres \\\n        -dbPort 5432 \\\n        -dbUsername matrix \\\n        -dbPassword postgres_connection_password\n```\n\n----------------------------------------\n\nTITLE: Inspecting Docker Networks (Shell)\nDESCRIPTION: This snippet demonstrates how to inspect a specific Docker network (e.g., `matrix-homeserver`) using `docker network inspect` to verify its IPv6 configuration. It checks for the presence of an IPv6 subnet/gateway in the `IPAM.Config` section.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-ipv6.md#_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\ndocker network inspect matrix-homeserver\n```\n\n----------------------------------------\n\nTITLE: Renaming legacy matrix-etherpad variables - Ansible\nDESCRIPTION: This code shows examples of renamed variables for etherpad migration to independent role.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_etherpad_docker_image_ -> matrix_etherpad_container_image_\nmatrix_etherpad_ -> etherpad_\n```\n\n----------------------------------------\n\nTITLE: Customize Riot with Dimension Integration\nDESCRIPTION: This snippet demonstrates how to configure Riot to use a custom Dimension integration manager by setting the appropriate Ansible variables. This configuration allows users to point Riot to a specific Dimension instance.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_105\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_riot_web_integrations_ui_url: \"https://dimension.t2bot.io/riot\"\nmatrix_riot_web_integrations_rest_url: \"https://dimension.t2bot.io/api/v1/scalar\"\nmatrix_riot_web_integrations_widgets_urls: \"https://dimension.t2bot.io/widgets\"\nmatrix_riot_web_integrations_jitsi_widget_url: \"https://dimension.t2bot.io/widgets/jitsi\"\n```\n\n----------------------------------------\n\nTITLE: Stopping Matrix Services with Systemctl\nDESCRIPTION: This command stops all systemd services that start with 'matrix'. It can be used as an alternative to the Ansible command if Ansible is not properly configured or accessible. It's intended to be run directly on the Matrix server.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl stop 'matrix*'\n```\n\n----------------------------------------\n\nTITLE: Run Ansible Playbook with Tags - Shell\nDESCRIPTION: This command executes the Ansible playbook with specific tags to set up and start the services. It uses the `setup-all` and `start` tags.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-traefik.md#_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Pruning Docker Images\nDESCRIPTION: This command removes unused Docker images from the system. `docker system prune -a` removes all unused images, while `docker rmi $(docker images -aq)` removes all Docker images. The `docker system prune` is the safer option as it removes only dangling/unused images.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker system prune -a\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker rmi $(docker images -aq)\n```\n\n----------------------------------------\n\nTITLE: Ansible Command to Stop Services\nDESCRIPTION: This Ansible command stops all services managed by the playbook. It's used as part of the upgrade process, specifically before re-running the playbook when upgrading Synapse with worker configurations.  The `-i inventory/hosts` specifies the inventory file and `--tags=stop` indicates that only tasks tagged with `stop` should be executed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_51\n\nLANGUAGE: ansible\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=stop\n```\n\n----------------------------------------\n\nTITLE: Password Generation using pwgen\nDESCRIPTION: This snippet demonstrates how to generate a strong, random password using the `pwgen` command-line tool, which is recommended for creating secure passwords for various configuration settings within the playbook.  `pwgen` must be installed on the local machine. The output is a 64-character random string.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/prerequisites.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npwgen -s 64 1\n```\n\n----------------------------------------\n\nTITLE: Updating matrix-jitsi Variables - Ansible\nDESCRIPTION: This snippet outlines the variable renames required after the `matrix-jitsi` role was moved to the `ansible-role-jitsi` repository. It shows how to update references in your `vars.yml` file to align with the new role structure.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_jitsi_*_docker_image_ -> matrix_jitsi_*_container_image_\nmatrix_jitsi_ -> jitsi_\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook with Tags (Shell)\nDESCRIPTION: This snippet shows how to run the Ansible playbook with specific tags to install and start the appservice webhooks bridge.  It depends on Ansible being installed and configured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start\n```\n\n----------------------------------------\n\nTITLE: Setting Default Theme for Element Web in Ansible\nDESCRIPTION: This snippet demonstrates how to change the default theme of Element Web from 'light' to 'dark' using the `matrix_client_element_default_theme` variable in the Ansible playbook's `vars.yml` file.  It controls the `setting_defaults.theme` configuration option.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-client-element-web.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Controls the default theme\nmatrix_client_element_default_theme: 'dark'\n```\n\n----------------------------------------\n\nTITLE: Configuring Journald Log Persistence\nDESCRIPTION: This configuration snippet shows how to configure `journald` to persist logs to disk and limit the size of log files. `RuntimeMaxUse` and `SystemMaxUse` specify the maximum amount of disk space that journald can use for runtime and system logs, respectively. `RateLimitInterval` and `RateLimitBurst` disable rate limiting, and `Storage=persistent` enables persistence.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-and-troubleshooting.md#_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n[Journal]\nRuntimeMaxUse=200M\nSystemMaxUse=1G\nRateLimitInterval=0\nRateLimitBurst=0\nStorage=persistent\n```\n\n----------------------------------------\n\nTITLE: Porting IRC Appservice Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_appservice_irc_container_expose_client_server_api_port` variable with the `matrix_appservice_irc_container_http_host_bind_port` variable. It shows how to expose the IRC appservice container port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_97\n\n\n\n----------------------------------------\n\nTITLE: Copying Data to Backblaze B2 using b2 CLI - Shell\nDESCRIPTION: This command starts a Docker container to copy files to Backblaze B2 using the `b2` command-line tool. It mounts the local media-store directory into the container and uses environment variables for authentication. The command authorizes the account and then syncs the files, skipping newer files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-synapse-s3-storage-provider.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndocker run -it --rm \\\n-w /work \\\n--env='B2_KEY_ID=YOUR_KEY_GOES_HERE' \\\n--env='B2_KEY_SECRET=YOUR_SECRET_GOES_HERE' \\\n--env='B2_BUCKET_NAME=YOUR_BUCKET_NAME_GOES_HERE' \\\n--mount type=bind,src=/matrix/synapse/storage/media-store,dst=/work,ro \\\n--entrypoint=/bin/sh \\\ndocker.io/tianon/backblaze-b2:3.6.0 \\\n-c 'b2 authorize-account $B2_KEY_ID $B2_KEY_SECRET && b2 sync /work b2://$B2_BUCKET_NAME --skipNewer'\n```\n\n----------------------------------------\n\nTITLE: Configure Synapse Image Organization - Ansible\nDESCRIPTION: This snippet defines the GitHub organization and repository from which the Synapse container images are pulled. The default value is element-hq/synapse, but this snippet configures it to matrix-org/synapse. Requires Ansible to deploy.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_github_org_and_repo: matrix-org/synapse\n```\n\n----------------------------------------\n\nTITLE: Setting Logging Verbosity (YAML)\nDESCRIPTION: This snippet demonstrates how to change the logging verbosity.  The `matrix_appservice_webhooks_log_level` variable in `vars.yml` controls the logging verbosity of the bridge. Valid values are `info` (default) and `verbose`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-webhooks.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# Valid values: info, verbose\nmatrix_appservice_webhooks_log_level: 'verbose'\n```\n\n----------------------------------------\n\nTITLE: Enable Matrix RTC and Disable Element Call\nDESCRIPTION: This code snippet shows how to switch from installing Element Call to only installing the Matrix RTC stack by adjusting the `vars.yml` configuration file. It involves changing the `matrix_element_call_enabled` variable to `false` and enabling `matrix_rtc_enabled` to `true`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n-matrix_element_call_enabled: true\n+matrix_rtc_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Disabling HTTP/3 in Traefik YAML Configuration\nDESCRIPTION: This configuration snippet shows how to disable HTTP/3 support for the `web-secure` and `matrix-federation` entrypoints in Traefik. This is useful if HTTP/3 is not functioning correctly in your setup, preventing clients from attempting to use it. No dependencies are required; it simply modifies Traefik's configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\ntraefik_config_entrypoint_web_secure_http3_enabled: false\n\n# Disabling HTTP/3 for the web-secure entrypoint (above),\n# automatically disables it for the Matrix Federation entrypoint as well,\n# so you do not necessarily need the configuration line below.\n#\n# Feel free to only keep it around if you're keeping HTTP/3 enabled for web-secure (by removing the line above),\n# and would only like to disable HTTP/3 for the Matrix Federation entrypoint.\nmatrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_http3_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Instruct Playbook to Use New ACME Configuration\nDESCRIPTION: This snippet instructs the playbook to use the new ACME configuration defined for the DNS-01 challenge. This ensures that Traefik uses the new resolver when requesting certificates.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n# 3. Instruct the playbook to use the new ACME configuration\ntraefik_certResolver_primary: dns\n```\n\n----------------------------------------\n\nTITLE: Activating Python virtual environment\nDESCRIPTION: Activates the created Python virtual environment, so that subsequently installed packages are isolated to this environment.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsource .venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Disable KeyDB and Enable Redis YAML Configuration\nDESCRIPTION: This configuration snippet allows you to disable KeyDB and fall back to using Redis, if needed (e.g., on `arm32` architecture). If the playbook requires a database, this configuration will cause it to automatically enable Redis. This is especially useful when KeyDB is not supported.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\n# Explicitly disable KeyDB, which will auto-enable Redis\n# if the playbook requires it as a dependency for its operation.\nkeydb_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Specify workers preset in matrix-docker-ansible-deploy (YAML)\nDESCRIPTION: This snippet shows how to explicitly set the Synapse workers preset in the matrix-docker-ansible-deploy playbook. This ensures that the specified preset is used even if the default worker configuration changes in future playbook releases.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_workers_preset: one-of-each\n```\n\n----------------------------------------\n\nTITLE: Mac: Update inventory/hosts\nDESCRIPTION: This command updates the `inventory/hosts` file by replacing `matrix-servers` with `matrix_servers` using the `sed` command in macOS. This is necessary for compatibility with Ansible 2.8.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_88\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '' 's/matrix-servers/matrix_servers/g' inventory/hosts\n```\n\n----------------------------------------\n\nTITLE: Unlinking Slack Channel from Matrix Room\nDESCRIPTION: This command is used in the administration control room to unlink a Slack channel from a Matrix room.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-appservice-slack.md#_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nunlink --room !qporfwt:example.com\n```\n\n----------------------------------------\n\nTITLE: Removing Systemd Service and Timer Files\nDESCRIPTION: This command removes the systemd service and timer files associated with Matrix. After deleting the files, `systemctl daemon-reload` is executed to reload the systemd daemon and apply the changes.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nrm -f /etc/systemd/system/matrix*.{service,timer}\nsystemctl daemon-reload\n```\n\n----------------------------------------\n\nTITLE: Registering Users Manually for Matrix Authentication Service (Shell)\nDESCRIPTION: Registers a user manually for Matrix Authentication Service (MAS) via the command line after SSH-ing to the server. Requires that all services have been started and email configuration. It also shows an alternative command using `mas-cli`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n/matrix/matrix-authentication-service/bin/register-user USERNAME_HERE PASSWORD_HERE <admin access: 0 or 1>\n\n# Example: `/matrix/matrix-authentication-service/bin/register-user alice secret-password 1`\n```\n\nLANGUAGE: sh\nCODE:\n```\n/matrix/matrix-authentication-service/bin/mas-cli manage register-user --help\n```\n\n----------------------------------------\n\nTITLE: Disabling Valkey and enabling KeyDB (YAML)\nDESCRIPTION: This configuration snippet explicitly disables Valkey and enables KeyDB, forcing the playbook to use KeyDB as the Redis-compatible implementation. This allows users to continue using KeyDB instead of Valkey, at least temporarily until KeyDB is fully removed from the playbook.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n# Explicitly disable Valkey  enable KeyDB.\n#\n# Redis will not be auto-enabled beandcause a Redis-compatible implementation (KeyDB) is enabled.\nvalkey_enabled: false\nkeydb_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Delete mx-puppet-skype Directory\nDESCRIPTION: This command recursively removes the `/matrix/mx-puppet-skype` directory, which likely contains configuration and data for the mx-puppet-skype bridge. This is a cleanup step after disabling and removing the service.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf /matrix/mx-puppet-skype\n```\n\n----------------------------------------\n\nTITLE: Disabling Gzip Compression During PostgreSQL Upgrade\nDESCRIPTION: This command upgrades PostgreSQL and disables gzip compression for the database dump file. By specifying a dump filename that doesn't end in `.gz`, the command avoids compressing the dump, potentially saving CPU resources when ample disk space is available.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags upgrade-postgres --extra-vars=\"postgres_dump_name=matrix-postgres-dump.sql\"\n```\n\n----------------------------------------\n\nTITLE: Re-enabling User Directory Search Configuration\nDESCRIPTION: This configuration re-enables user directory search functionality after a security fix in ma1sd version 2.4.0. Setting `matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled` to `false` allows user directory search requests to be directed to the ma1sd identity server again. This configuration is intended for users who want to restore the old behavior after the security issue has been addressed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_77\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_nginx_proxy_proxy_matrix_user_directory_search_enabled: false\n```\n\n----------------------------------------\n\nTITLE: Restarting Systemd Journald Service\nDESCRIPTION: This command restarts the systemd journald service after modifying its configuration. This is required for the changes to take effect, such as increasing rate limits for log messages. This is relevant for ancient distributions to ensure all Synapse log messages are captured.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_84\n\nLANGUAGE: shell\nCODE:\n```\nsystemctl restart systemd-journald\n```\n\n----------------------------------------\n\nTITLE: Running Ansible Playbook to Create Bot User (SH)\nDESCRIPTION: This shell command executes the Ansible playbook to create the Draupnir bot user.  It uses the `setup.yml` playbook and the `setup-all,ensure-matrix-users-created` tags to ensure the bot's user account is created. The `-i inventory/hosts` specifies the inventory file.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bot-draupnir.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nansible-playbook -i inventory/hosts setup.yml --tags=setup-all,ensure-matrix-users-created\n```\n\n----------------------------------------\n\nTITLE: Ansible Variable for Synapse Admin API Forwarding\nDESCRIPTION: This Ansible variable controls whether the Synapse Admin APIs are publicly exposed. Setting it to `true` restores the old behavior of exposing `/_synapse/admin`. Used in `vars.yml`.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_75\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_nginx_proxy_proxy_matrix_client_api_forwarded_location_synapse_admin_api_enabled: true\n```\n\n----------------------------------------\n\nTITLE: Creating Postgres Superuser Role\nDESCRIPTION: This SQL command creates a new Postgres superuser role named 'matrix' with a specified password. It is essential for managing and administering the Postgres database.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_62\n\nLANGUAGE: sql\nCODE:\n```\nCREATE ROLE matrix LOGIN SUPERUSER PASSWORD 'YOUR_POSTGRES_PASSWORD_HERE';\n```\n\n----------------------------------------\n\nTITLE: Migrating Facebook Bridge Configuration\nDESCRIPTION: This snippet explains how to migrate manual changes made to the Facebook bridge configuration to the `matrix_mautrix_facebook_configuration_extension_yaml` variable. This ensures that the playbook applies these changes automatically.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_89\n\n\n\n----------------------------------------\n\nTITLE: Enabling ntfy Web App - Ansible\nDESCRIPTION: This snippet demonstrates how to enable the ntfy web application, which is disabled by default. This is done by setting the `ntfy_web_root` variable in the Ansible configuration.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nntfy_web_root: \"app\"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Mautrix Hangouts Manually\nDESCRIPTION: These commands are used to manually uninstall the Mautrix Hangouts bridge. It disables and stops the service, removes the installation directory, and drops the associated PostgreSQL database. Requires shell access and PostgreSQL client.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-mautrix-hangouts.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nsystemctl disable --now matrix-mautrix-hangouts.service\n\nrm -rf /matrix/mautrix-hangouts\n\n/matrix/postgres/bin/cli-non-interactive 'DROP DATABASE matrix_mautrix_hangouts;'\n```\n\n----------------------------------------\n\nTITLE: Running PostgreSQL Vacuum with Custom Preset\nDESCRIPTION: This command executes a specific PostgreSQL vacuum preset (in this case, `analyze`) using the Ansible playbook. The `--extra-vars` flag allows specifying a different preset than the default, offering control over the type of vacuum operation performed.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags run-postgres-vacuum -e postgres_vacuum_preset=analyze\n```\n\n----------------------------------------\n\nTITLE: Whitelisting Federation Domains in Matrix Synapse (YAML)\nDESCRIPTION: This snippet configures Matrix Synapse to only federate with the specified domains.  Add this configuration to `inventory/host_vars/matrix.example.com/vars.yml`. Replace `example.com` and `example.net` with the desired domains.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-federation.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_synapse_federation_domain_whitelist:\n- example.com\n- example.net\n```\n\n----------------------------------------\n\nTITLE: Installing Python packages\nDESCRIPTION: Installs the required Python packages for translation using pip, based on the list specified in the requirements.txt file. Requires a virtual environment to be activated beforehand.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Downgrading Matrix Corporal Version - YAML\nDESCRIPTION: This configuration allows users to downgrade matrix-corporal to version 2.8.0, bypassing the upgrade to v3.  This may be necessary to avoid configuration policy changes introduced in v3. Setting `matrix_corporal_version` to `2.8.0` performs the downgrade.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_corporal_version: 2.8.0\n```\n\n----------------------------------------\n\nTITLE: Password-Protect Metrics Endpoint\nDESCRIPTION: This snippet enables basic authentication for the metrics endpoint, securing it with dedicated credentials.  `matrix_hookshot_container_labels_metrics_middleware_basic_auth_users` must contain the raw `htpasswd` file content.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/configuring-playbook-bridge-hookshot.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_hookshot_container_labels_metrics_middleware_basic_auth_enabled: true\nmatrix_hookshot_container_labels_metrics_middleware_basic_auth_users: ''\n```\n\n----------------------------------------\n\nTITLE: Nginx Configuration for Matrix Federation Traffic in NPM\nDESCRIPTION: This snippet presents the Nginx Proxy Manager configuration for handling Matrix federation traffic. It specifies the domain name including the federation port, forwarding details, SSL settings, and a custom Nginx configuration that includes listening on the federation port and setting the maximum body size.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/examples/reverse-proxies/nginx-proxy-manager/README.md#_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\nlisten 8448 ssl http2;\n\tclient_max_body_size 50M;\n```\n\n----------------------------------------\n\nTITLE: Building translated result\nDESCRIPTION: Executes a shell script to build the translated documents for a specific language. This process uses the locale files to generate the final translated output.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./bin/build-translated-result.sh <language>\n```\n\n----------------------------------------\n\nTITLE: Re-enable TLSv1.1 - YAML\nDESCRIPTION: This snippet demonstrates how to re-enable TLSv1.1 support in the nginx proxy configuration. It is used to support older clients that require the protocol. Be aware of the security implications of enabling older protocols.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_80\n\nLANGUAGE: yaml\nCODE:\n```\nmatrix_nginx_proxy_ssl_protocols: \"TLSv1.1 TLSv1.2 TLSv1.3\"\n```\n\n----------------------------------------\n\nTITLE: Removing the /matrix Directory\nDESCRIPTION: This command removes the `/matrix` directory, which contains the Matrix server's data and configuration files. This is a crucial step in the uninstallation process, as it removes the persistent data of the server. Use with caution, as this action is irreversible and results in data loss.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nrm -rf /matrix\n```\n\n----------------------------------------\n\nTITLE: Customizing PostgreSQL Dump Directory during Upgrade\nDESCRIPTION: This command upgrades PostgreSQL and specifies a custom directory for storing the database dump file during the upgrade process. The `--extra-vars` flag allows overriding the default `/tmp` directory, enabling users to utilize different storage locations.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/maintenance-postgres.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\njust run-tags upgrade-postgres --extra-vars=\"postgres_dump_dir=/directory/to/dump/here\"\n```\n\n----------------------------------------\n\nTITLE: Applying the GNU AGPL to a New Program\nDESCRIPTION: This snippet shows how to attach notices to a new program to license it under the GNU Affero General Public License version 3.  It includes copyright information, license terms, and warranty disclaimers.  It emphasizes the importance of including these notices at the start of each source file to effectively state the exclusion of warranty.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/LICENSES/AGPL-3.0-or-later.txt#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n     <one line to give the program's name and a brief idea of what it does.>\n     Copyright (C) <year>  <name of author>\n\n     This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\n     This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.\n\n     You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: Adjust coturn's Systemd Service Dependencies\nDESCRIPTION: This snippet modifies coturn's systemd service dependencies to only depend on `docker.service`. This removes the dependency on the certificate exporter, which may require manually restarting coturn on the first installation. After the initial certificate acquisition, the reload service should handle subsequent renewals.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/howto-srv-server-delegation.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n# Only depend on docker.service, this removes the dependency on the certificate exporter, might imply the need to manually restart coturn on the first installation once the certificates are obtained, afterwards, the reload service should handle things\nmatrix_coturn_systemd_required_services_list: ['docker.service']\n```\n\n----------------------------------------\n\nTITLE: Shell Command to Remove Systemd Service File\nDESCRIPTION: This shell command removes a systemd service file. It is used to remove the old matrix-sms-bridge database service file. Requires SSH access to the host.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_73\n\nLANGUAGE: bash\nCODE:\n```\nrm /etc/systemd/system/matrix-sms-bridge-database.service\n```\n\n----------------------------------------\n\nTITLE: Syncing translation templates to locales\nDESCRIPTION: Executes a shell script to update the locale files for a specific language by syncing the English translation templates. This ensures the locale files contain the latest strings to translate.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/i18n/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./bin/sync-translation-templates-to-locales.sh <language>\n```\n\n----------------------------------------\n\nTITLE: Configuring Systemd Journald Rate Limits\nDESCRIPTION: This configuration snippet shows how to adjust the rate limits for systemd journald to prevent log message loss. It involves adding `RateLimitInterval=0` and `RateLimitBurst=0` under the `[Storage]` section in `/etc/systemd/journald.conf`. This is specifically relevant for older distributions where default logging restrictions may be insufficient for Synapse's verbose logging.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_85\n\nLANGUAGE: ini\nCODE:\n```\n[Storage]\nRateLimitInterval=0\nRateLimitBurst=0\n```\n\n----------------------------------------\n\nTITLE: Porting MXISD Container Exposure\nDESCRIPTION: This snippet demonstrates how to replace the `matrix_mxisd_container_expose_port` variable with the `matrix_mxisd_container_http_host_bind_port` variable. It shows how to expose the MXISD container port.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_94\n\n\n\n----------------------------------------\n\nTITLE: Configuring Git to trust playbook directory\nDESCRIPTION: This command configures Git to trust the playbook directory, resolving potential ownership issues when running Ansible inside a Docker container. This prevents warnings about unsafe repositories.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/ansible.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\ngit config --global --add safe.directory /work\n```\n\n----------------------------------------\n\nTITLE: Rename Ansible Variable (SSL Email)\nDESCRIPTION: This change renames the Ansible variable for specifying the support email for Let's Encrypt SSL certificates.  This is a breaking change that requires users to update their configuration files.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_101\n\nLANGUAGE: text\nCODE:\n```\n- before: `host_specific_matrix_ssl_support_email`\n- after: `host_specific_matrix_ssl_lets_encrypt_support_email`\n```\n\n----------------------------------------\n\nTITLE: Configuration Migration - Traefik Entrypoints (diff)\nDESCRIPTION: This code snippet demonstrates the required changes to the `traefik_additional_entrypoints_auto` variable in `vars.yml` when fronting the integrated Traefik reverse proxy with another reverse proxy. It shows how to migrate from redefining the entire variable to using the new `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_*` variables, ensuring the playbook can inject additional entrypoints in the future.\nDependencies: Ansible, Traefik\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_21\n\nLANGUAGE: diff\nCODE:\n```\n-traefik_additional_entrypoints_auto:\n-  - name: matrix-federation\n-    port: 8449\n-    host_bind_port: '127.0.0.1:8449'\n-    config: {}\n-    # If your reverse-proxy runs on another machine, remove the config above and use this config instead:\n-    # config:\n-    #   forwardedHeaders:\n-    #     insecure: true\n-    #     # trustedIPs: ['IP-ADDRESS-OF-YOUR-REVERSE-PROXY']\n+# Uncomment and tweak the variable below if the name of your federation entrypoint is different\n+# than the default value (matrix-federation).\n+# matrix_federation_traefik_entrypoint: matrix-federation\n+\n+# Uncomment and tweak the variable below if you really wish to change the internal port number\n+# that the federation endpoint uses. Changing it is generally not necessary.\n+# Usually, changing `matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port` below is enough.\n+#matrix_playbook_public_matrix_federation_api_traefik_entrypoint_port: 8449\n+\n+matrix_playbook_public_matrix_federation_api_traefik_entrypoint_host_bind_port: 127.0.0.1:8449\n+\n+# Adapt the variable below based on where your reverse-proxy runs:\n+# - if it's on the Matrix server: keep `forwardedHeaders` and `insecure: true` as is\n+# - if it's on another machine: remove `forwardedHeaders` and `insecure: true` and enable/configure `trustedIPs`\n+matrix_playbook_public_matrix_federation_api_traefik_entrypoint_config_custom:\n+  forwardedHeaders:\n+    insecure: true\n+  # trustedIPs: ['IP-ADDRESS-OF-YOUR-REVERSE-PROXY']\n```\n\n----------------------------------------\n\nTITLE: Updating User Admin Status in Synapse (SQL)\nDESCRIPTION: Updates the admin privileges for a user in Synapse's local database by running an SQL query against the `synapse` database. Directly modifying the database can cause issues.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/registering-users.md#_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nUPDATE users SET admin=ADMIN_VALUE WHERE name = '@alice:example.com';\n```\n\n----------------------------------------\n\nTITLE: Restoring User Directory Search (Security Risk)\nDESCRIPTION: This configuration is mentioned as a way to *potentially* restore the old behavior of User Directory search using the ma1sd identity server. The important disclaimer is that this configuration has a security issue and is not recommended. It sets `matrix_nginx_proxy_proxy_matrix_user_directory_search_enabled` to `{{ matrix_ma1sd_enabled }}`, which means it will enable the search if `matrix_ma1sd_enabled` is true. This should only be used if absolutely necessary and with full awareness of the security implications.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/CHANGELOG.md#_snippet_78\n\nLANGUAGE: YAML\nCODE:\n```\nmatrix_nginx_proxy_proxy_matrix_user_directory_search_enabled: \"{{ matrix_ma1sd_enabled }}\"\n```\n\n----------------------------------------\n\nTITLE: Removing Docker Networks\nDESCRIPTION: This command removes the Docker networks used by Matrix. These networks are named 'matrix' and 'matrix-coturn'. This step ensures that the networks are cleaned up if they weren't already removed during the Docker image pruning step.\nSOURCE: https://github.com/spantaleev/matrix-docker-ansible-deploy/blob/master/docs/uninstalling.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker network rm matrix matrix-coturn\n```"
  }
]
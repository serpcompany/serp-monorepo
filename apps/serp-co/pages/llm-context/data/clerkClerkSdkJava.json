[
  {
    "owner": "clerk",
    "repo": "clerk-sdk-java",
    "content": "TITLE: Authenticated Clerk SDK Usage\nDESCRIPTION: Example showing how to initialize the Clerk SDK with authentication and make an API call\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialRequest;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n                .build();\n\n        GetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n                .request(req)\n                .call();\n\n        // handle response\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Organization Membership in Clerk\nDESCRIPTION: This code snippet demonstrates how to update an existing organization membership using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, specifies the organization ID and user ID of the membership to be updated, constructs the request body with the updated role, and makes an API call to update the membership. The response, containing the updated organization membership, is then handled.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationmemberships/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationMembershipRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationMembershipResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateOrganizationMembershipResponse res = sdk.organizationMemberships().update()\n                .organizationId(\"<id>\")\n                .userId(\"<id>\")\n                .requestBody(UpdateOrganizationMembershipRequestBody.builder()\n                    .role(\"<value>\")\n                    .build())\n                .call();\n\n        if (res.organizationMembership().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Unbanning a User with Clerk Java SDK\nDESCRIPTION: This snippet shows how to unban a previously banned user using the Clerk Java SDK. It removes the ban mark from the user, allowing them to sign in again. The user ID is required as a parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UnbanUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UnbanUserResponse res = sdk.users().unban()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Organization Invitations with Clerk Java SDK\nDESCRIPTION: Example showing how to retrieve organization invitations for a user with pagination and status filtering. Demonstrates initializing the Clerk SDK and making the API call with optional parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_15\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.QueryParamStatus;\nimport com.clerk.backend_api.models.operations.UsersGetOrganizationInvitationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UsersGetOrganizationInvitationsResponse res = sdk.users().getOrganizationInvitations()\n                .userId(\"<id>\")\n                .limit(10L)\n                .offset(0L)\n                .status(QueryParamStatus.PENDING)\n                .call();\n\n        if (res.organizationInvitationsWithPublicOrganizationData().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Testing Token with Clerk SDK in Java\nDESCRIPTION: This Java snippet demonstrates the use of the Clerk SDK to create a new testing token. It requires the Clerk SDK, which must be properly authenticated with a bearer token. The snippet uses the Clerk.builder() method to set up the SDK, then calls the testingTokens().create() method to retrieve a token. The result is stored in a CreateTestingTokenResponse object, and the presence of the token is checked to handle the response. This example is ideal for test environments where generating temporary access tokens is necessary.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/testingtokens/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.CreateTestingTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateTestingTokenResponse res = sdk.testingTokens().create()\n                .call();\n\n        if (res.testingToken().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User with Clerk SDK in Java\nDESCRIPTION: This snippet illustrates how to retrieve the details of a specific user using the Clerk SDK for Java. It sets up a Clerk instance with authentication, retrieves user information by specifying a user ID, and processes the result if available.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetUserResponse res = sdk.users().get()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Users with Clerk SDK in Java\nDESCRIPTION: This code snippet outlines how to count the total number of users that meet specified criteria using the Clerk SDK in Java. It constructs a GetUsersCountRequest object, sends the request, and checks for the presence of a total count in the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetUsersCountRequest;\nimport com.clerk.backend_api.models.operations.GetUsersCountResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetUsersCountRequest req = GetUsersCountRequest.builder()\n                .lastActiveAtBefore(1700690400000L)\n                .lastActiveAtAfter(1700690400000L)\n                .lastActiveAtSince(1700690400000L)\n                .createdAtBefore(1730160000000L)\n                .createdAtAfter(1730160000000L)\n                .build();\n\n        GetUsersCountResponse res = sdk.users().count()\n                .request(req)\n                .call();\n\n        if (res.totalCount().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying TOTP Code with Clerk Java SDK\nDESCRIPTION: Example showing how to verify a TOTP or backup code for a user using the Clerk SDK. Demonstrates SDK initialization and making a TOTP verification request with the required user ID and code.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_17\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.VerifyTOTPRequestBody;\nimport com.clerk.backend_api.models.operations.VerifyTOTPResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        VerifyTOTPResponse res = sdk.users().verifyTotp()\n                .userId(\"<id>\")\n                .requestBody(VerifyTOTPRequestBody.builder()\n                    .code(\"<value>\")\n                    .build())\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Merging Organization Metadata using Clerk Java SDK\nDESCRIPTION: This code snippet showcases how to merge metadata into an existing organization using the Clerk Backend API Java SDK. It demonstrates initializing the Clerk SDK, calling the `mergeMetadata` method, providing the organization ID, constructing the request body, and handling the response after the metadata is merged.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.MergeOrganizationMetadataRequestBody;\nimport com.clerk.backend_api.models.operations.MergeOrganizationMetadataResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        MergeOrganizationMetadataResponse res = sdk.organizations().mergeMetadata()\n                .organizationId(\"<id>\")\n                .requestBody(MergeOrganizationMetadataRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.organization().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Clerk SDK in Java\nDESCRIPTION: This snippet shows how to create a new user using the Clerk SDK for Java. It demonstrates setting up a Clerk instance with a bearer token, creating a user request, and handling the response. The method marks email and phone number as verified and is subject to rate limit constraints.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateUserRequestBody;\nimport com.clerk.backend_api.models.operations.CreateUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateUserRequestBody req = CreateUserRequestBody.builder()\n                .build();\n\n        CreateUserResponse res = sdk.users().create()\n                .request(req)\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Organizations with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to retrieve a list of organizations using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, creates a `ListOrganizationsRequest` object, and then calls the `list()` method on the `organizations()` resource. The example also shows how to handle the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListOrganizationsRequest;\nimport com.clerk.backend_api.models.operations.ListOrganizationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListOrganizationsRequest req = ListOrganizationsRequest.builder()\n                .build();\n\n        ListOrganizationsResponse res = sdk.organizations().list()\n                .request(req)\n                .call();\n\n        if (res.organizations().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Clerk SDK Usage Example\nDESCRIPTION: Example showing how to initialize the Clerk SDK and make a basic API call to get public interstitial\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialRequest;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n            .build();\n\n        GetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n                .build();\n\n        GetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n                .request(req)\n                .call();\n\n        // handle response\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Session JWT with Clerk SDK Java\nDESCRIPTION: This snippet illustrates the creation of a session JSON Web Token (JWT) using the Clerk SDK in Java. It requires a session ID and optionally a request body. The method returns a `CreateSessionTokenResponse` object encapsulating the JWT details.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateSessionTokenRequestBody;\nimport com.clerk.backend_api.models.operations.CreateSessionTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSessionTokenResponse res = sdk.sessions().createToken()\n                .sessionId(\"<id>\")\n                .requestBody(CreateSessionTokenRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Handling Example in Java\nDESCRIPTION: Example showing proper error handling with the Clerk SDK, including handling of custom error types and standard SDK errors.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nVerifyClientRequestBody req = VerifyClientRequestBody.builder()\n        .token(\"<value>\")\n        .build();\n\nVerifyClientResponse res = sdk.clients().verify()\n        .request(req)\n        .call();\n\nif (res.client().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Users with Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to use the Clerk SDK to list all users, sorted by creation date, with the newest appearing first. It requires a valid bearer token for authentication and constructs a request using the GetUserListRequest class. The response is handled by checking the presence of user data.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetUserListRequest;\nimport com.clerk.backend_api.models.operations.GetUserListResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetUserListRequest req = GetUserListRequest.builder()\n                .lastActiveAtBefore(1700690400000L)\n                .lastActiveAtAfter(1700690400000L)\n                .lastActiveAtSince(1700690400000L)\n                .createdAtBefore(1730160000000L)\n                .createdAtAfter(1730160000000L)\n                .build();\n\n        GetUserListResponse res = sdk.users().list()\n                .request(req)\n                .call();\n\n        if (res.userList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Domain with Clerk SDK Java\nDESCRIPTION: This snippet details how to update a domain within an instance using the Clerk SDK in Java. It covers both primary and satellite domains and allows configuring proxy URLs for production instances. Required parameters include the domain ID and an update request body. Bearer authentication is necessary.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/domains/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateDomainRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateDomainResponse res = sdk.domains().update()\n                .domainId(\"<id>\")\n                .requestBody(UpdateDomainRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.domain().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying User Password with Clerk Java SDK\nDESCRIPTION: Example demonstrating how to verify a user's password using the Clerk SDK. Shows SDK initialization and making a password verification request with the required user ID and password.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_16\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.VerifyPasswordRequestBody;\nimport com.clerk.backend_api.models.operations.VerifyPasswordResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        VerifyPasswordResponse res = sdk.users().verifyPassword()\n                .userId(\"<id>\")\n                .requestBody(VerifyPasswordRequestBody.builder()\n                    .password(\"1fwgbLjqCRGKsWc\")\n                    .build())\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Organization Membership in Clerk\nDESCRIPTION: This code snippet demonstrates how to create a new organization membership using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, defines the organization ID and user ID, constructs the request body with the user's role, and makes an API call to create the membership. The response, containing the new organization membership, is then handled.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationmemberships/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOrganizationMembershipRequestBody;\nimport com.clerk.backend_api.models.operations.CreateOrganizationMembershipResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOrganizationMembershipResponse res = sdk.organizationMemberships().create()\n                .organizationId(\"<id>\")\n                .requestBody(CreateOrganizationMembershipRequestBody.builder()\n                    .userId(\"<id>\")\n                    .role(\"<value>\")\n                    .build())\n                .call();\n\n        if (res.organizationMembership().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Client with Clerk Java SDK\nDESCRIPTION: This Java example demonstrates verifying a client using the Clerk SDK. It constructs a verification request using a token and sends it via the Clerk client. The expected output is a successful verification with the client data returned in the response. The process handles any errors through ClerkExceptions. A prerequisite is a valid token that represents the client to be verified.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/clients/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.VerifyClientRequestBody;\nimport com.clerk.backend_api.models.operations.VerifyClientResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        VerifyClientRequestBody req = VerifyClientRequestBody.builder()\n                .token(\"<value>\")\n                .build();\n\n        VerifyClientResponse res = sdk.clients().verify()\n                .request(req)\n                .call();\n\n        if (res.client().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Email Address using Clerk SDK\nDESCRIPTION: This snippet demonstrates how to create a new email address using the Clerk SDK in Java. It requires a valid bearer token for authentication. The main parameter is a request object containing the user ID and the email address to be created. The output is a response object indicating the status of the creation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailaddresses/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateEmailAddressRequestBody;\nimport com.clerk.backend_api.models.operations.CreateEmailAddressResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateEmailAddressRequestBody req = CreateEmailAddressRequestBody.builder()\n                .userId(\"<id>\")\n                .emailAddress(\"Loyal79@yahoo.com\")\n                .build();\n\n        CreateEmailAddressResponse res = sdk.emailAddresses().create()\n                .request(req)\n                .call();\n\n        if (res.emailAddress().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Current Instance Settings in Java\nDESCRIPTION: Retrieves the current instance configuration using Clerk's backend API SDK with authentication via bearer token\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/instancesettings/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nGetInstanceResponse res = sdk.instanceSettings().get()\n    .call();\n```\n\n----------------------------------------\n\nTITLE: Updating Organization using Clerk Java SDK\nDESCRIPTION: This code snippet demonstrates how to update an existing organization using the Clerk Backend API Java SDK. It showcases setting up the Clerk SDK instance, calling the `update` method on the `organizations` service, providing the organization ID, and handling the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateOrganizationResponse res = sdk.organizations().update()\n                .organizationId(\"<id>\")\n                .requestBody(UpdateOrganizationRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.organization().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Email Address using Clerk SDK\nDESCRIPTION: This Java snippet demonstrates deleting an email address using the Clerk SDK. It requires the ID of the email address to be deleted and a valid bearer token. The result can be checked to confirm if the email address was successfully deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailaddresses/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteEmailAddressResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteEmailAddressResponse res = sdk.emailAddresses().delete()\n                .emailAddressId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Organization Invitations Clerk SDK Java\nDESCRIPTION: This code snippet demonstrates how to retrieve a list of organization invitations using the Clerk SDK in Java. It utilizes the ListInstanceOrganizationInvitationsRequest to request data from the SDK's method to get all organization invitations. The method supports optional query parameters for pagination, filtering, and ordering, enhancing the retrieval process. Required dependencies include the Clerk SDK and relevant model imports.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListInstanceOrganizationInvitationsRequest;\nimport com.clerk.backend_api.models.operations.ListInstanceOrganizationInvitationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListInstanceOrganizationInvitationsRequest req = ListInstanceOrganizationInvitationsRequest.builder()\n                .build();\n\n        ListInstanceOrganizationInvitationsResponse res = sdk.organizationInvitations().getAll()\n                .request(req)\n                .call();\n\n        if (res.organizationInvitationsWithPublicOrganizationData().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting User Profile Image with Clerk Java SDK\nDESCRIPTION: This code shows how to update a user's profile image using the Clerk Java SDK. It requires the user's ID and a SetUserProfileImageRequestBody object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nSetUserProfileImageResponse res = sdk.users().setProfileImage()\n        .userId(\"<id>\")\n        .requestBody(SetUserProfileImageRequestBody.builder()\n            .build())\n        .call();\n\nif (res.user().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Refreshing a Session with Clerk API in Java\nDESCRIPTION: This snippet illustrates how to refresh a session, creating a new session token using the Clerk API in Java.  The code initializes the Clerk SDK, sets the session ID, builds the request body with parameters like expiredToken, refreshToken, and requestOrigin, and then makes a call to the API. The response is handled to process the session refresh information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RefreshSessionRequestBody;\nimport com.clerk.backend_api.models.operations.RefreshSessionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RefreshSessionResponse res = sdk.sessions().refresh()\n                .sessionId(\"<id>\")\n                .requestBody(RefreshSessionRequestBody.builder()\n                    .expiredToken(\"<value>\")\n                    .refreshToken(\"<value>\")\n                    .requestOrigin(\"<value>\")\n                    .build())\n                .call();\n\n        if (res.sessionRefresh().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User TOTP Authentication - Java SDK Example\nDESCRIPTION: Demonstrates how to delete all Time-based One-Time Password (TOTP) configurations for a user using the Clerk Java SDK. Requires bearer token authentication and user ID as input parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_22\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteTOTPResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteTOTPResponse res = sdk.users().deleteTOTP()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Organization with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to create a new organization using the Clerk Java SDK.  It initializes the Clerk SDK, creates a `CreateOrganizationRequestBody` object with the organization's name, and then calls the `create()` method on the `organizations()` resource. The example also shows how to handle the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOrganizationRequestBody;\nimport com.clerk.backend_api.models.operations.CreateOrganizationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOrganizationRequestBody req = CreateOrganizationRequestBody.builder()\n                .name(\"<value>\")\n                .build();\n\n        CreateOrganizationResponse res = sdk.organizations().create()\n                .request(req)\n                .call();\n\n        if (res.organization().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Organization Membership with Clerk Java SDK\nDESCRIPTION: This code snippet demonstrates how to delete an organization membership using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, then calls the `delete` method with the organization and user IDs. The response is checked for successful execution.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationmemberships/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteOrganizationMembershipResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteOrganizationMembershipResponse res = sdk.organizationMemberships().delete()\n                .organizationId(\"<id>\")\n                .userId(\"<id>\")\n                .call();\n\n        if (res.organizationMembership().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating a Session with Clerk API in Java\nDESCRIPTION: This snippet shows how to create a new active session for a user using the Clerk API in Java. It initializes the Clerk SDK, creates a request body with the user ID, and then makes a call to the API to create the session. The response is then handled to process the created session.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateSessionRequestBody;\nimport com.clerk.backend_api.models.operations.CreateSessionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSessionRequestBody req = CreateSessionRequestBody.builder()\n                .userId(\"<id>\")\n                .build();\n\n        CreateSessionResponse res = sdk.sessions().create()\n                .request(req)\n                .call();\n\n        if (res.session().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Blocklist Identifier in Clerk SDK Java\nDESCRIPTION: This snippet illustrates how to delete an identifier from the blocklist in a Clerk instance. It sets up the SDK, makes a call to the delete operation with the identifier ID, and processes the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/blocklistidentifiers/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteBlocklistIdentifierResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteBlocklistIdentifierResponse res = sdk.blocklistIdentifiers().delete()\n                .identifierId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Revoking an Invitation Using Clerk SDK in Java\nDESCRIPTION: This snippet provides functionality to revoke a specific invitation by its ID using the Clerk SDK. Revoking prevents the user from accessing the invitation link, while still allowing them to sign up through other means. The snippet initializes the SDK and invokes the revoke operation, handling the response accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/invitations/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RevokeInvitationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RevokeInvitationResponse res = sdk.invitations().revoke()\n                .invitationId(\"<id>\")\n                .call();\n\n        if (res.invitationRevoked().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Actor Token with Clerk API in Java\nDESCRIPTION: This code snippet demonstrates how to create an actor token using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, constructs a `CreateActorTokenRequestBody` with the user ID and actor information, and calls the `create` method to create the token. The response is then checked to handle the created actor token.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/actortokens/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateActorTokenRequestBody req = CreateActorTokenRequestBody.builder()\n                .userId(\"<id>\")\n                .actor(Actor.builder()\n                    .sub(\"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\")\n                    .build())\n                .build();\n\n        CreateActorTokenResponse res = sdk.actorTokens().create()\n                .request(req)\n                .call();\n\n        if (res.actorToken().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Blocklist Identifier in Clerk SDK Java\nDESCRIPTION: This snippet demonstrates how to create a new identifier that is blocked from accessing a Clerk instance. It includes the necessary request body for the create operation and handles the response after making the call.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/blocklistidentifiers/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateBlocklistIdentifierRequestBody;\nimport com.clerk.backend_api.models.operations.CreateBlocklistIdentifierResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateBlocklistIdentifierRequestBody req = CreateBlocklistIdentifierRequestBody.builder()\n                .identifier(\"<value>\")\n                .build();\n\n        CreateBlocklistIdentifierResponse res = sdk.blocklistIdentifiers().create()\n                .request(req)\n                .call();\n\n        if (res.blocklistIdentifier().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting Organization using Clerk Java SDK\nDESCRIPTION: This code snippet demonstrates how to delete an organization using the Clerk Backend API Java SDK. It initializes the Clerk SDK, calls the `delete` method, provides the organization ID, and handles the deletion response, noting that this action is irreversible.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteOrganizationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteOrganizationResponse res = sdk.organizations().delete()\n                .organizationId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Sessions with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to list all sessions using the Clerk API in Java. It initializes the Clerk SDK, creates a request to list sessions, and then makes a call to the API to retrieve the list. The response is then handled to process the session list.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetSessionListRequest;\nimport com.clerk.backend_api.models.operations.GetSessionListResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetSessionListRequest req = GetSessionListRequest.builder()\n                .build();\n\n        GetSessionListResponse res = sdk.sessions().list()\n                .request(req)\n                .call();\n\n        if (res.sessionList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Domains in Java\nDESCRIPTION: This code snippet shows how to retrieve a list of all domains associated with an organization using the Clerk SDK in Java. It initializes the Clerk SDK, sets the organization ID in the request, and then executes the list operation, handling the response if domains are found.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationdomains/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListOrganizationDomainsRequest;\nimport com.clerk.backend_api.models.operations.ListOrganizationDomainsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListOrganizationDomainsRequest req = ListOrganizationDomainsRequest.builder()\n                .organizationId(\"<id>\")\n                .build();\n\n        ListOrganizationDomainsResponse res = sdk.organizationDomains().list()\n                .request(req)\n                .call();\n\n        if (res.organizationDomains().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving JWKS using Clerk SDK in Java\nDESCRIPTION: This Java code snippet demonstrates how to retrieve the JSON Web Key Set (JWKS) using the Clerk SDK. It initializes the Clerk SDK with a bearer token, calls the `getJWKS()` method, and handles the response, checking if the JWKS is present.  The code depends on the Clerk SDK library.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwks/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.GetJWKSResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetJWKSResponse res = sdk.jwks().getJWKS()\n                .call();\n\n        if (res.jwks().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Organization Domain in Java\nDESCRIPTION: This code snippet demonstrates how to create a new organization domain using the Clerk SDK in Java. It initializes the Clerk SDK with a bearer token, sets the organization ID, and builds the request body for the domain creation.  It handles the response and prints it if successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationdomains/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOrganizationDomainRequestBody;\nimport com.clerk.backend_api.models.operations.CreateOrganizationDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOrganizationDomainResponse res = sdk.organizationDomains().create()\n                .organizationId(\"<id>\")\n                .requestBody(CreateOrganizationDomainRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.organizationDomain().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Redirect URL with Clerk SDK for Java\nDESCRIPTION: This snippet shows how to create a new redirect URL using the Clerk SDK. It prepares a request body with the URL and processes the response after making the create call.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/redirecturls/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateRedirectURLRequestBody;\nimport com.clerk.backend_api.models.operations.CreateRedirectURLResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateRedirectURLRequestBody req = CreateRedirectURLRequestBody.builder()\n                .url(\"https://probable-heating.com/\")\n                .build();\n\n        CreateRedirectURLResponse res = sdk.redirectUrls().create()\n                .request(req)\n                .call();\n\n        if (res.redirectURL().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Domains with Clerk SDK Java\nDESCRIPTION: This snippet demonstrates how to list all domains associated with an instance using the Clerk SDK in Java. The ListDomainsResponse object will contain primary and any satellite domains along with their respective URLs and CNAME targets. It requires a valid bearer token for authentication.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/domains/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.ListDomainsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListDomainsResponse res = sdk.domains().list()\n                .call();\n\n        if (res.domains().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JWT from Template with Clerk SDK Java\nDESCRIPTION: This example demonstrates how to create a JWT using a predefined template in the Clerk SDK for Java. It requires the session ID and the template name, providing back a `CreateSessionTokenFromTemplateResponse` object that contains the JWT information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateSessionTokenFromTemplateRequestBody;\nimport com.clerk.backend_api.models.operations.CreateSessionTokenFromTemplateResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSessionTokenFromTemplateResponse res = sdk.sessions().createTokenFromTemplate()\n                .sessionId(\"<id>\")\n                .templateName(\"<value>\")\n                .requestBody(CreateSessionTokenFromTemplateRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking Actor Token with Clerk API in Java\nDESCRIPTION: This code snippet demonstrates how to revoke an actor token using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token and calls the `revoke` method with the actor token ID. The response is then checked to handle the revoked actor token.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/actortokens/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RevokeActorTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RevokeActorTokenResponse res = sdk.actorTokens().revoke()\n                .actorTokenId(\"<id>\")\n                .call();\n\n        if (res.actorToken().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Session with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a session's details using the Clerk API in Java. It initializes the Clerk SDK and makes a call to the API to retrieve a session based on its ID. The response is then handled to process the session details.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetSessionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetSessionResponse res = sdk.sessions().get()\n                .sessionId(\"<id>\")\n                .call();\n\n        if (res.session().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Attributes with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to update a user's attributes using the Clerk Java SDK. It allows setting primary contact identifiers, removing usernames, changing passwords, and provides options for password policy checks and session management.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateUserRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateUserResponse res = sdk.users().update()\n                .userId(\"<id>\")\n                .requestBody(UpdateUserRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing All Invitations Using Clerk SDK in Java\nDESCRIPTION: This snippet shows how to list all non-revoked invitations for your application, sorted by creation date. It uses the Clerk SDK to send a request for the list of invitations and handle the response accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/invitations/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.ListInvitationsRequest;\nimport com.clerk.backend_api.models.operations.ListInvitationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListInvitationsRequest req = ListInvitationsRequest.builder()\n                .build();\n\n        ListInvitationsResponse res = sdk.invitations().list()\n                .request(req)\n                .call();\n\n        if (res.invitationList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking Organization Invitation with Clerk Java SDK\nDESCRIPTION: This method revokes a previously issued organization invitation. Only pending invitations can be revoked, and the action requires admin privileges. It accepts an optional requesting_user_id parameter to specify the user revoking the invitation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nRevokeOrganizationInvitationResponse res = sdk.organizationInvitations().revoke()\n        .organizationId(\"<id>\")\n        .invitationId(\"<id>\")\n        .requestBody(RevokeOrganizationInvitationRequestBody.builder()\n            .build())\n        .call();\n\nif (res.organizationInvitation().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting SAML Connection with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to delete a SAML Connection using the Clerk Java SDK. It initializes the SDK with a bearer token, calls the delete method with a SAML Connection ID, and handles the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/samlconnections/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteSAMLConnectionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteSAMLConnectionResponse res = sdk.samlConnections().delete()\n                .samlConnectionId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Sign-Up in Java\nDESCRIPTION: This snippet shows how to update the details of a sign-up using the Clerk SDK in Java. It demonstrates the use of a bearer token and the sign-up ID to initiate the update operation. The snippet employs an UpdateSignUpRequestBody and retrieves the response in an UpdateSignUpResponse object. The operation depends on the Clerk SDK and associated models, and requires inputs such as the bearer token, sign-up ID, and an optional request body.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/signups/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateSignUpRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateSignUpResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateSignUpResponse res = sdk.signUps().update()\n                .id(\"<id>\")\n                .requestBody(UpdateSignUpRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.signUp().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Revoking Session with Clerk SDK Java\nDESCRIPTION: This snippet demonstrates how to revoke a session using the Clerk SDK in Java. It requires a valid session ID and Bearer token authentication. The function returns a `RevokeSessionResponse` object indicating the status of the operation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RevokeSessionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RevokeSessionResponse res = sdk.sessions().revoke()\n                .sessionId(\"<id>\")\n                .call();\n\n        if (res.session().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Organization by ID with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to retrieve an organization by its ID using the Clerk Java SDK. It initializes the Clerk SDK and then calls the `get()` method on the `organizations()` resource, providing the organization ID. The example also shows how to handle the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetOrganizationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetOrganizationResponse res = sdk.organizations().get()\n                .organizationId(\"<id>\")\n                .includeMembersCount(false)\n                .includeMissingMemberWithElevatedPermissions(false)\n                .call();\n\n        if (res.organization().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching OAuth Access Token with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to fetch an OAuth access token for a user who previously authenticated with an OAuth provider. For OAuth 2.0, if the access token has expired and a refresh token is available, the token will be refreshed automatically.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_13\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetOAuthAccessTokenRequest;\nimport com.clerk.backend_api.models.operations.GetOAuthAccessTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetOAuthAccessTokenRequest req = GetOAuthAccessTokenRequest.builder()\n                .userId(\"<id>\")\n                .provider(\"<value>\")\n                .build();\n\n        GetOAuthAccessTokenResponse res = sdk.users().getOAuthAccessToken()\n                .request(req)\n                .call();\n\n        if (res.responseBodies().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Instance Restrictions in Java\nDESCRIPTION: Modifies instance restriction settings by creating a request body and invoking the updateRestrictions method\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/instancesettings/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpdateInstanceRestrictionsRequestBody req = UpdateInstanceRestrictionsRequestBody.builder()\n    .build();\n\nUpdateInstanceRestrictionsResponse res = sdk.instanceSettings().updateRestrictions()\n    .request(req)\n    .call();\n```\n\n----------------------------------------\n\nTITLE: Deleting External Account - Java SDK Example\nDESCRIPTION: Shows how to delete a user's external account using the Clerk Java SDK. Requires bearer token authentication, user ID, and external account ID as input parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_23\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteExternalAccountResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteExternalAccountResponse res = sdk.users().deleteExternalAccount()\n                .userId(\"<id>\")\n                .externalAccountId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a SAML Connection using Clerk SDK Java\nDESCRIPTION: This snippet illustrates the process of creating a new SAML connection using the Clerk SDK for Java. The CreateSAMLConnectionRequestBody is configured with necessary attributes such as name and domain.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/samlconnections/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSAMLConnectionRequestBody req = CreateSAMLConnectionRequestBody.builder()\n                .name(\"<value>\")\n                .domain(\"low-packaging.info\")\n                .provider(Provider.SAML_CUSTOM)\n                .build();\n\n        CreateSAMLConnectionResponse res = sdk.samlConnections().create()\n                .request(req)\n                .call();\n\n        if (res.schemasSAMLConnection().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Invitation Using Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to create a new invitation for a specified email address using the Clerk SDK. The email address must not already have an existing invitation. The snippet initializes the Clerk SDK with a bearer token and handles the response after attempting to create the invitation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/invitations/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateInvitationRequestBody;\nimport com.clerk.backend_api.models.operations.CreateInvitationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateInvitationRequestBody req = CreateInvitationRequestBody.builder()\n                .emailAddress(\"Loyal79@yahoo.com\")\n                .build();\n\n        CreateInvitationResponse res = sdk.invitations().create()\n                .request(req)\n                .call();\n\n        if (res.invitation().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Locking a User with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to lock a user account using the Clerk Java SDK. Locking prevents the user from signing in until the lock expires. The lock duration is configurable in the instance's restrictions settings.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_8\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.LockUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        LockUserResponse res = sdk.users().lock()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving OAuth Application by ID in Java with Clerk SDK\nDESCRIPTION: Fetches a specific OAuth application using its unique identifier, with error handling for unauthorized or non-existent applications\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetOAuthApplicationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetOAuthApplicationResponse res = sdk.oauthApplications().get()\n                .oauthApplicationId(\"<id>\")\n                .call();\n\n        if (res.oAuthApplication().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User's Organization Memberships with Clerk Java SDK\nDESCRIPTION: This example shows how to retrieve a paginated list of a user's organization memberships using the Clerk Java SDK, with options for pagination through limit and offset parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_14\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UsersGetOrganizationMembershipsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UsersGetOrganizationMembershipsResponse res = sdk.users().getOrganizationMemberships()\n                .userId(\"<id>\")\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.organizationMemberships().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Banning a User with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to ban a user using the Clerk Java SDK. Banning revokes all user sessions and prevents future sign-ins. It requires the user ID as a parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.BanUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        BanUserResponse res = sdk.users().ban()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.user().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Metadata with Clerk Java SDK\nDESCRIPTION: This code demonstrates how to update a user's metadata using the Clerk Java SDK. It performs a deep merge of existing values with provided parameters and allows removal of keys by setting their value to null.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpdateUserMetadataResponse res = sdk.users().updateMetadata()\n        .userId(\"<id>\")\n        .requestBody(UpdateUserMetadataRequestBody.builder()\n            .build())\n        .call();\n\nif (res.user().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Allowlist Identifiers in Java with Clerk SDK\nDESCRIPTION: Retrieves a list of identifiers allowed to sign up to a Clerk authentication instance with optional pagination and limit parameters\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/allowlistidentifiers/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nListAllowlistIdentifiersResponse res = sdk.allowlistIdentifiers().list()\n        .paginated(false)\n        .limit(10L)\n        .offset(0L)\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Installing Clerk SDK with Maven\nDESCRIPTION: Adding the Clerk Java SDK dependency using Maven build configuration\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>com.clerk</groupId>\n    <artifactId>backend-api</artifactId>\n    <version>2.3.1</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Email Address Details using Clerk SDK\nDESCRIPTION: This snippet illustrates how to retrieve the details of an email address using the Clerk SDK in Java. It requires a valid bearer token and the ID of the email address. The result is a response object containing the email address details if successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailaddresses/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetEmailAddressResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetEmailAddressResponse res = sdk.emailAddresses().get()\n                .emailAddressId(\"<id>\")\n                .call();\n\n        if (res.emailAddress().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Phone Number with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to create a new phone number using the Clerk API in Java. It initializes the Clerk SDK with a bearer token, constructs a request body with the user ID and phone number, and then calls the create method on the phoneNumbers resource to create the phone number. The response contains the created phone number if the operation is successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/phonenumbers/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreatePhoneNumberRequestBody;\nimport com.clerk.backend_api.models.operations.CreatePhoneNumberResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreatePhoneNumberRequestBody req = CreatePhoneNumberRequestBody.builder()\n                .userId(\"<id>\")\n                .phoneNumber(\"741.279.0107 x857\")\n                .build();\n\n        CreatePhoneNumberResponse res = sdk.phoneNumbers().create()\n                .request(req)\n                .call();\n\n        if (res.phoneNumber().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Client Details with Clerk Java SDK\nDESCRIPTION: This Java snippet shows how to get the details of a specific client using the Clerk SDK. It requires a valid client ID, which is passed to the SDK to fetch the client details. The expected output is the complete information of the client specified by the ID, and any errors are managed by ClerkErrors. An active bearer token must be included for authentication.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/clients/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetClientResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetClientResponse res = sdk.clients().get()\n                .clientId(\"<id>\")\n                .call();\n\n        if (res.client().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Phone Number with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to update a phone number using the Clerk API in Java. It initializes the Clerk SDK, then calls the update method on the phoneNumbers resource, providing the phoneNumberId as a parameter and an UpdatePhoneNumberRequestBody. The response contains the updated phone number details if the operation is successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/phonenumbers/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdatePhoneNumberRequestBody;\nimport com.clerk.backend_api.models.operations.UpdatePhoneNumberResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdatePhoneNumberResponse res = sdk.phoneNumbers().update()\n                .phoneNumberId(\"<id>\")\n                .requestBody(UpdatePhoneNumberRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.phoneNumber().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a JWT Template in Java with Clerk SDK\nDESCRIPTION: Method to create a new JWT template with custom claims and configuration\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwttemplates/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateJWTTemplateRequestBody req = CreateJWTTemplateRequestBody.builder()\n                .name(\"<value>\")\n                .claims(Claims.builder()\n                    .build())\n                .build();\n\n        CreateJWTTemplateResponse res = sdk.jwtTemplates().create()\n                .request(req)\n                .call();\n\n        if (res.jwtTemplate().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Organization Domain in Java\nDESCRIPTION: This Java code snippet illustrates how to update an existing organization domain using the Clerk SDK. It initializes the Clerk SDK with a bearer token, sets the organization ID and domain ID, builds the request body for the update, and handles the update response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationdomains/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationDomainRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateOrganizationDomainResponse res = sdk.organizationDomains().update()\n                .organizationId(\"<id>\")\n                .domainId(\"<id>\")\n                .requestBody(UpdateOrganizationDomainRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.organizationDomain().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sign-Up by ID in Java\nDESCRIPTION: This snippet illustrates how to retrieve the details of a sign-up using the Clerk SDK in Java. It requires a bearer token for authentication and the ID of the sign-up. The response is encapsulated in a GetSignUpResponse object, and the snippet handles the presence of sign-up data. Dependencies include the Clerk SDK and associated error models, and inputs include the bearer token and sign-up ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/signups/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetSignUpResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetSignUpResponse res = sdk.signUps().get()\n                .id(\"<id>\")\n                .call();\n\n        if (res.signUp().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Sign-In Tokens in Clerk Java SDK\nDESCRIPTION: This Java snippet demonstrates how to initialize the Clerk SDK and create a new sign-in token for a given user. It requires the 'com.clerk.backend_api' package and a valid bearer token for authentication. The sample shows how to handle the successful creation of a token by checking if the token is present.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/signintokens/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateSignInTokenRequestBody;\nimport com.clerk.backend_api.models.operations.CreateSignInTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSignInTokenRequestBody req = CreateSignInTokenRequestBody.builder()\n                .userId(\"<id>\")\n                .build();\n\n        CreateSignInTokenResponse res = sdk.signInTokens().create()\n                .request(req)\n                .call();\n\n        if (res.signInToken().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User with Clerk Java SDK\nDESCRIPTION: This snippet shows how to delete a specified user using the Clerk Java SDK. It requires the user ID as a parameter and returns a DeleteUserResponse.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteUserResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteUserResponse res = sdk.users().delete()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Email Address using Clerk SDK\nDESCRIPTION: This code snippet explains how to update an existing email address using the Clerk SDK in Java. It requires a valid bearer token and the ID of the email address to be updated. Optionally, a request body with updated details can be provided.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailaddresses/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateEmailAddressRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateEmailAddressResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateEmailAddressResponse res = sdk.emailAddresses().update()\n                .emailAddressId(\"<id>\")\n                .requestBody(UpdateEmailAddressRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.emailAddress().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Bulk Creating Invitations Using Clerk SDK in Java\nDESCRIPTION: This snippet illustrates how to create multiple invitations for a list of email addresses. It uses the Clerk SDK to set up the request, including an option to notify via email. It is essential to ensure no existing invitations or users for the provided email addresses, unless specified otherwise.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/invitations/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateBulkInvitationsResponse;\nimport com.clerk.backend_api.models.operations.RequestBody;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        List<RequestBody> req = List.of(\n                RequestBody.builder()\n                    .emailAddress(\"Queen25@gmail.com\")\n                    .build());\n\n        CreateBulkInvitationsResponse res = sdk.invitations().bulkCreate()\n                .request(req)\n                .call();\n\n        if (res.invitationList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a JWT Template in Java with Clerk SDK\nDESCRIPTION: Method to update an existing JWT template's name and claims configuration\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwttemplates/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateJWTTemplateResponse res = sdk.jwtTemplates().update()\n                .templateId(\"<id>\")\n                .requestBody(UpdateJWTTemplateRequestBody.builder()\n                    .name(\"<value>\")\n                    .claims(UpdateJWTTemplateClaims.builder()\n                        .build())\n                    .build())\n                .call();\n\n        if (res.jwtTemplate().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a JWT Template using Clerk SDK for Java\nDESCRIPTION: This snippet demonstrates how to delete a JWT template using the Clerk SDK for Java. It initializes the Clerk client with a bearer token and calls the delete method on the jwtTemplates endpoint, passing the template ID as a parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwttemplates/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteJWTTemplateResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteJWTTemplateResponse res = sdk.jwtTemplates().delete()\n                .templateId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Waitlist Entry with Clerk SDK in Java\nDESCRIPTION: This snippet shows how to create a waitlist entry using the Clerk SDK in Java. It initializes the Clerk SDK with a bearer token, creates a CreateWaitlistEntryRequestBody object with an email address, and calls the create() method on the waitlistEntries() service. The response is then checked to see if a waitlist entry is present.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/waitlistentries/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateWaitlistEntryRequestBody;\nimport com.clerk.backend_api.models.operations.CreateWaitlistEntryResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateWaitlistEntryRequestBody req = CreateWaitlistEntryRequestBody.builder()\n                .emailAddress(\"Loyal79@yahoo.com\")\n                .build();\n\n        CreateWaitlistEntryResponse res = sdk.waitlistEntries().create()\n                .request(req)\n                .call();\n\n        if (res.waitlistEntry().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Organization Request Body Structure - Java\nDESCRIPTION: Java class model defining the fields required to create a new organization in Clerk. Includes required fields like name and optional fields like metadata, slug, and membership limits. Uses JsonNullable for optional string fields and supports custom metadata through maps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nclass CreateOrganizationRequestBody {\n    String name;                                  // required, max 256 chars\n    JsonNullable<String> createdBy;               // optional\n    Map<String, Object> privateMetadata;          // optional\n    Map<String, Object> publicMetadata;           // optional\n    JsonNullable<String> slug;                   // optional\n    JsonNullable<Long> maxAllowedMemberships;    // optional\n    JsonNullable<String> createdAt;              // optional, RFC3339 format\n}\n```\n\n----------------------------------------\n\nTITLE: Get Public Interstitial Markup using Clerk SDK - Java\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK for Java to retrieve the markup for the public interstitial page. The interstitial page is used by Clerk SDKs to check the user's authentication state when it cannot be immediately determined. The code initializes the Clerk SDK, creates a request object, calls the `getPublicInterstitial` method, and handles the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/miscellaneous/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialRequest;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n            .build();\n\n        GetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n                .build();\n\n        GetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n                .request(req)\n                .call();\n\n        // handle response\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Organization Membership Metadata with Clerk Java SDK\nDESCRIPTION: This code snippet demonstrates how to update an organization membership's metadata using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, then calls the `updateMetadata` method with the organization and user IDs, and a request body containing the metadata updates. The response is checked for successful execution.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationmemberships/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationMembershipMetadataRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateOrganizationMembershipMetadataResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateOrganizationMembershipMetadataResponse res = sdk.organizationMemberships().updateMetadata()\n                .organizationId(\"<id>\")\n                .userId(\"<id>\")\n                .requestBody(UpdateOrganizationMembershipMetadataRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.organizationMembership().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Memberships in Clerk\nDESCRIPTION: This code snippet demonstrates how to retrieve a list of organization memberships using the Clerk Java SDK. It initializes the Clerk SDK with a bearer token, constructs a request object with the organization ID and optional filters (lastActiveAtBefore, lastActiveAtAfter, createdAtBefore, createdAtAfter), and makes an API call to retrieve the memberships. The response, containing a list of organization memberships, is then handled.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationmemberships/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListOrganizationMembershipsRequest;\nimport com.clerk.backend_api.models.operations.ListOrganizationMembershipsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListOrganizationMembershipsRequest req = ListOrganizationMembershipsRequest.builder()\n                .organizationId(\"<id>\")\n                .lastActiveAtBefore(1700690400000L)\n                .lastActiveAtAfter(1700690400000L)\n                .createdAtBefore(1730160000000L)\n                .createdAtAfter(1730160000000L)\n                .build();\n\n        ListOrganizationMembershipsResponse res = sdk.organizationMemberships().list()\n                .request(req)\n                .call();\n\n        if (res.organizationMemberships().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Organization Logo with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to upload an organization logo using the Clerk Java SDK. It sets up the SDK with authentication, creates a request to upload a logo file, and handles the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\nimport java.nio.charset.StandardCharsets;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UploadOrganizationLogoResponse res = sdk.organizations().uploadLogo()\n                .organizationId(\"<id>\")\n                .requestBody(UploadOrganizationLogoRequestBody.builder()\n                    .file(UploadOrganizationLogoFile.builder()\n                        .fileName(\"example.file\")\n                        .content(\"0x0DDEE4e6Ea\".getBytes(StandardCharsets.UTF_8))\n                        .build())\n                    .build())\n                .call();\n\n        if (res.organizationWithLogo().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Domain Proxy Configuration with Clerk API in Java\nDESCRIPTION: This Java code snippet demonstrates how to use the Clerk Backend API to verify a domain's proxy configuration. It initializes the Clerk SDK, creates a request body, calls the `verify` method on the `proxyChecks` service, and handles the response. This ensures the proxy is correctly configured before enabling it, preventing potential downtime.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/proxychecks/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.VerifyDomainProxyRequestBody;\nimport com.clerk.backend_api.models.operations.VerifyDomainProxyResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        VerifyDomainProxyRequestBody req = VerifyDomainProxyRequestBody.builder()\n                .build();\n\n        VerifyDomainProxyResponse res = sdk.proxyChecks().verify()\n                .request(req)\n                .call();\n\n        if (res.proxyCheck().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Domain using Clerk SDK Java\nDESCRIPTION: This example shows how to add a new satellite domain to an instance using the Clerk SDK in Java. The AddDomainRequestBody must include the domain name and specify it as a satellite domain. The method also allows setting up a proxy URL if needed. A bearer token is required for authorization.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/domains/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.AddDomainRequestBody;\nimport com.clerk.backend_api.models.operations.AddDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        AddDomainRequestBody req = AddDomainRequestBody.builder()\n                .name(\"<value>\")\n                .isSatellite(false)\n                .build();\n\n        AddDomainResponse res = sdk.domains().add()\n                .request(req)\n                .call();\n\n        if (res.domain().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing SAML Connections using Clerk SDK Java\nDESCRIPTION: This snippet demonstrates how to retrieve a list of SAML connections associated with a particular instance using the Clerk SDK for Java. It utilizes the ListSAMLConnectionsRequest object to facilitate the request, and handles the response accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/samlconnections/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListSAMLConnectionsRequest;\nimport com.clerk.backend_api.models.operations.ListSAMLConnectionsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListSAMLConnectionsRequest req = ListSAMLConnectionsRequest.builder()\n                .build();\n\n        ListSAMLConnectionsResponse res = sdk.samlConnections().list()\n                .request(req)\n                .call();\n\n        if (res.samlConnections().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Invitations in Java using Clerk SDK\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK in Java to list organization invitations with specific criteria such as organization ID and status. The code initializes the Clerk SDK with a bearer token and includes parameters for pagination. The expected output is a list of organization invitations, and the snippet also handles response presence checking.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListOrganizationInvitationsQueryParamStatus;\nimport com.clerk.backend_api.models.operations.ListOrganizationInvitationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListOrganizationInvitationsResponse res = sdk.organizationInvitations().list()\n                .organizationId(\"<id>\")\n                .status(ListOrganizationInvitationsQueryParamStatus.REVOKED)\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.organizationInvitations().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating OAuth Application in Java with Clerk SDK\nDESCRIPTION: Updates an existing OAuth application with optional configuration changes, supporting flexible modification of application properties\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateOAuthApplicationRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateOAuthApplicationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateOAuthApplicationResponse res = sdk.oauthApplications().update()\n                .oauthApplicationId(\"<id>\")\n                .requestBody(UpdateOAuthApplicationRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.oAuthApplication().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Organization Logo with Clerk Java SDK\nDESCRIPTION: This snippet shows how to delete an organization's logo using the Clerk Java SDK. It initializes the SDK with authentication and makes a call to delete the logo for a specific organization ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizations/README.md#2025-04-19_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteOrganizationLogoResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteOrganizationLogoResponse res = sdk.organizations().deleteLogo()\n                .organizationId(\"<id>\")\n                .call();\n\n        if (res.organization().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Session with Clerk SDK Java\nDESCRIPTION: This snippet shows how to verify a session's authentication status using the Clerk SDK in Java. The method requires a session ID and optionally a request body. It is deprecated and intended to be replaced by networkless verification in future SDK versions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.VerifySessionRequestBody;\nimport com.clerk.backend_api.models.operations.VerifySessionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        VerifySessionResponse res = sdk.sessions().verify()\n                .sessionId(\"<id>\")\n                .requestBody(VerifySessionRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.session().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Backup Codes in Clerk Java SDK\nDESCRIPTION: Example demonstrating how to disable all backup codes for a user using the Clerk Java SDK. Requires a bearer token for authentication and a user ID to identify the target user.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_19\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteBackupCodeResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteBackupCodeResponse res = sdk.users().deleteBackupCodes()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Organization Invitation with Clerk Java SDK\nDESCRIPTION: This method fetches an existing organization invitation by its ID. It requires both the organization ID and the invitation ID as parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nGetOrganizationInvitationResponse res = sdk.organizationInvitations().get()\n        .organizationId(\"<id>\")\n        .invitationId(\"<id>\")\n        .call();\n\nif (res.organizationInvitation().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Blocklist Identifiers in Clerk SDK Java\nDESCRIPTION: This snippet retrieves a list of all identifiers that are blocked from accessing a Clerk instance. It initializes the Clerk SDK, calls the list method, and handles the response accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/blocklistidentifiers/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListBlocklistIdentifiersResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListBlocklistIdentifiersResponse res = sdk.blocklistIdentifiers().list()\n                .call();\n\n        if (res.blocklistIdentifiers().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Organization Invitations Clerk SDK Java\nDESCRIPTION: This code snippet illustrates how to create a new organization invitation and send an email with the Clerk SDK in Java. Parameters include organizationId and requestBody, with options to set the inviter_user_id, role, and optional metadata. Creation is limited to admin users, and the invitation remains pending until accepted or revoked. The Clerk SDK and relevant model imports are prerequisites.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOrganizationInvitationRequestBody;\nimport com.clerk.backend_api.models.operations.CreateOrganizationInvitationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOrganizationInvitationResponse res = sdk.organizationInvitations().create()\n                .organizationId(\"<id>\")\n                .requestBody(CreateOrganizationInvitationRequestBody.builder()\n                    .emailAddress(\"Loyal79@yahoo.com\")\n                    .role(\"<value>\")\n                    .build())\n                .call();\n\n        if (res.organizationInvitation().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Java User Data Model Properties\nDESCRIPTION: Data model definitions for user attributes in the Clerk Java SDK. Includes fields for username, name components, profile images, and metadata storage. Uses JsonNullable for nullable string fields and Optional for optional properties.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/User.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nusername: JsonNullable<String>\nfirstName: JsonNullable<String>\nlastName: JsonNullable<String>\nprofileImageUrl: Optional<String> // Deprecated\nimageUrl: Optional<String>\nhasImage: Optional<Boolean>\npublicMetadata: Map<String, Object>\nprivateMetadata: Map<String, Object>\n```\n\n----------------------------------------\n\nTITLE: Request Authentication Example\nDESCRIPTION: Example utility function showing how to authenticate requests from frontend to Clerk's Backend API\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nimport java.net.http.HttpRequest;\nimport com.clerk.backend_api.helpers.jwks.AuthenticateRequest;\nimport com.clerk.backend_api.helpers.jwks.AuthenticateRequestOptions;\nimport com.clerk.backend_api.helpers.jwks.RequestState;\n\npublic class UserAuthentication {\n\n    public static boolean isSignedIn(HttpRequest request) {\n        RequestState requestState = AuthenticateRequest.authenticateRequest(request, AuthenticateRequestOptions\n                .secretKey(System.getenv(\"CLERK_SECRET_KEY\"))\n                .authorizedParty(\"https://example.com\")\n                .build());\n        return requestState.isSignedIn();\n    }\n```\n\n----------------------------------------\n\nTITLE: Deleting Organization Domain with Clerk SDK\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK in Java to delete an organization domain. It initializes the Clerk SDK with a bearer token, calls the `delete` method on the `organizationDomains` object, and handles the response. The method requires `organizationId` and `domainId` as parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationdomains/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteOrganizationDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteOrganizationDomainResponse res = sdk.organizationDomains().delete()\n                .organizationId(\"<id>\")\n                .domainId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Redirect URL with Clerk SDK for Java\nDESCRIPTION: This snippet illustrates how to delete a redirect URL from the Clerk instance by its ID. The SDK is initialized, the delete method is called with the ID, and the response is handled accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/redirecturls/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteRedirectURLResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteRedirectURLResponse res = sdk.redirectUrls().delete()\n                .id(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Svix Auth URL using Clerk SDK in Java\nDESCRIPTION: This snippet shows how to generate an authentication URL for the Svix dashboard. The Clerk SDK is initialized, and the generateSvixAuthURL method is called. The response is checked for the Svix URL for further processing.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/webhooks/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GenerateSvixAuthURLResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GenerateSvixAuthURLResponse res = sdk.webhooks().generateSvixAuthURL()\n                .call();\n\n        if (res.svixURL().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a SAML Connection using Clerk SDK Java\nDESCRIPTION: This snippet provides an example of updating an existing SAML connection using the Clerk SDK. It employs an UpdateSAMLConnectionRequestBody to create the request for updating the connection, identified by its ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/samlconnections/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateSAMLConnectionRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateSAMLConnectionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateSAMLConnectionResponse res = sdk.samlConnections().update()\n                .samlConnectionId(\"<id>\")\n                .requestBody(UpdateSAMLConnectionRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.schemasSAMLConnection().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Redirect URLs in Clerk SDK for Java\nDESCRIPTION: This snippet demonstrates how to list all redirect URLs for a given instance using the Clerk SDK. It initializes the SDK with a bearer token, calls the list method, and handles the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/redirecturls/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.ListRedirectURLsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListRedirectURLsResponse res = sdk.redirectUrls().list()\n                .paginated(false)\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.redirectURLList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Class for Clerk Java SDK\nDESCRIPTION: This code defines the Error class that represents errors in the Clerk Java SDK. It includes fields for error code, message, long message, metadata, and clerk trace ID, along with JSON serialization capabilities.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Error.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage com.clerk.sdk;\n\nimport com.squareup.moshi.Json;\n\npublic class Error {\n    private final String code;\n    private final String message;\n    @Json(name = \"long_message\")\n    private final String longMessage;\n    private final Object meta;\n    @Json(name = \"clerk_trace_id\")\n    private final String clerkTraceId;\n\n    public Error(String code, String message, String longMessage, Object meta, String clerkTraceId) {\n        this.code = code;\n        this.message = message;\n        this.longMessage = longMessage;\n        this.meta = meta;\n        this.clerkTraceId = clerkTraceId;\n    }\n\n    public String getCode() {\n        return code;\n    }\n\n    public String getMessage() {\n        return message;\n    }\n\n    public String getLongMessage() {\n        return longMessage;\n    }\n\n    public Object getMeta() {\n        return meta;\n    }\n\n    public String getClerkTraceId() {\n        return clerkTraceId;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Instance Organization Memberships - Java SDK Example\nDESCRIPTION: Demonstrates how to fetch all organization memberships for an instance using the Clerk Java SDK. Supports pagination and sorting options through orderBy, limit, and offset parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_24\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.InstanceGetOrganizationMembershipsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        InstanceGetOrganizationMembershipsResponse res = sdk.users().getInstanceOrganizationMemberships()\n                .orderBy(\"<value>\")\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.organizationMemberships().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Waitlist Entries with Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to list waitlist entries using the Clerk SDK in Java. It initializes the Clerk SDK with a bearer token, creates a ListWaitlistEntriesRequest object, and then calls the list() method on the waitlistEntries() service. The response is then checked to see if waitlist entries are present.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/waitlistentries/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.ListWaitlistEntriesRequest;\nimport com.clerk.backend_api.models.operations.ListWaitlistEntriesResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListWaitlistEntriesRequest req = ListWaitlistEntriesRequest.builder()\n                .build();\n\n        ListWaitlistEntriesResponse res = sdk.waitlistEntries().list()\n                .request(req)\n                .call();\n\n        if (res.waitlistEntries().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User Profile Image with Clerk Java SDK\nDESCRIPTION: This snippet illustrates how to delete a user's profile image using the Clerk Java SDK. It requires the user's ID and returns a DeleteUserProfileImageResponse.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nDeleteUserProfileImageResponse res = sdk.users().deleteProfileImage()\n        .userId(\"<id>\")\n        .call();\n\nif (res.user().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Allowlist Identifier in Java with Clerk SDK\nDESCRIPTION: Removes a specific identifier from the allow-list using its unique identifier in a Clerk authentication instance\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/allowlistidentifiers/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nDeleteAllowlistIdentifierResponse res = sdk.allowlistIdentifiers().delete()\n        .identifierId(\"<id>\")\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Revoking Sign-In Tokens in Clerk Java SDK\nDESCRIPTION: This Java snippet shows how to revoke a pending sign-in token using the Clerk SDK. The user must provide the sign-in token ID that identifies which token to revoke. The example also demonstrates error handling in case the token cannot be revoked.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/signintokens/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RevokeSignInTokenResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RevokeSignInTokenResponse res = sdk.signInTokens().revoke()\n                .signInTokenId(\"<id>\")\n                .call();\n\n        if (res.signInToken().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Templates with Clerk SDK in Java\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK to list all available templates. It uses bearer authentication and specifies the template type as SMS. The results can be paginated with parameters such as limit and offset. The function is deprecated and should be migrated away from in future use.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailsmstemplates/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetTemplateListResponse;\nimport com.clerk.backend_api.models.operations.TemplateType;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetTemplateListResponse res = sdk.emailSMSTemplates().list()\n                .templateType(TemplateType.SMS)\n                .paginated(false)\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.templateList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Server URL Configuration in Java\nDESCRIPTION: Example showing how to override the default server URL when initializing the Clerk SDK client.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .serverURL(\"https://api.clerk.com/v1\")\n    .build();\n\nGetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n        .build();\n\nGetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n        .request(req)\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Phone Number with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a phone number's details using the Clerk API in Java. It initializes the Clerk SDK, then calls the get method on the phoneNumbers resource, providing the phoneNumberId as a parameter. The response contains the phone number's details if the operation is successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/phonenumbers/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetPhoneNumberResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetPhoneNumberResponse res = sdk.phoneNumbers().get()\n                .phoneNumberId(\"<id>\")\n                .call();\n\n        if (res.phoneNumber().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Field Structure for CreateEmailAddressRequestBody in Java SDK\nDESCRIPTION: Defines the fields required for creating a new email address for a user in Clerk. The structure includes required fields (userId, emailAddress) and optional fields (verified, primary) with their types and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateEmailAddressRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                      | Type                                                                                                                       | Required                                                                                                                   | Description                                                                                                                |\n| -------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| `userId`                                                                                                                   | *String*                                                                                                                   | :heavy_check_mark:                                                                                                         | The ID representing the user                                                                                               |\n| `emailAddress`                                                                                                             | *String*                                                                                                                   | :heavy_check_mark:                                                                                                         | The new email address. Must adhere to the RFC 5322 specification for email address format.                                 |\n| `verified`                                                                                                                 | *JsonNullable\\<Boolean>*                                                                                                   | :heavy_minus_sign:                                                                                                         | When created, the email address will be marked as verified.                                                                |\n| `primary`                                                                                                                  | *JsonNullable\\<Boolean>*                                                                                                   | :heavy_minus_sign:                                                                                                         | Create this email address as the primary email address for the user.<br/>Default: false, unless it is the first email address. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Retry Strategy in Java\nDESCRIPTION: Example demonstrating how to set up a default retry strategy that applies to all retryable operations in the SDK using RetryConfig at initialization.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .retryConfig(RetryConfig.builder()\n            .backoff(BackoffStrategy.builder()\n                .initialInterval(1L, TimeUnit.MILLISECONDS)\n                .maxInterval(50L, TimeUnit.MILLISECONDS)\n                .maxElapsedTime(1000L, TimeUnit.MILLISECONDS)\n                .baseFactor(1.1)\n                .jitterFactor(0.15)\n                .retryConnectError(false)\n                .build())\n            .build())\n    .build();\n```\n\n----------------------------------------\n\nTITLE: Rotating OAuth Application Secret in Java using Clerk SDK\nDESCRIPTION: Example demonstrating how to rotate an OAuth application's client secret using the Clerk Java SDK. Requires updating the secret in authorized OAuth clients after rotation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RotateOAuthApplicationSecretResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RotateOAuthApplicationSecretResponse res = sdk.oauthApplications().rotateSecret()\n                .oauthApplicationId(\"<id>\")\n                .call();\n\n        if (res.oAuthApplicationWithSecret().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Documentation Table for CreatePhoneNumberResponse Fields\nDESCRIPTION: Markdown table documenting the fields, types, requirements, and descriptions for the CreatePhoneNumberResponse class. Includes content type, status code, raw response, and phone number fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreatePhoneNumberResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `phoneNumber`                                                                                                                  | [Optional\\<PhoneNumber>](../../models/components/PhoneNumber.md)                                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Changing Production Instance Domain in Java\nDESCRIPTION: Changes the domain of a production Clerk instance with potential impacts on user sessions and deployment configurations\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/instancesettings/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nChangeProductionInstanceDomainRequestBody req = ChangeProductionInstanceDomainRequestBody.builder()\n    .build();\n\nChangeProductionInstanceDomainResponse res = sdk.instanceSettings().changeDomain()\n    .request(req)\n    .call();\n```\n\n----------------------------------------\n\nTITLE: Updating Instance Organization Settings with Clerk SDK in Java\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK for Java to update instance organization settings. It initializes the SDK with a bearer token, creates a request body, and makes an API call to update the settings. The response is then checked for the presence of organization settings.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/instancesettings/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsRequestBody;\nimport com.clerk.backend_api.models.operations.UpdateInstanceOrganizationSettingsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UpdateInstanceOrganizationSettingsRequestBody req = UpdateInstanceOrganizationSettingsRequestBody.builder()\n                .build();\n\n        UpdateInstanceOrganizationSettingsResponse res = sdk.instanceSettings().updateOrganizationSettings()\n                .request(req)\n                .call();\n\n        if (res.organizationSettings().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Clients with Clerk Java SDK\nDESCRIPTION: This Java snippet demonstrates how to list all clients using the Clerk SDK. The operation is marked as deprecated and should be migrated away from. It builds a Clerk SDK instance and uses paginated options to fetch client lists with an optional limit and offset. The example assumes the usage of Java exception handling and requires an authentication token to be set. The outputs are client data sorted by creation date, with any errors handled by SDK exceptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/clients/README.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetClientListResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetClientListResponse res = sdk.clients().list()\n                .paginated(false)\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.clientList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Username Parameter Specification\nDESCRIPTION: This snippet outlines the specifications for the `username` parameter. It indicates that `username` should be of type `JsonNullable<String>`, represents the username of the user, and must be unique across the instance.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n| `username` | *JsonNullable\\<String>* | :heavy_minus_sign: | The username to give to the user.<br/>It must be unique across your instance. |\n```\n\n----------------------------------------\n\nTITLE: Preview Template with Clerk SDK in Java\nDESCRIPTION: This code snippet demonstrates how to use the Clerk SDK in Java to preview a template. It initializes the Clerk SDK with a bearer token, then calls the `preview` method with a template type, slug, and request body. The response is then handled within an if statement.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/templates/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.PreviewTemplateRequestBody;\nimport com.clerk.backend_api.models.operations.PreviewTemplateResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        PreviewTemplateResponse res = sdk.templates().preview()\n                .templateType(\"<value>\")\n                .slug(\"<value>\")\n                .requestBody(PreviewTemplateRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring SAML Connection Update Request\nDESCRIPTION: Represents a request to update a SAML connection with required fields including the connection ID and update details\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateSAMLConnectionRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| `samlConnectionId` | *String* | ✓ | The ID of the SAML Connection to update |\n| `requestBody` | UpdateSAMLConnectionRequestBody | ✓ | Update configuration details |\n```\n\n----------------------------------------\n\nTITLE: Defining Private Metadata in Java\nDESCRIPTION: Defines the `privateMetadata` attribute as a `Map<String, Object>`. This metadata is stored on the user and is only visible to the Backend API, ensuring sensitive user information remains protected from unauthorized access from the frontend.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\n\"Map<String, *Object*> `privateMetadata`\"\n```\n\n----------------------------------------\n\nTITLE: Deleting OAuth Application in Java using Clerk SDK\nDESCRIPTION: Example showing how to delete an OAuth application using the Clerk Java SDK. The deletion operation is irreversible and requires a valid bearer token and application ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteOAuthApplicationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteOAuthApplicationResponse res = sdk.oauthApplications().delete()\n                .oauthApplicationId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: API Methods Documentation\nDESCRIPTION: Markdown documentation listing all available API methods in the Clerk Java SDK, organized by resource categories like invitations, users, organizations, sessions etc.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n### [invitations()]\n* [create] - Create an invitation\n* [list] - List all invitations\n* [bulkCreate] - Create multiple invitations\n* [revoke] - Revokes an invitation\n\n### [jwks()]\n* [getJWKS] - Retrieve the JSON Web Key Set of the instance\n\n// ... additional methods listed\n```\n\n----------------------------------------\n\nTITLE: Creating OAuth Applications in Java with Clerk SDK\nDESCRIPTION: Creates a new OAuth application by providing a name and optional callback URL, with support for various URL schemes\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOAuthApplicationRequestBody;\nimport com.clerk.backend_api.models.operations.CreateOAuthApplicationResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOAuthApplicationRequestBody req = CreateOAuthApplicationRequestBody.builder()\n                .name(\"<value>\")\n                .build();\n\n        CreateOAuthApplicationResponse res = sdk.oauthApplications().create()\n                .request(req)\n                .call();\n\n        if (res.oAuthApplicationWithSecret().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Java\nDESCRIPTION: Type definitions for user model properties. The lastName field is defined as a nullable String, while emailAddress is defined as a List of Strings that must be unique across the instance, with the first email becoming the primary address.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nlastName: JsonNullable<String>\nemailAddress: List<String>\n```\n\n----------------------------------------\n\nTITLE: Listing JWT Templates in Java with Clerk SDK\nDESCRIPTION: Method to retrieve a list of JWT templates with optional pagination and result limit configurations\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwttemplates/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.ListJWTTemplatesResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListJWTTemplatesResponse res = sdk.jwtTemplates().list()\n                .paginated(false)\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.jwtTemplateList().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Organization Domain Request Fields Table\nDESCRIPTION: Markdown table defining the fields, types, and descriptions for the CreateOrganizationDomainRequestBody class. Includes fields for domain name, enrollment mode, and verification status.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationDomainRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                     | Type                                                                                                                      | Required                                                                                                                  | Description                                                                                                               |\n| ------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------- |\n| `name`                                                                                                                    | *Optional\\<String>*                                                                                                       | :heavy_minus_sign:                                                                                                        | The name of the new domain                                                                                                |\n| `enrollmentMode`                                                                                                          | *Optional\\<String>*                                                                                                       | :heavy_minus_sign:                                                                                                        | The enrollment_mode for the new domain. This can be `automatic_invitation`, `automatic_suggestion` or `manual_invitation` |\n| `verified`                                                                                                                | *JsonNullable\\<Boolean>*                                                                                                  | :heavy_minus_sign:                                                                                                        | The status of domain's verification. Defaults to true                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Defining Unsafe Metadata Map in Java\nDESCRIPTION: This snippet outlines the definition of 'unsafeMetadata', which is a map to store user metadata that can be modified by both frontend and backend APIs. It emphasizes the concern that this data may not be safe since it can be altered from the frontend.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n| `unsafeMetadata`| Map\\<String, *Object*>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | :heavy_minus_sign| Metadata saved on the user, that can be updated from both the Frontend and Backend APIs.<br/>Note: Since this data can be modified from the frontend, it is not guaranteed to be safe.\n```\n\n----------------------------------------\n\nTITLE: Initializing Clerk SDK for Instance Settings Update\nDESCRIPTION: Demonstrates how to initialize the Clerk SDK and update instance authentication configuration with bearer token authentication\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/betafeatures/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpdateInstanceAuthConfigRequestBody req = UpdateInstanceAuthConfigRequestBody.builder()\n        .build();\n\nUpdateInstanceAuthConfigResponse res = sdk.betaFeatures().updateInstanceSettings()\n        .request(req)\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Setting Up Backup Codes for User Authentication in Java\nDESCRIPTION: Explains the 'backupCodes' parameter for configuring backup codes as an alternative authentication method. It mentions that codes can be provided in plain format or as bcrypt digests.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nList<String> backupCodes\n```\n\n----------------------------------------\n\nTITLE: SignUp Model Fields Structure - Java\nDESCRIPTION: Field definitions for the SignUp model including data types and validation requirements. Fields include basic user information like ID, status, required/optional fields, verifications, and personal information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignUp.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description | Example |\n| `object` | [SignUpObject] | :heavy_check_mark: | N/A | |\n| `id` | *String* | :heavy_check_mark: | N/A | |\n| `status` | [SignUpStatus] | :heavy_check_mark: | N/A | |\n| `requiredFields` | List<*String*> | :heavy_check_mark: | N/A | |\n| `optionalFields` | List<*String*> | :heavy_check_mark: | N/A | |\n| `missingFields` | List<*String*> | :heavy_check_mark: | N/A | |\n| `unverifiedFields` | List<*String*> | :heavy_check_mark: | N/A | |\n| `verifications` | [SignUpVerifications] | :heavy_check_mark: | N/A | |\n| `username` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `emailAddress` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `phoneNumber` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `web3Wallet` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `passwordEnabled` | *boolean* | :heavy_check_mark: | N/A | |\n| `firstName` | *Optional<String>* | :heavy_check_mark: | N/A | |\n```\n\n----------------------------------------\n\nTITLE: Describing profileImageId Parameter in Clerk SDK Java\nDESCRIPTION: This snippet describes the `profileImageId` parameter. It is a JsonNullable<String>, meaning it can be either a String or null. It represents the ID of the image to set as the user's profile image.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"`profileImageId`| *JsonNullable\\<String| :heavy_minus_sign| The ID of the image to set as the user's profile image|\"\n```\n\n----------------------------------------\n\nTITLE: Installing Clerk SDK with Gradle\nDESCRIPTION: Adding the Clerk Java SDK dependency using Gradle build configuration\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\nimplementation 'com.clerk:backend-api:2.3.1'\n```\n\n----------------------------------------\n\nTITLE: DeleteTOTPResponse Fields Definition in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the DeleteTOTPResponse class. Includes contentType, statusCode, rawResponse, and object fields with their corresponding types and usage details.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteTOTPResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `object`                                                                                                                       | [Optional\\<DeleteTOTPResponseBody>](../../models/operations/DeleteTOTPResponseBody.md)                                         | :heavy_minus_sign:                                                                                                             | Successful operation.                                                                                                          |\n```\n\n----------------------------------------\n\nTITLE: Configuring Self-Deletion Permission in Java\nDESCRIPTION: This snippet defines 'deleteSelfEnabled', a boolean flag wrapped in JsonNullable, that allows users to delete their own accounts if enabled. This feature can enhance user autonomy but should be implemented with care regarding user data management.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n| `deleteSelfEnabled`| *JsonNullable\\<Boolean| :heavy_minus_sign| If enabled, user can delete themselves via FAPI.<br/>\n```\n\n----------------------------------------\n\nTITLE: Reverting a Template with Clerk SDK in Java\nDESCRIPTION: This code demonstrates how to revert a modified template to its default state using the Clerk SDK in Java. It leverages bearer authentication and requires the specification of template type and slug. As this operation is deprecated, it is advised to transition to new methods for future implementations.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailsmstemplates/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.RevertTemplatePathParamTemplateType;\nimport com.clerk.backend_api.models.operations.RevertTemplateResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        RevertTemplateResponse res = sdk.emailSMSTemplates().revert()\n                .templateType(RevertTemplatePathParamTemplateType.EMAIL)\n                .slug(\"<value>\")\n                .call();\n\n        if (res.template().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring unsafeMetadata Field in Java\nDESCRIPTION: Defines the unsafeMetadata field as a Map of String to Object. This field stores metadata that can be updated from both Frontend and Backend APIs, but is not guaranteed to be safe.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nMap<String, Object> unsafeMetadata\n```\n\n----------------------------------------\n\nTITLE: Disabling MFA Authentication in Clerk Java SDK\nDESCRIPTION: Example showing how to disable all MFA methods for a user using the Clerk Java SDK. Requires a bearer token for authentication and a user ID as input.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_18\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DisableMFAResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DisableMFAResponse res = sdk.users().disableMfa()\n                .userId(\"<id>\")\n                .call();\n\n        if (res.object().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Clerk SDK and Upserting SMS Template\nDESCRIPTION: Demonstrates how to initialize the Clerk SDK and use the deprecated upsert method for SMS templates with bearer authentication\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailandsmstemplates/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpsertTemplateResponse res = sdk.emailAndSmsTemplates().upsert()\n    .templateType(UpsertTemplatePathParamTemplateType.SMS)\n    .slug(\"<value>\")\n    .requestBody(UpsertTemplateRequestBody.builder()\n        .build())\n    .call();\n```\n\n----------------------------------------\n\nTITLE: Describing password Parameter in Clerk SDK Java\nDESCRIPTION: This snippet describes the `password` parameter. It is a JsonNullable<String>, meaning it can be either a String or null. It represents the plaintext password for the user and must be at least 8 characters long and not present in any list of hacked passwords.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"`password`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       | *JsonNullable\\<String| :heavy_minus_sign| The plaintext password to give the user.\\<br/>Must be at least 8 characters long, and can not be in any list of hacked passwords|\"\n```\n\n----------------------------------------\n\nTITLE: API Response Fields Table in Markdown\nDESCRIPTION: A markdown table documenting the fields of the BanUserResponse class, including content type, status code, raw response, and user object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/BanUserResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `user`                                                                                                                         | [Optional\\<User>](../../models/components/User.md)                                                                             | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Declaring deleteSelfEnabled Field in Java\nDESCRIPTION: Defines the deleteSelfEnabled field as a JsonNullable<Boolean>. When true, it allows the user to delete themselves using the Frontend API.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nJsonNullable<Boolean> deleteSelfEnabled\n```\n\n----------------------------------------\n\nTITLE: Configuring Retry Strategy for Single API Call in Java\nDESCRIPTION: Example showing how to configure a custom retry strategy for a single API operation using RetryConfig and BackoffStrategy builders. Sets retry intervals, timeouts and jitter parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .build();\n\nGetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n        .build();\n\nGetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n        .request(req)\n        .retryConfig(RetryConfig.builder()\n            .backoff(BackoffStrategy.builder()\n                .initialInterval(1L, TimeUnit.MILLISECONDS)\n                .maxInterval(50L, TimeUnit.MILLISECONDS)\n                .maxElapsedTime(1000L, TimeUnit.MILLISECONDS)\n                .baseFactor(1.1)\n                .jitterFactor(0.15)\n                .retryConnectError(false)\n                .build())\n            .build())\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Defining Public and Private Metadata Fields for User Objects in Java\nDESCRIPTION: Declares two Map<String, Object> fields for storing user metadata in the Clerk Java SDK. The publicMetadata field is accessible to both Frontend and Backend APIs, while privateMetadata is only visible to the Backend API.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nMap<String, Object> publicMetadata;\nMap<String, Object> privateMetadata;\n```\n\n----------------------------------------\n\nTITLE: Bulk Creating Organization Invitations with Clerk SDK in Java\nDESCRIPTION: This snippet illustrates the bulk creation of organization invitations using the Clerk SDK in Java. It sets up the SDK with a bearer token and initiates a bulk creation request with a specified organization ID and request body. The code expects a response with the created invitations and includes handling for checking the presence of this response. The snippet supports handling of invitations metadata and uses HTTP exceptions for error handling.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateOrganizationInvitationBulkResponse;\nimport java.lang.Exception;\nimport java.util.List;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateOrganizationInvitationBulkResponse res = sdk.organizationInvitations().bulkCreate()\n                .organizationId(\"<id>\")\n                .requestBody(List.of(\n                ))\n                .call();\n\n        if (res.organizationInvitations().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating ListOrganizationsRequest in Java Clerk SDK\nDESCRIPTION: Constructs a request for fetching organizations with optional pagination and limit configurations. Allows developers to retrieve a list of organizations with flexible query parameters.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationsRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nListOrganizationsRequest request = ListOrganizationsRequest.builder()\n    .limit(10)\n    .offset(0)\n    .build();\n```\n\n----------------------------------------\n\nTITLE: DeleteExternalAccountRequest Fields Documentation\nDESCRIPTION: Documents the required fields for deleting an external account. The request requires two mandatory fields: userId to identify the user and externalAccountId to specify which external account to delete.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteExternalAccountRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                    | Type                                     | Required                                 | Description                              |\n| ---------------------------------------- | ---------------------------------------- | ---------------------------------------- | ---------------------------------------- |\n| `userId`                                 | *String*                                 | :heavy_check_mark:                       | The ID of the user's external account    |\n| `externalAccountId`                      | *String*                                 | :heavy_check_mark:                       | The ID of the external account to delete |\n```\n\n----------------------------------------\n\nTITLE: Defining Legal Acceptance Parameters in Java\nDESCRIPTION: This snippet defines two parameters: 'legalAcceptedAt' for specifying when a user accepted legal requirements, and 'skipLegalChecks' for optionally skipping legal checks. Both use JsonNullable types, indicating they are optional.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nlegalAcceptedAt JsonNullable<String>\nskipLegalChecks JsonNullable<Boolean>\n```\n\n----------------------------------------\n\nTITLE: Email Address Query Search\nDESCRIPTION: Searches users by email address using case-insensitive partial matching. Allows finding users with emails similar to the provided query.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nOptional<String> emailAddressQuery\n```\n\n----------------------------------------\n\nTITLE: Defining username for user\nDESCRIPTION: Sets the username property for a user within the Clerk SDK, which must be unique across the entire instance. Similar to the previous property, it also utilizes JsonNullable for flexibility in user creation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n| `username`| *JsonNullable\\<String| :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | The username to give to the user.<br/>It must be unique across your instance.\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to initialize the Clerk SDK, create a request to the public interstitial endpoint, and handle the response. It shows the basic pattern of building the SDK instance, constructing a request object, and calling a service method.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/USAGE.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialRequest;\nimport com.clerk.backend_api.models.operations.GetPublicInterstitialResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws Exception {\n\n        Clerk sdk = Clerk.builder()\n            .build();\n\n        GetPublicInterstitialRequest req = GetPublicInterstitialRequest.builder()\n                .build();\n\n        GetPublicInterstitialResponse res = sdk.miscellaneous().getPublicInterstitial()\n                .request(req)\n                .call();\n\n        // handle response\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Sign-up Date in Java with Clerk SDK\nDESCRIPTION: This code snippet defines the 'createdAt' field for a user object. It uses JsonNullable<String> to allow for null values and expects the date to be in RFC3339 format.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nJsonNullable<String> createdAt;\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Fields in Markdown Table\nDESCRIPTION: A markdown table that specifies the fields, types, requirements, and descriptions for the Organization model. It includes properties like object, id, name, slug, member counts, metadata, and timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Organization.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                               | Type                                                                | Required                                                            | Description                                                         |\n| ------------------------------------------------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------- |\n| `object`                                                            | [OrganizationObject](../../models/components/OrganizationObject.md) | :heavy_check_mark:                                                  | N/A                                                                 |\n| `id`                                                                | *String*                                                            | :heavy_check_mark:                                                  | N/A                                                                 |\n| `name`                                                              | *String*                                                            | :heavy_check_mark:                                                  | N/A                                                                 |\n| `slug`                                                              | *String*                                                            | :heavy_check_mark:                                                  | N/A                                                                 |\n| `membersCount`                                                      | *Optional<Long>*                                                   | :heavy_minus_sign:                                                  | N/A                                                                 |\n| `missingMemberWithElevatedPermissions`                              | *Optional<Boolean>*                                                | :heavy_minus_sign:                                                  | N/A                                                                 |\n| `pendingInvitationsCount`                                           | *Optional<Long>*                                                   | :heavy_minus_sign:                                                  | N/A                                                                 |\n| `maxAllowedMemberships`                                             | *long*                                                              | :heavy_check_mark:                                                  | N/A                                                                 |\n| `adminDeleteEnabled`                                                | *boolean*                                                           | :heavy_check_mark:                                                  | N/A                                                                 |\n| `publicMetadata`                                                    | Map<String, *Object*>                                              | :heavy_check_mark:                                                  | N/A                                                                 |\n| `privateMetadata`                                                   | Map<String, *Object*>                                              | :heavy_check_mark:                                                  | N/A                                                                 |\n| `createdBy`                                                         | *Optional<String>*                                                 | :heavy_minus_sign:                                                  | N/A                                                                 |\n| `createdAt`                                                         | *long*                                                              | :heavy_check_mark:                                                  | Unix timestamp of creation.<br/>                                    |\n| `updatedAt`                                                         | *long*                                                              | :heavy_check_mark:                                                  | Unix timestamp of last update.<br/>                                 |\n```\n\n----------------------------------------\n\nTITLE: Getting a SAML Connection by ID using Clerk SDK Java\nDESCRIPTION: This code snippet fetches a specific SAML connection referenced by its ID using the Clerk SDK for Java. It highlights the handling of the GetSAMLConnectionResponse after fetching the connection.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/samlconnections/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetSAMLConnectionResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetSAMLConnectionResponse res = sdk.samlConnections().get()\n                .samlConnectionId(\"<id>\")\n                .call();\n\n        if (res.schemasSAMLConnection().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: OrganizationMemberships Field Definitions - Markdown\nDESCRIPTION: Defines the fields available in the OrganizationMemberships model, including a list of membership data and total count. The data field contains a list of OrganizationMembership objects, while totalCount provides the aggregate number of memberships.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationMemberships.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                              | Type                                                                               | Required                                                                           | Description                                                                        |\n| ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| `data`                                                                             | List\\<[OrganizationMembership](../../models/components/OrganizationMembership.md)> | :heavy_check_mark:                                                                 | N/A                                                                                |\n| `totalCount`                                                                       | *long*                                                                             | :heavy_check_mark:                                                                 | Total number of organization memberships<br/>                                      |\n```\n\n----------------------------------------\n\nTITLE: Java Class Field Structure for Organization Invitation\nDESCRIPTION: Definition of fields used in the CreateOrganizationInvitationBulkRequestBody class. Includes email address, inviter details, role assignments, metadata storage, and invitation settings.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationInvitationBulkRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nclass CreateOrganizationInvitationBulkRequestBody {\n    String emailAddress;           // Required - Email address of the invitee\n    JsonNullable<String> inviterUserId; // Optional - ID of the inviting administrator\n    String role;                  // Required - Role in the organization\n    Map<String, Object> publicMetadata;  // Optional - Public metadata\n    Map<String, Object> privateMetadata; // Optional - Private metadata\n    JsonNullable<String> redirectUrl;    // Optional - Post-acceptance redirect URL\n    JsonNullable<Long> expiresInDays;    // Optional - Invitation validity period\n}\n```\n\n----------------------------------------\n\nTITLE: Managing User Phone Numbers in Clerk SDK\nDESCRIPTION: Allows adding multiple phone numbers to a user profile with unique constraints. The first phone number is set as the primary contact method.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nList<String> phoneNumber\n```\n\n----------------------------------------\n\nTITLE: File Field Specifications in Markdown Table\nDESCRIPTION: Markdown table defining the required fields for a File object, including fileName (String) and content (byte array) fields. Both fields are marked as required.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/File.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field              | Type               | Required           | Description        |\n| ------------------ | ------------------ | ------------------ | ------------------ |\n| `fileName`         | *String*           | :heavy_check_mark: | N/A                |\n| `content`          | *byte[]*           | :heavy_check_mark: | N/A                |\n```\n\n----------------------------------------\n\nTITLE: Password Parameter Specification\nDESCRIPTION: This snippet outlines the specifications for the `password` parameter. It indicates that `password` should be of type `JsonNullable<String>`, represents the password of the user, and must be at least 8 characters long and not be found in lists of compromised passwords.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_5\n\nLANGUAGE: none\nCODE:\n```\n| `password` | *JsonNullable\\<String>* | :heavy_minus_sign: | The plaintext password to give the user.<br/>Must be at least 8 characters long, and can not be in any list of hacked passwords. |\n```\n\n----------------------------------------\n\nTITLE: Defining OAuthApplication Interface in Java for Clerk SDK\nDESCRIPTION: This code defines the OAuthApplication interface that represents an OAuth application in the Clerk ecosystem. It includes getters for various properties such as ID, name, callback URLs, scopes, and other OAuth-related configuration settings.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplication.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage com.clerk.sdk.oauth;\n\nimport java.util.List;\n\npublic interface OAuthApplication {\n\n    String getId();\n\n    String getName();\n\n    String getClientId();\n\n    String getClientSecret();\n\n    List<String> getCallbackUrl();\n\n    List<String> getScopes();\n\n    boolean isPublic();\n\n    String getCreatedAt();\n\n    String getUpdatedAt();\n\n}\n\n```\n\n----------------------------------------\n\nTITLE: Filtering Users by Roles\nDESCRIPTION: Returns users with specified roles. Supports up to 100 roles and ignores any roles not found in the system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nList<String> role\n```\n\n----------------------------------------\n\nTITLE: DomainsEnrollmentModes Enum Values Table in Markdown\nDESCRIPTION: A table displaying the enum constants and their corresponding API values for domain enrollment modes in the Clerk SDK. The modes define how users can be enrolled from specific domains: through manual invitations, automatic invitations, or automatic suggestions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/DomainsEnrollmentModes.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                   | Value                  |\n| ---------------------- | ---------------------- |\n| `MANUAL_INVITATION`    | manual_invitation      |\n| `AUTOMATIC_INVITATION` | automatic_invitation   |\n| `AUTOMATIC_SUGGESTION` | automatic_suggestion   |\n```\n\n----------------------------------------\n\nTITLE: Counting Users by Email Address Query in Java\nDESCRIPTION: This snippet defines the `emailAddressQuery` parameter, which is an optional string used to count users whose email addresses match the query with case-insensitive partial matching. For example, providing `email_address_query=ello` would also count emails like `HELLO@example.com`.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUsersCountRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| `emailAddressQuery`                                                                                                                                                                                                                                                                                                                                 | *Optional\\<String>*                                                                                                                                                                                                                                                                                                                                 | :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                  | Counts users with emails that match the given query, via case-insensitive partial match.<br/>For example, `email_address_query=ello` will match a user with the email `HELLO@example.com`,<br/>and will be included in the resulting count.                                                                                                         |                                                                                                                                                                                                                                                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Defining a Query for User Filtering - Java\nDESCRIPTION: This snippet establishes a variable `query`, which is an optional string used to match users based on various attributes like email addresses, usernames, and more. The query allows for partial matches, increasing the flexibility in user searches.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUserListRequest.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n| `query`| *Optional\\<String| :heavy_minus_sign| Returns users that match the given query.<br/>For possible matches, we check the email addresses, phone numbers, usernames, web3 wallets, user ids, first and last names.<br/>The query value doesn't need to match the exact value you are looking for, it is capable of partial matches as well.\n```\n\n----------------------------------------\n\nTITLE: GetJWTTemplateResponse Fields Definition in Markdown\nDESCRIPTION: Defines the fields of the GetJWTTemplateResponse class including content type, status code, raw response, and JWT template. Each field is documented with its type, requirement status, and purpose.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetJWTTemplateResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `jwtTemplate`                                                                                                                  | [Optional\\<JWTTemplate>](../../models/components/JWTTemplate.md)                                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining Organization IDs for User Querying - Java\nDESCRIPTION: This snippet defines a variable `organizationId`, which is a list of organization IDs used to filter users based on their membership status. The IDs can be prefixed with `+` or `-` to include or exclude specific organizations from the result set, accommodating up to 100 organization IDs.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUserListRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n| `organizationId`| List\\<*String| :heavy_minus_sign| Returns users that have memberships to the<br/>given organizations.<br/>For each organization id, the `+` and `-` can be<br/>prepended to the id, which denote whether the<br/>respective organization should be included or<br/>excluded from the result set.<br/>Accepts up to 100 organization ids.\n```\n\n----------------------------------------\n\nTITLE: OAuth Application Field Definitions - Java SDK\nDESCRIPTION: Comprehensive field definitions for OAuth application objects including required properties like client ID, URIs, scopes and metadata. Each field is marked as required and includes type information and deprecation notices where applicable.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplication.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `object` | [OAuthApplicationObject](../../models/components/OAuthApplicationObject.md) | :heavy_check_mark: | N/A |\n| `id` | *String* | :heavy_check_mark: | N/A |\n| `instanceId` | *String* | :heavy_check_mark: | N/A |\n| `name` | *String* | :heavy_check_mark: | N/A |\n| `clientId` | *String* | :heavy_check_mark: | N/A |\n| `public_` | *boolean* | :heavy_check_mark: | N/A |\n| `scopes` | *String* | :heavy_check_mark: | N/A |\n| `redirectUris` | List\\<*String*> | :heavy_check_mark: | N/A |\n| ~~`callbackUrl`~~ | *String* | :heavy_check_mark: | : warning: ** DEPRECATED **: This will be removed in a future release, please migrate away from it as soon as possible.\\<br/>\\<br/>Deprecated: Use redirect_uris instead.\\<br/> |\n| `authorizeUrl` | *String* | :heavy_check_mark: | N/A |\n| `tokenFetchUrl` | *String* | :heavy_check_mark: | N/A |\n| `userInfoUrl` | *String* | :heavy_check_mark: | N/A |\n| `discoveryUrl` | *String* | :heavy_check_mark: | N/A |\n```\n\n----------------------------------------\n\nTITLE: Field Definitions for CreateAllowlistIdentifierResponse Class\nDESCRIPTION: Defines the fields and their properties for the CreateAllowlistIdentifierResponse class. Includes content type, status code, raw HTTP response, and allowlist identifier fields with their respective types and requirements.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateAllowlistIdentifierResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `allowlistIdentifier`                                                                                                          | [Optional\\<AllowlistIdentifier>](../../models/components/AllowlistIdentifier.md)                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Redirect URL by ID with Clerk SDK for Java\nDESCRIPTION: This snippet demonstrates how to retrieve the details of a redirect URL using its ID with the Clerk SDK. It initializes the SDK, performs the get request, and processes the response.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/redirecturls/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetRedirectURLResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetRedirectURLResponse res = sdk.redirectUrls().get()\n                .id(\"<id>\")\n                .call();\n\n        if (res.redirectURL().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationDomainVerification Class Fields in Java\nDESCRIPTION: This snippet outlines the fields of the OrganizationDomainVerification class. It includes the status of verification, the strategy used, the number of verification attempts, and the expiration timestamp.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationDomainVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class OrganizationDomainVerification {\n    private OrganizationDomainStatus status;\n    private String strategy;\n    private Optional<Long> attempts;\n    private Optional<Long> expireAt;\n    // ... constructors, getters, and setters would follow\n}\n```\n\n----------------------------------------\n\nTITLE: Clerk User Parameters Table\nDESCRIPTION: Markdown table defining user parameters for the Clerk Java SDK, including externalId and firstName fields with their types and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| `externalId` | *JsonNullable\\<String>* | :heavy_minus_sign: | The ID of the user as used in your external systems or your previous authentication solution.<br/>Must be unique across your instance. |\n| `firstName` | *JsonNullable\\<String>* | :heavy_minus_sign: | The first name to assign to the user |\n```\n\n----------------------------------------\n\nTITLE: Filtering Users by Username List\nDESCRIPTION: Returns users matching a list of specified usernames. Supports up to 100 usernames, and ignores any usernames not found in the system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<String> username\n```\n\n----------------------------------------\n\nTITLE: Defining InvitationRevoked Class Fields in Java\nDESCRIPTION: This snippet outlines the fields of the InvitationRevoked class, including their types, requirements, and descriptions. It covers various attributes of a revoked invitation such as ID, email address, metadata, status, and timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InvitationRevoked.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class InvitationRevoked {\n    private InvitationRevokedObject object;\n    private String id;\n    private String emailAddress;\n    private Map<String, Object> publicMetadata;\n    private Optional<Boolean> revoked;\n    private InvitationRevokedStatus status;\n    private Optional<String> url;\n    private JsonNullable<Long> expiresAt;\n    private long createdAt;\n    private long updatedAt;\n    // ... getters and setters\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Users by Creation Date in Java\nDESCRIPTION: This code snippet demonstrates the usage of `createdAtBefore` and `createdAtAfter` parameters.  These parameters are used to filter users based on their creation timestamp, allowing developers to retrieve users created before or after a specific point in time represented in milliseconds since the epoch.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUserListRequest.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n\"createdAtBefore: Optional<Long> // Example: 1730160000000\"\n\n```\n\nLANGUAGE: Java\nCODE:\n```\n\"createdAtAfter: Optional<Long> // Example: 1730160000000\"\n```\n\n----------------------------------------\n\nTITLE: OrganizationMembership Field Definitions\nDESCRIPTION: Defines the structure of an OrganizationMembership object with its fields, types, and requirements. Includes core fields like ID, role, permissions, metadata, and timestamps. Also contains relationships to organization and user data.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationMembership.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                              | Type                                                                                                               | Required                                                                                                           | Description                                                                                                        |\n| ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------ |\n| `id`                                                                                                               | *String*                                                                                                           | :heavy_check_mark:                                                                                                 | N/A                                                                                                                |\n| `object`                                                                                                           | [OrganizationMembershipObject](../../models/components/OrganizationMembershipObject.md)                            | :heavy_check_mark:                                                                                                 | String representing the object's type. Objects of the same type share the same value.<br/>                         |\n| `role`                                                                                                             | *String*                                                                                                           | :heavy_check_mark:                                                                                                 | N/A                                                                                                                |\n| `roleName`                                                                                                         | *Optional\\<String>*                                                                                                | :heavy_minus_sign:                                                                                                 | N/A                                                                                                                |\n| `permissions`                                                                                                      | List\\<*String*>                                                                                                    | :heavy_check_mark:                                                                                                 | N/A                                                                                                                |\n| `publicMetadata`                                                                                                   | Map\\<String, *Object*>                                                                                             | :heavy_check_mark:                                                                                                 | Metadata saved on the organization membership, accessible from both Frontend and Backend APIs                      |\n| `privateMetadata`                                                                                                  | Map\\<String, *Object*>                                                                                             | :heavy_minus_sign:                                                                                                 | Metadata saved on the organization membership, accessible only from the Backend API                                |\n| `organization`                                                                                                     | [OrganizationMembershipOrganization](../../models/components/OrganizationMembershipOrganization.md)                | :heavy_check_mark:                                                                                                 | N/A                                                                                                                |\n| `publicUserData`                                                                                                   | [Optional\\<OrganizationMembershipPublicUserData>](../../models/components/OrganizationMembershipPublicUserData.md) | :heavy_minus_sign:                                                                                                 | An organization membership with public user data populated                                                         |\n| `createdAt`                                                                                                        | *long*                                                                                                             | :heavy_check_mark:                                                                                                 | Unix timestamp of creation.                                                                                        |\n| `updatedAt`                                                                                                        | *long*                                                                                                             | :heavy_check_mark:                                                                                                 | Unix timestamp of last update.                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Managing User Web3 Wallets in Clerk SDK\nDESCRIPTION: Enables adding multiple web3 wallets to a user profile with unique identification. The first wallet is designated as the primary wallet.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nList<String> web3Wallet\n```\n\n----------------------------------------\n\nTITLE: Updating Instance Settings in Java\nDESCRIPTION: Updates instance settings by constructing an update request body and calling the update method through the Clerk SDK\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/instancesettings/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n    .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpdateInstanceRequestBody req = UpdateInstanceRequestBody.builder()\n    .build();\n\nUpdateInstanceResponse res = sdk.instanceSettings().update()\n    .request(req)\n    .call();\n```\n\n----------------------------------------\n\nTITLE: OTP Verification Status Constants\nDESCRIPTION: Defines constant values representing different states of OTP verification. The states include UNVERIFIED (initial state), VERIFIED (successful verification), FAILED (failed attempt), and EXPIRED (OTP timeout).\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OTPVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUNVERIFIED = \"unverified\"\nVERIFIED = \"verified\"\nFAILED = \"failed\"\nEXPIRED = \"expired\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Users by Web3 Wallet Addresses\nDESCRIPTION: Returns users with specified web3 wallet addresses. Accepts up to 100 web3 wallet addresses, and ignores any addresses not found.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nList<String> web3Wallet\n```\n\n----------------------------------------\n\nTITLE: Phone Number Query Search\nDESCRIPTION: Searches users by phone number using case-insensitive partial matching. Enables finding users with phone numbers similar to the provided query.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nOptional<String> phoneNumberQuery\n```\n\n----------------------------------------\n\nTITLE: DeleteBlocklistIdentifierResponse Fields Definition in Markdown\nDESCRIPTION: Defines the fields available in the DeleteBlocklistIdentifierResponse class, including content type, status code, raw response, and deleted object information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteBlocklistIdentifierResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination in Java Clerk SDK\nDESCRIPTION: Provides optional parameters for controlling API result pagination, allowing developers to manage result set size and starting point through limit and offset configurations\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListInvitationsRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nOptional<Boolean> paginated = Optional.of(true);\nOptional<Long> limit = Optional.of(10L);\nOptional<Long> offset = Optional.of(0L);\n```\n\n----------------------------------------\n\nTITLE: Defining User Creation Timestamp in Java\nDESCRIPTION: This snippet defines the 'createdAt' field for a user object. It uses JsonNullable<String> as the data type, allowing for null values. The field represents the date and time when a user signed up, specified in RFC3339 format.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\ncreatedAt JsonNullable<String>\n```\n\n----------------------------------------\n\nTITLE: Field Definitions Table in Markdown\nDESCRIPTION: Markdown table documenting the fields of the CreateSignInTokenResponse class, including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSignInTokenResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `signInToken`                                                                                                                  | [Optional\\<SignInToken>](../../models/components/SignInToken.md)                                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Creating a Svix App using Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to use the Clerk SDK to create a Svix app. It initializes the SDK with a bearer token and calls the createSvixApp method. The response is checked for the Svix URL, which can be handled accordingly.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/webhooks/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.CreateSvixAppResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        CreateSvixAppResponse res = sdk.webhooks().createSvixApp()\n                .call();\n\n        if (res.svixURL().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Unlocking a User with Clerk Java SDK\nDESCRIPTION: This snippet demonstrates how to unlock a user using the Clerk Java SDK. It requires the user's ID and returns an UnlockUserResponse.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUnlockUserResponse res = sdk.users().unlock()\n        .userId(\"<id>\")\n        .call();\n\nif (res.user().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Status Values Table in Markdown\nDESCRIPTION: A markdown table that maps status name constants to their string values in the Clerk SDK. This includes statuses such as ACTIVE, REVOKED, ENDED, EXPIRED, REMOVED, ABANDONED, and REPLACED.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Status.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Value       |\n| ----------- | ----------- |\n| `ACTIVE`    | active      |\n| `REVOKED`   | revoked     |\n| `ENDED`     | ended       |\n| `EXPIRED`   | expired     |\n| `REMOVED`   | removed     |\n| `ABANDONED` | abandoned   |\n| `REPLACED`  | replaced    |\n```\n\n----------------------------------------\n\nTITLE: PhoneNumber Model Fields Documentation in Markdown\nDESCRIPTION: Markdown table documenting the fields of the PhoneNumber model, including their types, requirements, and descriptions. The model includes fields for phone number management, verification status, and timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/PhoneNumber.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                    | Type                                                                                     | Required                                                                                 | Description                                                                              |\n| ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------- |\n| `id`                                                                                     | *Optional\\<String>*                                                                      | :heavy_minus_sign:                                                                       | N/A                                                                                      |\n| `object`                                                                                 | [PhoneNumberObject](../../models/components/PhoneNumberObject.md)                        | :heavy_check_mark:                                                                       | String representing the object's type. Objects of the same type share the same value.<br/> |\n| `phoneNumber`                                                                            | *String*                                                                                 | :heavy_check_mark:                                                                       | N/A                                                                                      |\n| `reservedForSecondFactor`                                                                | *Optional\\<Boolean>*                                                                     | :heavy_minus_sign:                                                                       | N/A                                                                                      |\n| `defaultSecondFactor`                                                                    | *Optional\\<Boolean>*                                                                     | :heavy_minus_sign:                                                                       | N/A                                                                                      |\n| `reserved`                                                                               | *boolean*                                                                                | :heavy_check_mark:                                                                       | N/A                                                                                      |\n| `verification`                                                                           | [Optional\\<PhoneNumberVerification>](../../models/components/PhoneNumberVerification.md) | :heavy_check_mark:                                                                       | N/A                                                                                      |\n| `linkedTo`                                                                               | List\\<[IdentificationLink](../../models/components/IdentificationLink.md)>               | :heavy_check_mark:                                                                       | N/A                                                                                      |\n| `backupCodes`                                                                            | List\\<*String*>                                                                          | :heavy_minus_sign:                                                                       | N/A                                                                                      |\n| `createdAt`                                                                              | *long*                                                                                   | :heavy_check_mark:                                                                       | Unix timestamp of creation<br/>                                                          |\n| `updatedAt`                                                                              | *long*                                                                                   | :heavy_check_mark:                                                                       | Unix timestamp of creation<br/>                                                          |\n```\n\n----------------------------------------\n\nTITLE: Username Query Search\nDESCRIPTION: Searches users by username using case-insensitive partial matching. Allows finding users with usernames similar to the provided query.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nOptional<String> usernameQuery\n```\n\n----------------------------------------\n\nTITLE: CreateWaitlistEntryRequestBody Fields Table\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the CreateWaitlistEntryRequestBody class. Contains emailAddress (required String) and notify_ (optional Boolean) fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateWaitlistEntryRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                   | Type                                                                                                                    | Required                                                                                                                | Description                                                                                                             |\n| ----------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------- |\n| `emailAddress`                                                                                                          | *String*                                                                                                                | :heavy_check_mark:                                                                                                      | The email address to add to the waitlist                                                                                |\n| `notify_`                                                                                                               | *JsonNullable\\<Boolean>*                                                                                                | :heavy_minus_sign:                                                                                                      | Optional flag which denotes whether a confirmation email should be sent to the given email address.<br/>Defaults to `true`. |\n```\n\n----------------------------------------\n\nTITLE: CreateSessionTokenRequestBody Field Definition - Java\nDESCRIPTION: Defines the expiresInSeconds field using JsonNullable<Double> type for optional session token expiration override. This field allows customization of the session token lifetime.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nJsonNullable<Double> expiresInSeconds\n```\n\n----------------------------------------\n\nTITLE: Displaying Oauth Fields Table in Markdown\nDESCRIPTION: A markdown table showing the fields of the Oauth model in the Clerk Java SDK. The table includes field names, data types, whether fields are required, and descriptions for each field.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Oauth.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                            | Type                                                                             | Required                                                                         | Description                                                                      |\n| -------------------------------------------------------------------------------- | -------------------------------------------------------------------------------- | -------------------------------------------------------------------------------- | -------------------------------------------------------------------------------- |\n| `status`                                                                         | [OauthVerificationStatus](../../models/components/OauthVerificationStatus.md)    | :heavy_check_mark:                                                               | N/A                                                                              |\n| `strategy`                                                                       | *String*                                                                         | :heavy_check_mark:                                                               | N/A                                                                              |\n| `externalVerificationRedirectUrl`                                                | *Optional\\<String>*                                                              | :heavy_minus_sign:                                                               | N/A                                                                              |\n| `error`                                                                          | [JsonNullable\\<VerificationError>](../../models/components/VerificationError.md) | :heavy_minus_sign:                                                               | N/A                                                                              |\n| `expireAt`                                                                       | *long*                                                                           | :heavy_check_mark:                                                               | N/A                                                                              |\n| `attempts`                                                                       | *Optional\\<Long>*                                                                | :heavy_check_mark:                                                               | N/A                                                                              |\n| `verifiedAtClient`                                                               | *JsonNullable\\<String>*                                                          | :heavy_minus_sign:                                                               | N/A                                                                              |\n```\n\n----------------------------------------\n\nTITLE: Organization Membership Response Fields Table\nDESCRIPTION: Markdown table documenting the fields available in the DeleteOrganizationMembershipResponse class, including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationMembershipResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `organizationMembership`                                                                                                       | [Optional\\<OrganizationMembership>](../../models/components/OrganizationMembership.md)                                         | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: CreateOrganizationMembershipResponse Fields Table\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions of the CreateOrganizationMembershipResponse class. Includes core response fields like contentType, statusCode, rawResponse and the organizationMembership object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationMembershipResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `organizationMembership`                                                                                                       | [Optional\\<OrganizationMembership>](../../models/components/OrganizationMembership.md)                                         | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining Phone Number Response Fields in Java\nDESCRIPTION: Defines the structure for a phone number retrieval response, including content type, status code, raw HTTP response, and optional phone number details\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetPhoneNumberResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class GetPhoneNumberResponse {\n    String contentType;\n    int statusCode;\n    HttpResponse<InputStream> rawResponse;\n    Optional<PhoneNumber> phoneNumber;\n}\n```\n\n----------------------------------------\n\nTITLE: OTPVerificationStrategy Enum Constants in Markdown\nDESCRIPTION: Defines the possible OTP verification strategies available in the Clerk Java SDK. This includes PHONE_CODE for phone-based verification, EMAIL_CODE for email-based verification, and RESET_PASSWORD_EMAIL_CODE for password reset email verification.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OTPVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                        | Value                       |\n| --------------------------- | --------------------------- |\n| `PHONE_CODE`                | phone_code                  |\n| `EMAIL_CODE`                | email_code                  |\n| `RESET_PASSWORD_EMAIL_CODE` | reset_password_email_code   |\n```\n\n----------------------------------------\n\nTITLE: DeleteUserResponse Fields Definition in Markdown\nDESCRIPTION: Defines the fields of the DeleteUserResponse class including their types, requirements, and descriptions. Contains HTTP response metadata and deletion status information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteUserResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Creating Session Token Request Fields Structure\nDESCRIPTION: Defines the fields required for creating a session token request. The structure includes a mandatory sessionId field of type String and an optional requestBody field of type CreateSessionTokenRequestBody.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                | Type                                                                                                 | Required                                                                                             | Description                                                                                          |\n| ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- |\n| `sessionId`                                                                                          | *String*                                                                                             | :heavy_check_mark:                                                                                   | The ID of the session                                                                                |\n| `requestBody`                                                                                        | [Optional\\<CreateSessionTokenRequestBody>](../../models/operations/CreateSessionTokenRequestBody.md) | :heavy_minus_sign:                                                                                   | N/A                                                                                                  |\n```\n\n----------------------------------------\n\nTITLE: OAuth Applications Fields Documentation\nDESCRIPTION: Documents the fields available in the OAuth Applications response structure. Contains two main fields: a list of OAuth Application objects and a total count of applications.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplications.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                  | Type                                                                   | Required                                                               | Description                                                            |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------- |\n| `data`                                                                 | List\\<[OAuthApplication](../../models/components/OAuthApplication.md)> | :heavy_check_mark:                                                     | N/A                                                                    |\n| `totalCount`                                                           | *long*                                                                 | :heavy_check_mark:                                                     | Total number of OAuth applications<br/>                                |\n```\n\n----------------------------------------\n\nTITLE: GetOAuthAccessTokenRequest Field Structure Table\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the GetOAuthAccessTokenRequest class. Includes user ID, provider, pagination controls, and limit/offset parameters for result management.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetOAuthAccessTokenRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                                     | Type                                                                                                                                      | Required                                                                                                                                  | Description                                                                                                                               |\n| ----------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| `userId`                                                                                                                                  | *String*                                                                                                                                  | :heavy_check_mark:                                                                                                                        | The ID of the user for which to retrieve the OAuth access token                                                                           |\n| `provider`                                                                                                                                | *String*                                                                                                                                  | :heavy_check_mark:                                                                                                                        | The ID of the OAuth provider (e.g. `oauth_google`)                                                                                        |\n| `paginated`                                                                                                                               | *Optional\\<Boolean>*                                                                                                                      | :heavy_minus_sign:                                                                                                                        | Whether to paginate the results.<br/>If true, the results will be paginated.<br/>If false, the results will not be paginated.             |\n| `limit`                                                                                                                                   | *Optional\\<Long>*                                                                                                                         | :heavy_minus_sign:                                                                                                                        | Applies a limit to the number of results returned.<br/>Can be used for paginating the results together with `offset`.                     |\n| `offset`                                                                                                                                  | *Optional\\<Long>*                                                                                                                         | :heavy_minus_sign:                                                                                                                        | Skip the first `offset` results when paginating.<br/>Needs to be an integer greater or equal to zero.<br/>To be used in conjunction with `limit`. |\n```\n\n----------------------------------------\n\nTITLE: Deleting a Domain with Clerk SDK Java\nDESCRIPTION: This code snippet illustrates how to delete a satellite domain from an instance using the Clerk SDK in Java. The domain ID, which must refer to a satellite domain, is required for the deletion. Authentication is established via bearer token.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/domains/README.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteDomainResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteDomainResponse res = sdk.domains().delete()\n                .domainId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateOrganizationResponse Fields in Java\nDESCRIPTION: Represents the response structure for an organization update operation, containing HTTP response metadata and optional organization information\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateOrganizationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class UpdateOrganizationResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<Organization> organization;\n}\n```\n\n----------------------------------------\n\nTITLE: DisableMFARequest Class Fields\nDESCRIPTION: Class definition for disabling MFA methods for a user. Contains a required userId field that specifies which user's MFA methods should be disabled.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DisableMFARequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class DisableMFARequest {\n    private String userId;  // The ID of the user whose MFA methods are to be disabled\n}\n```\n\n----------------------------------------\n\nTITLE: JWT Template Field Definitions in Markdown\nDESCRIPTION: Markdown table defining the structure of JWT templates including field names, types, requirements, and descriptions. Contains specifications for core JWT properties like signing algorithm, claims, and timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/JWTTemplate.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                             | Type                                                              | Required                                                          | Description                                                       |\n| ----------------------------------------------------------------- | ----------------------------------------------------------------- | ----------------------------------------------------------------- | ----------------------------------------------------------------- |\n| `object`                                                          | [JWTTemplateObject](../../models/components/JWTTemplateObject.md) | :heavy_check_mark:                                                | N/A                                                               |\n| `id`                                                              | *String*                                                          | :heavy_check_mark:                                                | N/A                                                               |\n| `name`                                                            | *String*                                                          | :heavy_check_mark:                                                | N/A                                                               |\n| `claims`                                                          | [Claims](../../models/components/Claims.md)                       | :heavy_check_mark:                                                | N/A                                                               |\n| `lifetime`                                                        | *long*                                                            | :heavy_check_mark:                                                | N/A                                                               |\n| `allowedClockSkew`                                                | *long*                                                            | :heavy_check_mark:                                                | N/A                                                               |\n| `customSigningKey`                                                | *boolean*                                                         | :heavy_check_mark:                                                | N/A                                                               |\n| `signingAlgorithm`                                                | *String*                                                          | :heavy_check_mark:                                                | N/A                                                               |\n| `createdAt`                                                       | *long*                                                            | :heavy_check_mark:                                                | Unix timestamp of creation.<br/>                                  |\n| `updatedAt`                                                       | *long*                                                            | :heavy_check_mark:                                                | Unix timestamp of last update.<br/>                               |\n```\n\n----------------------------------------\n\nTITLE: Passkey Field Structure Definition - Java\nDESCRIPTION: Defines the field structure for Passkey class including required and optional fields. Contains fields for verification status, strategy, nonce, message, attempts, expiration time, and client verification status.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Passkey.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| --- | --- | --- | --- |\n| `status` | PasskeyVerificationStatus | :heavy_check_mark: | N/A |\n| `strategy` | PasskeyVerificationStrategy | :heavy_check_mark: | N/A |\n| `nonce` | Optional<Nonce> | :heavy_minus_sign: | N/A |\n| `message` | JsonNullable<String> | :heavy_minus_sign: | N/A |\n| `attempts` | Optional<Long> | :heavy_check_mark: | N/A |\n| `expireAt` | Optional<Long> | :heavy_check_mark: | N/A |\n| `verifiedAtClient` | JsonNullable<String> | :heavy_minus_sign: | N/A |\n```\n\n----------------------------------------\n\nTITLE: DeletePhoneNumberRequest Field Definition\nDESCRIPTION: Defines the required field for deleting a phone number. The phoneNumberId field is a mandatory String parameter that identifies which phone number should be deleted from the system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeletePhoneNumberRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString phoneNumberId\n```\n\n----------------------------------------\n\nTITLE: Defining Otp Class Fields in Markdown Table\nDESCRIPTION: This markdown table defines the fields of the Otp class, including their types, whether they are required, and any additional description. It covers status, strategy, attempts, expireAt, and verifiedAtClient fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Otp.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                               | Type                                                                | Required                                                            | Description                                                         |\n| ------------------------------------------------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------- | ------------------------------------------------------------------- |\n| `status`                                                            | [VerificationStatus](../../models/components/VerificationStatus.md) | :heavy_check_mark:                                                  | N/A                                                                 |\n| `strategy`                                                          | [Strategy](../../models/components/Strategy.md)                     | :heavy_check_mark:                                                  | N/A                                                                 |\n| `attempts`                                                          | *Optional\\<Long>*                                                   | :heavy_check_mark:                                                  | N/A                                                                 |\n| `expireAt`                                                          | *Optional\\<Long>*                                                   | :heavy_check_mark:                                                  | N/A                                                                 |\n| `verifiedAtClient`                                                  | *JsonNullable\\<String>*                                             | :heavy_minus_sign:                                                  | N/A                                                                 |\n```\n\n----------------------------------------\n\nTITLE: DeleteOrganizationRequest Field Specification\nDESCRIPTION: Defines the required field 'organizationId' for the DeleteOrganizationRequest class. This field is a string that represents the unique identifier of the organization to be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                | Type                                 | Required                             | Description                          |\n| ------------------------------------ | ------------------------------------ | ------------------------------------ | ------------------------------------ |\n| `organizationId`                     | *String*                             | :heavy_check_mark:                   | The ID of the organization to delete |\n```\n\n----------------------------------------\n\nTITLE: Retrieving a JWT Template in Java with Clerk SDK\nDESCRIPTION: Method to retrieve details of a specific JWT template by its template ID\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/jwttemplates/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetJWTTemplateResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetJWTTemplateResponse res = sdk.jwtTemplates().get()\n                .templateId(\"<id>\")\n                .call();\n\n        if (res.jwtTemplate().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Logo Upload Response Fields\nDESCRIPTION: Java class representing the response structure for an organization logo upload operation, including HTTP response details and optional organization logo information\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UploadOrganizationLogoResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nclass UploadOrganizationLogoResponse {\n    String contentType;\n    int statusCode;\n    HttpResponse<InputStream> rawResponse;\n    Optional<OrganizationWithLogo> organizationWithLogo;\n}\n```\n\n----------------------------------------\n\nTITLE: DisableMFA Response Fields Table Definition\nDESCRIPTION: Markdown table defining the fields, types, requirements, and descriptions for the DisableMFAResponse class. Contains fields for HTTP response metadata and body content.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DisableMFAResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `object`                                                                                                                       | [Optional\\<DisableMFAResponseBody>](../../models/operations/DisableMFAResponseBody.md)                                         | :heavy_minus_sign:                                                                                                             | Successful operation.                                                                                                          |\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateInstanceRestrictionsResponse Java Class\nDESCRIPTION: Defines a response class for instance restrictions update with fields for HTTP response metadata and optional instance restrictions data\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateInstanceRestrictionsResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class UpdateInstanceRestrictionsResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<InstanceRestrictions> instanceRestrictions;\n}\n```\n\n----------------------------------------\n\nTITLE: DeleteJWTTemplateResponse Fields Structure\nDESCRIPTION: Defines the structure of DeleteJWTTemplateResponse class with its required and optional fields. Includes HTTP response details and deletion status information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteJWTTemplateResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `deletedObject` | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md) | :heavy_minus_sign: | Deleted Object |\n```\n\n----------------------------------------\n\nTITLE: DeleteBlocklistIdentifierRequest Fields Documentation\nDESCRIPTION: Documents the fields required for deleting a blocklisted identifier. The request requires a single field 'identifierId' which must be a String containing the unique identifier to be removed from the block-list.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteBlocklistIdentifierRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                  | Type                                                   | Required                                               | Description                                            |\n| ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ |\n| `identifierId`                                         | *String*                                               | :heavy_check_mark:                                     | The ID of the identifier to delete from the block-list |\n```\n\n----------------------------------------\n\nTITLE: CreateSignInTokenRequestBody Fields - Java\nDESCRIPTION: Field definitions for CreateSignInTokenRequestBody class. Contains userId (required) which identifies the user for the token, and expiresInSeconds (optional) which specifies the token lifetime in seconds, defaulting to 30 days if not specified.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSignInTokenRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nclass CreateSignInTokenRequestBody {\n    String userId;              // Required - The ID of the user that can use the token\n    JsonNullable<Long> expiresInSeconds;  // Optional - Token lifetime in seconds (default 30 days)\n}\n```\n\n----------------------------------------\n\nTITLE: Organization Invitation Public Data Fields Table\nDESCRIPTION: Markdown table documenting the fields, types, requirements and descriptions for the OrganizationInvitationPublicOrganizationData class.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitationPublicOrganizationData.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field               | Type                | Required            | Description         |\n| ------------------- | ------------------- | ------------------- | ------------------- |\n| `id`                | *String*            | :heavy_check_mark:  | N/A                 |\n| `name`              | *String*            | :heavy_check_mark:  | N/A                 |\n| `slug`              | *String*            | :heavy_check_mark:  | N/A                 |\n| `imageUrl`          | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `hasImage`          | *boolean*           | :heavy_check_mark:  | N/A                 |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationInvitationWithPublicOrganizationData Class Fields in Java\nDESCRIPTION: This snippet outlines the fields of the OrganizationInvitationWithPublicOrganizationData class. It includes various data types such as String, Optional<String>, Map<String, Object>, long, and custom types for specific fields. The class represents an organization invitation with associated metadata and timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitationWithPublicOrganizationData.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class OrganizationInvitationWithPublicOrganizationData {\n    private OrganizationInvitationWithPublicOrganizationDataObject object;\n    private String id;\n    private String emailAddress;\n    private String role;\n    private String roleName;\n    private Optional<String> organizationId;\n    private Optional<String> status;\n    private Map<String, Object> publicMetadata;\n    private Map<String, Object> privateMetadata;\n    private Optional<String> url;\n    private Optional<Long> expiresAt;\n    private long createdAt;\n    private long updatedAt;\n    private Optional<OrganizationInvitationPublicOrganizationData> publicOrganizationData;\n    // ... getters and setters would be here\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Phone Number with Clerk API in Java\nDESCRIPTION: This snippet demonstrates how to delete a phone number using the Clerk API in Java. It initializes the Clerk SDK, then calls the delete method on the phoneNumbers resource, providing the phoneNumberId as a parameter. The response indicates if the deletion was successful.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/phonenumbers/README.md#2025-04-19_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeletePhoneNumberResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeletePhoneNumberResponse res = sdk.phoneNumbers().delete()\n                .phoneNumberId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: CreateInvitationResponse Field Documentation Table\nDESCRIPTION: Markdown table documenting the fields, types, requirements and descriptions of the CreateInvitationResponse class properties.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateInvitationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `invitation`                                                                                                                   | [Optional\\<Invitation>](../../models/components/Invitation.md)                                                                 | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining Passkey Delete Request Fields\nDESCRIPTION: Defines the required fields for a passkey deletion request in the Clerk SDK, including user ID and passkey identification ID\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UserPasskeyDeleteRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class UserPasskeyDeleteRequest {\n    private String userId;\n    private String passkeyIdentificationId;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Metadata Update Request Structure\nDESCRIPTION: Defines the request structure for updating user metadata with a required user ID and an optional request body for metadata modifications\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserMetadataRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| `userId` | *String* | ✓ | The ID of the user whose metadata will be updated and merged |\n| `requestBody` | [Optional\\<UpdateUserMetadataRequestBody>](../../models/operations/UpdateUserMetadataRequestBody.md) | - | N/A |\n```\n\n----------------------------------------\n\nTITLE: Defining User Configuration Properties in Clerk Java SDK\nDESCRIPTION: This snippet defines two properties for user configuration in the Clerk Java SDK. 'createOrganizationEnabled' is a Boolean that controls whether a user can create organizations, while 'legalAcceptedAt' is a timestamp for when the user accepted legal requirements.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\ncreateOrganizationEnabled: JsonNullable<Boolean>\nlegalAcceptedAt: JsonNullable<String>\n```\n\n----------------------------------------\n\nTITLE: DeleteSAMLConnectionRequest Fields Table in Markdown\nDESCRIPTION: Table documentation showing the structure of DeleteSAMLConnectionRequest, which requires a samlConnectionId string parameter for deleting a SAML connection.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteSAMLConnectionRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                   | Type                                    | Required                                | Description                             |\n| --------------------------------------- | --------------------------------------- | --------------------------------------- | --------------------------------------- |\n| `samlConnectionId`                      | *String*                                | :heavy_check_mark:                      | The ID of the SAML Connection to delete |\n```\n\n----------------------------------------\n\nTITLE: CreateSessionTokenFromTemplateResponseBody Fields Schema\nDESCRIPTION: Defines the fields for CreateSessionTokenFromTemplateResponseBody including an optional object property and an optional JWT string. The object field references CreateSessionTokenFromTemplateObject model.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenFromTemplateResponseBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| --- | --- | --- | --- |\n| `object` | [Optional<CreateSessionTokenFromTemplateObject>](../../models/operations/CreateSessionTokenFromTemplateObject.md) | :heavy_minus_sign: | N/A |\n| `jwt` | *Optional<String>* | :heavy_minus_sign: | N/A |\n```\n\n----------------------------------------\n\nTITLE: Defining UpdateEmailAddressResponse Fields in Java\nDESCRIPTION: Defines a data structure for capturing the response details of an email address update operation, including HTTP metadata and optional email address information\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateEmailAddressResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nclass UpdateEmailAddressResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<EmailAddress> emailAddress;\n}\n```\n\n----------------------------------------\n\nTITLE: OrganizationInvitation Field Definitions in Java\nDESCRIPTION: Defines the fields of the OrganizationInvitation model including required and optional fields, their types, and metadata. The model includes identifiers, email address, role information, metadata maps, and timestamp fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitation.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nobject: OrganizationInvitationObject\nid: String\nemailAddress: String\nrole: String\nroleName: String\norganizationId: Optional<String>\nstatus: Optional<String>\npublicMetadata: Map<String, Object>\nprivateMetadata: Map<String, Object>\nurl: Optional<String>\nexpiresAt: Optional<Long>\ncreatedAt: long\nupdatedAt: long\n```\n\n----------------------------------------\n\nTITLE: GetInstanceResponse Fields Documentation Table\nDESCRIPTION: Markdown table documenting the fields of the GetInstanceResponse class, including field names, types, requirements and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetInstanceResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `instance` | [Optional\\<Instance>](../../models/components/Instance.md) | :heavy_minus_sign: | Success |\n```\n\n----------------------------------------\n\nTITLE: Counting Users by Ban Status in Java\nDESCRIPTION: This snippet defines the `banned` parameter as an optional boolean to count users based on their ban status. You can set `banned=true` to count banned users and `banned=false` for non-banned users.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUsersCountRequest.md#2025-04-19_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n| `banned`                                                                                                                                                                                                                                                                                                                                            | *Optional\\<Boolean>*                                                                                                                                                                                                                                                                                                                                | :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                  | Counts users which are either banned (`banned=true`) or not banned (`banned=false`).                                                                                                                                                                                                                                                                |                                                                                                                                                                                                                                                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: CreateSessionTokenResponse Fields Documentation in Markdown\nDESCRIPTION: Markdown table documenting the fields of the CreateSessionTokenResponse class including content type, status code, raw response, and response object, with their types and requirements\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `object`                                                                                                                       | [Optional\\<CreateSessionTokenResponseBody>](../../models/operations/CreateSessionTokenResponseBody.md)                         | :heavy_minus_sign:                                                                                                             | OK                                                                                                                             |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationInvitationsWithPublicOrganizationData Class Fields in Java\nDESCRIPTION: This snippet defines the fields of the OrganizationInvitationsWithPublicOrganizationData class. It includes a list of OrganizationInvitationWithPublicOrganizationData objects and a long value representing the total count of invitations.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitationsWithPublicOrganizationData.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class OrganizationInvitationsWithPublicOrganizationData {\n    private List<OrganizationInvitationWithPublicOrganizationData> data;\n    private long totalCount;\n\n    // Getters and setters would typically be included here\n}\n```\n\n----------------------------------------\n\nTITLE: Organization Membership Request Fields Table in Markdown\nDESCRIPTION: A markdown table defining the required fields for creating organization memberships. It specifies two mandatory fields: userId for identifying the user to be added, and role for specifying their organizational role.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationMembershipRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `userId` | *String* | :heavy_check_mark: | The ID of the user that will be added as a member in the organization.<br/>The user needs to exist in the same instance as the organization and must not be a member of the given organization already. |\n| `role` | *String* | :heavy_check_mark: | The role that the new member will have in the organization. |\n```\n\n----------------------------------------\n\nTITLE: CreateSessionTokenResponseBody Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the fields, types, requirements and descriptions for the CreateSessionTokenResponseBody structure. Contains two fields: 'object' of type Optional<Object> and 'jwt' of type Optional<String>.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenResponseBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                  | Type                                                   | Required                                               | Description                                            |\n| ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ |\n| `object`                                               | [Optional\\<Object>](../../models/operations/Object.md) | :heavy_minus_sign:                                     | N/A                                                    |\n| `jwt`                                                  | *Optional\\<String>*                                    | :heavy_minus_sign:                                     | N/A                                                    |\n```\n\n----------------------------------------\n\nTITLE: OAuthApplicationObject Enum Values in Markdown Table\nDESCRIPTION: A markdown table listing the constant value 'OAUTH_APPLICATION' with its corresponding string value 'oauth_application'. This defines the canonical representation of OAuth application objects in the API.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplicationObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                | Value               |\n| ------------------- | ------------------- |\n| `OAUTH_APPLICATION` | oauth_application   |\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters for Session Token Creation in Clerk SDK Java\nDESCRIPTION: Markdown table describing the parameters required for creating a session token from a JWT template. It includes sessionId, templateName, and an optional requestBody.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter                                                                                                                    | Type                                                                                                                         | Required                                                                                                                     | Description                                                                                                                  |\n| ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| `sessionId`                                                                                                                  | *String*                                                                                                                     | :heavy_check_mark:                                                                                                           | The ID of the session                                                                                                        |\n| `templateName`                                                                                                               | *String*                                                                                                                     | :heavy_check_mark:                                                                                                           | The name of the JWT Template defined in your instance (e.g. `custom_hasura`).                                                |\n| `requestBody`                                                                                                                | [Optional\\<CreateSessionTokenFromTemplateRequestBody>](../../models/operations/CreateSessionTokenFromTemplateRequestBody.md) | :heavy_minus_sign:                                                                                                           | N/A                                                                                                                          |\n```\n\n----------------------------------------\n\nTITLE: Deleting Passkey in Clerk Java SDK\nDESCRIPTION: Example showing how to delete a passkey identification for a user using the Clerk Java SDK. Requires bearer token authentication and both user ID and passkey identification ID as inputs.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_20\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UserPasskeyDeleteResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UserPasskeyDeleteResponse res = sdk.users().deletePasskey()\n                .userId(\"<id>\")\n                .passkeyIdentificationId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: GetJWKSResponse Field Definitions in Markdown\nDESCRIPTION: Markdown table defining the fields of the GetJWKSResponse class, including their types, requirements, and descriptions. The fields include contentType, statusCode, rawResponse, and jwks.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetJWKSResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `jwks` | [Optional\\<Jwks>](../../models/components/Jwks.md) | :heavy_minus_sign: | Get the JSON Web Key Set |\n```\n\n----------------------------------------\n\nTITLE: DeleteEmailAddressRequest Fields Definition\nDESCRIPTION: Defines the required field emailAddressId used for deleting an email address. The field is of type String and is marked as required.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteEmailAddressRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                 | Type                                  | Required                              | Description                           |\n| ------------------------------------- | ------------------------------------- | ------------------------------------- | ------------------------------------- |\n| `emailAddressId`                      | *String*                              | :heavy_check_mark:                    | The ID of the email address to delete |\n```\n\n----------------------------------------\n\nTITLE: Field Definitions Table for GetEmailAddressResponse\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions of the GetEmailAddressResponse class properties. Includes HTTP response metadata and email address data fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetEmailAddressResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `emailAddress` | [Optional\\<EmailAddress>](../../models/components/EmailAddress.md) | :heavy_minus_sign: | Success |\n```\n\n----------------------------------------\n\nTITLE: Defining OAuth Application Response Fields\nDESCRIPTION: Java model representing the response structure for retrieving an OAuth application with HTTP response metadata and optional application details\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetOAuthApplicationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class GetOAuthApplicationResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<OAuthApplication> oAuthApplication;\n}\n```\n\n----------------------------------------\n\nTITLE: CreateInvitationRequestBody Markdown Header\nDESCRIPTION: Markdown header and section indicating required parameters for creating invitations\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateInvitationRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# CreateInvitationRequestBody\n\nRequired parameters\n```\n\n----------------------------------------\n\nTITLE: Defining Template Revert Request Fields\nDESCRIPTION: Describes the required fields for reverting a template, including the template type and slug identifier\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/RevertTemplateRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class RevertTemplateRequest {\n    private RevertTemplatePathParamTemplateType templateType;\n    private String slug;\n}\n```\n\n----------------------------------------\n\nTITLE: SAML Verification Strategy Constants\nDESCRIPTION: Defines the SAML constant value used for SAML-based authentication verification strategy. The value 'saml' is used to identify SAML verification method.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SAMLVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name   | Value  |\n| ------ | ------ |\n| `SAML` | saml   |\n```\n\n----------------------------------------\n\nTITLE: Deleting a Svix App using Clerk SDK in Java\nDESCRIPTION: This snippet demonstrates how to delete a Svix app using the Clerk SDK. The SDK is initialized with a bearer token, and the deleteSvixApp method is called. The response handling is left as a placeholder.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/webhooks/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.DeleteSvixAppResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        DeleteSvixAppResponse res = sdk.webhooks().deleteSvixApp()\n                .call();\n\n        // handle response\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: CreateBlocklistIdentifierResponse Fields Documentation Table\nDESCRIPTION: Markdown table documenting the fields of the CreateBlocklistIdentifierResponse class, including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateBlocklistIdentifierResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `blocklistIdentifier`                                                                                                          | [Optional\\<BlocklistIdentifier>](../../models/components/BlocklistIdentifier.md)                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: GetClientRequest Field Structure\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the GetClientRequest model. Contains a single required field 'clientId' of type String used to specify the target client ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetClientRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field              | Type               | Required           | Description        |\n| ------------------ | ------------------ | ------------------ | ------------------ |\n| `clientId`         | *String*           | :heavy_check_mark: | Client ID.         |\n```\n\n----------------------------------------\n\nTITLE: GetClientResponse Fields Definition in Markdown\nDESCRIPTION: Defines the fields of the GetClientResponse class including content type, status code, raw response, and client object. Each field is documented with its type, requirement status, and description.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetClientResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `client`                                                                                                                       | [Optional\\<Client>](../../models/components/Client.md)                                                                         | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining JWT Template Update Request Fields\nDESCRIPTION: Describes the structure for updating a JWT template with a required template ID and an optional request body containing update details\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateJWTTemplateRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| templateId | String | ✓ | The ID of the JWT template to update |\n| requestBody | Optional\\<UpdateJWTTemplateRequestBody> | - | N/A |\n```\n\n----------------------------------------\n\nTITLE: Parameter Configuration Table in Clerk Java SDK\nDESCRIPTION: A table documenting various configuration parameters used in the Clerk Java SDK. Includes parameter types, validation requirements, descriptions and example values for user management and signup functionality.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignUp.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| `lastName` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `unsafeMetadata` | Map<String, *Object*> | :heavy_minus_sign: | N/A | |\n| `publicMetadata` | Map<String, *Object*> | :heavy_minus_sign: | N/A | |\n| `customAction` | *boolean* | :heavy_check_mark: | N/A | |\n| `externalId` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `createdSessionId` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `createdUserId` | *Optional<String>* | :heavy_check_mark: | N/A | |\n| `abandonAt` | *long* | :heavy_check_mark: | Unix timestamp at which the user abandoned the sign up attempt. | 1700690400000 |\n| `legalAcceptedAt` | *Optional<Long>* | :heavy_check_mark: | Unix timestamp at which the user accepted the legal requirements. | 1700690400000 |\n| ~~`externalAccount`~~ | [Optional<SignUpExternalAccount>](../../models/components/SignUpExternalAccount.md) | :heavy_minus_sign: | : warning: ** DEPRECATED **: This will be removed in a future release, please migrate away from it as soon as possible. |\n```\n\n----------------------------------------\n\nTITLE: GetEmailAddressRequest Fields Definition\nDESCRIPTION: Definition of the fields required for making an email address retrieval request. Contains a single required field 'emailAddressId' of type String that uniquely identifies the email address to be retrieved.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetEmailAddressRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field           | Type      | Required            | Description                             |\n| --------------- | --------- | ------------------- | --------------------------------------- |\n| `emailAddressId`| *String*  | :heavy_check_mark:  | The ID of the email address to retrieve |\n```\n\n----------------------------------------\n\nTITLE: DeleteOrganizationDomainRequest Fields Definition\nDESCRIPTION: Defines the required fields for deleting an organization domain. Includes organizationId for identifying the organization and domainId for specifying the domain to be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationDomainRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                            | Type                                             | Required                                         | Description                                      |\n| ------------------------------------------------ | ------------------------------------------------ | ------------------------------------------------ | ------------------------------------------------ |\n| `organizationId`                                 | *String*                                         | :heavy_check_mark:                               | The ID of the organization the domain belongs to |\n| `domainId`                                       | *String*                                         | :heavy_check_mark:                               | The ID of the domain                             |\n```\n\n----------------------------------------\n\nTITLE: Defining SAMLAccountVerification Interface in Clerk Java SDK\nDESCRIPTION: This code defines the SAMLAccountVerification interface which is part of the Clerk Java SDK. The interface is used for SAML account verification operations but does not contain any specific method declarations.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SAMLAccountVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage com.clerk.java.api;\n\npublic interface SAMLAccountVerification {}\n```\n\n----------------------------------------\n\nTITLE: Deleting Web3 Wallet in Clerk Java SDK\nDESCRIPTION: Example demonstrating how to delete a web3 wallet identification for a user using the Clerk Java SDK. Requires bearer token authentication and both user ID and web3 wallet identification ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/users/README.md#2025-04-19_snippet_21\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.UserWeb3WalletDeleteResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        UserWeb3WalletDeleteResponse res = sdk.users().deleteWeb3Wallet()\n                .userId(\"<id>\")\n                .web3WalletIdentificationId(\"<id>\")\n                .call();\n\n        if (res.deletedObject().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fields Table Documentation - Markdown\nDESCRIPTION: Markdown table documenting the fields of CreateTestingTokenResponse class including contentType, statusCode, rawResponse and testingToken fields with their types, requirements and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateTestingTokenResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `testingToken`                                                                                                                 | [Optional\\<TestingToken>](../../models/components/TestingToken.md)                                                             | :heavy_minus_sign:                                                                                                             | A Testing Token                                                                                                                |\n```\n\n----------------------------------------\n\nTITLE: CreateJWTTemplateResponse Fields Table\nDESCRIPTION: Markdown table defining the fields, types, requirements, and descriptions for the CreateJWTTemplateResponse class fields including contentType, statusCode, rawResponse, and jwtTemplate.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateJWTTemplateResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `jwtTemplate`                                                                                                                  | [Optional\\<JWTTemplate>](../../models/components/JWTTemplate.md)                                                               | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: GetClientListResponse Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the fields of GetClientListResponse class, including their types, requirements, and descriptions. Shows response metadata and client list data structure.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetClientListResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `clientList`                                                                                                                   | List\\<[Client](../../models/components/Client.md)>                                                                             | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Organization Domain Fields Schema\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the OrganizationDomain model. Includes core properties like identifiers, domain name, enrollment settings, verification status and timestamp fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationDomain.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- |\n| `object` | [OrganizationDomainObject](../../models/components/OrganizationDomainObject.md) | :heavy_check_mark: | String representing the object's type. Objects of the same type share the same value. Always `organization_domain`<br/> |\n| `id` | *String* | :heavy_check_mark: | Unique identifier for the organization domain |\n| `organizationId` | *String* | :heavy_check_mark: | Unique identifier for the organization |\n| `name` | *String* | :heavy_check_mark: | Name of the organization domain |\n| `enrollmentMode` | [EnrollmentMode](../../models/components/EnrollmentMode.md) | :heavy_check_mark: | Mode of enrollment for the domain |\n| `affiliationEmailAddress` | *Optional<String>* | :heavy_check_mark: | Affiliation email address for the domain, if available. |\n| `verification` | [Optional<OrganizationDomainVerification>](../../models/components/OrganizationDomainVerification.md) | :heavy_check_mark: | Verification details for the domain |\n| `totalPendingInvitations` | *int* | :heavy_check_mark: | Total number of pending invitations associated with this domain |\n| `totalPendingSuggestions` | *int* | :heavy_check_mark: | Total number of pending suggestions associated with this domain |\n| `createdAt` | *long* | :heavy_check_mark: | Unix timestamp when the domain was created |\n| `updatedAt` | *long* | :heavy_check_mark: | Unix timestamp of the last update to the domain |\n```\n\n----------------------------------------\n\nTITLE: User Authentication Property Definitions\nDESCRIPTION: Markdown table defining user authentication properties including metadata, contact information, and security settings. Contains property names, types, and indicators for optional fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/User.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| `unsafeMetadata` | Map\\<String, *Object*> | :heavy_minus_sign: | N/A | |\n| `emailAddresses` | List\\<[EmailAddress](../../models/components/EmailAddress.md)> | :heavy_minus_sign: | N/A | |\n| `phoneNumbers` | List\\<[PhoneNumber](../../models/components/PhoneNumber.md)> | :heavy_minus_sign: | N/A | |\n| `web3Wallets` | List\\<[Web3Wallet](../../models/components/Web3Wallet.md)> | :heavy_minus_sign: | N/A | |\n| `passkeys` | List\\<[SchemasPasskey](../../models/components/SchemasPasskey.md)> | :heavy_minus_sign: | N/A | |\n| `passwordEnabled` | *Optional\\<Boolean>* | :heavy_minus_sign: | N/A | |\n| `twoFactorEnabled` | *Optional\\<Boolean>* | :heavy_minus_sign: | N/A | |\n| `totpEnabled` | *Optional\\<Boolean>* | :heavy_minus_sign: | N/A | |\n```\n\n----------------------------------------\n\nTITLE: CreateRedirectURLResponse Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the fields of the CreateRedirectURLResponse class including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateRedirectURLResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `redirectURL` | [Optional\\<RedirectURL>](../../models/components/RedirectURL.md) | :heavy_minus_sign: | Success |\n```\n\n----------------------------------------\n\nTITLE: Defining RedirectURLObject Constants in Markdown Table\nDESCRIPTION: A markdown table defining the constant value for 'REDIRECT_URL' as 'redirect_url', likely used in the Clerk Java SDK for authentication redirects.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/RedirectURLObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `REDIRECT_URL` | redirect_url   |\n```\n\n----------------------------------------\n\nTITLE: BlocklistIdentifier Object Type Constants\nDESCRIPTION: Defines the string constant used to identify blocklist identifier objects in the Clerk system. The constant value 'blocklist_identifier' is used as a type discriminator for objects of this type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/BlocklistIdentifierObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nBLOCKLIST_IDENTIFIER = \"blocklist_identifier\"\n```\n\n----------------------------------------\n\nTITLE: DeleteDomainResponse Field Definitions - Markdown\nDESCRIPTION: Defines the structure and fields of the DeleteDomainResponse class, including four fields: contentType, statusCode, rawResponse, and deletedObject. Each field includes its type, requirement status, and description.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteDomainResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `deletedObject` | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md) | :heavy_minus_sign: | Deleted Object |\n```\n\n----------------------------------------\n\nTITLE: Defining Template List Response in Java\nDESCRIPTION: Response class that captures HTTP response details and template list for Clerk template retrieval operations. Includes content type, status code, raw response, and list of templates.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetTemplateListResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class GetTemplateListResponse {\n    String contentType;\n    int statusCode;\n    HttpResponse<InputStream> rawResponse;\n    List<Template> templateList;\n}\n```\n\n----------------------------------------\n\nTITLE: Response Fields Table in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements, and descriptions for the DeleteUserProfileImageResponse class\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteUserProfileImageResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `user` | [Optional\\<User>](../../models/components/User.md) | :heavy_minus_sign: | Success |\n```\n\n----------------------------------------\n\nTITLE: CreateUserResponse Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the fields of the CreateUserResponse class, including field names, types, requirements, and descriptions for the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `user` | [Optional\\<User>](../../models/components/User.md) | :heavy_minus_sign: | Success |\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Definition in Java\nDESCRIPTION: Defines user model properties including lockout configuration, verification attempts, timestamps, and organization management capabilities. Uses JsonNullable and Optional types for nullable fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/User.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nlockoutExpiresInSeconds: JsonNullable<Long>\nverificationAttemptsRemaining: JsonNullable<Long>\nupdatedAt: Optional<Long>\ncreatedAt: Optional<Long>\ndeleteSelfEnabled: Optional<Boolean>\ncreateOrganizationEnabled: Optional<Boolean>\ncreateOrganizationsLimit: JsonNullable<Long>\nlastActiveAt: JsonNullable<Long>\n```\n\n----------------------------------------\n\nTITLE: DeleteOrganizationResponse Fields Documentation\nDESCRIPTION: Documents the fields of the DeleteOrganizationResponse class, including HTTP response metadata and the deleted organization object details. Contains required and optional fields with their respective types and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `deletedObject` | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md) | :heavy_minus_sign: | Deleted Object |\n```\n\n----------------------------------------\n\nTITLE: Defining IdentifierType Enum in Java for Clerk SDK\nDESCRIPTION: This enum defines three types of identifiers used in the Clerk SDK: email address, phone number, and web3 wallet. Each enum constant is associated with a string value that represents its identifier type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/IdentifierType.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic enum IdentifierType {\n    EMAIL_ADDRESS(\"email_address\"),\n    PHONE_NUMBER(\"phone_number\"),\n    WEB3_WALLET(\"web3_wallet\");\n\n    private final String value;\n\n    IdentifierType(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Admin Verification Constants for Web3 Wallet Strategy\nDESCRIPTION: Enumeration of constant values used for admin verification strategy in Web3 wallet implementations. Defines the ADMIN constant with value 'admin'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AdminVerificationWeb3WalletStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n| Name    | Value   |\n| ------- | ------- |\n| `ADMIN` | admin   |\n```\n\n----------------------------------------\n\nTITLE: Creating Allowlist Identifier in Java with Clerk SDK\nDESCRIPTION: Adds a new identifier to the allow-list for sign-up access in a Clerk authentication instance\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/allowlistidentifiers/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nCreateAllowlistIdentifierRequestBody req = CreateAllowlistIdentifierRequestBody.builder()\n        .identifier(\"<value>\")\n        .build();\n\nCreateAllowlistIdentifierResponse res = sdk.allowlistIdentifiers().create()\n        .request(req)\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Field Definitions for DeleteRedirectURLResponse\nDESCRIPTION: Defines the fields of the DeleteRedirectURLResponse class including content type, status code, raw HTTP response, and deleted object information. Each field is documented with its type, required status, and purpose.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteRedirectURLResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Creation Settings in Clerk SDK Java\nDESCRIPTION: This snippet defines two properties for managing user organization creation. 'createOrganizationEnabled' determines if users can create organizations via FAPI, while 'createOrganizationsLimit' sets the maximum number of organizations a user can create, with 0 meaning unlimited.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\ncreateOrganizationEnabled: JsonNullable<Boolean>\ncreateOrganizationsLimit: JsonNullable<Long>\n```\n\n----------------------------------------\n\nTITLE: DeleteUserProfileImageRequest Fields Documentation\nDESCRIPTION: Defines the required fields for deleting a user's profile image. The only required field is userId which must be provided as a String to identify the target user.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteUserProfileImageRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                              | Type                                               | Required                                           | Description                                        |\n| -------------------------------------------------- | -------------------------------------------------- | -------------------------------------------------- | -------------------------------------------------- |\n| `userId`                                           | *String*                                           | :heavy_check_mark:                                 | The ID of the user to delete the profile image for |\n```\n\n----------------------------------------\n\nTITLE: CreateSessionTokenFromTemplateRequest Fields Table\nDESCRIPTION: Markdown table defining the required fields for creating a session token from a template. Includes sessionId for identifying the session, templateName for specifying the JWT template, and an optional requestBody parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenFromTemplateRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| `sessionId` | *String* | :heavy_check_mark: | The ID of the session |\n| `templateName` | *String* | :heavy_check_mark: | The name of the JWT Template defined in your instance (e.g. `custom_hasura`). |\n| `requestBody` | [Optional\\<CreateSessionTokenFromTemplateRequestBody\\>](../../models/operations/CreateSessionTokenFromTemplateRequestBody.md) | :heavy_minus_sign: | N/A |\n```\n\n----------------------------------------\n\nTITLE: WaitlistEntryInvitation Model Field Definitions\nDESCRIPTION: Defines the fields and properties of the WaitlistEntryInvitation model including their types, requirements, and descriptions. The model includes core fields like id, emailAddress, status, and various timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntryInvitation.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                | Type                                   | Required             | Description          | Example |\n| -------------------- | -------------------------------------- | -------------------- | -------------------- | ------- |\n| `object`             | WaitlistEntryInvitationObject          | :heavy_check_mark:   | N/A                  |         |\n| `id`                 | *String*                               | :heavy_check_mark:   | N/A                  |         |\n| `emailAddress`       | *String*                               | :heavy_check_mark:   | N/A                  |         |\n| `publicMetadata`     | Map<String, *Object*>                  | :heavy_check_mark:   | N/A                  |         |\n| `revoked`            | *Optional<Boolean>*                    | :heavy_minus_sign:   | N/A                  | false   |\n| `status`             | WaitlistEntryInvitationStatus          | :heavy_check_mark:   | N/A                  | pending |\n| `url`                | *Optional<String>*                     | :heavy_minus_sign:   | N/A                  |         |\n| `expiresAt`          | *JsonNullable<Long>*                   | :heavy_minus_sign:   | Unix timestamp of expiration. |         |\n| `createdAt`          | *long*                                 | :heavy_check_mark:   | Unix timestamp of creation. |         |\n| `updatedAt`          | *long*                                 | :heavy_check_mark:   | Unix timestamp of last update. |         |\n```\n\n----------------------------------------\n\nTITLE: Defining Response Fields in Markdown Table\nDESCRIPTION: Markdown table defining the fields, types, requirements, and descriptions for the ChangeProductionInstanceDomainResponse class. Includes contentType, statusCode, and rawResponse fields with their respective types and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ChangeProductionInstanceDomainResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n```\n\n----------------------------------------\n\nTITLE: Defining Phone Number Update Response Model in Java\nDESCRIPTION: Defines a response object for phone number update operations, containing HTTP response metadata and an optional phone number object\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdatePhoneNumberResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class UpdatePhoneNumberResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<PhoneNumber> phoneNumber;\n}\n```\n\n----------------------------------------\n\nTITLE: PhoneNumberObject String Constant Definition\nDESCRIPTION: Defines the 'PHONE_NUMBER' constant with the value 'phone_number' to represent the object's type in the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/PhoneNumberObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `PHONE_NUMBER` | phone_number   |\n```\n\n----------------------------------------\n\nTITLE: DeleteBackupCodeResponse Fields Table\nDESCRIPTION: Markdown table defining the fields of the DeleteBackupCodeResponse class, including their types, requirements, and descriptions. The response includes HTTP response metadata and an optional response body.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteBackupCodeResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `object`                                                                                                                       | [Optional\\<DeleteBackupCodeResponseBody>](../../models/operations/DeleteBackupCodeResponseBody.md)                             | :heavy_minus_sign:                                                                                                             | Successful operation.                                                                                                          |\n```\n\n----------------------------------------\n\nTITLE: GenerateSvixAuthURLResponse Fields Definition\nDESCRIPTION: Defines the fields of the GenerateSvixAuthURLResponse class including content type, status code, raw response, and Svix URL. Each field is documented with its type, requirement status, and purpose.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GenerateSvixAuthURLResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `svixURL`                                                                                                                      | [Optional\\<SvixURL>](../../models/components/SvixURL.md)                                                                       | :heavy_minus_sign:                                                                                                             | Response that contains a temporary Svix URL to access management dashboard                                                     |\n```\n\n----------------------------------------\n\nTITLE: DeleteSvixAppResponse Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the fields of the DeleteSvixAppResponse class, including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteSvixAppResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n```\n\n----------------------------------------\n\nTITLE: API Response Fields Documentation Table\nDESCRIPTION: Markdown table documenting the fields, types, requirements and descriptions for the DeleteOrganizationLogoResponse class\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationLogoResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `organization` | [Optional\\<Organization>](../../models/components/Organization.md) | :heavy_minus_sign: | An organization |\n```\n\n----------------------------------------\n\nTITLE: Blocklist Identifier Type Constants\nDESCRIPTION: Markdown table defining the three supported blocklist identifier types and their corresponding string values used in the Clerk system. The types are EMAIL_ADDRESS, PHONE_NUMBER, and WEB3_WALLET.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/BlocklistIdentifierIdentifierType.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name            | Value           |\n| --------------- | --------------- |\n| `EMAIL_ADDRESS` | email_address   |\n| `PHONE_NUMBER`  | phone_number    |\n| `WEB3_WALLET`   | web3_wallet     |\n```\n\n----------------------------------------\n\nTITLE: DeleteOrganizationDomainResponse Fields Table\nDESCRIPTION: Markdown table defining the fields, types, requirements, and descriptions for the DeleteOrganizationDomainResponse class. Includes contentType, statusCode, rawResponse, and deletedObject fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationDomainResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: GoogleOneTapVerificationError Exception Class Definition in Java\nDESCRIPTION: Defines a custom exception class that extends ClerkException specifically for Google One Tap verification failures. This provides a type-safe way to catch and handle errors related to Google One Tap authentication within the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/GoogleOneTapVerificationError.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npackage com.clerk.clerksdk.exception;\n\npublic class GoogleOneTapVerificationError extends ClerkException {\n    public GoogleOneTapVerificationError(String message) {\n        super(message);\n    }\n\n    public GoogleOneTapVerificationError(String message, Throwable e) {\n        super(message, e);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Object Type Constants in Clerk SDK\nDESCRIPTION: Defines the constant CLIENT with value 'client' that represents the object's type in Clerk SDK. Objects of the same type share the same string value, which helps with consistent type identification.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Object.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name     | Value    |\n| -------- | -------- |\n| `CLIENT` | client   |\n```\n\n----------------------------------------\n\nTITLE: Listing OAuth Applications in Java with Clerk SDK\nDESCRIPTION: Retrieves a paginated list of OAuth applications for a Clerk instance, supporting limit and offset parameters for pagination\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/oauthapplications/README.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.ListOAuthApplicationsResponse;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ListOAuthApplicationsResponse res = sdk.oauthApplications().list()\n                .limit(10L)\n                .offset(0L)\n                .call();\n\n        if (res.oAuthApplications().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: DeleteUserRequest Field Definition Table\nDESCRIPTION: Markdown table defining the required field for the DeleteUserRequest structure. Contains field name, type, requirement status, and description.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteUserRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                        | Type                         | Required                     | Description                  |\n| ---------------------------- | ---------------------------- | ---------------------------- | ---------------------------- |\n| `userId`                     | *String*                     | :heavy_check_mark:           | The ID of the user to delete |\n```\n\n----------------------------------------\n\nTITLE: Defining JWT Template Update Response Fields\nDESCRIPTION: Represents the response structure for JWT template update operations with content type, status code, raw HTTP response, and optional JWT template data\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateJWTTemplateResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class UpdateJWTTemplateResponse {\n    private String contentType;\n    private int statusCode;\n    private HttpResponse<InputStream> rawResponse;\n    private Optional<JWTTemplate> jwtTemplate;\n}\n```\n\n----------------------------------------\n\nTITLE: DeleteAllowlistIdentifierRequest Fields Documentation\nDESCRIPTION: Markdown documentation table defining the fields, types, requirements and descriptions for the DeleteAllowlistIdentifierRequest model. Contains a single required field 'identifierId' of type String used to specify which identifier to delete from the allow-list.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteAllowlistIdentifierRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                  | Type                                                   | Required                                               | Description                                            |\n| ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ |\n| `identifierId`                                         | *String*                                               | :heavy_check_mark:                                     | The ID of the identifier to delete from the allow-list |\n```\n\n----------------------------------------\n\nTITLE: InstanceRestrictions Fields Table Definition - Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the InstanceRestrictions model class. Documents boolean configuration flags for email restrictions and domain controls.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InstanceRestrictions.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------- |\n| `object` | [InstanceRestrictionsObject](../../models/components/InstanceRestrictionsObject.md) | :heavy_check_mark: | String representing the object's type. Objects of the same type share the same value. |\n| `allowlist` | *boolean* | :heavy_check_mark: | N/A |\n| `blocklist` | *boolean* | :heavy_check_mark: | N/A |\n| `blockEmailSubaddresses` | *boolean* | :heavy_check_mark: | N/A |\n| `blockDisposableEmailDomains` | *boolean* | :heavy_check_mark: | N/A |\n| `ignoreDotsForGmailAddresses` | *boolean* | :heavy_check_mark: | N/A |\n```\n\n----------------------------------------\n\nTITLE: VerificationStatus Enum Values in Clerk Java SDK\nDESCRIPTION: Defines the possible verification statuses for Clerk authentication. The values represent the different states that a verification process can be in: unverified (initial state), verified (successfully completed), failed (unsuccessful), or expired (timed out).\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/VerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `UNVERIFIED` | unverified   |\n| `VERIFIED`   | verified     |\n| `FAILED`     | failed       |\n| `EXPIRED`    | expired      |\n```\n\n----------------------------------------\n\nTITLE: DeleteAllowlistIdentifierResponse Fields Table\nDESCRIPTION: Markdown table documenting the fields, types, requirements, and descriptions of the DeleteAllowlistIdentifierResponse class properties.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteAllowlistIdentifierResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: CookiesObject Enum Value Definition\nDESCRIPTION: Defines a constant value 'COOKIES' that represents the string 'cookies' for object type identification.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/CookiesObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name      | Value     |\n| --------- | --------- |\n| `COOKIES` | cookies   |\n```\n\n----------------------------------------\n\nTITLE: Defining InvitationObject Constants in Markdown Table\nDESCRIPTION: Markdown table defining the constant value 'INVITATION' with its corresponding string value 'invitation' for the InvitationObject enum.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InvitationObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `INVITATION` | invitation   |\n```\n\n----------------------------------------\n\nTITLE: DeleteRedirectURLRequest Field Definition Table\nDESCRIPTION: Markdown table defining the field structure for DeleteRedirectURLRequest, specifying the ID field as a required String parameter used to identify the redirect URL to be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteRedirectURLRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                      | Type                       | Required                   | Description                |\n| -------------------------- | -------------------------- | -------------------------- | -------------------------- |\n| `id`                       | *String*                   | :heavy_check_mark:         | The ID of the redirect URL |\n```\n\n----------------------------------------\n\nTITLE: Defining primary web3 wallet ID\nDESCRIPTION: Defines the primary web3 wallet ID for the user. The ID must be verified and present in the user's account. This property utilizes the JsonNullable class to allow the ID to be null if not set.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n| `primaryWeb3WalletId`| *JsonNullable\\<String| :heavy_minus_sign| The ID of the web3 wallets to set as primary.<br/>It must be verified, and present on the current user.\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - CreateWaitlistEntryResponse Fields Documentation\nDESCRIPTION: Table documenting the fields of the CreateWaitlistEntryResponse class, including their types, requirements, and descriptions. The response includes HTTP metadata and an optional WaitlistEntry object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateWaitlistEntryResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `waitlistEntry`                                                                                                                | [Optional\\<WaitlistEntry>](../../models/components/WaitlistEntry.md)                                                           | :heavy_minus_sign:                                                                                                             | A Waitlist Entry                                                                                                               |\n```\n\n----------------------------------------\n\nTITLE: General User Query Search\nDESCRIPTION: Performs a flexible search across multiple user attributes including email, phone, username, web3 wallets, user IDs, and names. Supports partial and case-insensitive matching.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationMembershipsRequest.md#2025-04-19_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nOptional<String> query\n```\n\n----------------------------------------\n\nTITLE: Web3 Signature Status Values Table\nDESCRIPTION: Markdown table defining the mapping between enum names and their corresponding values for Web3 signature verification statuses.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3SignatureVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `UNVERIFIED` | unverified   |\n| `VERIFIED`   | verified     |\n| `FAILED`     | failed       |\n| `EXPIRED`    | expired      |\n```\n\n----------------------------------------\n\nTITLE: CreateSAMLConnectionResponse Fields Table\nDESCRIPTION: Markdown table documenting the fields of the CreateSAMLConnectionResponse class, including their types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSAMLConnectionResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `schemasSAMLConnection`                                                                                                        | [Optional\\<SchemasSAMLConnection>](../../models/components/SchemasSAMLConnection.md)                                           | :heavy_minus_sign:                                                                                                             | A SAML Connection                                                                                                              |\n```\n\n----------------------------------------\n\nTITLE: OAuth Application Constants in Java\nDESCRIPTION: Defines a constant value used to identify OAuth applications in the Clerk SDK for Java. The constant maps the key 'OAUTH_APPLICATION' to the value 'oauth_application' for consistent reference throughout the codebase.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplicationWithSecretObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                | Value               |\n| ------------------- | ------------------- |\n| `OAUTH_APPLICATION` | oauth_application   |\n```\n\n----------------------------------------\n\nTITLE: ActorTokenActor Fields Table in Markdown\nDESCRIPTION: Markdown table structure defining the fields documentation format for the ActorTokenActor class, though no actual fields are populated.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ActorTokenActor.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field       | Type        | Required    | Description |\n| ----------- | ----------- | ----------- | ----------- |\n```\n\n----------------------------------------\n\nTITLE: CreateRedirectURLRequestBody Fields Definition\nDESCRIPTION: Markdown table describing the fields of the CreateRedirectURLRequestBody class. The url parameter is required and must be a full URL prefixed with https:// or a custom scheme.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateRedirectURLRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ---------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n| `url` | *String* | :heavy_check_mark: | The full url value prefixed with `https://` or a custom scheme e.g. `\"https://my-app.com/oauth-callback\"` or `\"my-app://oauth-callback\"` |\n```\n\n----------------------------------------\n\nTITLE: DeleteBackupCodeRequest Fields Definition\nDESCRIPTION: Documents the required fields for making a backup code deletion request. The main field is userId which is required and represents the identifier of the user whose backup codes should be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteBackupCodeRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                    | Type                                                     | Required                                                 | Description                                              |\n| -------------------------------------------------------- | -------------------------------------------------------- | -------------------------------------------------------- | -------------------------------------------------------- |\n| `userId`                                                 | *String*                                                 | :heavy_check_mark:                                       | The ID of the user whose backup codes are to be deleted. |\n```\n\n----------------------------------------\n\nTITLE: CreateBulkInvitationsResponse Fields Table\nDESCRIPTION: Markdown table defining the fields of the CreateBulkInvitationsResponse class. Includes field names, types, requirements, and descriptions for HTTP response handling and invitation data.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateBulkInvitationsResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `invitationList`                                                                                                               | List\\<[Invitation](../../models/components/Invitation.md)>                                                                     | :heavy_minus_sign:                                                                                                             | List of invitations                                                                                                            |\n```\n\n----------------------------------------\n\nTITLE: Example Allowed Origins Configuration\nDESCRIPTION: Example showing the format of allowed origins configuration for a Clerk instance.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Instance.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n\"http://localhost:3000\",\n\"https://some-domain\"\n]\n```\n\n----------------------------------------\n\nTITLE: VerificationStrategy Enum Values in Markdown Table\nDESCRIPTION: Markdown table defining the available verification strategy values, documenting that ADMIN maps to the value 'admin'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/VerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name    | Value   |\n| ------- | ------- |\n| `ADMIN` | admin   |\n```\n\n----------------------------------------\n\nTITLE: WaitlistEntries Fields Definition\nDESCRIPTION: Defines the fields available in the WaitlistEntries structure. Contains a list of WaitlistEntry objects and a total count of entries.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntries.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field        | Type                                                             | Required               | Description                          |\n| ------------ | ---------------------------------------------------------------- | ---------------------- | ------------------------------------ |\n| `data`       | List\\<[WaitlistEntry](../../models/components/WaitlistEntry.md)> | :heavy_check_mark:     | N/A                                  |\n| `totalCount` | *long*                                                           | :heavy_check_mark:     | Total number of waitlist entries     |\n```\n\n----------------------------------------\n\nTITLE: Counting Users by Username Query in Java\nDESCRIPTION: This snippet introduces the `usernameQuery` parameter, which is an optional string for counting users whose usernames match the query using case-insensitive partial matching. For instance, `username_query=CoolUser` would match a username `SomeCoolUser`.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUsersCountRequest.md#2025-04-19_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n| `usernameQuery`                                                                                                                                                                                                                                                                                                                                     | *Optional\\<String>*                                                                                                                                                                                                                                                                                                                                 | :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                  | Counts users with usernames that match the given query, via case-insensitive partial match.<br/>For example, `username_query=CoolUser` will match a user with the username `SomeCoolUser`,<br/>and will be included in the resulting count.                                                                                                         |                                                                                                                                                                                                                                                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Actor Token Request Example in Markdown\nDESCRIPTION: Example showing the actor payload format for token creation with a user ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateActorTokenRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Membership Object Type Constants in Java\nDESCRIPTION: Defines a constant string value that represents the type of organization membership objects. This value 'organization_membership' is used to identify objects related to organization memberships in the Clerk platform.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationMembershipObject.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nORGANIZATION_MEMBERSHIP = \"organization_membership\"\n```\n\n----------------------------------------\n\nTITLE: Format Values Definitions in Markdown Table\nDESCRIPTION: Markdown table defining the available format values for responses: TOKEN format and COOKIE format.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/Format.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name     | Value    |\n| -------- | -------- |\n| `TOKEN`  | token    |\n| `COOKIE` | cookie   |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationInvitations Fields in Markdown\nDESCRIPTION: This markdown table defines the fields of the OrganizationInvitations class. It includes two fields: 'data' which is a list of OrganizationInvitation objects, and 'totalCount' which is a long value representing the total number of organization invitations.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitations.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                              | Type                                                                               | Required                                                                           | Description                                                                        |\n| ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------- |\n| `data`                                                                             | List\\<[OrganizationInvitation](../../models/components/OrganizationInvitation.md)> | :heavy_check_mark:                                                                 | N/A                                                                                |\n| `totalCount`                                                                       | *long*                                                                             | :heavy_check_mark:                                                                 | Total number of organization invitations<br/>                                      |\n```\n\n----------------------------------------\n\nTITLE: Web3Signature Fields Schema\nDESCRIPTION: Field definitions for the Web3Signature data model including their types, requirements, and descriptions. The model contains fields for managing web3 signature verification including status, strategy, nonce, message, attempts, expiration time, and client verification status.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3Signature.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| --- | --- | --- | --- |\n| `status` | [Web3SignatureVerificationStatus] | :heavy_check_mark: | N/A |\n| `strategy` | [Web3SignatureVerificationStrategy] | :heavy_check_mark: | N/A |\n| `nonce` | *JsonNullable<String>* | :heavy_minus_sign: | N/A |\n| `message` | *JsonNullable<String>* | :heavy_minus_sign: | N/A |\n| `attempts` | *Optional<Long>* | :heavy_check_mark: | N/A |\n| `expireAt` | *Optional<Long>* | :heavy_check_mark: | N/A |\n| `verifiedAtClient` | *JsonNullable<String>* | :heavy_minus_sign: | N/A |\n```\n\n----------------------------------------\n\nTITLE: Describing Pagination Parameters: Limit and Offset\nDESCRIPTION: This snippet describes the `limit` and `offset` parameters used for paginating results. `limit` sets the maximum number of results to return per page. `offset` specifies the number of results to skip from the beginning, allowing you to start from a specific page. These parameters are used to retrieve data in smaller, manageable chunks. They are Optional<Long> types in Java\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUserListRequest.md#2025-04-19_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"| `limit` | *Optional\\<Long>* | :heavy_minus_sign: | Applies a limit to the number of results returned.<br/>Can be used for paginating the results together with `offset`. |\n| `offset` | *Optional\\<Long>* | :heavy_minus_sign: | Skip the first `offset` results when paginating.<br/>Needs to be an integer greater or equal to zero.<br/>To be used in conjunction with `limit`. |\"\n```\n\n----------------------------------------\n\nTITLE: WaitlistEntry Fields Table Structure\nDESCRIPTION: Markdown table defining the structure and specifications of WaitlistEntry fields including types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntry.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description | Example |\n| --- | --- | --- | --- | --- |\n| `object` | [WaitlistEntryObject] | :heavy_check_mark: | N/A | |\n| `id` | *String* | :heavy_check_mark: | N/A | |\n| `emailAddress` | *String* | :heavy_check_mark: | N/A | |\n| `status` | [WaitlistEntryStatus] | :heavy_check_mark: | N/A | pending |\n| `isLocked` | *Optional<Boolean>* | :heavy_minus_sign: | Indicates if the waitlist entry is locked. Locked entries are being processed in a batch action and are unavailable for other actions. | |\n| `createdAt` | *long* | :heavy_check_mark: | Unix timestamp of creation. | |\n| `updatedAt` | *long* | :heavy_check_mark: | Unix timestamp of last update. | |\n| `invitation` | [JsonNullable<WaitlistEntryInvitation>] | :heavy_minus_sign: | N/A | |\n```\n\n----------------------------------------\n\nTITLE: Web3WalletVerificationAdmin Fields Definition\nDESCRIPTION: Defines the structure of Web3 wallet verification administration with fields for status, strategy, attempts, expiration time, and client verification. Uses Java Optional and JsonNullable types for null-safety.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3WalletVerificationAdmin.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nstatus: AdminVerificationWeb3WalletStatus\nstrategy: AdminVerificationWeb3WalletStrategy\nattempts: Optional<Long>\nexpireAt: Optional<Long>\nverifiedAtClient: JsonNullable<String>\n```\n\n----------------------------------------\n\nTITLE: Defining WaitlistEntryInvitationObject Enum Values in Clerk Java SDK\nDESCRIPTION: This defines the WaitlistEntryInvitationObject enum with a single value 'INVITATION' that maps to 'invitation'. This is used to represent waitlist entry invitations in the Clerk API.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntryInvitationObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `INVITATION` | invitation   |\n```\n\n----------------------------------------\n\nTITLE: Example Actor JSON Object in Clerk Java SDK\nDESCRIPTION: Example of a JSON structure for an Actor object showing the required 'sub' field with a user ID.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/Actor.md#2025-04-19_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"sub\": \"user_2OEpKhcCN1Lat9NQ0G6puh7q5Rb\"\n}\n```\n\n----------------------------------------\n\nTITLE: Session Object Type Constants\nDESCRIPTION: Defines the constant string value 'session' that represents the type for session objects. This value is shared across objects of the same session type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SessionObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name      | Value     |\n| --------- | --------- |\n| `SESSION` | session   |\n```\n\n----------------------------------------\n\nTITLE: Defining SchemasPasskeyVerification Interface in Java\nDESCRIPTION: Interface that represents a passkey verification response. It is likely used in the authentication flow for passkey-based authentication in the Clerk SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SchemasPasskeyVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n# SchemasPasskeyVerification\n```\n\n----------------------------------------\n\nTITLE: Defining GetSessionResponse Fields in Java\nDESCRIPTION: Defines the response structure for a session retrieval operation with HTTP metadata and optional session data. Includes content type, status code, raw response, and session object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetSessionResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class GetSessionResponse {\n    String contentType;\n    int statusCode;\n    HttpResponse<InputStream> rawResponse;\n    Optional<Session> session;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GoogleOneTapVerificationStatus Enum Values in Markdown\nDESCRIPTION: A markdown table representing the GoogleOneTapVerificationStatus enum which contains two values: UNVERIFIED (with string value 'unverified') and VERIFIED (with string value 'verified'). This enum is used to track the verification status of Google One Tap authentication.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/GoogleOneTapVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `UNVERIFIED` | unverified   |\n| `VERIFIED`   | verified     |\n```\n\n----------------------------------------\n\nTITLE: Defining SignInTokenObject Constants in Markdown Table Format\nDESCRIPTION: This snippet defines a key-value mapping for the SignInTokenObject. It establishes that the constant 'SIGN_IN_TOKEN' has the string value 'sign_in_token', which is likely used as a key or identifier in the Clerk SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignInTokenObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name            | Value           |\n| --------------- | --------------- |\n| `SIGN_IN_TOKEN` | sign_in_token   |\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Meta Fields\nDESCRIPTION: Empty markdown table structure defining column headers for documenting meta fields in the Clerk Java SDK, including Field, Type, Required and Description columns.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/errors/Meta.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field       | Type        | Required    | Description |\n| ----------- | ----------- | ----------- | ----------- |\n```\n\n----------------------------------------\n\nTITLE: WaitlistEntry Constant Definition - Java\nDESCRIPTION: Defines the string constant WAITLIST_ENTRY with value 'waitlist_entry' for use in waitlist-related functionality.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntryObject.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nWAITLIST_ENTRY = \"waitlist_entry\"\n```\n\n----------------------------------------\n\nTITLE: SignUpStatus Enum Values Definition - Java\nDESCRIPTION: Defines the three possible states of a signup process: MISSING_REQUIREMENTS for incomplete signups, COMPLETE for successful signups, and ABANDONED for discontinued signup attempts.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignUpStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                   | Value                  |\n| ---------------------- | ---------------------- |\n| `MISSING_REQUIREMENTS` | missing_requirements   |\n| `COMPLETE`             | complete               |\n| `ABANDONED`            | abandoned              |\n```\n\n----------------------------------------\n\nTITLE: CreateOrganizationDomainRequest Fields Definition\nDESCRIPTION: Markdown table defining the required fields for creating an organization domain. Includes organizationId as a string parameter and requestBody as a CreateOrganizationDomainRequestBody object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationDomainRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                 | Type                                                                                                  | Required                                                                                              | Description                                                                                           |\n| ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- |\n| `organizationId`                                                                                      | *String*                                                                                              | :heavy_check_mark:                                                                                    | The ID of the organization where the new domain will be created.                                      |\n| `requestBody`                                                                                         | [CreateOrganizationDomainRequestBody](../../models/operations/CreateOrganizationDomainRequestBody.md) | :heavy_check_mark:                                                                                    | N/A                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Authentication Property Definitions in Java\nDESCRIPTION: Property definitions for user authentication including optional booleans for backup codes and MFA timestamps, external account integrations, SAML configurations, and security status flags.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/User.md#2025-04-19_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nbackupCodeEnabled: Optional<Boolean>\nmfaEnabledAt: JsonNullable<Long>\nmfaDisabledAt: JsonNullable<Long>\nexternalAccounts: List<ExternalAccountWithVerification>\nsamlAccounts: List<SAMLAccount>\nlastSignInAt: JsonNullable<Long>\nbanned: Optional<Boolean>\nlocked: Optional<Boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining PasskeyVerificationStatus Enum Values in Markdown Table\nDESCRIPTION: A markdown table that documents the enum values for PasskeyVerificationStatus. It shows that the enum has a single value 'VERIFIED' which corresponds to the string value 'verified'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/PasskeyVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name       | Value      |\n| ---------- | ---------- |\n| `VERIFIED` | verified   |\n```\n\n----------------------------------------\n\nTITLE: OrganizationMembershipOrganization Field Definitions\nDESCRIPTION: Defines the fields and their types for the OrganizationMembershipOrganization class, including metadata fields, timestamps, and organization-specific properties. Contains both required and optional fields for managing organization membership data.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationMembershipOrganization.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class OrganizationMembershipOrganization {\n    private OrganizationMembershipOrganizationObject object;\n    private String id;\n    private String name;\n    private String slug;\n    private Optional<Long> membersCount;\n    private Optional<Boolean> missingMemberWithElevatedPermissions;\n    private Optional<Long> pendingInvitationsCount;\n    private long maxAllowedMemberships;\n    private boolean adminDeleteEnabled;\n    private Map<String, Object> publicMetadata;\n    private Map<String, Object> privateMetadata;\n    private Optional<String> createdBy;\n    private long createdAt;\n    private long updatedAt;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PasskeyVerificationStrategy Constants in Markdown Table\nDESCRIPTION: Markdown table defining the passkey verification strategy constant where PASSKEY is mapped to the value 'passkey'\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/PasskeyVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name      | Value     |\n| --------- | --------- |\n| `PASSKEY` | passkey   |\n```\n\n----------------------------------------\n\nTITLE: ClerkErrors Field Structure Definition\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the ClerkErrors class. Contains two main fields: errors (List<ClerkError>) and meta (Optional<Meta>).\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/errors/ClerkErrors.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                      | Type                                                       | Required                                                   | Description                                                |\n| ---------------------------------------------------------- | ---------------------------------------------------------- | ---------------------------------------------------------- | ---------------------------------------------------------- |\n| `errors`                                                   | List\\<[ClerkError](../../models/components/ClerkError.md)> | :heavy_check_mark:                                         | N/A                                                        |\n| `meta`                                                     | [Optional\\<Meta>](../../models/errors/Meta.md)             | :heavy_minus_sign:                                         | N/A                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining AdminVerificationStrategy Enum in Java\nDESCRIPTION: Enum definition for administrator verification strategy with a single value ADMIN that maps to the string 'admin'. Used to specify verification strategy in the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AdminVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nenum AdminVerificationStrategy {\n    ADMIN(\"admin\")\n}\n```\n\n----------------------------------------\n\nTITLE: PhoneNumberVerification Class Definition in Java\nDESCRIPTION: A Java class that represents phone number verification data structure for the Clerk SDK. The class seems to be part of a data model for handling phone number verification status and related attributes.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/PhoneNumberVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n# PhoneNumberVerification\n```\n\n----------------------------------------\n\nTITLE: Toggling Template Delivery using Clerk SDK in Java\nDESCRIPTION: This Java code snippet demonstrates the usage of the Clerk SDK to toggle the delivery state of a template, identified by its type and slug. This example uses the deprecated `toggleTemplateDelivery` method, which requires developers to handle delivery through webhooks upon disabling via the SDK. Key parameters include `templateType` and `slug`, while responses and errors are handled through predefined models like `ToggleTemplateDeliveryResponse` and `ClerkErrors`.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailsmstemplates/README.md#2025-04-19_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.*;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        ToggleTemplateDeliveryResponse res = sdk.emailSMSTemplates().toggleTemplateDelivery()\n                .templateType(ToggleTemplateDeliveryPathParamTemplateType.SMS)\n                .slug(\"<value>\")\n                .requestBody(ToggleTemplateDeliveryRequestBody.builder()\n                    .build())\n                .call();\n\n        if (res.template().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: AdminVerificationStatus Enum Definition in Markdown Table\nDESCRIPTION: A markdown table documenting the possible values for the AdminVerificationStatus enumeration. Currently, it only defines the VERIFIED status with a value of 'verified'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AdminVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name       | Value      |\n| ---------- | ---------- |\n| `VERIFIED` | verified   |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationDomainObject Enum in Java\nDESCRIPTION: This enum defines the OrganizationDomainObject type with a single value. It represents the type of an organization domain object, always set to 'organization_domain'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationDomainObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic enum OrganizationDomainObject {\n    ORGANIZATION_DOMAIN(\"organization_domain\");\n\n    private final String value;\n\n    OrganizationDomainObject(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: IdentificationLink Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the required fields of the IdentificationLink class, including their types and requirements. The class contains 'type' and 'id' fields, both required and of String type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/IdentificationLink.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field              | Type               | Required           | Description        |\n| ------------------ | ------------------ | ------------------ | ------------------ |\n| `type`             | *String*           | :heavy_check_mark: | N/A                |\n| `id`               | *String*           | :heavy_check_mark: | N/A                |\n```\n\n----------------------------------------\n\nTITLE: DeletePhoneNumberResponse Fields Table\nDESCRIPTION: Markdown table documenting the fields of the DeletePhoneNumberResponse class, including field names, types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeletePhoneNumberResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: UserObject Enum Definition in Java Clerk SDK\nDESCRIPTION: An enum definition for UserObject that contains a single value 'USER' with string value 'user'. This enum is used to represent the object's type in the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/UserObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# UserObject\n\nString representing the object's type. Objects of the same type share the same value.\n\n\n\n## Values\n\n| Name   | Value  |\n| ------ | ------ |\n| `USER` | user   |\n```\n\n----------------------------------------\n\nTITLE: SAML Account Verification Status Enum Values\nDESCRIPTION: Defines the possible verification states for SAML account tickets. The enum includes unverified (initial state), verified (successfully validated), and expired (no longer valid) statuses.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TicketVerificationSAMLAccountStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUNVERIFIED = unverified\nVERIFIED = verified\nEXPIRED = expired\n```\n\n----------------------------------------\n\nTITLE: Web3 Signature Strategy Constants Definition\nDESCRIPTION: Defines constant values for different web3 wallet signature verification strategies. Includes support for MetaMask, Coinbase Wallet, and OKX Wallet signature verification methods.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3SignatureVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                             | Value                            |\n| -------------------------------- | -------------------------------- |\n| `WEB3_METAMASK_SIGNATURE`        | web3_metamask_signature          |\n| `WEB3_COINBASE_WALLET_SIGNATURE` | web3_coinbase_wallet_signature   |\n| `WEB3_OKX_WALLET_SIGNATURE`      | web3_okx_wallet_signature        |\n```\n\n----------------------------------------\n\nTITLE: Defining Phone Number Verification Status Enum - Java\nDESCRIPTION: Enumeration that defines verification status values for phone numbers. Currently contains a single value 'VERIFIED' that maps to the string literal 'verified'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AdminVerificationPhoneNumberStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nenum AdminVerificationPhoneNumberStatus {\n    VERIFIED(\"verified\")\n}\n```\n\n----------------------------------------\n\nTITLE: Defining JWTTemplateObject Enum in Java\nDESCRIPTION: This code snippet defines an enum called JWTTemplateObject with a single constant JWT_TEMPLATE. The enum value is set to the string 'jwt_template'. This enum is likely used for specifying JWT template types or identifiers within the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/JWTTemplateObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `JWT_TEMPLATE` | jwt_template   |\n```\n\n----------------------------------------\n\nTITLE: OAuth Verification Status Values in Markdown Table\nDESCRIPTION: A markdown table that defines the possible status values for OAuth verification in the Clerk Java SDK. The table maps enum names to their corresponding string values used in API requests and responses.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OauthVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `UNVERIFIED`   | unverified     |\n| `VERIFIED`     | verified       |\n| `FAILED`       | failed         |\n| `EXPIRED`      | expired        |\n| `TRANSFERABLE` | transferable   |\n```\n\n----------------------------------------\n\nTITLE: DeleteExternalAccountResponse Fields Table in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the DeleteExternalAccountResponse class. Documents four fields: contentType, statusCode, rawResponse, and deletedObject.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteExternalAccountResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationObject Enum in Java\nDESCRIPTION: This code snippet defines an enum 'OrganizationObject' with a single value 'ORGANIZATION' that maps to the string 'organization'. This enum is likely used throughout the Clerk SDK for Java to represent organization-related constants in a type-safe manner.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `ORGANIZATION` | organization   |\n```\n\n----------------------------------------\n\nTITLE: Defining ExternalAccountWithVerification Java Class in Clerk SDK\nDESCRIPTION: A model class that extends ExternalAccount to include verification-related fields. It adds verification timestamp properties, constructor methods, and getters for the extended fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ExternalAccountWithVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class ExternalAccountWithVerification extends ExternalAccount {\n    private List<VerificationAttempt> verification;\n    private Instant verifiedAt;\n    private Instant verificationsAtLastVerifiedAt;\n\n    public ExternalAccountWithVerification() {\n    }\n\n    public ExternalAccountWithVerification(String id, String objectType, String providerUserId,\n            String emailAddress, Instant approvedScopes, List<String> scopes,\n            String label, String provider,\n            Instant identificatorLastRefreshedAt, Instant publicMetadataLastRefreshedAt,\n            List<VerificationAttempt> verification, Instant verifiedAt,\n            Instant verificationsAtLastVerifiedAt) {\n        super(id, objectType, providerUserId, emailAddress, approvedScopes, scopes, label, provider,\n                identificatorLastRefreshedAt, publicMetadataLastRefreshedAt);\n        this.verification = verification;\n        this.verifiedAt = verifiedAt;\n        this.verificationsAtLastVerifiedAt = verificationsAtLastVerifiedAt;\n    }\n\n    public List<VerificationAttempt> getVerification() {\n        return verification;\n    }\n\n    public Instant getVerifiedAt() {\n        return verifiedAt;\n    }\n\n    public Instant getVerificationsAtLastVerifiedAt() {\n        return verificationsAtLastVerifiedAt;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Web3 Wallet Verification Status Enum in Java\nDESCRIPTION: Enumeration defining possible verification statuses for Web3 wallets in the Clerk authentication system. Currently only includes a VERIFIED status with value 'verified'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AdminVerificationWeb3WalletStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nVERIFIED = verified\n```\n\n----------------------------------------\n\nTITLE: Defining InstanceRestrictionsObject Enum in Java\nDESCRIPTION: Defines an enum called InstanceRestrictionsObject with a single value INSTANCE_RESTRICTIONS. This enum represents the object type for instance restrictions, with the value \"instance_restrictions\".\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InstanceRestrictionsObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic enum InstanceRestrictionsObject {\n    INSTANCE_RESTRICTIONS(\"instance_restrictions\");\n\n    private final String value;\n\n    InstanceRestrictionsObject(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GoogleOneTapVerificationStrategy Enum in Java\nDESCRIPTION: This code snippet defines an enum named GoogleOneTapVerificationStrategy with a single value GOOGLE_ONE_TAP. The enum is likely used in the Clerk Java SDK to specify the verification strategy for Google One Tap authentication.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/GoogleOneTapVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name             | Value            |\n| ---------------- | ---------------- |\n| `GOOGLE_ONE_TAP` | google_one_tap   |\n```\n\n----------------------------------------\n\nTITLE: CreateOAuthApplicationResponse Fields Documentation\nDESCRIPTION: Table documenting the fields, types, requirements and descriptions for the CreateOAuthApplicationResponse class. Includes contentType, statusCode, rawResponse and oAuthApplicationWithSecret fields.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOAuthApplicationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                  | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `oAuthApplicationWithSecret`                                                                                                   | [Optional\\<OAuthApplicationWithSecret>](../../models/components/OAuthApplicationWithSecret.md)                                 | :heavy_minus_sign:                                                                                                             | An OAuth application with client secret                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: OrganizationInvitationObject Constant Definition in Clerk Java SDK\nDESCRIPTION: Defines the constant value for organization invitation objects in the Clerk Java SDK. The constant 'ORGANIZATION_INVITATION' has a value of 'organization_invitation' which represents the object's type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitationObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                      | Value                     |\n| ------------------------- | ------------------------- |\n| `ORGANIZATION_INVITATION` | organization_invitation   |\n```\n\n----------------------------------------\n\nTITLE: Defining Response and Errors for Revoking Organization Invitation in Markdown\nDESCRIPTION: This snippet defines the response type and potential errors for the revoke organization invitation operation. It specifies the response model and lists possible error types with their corresponding status codes and content types.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n### Response\n\n**[RevokeOrganizationInvitationResponse](../../models/operations/RevokeOrganizationInvitationResponse.md)**\n\n### Errors\n\n| Error Type                | Status Code               | Content Type              |\n| ------------------------- | ------------------------- | ------------------------- |\n| models/errors/ClerkErrors | 400, 403, 404             | application/json          |\n| models/errors/SDKError    | 4XX, 5XX                  | \\*/\\*                     |\n```\n\n----------------------------------------\n\nTITLE: SamlConnection Interface Declaration for Clerk SAML Integration\nDESCRIPTION: Core interface definition for SAML connections in Clerk, including provider details and domain settings. Includes nested Create and Update builder interfaces for connection configuration.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SamlConnection.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic interface SamlConnection {\n  interface Create<B> extends RequestBuilder<SamlConnection, B> {\n  }\n\n  interface Update<B> extends RequestBuilder<SamlConnection, B> {\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationWithLogoObject Enum in Java for Clerk SDK\nDESCRIPTION: This enum defines a single value 'ORGANIZATION' which is likely used to represent an organization entity with a logo in the Clerk Java SDK. The enum provides a type-safe way to reference this specific object type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationWithLogoObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name           | Value          |\n| -------------- | -------------- |\n| `ORGANIZATION` | organization   |\n```\n\n----------------------------------------\n\nTITLE: BlocklistIdentifier Fields Table\nDESCRIPTION: Markdown table documenting the fields, types, requirements and descriptions for the BlocklistIdentifier model. Includes fields for object type, ID, identifier value, identifier type, instance ID, creation timestamp and update timestamp.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/BlocklistIdentifier.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ---- | ---- | -------- | ----------- |\n| `object` | [Optional<BlocklistIdentifierObject>](../../models/components/BlocklistIdentifierObject.md) | :heavy_minus_sign: | String representing the object's type. Objects of the same type share the same value.<br/> |\n| `id` | *Optional<String>* | :heavy_minus_sign: | N/A |\n| `identifier` | *Optional<String>* | :heavy_minus_sign: | An email address, email domain, phone number or web3 wallet.<br/> |\n| `identifierType` | [Optional<BlocklistIdentifierIdentifierType>](../../models/components/BlocklistIdentifierIdentifierType.md) | :heavy_minus_sign: | N/A |\n| `instanceId` | *Optional<String>* | :heavy_minus_sign: | N/A |\n| `createdAt` | *Optional<Long>* | :heavy_minus_sign: | Unix timestamp of creation<br/> |\n| `updatedAt` | *Optional<Long>* | :heavy_minus_sign: | Unix timestamp of last update.<br/> |\n```\n\n----------------------------------------\n\nTITLE: QueryParamStatus Enumeration Values in Java\nDESCRIPTION: This code snippet represents the values of the `QueryParamStatus` enumeration, used for filtering organization invitations. The enumeration has three possible values: `PENDING`, `ACCEPTED`, and `REVOKED`, each representing a different status of an invitation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/QueryParamStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n| Name       | Value      |\n| ---------- | ---------- |\n| `PENDING`  | pending    |\n| `ACCEPTED` | accepted   |\n| `REVOKED`  | revoked    |\n```\n\n----------------------------------------\n\nTITLE: Response Fields Table in Markdown\nDESCRIPTION: A markdown table documenting the fields of the CreateSessionTokenFromTemplateResponse class, including field names, types, requirements and descriptions for each property.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenFromTemplateResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `object` | [Optional\\<CreateSessionTokenFromTemplateResponseBody>](../../models/operations/CreateSessionTokenFromTemplateResponseBody.md) | :heavy_minus_sign: | OK |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationInvitationWithPublicOrganizationDataObject Enum in Java\nDESCRIPTION: This enum defines a constant for representing the object type of organization invitations. It includes a single value 'ORGANIZATION_INVITATION' with the string representation 'organization_invitation'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationInvitationWithPublicOrganizationDataObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic enum OrganizationInvitationWithPublicOrganizationDataObject {\n    ORGANIZATION_INVITATION(\"organization_invitation\");\n\n    private final String value;\n\n    OrganizationInvitationWithPublicOrganizationDataObject(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: FromOAuthVerificationStatus Enum Values Table\nDESCRIPTION: Defines the possible verification states for OAuth authentication. Contains two states: UNVERIFIED and VERIFIED.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/FromOAuthVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `UNVERIFIED` | unverified   |\n| `VERIFIED`   | verified     |\n```\n\n----------------------------------------\n\nTITLE: Defining OrganizationSettingsObject Enum Values in Clerk Java SDK\nDESCRIPTION: Defines the possible values for the OrganizationSettingsObject enum in the Clerk Java SDK. The enum contains a single value 'ORGANIZATION_SETTINGS' with the string value 'organization_settings' that represents the object's type.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OrganizationSettingsObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                    | Value                   |\n| ----------------------- | ----------------------- |\n| `ORGANIZATION_SETTINGS` | organization_settings   |\n```\n\n----------------------------------------\n\nTITLE: Testing Token Constant Definition\nDESCRIPTION: Defines the TESTING_TOKEN constant with value 'testing_token' used for testing authentication flows.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TestingTokenObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name            | Value           |\n| --------------- | --------------- |\n| `TESTING_TOKEN` | testing_token   |\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Memberships Response Fields in Java\nDESCRIPTION: Describes the response object structure for retrieving organization memberships with content type, status code, raw response, and optional organization memberships\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/InstanceGetOrganizationMembershipsResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class InstanceGetOrganizationMembershipsResponse {\n    String contentType;\n    int statusCode;\n    HttpResponse<InputStream> rawResponse;\n    Optional<OrganizationMemberships> organizationMemberships;\n}\n```\n\n----------------------------------------\n\nTITLE: DeleteOAuthApplicationResponse Fields Table\nDESCRIPTION: Markdown table defining the response fields for the DeleteOAuthApplicationResponse model, including field names, types, required status, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOAuthApplicationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `deletedObject`                                                                                                                | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md)                                                           | :heavy_minus_sign:                                                                                                             | Deleted Object                                                                                                                 |\n```\n\n----------------------------------------\n\nTITLE: Domain Object Constant Definition in Markdown Table\nDESCRIPTION: A markdown table that defines the DOMAIN constant with the value 'domain'. This constant is likely used for domain identification or as a key in API operations within the Clerk Java SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/DomainObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name     | Value    |\n| -------- | -------- |\n| `DOMAIN` | domain   |\n```\n\n----------------------------------------\n\nTITLE: Defining ErrorClerkError Fields in Markdown\nDESCRIPTION: This snippet defines the fields of the ErrorClerkError class using a markdown table. It specifies the field names, types, whether they are required, and provides space for descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ErrorClerkError.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                        | Type                                                         | Required                                                     | Description                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| `message`                                                    | *String*                                                     | :heavy_check_mark:                                           | N/A                                                          |\n| `longMessage`                                                | *String*                                                     | :heavy_check_mark:                                           | N/A                                                          |\n| `code`                                                       | *String*                                                     | :heavy_check_mark:                                           | N/A                                                          |\n| `meta`                                                       | [Optional\\<ErrorMeta>](../../models/components/ErrorMeta.md) | :heavy_minus_sign:                                           | N/A                                                          |\n| `clerkTraceId`                                               | *Optional\\<String>*                                          | :heavy_minus_sign:                                           | N/A                                                          |\n```\n\n----------------------------------------\n\nTITLE: SessionActivityResponse Field Definitions in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the SessionActivityResponse class. The fields track various aspects of a session including device type, browser details, and location information.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SessionActivityResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field               | Type                | Required            | Description         |\n| ------------------- | ------------------- | ------------------- | ------------------- |\n| `object`            | *String*            | :heavy_check_mark:  | N/A                 |\n| `id`                | *String*            | :heavy_check_mark:  | N/A                 |\n| `deviceType`        | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `isMobile`          | *boolean*           | :heavy_check_mark:  | N/A                 |\n| `browserName`       | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `browserVersion`    | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `ipAddress`         | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `city`              | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n| `country`           | *Optional\\<String>* | :heavy_minus_sign:  | N/A                 |\n```\n\n----------------------------------------\n\nTITLE: ProxyCheckObject Enumeration Definition\nDESCRIPTION: Defines the ProxyCheckObject enumeration with a single value PROXY_CHECK that maps to the string 'proxy_check'. This is used for consistent string representation in API interactions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ProxyCheckObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ProxyCheckObject\n\n\n## Values\n\n| Name          | Value         |\n| ------------- | ------------- |\n| `PROXY_CHECK` | proxy_check   |\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of TicketVerificationStatus Values\nDESCRIPTION: Table defining the enumeration values and their corresponding string representations for the TicketVerificationStatus enum used in ticket verification processes.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TicketVerificationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name         | Value        |\n| ------------ | ------------ |\n| `UNVERIFIED` | unverified   |\n| `VERIFIED`   | verified     |\n| `EXPIRED`    | expired      |\n```\n\n----------------------------------------\n\nTITLE: Java Response Model for Organization Membership Update\nDESCRIPTION: Defines the response structure with content type, status code, raw HTTP response, and optional organization membership information\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateOrganizationMembershipResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class UpdateOrganizationMembershipResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<OrganizationMembership> organizationMembership;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Organization Membership Update Response Fields\nDESCRIPTION: Structured response class representing the result of an organization membership metadata update operation, including HTTP response metadata and optional membership details\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateOrganizationMembershipMetadataResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class UpdateOrganizationMembershipMetadataResponse {\n  String contentType;\n  int statusCode;\n  HttpResponse<InputStream> rawResponse;\n  Optional<OrganizationMembership> organizationMembership;\n}\n```\n\n----------------------------------------\n\nTITLE: Building Clerk SDK from Source - Unix\nDESCRIPTION: Command to build and publish the SDK to local Maven repository on Unix systems\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew publishToMavenLocal -Pskip.signing\n```\n\n----------------------------------------\n\nTITLE: Counting Users by Name Query in Java\nDESCRIPTION: This snippet details the `nameQuery` parameter, which counts users with names matching the provided query using case-insensitive partial matching. This is useful for searching users by their names.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUsersCountRequest.md#2025-04-19_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n| `nameQuery`                                                                                                                                                                                                                                                                                                                                         | *Optional\\<String>*                                                                                                                                                                                                                                                                                                                                 | :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                  | Returns users with names that match the given query, via case-insensitive partial match.                                                                                                                                                                                                                                                            |                                                                                                                                                                                                                                                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: TokenObject Enumeration Definition\nDESCRIPTION: A markdown table defining the TokenObject enumeration with a single value 'TOKEN' that has the string value 'token'. Objects of the same type share the same value.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TokenObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name    | Value   |\n| ------- | ------- |\n| `TOKEN` | token   |\n```\n\n----------------------------------------\n\nTITLE: Web3Wallet Type Constant Definition\nDESCRIPTION: Defines the constant string value that represents a Web3 wallet object type. Used for type identification and consistency across the SDK.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3WalletObject.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nWEB3_WALLET = \"web3_wallet\"\n```\n\n----------------------------------------\n\nTITLE: Defining the CreateSessionTokenFromTemplateRequestBody Fields in Markdown\nDESCRIPTION: The Markdown table displays the fields of the CreateSessionTokenFromTemplateRequestBody class, including their types, requirement status, and descriptions. The class contains a single field 'expiresInSeconds' of type JsonNullable<Double> that allows overriding the JWT token lifetime.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSessionTokenFromTemplateRequestBody.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                  | Type                                                   | Required                                               | Description                                            |\n| ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ | ------------------------------------------------------ |\n| `expiresInSeconds`                                     | *JsonNullable\\<Double>*                                | :heavy_minus_sign:                                     | Use this parameter to override the JWT token lifetime. |\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Web3Wallet Fields Definition\nDESCRIPTION: Defines the structure and requirements of Web3Wallet fields including data types, requirements, and descriptions for each field. Key fields include id, object, web3Wallet, verification, createdAt, and updatedAt timestamps.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Web3Wallet.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field         | Type          | Required      | Description   |\n| ------------- | ------------- | ------------- | ------------- |\n| `id`          | *Optional<String>* | :heavy_minus_sign: | N/A |\n| `object`      | [Web3WalletObject] | :heavy_check_mark: | String representing the object's type. Objects of the same type share the same value. |\n| `web3Wallet`  | *String*      | :heavy_check_mark: | N/A |\n| `verification`| [Optional<Web3WalletVerification>] | :heavy_check_mark: | N/A |\n| `createdAt`   | *long*        | :heavy_check_mark: | Unix timestamp of creation |\n| `updatedAt`   | *long*        | :heavy_check_mark: | Unix timestamp of creation |\n```\n\n----------------------------------------\n\nTITLE: Token Fields Definition Table\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the Token object structure. Contains two main fields: object of type TokenObject and jwt of type String.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/Token.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                  | Type                                                                                   | Required                                                                               | Description                                                                            |\n| -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------- |\n| `object`                                                                               | [TokenObject](../../models/components/TokenObject.md)                                  | :heavy_check_mark:                                                                     | String representing the object's type. Objects of the same type share the same value.<br/> |\n| `jwt`                                                                                  | *String*                                                                               | :heavy_check_mark:                                                                     | String representing the encoded jwt value.<br/>                                        |\n```\n\n----------------------------------------\n\nTITLE: SignUpObject Enum Constants\nDESCRIPTION: Defines the SIGN_UP_ATTEMPT constant with value 'sign_up_attempt' used to track signup attempts in the Clerk authentication system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignUpObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name              | Value             |\n| ----------------- | ----------------- |\n| `SIGN_UP_ATTEMPT` | sign_up_attempt   |\n```\n\n----------------------------------------\n\nTITLE: DeleteTOTPRequest Fields Structure in Markdown\nDESCRIPTION: Defines the field structure for the DeleteTOTPRequest object. Contains a single required field 'userId' of type String that identifies the user whose TOTP entries should be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteTOTPRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                            | Type                                             | Required                                         | Description                                      |\n| ------------------------------------------------ | ------------------------------------------------ | ------------------------------------------------ | ------------------------------------------------ |\n| `userId`                                         | *String*                                         | :heavy_check_mark:                               | The ID of the user whose TOTPs are to be deleted |\n```\n\n----------------------------------------\n\nTITLE: Building Clerk SDK from Source - Windows\nDESCRIPTION: Command to build and publish the SDK to local Maven repository on Windows\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngradlew.bat publishToMavenLocal -Pskip.signing\n```\n\n----------------------------------------\n\nTITLE: Defining TicketVerificationStrategy Enum in Markdown Table\nDESCRIPTION: A markdown table that defines the TicketVerificationStrategy enum with a single value 'TICKET' mapped to the string literal 'ticket'. This enum is likely used in the Java SDK to specify ticket verification methods.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TicketVerificationStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name     | Value    |\n| -------- | -------- |\n| `TICKET` | ticket   |\n```\n\n----------------------------------------\n\nTITLE: SvixURL Field Definition Table in Markdown\nDESCRIPTION: Markdown table defining the svixUrl field specification for the SvixURL class. Shows the field name, type, required status, and description.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SvixURL.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field              | Type               | Required           | Description        |\n| ------------------ | ------------------ | ------------------ | ------------------ |\n| `svixUrl`          | *String*           | :heavy_check_mark: | N/A                |\n```\n\n----------------------------------------\n\nTITLE: SAML Connection Fields Table\nDESCRIPTION: Markdown table defining the complete field specification for SAML connections including field names, types, requirements, and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SchemasSAMLConnection.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                  | Type                                                                                                   | Required                                                                                               | Description                                                                                            |\n| ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------ |\n| `object`                                                                                               | [SchemasSAMLConnectionObject](../../models/components/SchemasSAMLConnectionObject.md)                  | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `id`                                                                                                   | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `name`                                                                                                 | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `domain`                                                                                               | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `idpEntityId`                                                                                          | *Optional\\<String>*                                                                                    | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `idpSsoUrl`                                                                                            | *Optional\\<String>*                                                                                    | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `idpCertificate`                                                                                       | *Optional\\<String>*                                                                                    | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `idpMetadataUrl`                                                                                       | *JsonNullable\\<String>*                                                                                | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `idpMetadata`                                                                                          | *JsonNullable\\<String>*                                                                                | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `acsUrl`                                                                                               | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `spEntityId`                                                                                           | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `spMetadataUrl`                                                                                        | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `organizationId`                                                                                       | *JsonNullable\\<String>*                                                                                | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `attributeMapping`                                                                                     | [Optional\\<SAMLConnectionAttributeMapping>](../../models/components/SAMLConnectionAttributeMapping.md) | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `active`                                                                                               | *boolean*                                                                                              | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `provider`                                                                                             | *String*                                                                                               | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `userCount`                                                                                            | *long*                                                                                                 | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `syncUserAttributes`                                                                                   | *boolean*                                                                                              | :heavy_check_mark:                                                                                     | N/A                                                                                                    |\n| `allowSubdomains`                                                                                      | *Optional\\<Boolean>*                                                                                   | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `allowIdpInitiated`                                                                                    | *Optional\\<Boolean>*                                                                                   | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n| `disableAdditionalIdentifications`                                                                     | *Optional\\<Boolean>*                                                                                   | :heavy_minus_sign:                                                                                     | N/A                                                                                                    |\n```\n\n----------------------------------------\n\nTITLE: Field Definitions for OAuth Application Model in Java SDK\nDESCRIPTION: A markdown table documenting the fields available in the Clerk OAuth application model. It includes field names, types, requirement indicators, and descriptions including a deprecated field with migration warning.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplicationWithSecret.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Fields\n\n| Field                                                                                                                                                            | Type                                                                                                                                                             | Required                                                                                                                                                         | Description                                                                                                                                                      |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `object`                                                                                                                                                         | [OAuthApplicationWithSecretObject](../../models/components/OAuthApplicationWithSecretObject.md)                                                                  | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `id`                                                                                                                                                             | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `instanceId`                                                                                                                                                     | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `name`                                                                                                                                                           | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `clientId`                                                                                                                                                       | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `public_`                                                                                                                                                        | *boolean*                                                                                                                                                        | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `scopes`                                                                                                                                                         | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `redirectUris`                                                                                                                                                   | List\\<*String*>                                                                                                                                                  | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| ~~`callbackUrl`~~                                                                                                                                                | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | : warning: ** DEPRECATED **: This will be removed in a future release, please migrate away from it as soon as possible.<br/><br/>Deprecated: Use redirect_uris instead.<br/> |\n| `authorizeUrl`                                                                                                                                                   | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `tokenFetchUrl`                                                                                                                                                  | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `userInfoUrl`                                                                                                                                                    | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n| `discoveryUrl`                                                                                                                                                   | *String*                                                                                                                                                         | :heavy_check_mark:                                                                                                                                               | N/A                                                                                                                                                              |\n```\n\n----------------------------------------\n\nTITLE: OAuth Application Secret Class Header\nDESCRIPTION: Class header definition for handling OAuth applications with secrets.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/OAuthApplicationWithSecret.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OAuthApplicationWithSecret\n```\n\n----------------------------------------\n\nTITLE: Updating Production Instance Domain (Deprecated)\nDESCRIPTION: Illustrates the process of updating a production instance domain using Clerk SDK, which is now deprecated and will be removed in future releases\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/betafeatures/README.md#2025-04-19_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nUpdateProductionInstanceDomainRequestBody req = UpdateProductionInstanceDomainRequestBody.builder()\n        .build();\n\nUpdateProductionInstanceDomainResponse res = sdk.betaFeatures().updateProductionInstanceDomain()\n        .request(req)\n        .call();\n```\n\n----------------------------------------\n\nTITLE: Defining ActorTokenObject Enum in Java\nDESCRIPTION: Defines an enum constant for actor tokens in the Clerk SDK. The enum contains a single value 'ACTOR_TOKEN' with the string representation 'actor_token', which is likely used for token identification in authentication workflows.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ActorTokenObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name          | Value         |\n| ------------- | ------------- |\n| `ACTOR_TOKEN` | actor_token   |\n```\n\n----------------------------------------\n\nTITLE: SignUpVerification Fields Definition in Java\nDESCRIPTION: Defines the core fields of the SignUpVerification model including nextAction, supportedStrategies, and additionalProperties. The nextAction field is an optional enum of type NextAction, supportedStrategies is a List of Strings, and additionalProperties is a Map of String to Object.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SignUpVerification.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                          | Type                                                           | Required                                                       | Description                                                    |\n| -------------------------------------------------------------- | -------------------------------------------------------------- | -------------------------------------------------------------- | -------------------------------------------------------------- |\n| `nextAction`                                                   | [Optional\\<NextAction>](../../models/components/NextAction.md) | :heavy_minus_sign:                                             | N/A                                                            |\n| `supportedStrategies`                                          | List\\<*String*>                                                | :heavy_minus_sign:                                             | N/A                                                            |\n| `additionalProperties`                                         | Map\\<String, *Object*>                                         | :heavy_minus_sign:                                             | N/A                                                            |\n```\n\n----------------------------------------\n\nTITLE: Clerk Actor Token Status Values in Markdown Table\nDESCRIPTION: A markdown table defining the three possible status values for actor tokens: PENDING (pending), ACCEPTED (accepted), and REVOKED (revoked).\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ActorTokenStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name       | Value      |\n| ---------- | ---------- |\n| `PENDING`  | pending    |\n| `ACCEPTED` | accepted   |\n| `REVOKED`  | revoked    |\n```\n\n----------------------------------------\n\nTITLE: Defining InvitationRevokedStatus Enum Values in Markdown Table\nDESCRIPTION: A markdown table that defines the available values for the InvitationRevokedStatus enum. It contains a single value 'REVOKED' which corresponds to the string value 'revoked'.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InvitationRevokedStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name      | Value     |\n| --------- | --------- |\n| `REVOKED` | revoked   |\n```\n\n----------------------------------------\n\nTITLE: Configuring TOTP Secret for User Authentication in Java\nDESCRIPTION: Describes the 'totpSecret' parameter for configuring Time-based One-Time Password (TOTP) authentication. It specifies the supported options for period, code length, and algorithm.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpdateUserRequestBody.md#2025-04-19_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nJsonNullable<String> totpSecret\n```\n\n----------------------------------------\n\nTITLE: Counting Users by Phone Number Query in Java\nDESCRIPTION: This snippet defines the `phoneNumberQuery` parameter, an optional string that counts users with phone numbers that match the provided query via case-insensitive partial matching. For example, `phone_number_query=555` would include users with phone numbers like `+1555xxxxxxx`.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/GetUsersCountRequest.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n| `phoneNumberQuery`                                                                                                                                                                                                                                                                                                                                  | *Optional\\<String>*                                                                                                                                                                                                                                                                                                                                 | :heavy_minus_sign:                                                                                                                                                                                                                                                                                                                                  | Counts users with phone numbers that match the given query, via case-insensitive partial match.<br/>For example, `phone_number_query=555` will match a user with the phone number `+1555xxxxxxx`,<br/>and will be included in the resulting count.                                                                                                  |                                                                                                                                                                                                                                                                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: DeleteOrganizationMembershipRequest Fields Table in Markdown\nDESCRIPTION: Markdown table documenting the required fields for deleting an organization membership. Includes organizationId and userId fields with their types and descriptions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOrganizationMembershipRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                | Type                                                 | Required                                             | Description                                          |\n| ---------------------------------------------------- | ---------------------------------------------------- | ---------------------------------------------------- | ---------------------------------------------------- |\n| `organizationId`                                     | *String*                                             | :heavy_check_mark:                                   | The ID of the organization the membership belongs to |\n| `userId`                                             | *String*                                             | :heavy_check_mark:                                   | The ID of the user that this membership belongs to   |\n```\n\n----------------------------------------\n\nTITLE: DeleteSAMLConnectionResponse Fields Schema Definition\nDESCRIPTION: Markdown table defining the fields of the DeleteSAMLConnectionResponse class including their types, requirements, and descriptions. Key fields include contentType, statusCode, rawResponse, and deletedObject.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteSAMLConnectionResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `deletedObject` | [Optional\\<DeletedObject>](../../models/components/DeletedObject.md) | :heavy_minus_sign: | Deleted Object |\n```\n\n----------------------------------------\n\nTITLE: Defining DeleteOAuthApplicationRequest Fields in Markdown\nDESCRIPTION: Documents the fields required for deleting an OAuth application, specifically the mandatory oauthApplicationId parameter of type String.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteOAuthApplicationRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                     | Type                                      | Required                                  | Description                               |\n| ----------------------------------------- | ----------------------------------------- | ----------------------------------------- | ----------------------------------------- |\n| `oauthApplicationId`                      | *String*                                  | :heavy_check_mark:                        | The ID of the OAuth application to delete |\n```\n\n----------------------------------------\n\nTITLE: DeleteDomainRequest Fields Table\nDESCRIPTION: Table defining the required fields for a DeleteDomainRequest. The domainId field is required and must reference a satellite domain that will be deleted.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/DeleteDomainRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                  | Type                                                                   | Required                                                               | Description                                                            |\n| ---------------------------------------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------- |\n| `domainId`                                                             | *String*                                                               | :heavy_check_mark:                                                     | The ID of the domain that will be deleted. Must be a satellite domain. |\n```\n\n----------------------------------------\n\nTITLE: CreateSvixAppResponse Fields Table in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the CreateSvixAppResponse class.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateSvixAppResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Type | Required | Description |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType` | *String* | :heavy_check_mark: | HTTP response content type for this operation |\n| `statusCode` | *int* | :heavy_check_mark: | HTTP response status code for this operation |\n| `rawResponse` | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark: | Raw HTTP response; suitable for custom response parsing |\n| `svixURL` | [Optional\\<SvixURL>](../../models/components/SvixURL.md) | :heavy_minus_sign: | Response that contains a temporary Svix URL to access management dashboard |\n```\n\n----------------------------------------\n\nTITLE: Template Slug Parameter Documentation\nDESCRIPTION: Documents the templateSlug parameter which allows specifying an optional email template to use for invitation emails. The parameter accepts a TemplateSlug type and is used to customize the email invitation format.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateInvitationRequestBody.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| `templateSlug` | [Optional<TemplateSlug>](../../models/operations/TemplateSlug.md) | :heavy_minus_sign: | The slug of the email template to use for the invitation email. |\n```\n\n----------------------------------------\n\nTITLE: Defining Public Metadata in Java\nDESCRIPTION: Defines the `publicMetadata` attribute as a `Map<String, Object>`. This metadata is stored on the user and is visible to both Frontend and Backend APIs, offering flexibility for storing user-related information accessible across different parts of the application.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateUserRequestBody.md#2025-04-19_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n\"Map<String, *Object*> `publicMetadata`\"\n```\n\n----------------------------------------\n\nTITLE: Response Fields Table in Markdown\nDESCRIPTION: Markdown table defining the fields, types, requirements and descriptions for the CreateActorTokenResponse class. Documents the HTTP response metadata fields and the actor token result.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateActorTokenResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `actorToken`                                                                                                                   | [Optional\\<ActorToken>](../../models/components/ActorToken.md)                                                                 | :heavy_minus_sign:                                                                                                             | Success                                                                                                                        |\n```\n\n----------------------------------------\n\nTITLE: Defining Response and Error Types for Session Token Creation in Clerk SDK Java\nDESCRIPTION: Markdown tables describing the response type and potential error types when creating a session token from a JWT template using the Clerk SDK for Java.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/sessions/README.md#2025-04-19_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n### Response\n\n**[CreateSessionTokenFromTemplateResponse](../../models/operations/CreateSessionTokenFromTemplateResponse.md)**\n\n### Errors\n\n| Error Type                | Status Code               | Content Type              |\n| ------------------------- | ------------------------- | ------------------------- |\n| models/errors/ClerkErrors | 401, 404                  | application/json          |\n| models/errors/SDKError    | 4XX, 5XX                  | \\*/\\*                     |\n```\n\n----------------------------------------\n\nTITLE: Defining WaitlistEntryStatus Constants in Markdown Table\nDESCRIPTION: Markdown table defining the possible states of a waitlist entry with their corresponding string values. The states represent the lifecycle of a waitlist entry from pending through to completion or rejection.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/WaitlistEntryStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name        | Value       |\n| ----------- | ----------- |\n| `PENDING`   | pending     |\n| `INVITED`   | invited     |\n| `REJECTED`  | rejected    |\n| `COMPLETED` | completed   |\n```\n\n----------------------------------------\n\nTITLE: TicketVerificationSAMLAccountStrategy Enum Values\nDESCRIPTION: Defines the TicketVerificationSAMLAccountStrategy enum with a TICKET value that corresponds to the string 'ticket'. This enum is used to represent strategies for SAML account verification within the Clerk SDK for Java.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TicketVerificationSAMLAccountStrategy.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name     | Value    |\n| -------- | -------- |\n| `TICKET` | ticket   |\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters for Revoking Organization Invitation in Markdown\nDESCRIPTION: This snippet defines the parameters required for revoking an organization invitation, including organizationId, invitationId, and an optional request body. It specifies the types and requirements for each parameter.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter                                                                                                                | Type                                                                                                                     | Required                                                                                                                 | Description                                                                                                              |\n| ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------ |\n| `organizationId`                                                                                                         | *String*                                                                                                                 | :heavy_check_mark:                                                                                                       | The organization ID.                                                                                                     |\n| `invitationId`                                                                                                           | *String*                                                                                                                 | :heavy_check_mark:                                                                                                       | The organization invitation ID.                                                                                          |\n| `requestBody`                                                                                                            | [Optional\\<RevokeOrganizationInvitationRequestBody>](../../models/operations/RevokeOrganizationInvitationRequestBody.md) | :heavy_minus_sign:                                                                                                       | N/A                                                                                                                      |\n```\n\n----------------------------------------\n\nTITLE: Defining Allowlist Identifier Constant\nDESCRIPTION: Defines the constant value for the allowlist identifier object type. This value is used to identify objects of type allowlist_identifier within the Clerk system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/AllowlistIdentifierObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name                   | Value                  |\n| ---------------------- | ---------------------- |\n| `ALLOWLIST_IDENTIFIER` | allowlist_identifier   |\n```\n\n----------------------------------------\n\nTITLE: Listing Pending Organization Invitations with Clerk Java SDK\nDESCRIPTION: This deprecated method retrieves a list of pending organization invitations. It supports pagination using limit and offset parameters. The invitations are ordered by descending creation date.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/organizationinvitations/README.md#2025-04-19_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nClerk sdk = Clerk.builder()\n        .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n    .build();\n\nListPendingOrganizationInvitationsResponse res = sdk.organizationInvitations().listPending()\n        .organizationId(\"<id>\")\n        .limit(10L)\n        .offset(0L)\n        .call();\n\nif (res.organizationInvitations().isPresent()) {\n    // handle response\n}\n```\n\n----------------------------------------\n\nTITLE: Email Template Slug Enum Values\nDESCRIPTION: Defines the available template slugs for invitation emails. Includes INVITATION for standard invites and WAITLIST_INVITATION for waitlist invites.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateBulkInvitationsTemplateSlug.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nINVITATION          // value: invitation\nWAITLIST_INVITATION // value: waitlist_invitation\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for ClerkErrorErrorMeta Fields\nDESCRIPTION: Defines a markdown table structure for documenting fields of the ClerkErrorErrorMeta class, including columns for field name, type, required status, and description.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/ClerkErrorErrorMeta.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field       | Type        | Required    | Description |\n| ----------- | ----------- | ----------- | ----------- |\n```\n\n----------------------------------------\n\nTITLE: Defining Template Path Parameter Enum\nDESCRIPTION: Enumeration specifying the valid template types that can be used in upsert operations within the Clerk SDK\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/UpsertTemplatePathParamTemplateType.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name    | Value   |\n| ------- | ------- |\n| `EMAIL` | email   |\n| `SMS`   | sms     |\n```\n\n----------------------------------------\n\nTITLE: Defining InvitationStatus Enum in Java for Clerk SDK\nDESCRIPTION: This enum defines four possible states for an invitation: PENDING, ACCEPTED, REVOKED, and EXPIRED. Each enum constant is associated with a string value that likely corresponds to the API representation.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/InvitationStatus.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic enum InvitationStatus {\n    PENDING(\"pending\"),\n    ACCEPTED(\"accepted\"),\n    REVOKED(\"revoked\"),\n    EXPIRED(\"expired\");\n\n    private final String value;\n\n    InvitationStatus(String value) {\n        this.value = value;\n    }\n\n    public String getValue() {\n        return value;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SAML Connection Constants in Java\nDESCRIPTION: This enumeration defines a constant for SAML connection with its corresponding string value. The enum provides a type-safe way to reference SAML connection types in Java code.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/SchemasSAMLConnectionObject.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n# SchemasSAMLConnectionObject\n\n\n## Values\n\n| Name              | Value             |\n| ----------------- | ----------------- |\n| `SAML_CONNECTION` | saml_connection   |\n```\n\n----------------------------------------\n\nTITLE: Email Address Type Constant Definition\nDESCRIPTION: Defines the string constant 'EMAIL_ADDRESS' with value 'email_address' used to identify email address objects in the system.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/EmailAddressObject.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name            | Value           |\n| --------------- | --------------- |\n| `EMAIL_ADDRESS` | email_address   |\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateObject Enum Constants in Java\nDESCRIPTION: This enum defines a constant value 'TEMPLATE' with the string value 'template' for use in the Clerk Java SDK. Objects of the same type share this value for type identification purposes.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/components/TemplateObject.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Name       | Value      |\n| ---------- | ---------- |\n| `TEMPLATE` | template   |\n```\n\n----------------------------------------\n\nTITLE: Defining Actor Token Revocation Request\nDESCRIPTION: Represents a request to revoke an actor token by its unique identifier. This request is essential for managing authentication tokens and invalidating specific actor sessions.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/RevokeActorTokenRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class RevokeActorTokenRequest {\n    private String actorTokenId;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OAuth Application Secret Rotation Request\nDESCRIPTION: Represents a request to rotate the client secret for a specific OAuth application by providing its unique identifier\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/RotateOAuthApplicationSecretRequest.md#2025-04-19_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class RotateOAuthApplicationSecretRequest {\n    String oauthApplicationId;\n}\n```\n\n----------------------------------------\n\nTITLE: CreateOrganizationInvitationResponse Fields Table\nDESCRIPTION: Markdown table documenting the fields of the CreateOrganizationInvitationResponse class. Includes field names, types, requirements, and descriptions for HTTP response content type, status code, raw response, and organization invitation data.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CreateOrganizationInvitationResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field                                                                                                                          | Type                                                                                                                           | Required                                                                                                                       | Description                                                                                                                    |\n| ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------ |\n| `contentType`                                                                                                                  | *String*                                                                                                                       | :heavy_check_mark:                                                                                                             | HTTP response content type for this operation                                                                                  |\n| `statusCode`                                                                                                                   | *int*                                                                                                                          | :heavy_check_mark:                                                                                                             | HTTP response status code for this operation                                                                                   |\n| `rawResponse`                                                                                                                  | [HttpResponse\\<InputStream>](https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/HttpResponse.html) | :heavy_check_mark:                                                                                                             | Raw HTTP response; suitable for custom response parsing                                                                        |\n| `organizationInvitation`                                                                                                       | [Optional\\<OrganizationInvitation>](../../models/components/OrganizationInvitation.md)                                         | :heavy_minus_sign:                                                                                                             | An organization invitation                                                                                                     |\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Template with Clerk SDK in Java\nDESCRIPTION: This code snippet shows how to retrieve details of a specific email or SMS template using the Clerk SDK in Java. It utilizes bearer authentication and requires specifying the template type and slug for the template. This function is deprecated and should not be used for future developments.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/sdks/emailsmstemplates/README.md#2025-04-19_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npackage hello.world;\n\nimport com.clerk.backend_api.Clerk;\nimport com.clerk.backend_api.models.errors.ClerkErrors;\nimport com.clerk.backend_api.models.operations.GetTemplateResponse;\nimport com.clerk.backend_api.models.operations.PathParamTemplateType;\nimport java.lang.Exception;\n\npublic class Application {\n\n    public static void main(String[] args) throws ClerkErrors, Exception {\n\n        Clerk sdk = Clerk.builder()\n                .bearerAuth(\"<YOUR_BEARER_TOKEN_HERE>\")\n            .build();\n\n        GetTemplateResponse res = sdk.emailSMSTemplates().get()\n                .templateType(PathParamTemplateType.SMS)\n                .slug(\"<value>\")\n                .call();\n\n        if (res.template().isPresent()) {\n            // handle response\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: non-english-content\nDESCRIPTION: non-english-content\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/ListOrganizationInvitationsResponse.md#2025-04-19_snippet_0\n\nLANGUAGE: non-english-content\nCODE:\n```\nnon-english-content\n```\n\n----------------------------------------\n\nTITLE: Defining CodeType Constants in Markdown Table\nDESCRIPTION: Markdown table defining the CodeType enumeration values used for authentication. TOTP represents time-based one-time passwords, while BACKUP_CODE represents backup verification codes.\nSOURCE: https://github.com/clerk/clerk-sdk-java/blob/main/docs/models/operations/CodeType.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name          | Value         |\n| ------------- | ------------- |\n| `TOTP`        | totp          |\n| `BACKUP_CODE` | backup_code   |\n```"
  }
]
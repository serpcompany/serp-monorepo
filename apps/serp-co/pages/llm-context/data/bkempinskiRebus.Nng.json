[
  {
    "owner": "bkempinski",
    "repo": "rebus.nng",
    "content": "TITLE: Configuring NNG Publisher Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Publisher transport configuration. This enables publishing messages to multiple subscribers using the Publisher/Subscriber pattern at the specified endpoint address.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngPublisher(\"inproc://pubsub_test\")));\n```\n\n----------------------------------------\n\nTITLE: Configuring NNG Producer Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Producer transport configuration. The producer sends messages to the specified endpoint address using the Producer/Consumer pattern.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngProducer(\"inproc://prodcons_test\")));\n```\n\n----------------------------------------\n\nTITLE: Configuring NNG Subscriber Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Subscriber transport configuration. This enables receiving published messages using the Publisher/Subscriber pattern from the specified endpoint address.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngSubscriber(\"inproc://pubsub_test\")));\n```\n\n----------------------------------------\n\nTITLE: Configuring NNG Request Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Request transport configuration. This enables the request part of the Request/Reply pattern, sending requests to the specified endpoint address.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngRequest(\"inproc://repreq_test\")));\n```\n\n----------------------------------------\n\nTITLE: Configuring NNG Reply Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Reply transport configuration. This enables the reply part of the Request/Reply pattern, listening for and responding to requests at the specified endpoint address.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngReply(\"inproc://repreq_test\")));\n```\n\n----------------------------------------\n\nTITLE: Configuring NNG Consumer Transport for Rebus\nDESCRIPTION: Sets up a Rebus instance with NNG Consumer transport configuration. The consumer receives messages from the specified endpoint address using the Producer/Consumer pattern.\nSOURCE: https://github.com/bkempinski/rebus.nng/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n        services\n            .AddRebus((configure, services) => configure\n                .Transport(t => t.UseNngConsumer(\"inproc://prodcons_test\")));\n```"
  }
]
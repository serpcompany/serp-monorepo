[
  {
    "owner": "material-components",
    "repo": "material-web",
    "content": "TITLE: Implementing Color Scheme with CSS Custom Properties in Material Web\nDESCRIPTION: This snippet demonstrates how to define a color scheme using CSS custom properties for Material Web components. It shows the root-level declaration of color tokens and an example of how to use these tokens in custom components.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/color.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  /* Generated from Material Theme Builder Figma plugin\n     or `material-color-utilities`. */\n  --md-sys-color-primary: #006A6A;\n  --md-sys-color-on-primary: #FFFFFF;\n  --md-sys-color-primary-container: #6FF7F6;\n  --md-sys-color-on-primary-container: #002020;\n  /* ... */\n}\n\n/* Usage in custom components */\n.primary {\n  background: var(--md-sys-color-primary);\n  color: var(--md-sys-color-on-primary);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Shape Tokens for Material Web Components in CSS\nDESCRIPTION: This snippet demonstrates how to set custom shape tokens for small, medium, and large corners using CSS custom properties. These tokens control the corner roundness of Material Web components.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/shape.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-shape-corner-small: 4px;\n  --md-sys-shape-corner-medium: 6px;\n  --md-sys-shape-corner-large: 8px;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Text Field Implementation - HTML\nDESCRIPTION: Shows basic usage of filled and outlined text field variants with labels and values.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field label=\"Label\" value=\"Value\">\n</md-filled-text-field>\n\n<md-outlined-text-field label=\"Label\" value=\"Value\">\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Material Web Components via CDN in HTML\nDESCRIPTION: This snippet demonstrates how to use Material Web Components through a CDN (esm.run) for fast prototyping. It includes setting up an import map, importing components, and using them in the HTML body.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\" rel=\"stylesheet\">\n  <script type=\"importmap\">\n    {\n      \"imports\": {\n        \"@material/web/\": \"https://esm.run/@material/web/\"\n      }\n    }\n  </script>\n  <script type=\"module\">\n    import '@material/web/all.js';\n    import {styles as typescaleStyles} from '@material/web/typography/md-typescale-styles.js';\n\n    document.adoptedStyleSheets.push(typescaleStyles.styleSheet);\n  </script>\n</head>\n<body>\n  <h1 class=\"md-typescale-display-medium\">Hello Material!</h1>\n  <form>\n    <p class=\"md-typescale-body-medium\">Check out these controls in a form!</p>\n    <md-checkbox></md-checkbox>\n    <div>\n      <md-radio name=\"group\"></md-radio>\n      <md-radio name=\"group\"></md-radio>\n      <md-radio name=\"group\"></md-radio>\n    </div>\n    <md-outlined-text-field label=\"Favorite color\" value=\"Purple\"></md-outlined-text-field>\n    <md-outlined-button type=\"reset\">Reset</md-outlined-button>\n  </form>\n  <style>\n    form {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 16px;\n    }\n  </style>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Typescale Styles in TypeScript\nDESCRIPTION: This TypeScript code shows how to import typescale styles from Material Web Components and apply them to a LitElement component or document.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/typography.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {styles as typescaleStyles} from '@material/web/typography/md-typescale-styles.js';\n\n// `typescaleStyles.styleSheet` is a `CSSStyleSheet` that can be added to a\n// document or shadow root's `adoptedStyleSheets` to use the `.md-typescale-*`\n// classes.\ndocument.adoptedStyleSheets.push(typescaleStyles.styleSheet);\n\n// `typescaleStyles` can also be added to a `LitElement` component's styles.\nclass App extends LitElement {\n  static styles = [typescaleStyles, css`...`];\n\n  render() {\n    return html`\n      <h1 class=\"md-typescale-display-large\">Large display</h1>\n      <p class=\"md-typescale-body-medium\">Body text</p>\n    `;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Material Web Components with CDN\nDESCRIPTION: A complete example showing how to set up Material Web components using CDN imports. Demonstrates usage of typography, form controls, and basic styling. Includes importmap configuration, component initialization, and basic layout styling.\nSOURCE: https://github.com/material-components/material-web/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap\" rel=\"stylesheet\">\n  <script type=\"importmap\">\n    {\n      \"imports\": {\n        \"@material/web/\": \"https://esm.run/@material/web/\"\n      }\n    }\n  </script>\n  <script type=\"module\">\n    import '@material/web/all.js';\n    import {styles as typescaleStyles} from '@material/web/typography/md-typescale-styles.js';\n\n    document.adoptedStyleSheets.push(typescaleStyles.styleSheet);\n  </script>\n</head>\n<body>\n  <h1 class=\"md-typescale-display-medium\">Hello Material!</h1>\n  <form>\n    <p class=\"md-typescale-body-medium\">Check out these controls in a form!</p>\n    <md-checkbox></md-checkbox>\n    <div>\n      <md-radio name=\"group\"></md-radio>\n      <md-radio name=\"group\"></md-radio>\n      <md-radio name=\"group\"></md-radio>\n    </div>\n\n    <md-outlined-text-field label=\"Favorite color\" value=\"Purple\"></md-outlined-text-field>\n\n    <md-outlined-button type=\"reset\">Reset</md-outlined-button>\n  </form>\n  <style>\n    form {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n      gap: 16px;\n    }\n  </style>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Configuring Material Design Tokens Using CSS Custom Properties\nDESCRIPTION: Demonstrates how to customize Material Design tokens using CSS custom properties to define system colors and typography preferences.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/intro.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-color-primary: olive;\n  --md-sys-color-secondary: tomato;\n  --md-ref-typeface-brand: 'Open Sans';\n  --md-ref-typeface-plain: system-ui;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Text Field Properties\nDESCRIPTION: A comprehensive set of configurable properties for text field components, including validation, styling, and interaction controls\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\n{\n  error: boolean;\n  errorText: string;\n  label: string;\n  required: boolean;\n  value: string;\n  type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Buttons in HTML\nDESCRIPTION: This snippet demonstrates how to add accessibility features to buttons using the aria-label attribute. It shows an elevated button with a more descriptive label for screen readers.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<md-elevated-button aria-label=\"Add a new contact\">Add</md-elevated-button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Constraint Validation for Material Web Text Fields\nDESCRIPTION: Demonstrates how to use browser constraint validation with Material Web text fields in a form, including required fields and pattern matching.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<form>\n  <md-filled-text-field\n      name=\"name\"\n      label=\"Name\"\n      required>\n  </md-filled-text-field>\n  <md-filled-text-field\n      name=\"email\"\n      label=\"Email\"\n      pattern=\"[\\w\\d-]+\"\n      suffix-text=\"@gmail.com\">\n  </md-filled-text-field>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Menu with ID Reference in HTML and JavaScript\nDESCRIPTION: This snippet demonstrates how to create a basic menu using the md-menu component with an anchor button. It shows setting up the menu structure and using JavaScript to toggle the menu's open state.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<span style=\"position: relative\">\n  <md-filled-button id=\"usage-anchor\">Set with idref</md-filled-button>\n  <md-menu id=\"usage-menu\" anchor=\"usage-anchor\">\n    <md-menu-item>\n      <div slot=\"headline\">Apple</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Banana</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Cucumber</div>\n    </md-menu-item>\n  </md-menu>\n</span>\n\n<script type=\"module\">\n  // This example uses anchor as an ID reference\n  const anchorEl = document.body.querySelector('#usage-anchor');\n  const menuEl = document.body.querySelector('#usage-menu');\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Comparing Browser and Material Web Components Implementation\nDESCRIPTION: Shows a side-by-side comparison of traditional HTML form elements versus their Material Web Component equivalents, demonstrating how MWC components can be used as drop-in replacements for standard HTML elements.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/intro.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- Browser elements -->\n<form>\n  <label>\n    Email\n    <input type=\"email\" name=\"email\" required>\n  </label>\n  <label>\n    Subscribe\n    <input type=\"checkbox\" name=\"subscribe\">\n  </label>\n\n  <button type=\"reset\">Reset</button>\n  <button>Submit</button>\n</form>\n\n<!-- Material elements -->\n<form>\n  <md-outlined-text-field label=\"Email\" type=\"email\"\n      name=\"email\" required></md-outlined-text-field>\n  <label>\n    Subscribe\n    <md-checkbox name=\"subscribe\"></md-checkbox>\n  </label>\n\n  <md-text-button type=\"reset\">Reset</md-text-button>\n  <md-outlined-button>Submit</md-outlined-button>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Implementing Manual Validation for Material Web Text Fields\nDESCRIPTION: Shows how to manually control the error state and error message of a Material Web text field when driven by application state logic.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field\n    label=\"Username\"\n    value=\"jdoe\"\n    error\n    error-text=\"Username is not available\">\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Customizing Component-Level Tokens\nDESCRIPTION: Shows how to customize both direct values and system token references for component-specific styling.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-filled-button-container-shape: 0px;\n}\n\nmd-filled-button.error {\n  --md-filled-button-container-color: var(--md-sys-color-error);\n  --md-filled-button-label-text-color: var(--md-sys-color-on-error);\n}\n```\n\n----------------------------------------\n\nTITLE: Enhancing Accessibility for Material Web Text Fields\nDESCRIPTION: Demonstrates how to improve accessibility of Material Web text fields by adding aria-label attributes for external labels or more descriptive labels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div>Username</div>\n<md-filled-text-field aria-label=\"Username\"></md-filled-text-field>\n\n<md-filled-text-field label=\"First\" aria-label=\"First name\"></md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Adding Accessibility Labels to Icon Buttons in HTML\nDESCRIPTION: This example shows how to improve accessibility by adding aria-label attributes to icon buttons for more descriptive labels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button aria-label=\"Search for Contact\">\n  <md-icon>search</md-icon>\n</md-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Autocomplete Menu in HTML\nDESCRIPTION: This snippet demonstrates how to create an accessible autocomplete menu using Material Web Components. It includes a text field with appropriate ARIA attributes and a menu with option items.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field\n    id=\"textfield\"\n    type=\"combobox\"\n    aria-controls=\"menu\"\n    aria-autocomplete=\"list\"\n    aria-expanded=\"true\"\n    aria-activedescendant=\"1\"\n    value=\"Ala\">\n</md-filled-text-field>\n<md-menu\n    id=\"menu\"\n    anchor=\"textfield\"\n    role=\"listbox\"\n    aria-label=\"states\"\n    open>\n  <md-menu-item type=\"option\" id=\"0\">\n    <div slot=\"headline\">Alabama</div>\n  </md-menu-item>\n  <md-divider role=\"separator\" tabindex=\"-1\"></md-divider>\n  <md-menu-item type=\"option\" id=\"1\" selected aria-selected=\"true\">\n    <div slot=\"headline\">Alabama</div>\n  </md-menu-item>\n</md-menu>\n```\n\n----------------------------------------\n\nTITLE: Theming Filled Select Component with CSS\nDESCRIPTION: Demonstrates how to apply custom theming to a filled select component using CSS variables.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-filled-select-text-field-container-shape: 0px;\n  --md-filled-select-text-field-container-color: #f7faf9;\n  --md-filled-select-text-field-input-text-color: #005353;\n  --md-filled-select-text-field-input-text-font: system-ui;\n}\n\nmd-filled-select::part(menu) {\n  --md-menu-container-color: #f4fbfa;\n  --md-menu-container-shape: 0px;\n}\n</style>\n\n<md-filled-select>\n  <md-select-option selected value=\"apple\">\n    <div slot=\"headline\">Apple</div>\n  </md-select-option>\n  <md-select-option value=\"tomato\">\n    <div slot=\"headline\">Tomato</div>\n  </md-select-option>\n</md-filled-select>\n```\n\n----------------------------------------\n\nTITLE: Creating Accessible Toggle Icon Buttons in HTML\nDESCRIPTION: This snippet demonstrates how to add separate aria labels for selected and unselected states of a toggle icon button.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button toggle\n  aria-label=\"Unselected\"\n  aria-label-selected=\"Selected\">\n  <md-icon>close</md-icon>\n  <md-icon slot=\"selected\">check</md-icon>\n</md-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Accessible Icon Implementation\nDESCRIPTION: Demonstrates how to implement accessible icons using aria-label for both codepoint and SVG implementations.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<md-icon tabindex=\"-1\"><span aria-label=\"home\">&#xe88a</span></md-icon>\n```\n\nLANGUAGE: html\nCODE:\n```\n<md-icon tabindex=\"-1\"><svg aria-label=\"paper airplane\" viewBox=\"0 0 48 48\"><path d=\"M6 40V8l38 16Zm3-4.65L36.2 24 9 12.5v8.4L21.1 24 9 27Zm0 0V12.5 27Z\"/></svg></md-icon>\n```\n\n----------------------------------------\n\nTITLE: Customizing Outlined Button with CSS\nDESCRIPTION: This snippet demonstrates how to customize an outlined button using CSS custom properties. It adjusts the button's shape, font, and colors to create a unique themed appearance.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  --md-outlined-button-container-shape: 0px;\n  --md-outlined-button-label-text-font: system-ui;\n  --md-sys-color-primary: #006A6A;\n  --md-sys-color-outline: #6F7979;\n}\n</style>\n\n<md-outlined-button>Outlined</md-outlined-button>\n```\n\n----------------------------------------\n\nTITLE: Character Counter Text Field - HTML\nDESCRIPTION: Shows implementation of a text field with character counter using maxlength attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field label=\"Title\" value=\"Short\" maxlength=\"10\">\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Accessible Switch Implementation\nDESCRIPTION: Demonstrates proper accessibility implementation using aria-label attributes for switches with and without visible labels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/switch.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<md-switch aria-label=\"Lights\"></md-switch>\n\n<label>\n  All\n  <md-switch aria-label=\"All notifications\"></md-switch>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Implementing Outlined and Filled Buttons in HTML\nDESCRIPTION: This snippet demonstrates how to create outlined and filled buttons using Material Design components. It shows the basic usage of md-outlined-button and md-filled-button elements.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-outlined-button>Back</md-outlined-button>\n<md-filled-button>Complete</md-filled-button>\n```\n\n----------------------------------------\n\nTITLE: Textarea Implementation - HTML/CSS\nDESCRIPTION: Shows how to implement a multi-line text field with vertical resize capability.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nmd-filled-text-field {\n  resize: vertical;\n}\n```\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field\n    type=\"textarea\"\n    label=\"Vertical resize\"\n    rows=\"3\">\n</md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Text Fields with Supporting Text - HTML\nDESCRIPTION: Demonstrates text fields with supporting text and required field indicators.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field\n    label=\"Comments\"\n    supporting-text=\"Provide comments for the issue\">\n</md-filled-text-field>\n\n<md-filled-text-field\n    label=\"Name\"\n    required\n    supporting-text=\"*required\"\n    error-text=\"Please fill out this field\">\n</md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Theming a Filled Material Web Text Field\nDESCRIPTION: Illustrates how to customize the appearance of a filled Material Web text field using CSS custom properties for shape, typography, and colors.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-filled-text-field-container-shape: 0px;\n  --md-sys-typescale-body-large: 400 1rem system-ui;\n  --md-sys-color-primary: #006a6a;\n  --md-sys-color-surface-container-highest: #e0e3e2;\n  --md-filled-text-field-label-text-color: #3f4948;\n  --md-filled-text-field-input-text-color: #161d1d;\n}\n</style>\n\n<md-filled-text-field label=\"Filled\" value=\"Value\">\n</md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Using Material Web Components in HTML\nDESCRIPTION: This HTML snippet demonstrates how to use Material Web Components in markup after importing them.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\" src=\"./index.js\"></script>\n\n<label>\n  Material 3\n  <md-checkbox checked></md-checkbox>\n</label>\n\n<md-outlined-button>Back</md-outlined-button>\n<md-filled-button>Next</md-filled-button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Button in HTML\nDESCRIPTION: This snippet shows how to create a text button using Material Design Web Components. Text buttons are used for the lowest priority actions, especially when presenting multiple options.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<md-text-button>Text</md-text-button>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Typefaces with CSS Variables\nDESCRIPTION: This CSS snippet demonstrates how to import a custom font and set typeface variables for brand and plain text using CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/typography.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n@import url('https://fonts.googleapis.com/css2?family=Open%20Sans:wght@400;500;700&display=swap');\n\n:root {\n  --md-ref-typeface-brand: 'Open Sans';\n  --md-ref-typeface-plain: system-ui;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Outlined Button in HTML\nDESCRIPTION: This snippet demonstrates how to create an outlined button using the Material Design Web Components. Outlined buttons are medium-emphasis buttons for important, but not primary actions.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<md-outlined-button>Outlined</md-outlined-button>\n```\n\n----------------------------------------\n\nTITLE: Theming an Outlined Material Web Text Field\nDESCRIPTION: Shows how to customize the appearance of an outlined Material Web text field using CSS custom properties for shape, typography, and colors.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-outlined-text-field-container-shape: 0px;\n  --md-sys-typescale-body-large: 400 1rem system-ui;\n  --md-sys-color-primary: #006a6a;\n  --md-outlined-text-field-label-text-color: #3f4948;\n  --md-outlined-text-field-input-text-color: #161d1d;\n}\n</style>\n\n<md-outlined-text-field label=\"Outlined\" value=\"Value\"></md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Basic Dialog Usage in HTML\nDESCRIPTION: Demonstrates the basic structure of a dialog component with headline, content, and action buttons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-dialog>\n  <div slot=\"headline\">\n    Dialog title\n  </div>\n  <form slot=\"content\" id=\"form-id\" method=\"dialog\">\n    A simple dialog with free-form content.\n  </form>\n  <div slot=\"actions\">\n    <md-text-button form=\"form-id\">Ok</md-text-button>\n  </div>\n</md-dialog>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Filled Tonal Button in HTML\nDESCRIPTION: This snippet shows how to create a filled tonal button using the md-filled-tonal-button element. Filled tonal buttons are used as a middle ground between filled and outlined buttons for lower-priority actions.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<md-filled-tonal-button>Tonal</md-filled-tonal-button>\n```\n\n----------------------------------------\n\nTITLE: Customizing FAB Appearance with CSS in HTML\nDESCRIPTION: This snippet demonstrates how to customize the appearance of a regular FAB using CSS variables. It modifies colors, shapes, and sizes of the FAB component.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    --md-sys-color-surface-container-high: #e3e9e9;\n    --md-sys-color-primary: #006a6a;\n    --md-fab-container-shape: 0px;\n    --md-fab-icon-size: 36px;\n    background-color: #f4fbfa;\n  }\n</style>\n<md-fab aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Implementing Submenus in Material Web Menu Component\nDESCRIPTION: This snippet demonstrates how to create nested submenus within the md-menu component. It shows the usage of md-sub-menu elements and how to properly nest menus for multilevel navigation.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<span style=\"position: relative\">\n  <md-filled-button id=\"usage-submenu-anchor\">\n    Menu with Submenus\n  </md-filled-button>\n  <!-- Note the has-overflow attribute -->\n  <md-menu has-overflow id=\"usage-submenu\" anchor=\"usage-submenu-anchor\">\n    <md-sub-menu>\n      <md-menu-item slot=\"item\">\n      <div slot=\"headline\">Fruits with A</div>\n        <!-- Arrow icons are helpful affordances -->\n        <md-icon slot=\"end\">arrow_right</md-icon>\n      </md-menu-item>\n      <!-- Submenu must be slotted into sub-menu's menu slot -->\n      <md-menu slot=\"menu\">\n        <md-menu-item>\n          <div slot=\"headline\">Apricot</div>\n        </md-menu-item>\n        <md-menu-item>\n          <div slot=\"headline\">Avocado</div>\n        </md-menu-item>\n\n        <!-- Nest as many as you want and control menu anchoring -->\n        <md-sub-menu\n            menu-corner=\"start-end\"\n            anchor-corner=\"start-start\">\n          <md-menu-item slot=\"item\">\n            <div slot=\"headline\">Apples</div>\n            <!-- Arrow icons are helpful affordances -->\n            <md-icon slot=\"start\">\n              arrow_left\n            </md-icon>\n          </md-menu-item>\n          <md-menu slot=\"menu\">\n            <md-menu-item>\n              <div slot=\"headline\">Fuji</div>\n            </md-menu-item>\n            <md-menu-item>\n              <div slot=\"headline\" style=\"white-space: nowrap;\">Granny Smith</div>\n            </md-menu-item>\n            <md-menu-item>\n              <div slot=\"headline\" style=\"white-space: nowrap;\">Red Delicious</div>\n            </md-menu-item>\n          </md-menu>\n\n        </md-sub-menu>\n      </md-menu>\n    </md-sub-menu>\n\n    <md-menu-item>\n      <div slot=\"headline\">Banana</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Cucumber</div>\n    </md-menu-item>\n  </md-menu>\n</span>\n\n<script type=\"module\">\n  const anchorEl = document.body.querySelector('#usage-submenu-anchor');\n  const menuEl = document.body.querySelector('#usage-submenu');\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Required Select Component in HTML\nDESCRIPTION: Shows how to create a required select component using the 'required' attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-select required>\n  <md-select-option value=\"one\">\n    <div slot=\"headline\">One</div>\n  </md-select-option>\n  <md-select-option value=\"two\">\n    <div slot=\"headline\">Two</div>\n  </md-select-option>\n</md-filled-select>\n```\n\n----------------------------------------\n\nTITLE: Themed Dialog in HTML and CSS\nDESCRIPTION: Shows how to apply custom theming to a dialog using CSS variables for colors, typography, and shape.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  /* System tokens */\n  --md-sys-color-surface-container-highest: #dde4e3;\n  --md-sys-color-on-surface: #161d1d;\n  --md-sys-color-on-surface-variant: #3f4948;\n  --md-sys-typescale-body-medium: system-ui 16px/24px;\n  --md-sys-typescale-headline-small: system-ui 24px/32px;\n\n  /* Component tokens */\n  --md-dialog-container-shape: 0px;\n}\n</style>\n\n<md-dialog>\n  <div slot=\"headline\">Title</div>\n  <div slot=\"content\">Dialog content</div>\n</md-dialog>\n```\n\n----------------------------------------\n\nTITLE: Labeled Checkbox Usage in HTML\nDESCRIPTION: Shows how to associate labels with checkboxes using the <label> element and for attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/checkbox.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<label>\n  <md-checkbox touch-target=\"wrapper\"></md-checkbox>\n  Checkbox one\n</label>\n\n<md-checkbox id=\"checkbox-two\" touch-target=\"wrapper\"></md-checkbox>\n<label for=\"checkbox-two\">Checkbox two</label>\n```\n\n----------------------------------------\n\nTITLE: Configuring Material Theme with Sass\nDESCRIPTION: Demonstrates how to set up both light and dark themes along with typography using Sass mixins for Material Design system properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/support.md#2025-04-21_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\n@use '@material/web/color/color';\n@use '@material/web/color/typography';\n\n:root {\n  @include color.light-theme;\n  @include typography.theme;\n\n  @media (prefers-color-scheme: dark) {\n    @include color.dark-theme;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Accessible Dialog without Headline in HTML\nDESCRIPTION: Shows how to make a dialog accessible without a headline by using the aria-label attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-dialog aria-label=\"Error message\">\n  <div slot=\"content\">An error occurred, details ...</div>\n</md-dialog>\n```\n\n----------------------------------------\n\nTITLE: Themed List and List Items in HTML and CSS\nDESCRIPTION: Demonstrates how to apply custom theming to a list and its items using CSS variables.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n  :root {\n    --md-list-container-color: #f4fbfa;\n    --md-list-item-label-text-color: #161d1d;\n    --md-list-item-supporting-text-color: #3f4948;\n    --md-list-item-trailing-supporting-text-color: #3f4948;\n    --md-list-item-label-text-font: system-ui;\n    --md-list-item-supporting-text-font: system-ui;\n    --md-list-item-trailing-supporting-text-font: system-ui;\n  }\n  [slot=\"trailing-supporting-text\"] {\n    width: 30px;\n    text-align: end;\n  }\n</style>\n<md-list>\n  <md-list-item type=\"button\">\n    <div slot=\"headline\">Apple</div>\n    <div slot=\"supporting-text\">In stock</div>\n    <div slot=\"trailing-supporting-text\">+100</div>\n  </md-list-item>\n  <md-list-item type=\"button\">\n    <div slot=\"headline\">Banana</div>\n    <div slot=\"supporting-text\">In stock</div>\n    <div slot=\"trailing-supporting-text\">56</div>\n  </md-list-item>\n  <md-list-item type=\"button\">\n    <div slot=\"headline\">Cucumber</div>\n    <div slot=\"supporting-text\">Low stock</div>\n    <div slot=\"trailing-supporting-text\">5</div>\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Dialog with Return Values in HTML and TypeScript\nDESCRIPTION: Demonstrates setting up a dialog with buttons that provide return values, and how to handle those values in TypeScript.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<md-dialog open>\n  <form slot=\"content\" id=\"form-id\" method=\"dialog\">...</form>\n  <div slot=\"actions\">\n    <md-text-button form=\"form-id\" value=\"cancel\">Cancel</md-text-button>\n    <md-text-button form=\"form-id\" value=\"ok\">Ok</md-text-button>\n  </div>\n</md-dialog>\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\ndialog.addEventListener('close', () => {\n  const cancelClicked = dialog.returnValue === 'cancel';\n  const okClicked = dialog.returnValue === 'ok';\n});\n```\n\n----------------------------------------\n\nTITLE: Accessible Radio Button Group in HTML\nDESCRIPTION: Demonstrates how to create an accessible radio button group using ARIA attributes and roles.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/radio.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"radiogroup\" aria-labelledby=\"group-title\">\n  <h3 id=\"group-title\">Starting position</h3>\n  <div>\n    <md-radio id=\"first-radio\" name=\"group\" value=\"1\"\n        aria-label=\"First\"></md-radio>\n    <label for=\"first-radio\">1st</label>\n  </div>\n  <div>\n    <md-radio id=\"second-radio\" name=\"group\" value=\"2\"\n        aria-label=\"Second\"></md-radio>\n    <label for=\"second-radio\">2nd</label>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Typeface Reference Tokens\nDESCRIPTION: Demonstrates how to configure custom font families for brand and plain typefaces using reference tokens.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-ref-typeface-brand: 'Open Sans';\n  --md-ref-typeface-plain: 'Open Sans';\n}\n```\n\n----------------------------------------\n\nTITLE: Theming Circular Progress Indicators with CSS\nDESCRIPTION: Demonstrates how to customize the appearance of a circular progress indicator using CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  --md-circular-progress-size: 32px;\n  --md-circular-progress-active-indicator-width: 20;\n  --md-sys-color-primary: #006A6A;\n}\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<md-circular-progress value=\"0.5\"></md-circular-progress>\n```\n\n----------------------------------------\n\nTITLE: Basic Checkbox Usage in HTML\nDESCRIPTION: Demonstrates how to use the md-checkbox element for unselected, selected, and indeterminate states.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/checkbox.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-checkbox touch-target=\"wrapper\"></md-checkbox>\n<md-checkbox touch-target=\"wrapper\" checked></md-checkbox>\n<md-checkbox touch-target=\"wrapper\" indeterminate></md-checkbox>\n```\n\n----------------------------------------\n\nTITLE: Theming Outlined Select Component with CSS\nDESCRIPTION: Shows how to customize the appearance of an outlined select component using CSS variables.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-outlined-select-text-field-outline-color: #6e7979;\n  --md-outlined-select-text-field-container-shape: 0px;\n  --md-outlined-select-text-field-input-text-color: #005353;\n  --md-outlined-select-text-field-input-text-font: system-ui;\n}\n\nmd-outlined-select::part(menu) {\n  --md-menu-container-color: #f4fbfa;\n  --md-menu-container-shape: 0px;\n}\n</style>\n\n<md-outlined-select>\n  <md-select-option selected value=\"apple\">\n    <div slot=\"headline\">Apple</div>\n  </md-select-option>\n  <md-select-option value=\"tomato\">\n    <div slot=\"headline\">Tomato</div>\n  </md-select-option>\n</md-outlined-select>\n```\n\n----------------------------------------\n\nTITLE: Basic Slider Usage in HTML\nDESCRIPTION: Demonstrates how to use the md-slider component in its basic form, with ticks, and as a range slider.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider></md-slider>\n<md-slider ticks value=\"50\"></md-slider>\n<md-slider range value-start=\"25\" value-end=\"75\"></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Themed Switch Implementation\nDESCRIPTION: Shows how to customize switch appearance using Material Design tokens for colors and shapes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/switch.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    /* System tokens */\n    --md-sys-color-primary: #006a6a;\n    --md-sys-color-on-primary: #ffffff;\n    --md-sys-color-outline: #6f7979;\n    --md-sys-color-surface-container-highest: #dde4e3;\n\n    /* Component tokens */\n    --md-switch-handle-shape: 0px;\n    --md-switch-track-shape: 0px;\n  }\n</style>\n\n<md-switch></md-switch>\n<md-switch selected></md-switch>\n```\n\n----------------------------------------\n\nTITLE: Adding Icons to Buttons in HTML\nDESCRIPTION: This example shows how to add icons to buttons using the icon slot. It includes a filled tonal button with a send icon and a text button with a trailing open icon.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-filled-tonal-button>\n  Send\n  <svg slot=\"icon\" viewBox=\"0 0 48 48\"><path d=\"M6 40V8l38 16Zm3-4.65L36.2 24 9 12.5v8.4L21.1 24 9 27Zm0 0V12.5 27Z\"/></svg>\n</md-filled-tonal-button>\n\n<md-text-button trailing-icon>\n  Open\n  <svg slot=\"icon\" viewBox=\"0 0 48 48\"><path d=\"M9 42q-1.2 0-2.1-.9Q6 40.2 6 39V9q0-1.2.9-2.1Q7.8 6 9 6h13.95v3H9v30h30V25.05h3V39q0 1.2-.9 2.1-.9.9-2.1.9Zm10.1-10.95L17 28.9 36.9 9H25.95V6H42v16.05h-3v-10.9Z\"/></svg>\n</md-text-button>\n```\n\n----------------------------------------\n\nTITLE: Creating a Discrete Slider with Ticks in HTML\nDESCRIPTION: Illustrates the implementation of a discrete slider with step increments and tick marks.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider step=\"5\" ticks min=\"0\" max=\"20\"></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Defining MdPrimaryTab Properties in Markdown\nDESCRIPTION: Lists and describes the properties of the MdPrimaryTab component, including their attributes, types, default values, and purposes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Property | Attribute | Type | Default | Description |\n| --- | --- | --- | --- | --- |\n| `inlineIcon` | `inline-icon` | `boolean` | `false` | Whether or not the icon renders inline with label or stacked vertically. |\n| `isTab` | `md-tab` | `boolean` | `true` | The attribute `md-tab` indicates that the element is a tab for the parent element, `<md-tabs>`. Make sure if you're implementing your own `md-tab` component that you have an `md-tab` attribute set. |\n| `active` | `active` | `boolean` | `false` | Whether or not the tab is selected. |\n| `hasIcon` | `has-icon` | `boolean` | `false` | In SSR, set this to true when an icon is present. |\n| `iconOnly` | `icon-only` | `boolean` | `false` | In SSR, set this to true when there is no label and only an icon. |\n| `selected` | `selected` | `boolean` | `undefined` |  |\n```\n\n----------------------------------------\n\nTITLE: Implementing Popover-Positioned Menu in Material Web\nDESCRIPTION: This snippet shows how to create a popover-positioned menu using the md-menu component. It demonstrates the usage of the 'positioning' attribute set to 'popover' for rendering the menu above all other content using the Popover API.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- Note the lack of position: relative parent. -->\n<div style=\"margin: 16px;\">\n  <md-filled-button id=\"usage-popover-anchor\">Open popover menu</md-filled-button>\n</div>\n\n<!-- popover menus do not require a common ancestor with the anchor. -->\n<md-menu positioning=\"popover\" id=\"usage-popover\" anchor=\"usage-popover-anchor\">\n  <md-menu-item>\n    <div slot=\"headline\">Apple</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Banana</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Cucumber</div>\n  </md-menu-item>\n</md-menu>\n\n<script type=\"module\">\n  const anchorEl = document.body.querySelector('#usage-popover-anchor');\n  const menuEl = document.body.querySelector('#usage-popover');\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Filled Material Web Text Field\nDESCRIPTION: Shows the basic implementation of a filled Material Web text field with a label and value.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field label=\"Filled\" value=\"Value\"></md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Material Chip Types in HTML\nDESCRIPTION: Demonstrates basic usage of all chip types (assist, filter, input, suggestion) within a chip set.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-chip-set>\n  <md-assist-chip label=\"Assist\"></md-assist-chip>\n  <md-filter-chip label=\"Filter\"></md-filter-chip>\n  <md-input-chip label=\"Input\"></md-input-chip>\n  <md-suggestion-chip label=\"Suggestion\"></md-suggestion-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Icon Buttons in HTML\nDESCRIPTION: This snippet shows how to create standard, filled, filled tonal, and outlined icon buttons using Material Web components. Each button contains a check icon.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button>\n  <md-icon>check</md-icon>\n</md-icon-button>\n<md-filled-icon-button>\n  <md-icon>check</md-icon>\n</md-filled-icon-button>\n<md-filled-tonal-icon-button>\n  <md-icon>check</md-icon>\n</md-filled-tonal-icon-button>\n<md-outlined-icon-button>\n  <md-icon>check</md-icon>\n</md-outlined-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Defining MdTabs Events in Markdown\nDESCRIPTION: Documents the 'change' event for the MdTabs component, detailing its type, bubbling behavior, composition, and when it's fired.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| Event | Type | [Bubbles](https://developer.mozilla.org/en-US/docs/Web/API/Event/bubbles) | [Composed](https://developer.mozilla.org/en-US/docs/Web/API/Event/composed) | Description |\n| --- | --- | --- | --- | --- |\n| `change` | `Event` | Yes | No | Fired when the selected tab changes. The target's `activeTabIndex` or `activeTab` provide information about the selection change. The change event is fired when a user interaction like a space/enter key or click cause a selection change. The tab selection based on these actions can be cancelled by calling preventDefault on the triggering `keydown` or `click` event. |\n```\n\n----------------------------------------\n\nTITLE: Implementing an Outlined Material Web Text Field\nDESCRIPTION: Demonstrates the basic implementation of an outlined Material Web text field with a label and value.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field label=\"Outlined\" value=\"Value\"></md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dark Theme with Sass\nDESCRIPTION: Shows how to implement dark mode theme switching using Sass and media queries with Material Design system color tokens.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/support.md#2025-04-21_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n@use '@material/web/color/color';\n\n:root {\n  @media (prefers-color-scheme: dark) {\n    @include color.dark-theme;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic List Usage in HTML\nDESCRIPTION: Demonstrates how to create a basic list with different types of list items, including a link item.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-list style=\"max-width: 300px;\">\n  <md-list-item>\n    Fruits\n  </md-list-item>\n  <md-divider></md-divider>\n  <md-list-item>\n    Apple\n</md-list-item>\n  <md-list-item>\n    Banana\n  </md-list-item>\n  <md-list-item>\n    <div slot=\"headline\">Cucumber</div>\n    <div slot=\"supporting-text\">Cucumbers are long green fruits that are just as long as this multi-line description</div>\n  </md-list-item>\n  <md-list-item\n      type=\"link\"\n      href=\"https://google.com/search?q=buy+kiwis&tbm=shop\"\n      target=\"_blank\">\n    <div slot=\"headline\">Shop for Kiwis</div>\n    <div slot=\"supporting-text\">This will link you out in a new tab</div>\n    <md-icon slot=\"end\">open_in_new</md-icon>\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Customizing Filled Button with CSS\nDESCRIPTION: This snippet shows how to customize a filled button using CSS custom properties. It adjusts the button's shape, font, and colors to create a distinct themed appearance.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  --md-filled-button-container-shape: 0px;\n  --md-filled-button-label-text-font: system-ui;\n  --md-sys-color-primary: #006A6A;\n  --md-sys-color-on-primary: #FFFFFF;\n}\n</style>\n\n<md-filled-button>Filled</md-filled-button>\n```\n\n----------------------------------------\n\nTITLE: Customizing Image List Items in HTML and CSS\nDESCRIPTION: This snippet shows how to create and style image list items using Material Web components. It includes custom CSS variables for theming and demonstrates the usage of md-list and md-list-item elements with images.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    background-color: #f4fbfa;\n    --md-list-container-color: #f4fbfa;\n    --md-list-item-label-text-color: #161d1d;\n    --md-list-item-leading-image-height: 50px;\n    --md-list-item-leading-image-width: 100px;\n    --md-list-item-leading-image-shape: 25px;\n  }\n  img {\n    width: 40px;\n  }\n</style>\n<md-list>\n  <md-list-item headline=\"Wide Cat\">\n    <img slot=\"start\" src=\"https://placekitten.com/200/100\">\n  </md-list-item>\n  <md-list-item headline=\"Round kitty cat\">\n    <img slot=\"start\" src=\"https://placekitten.com/202/101\">\n  </md-list-item>\n  <md-list-item headline=\"Softe cate\">\n    <img slot=\"start\" src=\"https://placekitten.com/212/106\">\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Accessible Tabs Implementation\nDESCRIPTION: Shows how to implement accessible tabs with proper ARIA attributes and tab panels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<md-tabs aria-label=\"Content to view\">\n  <md-primary-tab id=\"photos-tab\" aria-controls=\"photos-panel\">\n    Photos\n  </md-primary-tab>\n  <md-primary-tab id=\"videos-tab\" aria-controls=\"videos-panel\">\n    Videos\n  </md-primary-tab>\n  <md-primary-tab id=\"music-tab\" aria-controls=\"music-panel\">\n    Music\n  </md-primary-tab>\n</md-tabs>\n\n<div id=\"photos-panel\" role=\"tabpanel\" aria-labelledby=\"photos-tab\">\n  ...\n</div>\n<div id=\"videos-panel\" role=\"tabpanel\" aria-labelledby=\"videos-tab\" hidden>\n  ...\n</div>\n<div id=\"music-panel\" role=\"tabpanel\" aria-labelledby=\"music-tab\" hidden>\n  ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Switch Usage in HTML\nDESCRIPTION: Demonstrates basic implementation of Material Web switches in both unselected and selected states.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/switch.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-switch></md-switch>\n<md-switch selected></md-switch>\n```\n\n----------------------------------------\n\nTITLE: Material Web Components Size Metrics Table\nDESCRIPTION: Markdown table displaying bundle size metrics for Material Web Components, including gzip size, minified size, CSS percentage, and import paths for each component.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/size.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Component | gzip | minified | *% CSS* | Import |\n| --- | --- | --- | --- | --- |\n| **All** | **71.9kb** | 454.8kb | *64% CSS* | `@material/web/all.js` |\n| **Common** | **53.4kb** | 287.0kb | *52% CSS* | `@material/web/common.js` |\n| **Button** | **8.4kb** | 48.4kb | *65% CSS* |  |\n|  | 7.0kb | 29.0kb | *47% CSS* | `@material/web/button/elevated-button.js` |\n|  | 7.0kb | 28.9kb | *47% CSS* | `@material/web/button/filled-button.js` |\n```\n\n----------------------------------------\n\nTITLE: Themed Tabs Implementation\nDESCRIPTION: Demonstrates how to customize tabs using CSS custom properties for theming.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  /* System tokens */\n  --md-sys-color-surface: #f7faf9;\n  --md-sys-color-primary: #005353;\n\n  /* Component tokens */\n  --md-primary-tab-label-text-font: cursive, system-ui;\n  --md-primary-tab-label-text-size: 0.8em;\n}\n</style>\n\n<md-tabs>\n  <md-primary-tab>Tab 1</md-primary-tab>\n  <md-primary-tab>Tab 2</md-primary-tab>\n  <md-primary-tab>Tab 3</md-primary-tab>\n</md-tabs>\n```\n\n----------------------------------------\n\nTITLE: Customizing Icon List Items in HTML and CSS\nDESCRIPTION: This snippet demonstrates how to create and style icon list items using Material Web components. It includes custom CSS variables for theming and shows the usage of md-list and md-list-item elements with icons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    background-color: #f4fbfa;\n    --md-list-container-color: #f4fbfa;\n    --md-list-item-label-text-color: #161d1d;\n    --md-list-item-leading-icon-color: #006a6a;\n    --md-list-item-trailing-icon-color: #006a6a;\n    --md-list-item-leading-icon-size: 20px;\n    --md-list-item-trailing-icon-size: 20px;\n  }\n  md-list-item.unhealthy {\n    --md-list-item-trailing-icon-color: #ba1a1a;\n  }\n</style>\n<md-list>\n  <md-list-item>\n    <div slot=\"headline\">Eggs</div>\n    <md-icon slot=\"start\">egg</md-icon>\n    <md-icon slot=\"end\">recommend</md-icon>\n  </md-list-item>\n  <md-list-item class=\"unhealthy\">\n    <div slot=\"headline\">Ice Cream</div>\n    <md-icon slot=\"start\">icecream</md-icon>\n    <md-icon slot=\"end\">dangerous</md-icon>\n  </md-list-item>\n  <md-list-item>\n    <div slot=\"headline\">Orange</div>\n    <md-icon slot=\"start\">nutrition</md-icon>\n    <md-icon slot=\"end\">recommend</md-icon>\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Accessible Checkbox Usage in HTML\nDESCRIPTION: Demonstrates how to add aria-label attributes to checkboxes for improved accessibility.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/checkbox.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<md-checkbox aria-label=\"Select all checkboxes\"></md-checkbox>\n\n<label>\n  <md-checkbox aria-label=\"Agree to terms and conditions\"></md-checkbox>\n  Agree\n</label>\n```\n\n----------------------------------------\n\nTITLE: Basic Icon Implementation in HTML\nDESCRIPTION: Demonstrates three different ways to implement icons using md-icon component: using icon names, unicode codepoints, and SVG elements.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-icon>settings</md-icon>\n<md-icon>&#xe834</md-icon>\n<md-icon><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\"><path d=\"M10 40V24H4L24 6l10 8.85V9h4v9.55L44 24h-6v16H26.5V28h-5v12Zm3-3h5.5V25h11v12H35V19.95l-11-10-11 10Zm5.5-12h11-11Zm1.25-5.5h8.5q0-1.65-1.275-2.725Q25.7 15.7 24 15.7q-1.7 0-2.975 1.075Q19.75 17.85 19.75 19.5Z\"/></svg></md-icon>\n```\n\n----------------------------------------\n\nTITLE: Customizing Outlined Icon Button Styles in HTML/CSS\nDESCRIPTION: This snippet illustrates how to customize the appearance of an outlined icon button using CSS custom properties. It modifies the button size, icon size, container shape, outline width, and outline color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-outlined-icon-button-container-width: 80px;\n  --md-outlined-icon-button-container-height: 80px;\n  --md-outlined-icon-button-container-shape: 0px;\n  --md-outlined-icon-button-icon-size: 40px;\n  --md-outlined-icon-button-outline-width: 4px;\n  --md-sys-color-outline: #006A6A;\n}\n</style>\n<md-outlined-icon-button>\n  <md-icon>check</md-icon>\n</md-outlined-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Input Type Text Fields - HTML\nDESCRIPTION: Demonstrates implementation of text fields with different input types like email and password.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-filled-text-field label=\"Username\" type=\"email\">\n</md-filled-text-field>\n\n<md-filled-text-field label=\"Password\" type=\"password\">\n</md-filled-text-field>\n```\n\n----------------------------------------\n\nTITLE: Customizing Elevated Button with CSS\nDESCRIPTION: This example demonstrates how to customize an elevated button using CSS custom properties. It modifies the button's shape, font, and colors to create a unique themed appearance.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  --md-elevated-button-container-shape: 0px;\n  --md-elevated-button-label-text-font: system-ui;\n  --md-sys-color-surface-container-low: #FAFDFC;\n  --md-sys-color-primary: #191C1C;\n}\n</style>\n\n<md-elevated-button>Elevated</md-elevated-button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Suggestion Chips in HTML\nDESCRIPTION: This snippet demonstrates how to create a set of suggestion chips using the md-chip-set and md-suggestion-chip components. It shows three suggestion chips with different labels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<h3>Suggested reply</h3>\n<md-chip-set>\n  <md-suggestion-chip label=\"I agree\"></md-suggestion-chip>\n  <md-suggestion-chip label=\"Looks good to me\"></md-suggestion-chip>\n  <md-suggestion-chip label=\"Thank you\"></md-suggestion-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Implementing Toggle Icon Buttons in HTML\nDESCRIPTION: This snippet shows how to create toggle icon buttons with different styles and states. It includes examples of unselected and selected buttons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div>\n  <md-icon-button toggle>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-icon-button>\n  <md-filled-icon-button toggle>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-filled-icon-button>\n  <md-filled-tonal-icon-button toggle>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-filled-tonal-icon-button>\n  <md-outlined-icon-button toggle>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-outlined-icon-button>\n</div>\n<div>\n  <md-icon-button toggle selected>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-icon-button>\n  <md-filled-icon-button toggle selected>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-filled-icon-button>\n  <md-filled-tonal-icon-button toggle selected>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-filled-tonal-icon-button>\n  <md-outlined-icon-button toggle selected>\n    <md-icon>close</md-icon>\n    <md-icon slot=\"selected\">check</md-icon>\n  </md-outlined-icon-button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Text Fields with Icons - HTML\nDESCRIPTION: Demonstrates text fields with leading and trailing icons, including search, visibility toggle, and error indicators.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field placeholder=\"Search for messages\">\n  <md-icon slot=\"leading-icon\">search</md-icon>\n</md-outlined-text-field>\n\n<md-outlined-text-field label=\"Password\" type=\"password\">\n  <md-icon-button toggle slot=\"trailing-icon\">\n    <md-icon>visibility</md-icon>\n    <md-icon slot=\"selected\">visibility_off</md-icon>\n  </md-icon-button>\n</md-outlined-text-field>\n\n<md-outlined-text-field\n    label=\"Username\"\n    error\n    error-text=\"Username not available\">\n  <md-icon slot=\"trailing-icon\">error</md-icon>\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Menu with Element Reference in HTML and JavaScript\nDESCRIPTION: This snippet shows how to create a menu using the md-menu component with an element reference as the anchor. It demonstrates setting the anchor element using JavaScript and toggling the menu's open state.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<span style=\"position: relative\">\n  <md-filled-button id=\"usage-anchor-2\">Set with element ref</md-filled-button>\n  <md-menu id=\"usage-menu-2\">\n    <md-menu-item>\n      <div slot=\"headline\">Apple</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Banana</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Cucumber</div>\n    </md-menu-item>\n  </md-menu>\n</span>\n\n<script type=\"module\">\n  // This example uses MdMenu.prototype.anchorElement to set the anchor as an\n  // HTMLElement reference.\n  const anchorEl = document.body.querySelector('#usage-anchor-2');\n  const menuEl = document.body.querySelector('#usage-menu-2');\n  menuEl.anchorElement = anchorEl;\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Branded FABs with Custom Icons in HTML\nDESCRIPTION: This snippet demonstrates how to create branded FABs with custom SVG icons. It includes both a regular branded FAB and an extended branded FAB with a label, and shows how to customize their appearance using CSS variables.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    --md-sys-color-surface-container-high: #e3e9e9;\n    --md-sys-color-on-surface: #161d1d;\n    --md-fab-branded-icon-size: 48px;\n    --md-fab-branded-container-shape: 0px;\n    background-color: #f4fbfa;\n  }\n</style>\n<md-branded-fab size=\"small\" aria-label=\"Add\">\n  <svg slot=\"icon\" viewBox=\"0 0 36 36\">\n    <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\n    <path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\n    <path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\n    <path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\n    <path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\n  </svg>\n</md-branded-fab>\n<md-branded-fab size=\"small\" label=\"Add\">\n  <svg slot=\"icon\" viewBox=\"0 0 36 36\">\n    <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\n    <path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\n    <path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\n    <path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\n    <path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\n  </svg>\n</md-branded-fab>\n```\n\n----------------------------------------\n\nTITLE: Basic FAB Implementation with Icon\nDESCRIPTION: Example of implementing a basic FAB with an edit icon and proper accessibility label.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-fab aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Text Field with Prefix/Suffix - HTML\nDESCRIPTION: Shows implementation of a text field with prefix and suffix text for currency input.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field\n    label=\"Dollar amount\"\n    type=\"number\"\n    value=\"0\"\n    prefix-text=\"$\"\n    suffix-text=\".00\">\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Basic Radio Button Usage in HTML\nDESCRIPTION: Demonstrates how to use radio buttons in a form, including pre-selection and value assignment.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/radio.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form>\n  <md-radio name=\"animals\" value=\"cats\"></md-radio>\n  <md-radio name=\"animals\" value=\"dogs\"></md-radio>\n  <md-radio name=\"animals\" value=\"birds\" checked></md-radio>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Tab Selection Event Handling in TypeScript\nDESCRIPTION: Shows how to handle tab selection changes using event listeners.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntabs.addEventListener('change', (event: Event) => {\n  if (event.target.activeTabIndex === 2) {\n    // ... perform logic only if index of selected item is 2.\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Complete Icon Theming Example\nDESCRIPTION: Comprehensive example showing how to implement and style icons with different fonts, sizes, and fill variations.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL@20..48,100..700,0..1\" rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL@20..48,100..700,0..1\"  rel=\"stylesheet\">\n<link href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Sharp:opsz,wght,FILL@20..48,100..700,0..1\" rel=\"stylesheet\">\n\n<style>\nmd-icon {\n  color: #006A6A;\n  --md-icon-size: 48px;\n}\n.rounded {\n  --md-icon-font: 'Material Symbols Rounded';\n}\n.sharp {\n  --md-icon-font: 'Material Symbols Sharp';\n}\nmd-icon[filled] {\n  font-variation-settings: 'FILL' 1;\n}\n</style>\n\n<h3>Outlined</h3>\n<span>\n  <md-icon>settings</md-icon>\n  <md-icon>check_box</md-icon>\n  <md-icon>house</md-icon>\n  <md-icon filled>settings</md-icon>\n  <md-icon filled>check_box</md-icon>\n  <md-icon filled>house</md-icon>\n</span>\n<h3>Rounded</h3>\n<span class=\"rounded\">\n  <md-icon>settings</md-icon>\n  <md-icon>check_box</md-icon>\n  <md-icon>house</md-icon>\n  <md-icon filled>settings</md-icon>\n  <md-icon filled>check_box</md-icon>\n  <md-icon filled>house</md-icon>\n</span>\n<h3>Sharp</h3>\n<span class=\"sharp\">\n  <md-icon>settings</md-icon>\n  <md-icon>check_box</md-icon>\n  <md-icon>house</md-icon>\n  <md-icon filled>settings</md-icon>\n  <md-icon filled>check_box</md-icon>\n  <md-icon filled>house</md-icon>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Adding a Value Label to a Slider in HTML\nDESCRIPTION: Shows how to add a value label to a slider that appears when the handle is selected.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider labeled></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Alert Dialog in HTML\nDESCRIPTION: Demonstrates how to create an alert dialog for important messages requiring user response.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<md-dialog type=\"alert\">\n  <div slot=\"headline\">Confirm deletion</div>\n  <form slot=\"content\" id=\"form-id\" method=\"dialog\">\n    Are you sure you wish to delete this item?\n  </form>\n  <div slot=\"actions\">\n    <md-text-button form=\"form-id\" value=\"cancel\">Cancel</md-text-button>\n    <md-text-button form=\"form-id\" value=\"delete\">Delete</md-text-button>\n  </div>\n</md-dialog>\n```\n\n----------------------------------------\n\nTITLE: Implementing Four-Color Progress Indicators in HTML\nDESCRIPTION: Shows how to create indeterminate progress indicators that cycle through four colors.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-circular-progress four-color indeterminate></md-circular-progress>\n<md-linear-progress four-color indeterminate></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Elevation Shadow in HTML/CSS\nDESCRIPTION: Sets up a basic surface with elevation shadow at level 3. The elevation component fills the parent element which must have position: relative and defines the shape with border-radius.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/elevation.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .surface {\n    position: relative;\n    border-radius: 16px;\n    height: 64px;\n    width: 64px;\n\n    --md-elevation-level: 3;\n  }\n</style>\n<div class=\"surface\">\n  <md-elevation></md-elevation>\n  <!-- Content -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Labeling Radio Buttons in HTML\nDESCRIPTION: Shows how to associate labels with radio buttons using the <label> element and 'for' attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/radio.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-radio id=\"cats-radio\" name=\"animals\" value=\"cats\"></md-radio>\n<label for=\"cats-radio\">Cats</label>\n\n<md-radio id=\"dogs-radio\" name=\"animals\" value=\"dogs\"></md-radio>\n<label for=\"dogs-radio\">Dogs</label>\n```\n\n----------------------------------------\n\nTITLE: Styling Assist Chips with CSS Custom Properties\nDESCRIPTION: This example shows how to customize the appearance of assist chips using CSS custom properties. It modifies the chip shape, font, outline color, and text color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-assist-chip-container-shape: 0px;\n  --md-assist-chip-label-text-font: system-ui;\n  --md-sys-color-outline: #6F7979;\n  --md-sys-color-on-surface: #191C1C;\n}\n</style>\n\n<md-assist-chip label=\"Assist\"></md-assist-chip>\n```\n\n----------------------------------------\n\nTITLE: Customizing Elevation with Material Theming\nDESCRIPTION: Shows how to customize the elevation component using Material theming by changing the elevation level and shadow color via CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/elevation.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .surface {\n    position: relative;\n    border-radius: 16px;\n    height: 64px;\n    width: 64px;\n  }\n\n  :root {\n    --md-elevation-level: 5;\n    --md-sys-color-shadow: #006A6A;\n  }\n</style>\n<div class=\"surface\">\n  <md-elevation></md-elevation>\n  <!-- Content -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Themed Range Slider in HTML\nDESCRIPTION: Shows how to create a range slider with custom theming, ticks, and step increments.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider\n  range\n  value-start=\"25\"\n  value-end=\"75\"\n  ticks\n  step=\"5\"\n></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Defining MdTabs Methods in Markdown\nDESCRIPTION: Documents the 'scrollToTab' method for the MdTabs component, explaining its parameters, return type, and functionality.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Method | Parameters | Returns | Description |\n| --- | --- | --- | --- |\n| `scrollToTab` | `tabToScrollTo` | `Promise<void>` | Scrolls the toolbar, if overflowing, to the active tab, or the provided tab. |\n```\n\n----------------------------------------\n\nTITLE: Implementing an Elevated Button in HTML\nDESCRIPTION: This snippet shows how to create an elevated button using the md-elevated-button element. Elevated buttons are used for important actions that require visual separation from the background.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-elevated-button>Elevated</md-elevated-button>\n```\n\n----------------------------------------\n\nTITLE: Customizing Focus Ring Animation\nDESCRIPTION: Demonstrates how to customize or disable focus ring animation using CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  md-focus-ring {\n    --md-focus-ring-duration: 0s; /* disabled animation */\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Styling a Text Button with CSS Variables in HTML\nDESCRIPTION: This snippet demonstrates how to apply CSS variables to style a text button in Material Web. It sets custom font and primary color using the 'md-text-button' component. The main components used include style definitions and the button itself.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-text-button-label-text-font: system-ui;\n  --md-sys-color-primary: #006A6A;\n}\n</style>\n\n<md-text-button>Text</md-text-button>\n```\n\n----------------------------------------\n\nTITLE: Defining MdSecondaryTab Properties in Markdown\nDESCRIPTION: Lists and describes the properties of the MdSecondaryTab component, including their attributes, types, default values, and purposes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Property | Attribute | Type | Default | Description |\n| --- | --- | --- | --- | --- |\n| `isTab` | `md-tab` | `boolean` | `true` | The attribute `md-tab` indicates that the element is a tab for the parent element, `<md-tabs>`. Make sure if you're implementing your own `md-tab` component that you have an `md-tab` attribute set. |\n| `active` | `active` | `boolean` | `false` | Whether or not the tab is selected. |\n| `hasIcon` | `has-icon` | `boolean` | `false` | In SSR, set this to true when an icon is present. |\n| `iconOnly` | `icon-only` | `boolean` | `false` | In SSR, set this to true when there is no label and only an icon. |\n| `selected` | `selected` | `boolean` | `undefined` |  |\n```\n\n----------------------------------------\n\nTITLE: Creating a Filled Button in HTML\nDESCRIPTION: This example demonstrates how to implement a filled button using the md-filled-button element. Filled buttons are used for important, final actions that complete a flow.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<md-filled-button>Filled</md-filled-button>\n```\n\n----------------------------------------\n\nTITLE: Theming Icon Buttons with CSS\nDESCRIPTION: This snippet demonstrates how to apply custom theming to an icon button by modifying CSS custom properties for icon size and color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  --md-icon-button-icon-size: 32px;\n  --md-sys-color-on-surface-variant: #dc362e;\n  background-color: #fff8f6;\n}\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button>\n  <md-icon>check</md-icon>\n</md-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Customizing Button Colors with CSS Custom Properties\nDESCRIPTION: Demonstrates how to modify button colors using Material Design system color tokens for different states like primary and error.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/support.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n/* Buttons use the `primary` key color */\nmd-filled-button.spooky {\n  --md-sys-color-primary: black;\n  --md-sys-color-on-primary: yellow;\n}\n\nmd-filled-button.error {\n  --md-sys-color-primary: var(--md-sys-color-error);\n  --md-sys-color-on-primary: var(--md-sys-color-on-error);\n}\n```\n\n----------------------------------------\n\nTITLE: Text Field Methods Overview\nDESCRIPTION: Available method interfaces for manipulating text field state, selection, and form interactions\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\n{\n  select(): void;\n  setSelectionRange(start: number, end: number): void;\n  stepUp(): void;\n  stepDown(): void;\n  reset(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Chips\nDESCRIPTION: Demonstrates proper accessibility implementation with ARIA labels and labelledby attributes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<h3 id=\"dates-label\">Dates</h3>\n<md-chip-set aria-labelledby=\"dates-label\">\n  <md-filter-chip label=\"Mon\" aria-label=\"Monday\"></md-filter-chip>\n  <md-filter-chip label=\"Tue\" aria-label=\"Tuesday\"></md-filter-chip>\n  <md-filter-chip label=\"Wed\" aria-label=\"Wednesday\"></md-filter-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Themed Checkbox Styling in CSS\nDESCRIPTION: Shows how to customize the appearance of checkboxes using CSS custom properties for theming.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/checkbox.md#2025-04-21_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  /* System tokens */\n  --md-sys-color-primary: #006a6a;\n  --md-sys-color-on-primary: #ffffff;\n  --md-sys-color-on-surface-variant: #3f4948;\n\n  /* Component tokens */\n  --md-checkbox-container-shape: 0px;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MdSelectOption Custom Element in HTML\nDESCRIPTION: Demonstrates the HTML tag for using the MdSelectOption component within a select element. This custom element represents an individual option in the select menu with properties for value, disabled state, and selection.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<md-select-option></md-select-option>\n```\n\n----------------------------------------\n\nTITLE: Setting System Shape Tokens\nDESCRIPTION: Demonstrates configuration of system-level shape tokens for different corner sizes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-shape-corner-small: 4px;\n  --md-sys-shape-corner-medium: 6px;\n  --md-sys-shape-corner-large: 8px;\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Extended FAB Appearance with CSS in HTML\nDESCRIPTION: This example shows how to style an extended FAB using CSS variables. It customizes colors, shapes, and sizes, and includes a label in addition to the icon.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    --md-sys-color-surface-container-high: #e3e9e9;\n    --md-sys-color-on-surface: #161d1d;\n    --md-sys-color-primary: #006a6a;\n    --md-fab-container-shape: 0px;\n    --md-fab-icon-size: 36px;\n    background-color: #f4fbfa;\n  }\n</style>\n<md-fab label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Switch with Icons Implementation\nDESCRIPTION: Shows how to implement switches with icons, including options for showing both icons or only selected icons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/switch.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-switch icons></md-switch>\n<md-switch icons selected></md-switch>\n\n<md-switch icons show-only-selected-icon></md-switch>\n<md-switch icons show-only-selected-icon selected></md-switch>\n```\n\n----------------------------------------\n\nTITLE: Adding Accessibility Labels to Progress Indicators in HTML\nDESCRIPTION: Demonstrates how to improve accessibility by adding aria-label attributes to progress indicators.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<md-circular-progress value=\"0.5\" aria-label=\"Page refresh progress\"></md-circular-progress>\n\n<md-linear-progress value=\"0.5\" aria-label=\"Download progress\"></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Customizing Typography Scale Tokens\nDESCRIPTION: Example of modifying typography scale properties for body text using system tokens.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-typescale-body-medium-size: 1rem;\n  --md-sys-typescale-body-medium-line-height: 1.5rem;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Chips with Icons\nDESCRIPTION: Demonstrates how to add icons to chips, including both material icons and avatar images.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<md-chip-set>\n  <md-assist-chip label=\"Add to calendar\">\n    <md-icon slot=\"icon\">event</md-icon>\n  </md-assist-chip>\n\n  <md-input-chip label=\"Ping Qiang\" avatar>\n    <img slot=\"icon\" src=\"...\">\n  </md-input-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Implementing Document-Positioned Menu in HTML and JavaScript\nDESCRIPTION: This snippet shows how to create a document-positioned menu using Material Web Components. It includes a button to trigger the menu and a script to toggle the menu's open state.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"margin: 16px;\">\n  <md-filled-button id=\"usage-document-anchor\">Open document menu</md-filled-button>\n</div>\n\n<md-menu positioning=\"document\" id=\"usage-document\" anchor=\"usage-document-anchor\">\n  <md-menu-item>\n    <div slot=\"headline\">Apple</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Banana</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Cucumber</div>\n  </md-menu-item>\n</md-menu>\n\n<script type=\"module\">\n  const anchorEl = document.body.querySelector('#usage-document-anchor');\n  const menuEl = document.body.querySelector('#usage-document');\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Themed Checkbox Usage in HTML\nDESCRIPTION: Demonstrates the usage of themed checkboxes with custom styles applied.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/checkbox.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-checkbox touch-target=\"wrapper\"></md-checkbox>\n<md-checkbox touch-target=\"wrapper\" checked></md-checkbox>\n```\n\n----------------------------------------\n\nTITLE: Active Tab Selection in HTML\nDESCRIPTION: Demonstrates how to set an active tab using the active attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-tabs>\n  <md-primary-tab>Video</md-primary-tab>\n  <md-primary-tab active>Photos</md-primary-tab>\n  <md-primary-tab>Audio</md-primary-tab>\n</md-tabs>\n```\n\n----------------------------------------\n\nTITLE: Styling and Implementing Linear Progress Indicator in HTML and CSS\nDESCRIPTION: This snippet shows how to customize the appearance of a linear progress indicator using CSS variables and implement it with an HTML element. It sets custom track height, shape, and colors.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-linear-progress-track-height: 8px;\n  --md-linear-progress-track-shape: 8px;\n  --md-linear-progress-active-indicator-height: 8px;\n  --md-sys-color-primary: #006A6A;\n  --md-sys-color-surface-container-highest: #DDE4E3;\n}\n</style>\n\n<md-linear-progress value=\"0.5\"></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Extended FAB with Label\nDESCRIPTION: Implementation of an extended FAB with both icon and label for additional emphasis.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<md-fab label=\"Edit\" aria-label=\"Edit Comment\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Implementing Themed Menu with Custom Styles in HTML, CSS, and JavaScript\nDESCRIPTION: This snippet shows how to create a themed menu using Material Web Components with custom CSS styles. It includes a button to trigger the menu and a script to show the menu on click.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    background-color: #f4fbfa;\n    --md-menu-container-color: #f4fbfa;\n    --md-menu-container-shape: 0px;\n    --md-sys-color-on-surface: #161d1d;\n    --md-sys-typescale-body-large-font: system-ui;\n  }\n  md-menu-item {\n    border-radius: 28px;\n  }\n  md-menu-item::part(focus-ring) {\n    border-radius: 28px;\n  }\n  /* Styles for button and not relevant to menu */\n  md-filled-button {\n    --md-sys-color-primary: #006a6a;\n    --md-sys-color-on-primary: #ffffff;\n  }\n</style>\n\n<span style=\"position: relative\">\n  <md-filled-button id=\"theming-anchor\">Themed menu</md-filled-button>\n  <md-menu id=\"theming-menu\" anchor=\"theming-anchor\">\n    <md-menu-item>\n      <div slot=\"headline\">Apple</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Banana</div>\n    </md-menu-item>\n    <md-menu-item>\n      <div slot=\"headline\">Cucumber</div>\n    </md-menu-item>\n  </md-menu>\n</span>\n\n<script type=\"module\">\n  const anchorEl = document.body.querySelector(\"#theming-anchor\");\n  const menuEl = document.body.querySelector(\"#theming-menu\");\n\n  anchorEl.addEventListener(\"click\", () => {\n    menuEl.show();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining Switch Component HTML Structure\nDESCRIPTION: This HTML snippet outlines the DOM structure for a switch component. It includes a button element with nested divs for the track, handle, and icons, as well as a hidden checkbox input.\nSOURCE: https://github.com/material-components/material-web/blob/main/switch/internal/README.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button class=\"switch\">\n  <div class=\"track\">\n    ::before\n    <div class=\"handle\">\n      ::before\n      <div class=\"icons\">\n      </div>\n    </div>\n  </div>\n  <input type=\"checkbox\" aria-hidden=\"true\">\n</button>\n```\n\n----------------------------------------\n\nTITLE: Theming Radio Buttons with CSS\nDESCRIPTION: Shows how to customize the appearance of radio buttons using CSS variables for theming.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/radio.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-sys-color-primary: #006A6A;\n  --md-radio-icon-size: 16px;\n}\n</style>\n\n<md-radio name=\"group\"></md-radio>\n<md-radio name=\"group\" checked></md-radio>\n<md-radio name=\"group\"></md-radio>\n```\n\n----------------------------------------\n\nTITLE: Branded FAB Implementation\nDESCRIPTION: Example of a branded FAB using a custom SVG icon with Google colors.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<md-branded-fab size=\"small\" aria-label=\"Add\">\n  <svg slot=\"icon\" viewBox=\"0 0 36 36\">\n    <path fill=\"#34A853\" d=\"M16 16v14h4V20z\"></path>\n    <path fill=\"#4285F4\" d=\"M30 16H20l-4 4h14z\"></path>\n    <path fill=\"#FBBC05\" d=\"M6 16v4h10l4-4z\"></path>\n    <path fill=\"#EA4335\" d=\"M20 16V6h-4v14z\"></path>\n    <path fill=\"none\" d=\"M0 0h36v36H0z\"></path>\n  </svg>\n</md-branded-fab>\n```\n\n----------------------------------------\n\nTITLE: List with Image Items in HTML\nDESCRIPTION: Illustrates how to create list items with images slotted into the start slot.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<md-list style=\"max-width: 300px;\">\n  <md-list-item>\n    Cat\n    <img slot=\"start\" style=\"width: 56px\" src=\"https://placekitten.com/112/112\">\n  </md-list-item>\n  <md-divider></md-divider>\n  <md-list-item>\n    Kitty Cat\n    <img slot=\"start\" style=\"width: 56px\" src=\"https://placekitten.com/114/114\">\n  </md-list-item>\n  <md-divider></md-divider>\n  <md-list-item>\n    Cate\n    <img slot=\"start\" style=\"width: 56px\" src=\"https://placekitten.com/116/116\">\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Text Field Labeling Examples - HTML\nDESCRIPTION: Shows different labeling approaches for text fields including floating labels, placeholders, and external labels.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field label=\"Favorite food\">\n</md-outlined-text-field>\n\n<md-outlined-text-field placeholder=\"email@domain.com\">\n</md-outlined-text-field>\n\n<div>First name</div>\n<md-outlined-text-field aria-label=\"First name\">\n</md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Removable Filter Chips\nDESCRIPTION: Shows how to implement removable filter chips with trailing remove icons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<h3>Colors</h3>\n<md-chip-set>\n  <md-filter-chip label=\"Red\" removable selected></md-filter-chip>\n  <md-filter-chip label=\"Yellow\" removable></md-filter-chip>\n  <md-filter-chip label=\"Blue\" removable></md-filter-chip>\n  <md-filter-chip label=\"Green\" removable></md-filter-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Customizing Filled Tonal Icon Button Styles in HTML/CSS\nDESCRIPTION: This example shows how to modify the appearance of a filled tonal icon button using CSS custom properties. It adjusts the button size, icon size, container shape, and secondary container color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-filled-tonal-icon-button-container-width: 80px;\n  --md-filled-tonal-icon-button-container-height: 80px;\n  --md-filled-tonal-icon-button-container-shape: 0px;\n  --md-filled-tonal-icon-button-icon-size: 40px;\n  --md-sys-color-secondary-container: #006A6A;\n}\n</style>\n<md-filled-tonal-icon-button>\n  <md-icon>check</md-icon>\n</md-filled-tonal-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Switch with Label Implementation\nDESCRIPTION: Examples of associating labels with switches using the label element, showing both inline and referenced label approaches.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/switch.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label>\n  Wi-Fi\n  <md-switch selected></md-switch>\n</label>\n\n<label for=\"switch\">Bluetooth</label>\n<md-switch id=\"switch\"></md-switch>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Progress Indicators in HTML\nDESCRIPTION: Demonstrates how to use circular and linear progress indicators, both determinate and indeterminate.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<md-circular-progress value=\"0.75\"></md-circular-progress>\n<md-circular-progress indeterminate></md-circular-progress>\n\n<md-linear-progress indeterminate></md-linear-progress>\n<md-linear-progress value=\"0.5\"></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Styling Input Chips with CSS Variables\nDESCRIPTION: This example shows how to customize input chips using CSS custom properties. It modifies the chip shape, font, outline color, and text color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-input-chip-container-shape: 0px;\n  --md-input-chip-label-text-font: system-ui;\n  --md-sys-color-outline: #6f7979;\n  --md-sys-color-on-surface: #191c1c;\n}\n</style>\n\n<md-input-chip label=\"Input\"></md-input-chip>\n```\n\n----------------------------------------\n\nTITLE: Attaching Ripple to Referenced Element in HTML\nDESCRIPTION: Shows how to attach a ripple effect to a referenced input element using HTML and CSS.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n  .container {\n    position: relative;\n  }\n</style>\n<div class=\"container\">\n  <md-ripple for=\"control\"></md-ripple>\n  <input id=\"control\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: FAB Size Variations\nDESCRIPTION: Implementation of FABs in different sizes with optional touch target modification.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<md-fab size=\"small\" touch-target=\"none\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n<md-fab size=\"small\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n<md-fab aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n<md-fab size=\"large\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Tabs with Icons Implementation\nDESCRIPTION: Example of implementing tabs with icons using Material icons.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<md-tabs>\n  <md-primary-tab>\n    <md-icon slot=\"icon\">piano</md-icon>\n    Keyboard\n  </md-primary-tab>\n  <md-primary-tab>\n    <md-icon slot=\"icon\">tune</md-icon>\n    Guitar\n  </md-primary-tab>\n</md-tabs>\n```\n\n----------------------------------------\n\nTITLE: Customizing Suggestion Chips with CSS\nDESCRIPTION: This snippet demonstrates how to style suggestion chips using CSS custom properties. It customizes the chip shape, font, outline color, and text color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-suggestion-chip-container-shape: 0px;\n  --md-suggestion-chip-label-text-font: system-ui;\n  --md-sys-color-outline: #6f7979;\n  --md-sys-color-on-surface: #191c1c;\n}\n</style>\n\n<md-suggestion-chip label=\"Suggestion\"></md-suggestion-chip>\n```\n\n----------------------------------------\n\nTITLE: Implementing Linear Progress with Buffer in HTML\nDESCRIPTION: Shows how to create a linear progress indicator with both determinate progress and an indeterminate buffer.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<md-linear-progress value=\"0.5\" buffer=\"0.8\"></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Colored FAB Variants\nDESCRIPTION: Examples of FABs with different color variants including primary, secondary, and tertiary.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<md-fab variant=\"primary\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n<md-fab variant=\"secondary\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n<md-fab variant=\"tertiary\" aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Outlined and Filled Select Components in HTML\nDESCRIPTION: Demonstrates how to use both outlined and filled select components with multiple options.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-select>\n  <md-select-option aria-label=\"blank\"></md-select-option>\n  <md-select-option selected value=\"apple\">\n    <div slot=\"headline\">Apple</div>\n  </md-select-option>\n  <md-select-option value=\"apricot\">\n    <div slot=\"headline\">Apricot</div>\n  </md-select-option>\n</md-outlined-select>\n\n<md-filled-select>\n  <md-select-option aria-label=\"blank\"></md-select-option>\n  <md-select-option value=\"apple\">\n    <div slot=\"headline\">Apple</div>\n  </md-select-option>\n  <md-select-option value=\"apricot\">\n    <div slot=\"headline\">Apricot</div>\n  </md-select-option>\n</md-filled-select>\n```\n\n----------------------------------------\n\nTITLE: Implementing Assist Chips\nDESCRIPTION: Shows implementation of assist chips for smart or automated actions.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<h3>A restaraunt location</h3>\n<md-chip-set>\n  <md-assist-chip label=\"Add to my itinerary\">\n    <md-icon slot=\"icon\">calendar</md-icon>\n  </md-assist-chip>\n  <md-assist-chip label=\"12 mins from hotel\">\n    <md-icon slot=\"icon\">map</md-icon>\n  </md-assist-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: List with Icon Items in HTML\nDESCRIPTION: Shows how to create list items with icons slotted into the start or end slots.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/list.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-list style=\"max-width: 300px\">\n  <md-list-item>\n    Lit\n    <svg  slot=\"start\" style=\"height: 24px\" viewBox=\"0 0 160 200\">\n      <path\n        fill=\"currentColor\"\n        d=\"m160 80v80l-40-40zm-40 40v80l40-40zm0-80v80l-40-40zm-40 40v80l40-40zm-40-40v80l40-40zm40-40v80l-40-40zm-40 120v80l-40-40zm-40-40v80l40-40z\"\n      />\n    </svg>\n  </md-list-item>\n  <md-divider></md-divider>\n  <md-list-item>\n    Polymer\n    <md-icon slot=\"start\">polymer</md-icon>\n  </md-list-item>\n  <md-divider></md-divider>\n  <md-list-item>\n    Angular\n    <svg slot=\"start\" style=\"height: 24px\" viewBox=\"0 0 250 250\">\n      <polygon points=\"108,135.4 125,135.4 125,135.4 125,135.4 142,135.4 125,94.5   \" />\n      <path\n        d=\"M125,30L125,30L125,30L31.9,63.2l14.2,123.1L125,230l0,0l0,0l78.9-43.7l14.2-123.1L125,30z M183.1,182.6h-21.7h0\n          l-11.7-29.2H125h0h0h-24.7l-11.7,29.2h0H66.9h0L125,52.1l0,0l0,0l0,0l0,0L183.1,182.6L183.1,182.6z\"\n      />\n    </svg>\n  </md-list-item>\n</md-list>\n```\n\n----------------------------------------\n\nTITLE: Implementing Fixed-Positioned Menu in HTML and JavaScript\nDESCRIPTION: This snippet demonstrates how to create a fixed-positioned menu using Material Web Components. It includes a button to trigger the menu and a script to toggle the menu's open state.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/menu.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"margin: 16px;\">\n  <md-filled-button id=\"usage-fixed-anchor\">Open fixed menu</md-filled-button>\n</div>\n\n<md-menu positioning=\"fixed\" id=\"usage-fixed\" anchor=\"usage-fixed-anchor\">\n  <md-menu-item>\n    <div slot=\"headline\">Apple</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Banana</div>\n  </md-menu-item>\n  <md-menu-item>\n    <div slot=\"headline\">Cucumber</div>\n  </md-menu-item>\n</md-menu>\n\n<script type=\"module\">\n  const anchorEl = document.body.querySelector('#usage-fixed-anchor');\n  const menuEl = document.body.querySelector('#usage-fixed');\n\n  anchorEl.addEventListener('click', () => { menuEl.open = !menuEl.open; });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Linear Progress Indicators in HTML\nDESCRIPTION: Demonstrates the usage of indeterminate and determinate linear progress indicators.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-linear-progress indeterminate></md-linear-progress>\n<md-linear-progress value=\"0.6\"></md-linear-progress>\n```\n\n----------------------------------------\n\nTITLE: Animating Elevation Levels with CSS Transitions\nDESCRIPTION: Demonstrates how to animate between elevation levels using CSS transitions. The surface transitions from level 3 to level 0 on active state with a 250ms ease-in-out transition.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/elevation.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .surface {\n    /* ... */\n    transition-duration: 250ms;\n    transition-timing-function: ease-in-out;\n\n    --md-elevation-level: 3;\n  }\n\n  .surface:active {\n    --md-elevation-level: 0;\n  }\n</style>\n<div class=\"surface\">\n  <md-elevation></md-elevation>\n  <!-- Content -->\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling Unbounded Circular Ripple in CSS\nDESCRIPTION: Provides CSS styles for creating an unbounded circular ripple centered on an element.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n.container {\n  display: flex;\n  place-content: center;\n  place-items: center;\n  position: relative;\n}\n\nmd-ripple.unbounded {\n  border-radius: 50%;\n  inset: unset;\n  height: var(--state-layer-size);\n  width: var(--state-layer-size);\n}\n```\n\n----------------------------------------\n\nTITLE: Theming a Slider with CSS Custom Properties\nDESCRIPTION: Demonstrates how to customize the appearance of a slider using CSS custom properties for theming.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  /* System tokens */\n  --md-sys-color-primary: #006A6A;\n\n  /* Component tokens */\n  --md-slider-handle-shape: 0px;\n}\n```\n\n----------------------------------------\n\nTITLE: Attaching Ripple to Parent Element in HTML\nDESCRIPTION: Demonstrates how to attach a ripple effect to a parent button element using HTML and CSS.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n  .container {\n    position: relative;\n  }\n</style>\n<button class=\"container\">\n  <md-ripple></md-ripple>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Event Chip Set\nDESCRIPTION: Shows how to create a chip set for event-related actions combining filter and assist chips.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<h3>New event</h3>\n<md-chip-set>\n  <md-filter-chip label=\"All day\"></md-filter-chip>\n  <md-assist-chip label=\"Add to calendar\"></md-assist-chip>\n  <md-assist-chip label=\"Set a reminder\"></md-assist-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Theming Focus Ring Example\nDESCRIPTION: Shows how to customize focus ring appearance using theming tokens for shape, width, and color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<style>\nmd-focus-ring {\n  --md-focus-ring-shape: 0px;\n  --md-focus-ring-width: 2px;\n  --md-focus-ring-active-width: 4px;\n  --md-sys-color-secondary: #4A6363;\n}\n</style>\n\n<button>\n  <md-focus-ring></md-focus-ring>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Customizing Filter Chips with CSS\nDESCRIPTION: This snippet demonstrates how to style filter chips using CSS custom properties. It customizes the chip shape, font, colors for outline, text, and selected state.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-filter-chip-container-shape: 0px;\n  --md-filter-chip-label-text-font: system-ui;\n  --md-sys-color-outline: #6f7979;\n  --md-sys-color-on-surface: #191c1c;\n  --md-sys-color-secondary-container: #cce8e7;\n}\n</style>\n\n<md-filter-chip label=\"Filter\"></md-filter-chip>\n```\n\n----------------------------------------\n\nTITLE: Implementing Circular Progress Indicators in HTML\nDESCRIPTION: Shows examples of indeterminate and determinate circular progress indicators.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/progress.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<md-circular-progress indeterminate></md-circular-progress>\n<md-circular-progress value=\"0.6\"></md-circular-progress>\n```\n\n----------------------------------------\n\nTITLE: Creating Elevated Chips\nDESCRIPTION: Shows implementation of elevated suggestion chips for use on top of images.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div>\n  <img src=\"...\">\n  <md-chip-set>\n    <md-suggestion-chip label=\"Share\" elevated></md-suggestion-chip>\n    <md-suggestion-chip label=\"Favorite\" elevated></md-suggestion-chip>\n  </md-chip-set>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Filled Icon Button Styles in HTML/CSS\nDESCRIPTION: This snippet demonstrates how to customize the appearance of a filled icon button using CSS custom properties. It adjusts the button size, icon size, container shape, and primary color.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-filled-icon-button-container-width: 80px;\n  --md-filled-icon-button-container-height: 80px;\n  --md-filled-icon-button-icon-size: 40px;\n  --md-filled-icon-button-container-shape: 0px;\n  --md-sys-color-primary: #dc362e;\n  background-color: #fff8f6;\n}\n</style>\n<md-filled-icon-button>\n  <md-icon>check</md-icon>\n</md-filled-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Customizing Filled Tonal Button with CSS\nDESCRIPTION: This example illustrates how to customize a filled tonal button using CSS custom properties. It modifies the button's shape, font, and colors for a unique themed look.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  --md-filled-tonal-button-container-shape: 0px;\n  --md-filled-tonal-button-label-text-font: system-ui;\n  --md-sys-color-secondary-container: #CCE8E7;\n  --md-sys-color-on-secondary-container: #051F1F;\n}\n</style>\n\n<md-filled-tonal-button>Tonal</md-filled-tonal-button>\n```\n\n----------------------------------------\n\nTITLE: Importing Material Web Components in JavaScript\nDESCRIPTION: This JavaScript snippet shows how to import specific Material Web Components into a project.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// index.js\nimport '@material/web/button/filled-button.js';\nimport '@material/web/button/outlined-button.js';\nimport '@material/web/checkbox/checkbox.js';\n```\n\n----------------------------------------\n\nTITLE: Implementing Input Chips with Avatars\nDESCRIPTION: Shows how to implement input chips with avatar images for user representation.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-text-field label=\"Attendees\" type=\"email\"></md-outlined-text-field>\n\n<md-chip-set>\n  <md-input-chip label=\"Ping Qiang\" avatar>\n    <img slot=\"icon\" src=\"...\">\n  </md-input-chip>\n  <md-input-chip label=\"Thea Schröder\" avatar>\n    <img slot=\"icon\" src=\"...\">\n  </md-input-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Customizing Divider Appearance with CSS\nDESCRIPTION: Demonstrates how to customize divider appearance using CSS custom properties for color and thickness.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/divider.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n:root {\n  --md-sys-color-outline-variant: #BEC9C8;\n  --md-divider-thickness: 2px;\n}\n</style>\n\n<section>\n  <p>Lorem ipsum...</p>\n  <md-divider></md-divider>\n  <p>Lorem ipsum...</p>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Implementing Accessible Dividers in HTML\nDESCRIPTION: Shows how to implement dividers with proper accessibility attributes using role=\"separator\".\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/divider.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul>\n  <li>Item one</li>\n  <md-divider inset></md-divider>\n  <li>Item two</li>\n  <md-divider role=\"separator\"></md-divider>\n  <li>Item three</li>\n  <md-divider inset></md-divider>\n  <li>Item four</li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Range Slider in HTML\nDESCRIPTION: Demonstrates how to create a range slider with start and end values.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider range value-start=\"25\" value-end=\"50\"></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Implementing Focus Ring with Parent Element\nDESCRIPTION: Shows how to attach a focus ring directly to a parent button element with custom shape styling.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button style=\"position: relative\">\n  <md-focus-ring style=\"--md-focus-ring-shape: 8px\"></md-focus-ring>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Extended FAB Without Icon\nDESCRIPTION: Example of an extended FAB implementation without an icon, showing just the label.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<md-fab label=\"Reroute\"></md-fab>\n```\n\n----------------------------------------\n\nTITLE: Implementing Start-Inset Divider in HTML\nDESCRIPTION: Demonstrates using inset-start attribute to create a divider with leading side indentation.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/divider.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<section>\n  <p>Material 2</p>\n  <md-divider inset-start></md-divider>\n  <p>Material 3</p>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Theming Ripple with CSS Custom Properties\nDESCRIPTION: Shows how to customize the ripple color using CSS custom properties for theming.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n:root {\n  --md-sys-color-primary: #006A6A;\n  --md-ripple-hover-color: var(--md-sys-color-primary);\n  --md-ripple-pressed-color: var(--md-sys-color-primary);\n}\n\n.container {\n  position: relative;\n}\n</style>\n<button class=\"container\">\n  <md-ripple></md-ripple>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Focus Ring with Element Reference\nDESCRIPTION: Demonstrates attaching a focus ring to an input element using the 'for' attribute reference.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"position: relative\">\n  <md-focus-ring for=\"control\" style=\"--md-focus-ring-shape: 8px\"></md-focus-ring>\n  <input id=\"control\">\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Unbounded Ripple in HTML and CSS\nDESCRIPTION: Demonstrates how to implement an unbounded circular ripple effect using HTML and CSS.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n  .container {\n    border-radius: 50%;\n    height: 32px;\n    width: 32px;\n\n    /* Needed for unbounded ripple */\n    display: flex;\n    place-content: center;\n    place-items: center;\n    position: relative;\n  }\n\n  md-ripple.unbounded {\n    /* Needed for unbounded ripple */\n    border-radius: 50%;\n    inset: unset;\n    height: 64px;\n    width: 64px;\n  }\n</style>\n<button class=\"container\">\n  <md-ripple class=\"unbounded\"></md-ripple>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Full Width Divider in HTML\nDESCRIPTION: Demonstrates how to use the basic md-divider element to separate content sections with a full-width divider.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/divider.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<section>\n  <p>Lorem ipsum...</p>\n  <md-divider></md-divider>\n  <p>Lorem ipsum...</p>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Implementing Shape Customization in Material Buttons with CSS\nDESCRIPTION: Example of customizing the shape of filled buttons using component tokens and CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.square-buttons {\n  /* Changes all <md-filled-button> instances matching the selector */\n  --md-filled-button-container-shape: 0px;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Focus Ring Imperatively\nDESCRIPTION: Shows how to programmatically attach a focus ring to a control element using JavaScript.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"position: relative\">\n  <md-focus-ring id=\"ring\" style=\"--md-focus-ring-shape: 8px\"></md-focus-ring>\n  <button id=\"ring-control\"></button>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst focusRing = document.querySelector('#ring');\nconst control = document.querySelector('#ring-control');\nfocusRing.attach(control);\n```\n\n----------------------------------------\n\nTITLE: Advanced Typeface Customization with CSS Variables\nDESCRIPTION: This CSS snippet demonstrates advanced typeface customization, including setting different fonts for various typescale roles and using custom font variables.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/typography.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --my-brand-font: 'Open Sans';\n  --my-headline-font: 'Montserrat';\n  --my-title-font: 'Montserrat';\n  --my-plain-font: system-ui;\n\n  --md-ref-typeface-brand: var(--my-brand-font);\n  --md-ref-typeface-plain: var(--my-plain-font);\n\n  --md-sys-typescale-headline-font: var(--my-headline-font);\n  --md-sys-typescale-title-font: var(--my-title-font);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Rollup and Node Resolve Plugin\nDESCRIPTION: This shell command installs Rollup and the Node Resolve plugin for bundling Material Web Components.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm install rollup @rollup/plugin-node-resolve\n```\n\n----------------------------------------\n\nTITLE: Basic Tabs Implementation in HTML\nDESCRIPTION: Shows how to implement basic primary and secondary tabs using the Material Web components.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/tabs.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-tabs>\n  <md-primary-tab>Video</md-primary-tab>\n  <md-primary-tab>Photos</md-primary-tab>\n  <md-primary-tab>Audio</md-primary-tab>\n</md-tabs>\n\n<md-tabs>\n  <md-secondary-tab>Birds</md-secondary-tab>\n  <md-secondary-tab>Cats</md-secondary-tab>\n  <md-secondary-tab>Dogs</md-secondary-tab>\n</md-tabs>\n```\n\n----------------------------------------\n\nTITLE: Lowered FAB Implementation\nDESCRIPTION: Example of a FAB with reduced elevation using the lowered attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/fab.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<md-fab lowered aria-label=\"Edit\">\n  <md-icon slot=\"icon\">edit</md-icon>\n</md-fab>\n```\n\n----------------------------------------\n\nTITLE: Defining MdOutlinedSelect Custom Element in HTML\nDESCRIPTION: Shows the HTML tag for using the MdOutlinedSelect component in web applications. This custom element provides a styled, accessible select input with various configurable properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/select.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<md-outlined-select></md-outlined-select>\n```\n\n----------------------------------------\n\nTITLE: Creating a Link Icon Button in HTML\nDESCRIPTION: This example demonstrates how to turn an icon button into a link by adding href and target attributes.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button href=\"https://google.com\">\n  <md-icon>check</md-icon>\n</md-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Attaching Ripple Imperatively with JavaScript\nDESCRIPTION: Illustrates how to attach a ripple effect to an element imperatively using JavaScript.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/ripple.md#2025-04-21_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<style>\n  .container {\n    position: relative;\n  }\n</style>\n<div class=\"container\">\n  <md-ripple id=\"ripple\"></md-ripple>\n  <button id=\"ripple-control\"></button>\n</div>\n<script>\n  const ripple = document.querySelector('#ripple');\n  const control = document.querySelector('#ripple-control');\n  ripple.attach(control);\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Focusable Disabled Chips\nDESCRIPTION: Shows how to implement soft-disabled chips that remain focusable for better accessibility.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<md-chip-set aria-label=\"Actions\">\n  <md-assist-chip label=\"Copy\" soft-disabled></md-assist-chip>\n  <md-assist-chip label=\"Paste\" soft-disabled></md-assist-chip>\n</md-chip-set>\n<md-outlined-text-field type=\"textarea\"></md-outlined-text-field>\n```\n\n----------------------------------------\n\nTITLE: Implementing Inward Focus Ring\nDESCRIPTION: Shows how to create a focus ring that animates inward using the inward attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/focus-ring.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<button style=\"position: relative\">\n  <md-focus-ring inward style=\"--md-focus-ring-shape: 8px\"></md-focus-ring>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Breaking ARIA Selector Query Example - HTML/JavaScript\nDESCRIPTION: Demonstrates how ARIA attribute selectors no longer work directly due to runtime attribute shifting to data-* attributes. Shows the broken querySelector approach that returns null.\nSOURCE: https://github.com/material-components/material-web/blob/main/migrations/v2/README.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<md-checkbox aria-label=\"Agree\"></md-checkbox>\n<script>\n  const agreeCheckbox = document.querySelector(\n    'md-checkbox[aria-label=\"Agree\"]'\n  );\n  // `agreeCheckbox` is null!\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Remove-Only Input Chips\nDESCRIPTION: Demonstrates implementation of input chips that can only be removed and not clicked.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<h3>Favorite movies</h3>\n<md-chip-set>\n  <md-input-chip label=\"Star Wars\" remove-only></md-input-chip>\n  <md-input-chip label=\"Star Trek\" remove-only></md-input-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Continuous Slider in HTML\nDESCRIPTION: Shows how to create a continuous slider with a specific range and default value.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/slider.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-slider min=\"0\" max=\"100\" value=\"50\"></md-slider>\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Link (Markdown)\nDESCRIPTION: Markdown link showing version comparison between pre-releases\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[1.0.0-pre.3](https://github.com/material-components/material-web/compare/v1.0.0-pre.2...v1.0.0-pre.3)\n```\n\n----------------------------------------\n\nTITLE: Breaking Sass Math Operation Example - SCSS\nDESCRIPTION: Shows how the new var() return values break mathematical operations in Sass that previously worked with raw values.\nSOURCE: https://github.com/material-components/material-web/blob/main/migrations/v2/README.md#2025-04-21_snippet_3\n\nLANGUAGE: scss\nCODE:\n```\n@use '@material/web/tokens';\n\n$checkbox-tokens: tokens.md-comp-checkbox-values();\n\n$double-icon-size: math.mult(map.get($checkbox-tokens, 'icon-size'), 2);\n// @error var(--md-checkbox-icon-size, 18px) is not a number.\n```\n\n----------------------------------------\n\nTITLE: Implementing Focusable Disabled Icon Buttons in HTML\nDESCRIPTION: This example shows how to create a toolbar with icon buttons, including a soft-disabled but focusable button for improved discoverability.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon-button.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<div role=\"toolbar\">\n  <md-icon-button aria-label=\"Copy\">\n    <md-icon>copy</md-icon>\n  </md-icon-button>\n  <md-icon-button aria-label=\"Cut\">\n    <md-icon>cut</md-icon>\n  </md-icon-button>\n  <!--\n    This icon button is disabled but kept focusable to improve its\n    discoverability in the toolbar.\n  -->\n  <md-icon-button aria-label=\"Paste\" soft-disabled>\n    <md-icon>paste</md-icon>\n  </md-icon-button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring System Color Tokens\nDESCRIPTION: Shows how to set primary and secondary system color tokens for the theme.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/README.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-color-primary: red;\n  --md-sys-color-secondary: blue;\n}\n```\n\n----------------------------------------\n\nTITLE: Closing Dialog Programmatically in TypeScript\nDESCRIPTION: Illustrates how to close a dialog programmatically using the close() method and handle the Promise it returns.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ncloseButton.addEventListener('click', async () => {\n  await dialog.close();\n});\n```\n\n----------------------------------------\n\nTITLE: Warning Message in Markdown\nDESCRIPTION: A warning notice formatted in Markdown that alerts users about the limited support and potential breaking changes for internal features.\nSOURCE: https://github.com/material-components/material-web/blob/main/internal/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Internal\n\n> WARNING ⚠️ This folder contains internal features that have limited support.\n> Proceed with caution when using them in a project.\n>\n> Breaking changes may occur that do not bump the major version (vX.0.0).\n```\n\n----------------------------------------\n\nTITLE: Opening Dialog by Default in HTML\nDESCRIPTION: Shows how to create a dialog that is opened by default using the 'open' attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/dialog.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<md-dialog open>\n  <div slot=\"content\">\n    A dialog that is opened by default.\n  </div>\n</md-dialog>\n```\n\n----------------------------------------\n\nTITLE: Creating Focusable Disabled Buttons in HTML\nDESCRIPTION: This example illustrates how to create a toolbar with buttons, including a soft-disabled button that remains focusable for improved discoverability. It uses the soft-disabled attribute on a text button.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/button.md#2025-04-21_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div role=\"toolbar\">\n  <md-text-button>Copy</md-text-button>\n  <md-text-button>Cut</md-text-button>\n  <!--\n    This button is disabled but kept focusable to improve its discoverability\n    in the toolbar.\n  -->\n  <md-text-button soft-disabled>Paste</md-text-button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Filter Chips\nDESCRIPTION: Demonstrates filter chips usage for content filtering functionality.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/chip.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<h3>Choose where to share</h3>\n<md-chip-set>\n  <md-filter-chip label=\"Docs\"></md-filter-chip>\n  <md-filter-chip label=\"Slides\" selected></md-filter-chip>\n  <md-filter-chip label=\"Sheets\" selected></md-filter-chip>\n  <md-filter-chip label=\"Images\"></md-filter-chip>\n</md-chip-set>\n```\n\n----------------------------------------\n\nTITLE: Adding Inset Divider in HTML\nDESCRIPTION: Shows how to implement an inset divider that is equally indented from both sides of the screen.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/divider.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<section>\n  <p>Material 2</p>\n  <md-divider inset></md-divider>\n  <p>Material 3</p>\n</section>\n```\n\n----------------------------------------\n\nTITLE: Text Field Event Interfaces\nDESCRIPTION: Native DOM events supported by the text field component for tracking user interactions and input changes\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/text-field.md#2025-04-21_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\n{\n  select: Event;\n  change: Event;\n  input: InputEvent;\n}\n```\n\n----------------------------------------\n\nTITLE: Fixed Sass Token Values with Raw Values - SCSS\nDESCRIPTION: Shows how to fix Sass mathematical operations by using the exclude-custom-properties parameter to get raw values instead of var() functions.\nSOURCE: https://github.com/material-components/material-web/blob/main/migrations/v2/README.md#2025-04-21_snippet_4\n\nLANGUAGE: scss\nCODE:\n```\n@use '@material/web/tokens';\n\n$checkbox-tokens: tokens.md-comp-checkbox-values($exclude-custom-properties: true);\n// (\n//   'icon-size': 18px,\n// )\n```\n\n----------------------------------------\n\nTITLE: Loading Material Symbols Outlined Font\nDESCRIPTION: Shows how to include the Material Symbols Outlined font using a link tag.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Symbols+Outlined\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Loading Material Symbols Rounded Font\nDESCRIPTION: Shows how to include the Material Symbols Rounded font using a link tag.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Symbols+Rounded\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: List Item HTML Slot Configuration\nDESCRIPTION: Demonstrates the new slot-based configuration for list items with multiple sections and icons\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<md-list-item>   <div slot=\"overline\">OVERLINE</div>   <div slot=\"headline\">First line</div>   <div slot=\"supporting-text\">Second+ lines</div>   <div slot=\"trailing-supporting-text\">Trailing</div>   <md-icon slot=\"start\">star</md-icon>   <md-icon slot=\"end\">star</md-icon> </md-list-item>\n```\n\n----------------------------------------\n\nTITLE: Bundling Material Web Components with Rollup\nDESCRIPTION: This shell command uses Rollup to bundle the Material Web Components from an entry point file.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpx rollup -p @rollup/plugin-node-resolve index.js -o bundle.js\n```\n\n----------------------------------------\n\nTITLE: Loading Material Symbols Sharp Font\nDESCRIPTION: Shows how to include the Material Symbols Sharp font using a link tag.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/components/icon.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Symbols+Sharp\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Sass Token Values Function Changes - SCSS\nDESCRIPTION: Demonstrates the change in Sass token function output, which now returns var() functions with custom properties by default instead of raw values.\nSOURCE: https://github.com/material-components/material-web/blob/main/migrations/v2/README.md#2025-04-21_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\n@use '@material/web/tokens';\n\n$checkbox-tokens: tokens.md-comp-checkbox-values();\n// (\n//   // 'icon-size': 18px, // Before\n//   'icon-size': var(--md-checkbox-icon-size, 18px), // After\n// )\n```\n\n----------------------------------------\n\nTITLE: Including Bundled Material Web Components in HTML\nDESCRIPTION: This HTML snippet shows how to include the bundled Material Web Components script in an HTML file.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"./bundle.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Material Web Components via npm\nDESCRIPTION: This shell command installs the Material Web Components package using npm.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/quick-start.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @material/web\n```\n\n----------------------------------------\n\nTITLE: Styling Nested Components with CSS Parts\nDESCRIPTION: Shows how to customize internal elements of Material Web Components using the CSS ::part() selector.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/support.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nmd-checkbox::part(focus-ring) {\n  width: 32px;\n  height: 32px;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Autofocus Attribute with Dialog Element\nDESCRIPTION: Code showing the use of the standard HTML autofocus attribute to focus dialog elements instead of the custom dialog-focus attribute.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\nautofocus\n```\n\n----------------------------------------\n\nTITLE: Customizing Typescale Properties with CSS Variables\nDESCRIPTION: This CSS snippet shows how to customize typescale properties such as font size and line height using CSS custom properties.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/theming/typography.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-sys-typescale-body-medium-size: 1rem;\n  --md-sys-typescale-body-medium-line-height: 1.5rem;\n  /* ... */\n}\n```\n\n----------------------------------------\n\nTITLE: Reverting Tab Branding Change in Material Web Components\nDESCRIPTION: This code snippet shows a revert of a previous change to tab branding in Material Web Components. It clarifies that using the 'md-tab' attribute is not a breaking change.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* pardon the mess, \"use `md-tab` attribute to brand individual tab children\" is not a breaking change ([43af3ba](https://github.com/material-components/material-web/commit/43af3baa7f599c0d9cf3f5562e2a772e229d95c2))\n```\n\n----------------------------------------\n\nTITLE: Version Changelog Entry for Material Web Components\nDESCRIPTION: Version 2.3.0 changelog entry showing features and bug fixes including button download support, menu padding tokens, and various component fixes.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.3.0](https://github.com/material-components/material-web/compare/v2.2.0...v2.3.0) (2025-03-26)\n\n### Features\n\n* **button:** add download filename support for link buttons ([4098832])\n* **button:** rename attribute downloadFilename to download ([8aefe19])\n* **chip:** add download attribute to assist chip ([902a84f])\n* **icon-button:** add download attribute ([9e84130])\n* **menu:** add menu padding tokens ([767d1f1])\n* **text-field:** add showPicker method ([bad490c])\n```\n\n----------------------------------------\n\nTITLE: Issue Reference (Markdown)\nDESCRIPTION: Markdown formatted issue reference with link\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n[#3073](https://github.com/material-components/material-web/issues/3073)\n```\n\n----------------------------------------\n\nTITLE: Fixing Tab Branding in Material Web Components\nDESCRIPTION: This code snippet shows a bug fix for tabs in Material Web Components. It uses the 'md-tab' attribute to brand individual tab children, allowing for custom tab creation.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* **tabs:** use `md-tab` attribute to brand individual tab children ([8ec0813](https://github.com/material-components/material-web/commit/8ec08133af05c0755fbac764b3275af0f8ae0c1c))\n```\n\n----------------------------------------\n\nTITLE: Document Freshness Comment\nDESCRIPTION: Internal documentation freshness metadata indicating document ownership and review date information.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/roadmap.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!--*\n# Document freshness: For more information, see go/fresh-source.\nfreshness: { owner: 'lizmitchell' reviewed: '2025-04-15' }\n*-->\n```\n\n----------------------------------------\n\nTITLE: Renaming Tonal Button Element in HTML\nDESCRIPTION: Code example showing the renaming of the button component from md-tonal-button to md-filled-tonal-button in HTML markup.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<md-filled-tonal-button>\n```\n\n----------------------------------------\n\nTITLE: Using Standard Icon Button Element in HTML\nDESCRIPTION: Code example showing the renaming of the standard icon button component from md-standard-icon-button to md-icon-button in HTML markup.\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<md-icon-button>\n```\n\n----------------------------------------\n\nTITLE: Commit Reference (Markdown)\nDESCRIPTION: Markdown formatted commit reference with link\nSOURCE: https://github.com/material-components/material-web/blob/main/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n[828d7ae](https://github.com/material-components/material-web/commit/828d7aeb4d3144e3a0229cc4fa81e7c7135c4760)\n```\n\n----------------------------------------\n\nTITLE: File Include Directive\nDESCRIPTION: Internal directive to include additional roadmap content from a separate file for Google employees.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/roadmap.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!--#include file=\"../googlers/roadmap.md\" -->\n```\n\n----------------------------------------\n\nTITLE: Fixed ARIA Selector Query with ariaSelector Helper - TypeScript\nDESCRIPTION: Shows the correct way to query ARIA attributes using the new ariaSelector helper function from the migrations package. This ensures proper selection of elements with ARIA attributes.\nSOURCE: https://github.com/material-components/material-web/blob/main/migrations/v2/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {ariaSelector} from '@material/web/migrations/v2/query-selector-aria';\n\nconst agreeCheckbox = document.querySelector(\n  ariaSelector('md-checkbox[aria-label=\"Agree\"]')\n);\n```\n\n----------------------------------------\n\nTITLE: Catalog Metadata in HTML Comments\nDESCRIPTION: Metadata configuration for the catalog documentation system, defining the name, title and order of the roadmap document.\nSOURCE: https://github.com/material-components/material-web/blob/main/docs/roadmap.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- catalog-only-start --><!-- ---\nname: Roadmap\ntitle: Roadmap\norder: 3\n-----><!-- catalog-only-end -->\n```"
  }
]
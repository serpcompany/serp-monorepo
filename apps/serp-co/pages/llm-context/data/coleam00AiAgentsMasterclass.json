[
  {
    "owner": "coleam00",
    "repo": "ai-agents-masterclass",
    "content": "TITLE: Streamlit App with Supabase Authentication and n8n\nDESCRIPTION: This snippet extends the basic Streamlit app to integrate Supabase for authentication. It adds login and signup tabs. Upon successful authentication, the user's Supabase token is used as the bearer token for the webhook request to the n8n workflow. A panel is created to display user email and session ID. The application is intended to be simple and not use experimental Streamlit features. Requires a Supabase project and a configured Streamlit environment with authentication.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/n8n-streamlit-agent/prompts.txt#_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Basic Streamlit Chat App with n8n Integration\nDESCRIPTION: This snippet details the creation of a Streamlit application with a chat interface.  The application sends user messages via a webhook to an n8n workflow. The POST request includes a session ID and the user's message (chatInput). The response from the n8n workflow (containing the LLM's output) is displayed back to the user. Prerequisites include a Streamlit environment and an n8n workflow. The workflow requires a hardcoded bearer token for authentication. The output is the LLM's response.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/n8n-streamlit-agent/prompts.txt#_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Python Dependency Requirements for AI Agents Masterclass\nDESCRIPTION: A comprehensive list of required Python packages for the AI Agents Masterclass project. The dependencies include environment management, LangChain ecosystem packages for working with various LLMs, Streamlit for building the UI, and document processing tools for handling different file formats.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/5-rag-agent/requirements.txt#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\npython-dotenv==0.13.0\nlangchain==0.2.12\nlangchain-anthropic==0.1.22\nlangchain-community==0.2.11\nlangchain-core==0.2.28\nlangchain-openai==0.1.20\nlangchain-chroma==0.1.2\nlangchain-huggingface==0.0.3\nstreamlit==1.36.0\npdfminer.six==20240706\nunstructured[all-docs]\n```\n\n----------------------------------------\n\nTITLE: Setting Up Python Virtual Environment and Installing Dependencies (Bash)\nDESCRIPTION: Provides shell commands to create a Python virtual environment named 'ai-agents-masterclass', activate it (with OS-specific commands for Windows and MacOS/Linux), navigate into a specific lesson folder (e.g., '1-first-agent'), and install the required Python packages listed in the 'requirements.txt' file using pip. Requires Python, Pip, and Git to be pre-installed.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/README.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\npython -m venv ai-agents-masterclass\n\n# On Windows:\n.\\ai-agents-masterclass\\Scripts\\activate\n\n# On MacOS/Linux: \nsource ai-agents-masterclass/bin/activate\n\ncd 1-first-agent (or whichever folder)\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables - Env\nDESCRIPTION: This env file sets environment variables required for the web search agent. The example shows how to configure the OpenAI API key, Brave API key, and the LLM model used by the agent. Only the Brave API key is always required. The OPENAI_API_KEY is only needed when using OpenAI models. The LLM_MODEL determines which LLM backend to use.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_2\n\nLANGUAGE: env\nCODE:\n```\nOPENAI_API_KEY=your_openai_api_key  # Only needed if using GPT models\nBRAVE_API_KEY=your_brave_api_key\nLLM_MODEL=your_chosen_model  # e.g., gpt-4, qwen2.5:32b\n```\n\n----------------------------------------\n\nTITLE: Running Command Line Agent - Bash\nDESCRIPTION: This bash command executes the web search agent via the command-line interface. It executes the `web_search_agent.py` python script. The script selects the LLM backend (OpenAI or Ollama) based on the `LLM_MODEL` environment variable.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython web_search_agent.py\n```\n\n----------------------------------------\n\nTITLE: Executing a Python Script (Bash)\nDESCRIPTION: Shows the command to execute a Python script from the terminal. Replace '[script name].py' with the actual name of the Python file you want to run. Assumes the Python virtual environment is activated and the necessary dependencies are installed.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/README.md#_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\npython [script name].py\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies - Bash\nDESCRIPTION: This bash script installs the Python dependencies listed in the requirements.txt file. It uses the pip install command with the -r flag followed by the requirements.txt file path. This assumes you have a Python virtual environment activated.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Listing Python Project Dependencies (requirements.txt)\nDESCRIPTION: This snippet lists the required Python packages and their specific versions for the project, following the `requirements.txt` format. Key dependencies include Asana, python-dotenv, several Langchain components (core, community, huggingface), and Streamlit. Use `pip install -r requirements.txt` to install these packages. A preceding comment notes potential Windows path length issues for `langchain-huggingface` installation.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/local-llm-tool-calling/requirements.txt#_snippet_0\n\nLANGUAGE: requirements\nCODE:\n```\n# When installing langchain-huggingface on Windows, you might need to follow these instructions:\n# https://www.howtogeek.com/266621/how-to-make-windows-10-accept-file-paths-over-260-characters/\n\nasana==5.0.0\npython-dotenv==0.13.0\nlangchain==0.2.6\nlangchain-community==0.2.6\nlangchain-huggingface==0.0.3\nlangchain-core==0.2.10\nstreamlit==1.36.0\n```\n\n----------------------------------------\n\nTITLE: Specify Langchain Version - requirements.txt\nDESCRIPTION: Requires 'langchain' version 0.2.6, a core component of the LangChain framework for developing language model applications.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_2\n\nLANGUAGE: requirements.txt\nCODE:\n```\nlangchain==0.2.6\n```\n\n----------------------------------------\n\nTITLE: Declaring Python Project Dependencies - requirements.txt\nDESCRIPTION: Specifies the exact Python packages and their minimum or exact versions required for the project. This file is typically used with 'pip install -r requirements.txt' to set up the project's environment, guaranteeing that the necessary libraries are available with compatible versions.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/1-first-agent/requirements.txt#_snippet_0\n\nLANGUAGE: requirements.txt\nCODE:\n```\nasana==5.0.0\nopenai==1.10.0\npython-dotenv==0.13.0\n```\n\n----------------------------------------\n\nTITLE: Specify Langchain-openai Version - requirements.txt\nDESCRIPTION: Requires 'langchain-openai' version 0.1.10, the specific integration package for using OpenAI models within the LangChain framework.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_5\n\nLANGUAGE: requirements.txt\nCODE:\n```\nlangchain-openai==0.1.10\n```\n\n----------------------------------------\n\nTITLE: Specify Langchain-community Version - requirements.txt\nDESCRIPTION: Specifies 'langchain-community' version 0.2.6, providing community-contributed integrations and components for the LangChain framework.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_3\n\nLANGUAGE: requirements.txt\nCODE:\n```\nlangchain-community==0.2.6\n```\n\n----------------------------------------\n\nTITLE: Specify Langchain-core Version - requirements.txt\nDESCRIPTION: Defines 'langchain-core' version 0.2.10, the foundational library containing core abstractions for the LangChain framework.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_4\n\nLANGUAGE: requirements.txt\nCODE:\n```\nlangchain-core==0.2.10\n```\n\n----------------------------------------\n\nTITLE: Listing Python Project Dependencies\nDESCRIPTION: This snippet lists the project's Python package dependencies and their specific versions. It is a standard format used to specify the required packages for a Python project, making it easier to manage and reproduce the project's environment.  The versions are important to maintain compatibility.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/3-agent-ui/requirements.txt#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nasana==5.0.0\nopenai==1.10.0\npython-dotenv==0.13.0\nlangchain==0.2.6\nlangchain-anthropic==0.1.16\nlangchain-community==0.2.6\nlangchain-core==0.2.10\nlangchain-openai==0.1.10\nstreamlit==1.36.0\n```\n\n----------------------------------------\n\nTITLE: Project Dependencies Listing - Python\nDESCRIPTION: Contains the full list of Python packages and their locked versions required for the project's environment. Each line specifies a package and its exact version, ensuring reproducible installations when using pip.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/10-deploy-ai-agent-langserve/requirements.txt#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nasana==5.0.7\npython-dotenv==0.13.0\nlangchain==0.2.12\nlangserve==0.2.2\nuvicorn==0.30.6\nfastapi==0.112.2\ngunicorn==23.0.0\nsse_starlette==2.1.3\nlangchain-anthropic==0.1.22\nlangchain-groq==0.1.5\nlangchain-community==0.2.11\nlangchain-core==0.2.28\nlangchain-openai==0.1.20\nlangchain-chroma==0.1.2\nlangchain-huggingface==0.0.3\nsentence-transformers==3.0.1\nunstructured[all-docs]\nstreamlit==1.36.0\nlanggraph==0.1.19\naiosqlite==0.20.0\ngoogle-api-python-client==2.142.0\ngoogle-auth-oauthlib==1.2.1\noauthlib==3.2.2\nrequests-oauthlib==2.0.0\n```\n\n----------------------------------------\n\nTITLE: Specify OpenAI Version - requirements.txt\nDESCRIPTION: Defines the exact version (1.10.0) for the 'openai' package, essential for integrating with OpenAI's API in the project.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_0\n\nLANGUAGE: requirements.txt\nCODE:\n```\nopenai==1.10.0\n```\n\n----------------------------------------\n\nTITLE: Specify Python-dotenv Version - requirements.txt\nDESCRIPTION: Sets the dependency on 'python-dotenv' version 0.13.0, used for managing configuration via environment variables loaded from a .env file.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_1\n\nLANGUAGE: requirements.txt\nCODE:\n```\npython-dotenv==0.13.0\n```\n\n----------------------------------------\n\nTITLE: Specify Streamlit Version - requirements.txt\nDESCRIPTION: Sets the dependency on 'streamlit' version 1.36.0, used for building interactive web applications or UIs for the project.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/streamlit-chatbot/requirements.txt#_snippet_6\n\nLANGUAGE: requirements.txt\nCODE:\n```\nstreamlit==1.36.0\n```\n\n----------------------------------------\n\nTITLE: Running Streamlit UI - Bash\nDESCRIPTION: This bash command runs the Streamlit user interface for the web search agent. It executes the streamlit run command followed by the python script `streamlit_ui.py`. The Streamlit UI allows users to interact with the web search agent through a web browser.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nstreamlit run streamlit_ui.py\n```\n\n----------------------------------------\n\nTITLE: OpenAI GPT Model Configuration - Env\nDESCRIPTION: This env file sets the LLM model environment variable to configure the agent to use OpenAI's GPT models. The LLM_MODEL variable is set to gpt-4o. The `OPENAI_API_KEY` must be correctly set in the .env file to use GPT models.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_5\n\nLANGUAGE: env\nCODE:\n```\nLLM_MODEL=gpt-4o\n```\n\n----------------------------------------\n\nTITLE: Ollama Model Configuration - Env\nDESCRIPTION: This env file sets the LLM model environment variable to configure the agent to use an Ollama model. The LLM_MODEL variable is set to qwen2.5:32b.  The specified model must be installed and running through Ollama, which can be verified by running 'ollama serve'.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_6\n\nLANGUAGE: env\nCODE:\n```\nLLM_MODEL=qwen2.5:32b\n```\n\n----------------------------------------\n\nTITLE: Cloning Repository - Bash\nDESCRIPTION: This bash script clones the specified git repository and navigates into the created directory. It uses the git clone command followed by the repository URL and then uses the cd command to change the current directory to the project directory.\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/pydantic-ai/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/coleam00/ai-agents-masterclass.git\ncd ai-agents-masterclass/pydantic-ai\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Project Dependencies (requirements.txt)\nDESCRIPTION: Lists Python package dependencies and their required versions using the standard requirements.txt format. This ensures reproducibility by defining the exact environment needed to run the 'ai-agents-masterclass' project. Key dependencies include LangChain for AI agent frameworks, Streamlit for the UI, and specific LLM provider libraries (OpenAI, Anthropic).\nSOURCE: https://github.com/coleam00/ai-agents-masterclass/blob/main/n8n-langchain-agent/requirements.txt#_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npython-dotenv==0.13.0\nlangchain==0.2.12\nlangchain-anthropic==0.1.22\nlangchain-community==0.2.11\nlangchain-core==0.2.28\nlangchain-openai==0.1.20\nstreamlit==1.36.0\nrequests==2.32.3\n```"
  }
]
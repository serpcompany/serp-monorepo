[
  {
    "owner": "plaintextaccounting",
    "repo": "plaintextaccounting",
    "content": "TITLE: Basic Beancount Journal Structure Example\nDESCRIPTION: Demonstrates the basic structure of a Beancount journal including account opening, transactions, and simple postings. Shows required account declarations and transaction format.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_0\n\nLANGUAGE: beancount\nCODE:\n```\n; a comment\n\n2016-01-01 open Assets:Checking\n2016-01-01 open Equity:Opening-Balances\n2016-01-01 open Expenses:Groceries\n\n2016-01-01 txn \"set opening balance\"\n   Assets:Checking         500.00 USD\n   Equity:Opening-Balances\n\n2016-01-05 txn \"farmer's market\"\n   Expenses:Groceries     50 USD\n   Assets:Checking\n```\n\n----------------------------------------\n\nTITLE: Defining Amounts in PlainTextAccounting\nDESCRIPTION: Shows different ways to format monetary amounts in plaintext accounting systems. Demonstrates various commodity and quantity notations including positioning, spaces, and the use of quotes for commodities with spaces.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nOne of\nCOMMODITY QUANTITY\nQUANTITY COMMODITY\nQUANTITY\n\n10\n$10.00\n1,000.0001 USD\n10 \"prepaid classes\"\n```\n\n----------------------------------------\n\nTITLE: Recording Financial Transactions with hledger Journal Format\nDESCRIPTION: A hledger journal file that tracks financial transactions for the Plain Text Accounting organization. It includes entries for hosting expenses and donations, with proper accounting for assets, liabilities, and revenue.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/finance.md#2025-04-21_snippet_1\n\nLANGUAGE: hledger\nCODE:\n```\n2024-03-30 begin tracking finances of the plaintextaccounting org.\n\n2024-03-30 Discourse | begin $50/mo hosting at Discourse, with an advance from SM\n    ; discussion: https://forum.plaintextaccounting.org/t/-/5\n    expenses:hosting          50 USD\n    liabilities:sm           -50 USD\n\n2024-04-11 sponsor1 | one-time donation, used immediately\n    revenues:github         -25 USD\n    liabilities:sm           25 USD\n```\n\n----------------------------------------\n\nTITLE: Recording Borrowing Transactions in Plain Text Accounting\nDESCRIPTION: Demonstrates how to record borrowing money from someone and repaying the debt. The example uses balance assertions to verify account balances after each transaction, ensuring the debt is properly tracked and cleared when fully repaid.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Borrowing-and-Lending.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2024-03-30 borrow from Helpful Harry\n  liabilities:debts:hh  -100 = -100  ; optional balance assertion, added for clarity and checking\n  assets:cash            100\n\n2024-04-02 repay Harry\n  assets:cash           -100\n  liabilities:debts:hh   100 = 0     ; debt is fully repaid\n```\n\n----------------------------------------\n\nTITLE: Correct Transaction Indentation in Plaintext Accounting\nDESCRIPTION: Demonstrates the proper way to indent transaction lines in plaintext accounting. The second and subsequent lines must be indented by at least one space.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/15 Acme \n  Expenses:Household   $20.00 ;roadrunner trap\n  Liabilities:CreditCard\n```\n\n----------------------------------------\n\nTITLE: Advanced Ledger Transaction Syntax\nDESCRIPTION: Demonstrates the complete transaction syntax including flags, codes, and posting features.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE [FLAG] [(CODE)] DESCRIPTION\n   [FLAG] ACCOUNT  AMOUNT [PRICE] [=BAL]\n   ...\n   [FLAG] ACCOUNT  [AMOUNT [PRICE] [=BAL]]\n```\n\n----------------------------------------\n\nTITLE: Recording Invoices and Payments in Accrual Accounting\nDESCRIPTION: Demonstrates how to record an invoice and its payment using the accrual accounting method. It shows the creation of a receivable when invoicing and its settlement when payment is received.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Invoicing.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2020-02-01 * (202001ab) AB Inc. | invoice for work done in january\n    revenues:consulting:ab     $-1000\n    assets:receivable:ab        $1000\n\n2020-02-15 * AB Inc. | receive full payment for 202001ab\n    assets:receivable:ab       $-1000 ;= $0  ; optional: when paid in full, assert that\n    assets:checking             $1000\n```\n\n----------------------------------------\n\nTITLE: Recording Lending Transactions in Plain Text Accounting\nDESCRIPTION: Shows how to track money lent to someone and receiving payments. Balance assertions are used to confirm the loan amount and verify when the loan is fully repaid. The transactions track the movement of money from checking to loans and back.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Borrowing-and-Lending.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2020-01-01 lend to Trusty Tara\n  assets:bank:checking  -100\n  assets:loans:tt        100 = 100\n  \n2020-02-15 Tara payment\n  assets:loans:tt        -50\n  assets:bank:checking    50\n\n2020-03-15 Tara payment\n  assets:loans:tt        -50 = 0\n  assets:bank:checking    50\n```\n\n----------------------------------------\n\nTITLE: Compact Version of Multiple Currency Transaction in Plain Text Accounting\nDESCRIPTION: A more detailed approach that records the foreign currency using @@ notation. This approach preserves the original currency while tracking conversion rates, with client reimbursement shown in the foreign currency.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n2022-03-16 * mail-tester.com | for client\n    ; paypal purchase, drawn from checking\n    ;  txnid:6J734837CW8252237, paypal outflow\n    ;  txnid:6T5967442S085784Y, refill from checking\n    ;  txnid:5U407731S97694332, convert from €\n    ;  txnid:7GR54150TH923981E, convert to $\n    JS:assets:receivable:cl:reimbursement         €5.00 @@ $5.74\n    sm:assets:bank:wf:pchecking                  $-5.74\n    ; note business obligation to repay personal account\n    JS:liabilities:payable:sm:reimbursement      $-5.74\n    sm:assets:receivable:JS:reimbursement         $5.74\n```\n\n----------------------------------------\n\nTITLE: Recording Shared Expenses When You Pay for Everyone in Plain Text Accounting\nDESCRIPTION: This snippet shows how to record a situation where you pay for everyone's meals and your friends later pay you back. It uses Assets:Accounts Receivable to track the money owed to you by each friend.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 This Pizza Place | Fungi\n    Expenses:Food:Pizza                         $15.00 ; you're expending money for a pizza\n    Assets:Accounts Receivable:Friend A         $15.00 ; you're also paying for friend A\n    Assets:Accounts Receivable:Friend B         $15.00 ; and for friend B\n    Assets:Cash                                $-45.00 ; from your wallet\n\n2021-01-02 Evening the odds\n    Assets:Cash                                 $15.00 ; to your wallet\n    Assets:Accounts Receivable:Friend A        $-15.00 ; get payed back\n\n2021-01-09 Evening the odds\n    Assets:Checking                             $15.00 ; to your bank account\n    Assets:Accounts Receivable:Friend B        $-15.00 ; they're always slow to pay back\n```\n\n----------------------------------------\n\nTITLE: Recording Mortgage Principal Payments in Ledger/HLedger\nDESCRIPTION: This snippet demonstrates how to record the initial house purchase with a mortgage and subsequent monthly payments that include both principal and interest components.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 Real estate agency | Buying the house\n    Assets:House:Acquisition             $100,000.00 ; your house is an asset\n    Assets:Checking                      $-10,000.00 ; paying part of the house directly\n    Liabilities:Accounts Payable:A Bank  $-90,000.00 ; getting a loan for the remainder\n\n2021-02-01 A Bank | Monthly payment\n    Expenses:House:Mortgage                  $100.00 ; part of the payment is interest\n    Liabilities:Accounts Payable:A Bank      $400.00 ; part of the payment reduces the debt\n    Assets:Checking                         $-500.00\n\n; repeat above transaction every month, possibly with varying ratio/sum\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Paycheck and Benefits Tracking in Plain Text Accounting\nDESCRIPTION: A detailed approach to track the entire compensation package including benefits. This method uses accounts receivable to track the timing differences between when income is earned and when it's deposited, and shows the full tax reconciliation process.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Personal-income-and-taxes.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n2021-12-30 Salary December 2021\n    Income:Salary:Gross                               $-2,000.00 ; gross income\n    Expenses:Salary:Social Security                      $300.00\n    Expenses:Taxes:Withholding Tax                       $400.00 \n    Income:Salary:Untaxed                               $-200.00 ; Untaxed benefits e.g. Work From Home compensation\n    Assets:Accounts Receivable:Salary                  $1,500.00 ; net income\n\n2022-01-03 Salary deposit December 2021\n    Assets:Accounts Receivable:Salary                 -$1,500.00 \n    Assets:Checking                                    $1,500.00\n\n2022-07-15 Tax\n    Expenses:Taxes:Withholding Tax                     $-4,800.00 ; total amount of taxes already withheld\n    Expenses:Taxes:Income Tax                           $4,500.00 ; \n    Expenses:Taxes:__________                             $200.00 ; \n    Assets:Account Receivable:Tax Benefits               $-100.00 ; any tax benefits accumulated in other places e.g. retirement plans or subsidised renovations\n    Assets:Accounts Receivable:Refunds                    $200.00 ; difference is refunded\n\n2022-08-31 Tax refund\n    Assets:Accounts Receivable:Refunds                   -$200.00 \n    Assets:Checking\n```\n\n----------------------------------------\n\nTITLE: Basic Beancount Transaction Format\nDESCRIPTION: Defines the basic transaction syntax with date, description and account postings. Description must be in double quotes and can span multiple lines.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_2\n\nLANGUAGE: beancount\nCODE:\n```\nDATE txn [[\"PAYEE\"] \"DESCRIPTION\"]\n   ACCOUNT    AMOUNT\n   ACCOUNT    [AMOUNT]\n```\n\n----------------------------------------\n\nTITLE: Recording Shared Expenses When a Friend Pays in Plain Text Accounting\nDESCRIPTION: This snippet demonstrates how to record a situation where your friend pays for your meal and you later pay them back. It uses Liabilities:Accounts Payable to track the debt owed to your friend.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 This Pizza Place | Fungi\n    Expenses:Food:Pizza                         $15.00 ; you're expending money for a pizza\n    Liabilities:Accounts Payable:Friend A      $-15.00 ; but friend A is paying\n\n2021-01-02 Evening the odds\n    Liabilities:Accounts Payable:Friend A       $15.00 ; pay back friend A\n    Assets:Cash                                $-15.00 ; from your wallet\n```\n\n----------------------------------------\n\nTITLE: Receiving Roommate Contributions in Plain Text Accounting\nDESCRIPTION: Records roommates' monthly contributions toward rent and utilities using liability accounts. The entries show how to track incoming payments from roommates for both their portion of rent and their share of various utility expenses for the upcoming month.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-rent-and-utilities.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2021-05-25 * \"Roommate A\" \"Subletting Roommate A June\"\n    Liabilities:Subletting                        -300.00 EUR\n    Liabilities:Utilities                          -33.40 EUR\n    Assets:Bank:HouseCheckingAccount               333.40 EUR\n\n2021-05-29 * \"Roommate B\" \"Subletting Roommate B June\"\n    Liabilities:Subletting                        -320.00 EUR\n    Liabilities:Utilities                          -33.40 EUR\n    Assets:Bank:HouseCheckingAccount               353.40 EUR\n```\n\n----------------------------------------\n\nTITLE: Transaction Format in Beancount\nDESCRIPTION: Beancount's transaction syntax showing required fields and formatting, including the txn keyword, payee/description handling, and posting structure with flags and prices.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE [txn|FLAG] [[\"PAYEE\"] \"DESCRIPTION\"]\n    [FLAG] ACCOUNT       AMOUNT [PRICE]\n    ...\n    [FLAG] ACCOUNT       AMOUNT [PRICE]\n```\n\n----------------------------------------\n\nTITLE: Recording Bill Payments in Plain Text Accounting\nDESCRIPTION: Documents how to record payments for rent and utilities while properly allocating expenses between roommates. The entries show how to reduce the liability accounts as the pre-paid roommate contributions are used to cover their portion of each bill.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-rent-and-utilities.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2021-06-04 * \"Landlord\" \"Rent June\"\n    Assets:Bank:HouseCheckingAccount              -900.00 EUR\n    Liabilities:Subletting                         300.00 EUR\n    Liabilities:Subletting                         320.00 EUR\n    Expenses:Rent                                  280.00 EUR\n\n2021-06-15 * \"Internet Provider\" \"Internet June\"\n    Assets:Bank:HouseCheckingAccount              -60.00 EUR\n    Liabilities:Utilities                          20.00 EUR\n    Liabilities:Utilities                          20.00 EUR\n    Expenses:Utilities:Internet                    20.00 EUR\n\n2021-06-20 * \"Water Company\" \"Water Q2\"\n    Assets:Bank:HouseCheckingAccount              -90.00 EUR\n    Liabilities:Utilities                          30.00 EUR\n    Liabilities:Utilities                          30.00 EUR\n    Expenses:Utilities:Water                       30.00 EUR\n```\n\n----------------------------------------\n\nTITLE: Tracking Property Value Changes in Ledger/HLedger\nDESCRIPTION: This snippet illustrates how to record changes in a property's value over time, including mortgage payments and adjustments based on market estimates.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n2019/01/01 Buy House\n    Assets:House                                      $500,000.00\n    Liabilities:Mortgage\n\n2019/02/01 Mortgage Payment\n    Liabilities:Mortgage                                $1,000.00\n    Expenses:Interest:Real Estate                         $833.33\n    Assets:Cash                                         $-1833.33\n\n2019/03/01 Mortgage Payment\n    Liabilities:Mortgage                                $1,002.00\n    Expenses:Interest:Real Estate                         $831.33\n    Assets:Cash                                         $-1833.33\n\n; Adjust the house's value based on current price estimates\n2019/03/15 Zillow Price Estimate\n    Assets:House                                                  = $505,000.00\n    Equity:Unrealized Gains\n```\n\n----------------------------------------\n\nTITLE: Recording RSU Transactions in Plain Text Accounting\nDESCRIPTION: This code snippet demonstrates how to record various RSU-related transactions in a plain text accounting format. It includes examples for receiving RSUs, vesting of RSUs, and selling vested RSUs. The transactions show the movement of stocks between different asset accounts and the corresponding income entries.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Restricted-stock-units.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n; On the date RSUs are received, they are placed into an asset account and balanced against Income\n2021-12-26 Google | Stock RSU\n    Assets:Investment:Equity:Shares:Unvested:GOOG-RSU:20211226      200 GOOG\n    Income:Salary:RSU:Unvested                                     -200 GOOG\n\n; When they vest, the quantity in income needs to be translated to the actual price the \n; stocks were vested at. The remain in terms of the commodity but now moved to a vested asset account\n2024-12-26 Google | Stock RSU Vests\n    Assets:Investment:Equity:Shares:GOOG:20241226                   200 GOOG\n    Assets:Investment:Equity:Shares:Unvested:GOOG-RSU:20211226     -200 GOOG\n    Income:Salary:RSU:Unvested                                      200 GOOG\n    Equity:Trading:RSU:US02079K1079-USD:US02079K1079               -200 GOOG\n    Equity:Trading:RSU:US02079K1079-USD:USD                         4000.00 USD\n    Income:Salary:RSU:Vested                                       -4000.00 USD\n\n; Like any other stock sale, money is received into an asset account, balanced against income, \n; but also needs to be removed from the vested account\n2025-06-01 Google | Stock RSU Sale\n    Assets:Cash:USD                                             5000.00 USD\n    Income:Capital:Short:US02079K1079                          -1000.00 USD\n    Equity:Trading:RSU:US02079K1079-USD:USD                    -4000.00 USD\n    Equity:Trading:RSU:US02079K1079-USD:US02079K1079            200 GOOG\n    Assets:Investment:Equity:Shares:GOOG:20241226              -200 GOOG\n```\n\n----------------------------------------\n\nTITLE: Basic Multi-File Layout for Plain Text Accounting\nDESCRIPTION: A common and relatively simple multi-file layout for Plain Text Accounting, with all files in the same directory for easy access. Includes yearly journal files, an all-inclusive journal, and separate files for different currencies or commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Organising-files.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n2022.journal\n2023.journal\n2024.journal\nall.journal\neur.journal\njpy.journal\nmsft.journal\n...\n```\n\n----------------------------------------\n\nTITLE: Short Version of Multiple Currency Transaction in Plain Text Accounting\nDESCRIPTION: A pragmatic, condensed approach to recording multi-currency transactions where foreign currency amounts are noted only in comments. All transactions are recorded in USD, simplifying reports while maintaining transaction context through comments.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2022-03-16 * mail-tester.com | for client\n    ;  txnid:6J734837CW8252237, paypal outflow\n    ;  txnid:6T5967442S085784Y, refill from checking\n    ;  txnid:5U407731S97694332, convert from €\n    ;  txnid:7GR54150TH923981E, convert to $\n    JS:assets:receivable:cl:reimbursement         $5.74  ; for €5.00 mail-tester expense\n    sm:assets:bank:wf:pchecking                 $ -5.74\n    ; note business obligation to repay personal account\n    JS:liabilities:payable:sm:reimbursement      $-5.74\n    sm:assets:receivable:JS:reimbursement         $5.74\n```\n\n----------------------------------------\n\nTITLE: Basic Ledger Transaction Structure\nDESCRIPTION: Shows the fundamental structure of Ledger transactions, including date, description, accounts, and amounts.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE [DESCRIPTION]\n   ACCOUNT    AMOUNT\n   ACCOUNT    [AMOUNT]\n```\n\n----------------------------------------\n\nTITLE: Basic Ledger Journal Example\nDESCRIPTION: Shows a minimal Ledger journal with comments and simple transactions, demonstrating opening balances and expense tracking.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n; a comment\n\n2016/1/1 set opening balance\n   assets:checking       $500.00\n   equity:opening balances\n\n2016/1/5 farmer's market\n   expenses:groceries     $50.00\n   Assets:checking\n```\n\n----------------------------------------\n\nTITLE: Detailed Version of Multiple Currency Transaction in Plain Text Accounting\nDESCRIPTION: A fully detailed approach that records each individual transaction from Paypal's CSV export, using equity accounts for currency conversions. This provides complete audit trail of every transaction step.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_6\n\nLANGUAGE: journal\nCODE:\n```\n2022-03-16 * mail-tester.com | for client\n    ; txnid:6J734837CW8252237, itemid:, fromemail:, toemail:contact@woobeo.com, type:T0007, status:S\n    sm:assets:online:paypal                      €-5.00 =* €-5.00\n    JS:assets:receivable:cl:reimbursement         €5.00\n\n2022-03-16 * T0300 for 6J734837CW8252237 Total price\n    ; txnid:7GR54150TH923981E, itemid:, fromemail:, toemail:, type:T0300, status:S\n    sm:assets:online:paypal                      $ 5.74 =* $ 5.74\n    sm:assets:bank:wf:pchecking                 $ -5.74\n\n2022-03-16 * T0200 for 6J734837CW8252237 Total price\n    ; txnid:6T5967442S085784Y, itemid:, fromemail:, toemail:, type:T0200, status:S\n    sm:assets:online:paypal                     $ -5.74 =* $ 0.00\n    JS:equity:conversion                         $ 5.74\n\n2022-03-16 * T0200 for 6J734837CW8252237 Total price\n    ; txnid:5U407731S97694332, itemid:, fromemail:, toemail:, type:T0200, status:S\n    JS:equity:conversion                         €-5.00\n    sm:assets:online:paypal                       €5.00 =* €0.00\n\n2022-03-16 * note business obligation to repay personal account\n    JS:liabilities:payable:sm:reimbursement      $-5.74\n    sm:assets:receivable:JS:reimbursement         $5.74\n\n2022-03-16 * convert cl receivable from 6J734837CW8252237\n    JS:assets:receivable:cl:reimbursement        €-5.00\n    JS:equity:conversion                          €5.00\n    JS:equity:conversion                         $-5.74\n    JS:assets:receivable:cl:reimbursement         $5.74\n```\n\n----------------------------------------\n\nTITLE: Setting Up Beancount Options and Plugins for Mortgage Tracking\nDESCRIPTION: This snippet shows the initial setup for a Beancount file to track mortgages, including setting options and loading necessary plugins.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n* Options\noption \"title\" \"House Example\"\noption \"operating_currency\" \"USD\"\noption \"render_commas\" \"TRUE\"\n\n* Plugins\n\nplugin \"beancount.plugins.auto\"\nplugin \"beancount.plugins.unrealized\" \"Unrealised\"\n```\n\n----------------------------------------\n\nTITLE: Recording When You Paid Less Than Your Share in Plain Text Accounting\nDESCRIPTION: This snippet shows how to record a situation where you contribute less than your share of the bill. It uses Liabilities:Accounts Payable to track the money you owe to the group, before identifying who specifically paid extra.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 This Pizza Place\n    Expenses:Food:Pizza                         $15.00 ; you're expending money for a pizza\n    Assets:Cash                                $-10.00 ; from your wallet\n    Liabilities:Accounts Payable:Pizza Outing   $-5.00 ; you're not yet sure who payed too much\n\n2021-01-02 Evening the odds\n    Liabilities:Accounts Payable:Pizza Outing    $5.00 ; friend A payed too much\n    Assets:Checking                             $-5.00\n\n; the latter could be repeated for multiple friends\n```\n\n----------------------------------------\n\nTITLE: Recording Interest-Only Mortgage Payments in Ledger/HLedger\nDESCRIPTION: This example shows how to record an interest-only mortgage, where the monthly payments do not reduce the principal balance.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 Real estate agency | Buying the house\n    Assets:House:Acquisition             $100,000.00 ; your house is an asset\n    Assets:Checking                      $-10,000.00 ; paying part of the house directly\n    Liabilities:Accounts Payable:A Bank  $-90,000.00 ; getting a loan for the remainder\n\n2021-02-01 A Bank | Monthly payment\n    Expenses:House:Mortgage                  $500.00 ; all of the payment is interest\n    Assets:Checking                         $-500.00\n\n; repeat above transaction every month, possibly with varying payment\n```\n\n----------------------------------------\n\nTITLE: Tracking Gross Salary and Tax Withholding in Plain Text Accounting\nDESCRIPTION: An intermediate approach that tracks both gross income and tax withholding. This method accounts for the employer withholding taxes and shows the final tax reconciliation where withheld amounts are reallocated to specific tax expense categories.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Personal-income-and-taxes.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2022-01-01 Your Company\n    Income:Your Company              $-2,000.00 ; gross income\n    Expenses:Taxes:Withholding Tax      $400.00\n    Equity:Paycheck Differences        $-100.00 ; most jobs will try to give untaxed benefits. As we do not care about it this is dumped in an Equity account\n    Assets:Checking                   $1,500.00 ; net income\n\n2022-08-31 Tax\n    Expenses:Taxes:Withholding Tax                     $-4,800.00 ; total amount of taxes already withheld\n    Expenses:Taxes:Income Tax                           $4,500.00 ; \n    Expenses:Taxes:__________                             $200.00 ; \n    Assets:Account Receivable:Tax Benefits               $-100.00 ; any tax benefits accumulated in other places e.g. retirement plans or subsidised renovations\n    Assets:Checking                                       $200.00 ; difference is refunded\n```\n\n----------------------------------------\n\nTITLE: Strict Time Tracking with Account Declarations in Journal Format\nDESCRIPTION: A more strict version of time tracking that requires declaring accounts and commodities before use. This approach enforces consistency and prevents typos in account names or units.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n# b.journal\ncommodity h\naccount time:work\naccount time:rest\naccount time:play\n\n2022-01-01\n   (time:work)   2h\n   (time:rest)   1.5h\n   (time:play)   2.5h\n```\n\n----------------------------------------\n\nTITLE: Basic Transaction Examples in Plain Text Accounting Systems\nDESCRIPTION: Example showing basic transaction syntax in Ledger, hledger, and Beancount formats. Demonstrates opening balance and a simple expense transaction in each system with their specific syntax requirements.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n; a comment\n\n2016/1/1 set opening balance\n  assets:checking      $500.00\n  equity:opening balances\n\n2016/1/5 farmer's market\n  expenses:groceries    $50.00\n  Assets:checking\n\n\n\n\n\n\n```\n\n----------------------------------------\n\nTITLE: Settling Final Balances After Group Expenses in Plain Text Accounting\nDESCRIPTION: This snippet demonstrates how to settle the final balances after a group expense, calculating who owes whom and bringing all accounts back to zero. It shows transactions for both a friend who is owed money and a friend who owes money.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_5\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-02 Evening the odds\n    Liabilities:Accounts Payable:Friend A       $20.00 ; back to zero\n    Assets:Accounts Receivable:Friend A        $-12.00 ; back to zero\n    Assets:Cash                                 $-8.00 ; from your wallet\n\n2021-01-02 Evening the odds\n    Assets:Cash                                  $6.00 ; from your wallet\n    Liabilities:Accounts Payable:Friend B        $5.00 ; back to zero\n    Assets:Accounts Receivable:Friend B        $-11.00 ; back to zero\n```\n\n----------------------------------------\n\nTITLE: Recording House Purchase and Mortgage Setup in Beancount\nDESCRIPTION: This snippet shows how to record the initial purchase of a house, including setting up the mortgage and associated expenses in Beancount.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_5\n\nLANGUAGE: journal\nCODE:\n```\n2020-01-01 * \"Opening\" \"Get some money\"\n  Assets:Bank                     30,000 USD\n  Equity:Opening-Balances\n\n2020-01-01 open Liabilities:Mortgage:H123 USD\n  ; open mortgage account\n  rate: \"2.5%\"\n  term: \"25y fixed\"\n  payments: 807.51 USD\n  ; these notes are just to remind outselves.\n\n2020-01-01 * \"Buy House\"\n  Assets:House:H123                    1 H123 { 200,000.USD, 2020-01-01 }\n  ; buy one H123 at 200k USD on this date (inventory)\n  Liabilities:Mortgage:H123  -180,000.00 USD ; Take on the mortgage\n  Expenses:Fees                   499.95 USD ; Mortgage setup fee\n  Expenses:Legal                   2,500 USD ; Pay the lawyers\n  Assets:Bank                 -20,000.00 USD ; deposit on house\n  Assets:Bank                  -2,999.95 USD ; Bank mortgage arrangement fees\n```\n\n----------------------------------------\n\nTITLE: Price Notations in Ledger\nDESCRIPTION: Different ways to specify prices in Ledger format, including unit prices, total prices, lot prices, and lot dates, with explanations of how they affect market price recording.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nOne of\n@ UNITPRICE\n@@ TOTALPRICE\nand/or one of\n{LOTUNITPRICE}\n{=FIXEDLOTUNITPRICE}\nand/or\n[LOTDATE]\n```\n\n----------------------------------------\n\nTITLE: Recording Mortgage Payments in Beancount\nDESCRIPTION: This example illustrates how to record monthly mortgage payments in Beancount, splitting the payment into interest and principal components.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_6\n\nLANGUAGE: journal\nCODE:\n```\n2020-02-01 * \"Mortgage\"\n  Assets:Bank                    -807.51 USD ; payment\n  Expenses:Interest:H123          375.00 USD ; interest\n  Liabilities:Mortgage:H123       432.51 USD ; principle\n\n2020-03-01 * \"Mortgage\"\n  Assets:Bank                    -807.51 USD\n  Expenses:Interest:H123          374.10 USD\n  Liabilities:Mortgage:H123\n\n2020-04-01 * \"Mortgage\"\n  Assets:Bank                    -807.51 USD\n  Expenses:Interest:H123          372.29 USD\n  Liabilities:Mortgage:H123\n```\n\n----------------------------------------\n\nTITLE: Register Output for Short Version of Multiple Currency Transaction\nDESCRIPTION: The register output from the short version of the transaction, showing how all entries are recorded and balanced in USD, with clear tracking of the client reimbursement, personal account payment, and business obligation.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n2022-03-16 mail-tester.com | for client             JS:assets:receivable:cl:reimbursement            $5.74         $5.74\n                                                    sm:assets:bank:wf:pchecking                     $-5.74             0\n                                                    JS:liabilities:payable:sm:reimbursement         $-5.74        $-5.74\n                                                    sm:assets:receivable:JS:reimbursement            $5.74             0\n```\n\n----------------------------------------\n\nTITLE: Recording Payment with Estimated Tax in Cash Accounting\nDESCRIPTION: Demonstrates how to record a payment received while also accounting for estimated taxes owed. This example is particularly relevant for freelancers in the US who need to track and save for estimated income taxes.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Invoicing.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n2020-02-15 * AB Inc. | receive full payment for 202001ab and save estimated tax\n    equity:receivable           $1000\n    assets:receivable:ab       $-1000 ;= $0\n    revenues:consulting:ab     $-1000\n    equity:payable:us:2020       $150  ; estimate new tax owed, eg 15% \n    liabilities:tax:us:2020     $-150\n    assets:checking:tax:us:2020  $150  ; save that amount (in a virtual subaccount)\n    assets:checking              $850\n```\n\n----------------------------------------\n\nTITLE: Tracking Salary with Meal Vouchers in Plain Text Accounting\nDESCRIPTION: A comprehensive approach that includes meal vouchers as a tax-favorable benefit. This method tracks both employee and employer contributions to the meal voucher balance, showing separate deposits for salary and meal voucher amounts.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Personal-income-and-taxes.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n2021-12-30 Salary December 2021\n    Income:Salary:Gross                               $-2,000.00 ; gross income\n    Expenses:Salary:Social Security                      $300.00\n    Expenses:Salary:Withholding Tax                      $400.00 \n    Income:Your Company:Untaxed                         $-200.00 ; Untaxed benefits e.g. Work From Home compensation\n\n    Expenses:Salary:Meal Voucher Contribution             $20.00\n    Income:Salary:Meal Voucher:Employee Contribution     $-20.00\n    Income:Salary:Meal Voucher:Employer Contribution    $-120.00\n\n    Assets:Accounts Receivable:Salary                  $1,500.00 ; net income\n    Assets:Accounts Receivable:Meal Voucher              $140.00\n\n2022-01-03 Salary deposit December 2021\n    Assets:Accounts Receivable:Salary                 -$1,200.00 \n    Assets:Checking                                    $1,200.00\n\n2022-01-10 Meal Voucher deposit December 2021\n    Assets:Accounts Receivable:Meal Voucher             -$140.00 \n    Assets:Meal Voucher                                  $140.00 \n \n2022-07-15 Tax\n    Expenses:Taxes:Withholding Tax                     $-4,800.00 ; total amount of taxes already withheld\n    Expenses:Taxes:Income Tax                           $4,500.00 ; \n    Expenses:Taxes:__________                             $200.00 ; \n    Assets:Account Receivable:Tax Benefits               $-100.00 ; any tax benefits accumulated in other places e.g. retirement plans or subsidised renovations\n    Assets:Accounts Receivable:Refunds                    $200.00 ; difference is refunded\n\n2022-08-31 Tax refund\n    Assets:Accounts Receivable:Refunds                   -$200.00 \n    Assets:Checking\n```\n\n----------------------------------------\n\nTITLE: Standard Amount Format in Beancount\nDESCRIPTION: Beancount's required format for monetary amounts, showing how quantities must be paired with all-caps commodities positioned on the right side of the amount.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\nQUANTITY COMMODITY\n\n\n\n\n10USD\n1000.0001 USD\n```\n\n----------------------------------------\n\nTITLE: Price Notations in Beancount\nDESCRIPTION: Beancount's approach to price specifications, showing lot price syntax with optional dates and how different price types are handled for market price recording.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\n{LOTUNITPRICE[ / LOTDATE]}\nand/or one of\n@ UNITPRICE\n@@ TOTALPRICE\n```\n\n----------------------------------------\n\nTITLE: Basic Time Tracking with Journal Format in Ledger/hLedger\nDESCRIPTION: A simple example of tracking time using non-balanced postings in the journal format. This demonstrates allocating hours to different categories like work, rest, and play.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n# a.journal\n2022-01-01\n   (time:work)   2h\n   (time:rest)   1.5h\n   (time:play)   2.5h\n```\n\n----------------------------------------\n\nTITLE: Balance Output for Short Version of Multiple Currency Transaction\nDESCRIPTION: The balance output from the short version transaction, showing all accounts balance to zero in USD, with clear tracking of receivables, payables, and bank transactions.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n               $5.74  JS:assets:receivable:cl:reimbursement\n              $-5.74  JS:liabilities:payable:sm:reimbursement\n              $-5.74  sm:assets:bank:wf:pchecking\n               $5.74  sm:assets:receivable:JS:reimbursement\n--------------------\n                   0  \n```\n\n----------------------------------------\n\nTITLE: Using Pending Accounts for Delayed Transactions in Ledger/hledger\nDESCRIPTION: A method for tracking transactions with significant delays by using a pending liability account. Includes optional balance assertions to ensure the accounts are properly balanced.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_7\n\nLANGUAGE: journal\nCODE:\n```\n; h/ledger\n\n2022-01-01\n    liabilities:doctor    -50 = -50  ; optional: balance assertions\n    expenses:health        50\n\n2022-01-08\n    assets:checking       -50\n    liabilities:doctor     50 = 0    ;\n```\n\n----------------------------------------\n\nTITLE: Using Posting Dates in Ledger for Multiple Transaction Dates\nDESCRIPTION: Demonstrates Ledger's syntax for recording a posting with a different date than the transaction. This allows different accounts to show the transaction on different dates.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_4\n\nLANGUAGE: journal\nCODE:\n```\n2022-01-01\n    assets:checking       -50  ; [2022-01-08]\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Beancount Extended Transaction Syntax\nDESCRIPTION: Shows advanced transaction syntax including flags, prices, and multiple postings. The txn keyword can be replaced by a flag.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_3\n\nLANGUAGE: beancount\nCODE:\n```\nDATE [txn|FLAG] [[\"PAYEE\"] \"DESCRIPTION\"]\n   [FLAG] ACCOUNT       AMOUNT [PRICE]\n   ...\n   [FLAG] ACCOUNT       AMOUNT [PRICE]\n```\n\n----------------------------------------\n\nTITLE: Balance Output for Compact Version of Multiple Currency Transaction\nDESCRIPTION: The balance output from the compact version, showing balances in both EUR and USD. This requires additional conversion to consolidate the multiple currency balances into a single currency equivalent.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n               €5.00  JS:assets:receivable:cl:reimbursement\n              $-5.74  JS:liabilities:payable:sm:reimbursement\n              $-5.74  sm:assets:bank:wf:pchecking\n               $5.74  sm:assets:receivable:JS:reimbursement\n--------------------\n              $-5.74\n               €5.00  \n```\n\n----------------------------------------\n\nTITLE: Managing a Cash Pool for Group Expenses in Plain Text Accounting\nDESCRIPTION: This snippet shows how to manage a shared pool of cash where everyone contributes different amounts and has different expenses. It tracks both the money spent on behalf of each person and their contributions to the pool.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_4\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 This Pizza Place\n    ; Get this information from the bill\n    Expenses:Food:Pizza                         $13.00 ; Fungi for you\n    Assets:Accounts Receivable:Friend A         $12.00 ; Quattro Formaggi for friend A\n    Assets:Accounts Receivable:Friend B         $11.00 ; Margherita for friend B\n    Assets:Cash                                  $9.00 ; remainder after paying\n    ; Note/remember this when receiving cash\n    Assets:Cash                                $-20.00 ; your contribution\n    Liabilities:Accounts Payable:Friend A      $-20.00 ; contribution by friend A\n    Liabilities:Accounts Payable:Friend B       $-5.00 ; contribution by friend B\n```\n\n----------------------------------------\n\nTITLE: Advanced Multi-File Layout for Plain Text Accounting\nDESCRIPTION: A more complex file organization structure for Plain Text Accounting, featuring per-year subdirectories and separate files for accounts, commodities, payees, and tags. This layout allows for an evolving chart of accounts and better organization of yearly data.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Organising-files.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n2022/\n 2022.journal\n 2022-accounts.journal\n 2022-commodities.journal\n 2022-payees.journal\n 2022-tags.journal\n2023/\n 2023.journal\n 2023-accounts.journal\n 2023-commodities.journal\n 2023-payees.journal\n 2023-tags.journal\n2024/\n 2024.journal\n 2024-accounts.journal\n 2024-commodities.journal\n 2024-payees.journal\n 2024-tags.journal\nall.journal\neur.journal\njpy.journal\nmsft.journal\n...\n```\n\n----------------------------------------\n\nTITLE: Time Tracking in Timedot Format (hledger)\nDESCRIPTION: Demonstrates time tracking using the timedot format, which allows for approximate/visual time logging where each dot represents a quarter hour.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_7\n\nLANGUAGE: timedot\nCODE:\n```\n# a.timedot\n\n2016/2/1\nfos:haskell   ....\nbiz:research  .\ninc:client1   .... .... .... .... .... ....\n\n2016-02-01\nbiz:research  .... ..\nfos:hledger   .... .... ....\nfos:ledger    0.25\nfos:haskell   .5\ninc:client1   2\n```\n\n----------------------------------------\n\nTITLE: Using Primary and Secondary Dates in Ledger/hledger\nDESCRIPTION: Records both transaction dates using the primary=secondary date format in Ledger/hledger, allowing reports to use either date based on command line flags.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_9\n\nLANGUAGE: journal\nCODE:\n```\n2022-01-01=2022-01-08\n    assets:checking       -50\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Ledger Price Specification Syntax\nDESCRIPTION: Shows how to specify unit prices, total prices, and lot information in Ledger postings.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n@ UNITPRICE\n@@ TOTALPRICE\n{LOTUNITPRICE}\n{=FIXEDLOTUNITPRICE}\n[LOTDATE]\n```\n\n----------------------------------------\n\nTITLE: Tracking Invoices in Cash Accounting\nDESCRIPTION: Illustrates a method to track invoices in cash accounting using equity accounts. It shows how to record an invoice and its subsequent payment while maintaining cash accounting principles.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Invoicing.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n2020-02-01 * (202001ab) AB Inc. | invoice for work done in january\n    assets:receivable:ab        $1000\n    equity:receivable          $-1000\n\n2020-02-15 * AB Inc. | receive full payment for 202001ab\n    equity:receivable           $1000\n    assets:receivable:ab       $-1000 ;= $0\n    revenues:consulting:ab     $-1000\n    assets:checking             $1000\n```\n\n----------------------------------------\n\nTITLE: Using Pending Accounts for Delayed Transactions in Beancount\nDESCRIPTION: Beancount implementation of the pending account method, separating the expense recognition from the payment clearing with two distinct transactions.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_8\n\nLANGUAGE: beancount\nCODE:\n```\n; beancount\n\n2022-01-01 open Assets:Checking\n2022-01-01 open Liabilities:Doctor\n2022-01-01 open Expenses:Health\n\n2022-01-01 * \"doctor\" \"payment made\"\n    Liabilities:Doctor    -50 USD\n    Expenses:Health        50 USD\n\n2022-01-08 * \"doctor\" \"payment cleared\"\n    Assets:Checking       -50 USD\n    Liabilities:Doctor     50 USD\n```\n\n----------------------------------------\n\nTITLE: Defining Carbon Emission Price Conversion in Plain Text Accounting\nDESCRIPTION: Sets up a price directive to convert monetary amounts to carbon emission units, using an estimation rate of 2 carbon units per dollar spent.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Eco-accounting.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n; estimate that one dollar spent generates 2 \"C\", approximate carbon emission unit\nP 2022-01-01 $ 2 C\n```\n\n----------------------------------------\n\nTITLE: Using Posting Dates in hledger for Multiple Transaction Dates\nDESCRIPTION: Shows hledger's alternative syntax for recording posting dates, using the 'date:' tag format to associate a different date with a specific posting.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_5\n\nLANGUAGE: hledger\nCODE:\n```\n2022-01-01\n    assets:checking       -50  ; date:2022-01-08\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Balance Assignment in Ledger\nDESCRIPTION: Using balance assignments in Ledger to automatically calculate the required amount to reach a specific balance, with the difference allocated to another account.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\n= AMOUNT (no preceding/inferred posting amount)\n\n2012-03-10 Adjustment\n    Assets:Cash           = $50\n    Expenses:Misc\n```\n\n----------------------------------------\n\nTITLE: Recording When You Paid More Than Your Share in Plain Text Accounting\nDESCRIPTION: This snippet demonstrates how to record a situation where you contribute more than your share of the bill. It uses Assets:Accounts Receivable to track the money owed to you by the group, before identifying who specifically underpaid.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Splitting-the-bill.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 This Pizza Place\n    Expenses:Food:Pizza                         $15.00 ; you're expending money for a pizza\n    Assets:Accounts Receivable:Pizza Outing      $5.00 ; you're not yet sure who payed too little\n    Assets:Cash                                $-20.00 ; from your wallet\n\n2021-01-02 Evening the odds\n    Assets:Checking                              $5.00\n    Assets:Accounts Receivable:Pizza Outing     $-5.00 ; friend B payed too little\n\n; the latter could be repeated for multiple friends\n```\n\n----------------------------------------\n\nTITLE: Time Tracking with Timeclock Format\nDESCRIPTION: Example of using timeclock format to track precise clock-in and clock-out times for different activities. This format is supported by both ledger and hledger.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_6\n\nLANGUAGE: timeclock\nCODE:\n```\n# a.timeclock (hledger), or can be inlined in your main journal (ledger)\ni 2009/03/27 09:00:00 projects:a\no 2009/03/27 17:00:34\ni 2009/03/31 22:21:45 personal:reading:online\no 2009/04/01 02:00:34\ni 2009/04/02 09:00:00 projects:b\no 2009/04/02 17:00:34\n```\n\n----------------------------------------\n\nTITLE: Time Tracking with Timedot Format in hLedger\nDESCRIPTION: Example of using hLedger's timedot format for visual and approximate time logging. Each dot represents a quarter hour, and numeric values can also be used.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_7\n\nLANGUAGE: timedot\nCODE:\n```\n# a.timedot\n\n2016/2/1\nfos:haskell   ....\nbiz:research  .\ninc:client1   .... .... .... .... .... ....\n\n2016-02-01\nbiz:research  .... ..\nfos:hledger   .... .... ....\nfos:ledger    0.25\nfos:haskell   .5\ninc:client1   2\n```\n\n----------------------------------------\n\nTITLE: Beancount Account Opening Directive\nDESCRIPTION: Shows how to declare accounts with the open directive, including specification of allowed commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_5\n\nLANGUAGE: beancount\nCODE:\n```\n2014-05-01 open Assets:Cash USD,CAD\n```\n\n----------------------------------------\n\nTITLE: Ledger Amount Format Examples\nDESCRIPTION: Shows the different ways to format amounts in Ledger, including quantities with and without commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n10\n$10.00\n1,000.0001 USD\n10 \"prepaid classes\"\n```\n\n----------------------------------------\n\nTITLE: Compact Time Tracking with TSV Format\nDESCRIPTION: A compact tab-separated values format for tracking time, with one line per day and columns for different time categories.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_8\n\nLANGUAGE: tsv\nCODE:\n```\n# a.tsv\n2022-01-01\t2\t1.5\t2.5\n2022-01-02\t0\t3\t0\n```\n\n----------------------------------------\n\nTITLE: Opening Account Directive in Beancount\nDESCRIPTION: Shows how to open an account in Beancount, specifying the date and allowed commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_20\n\nLANGUAGE: beancount\nCODE:\n```\n2014-05-01 open Assets:Cash USD,CAD\n```\n\n----------------------------------------\n\nTITLE: Minimal Income and Tax Tracking in Plain Text Accounting\nDESCRIPTION: A basic approach to track income and taxes by recording only actual transfers to and from your bank account. This method records net income received and the annual tax payment made from the checking account.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Personal-income-and-taxes.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n; repeat this every month, or whenever you get paid\n2022-01-01 Your Company\n    Assets:Checking                   $1,500.00\n    Income:Your Company              $-1,500.00\n\n2022-08-31 Tax\n    Expenses:Tax                        $200.00\n    Assets:Checking                    $-200.00\n```\n\n----------------------------------------\n\nTITLE: Balance Assertions in Beancount\nDESCRIPTION: Beancount's separate balance directive for asserting account balances, showing the syntax for checking multiple commodities independently at the start of a specific day.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE balance ACCOUNT AMOUNT\n\n2014-08-09 balance Assets:Cash 562.00 USD\n2014-08-09 balance Assets:Cash 210.00 CAD\n```\n\n----------------------------------------\n\nTITLE: Querying Transactions with Different Posting Dates in Ledger/hledger\nDESCRIPTION: Demonstrates how to query transactions when using posting dates, showing how different accounts will display different dates for the same transaction.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_6\n\nLANGUAGE: cli\nCODE:\n```\n$ ledger reg expenses  # shows 1/1\n$ ledger reg checking  # shows 1/8\n```\n\n----------------------------------------\n\nTITLE: Setting Market Price in Ledger\nDESCRIPTION: Shows how to set market prices for commodities in Ledger, including date, time, and unit price.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_23\n\nLANGUAGE: ledger\nCODE:\n```\nP 2004/06/21 02:18:02 AAPL $32.91\nP 2004/06/21 02:18:02 AU $400.00\n```\n\n----------------------------------------\n\nTITLE: Setting Market Price in Beancount\nDESCRIPTION: Demonstrates how to set market prices for commodities in Beancount using the price directive.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_25\n\nLANGUAGE: beancount\nCODE:\n```\n2014-07-09 price USD  1.08 CAD\n```\n\n----------------------------------------\n\nTITLE: Amounts with International Formatting\nDESCRIPTION: Examples of amount formatting with international number formats, showing different decimal points and digit grouping separators used across various accounting systems.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nOne of\nCOMMODITY QUANTITY\nQUANTITY COMMODITY\nQUANTITY\n\n10\n$10.00\n1,000.0001 USD\n10 \"prepaid classes\"\n1.000.000,01\n12,34,567.89\n```\n\n----------------------------------------\n\nTITLE: Ledger Account Naming Syntax\nDESCRIPTION: Demonstrates the account naming convention in Ledger, showing the structure with top-level accounts and subaccounts.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nTOPACCT[:SUBACCT[:...]]\n\nRevenues:Salary\nliabilities:credit card:CITI 1234\nother assets:house\n```\n\n----------------------------------------\n\nTITLE: Setting Market Price in Hledger\nDESCRIPTION: Illustrates how to set market prices for commodities in Hledger, noting that time is ignored.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_24\n\nLANGUAGE: hledger\nCODE:\n```\nP 2015/8/9 GBP $1.55\n```\n\n----------------------------------------\n\nTITLE: Handling Cross-Year Transactions in Previous Year File\nDESCRIPTION: Demonstrates handling a transaction that spans two calendar years using a pending account in the previous year's journal file, including proper year-end closing entries.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_11\n\nLANGUAGE: journal\nCODE:\n```\n; 2021.journal\n\n2021-12-30\n    liabilities:doctor    -50 = -50\n    expenses:health        50\n\n; The liability appears in year-end closing balances, if you record those:\n2021-12-31\n    liabilities:doctor     50 = 0\n    equity:opening/closing balances\n```\n\n----------------------------------------\n\nTITLE: Handling Cross-Year Transactions in Current Year File\nDESCRIPTION: Continues the cross-year transaction example showing how to properly open the pending account in the new year's journal file and record the clearing transaction.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_12\n\nLANGUAGE: journal\nCODE:\n```\n; 2022.journal\n\n; The liability appears in next year's opening balances:\n2022-01-01\n    liabilities:doctor    -50 = -50\n    equity:opening/closing balances\n\n2022-01-08\n    assets:checking       -50\n    liabilities:doctor     50 = 0\n```\n\n----------------------------------------\n\nTITLE: Beancount Market Price Entry\nDESCRIPTION: Shows how to record market prices for commodities using the price directive.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_7\n\nLANGUAGE: beancount\nCODE:\n```\n2014-07-09 price USD  1.08 CAD\n```\n\n----------------------------------------\n\nTITLE: Recording Payments in Cash Accounting\nDESCRIPTION: Shows how to record a payment received using the cash accounting method. In this method, revenue is recorded only when money is actually received.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Invoicing.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2020-02-15 * AB Inc. | receive full payment\n    revenues:consulting:ab     $-1000\n    assets:checking             $1000\n```\n\n----------------------------------------\n\nTITLE: Time Tracking in Timeclock Format (Ledger/hledger)\nDESCRIPTION: Shows time tracking using the timeclock format, which records clock-in and clock-out times for activities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_6\n\nLANGUAGE: timeclock\nCODE:\n```\n# a.timeclock (hledger), or can be inlined in your main journal (ledger)\ni 2009/03/27 09:00:00 projects:a\no 2009/03/27 17:00:34\ni 2009/03/31 22:21:45 personal:reading:online\no 2009/04/01 02:00:34\ni 2009/04/02 09:00:00 projects:b\no 2009/04/02 17:00:34\n```\n\n----------------------------------------\n\nTITLE: Defining Commodity Directive in Beancount\nDESCRIPTION: Demonstrates how to define a commodity in Beancount, including metadata such as name and asset class.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_22\n\nLANGUAGE: beancount\nCODE:\n```\n1867-01-01 commodity CAD\n    name: \"Canadian Dollar\"\n    asset-class: \"cash\"\n```\n\n----------------------------------------\n\nTITLE: Ledger Date Format Examples\nDESCRIPTION: Shows the various date formats supported by Ledger, including year-month-day formats with different separators.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nYYYY-MM-DD\nYYYY/MM/DD\nYYYY.MM.DD\nMM-DD\nMM/DD\nMM.DD\n```\n\n----------------------------------------\n\nTITLE: Ledger Commodity Directive Examples\nDESCRIPTION: Shows how to define commodities with various subdirectives for formatting and behavior configuration.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\ncommodity COMMODITY\n\ncommodity EUR\ncommodity $\n  note American Dollars\n  format $1,000.00\n  nomarket\n  default\n```\n\n----------------------------------------\n\nTITLE: Balance Output for Detailed Version of Multiple Currency Transaction\nDESCRIPTION: The balance output from the detailed version, showing all accounts in balance with equity conversion accounts balanced to zero. This provides a complete audit trail while ensuring accounts balance properly in USD.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n              $ 5.74  JS:assets:receivable:cl:reimbursement\n                   0  JS:equity:conversion\n             $ -5.74  JS:liabilities:payable:sm:reimbursement\n             $ -5.74  sm:assets:bank:wf:pchecking\n                   0  sm:assets:online:paypal\n              $ 5.74  sm:assets:receivable:JS:reimbursement\n--------------------\n                   0  \n```\n\n----------------------------------------\n\nTITLE: Time Tracking in TSV Format (hledger)\nDESCRIPTION: Shows a compact one-line-per-day time tracking setup using TSV (Tab-Separated Values) format with hledger.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_8\n\nLANGUAGE: tsv\nCODE:\n```\n# a.tsv\n2022-01-01\t2\t1.5\t2.5\n2022-01-02\t0\t3\t0\n```\n\n----------------------------------------\n\nTITLE: Executing hLedger Balance Command with Daily Report for TSV Data\nDESCRIPTION: Command to display a daily balance report from the TSV format time tracking data using hLedger.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_10\n\nLANGUAGE: cli\nCODE:\n```\n$ hledger -f a.tsv bal -D\n```\n\n----------------------------------------\n\nTITLE: Generating Daily Balance Report from TSV (hledger)\nDESCRIPTION: Command-line instruction to generate a daily balance report using hledger with the TSV time tracking file.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_10\n\nLANGUAGE: cli\nCODE:\n```\n$ hledger -f a.tsv bal -D\n```\n\n----------------------------------------\n\nTITLE: Beancount Balance Assertion\nDESCRIPTION: Demonstrates balance assertion syntax used to verify account balances at specific dates. Can assert balances for different commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_4\n\nLANGUAGE: beancount\nCODE:\n```\n2014-08-09 balance Assets:Cash 562.00 USD\n2014-08-09 balance Assets:Cash 210.00 CAD\n```\n\n----------------------------------------\n\nTITLE: Defining Account Directive in Ledger\nDESCRIPTION: Demonstrates how to define an account with various subdirectives in Ledger, including notes, aliases, payee matching, and assertions.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_19\n\nLANGUAGE: ledger\nCODE:\n```\naccount Revenues:Salary\naccount Expenses:Food:Chicken\n    note chicken food expenses\n    alias food\n    payee ^(KFC|Popeyes)$\n    check commodity == \"$\"\n    assert commodity == \"$\"\n    eval print(\"Hello!\")\n    default\n```\n\n----------------------------------------\n\nTITLE: Ledger Directive Structure\nDESCRIPTION: Shows the general structure of directives in Ledger and lists the available directive keywords.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nKEYWORD ARGS...\n   [SUBDIRECTIVES]\n\naccount \n\nalias\napply\nassert\nbucket\ncapture\ncheck\ncomment\ncommodity\ndefine\nend\nexpr\nfixed\ninclude\nP \n\npayee\ntag\ntest\nyear\n\nTimeclock directives:\ni\no\nb\nh\n```\n\n----------------------------------------\n\nTITLE: Comment Syntax in Plain Text Accounting Systems\nDESCRIPTION: Shows the different ways to write comments in Ledger, hledger, and Beancount. Each system supports slightly different comment markers, with Ledger offering the most options.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n; comment\n# comment\n% comment\n| comment\n* comment and org-mode outline node\n\n\n```\n\n----------------------------------------\n\nTITLE: Adjusting House Price in Beancount\nDESCRIPTION: This snippet shows how to record a change in the house's market value using Beancount's price directive.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_7\n\nLANGUAGE: journal\nCODE:\n```\n2021-01-01 price H123         220,000.00 USD\n  note: \"Market value increases\" ; bean-report holdings will show this increase.\n```\n\n----------------------------------------\n\nTITLE: Defining Commodity Directive in Ledger\nDESCRIPTION: Illustrates how to define a commodity in Ledger with various attributes like notes, formatting, and default settings.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_21\n\nLANGUAGE: ledger\nCODE:\n```\ncommodity EUR\ncommodity $\n    note American Dollars\n    format $1,000.00\n    nomarket\n    default\n```\n\n----------------------------------------\n\nTITLE: Ledger Comment Syntax Examples\nDESCRIPTION: Demonstrates various comment styles supported in Ledger journal files, including single-line comments with different prefix characters.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n; comment\n# comment\n% comment\n| comment\n* comment and org-mode outline node\n```\n\n----------------------------------------\n\nTITLE: Beancount Comments Syntax\nDESCRIPTION: Shows how to write comments in Beancount using semicolon prefix. Any unrecognized line is treated as a comment.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_1\n\nLANGUAGE: beancount\nCODE:\n```\n; comment\n```\n\n----------------------------------------\n\nTITLE: Declaring Commodities for House Tracking in Beancount\nDESCRIPTION: This example demonstrates how to declare commodities in Beancount for tracking a house as an asset.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_4\n\nLANGUAGE: journal\nCODE:\n```\n* Commodities and Currencies\n\n2020-01-01 commodity USD\n2020-01-01 commodity H123\n  address: \"123 Any Street, Beverley Hills,  90210\"\n  ; we record that we have a house with this commodity\n```\n\n----------------------------------------\n\nTITLE: Beancount Commodity Declaration\nDESCRIPTION: Demonstrates how to declare and attach metadata to commodities using the commodity directive.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/beancount.md#2025-04-21_snippet_6\n\nLANGUAGE: beancount\nCODE:\n```\n1867-01-01 commodity CAD\n   name: \"Canadian Dollar\"\n   asset-class: \"cash\"\n```\n\n----------------------------------------\n\nTITLE: Register Output for Compact Version of Multiple Currency Transaction\nDESCRIPTION: The register output from the compact version, showing both EUR and USD currencies tracked separately in the accounting system. This makes currency positions clear but requires conversion for balance reporting.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n2022-03-16 mail-tester.com | for client             JS:assets:receivable:cl:reimbursement            €5.00         €5.00\n                                                    sm:assets:bank:wf:pchecking                     $-5.74        $-5.74\n                                                                                                                   €5.00\n                                                    JS:liabilities:payable:sm:reimbursement         $-5.74       $-11.48\n                                                                                                                   €5.00\n                                                    sm:assets:receivable:JS:reimbursement            $5.74        $-5.74\n                                                                                                                   €5.00\n```\n\n----------------------------------------\n\nTITLE: Account Naming Conventions in Plain Text Accounting\nDESCRIPTION: Shows the account naming structure across systems with examples. Demonstrates the hierarchical nature of accounts using colons as separators and the different conventions regarding capitalization and spacing.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nTOPACCT[:SUBACCT[:...]]\n\nRevenues:Salary\nliabilities:credit card:CITI 1234\nother assets:house\n\n\n```\n\n----------------------------------------\n\nTITLE: Register Output for Detailed Version of Multiple Currency Transaction\nDESCRIPTION: The register output from the detailed version, showing all six separate transactions that make up the full process, including currency conversions, transfer to PayPal, payment processing, and business obligations.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Multiple-currencies.md#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n2022-03-16 mail-tester.com | for client             sm:assets:online:paypal                         €-5.00        €-5.00\n                                                    JS:assets:receivable:cl:reimbursement            €5.00             0\n2022-03-16 T0300 for 6J734837CW8252237 Total price  sm:assets:online:paypal                         $ 5.74        $ 5.74\n                                                    sm:assets:bank:wf:pchecking                    $ -5.74             0\n2022-03-16 T0200 for 6J734837CW8252237 Total price  sm:assets:online:paypal                        $ -5.74       $ -5.74\n                                                    JS:equity:conversion                            $ 5.74             0\n2022-03-16 T0200 for 6J734837CW8252237 Total price  JS:equity:conversion                            €-5.00        €-5.00\n                                                    sm:assets:online:paypal                          €5.00             0\n2022-03-16 note business obligation to repay per..  JS:liabilities:payable:sm:reimbursement        $ -5.74       $ -5.74\n                                                    sm:assets:receivable:JS:reimbursement           $ 5.74             0\n2022-03-16 convert cl receivable from 6J734837CW..  JS:assets:receivable:cl:reimbursement           €-5.00        €-5.00\n                                                    JS:equity:conversion                             €5.00             0\n                                                    JS:equity:conversion                           $ -5.74       $ -5.74\n                                                    JS:assets:receivable:cl:reimbursement           $ 5.74             0\n```\n\n----------------------------------------\n\nTITLE: Checking Holdings Report in Beancount\nDESCRIPTION: This example demonstrates the output of the 'bean-report holdings' command, showing the current state of assets and liabilities related to the house and mortgage.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Mortgages.md#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n$ bean-report house.bean holdings\n\nAccount                          Units  Currency  Cost Currency  Average Cost       Price   Book Value  Market Value\n-------------------------  -----------  --------  -------------  ------------  ----------  -----------  ------------\nAssets:Bank                   4,577.52       USD            USD                               4,577.52      4,577.52\nAssets:House:H123                 1.00      H123            USD    200,000.00  220,000.00   200,000.00    220,000.00\nLiabilities:Mortgage:H123  -178,698.86       USD            USD                            -178,698.86   -178,698.86\n-------------------------  -----------  --------  -------------  ------------  ----------  -----------  ------------\n```\n\n----------------------------------------\n\nTITLE: Ledger Balance Assertion Example\nDESCRIPTION: Demonstrates how to use balance assertions to verify account balances at specific points in the journal.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n2016-03-10\n   Expenses:Food      $20\n   Assets:Cash       $-20 = $80\n```\n\n----------------------------------------\n\nTITLE: Recording Transaction Date with Clearing Note as Posting Comment\nDESCRIPTION: Records the transaction with the primary date and adds a note about the clearing date as a comment on the specific posting. This keeps the clearing information linked directly to the affected account.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2022-01-01\n    assets:checking       -50  ; cleared on the 8th\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Ledger Balance Assignment Example\nDESCRIPTION: Shows how to use balance assignments to automatically calculate transaction amounts based on desired ending balances.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n2012-03-10 Adjustment\n   Assets:Cash            = $50\n   Expenses:Misc\n```\n\n----------------------------------------\n\nTITLE: Generating Balance Report with Ledger (Strict Mode)\nDESCRIPTION: Command-line instruction to generate a balance report using Ledger in pedantic mode, which enforces strict rules.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_2\n\nLANGUAGE: cli\nCODE:\n```\n$ ledger -f b.journal --pedantic bal\n```\n\n----------------------------------------\n\nTITLE: Balance Assertions in Ledger\nDESCRIPTION: How to assert account balances in Ledger format by adding an equals sign and amount after a posting. Demonstrates checking the running balance at specific points in the transaction history.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\n= AMOUNT (after posting amount & price)\n\n2016-03-10\n    Expenses:Food      $20\n    Assets:Cash       $-20 = $80\n```\n\n----------------------------------------\n\nTITLE: Generating Balance Report with hledger (Strict Mode)\nDESCRIPTION: Command-line instruction to generate a balance report using hledger in strict mode.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_3\n\nLANGUAGE: cli\nCODE:\n```\n$ hledger -f b.journal -s bal\n```\n\n----------------------------------------\n\nTITLE: Recording Transaction Date with Clearing Note in Description\nDESCRIPTION: A simple approach to record a transaction with the primary date, adding a note about the clearing date in the transaction description. Works with all plain text accounting tools.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n2022-01-01 doctor, cleared on the 8th\n    assets:checking       -50\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Executing Ledger Balance Command with Pedantic Option\nDESCRIPTION: Command to display the balance of accounts in a ledger file using the pedantic option, which enforces stricter validation rules.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_2\n\nLANGUAGE: cli\nCODE:\n```\n$ ledger -f b.journal --pedantic bal\n```\n\n----------------------------------------\n\nTITLE: Feature Reference Links in Markdown\nDESCRIPTION: Markdown link definitions for various features and capabilities of plain text accounting tools, including budgeting, importing, and precision handling.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/index.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- other features -->\n\n[l account names]:          https://ledger-cli.org/doc/ledger3.html#Structuring-your-Accounts\n[h account names]:          https://hledger.org/hledger.html#account-names\n[b account names]:          https://beancount.github.io/docs/beancount_language_syntax.html#accounts\n```\n\n----------------------------------------\n\nTITLE: Recording Transaction Date with Custom Tag for Clearing Date in hledger\nDESCRIPTION: Uses a custom tag to record the clearing date in hledger, allowing for potentially more structured queries based on the tag while maintaining the primary transaction date.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n; hledger\n2022-01-01\n    assets:checking       -50  ; cleared-date:2022-01-08\n    expenses:health        50\n```\n\n----------------------------------------\n\nTITLE: Incorrect Transaction Indentation Example\nDESCRIPTION: Shows incorrect formatting where second and third lines are not indented, which will cause errors in the accounting software.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/15 Acme\nExpenses:Household   $20.00 ;roadrunner trap\nLiabilities:CreditCard\n```\n\n----------------------------------------\n\nTITLE: Recording Transaction Date with Custom Tag for Clearing Date in Beancount\nDESCRIPTION: Beancount implementation of recording a transaction with the primary date and a custom metadata tag for the clearing date, associated with the specific posting.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_3\n\nLANGUAGE: beancount\nCODE:\n```\n; beancount\n2022-01-01 open Assets:Bank:Checking\n2022-01-01 open Expenses:Health\n\n2022-01-01 * \"doctor\"\n  Assets:Bank:Checking                     -50 USD\n    cleared-date: 2022-01-08\n  Expenses:Health                           50 USD\n```\n\n----------------------------------------\n\nTITLE: Correct Spacing Between Category and Amount\nDESCRIPTION: Shows proper spacing with at least two spaces between the category and amount.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_2\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/15 Acme\n  Expenses:Household  $20.00\n  Liabilities:CreditCard\n```\n\n----------------------------------------\n\nTITLE: Transaction Structure in Ledger\nDESCRIPTION: The basic structure of a transaction in Ledger format, showing date, flag, code, description and posting format with indentation. Includes flags indicating cleared status and optional balance assertions.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE [FLAG] [(CODE)] DESCRIPTION\n    [FLAG] ACCOUNT  AMOUNT [PRICE] [=BAL]\n    ...\n    [FLAG] ACCOUNT  [AMOUNT [PRICE] [=BAL]]\n```\n\n----------------------------------------\n\nTITLE: Incorrect Spacing Between Category and Amount\nDESCRIPTION: Demonstrates incorrect spacing with only one space between category and amount.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_3\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/15 Acme\n  Expenses:Household $20.00\n  Liabilities:CreditCard\n```\n\n----------------------------------------\n\nTITLE: Time Tracking in Beancount Format\nDESCRIPTION: Demonstrates time tracking using Beancount, which is always strict. It includes account opening declarations and a transaction with time entries.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_4\n\nLANGUAGE: beancount\nCODE:\n```\n# a.beancount\n2000-01-01 open Equity:Time\n2000-01-01 open Expenses:Time:Work\n2000-01-01 open Expenses:Time:Rest\n2000-01-01 open Expenses:Time:Play\n\n2022-01-01 txn\n   Expenses:Time:Work   2 HRS\n   Expenses:Time:Rest   1.5 HRS\n   Expenses:Time:Play   2.5 HRS\n   Equity:Time\n```\n\n----------------------------------------\n\nTITLE: Missing Currency Symbol Example\nDESCRIPTION: Shows incorrect format where currency symbol is omitted, which can cause processing errors.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_4\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/15 Acme\n  Expenses:Household   20.00\n  Liabilities:CreditCard\n```\n\n----------------------------------------\n\nTITLE: Time Tracking with Beancount Format\nDESCRIPTION: Example of tracking time using Beancount, which requires explicit account opening declarations and balanced transactions. Beancount enforces strict validation by design.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_4\n\nLANGUAGE: beancount\nCODE:\n```\n# a.beancount\n2000-01-01 open Equity:Time\n2000-01-01 open Expenses:Time:Work\n2000-01-01 open Expenses:Time:Rest\n2000-01-01 open Expenses:Time:Play\n\n2022-01-01 txn\n   Expenses:Time:Work   2 HRS\n   Expenses:Time:Rest   1.5 HRS\n   Expenses:Time:Play   2.5 HRS\n   Equity:Time\n```\n\n----------------------------------------\n\nTITLE: Incorrect Decimal Separator Usage\nDESCRIPTION: Demonstrates incorrect use of comma instead of decimal point for fractional amounts.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_5\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/16 Mega Yacht Company\n   Expenses:Leisure   $1,245,449,72\n   Assets:Bank:Checking\n```\n\n----------------------------------------\n\nTITLE: Strict Time Tracking in Journal Format (Ledger/hledger)\nDESCRIPTION: Shows a strict version of time tracking in journal format, which disallows undeclared accounts and commodities. It includes commodity and account declarations.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_1\n\nLANGUAGE: journal\nCODE:\n```\n# b.journal\ncommodity h\naccount time:work\naccount time:rest\naccount time:play\n\n2022-01-01\n   (time:work)   2h\n   (time:rest)   1.5h\n   (time:play)   2.5h\n```\n\n----------------------------------------\n\nTITLE: Correct Decimal Separator Usage\nDESCRIPTION: Shows proper use of decimal point for fractional amounts in currency values.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Dont-Sink-Your-First-Attempts-at-Plaintext-Accounting.md#2025-04-21_snippet_6\n\nLANGUAGE: journal\nCODE:\n```\n2017/01/16 Mega Yacht Company\n   Expenses:Leisure   $1,245,449.72\n   Assets:Bank:Checking\n```\n\n----------------------------------------\n\nTITLE: Basic Time Tracking in Journal Format (Ledger/hledger)\nDESCRIPTION: Demonstrates how to track time using non-balanced postings in the journal format. This example shows time entries for work, rest, and play.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_0\n\nLANGUAGE: journal\nCODE:\n```\n# a.journal\n2022-01-01\n   (time:work)   2h\n   (time:rest)   1.5h\n   (time:play)   2.5h\n```\n\n----------------------------------------\n\nTITLE: Retrieving Indian Mutual Fund Prices in Bash\nDESCRIPTION: Link to a Bash script that fetches mutual fund prices from Indian sources for use with Ledger plaintext accounting.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Looking-up-current-prices-by-ISIN.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttps://github.com/the-solipsist/scripts/blob/master/ledger_get-indian-mf-prices.sh\n```\n\n----------------------------------------\n\nTITLE: Basic Transaction Structure in Plain Text Accounting\nDESCRIPTION: Demonstrates the basic structure of transactions across the three accounting systems. Shows the required format for date, description, accounts, and amounts, highlighting subtle differences between systems.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nDATE [DESCRIPTION]\n  ACCOUNT    AMOUNT\n  ACCOUNT    [AMOUNT]\n\n\n```\n\n----------------------------------------\n\nTITLE: Ledger Market Price Directive Syntax\nDESCRIPTION: Demonstrates how to record market prices for commodities using the P directive.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nP DATE TIME COMMODITY UNITPRICE\n\nP 2004/06/21 02:18:02 AAPL $32.91\nP 2004/06/21 02:18:02 AU $400.00\n```\n\n----------------------------------------\n\nTITLE: Querying Transactions with Primary and Secondary Dates\nDESCRIPTION: Shows how to query transactions when using primary and secondary dates, demonstrating the use of the --effective flag to switch between date types.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Recording-dates.md#2025-04-21_snippet_10\n\nLANGUAGE: cli\nCODE:\n```\n$ ledger reg expenses              # shows 1/1\n$ ledger reg checking --effective  # shows 1/8\n```\n\n----------------------------------------\n\nTITLE: Running Local Preview with Make Watch\nDESCRIPTION: Command to start a local development server with live reload for previewing changes to the website. Requires pandoc and livereloadx to be installed.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake watch\n```\n\n----------------------------------------\n\nTITLE: TSV Import Rules for Time Tracking (hledger)\nDESCRIPTION: Defines import rules for the TSV time tracking file, specifying field mappings, amounts, and accounts for hledger.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_9\n\nLANGUAGE: rules\nCODE:\n```\n# a.tsv.rules\nskip 1\nfields date, work, rest, play\namount1  %work h\namount2  %rest h\namount3  %play h\naccount1 (time:work)\naccount2 (time:rest)\naccount3 (time:play)\n```\n\n----------------------------------------\n\nTITLE: Rules File for Parsing TSV Time Tracking Data in hLedger\nDESCRIPTION: Configuration rules for hLedger to interpret the TSV file format, defining field mappings, amounts, and account names for each column of time data.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_9\n\nLANGUAGE: rules\nCODE:\n```\n# a.tsv.rules\nskip 1\nfields date, work, rest, play\namount1  %work h\namount2  %rest h\namount3  %play h\naccount1 (time:work)\naccount2 (time:rest)\naccount3 (time:play)\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository\nDESCRIPTION: Git command to clone the plaintextaccounting website repository to your local machine. This is commented out in the original documentation.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/plaintextaccounting/plaintextaccounting.wiki.git\n```\n\n----------------------------------------\n\nTITLE: Ledger Account Directive Examples\nDESCRIPTION: Shows how to define accounts with various subdirectives for additional functionality and validation.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/ledger.md#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\naccount ACCOUNT \n   [SUBDIRECTIVES]\n\naccount Revenues:Salary\naccount Expenses:Food:Chicken\n   note chicken food expenses\n   alias food\n   payee ^(KFC|Popeyes)$\n   check commodity == \"$\"\n   assert commodity == \"$\"\n   eval print(\"Hello!\")\n   default\n```\n\n----------------------------------------\n\nTITLE: Date Format Specifications in Plain Text Accounting\nDESCRIPTION: Lists the supported date formats in Ledger, hledger, and Beancount. Shows various ways to write dates, with Beancount being the most restrictive, officially supporting only the ISO format.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nYYYY-MM-DD\nYYYY/MM/DD\nYYYY.MM.DD\nMM-DD\nMM/DD\nMM.DD\n\n\n```\n\n----------------------------------------\n\nTITLE: Executing hLedger Balance Command with Strict Option\nDESCRIPTION: Command to display the balance of accounts in an hLedger file with the strict option enabled, which enforces validation of accounts and commodities.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_3\n\nLANGUAGE: cli\nCODE:\n```\n$ hledger -f b.journal -s bal\n```\n\n----------------------------------------\n\nTITLE: Command Reference Links in Markdown\nDESCRIPTION: Markdown link definitions for various command references and documentation URLs for plain text accounting tools, organized by tool type and functionality.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- commands -->\n\n[l accounts]:    https://ledger-cli.org/doc/ledger3.html#accounts\n[l balance]:     https://ledger-cli.org/doc/ledger3.html#The-balance-command\n[l cleared]:     https://ledger-cli.org/doc/ledger3.html#Cleared-Report\n```\n\n----------------------------------------\n\nTITLE: Generating Balance Report with Beancount\nDESCRIPTION: Command-line instruction to generate a balance report using Beancount's bean-report tool.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking.md#2025-04-21_snippet_5\n\nLANGUAGE: cli\nCODE:\n```\n$ bean-report a.beancount bal\n```\n\n----------------------------------------\n\nTITLE: HTML Navigation Links\nDESCRIPTION: Navigation structure for linking to different sections including Ledger, hledger, and Beancount documentation\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n**[Big 3](index.html)**\n| [Ledger](ledger.html)\n| [hledger](hledger.html)\n| [Beancount](beancount.html)\n```\n\n----------------------------------------\n\nTITLE: Executing Beancount Balance Report Command\nDESCRIPTION: Command to generate a balance report from a Beancount file, displaying total time spent in each category.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Time-tracking/index.md#2025-04-21_snippet_5\n\nLANGUAGE: cli\nCODE:\n```\n$ bean-report a.beancount bal\n```\n\n----------------------------------------\n\nTITLE: Mnemonic for Debit and Credit in Plain Text Accounting\nDESCRIPTION: A visual representation of the relationship between debits and credits in Plain Text Accounting, using signed numbers and associated concepts.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/FAQ.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n          debit | credit\n             to | from  \n             in | out   \n           plus | minus \n           left | right \n    short words | longer words\n```\n\n----------------------------------------\n\nTITLE: Configuration Reference Links in Markdown\nDESCRIPTION: Markdown link definitions for configuration-related documentation and API references across different plain text accounting tools.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- configuration -->\n\n[l config]:          https://ledger-cli.org/doc/ledger3.html#Basic-options\n[h config]:          https://hledger.org/hledger.html#config-files\n[l expression lang]: https://ledger-cli.org/doc/ledger3.html#Value-Expressions\n```\n\n----------------------------------------\n\nTITLE: Building the Site with Make\nDESCRIPTION: Command to build the website using GNU Make and Pandoc (version 2.5+). This generates the HTML files from markdown sources.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake\n```\n\n----------------------------------------\n\nTITLE: Retrieving Indian Stock Prices from BSE in Bash\nDESCRIPTION: Link to a Bash script that fetches stock prices from the Bombay Stock Exchange (BSE) for use with Ledger plaintext accounting.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/Looking-up-current-prices-by-ISIN.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttps://github.com/the-solipsist/scripts/blob/master/ledger_get-indian-stock-prices_bse.sh\n```\n\n----------------------------------------\n\nTITLE: Running Pandoc Preview with Live Reloading\nDESCRIPTION: Command to start a live-updating preview of the website using watchexec and livereloadx. This enables real-time viewing of changes made to the markdown source files.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake watch\n```\n\n----------------------------------------\n\nTITLE: HTML Link Element\nDESCRIPTION: HTML link tag for including an external CSS stylesheet named quickref.css\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"quickref.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Implementing PayPal Donation Buttons with JavaScript\nDESCRIPTION: JavaScript code that renders PayPal donation buttons for both supporting the Plain Text Accounting organization and Simon Michael directly. The script uses the PayPal Donation SDK to create customized buttons with branded images.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/finance.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nPayPal.Donation.Button({\nenv:'production',\nhosted_button_id:'JDD3EZEA8JV6S',\nimage: {\nsrc:'https://img.shields.io/badge/Support_PTA_via-Paypal-limegreen',\nalt:'Support PTA via Paypal',\ntitle:'Support PTA via Paypal',\n}\n}).render('#paypal-pta-button');\n\nPayPal.Donation.Button({\nenv:'production',\nhosted_button_id:'YPRN7KXV8LAQJ',\nimage: {\nsrc:'https://img.shields.io/badge/Support_Simon_via-Paypal-limegreen',\nalt:'Support Simon via Paypal',\ntitle:'Support Simon via Paypal',\n}\n}).render('#paypal-sm-button');\n```\n\n----------------------------------------\n\nTITLE: Custom Table Styling with HTML\nDESCRIPTION: HTML style definitions for customizing the appearance of the Plain Text Accounting applications comparison table. The styling removes table borders, adjusts padding, adds thin bottom borders to table cells, sets vertical alignment to top, and defines specific column widths.\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/index.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<style>\nth, td { border:none; padding-top:0; padding-bottom:0; border-bottom:thin solid #ddd; vertical-align:top; }\nth { width:30%; }\nth:first-child { width:10%; }\nth:first-child, td:first-child { white-space:nowrap; }\n</style>\n```\n\n----------------------------------------\n\nTITLE: HTML Image with Styling\nDESCRIPTION: Floating right-aligned image element with custom styling and border radius\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"https://en.wikipedia.org/wiki/Rosetta_Stone\" style=\"float:right; margin:0 2em;\"\n    ><img width=300 src=\"images/image00.jpg\" style=\"border-radius:1em;\"></a>\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block setting toc (table of contents) to false\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/quickref/index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntoc: false\n...\n```\n\n----------------------------------------\n\nTITLE: Custom CSS Style for Table Links\nDESCRIPTION: CSS styling to remove text decoration and inherit color for strong links in the first table cell\nSOURCE: https://github.com/plaintextaccounting/plaintextaccounting/blob/master/src/index.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\ntd:first-child strong a {\n  text-decoration:none;\n  color:inherit;\n}\n```"
  }
]
[
  {
    "owner": "tesla0225",
    "repo": "chromeextension",
    "content": "TITLE: Chrome Extension Permissions (manifest.json)\nDESCRIPTION: This JSON snippet shows the required permissions in the Chrome extension's manifest.json file. These permissions are necessary for the MCP server to interact with the Chrome browser.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_10\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"permissions\": [\n \"activeTab\",\n \"scripting\",\n \"cookies\",\n \"management\",\n \"tabs\"\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Chrome Extension Permissions (JSON)\nDESCRIPTION: Specifies the required permissions for the Chrome extension in the `manifest.json` file. These permissions allow the extension to access tabs, scripting capabilities, cookies, management APIs, and active tab information.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"permissions\": [\n    \"activeTab\",\n    \"scripting\",\n    \"cookies\",\n    \"management\",\n    \"tabs\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example setText Operation\nDESCRIPTION: This JSON snippet represents a DOM operation to set the text content of an element using setText. The `action` is set to `setText`, `selector` targets the element, and `value` sets the new text.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_7\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"action\": \"setText\",\n \"selector\": \"#my-element\",\n \"value\": \"New text\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example querySelector Operation\nDESCRIPTION: This JSON snippet represents a DOM operation to get element information using querySelector. The `action` is set to `querySelector` and the `selector` specifies the CSS selector of the target element.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"action\": \"querySelector\",\n \"selector\": \"#my-element\"\n}\n```\n\n----------------------------------------\n\nTITLE: DOM Operation Structure (TypeScript)\nDESCRIPTION: Defines the structure for specifying DOM operations to be executed within a web page using `chrome_execute_script`.  The `action` field specifies the type of operation, and other fields provide parameters such as CSS selectors, values, or attributes for the operation.  This allows flexible manipulation of the DOM within the targeted tab.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  action: string;  // 実行する操作の種類\n  selector?: string;  // 要素を特定するCSSセレクタ\n  value?: string | number | boolean;  // 設定する値\n  attribute?: string;  // 属性名\n  tagName?: string;  // createElement用のタグ名\n  attributes?: Record<string, string | number | boolean>;  // 要素の属性\n  innerText?: string;  // テキストコンテンツ\n  elementId?: string;  // appendChild用の要素ID\n  message?: string;  // log操作用のメッセージ\n}\n```\n\n----------------------------------------\n\nTITLE: Example click Operation\nDESCRIPTION: This JSON snippet represents a DOM operation to trigger a click event on an element using click. The `action` is set to `click` and the `selector` specifies the element to click.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_9\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"action\": \"click\",\n \"selector\": \"#my-button\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example createElement Operation\nDESCRIPTION: This JSON snippet represents a DOM operation to create a new element using createElement. It defines the `tagName`, `attributes`, and `innerText` of the new element.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_8\n\nLANGUAGE: JSON\nCODE:\n```\n{\n \"action\": \"createElement\",\n \"tagName\": \"div\",\n \"attributes\": {\n \"class\": \"my-class\",\n \"data-custom\": \"value\"\n },\n \"innerText\": \"New element\"\n}\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (docker)\nDESCRIPTION: This JSON configuration snippet defines the MCP server settings for the chromeextension using Docker. It specifies the command to execute (docker run), arguments, and environment variables, including the Chrome extension ID.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"CHROME_EXTENSION_ID\",\n        \"mcp/chromeextension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (npx) - JSON\nDESCRIPTION: Configures the MCP server to use npx to run the chrome extension server. This configuration is added to the `claude_desktop_config.json` file. The `CHROME_EXTENSION_ID` environment variable must be set with the correct extension ID.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-chrome-extension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (npx)\nDESCRIPTION: This JSON configuration snippet defines the MCP server settings for the chromeextension using npx. It specifies the command to execute, arguments to pass, and environment variables to set, including the Chrome extension ID.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-chrome-extension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (Docker) - JSON\nDESCRIPTION: Configures the MCP server to use Docker to run the chrome extension server. This configuration is added to the `claude_desktop_config.json` file. The `CHROME_EXTENSION_ID` environment variable must be set and passed to the Docker container.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"CHROME_EXTENSION_ID\",\n        \"mcp/chromeextension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Running Docker Container\nDESCRIPTION: This set of commands builds and runs the Docker container for the Chrome Extension MCP. The first command builds the image, and the second command runs it in interactive mode, removing it after it exits.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t mcp/chromeextension -f src/chromeextension/Dockerfile .\ndocker run -i --rm mcp/chromeextension\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image\nDESCRIPTION: This command builds a Docker image for the Chrome Extension MCP server. It uses the Dockerfile located at `src/chromeextension/Dockerfile` and tags the image as `mcp/chromeextension`.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t mcp/chromeextension -f src/chromeextension/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Docker Build Command (Bash)\nDESCRIPTION: Builds a Docker image for the Chrome extension MCP server. This command uses the Dockerfile located in the `src/chromeextension/` directory and tags the image as `mcp/chromeextension`.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t mcp/chromeextension -f src/chromeextension/Dockerfile .\n```\n\n----------------------------------------\n\nTITLE: Extracting Extension Package from Docker\nDESCRIPTION: This command extracts the Chrome extension package from a running Docker container. It copies the `chrome-extension.zip` file from the container to the current directory.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker cp $(docker ps -q -f ancestor=mcp/chromeextension):/app/chrome-extension.zip .\n```\n\n----------------------------------------\n\nTITLE: Navigate to Chrome Extension Directory (Bash)\nDESCRIPTION: Navigates to the extension directory within the chromeextension folder, usually located in the src directory. This command is part of the manual installation steps for the Chrome extension.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README_JP.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd src/chromeextension/extension\n```\n\n----------------------------------------\n\nTITLE: Navigating to Extension Directory\nDESCRIPTION: This command changes the current directory to the extension directory within the source code. This is part of the manual installation process.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd src/chromeextension/extension\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (docker) - Repeat\nDESCRIPTION: Duplicate entry of MCP Server config using docker.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_12\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"docker\",\n      \"args\": [\n        \"run\",\n        \"-i\",\n        \"--rm\",\n        \"-e\",\n        \"CHROME_EXTENSION_ID\",\n        \"mcp/chromeextension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: MCP Server Configuration (npx) - Repeat\nDESCRIPTION: Duplicate entry of MCP Server config using npx.\nSOURCE: https://github.com/tesla0225/chromeextension/blob/main/README.md#_snippet_11\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"mcpServers\": {\n    \"chromeextension\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-chrome-extension\"\n      ],\n      \"env\": {\n        \"CHROME_EXTENSION_ID\": \"your-extension-id\"\n      }\n    }\n  }\n}\n```"
  }
]
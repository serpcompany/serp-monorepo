[
  {
    "owner": "hexpm",
    "repo": "hexpm",
    "content": "TITLE: Publishing Hex Package Non-Interactively using API Key\nDESCRIPTION: This command demonstrates how to publish a Hex package from a CI environment without user prompts. The previously generated API key (`f48ac236bca15c3271e077c15c5320c4`) is passed to the `mix hex.publish` command via the `HEX_API_KEY` environment variable. The `--yes` flag confirms the publish action automatically, skipping any confirmation prompts. This is essential for unattended execution in CI pipelines.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_5\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ HEX_API_KEY=f48ac236bca15c3271e077c15c5320c4 mix hex.publish --yes\n```\n\n----------------------------------------\n\nTITLE: Defining a Mix Project with Hex Dependencies in Elixir\nDESCRIPTION: This example shows how to structure a Mix project file with Hex dependencies. It defines a project with Ecto and Postgrex as Hex dependencies and Cowboy as a Git dependency. The file includes project configuration, application settings, and dependency specifications.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/usage.html.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule MyProject.MixProject do\n  use Mix.Project\n\n  def project() do\n    [\n      app: :my_project,\n      version: \"0.0.1\",\n      elixir: \"~> 1.0\",\n      deps: deps(),\n    ]\n  end\n\n  def application() do\n    []\n  end\n\n  defp deps() do\n    [\n      {:ecto, \"~> 2.0\"},\n      {:postgrex, \"~> 0.8.1\"},\n      {:cowboy, github: \"ninenines/cowboy\"},\n    ]\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Publishing Packages in CI Environment\nDESCRIPTION: Command to publish packages non-interactively using HEX_API_KEY environment variable and --yes flag for CI environments.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/003-hex-v018-released.html.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.publish --yes\n```\n\n----------------------------------------\n\nTITLE: Generating Organization API Key for Hex Publishing via Mix\nDESCRIPTION: This command generates a new API key associated with a specific organization (`acme` in this example) on Hex.pm. Similar to the user key, it's named (`publish-ci`) and granted `api:write` permission for publishing. The user will be prompted for their local password (likely related to organization credentials or local security). Using an organization key is recommended when publishing packages belonging to an organization.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_4\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.organization key acme generate --key-name publish-ci --permission api:write\nLocal password:\nf48ac236bca15c3271e077c15c5320c4\n```\n\n----------------------------------------\n\nTITLE: Generating User API Key for Hex Publishing via Mix\nDESCRIPTION: This command generates a new API key associated with a specific user account on Hex.pm. The key is given a name (`publish-ci`) for identification and granted `api:write` permission, which is necessary for publishing packages. The user will be prompted for their Hex username and password. The output displays the generated API key.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_3\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.user key generate --key-name publish-ci --permission api:write\nUsername:\nAccount password:\nGenerating key...\nf48ac236bca15c3271e077c15c5320c4\n```\n\n----------------------------------------\n\nTITLE: Registering Hex User via Command Line\nDESCRIPTION: Example of registering a new user account on Hex package manager using the mix hex.user register command. Shows the interactive prompt flow for username, email and password.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_0\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.user register\nUsername: johndoe\nEmail: john.doe@example.com\nPassword:\nPassword (confirm):\nRegistering...\nGenerating API key...\nYou are required to confirm your email to access your account, a confirmation email has been sent to john.doe@example.com\n```\n\n----------------------------------------\n\nTITLE: Publishing Package to Hex Repository\nDESCRIPTION: Example showing the output of publishing a package to Hex using the mix hex.publish command, including confirmation of dependencies, files to be included, and successful publication.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_2\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.publish\nPublishing postgrex v0.4.0\n  Dependencies:\n    decimal ~> 0.1.0\n  Excluded dependencies (not part of the Hex package):\n    ex_doc\n  Included files:\n    lib/postgrex\n    lib/postgrex/binary_utils.ex\n    lib/postgrex/connection.ex\n    lib/postgrex/protocol.ex\n    lib/postgrex/records.ex\n    lib/postgrex/types.ex\n    mix.exs\nProceed? [Yn] Y\nPublished postgrex v0.4.0\n```\n\n----------------------------------------\n\nTITLE: Authenticating an Organization in Mix CLI\nDESCRIPTION: Command for authenticating with a Hex.pm organization using the mix hex.organization task. This establishes access to the organization's private packages repository.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/private.html.md#2025-04-22_snippet_0\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.organization auth acme\n```\n\n----------------------------------------\n\nTITLE: Generating Organization Authentication Keys in Mix CLI\nDESCRIPTION: Command for generating an authentication key for an organization, which can be used for non-interactive authentication on CI servers.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/private.html.md#2025-04-22_snippet_3\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.organization key acme generate\nPassphrase: ...\n126d49fb3014bd26457471ebae97c625\n```\n\n----------------------------------------\n\nTITLE: Configuring Permanent Mirror URL in Mix\nDESCRIPTION: This shell command configures the Hex package manager to use a permanent mirror by setting the mirror URL in the mix configuration. No additional dependencies are required, but prior installation of Elixir and Mix is necessary. The command expects a valid mirror URL as input and does not produce output except for potential error messages if the command fails.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/mirrors.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ mix hex.config mirror_url https://repo.hex.pm\n```\n\n----------------------------------------\n\nTITLE: Authenticating with an Organization Key in Mix CLI\nDESCRIPTION: Command for authenticating with a Hex.pm organization using a pre-generated key. This approach is ideal for CI environments where interactive authentication isn't possible.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/private.html.md#2025-04-22_snippet_4\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ mix hex.organization auth acme --key 126d49fb3014bd26457471ebae97c625\n```\n\n----------------------------------------\n\nTITLE: Publishing Package to Hex\nDESCRIPTION: Example output of the package publishing process using rebar3 hex publish command.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_6\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ rebar3 hex publish\nPublishing relx 3.5.0\n  Dependencies:\n    bbmustache 1.0.3\n    erlware_commons 0.15.0\n    getopt 0.8.2\n    providers 1.4.1\n  Excluded dependencies (not part of the Hex package):\n\n  Included files:\n    src/relx.app.src\n    src/relx.erl\n    src/rlx_app_discovery.erl\n    src/rlx_app_info.erl\n    src/rlx_cmd_args.erl\n    src/...\n    include/relx.hrl\n    priv/...\n    rebar.config\n    rebar.lock\n    README.md\n    LICENSE.md\nProceed? (\"Y\") Y\nPublished relx 3.5.0\nRunning edoc for relx\nRunning ex_doc for relx\nPublished docs for relx 3.5.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Mix Project File for Hex Package\nDESCRIPTION: Example mix.exs file showing the complete configuration required for publishing a package to Hex, including project metadata, dependencies, description and package settings.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/publish.html.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule Postgrex.MixProject do\n  use Mix.Project\n\n  def project() do\n    [\n      app: :postgrex,\n      version: \"0.1.0\",\n      elixir: \"~> 1.0\",\n      build_embedded: Mix.env == :prod,\n      start_permanent: Mix.env == :prod,\n      description: description(),\n      package: package(),\n      deps: deps(),\n      name: \"Postgrex\",\n      source_url: \"https://github.com/elixir-ecto/postgrex\"\n    ]\n  end\n\n  def application() do\n    []\n  end\n\n  defp deps() do\n    [\n      {:decimal, \"~> 1.0\"},\n      {:ex_doc, \"~> 0.14\", only: :dev, runtime: false}\n    ]\n  end\n\n  defp description() do\n    \"A few sentences (a paragraph) describing the project.\"\n  end\n\n  defp package() do\n    [\n      # This option is only needed when you don't want to use the OTP application name\n      name: \"postgrex\",\n      # These are the default files included in the package\n      files: ~w(lib priv .formatter.exs mix.exs README* readme* LICENSE*\n                license* CHANGELOG* changelog* src),\n      licenses: [\"Apache-2.0\"],\n      links: %{\"GitHub\" => \"https://github.com/elixir-ecto/postgrex\"}\n    ]\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Running Hex Outdated Command in Shell\nDESCRIPTION: Demonstrates the usage of the 'mix hex.outdated' command to check for outdated dependencies in a Mix project.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ mix hex.outdated\n```\n\n----------------------------------------\n\nTITLE: Declaring Organization Dependencies in Elixir Mix Project\nDESCRIPTION: Example of how to specify dependencies in a mix.exs file, demonstrating how to reference both public packages and organization-specific private packages.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/private.html.md#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\ndefp deps() do\n  [\n    # This package will be fetched from the global repository\n    {:ecto, \"~> 2.0\"},\n    # This package will be fetched from the acme organization's repository\n    {:secret, \"~> 1.0\", organization: \"acme\"},\n  ]\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring a Package for Organization Publishing in Elixir\nDESCRIPTION: Mix configuration for designating a package to be published to a specific organization. This is added to the package function in the mix.exs file.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/private.html.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\ndefp package() do\n  [\n    organization: \"acme\",\n    ...\n  ]\nend\n```\n\n----------------------------------------\n\nTITLE: Using Hex Package Differ Command in Mix\nDESCRIPTION: Example of using the mix hex.package diff command to compare different versions of a package. The command downloads package versions and generates a git diff between them.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/009-announcing-hex-diff.html.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\nmix hex.package diff package_name version_from..version_to\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Mix Hex User\nDESCRIPTION: Command to authenticate and generate two API keys - one unencrypted with read access and another encrypted with full access.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/003-hex-v018-released.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.user auth\n```\n\n----------------------------------------\n\nTITLE: Hex User Registration Command\nDESCRIPTION: Example of registering a new user account on Hex using the rebar3 command line interface.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_1\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ rebar3 hex user register\nUsername: johndoe\nEmail: john.doe@example.com\nPassword:\nPassword (confirm):\nRegistering...\nGenerating API key...\nYou are required to confirm your email to access your account, a confirmation email has been sent to john.doe@example.com\n\n```\n\n----------------------------------------\n\nTITLE: Defining Hex Dependencies in Rebar3 Config\nDESCRIPTION: Configuration example showing different ways to specify Hex package dependencies in rebar.config. Demonstrates version constraints, default versioning, and package name aliasing.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_usage.html.md#2025-04-22_snippet_0\n\nLANGUAGE: erlang\nCODE:\n```\n{deps,[\n  ranch,                  %% picks the highest available version\n  {cowboy,\"1.0.1\"},       %% sets the version to use\n  {uuid, {pkg, uuid_erl}} %% app under a different pkg name\n]}.\n```\n\n----------------------------------------\n\nTITLE: Configuring Package Dependencies\nDESCRIPTION: Example rebar.config file showing how to specify Hex package dependencies with their versions.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_2\n\nLANGUAGE: erlang\nCODE:\n```\n{deps, [{erlware_commons, \"0.15.0\"},\n        {providers, \"1.4.1\"},\n        {getopt, \"0.8.2\"},\n        {bbmustache, \"1.0.3\"}\n       ]}.\n\n```\n\n----------------------------------------\n\nTITLE: Authenticating Organization Access on CI Server\nDESCRIPTION: Command line instruction for authenticating with a private organization using an API key, typically used in CI/build server environments.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_private.html.md#2025-04-22_snippet_1\n\nLANGUAGE: nohighlight\nCODE:\n```\n$ rebar3 hex organization auth hexpm:private_org -k <key>\n```\n\n----------------------------------------\n\nTITLE: Configuring Private Repository in Rebar3\nDESCRIPTION: Configuration snippet for declaring a private organization repository in rebar3 config. Uses the format 'parent_repo:organization' to define the repository.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_private.html.md#2025-04-22_snippet_0\n\nLANGUAGE: erlang\nCODE:\n```\n{repos, [\n  #{name => <<\"hexpm:private_org\">>}\n]}.\n```\n\n----------------------------------------\n\nTITLE: Configuring rebar3 Hex Plugin\nDESCRIPTION: Basic rebar.config configuration to enable the Hex plugin for package publishing.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_0\n\nLANGUAGE: erlang\nCODE:\n```\n{plugins, [rebar3_hex]}.\n```\n\n----------------------------------------\n\nTITLE: Generating Organization API Key\nDESCRIPTION: Command to generate an API key for an organization that can be used in CI environments.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/003-hex-v018-released.html.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.organization key ORGANIZATION generate\n```\n\n----------------------------------------\n\nTITLE: Uploading Documentation to Hexdocs\nDESCRIPTION: Command to publish documentation for a package to Hexdocs using Mix. This is the default command when publishing packages.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/005-private-hexdocs.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.publish\n```\n\n----------------------------------------\n\nTITLE: Re-uploading Historical Documentation\nDESCRIPTION: Command to republish documentation for a specific version of a package after checking out that version.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/005-private-hexdocs.html.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.publish docs\n```\n\n----------------------------------------\n\nTITLE: Finding Sponsored Dependencies with Hex Sponsor Command\nDESCRIPTION: Shows the usage of the new 'mix hex.sponsor' command to find dependencies in the current project that have sponsorship links.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ mix hex.sponsor\nDependency  Sponsorship\ncowboy      https://github.com/sponsors/essen\noban        https://getoban.pro\n```\n\n----------------------------------------\n\nTITLE: Package Ownership Transfer Command\nDESCRIPTION: Command to transfer package ownership to an organization using mix hex.owner\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/faq.html.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\nmix hex.owner transfer PACKAGE ORGANIZATION\n```\n\n----------------------------------------\n\nTITLE: Interactive Organization Selection for Package Publishing\nDESCRIPTION: Shows the interactive prompt when publishing a package for the first time to select between personal or organization ownership.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/faq.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nYou are a member of organizations, select if you wish to publish the package with\\nyourself as owner or an organization as owner. If you publish with an organization\\nas owner your package will be public but managed by the organization.\\n\\n  [1] Yourself\\n  [2] acme\\n\\nYour selection: _\n```\n\n----------------------------------------\n\nTITLE: Temporarily Configuring Rebar3 to Use a Mirror\nDESCRIPTION: This shell command sets a temporary Hex mirror for updating package dependencies via an environment variable. Requires Erlang and Rebar3 as dependencies. The `HEX_CDN` parameter needs to be a valid mirror URL; the command does not give output but may report errors if it fails.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/mirrors.html.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ HEX_CDN=https://repo.hex.pm rebar3 update\n```\n\n----------------------------------------\n\nTITLE: Installing Latest Hex Version from GitHub\nDESCRIPTION: Shows how to install the latest version of Hex directly from the GitHub repository using the 'mix archive.install' command.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ mix archive.install github hexpm/hex branch latest\n```\n\n----------------------------------------\n\nTITLE: Comparing Package Versions with Hex Diff Command\nDESCRIPTION: Shows how to use the 'mix hex.package diff' command to compare different versions of a package, specifically comparing Ecto version 3.5.1 to the currently used version.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ mix hex.package diff ecto 3.5.1\n(...)\n@@ -1,15 +1,16 @@\n defmodule Ecto.MixProject do\n   use Mix.Project\n\n-  @version \"3.5.0\"\n+  @version \"3.5.1\"\n(...)\n```\n\n----------------------------------------\n\nTITLE: Generating User API Key\nDESCRIPTION: Command to generate a personal API key that can be used for authentication.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/003-hex-v018-released.html.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmix hex.user key generate\n```\n\n----------------------------------------\n\nTITLE: Adding Sponsorship Link in Elixir Mix Project\nDESCRIPTION: Demonstrates how to add a 'Sponsor' link in the project's mix.exs file to make it eligible for listing in the 'mix hex.sponsor' command output.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\nlinks: %{\n  \"GitHub\" => \"https://github.com/sorentwo/oban\",\n  \"Sponsor\" => \"https://getoban.pro\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Permanent Mirror URL in Rebar3\nDESCRIPTION: This shell command configures rebar3 to utilize a permanent mirror by modifying the `rebar.config` file to include a CDN URL. Dependencies include Erlang and Rebar3. The key parameter is the `rebar_packages_cdn` URL, and successful configuration alters the project or global configuration without direct output.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/mirrors.html.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n{rebar_packages_cdn, \\\"https://repo.hex.pm\\\"}.\n```\n\n----------------------------------------\n\nTITLE: Temporarily Configuring Mix to Use a Mirror\nDESCRIPTION: This shell command allows temporary configuration of the Hex mirror for dependency fetching by setting an environment variable. Dependencies include the Hex package manager and Mix. It requires a valid `HEX_MIRROR` URL and does not produce direct output except for potential error messages.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/mirrors.html.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ HEX_MIRROR=https://repo.hex.pm mix deps.get\n```\n\n----------------------------------------\n\nTITLE: Configuring Hex Settings in Mix Project\nDESCRIPTION: Example showing how to configure Hex settings directly in a Mix project file. Demonstrates setting a custom API URL for a self-hosted private repository through the project configuration.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/008-hex-v020-released.html.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\n# mix.exs\n\ndefmodule MyApp.MixProject\n  def project() do\n    [\n      # ...\n      hex: hex()\n    ]\n  end\n\n  defp hex() do\n    [\n      api_url: \"https://hex.example.com/api\"\n    ]\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Using Compact Version Range in Hex Diff Command\nDESCRIPTION: Demonstrates a more compact way to specify version ranges when using the 'mix hex.package diff' command outside of a Mix project.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/013-hex-v021-released.html.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ mix hex.package diff ecto 3.5.{0,1}\n(...)\n@@ -1,15 +1,16 @@\n defmodule Ecto.MixProject do\n   use Mix.Project\n\n-  @version \"3.5.0\"\n+  @version \"3.5.1\"\n(...)\n```\n\n----------------------------------------\n\nTITLE: Mix Dependencies Configuration\nDESCRIPTION: Elixir code showing how to configure package dependencies with a custom repository.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\ndefp deps() do\n  {:decimal, \"~> 2.0\", repo: \"acme\"}\nend\n```\n\n----------------------------------------\n\nTITLE: Adding hex_core Dependency in Elixir (mix.exs)\nDESCRIPTION: This snippet illustrates how to add the `hex_core` library as a dependency to an Elixir project using the `mix.exs` file. The `{:hex_core, \"~> 0.1\"}` line within the `deps` function specifies that any version compatible with 0.1 (like 0.1.0, 0.1.1, etc.) should be used. Running `mix deps.get` will fetch the dependency.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/004-announcing-hex-core.html.md#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\ndefp deps() do\n  [{:hex_core, \"~> 0.1\"}]\nend\n```\n\n----------------------------------------\n\nTITLE: Adding hex_core Dependency in Erlang (rebar.config)\nDESCRIPTION: This snippet shows how to declare `hex_core` version \"0.1.0\" as a dependency within an Erlang project's `rebar.config` file. This configuration is necessary for `rebar3` to fetch and include the library during the build process.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/004-announcing-hex-core.html.md#2025-04-22_snippet_0\n\nLANGUAGE: erlang\nCODE:\n```\n{deps, [\n  {hex_core, \"0.1.0\"}\n]}\n```\n\n----------------------------------------\n\nTITLE: Counting Hex.pm Packages using hex_core in Erlang Shell\nDESCRIPTION: This example demonstrates interacting with the Hex.pm repository using `hex_core` from within a `rebar3` Erlang shell. It requires starting the `inets` and `ssl` applications, fetching the default `hex_core` configuration, calling `hex_repo:get_names/1` to retrieve package information, and finally calculating the total number of packages. The expected output (6764) indicates the package count at the time the example was written.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/004-announcing-hex-core.html.md#2025-04-22_snippet_1\n\nLANGUAGE: erlang\nCODE:\n```\n$ rebar3 shell\nerl> inets:start(), ssl:start(),\nerl> Config = hex_core:default_config(),\nerl> {ok, {200, _, #{packages := Packages}}} = hex_repo:get_names(Config),\nerl> length(Packages).\n6764\n```\n\n----------------------------------------\n\nTITLE: Searching Hex.pm Packages using hex_core in Elixir Shell (iex)\nDESCRIPTION: This example shows how to use `hex_core` functions from an Elixir `iex` shell started with `iex -S mix` after adding the dependency. It requires starting the Erlang `:inets` and `:ssl` applications, getting the default configuration via `:hex_core.default_config/0`, defining search options (sorting by downloads), executing a package search for \"riak\" using `:hex_api_package.search/3`, and then extracting the names of the found packages.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/004-announcing-hex-core.html.md#2025-04-22_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\n$ iex -S mix\niex> :inets.start() ; :ssl.start()\niex> config = :hex_core.default_config()\niex> options = [sort: :downloads]\niex> {:ok, {200, _, packages}} = :hex_api_package.search(config, \"riak\", options)\niex> Enum.map(packages, & &1[\"name\"])\n[\"riak_pb\", \"riakc\", ...]\n```\n\n----------------------------------------\n\nTITLE: Configuring Application Metadata\nDESCRIPTION: Example application source file showing required metadata for publishing a package to Hex.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_3\n\nLANGUAGE: erlang\nCODE:\n```\n{application, relx,\n  [{description, \"Release assembler for Erlang/OTP Releases\"},\n   {vsn, \"3.5.0\"},\n   {modules, []},\n   {registered, []},\n   {applications, [kernel,\n                   stdlib,\n                   getopt,\n                   erlware_commons,\n                   bbmustache,\n                   providers]},\n   {licenses, [\"Apache-2.0\"]},\n   {links, [{\"GitHub\", \"https://github.com/erlware/relx\"}]}]}.\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Documentation Generation with ex_doc\nDESCRIPTION: Configuration for using rebar3_ex_doc to generate package documentation.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_4\n\nLANGUAGE: erlang\nCODE:\n```\n{ex_doc, [\n    {source_url, <<\"https://github.com/namespace/your_app\">>},\n    {extras, [<<\"README.md\">>, <<\"LICENSE\">>]},\n    {main, <<\"readme\">>}\n]}.\n\n{hex, [{doc, ex_doc}]}.\n```\n\n----------------------------------------\n\nTITLE: Configuring edoc Documentation\nDESCRIPTION: Alternative configuration for using edoc to generate package documentation.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/rebar3_publish.html.md#2025-04-22_snippet_5\n\nLANGUAGE: erlang\nCODE:\n```\n{hex, [{doc, edoc}]}.\n```\n\n----------------------------------------\n\nTITLE: Active Hex.pm Public Key\nDESCRIPTION: The current active public key for Hex.pm, released on March 3, 2016. This key is used to verify the authenticity of the Hex.pm registry.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/public_keys.html.md#2025-04-22_snippet_0\n\nLANGUAGE: nohighlight\nCODE:\n```\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----\n```\n\n----------------------------------------\n\nTITLE: Building Hex Registry Commands\nDESCRIPTION: Terminal commands for creating and initializing a new Hex registry including directory setup and key generation.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ mkdir acme\n$ cd acme\n$ openssl genrsa -out private_key.pem\n$ mkdir public\n$ mix hex.registry build public --name=acme --private-key=private_key.pem\n```\n\n----------------------------------------\n\nTITLE: Starting PostgreSQL Database Container\nDESCRIPTION: Command to start a PostgreSQL database container using Docker Compose for local development\nSOURCE: https://github.com/hexpm/hexpm/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up -d db\n```\n\n----------------------------------------\n\nTITLE: Creating and Migrating Database\nDESCRIPTION: Mix commands to create the hexpm_dev database and run Ecto migrations\nSOURCE: https://github.com/hexpm/hexpm/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmix do ecto.create, ecto.migrate\n```\n\n----------------------------------------\n\nTITLE: Seeding Sample Data\nDESCRIPTION: Mix command to populate the local Hexpm instance with sample data\nSOURCE: https://github.com/hexpm/hexpm/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nmix run priv/repo/seeds.exs\n```\n\n----------------------------------------\n\nTITLE: Starting Hexpm Server\nDESCRIPTION: Commands to start the Hexpm server either with or without an interactive Elixir console\nSOURCE: https://github.com/hexpm/hexpm/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n# with console\niex -S mix phx.server\n\n# without console\nmix phx.server\n```\n\n----------------------------------------\n\nTITLE: Installing Node Dependencies\nDESCRIPTION: Command to install Node.js dependencies for asset compilation using Yarn\nSOURCE: https://github.com/hexpm/hexpm/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd assets && yarn install\n```\n\n----------------------------------------\n\nTITLE: Elixir Runtime Configuration\nDESCRIPTION: Runtime configuration setup for the Elixir application using environment variables.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\nimport Config\n\nconfig :my_app,\n  port: String.to_integer(System.get_env(\"PORT\", \"8000\")),\n  auth: [\n    username: System.get_env(\"AUTH_USERNAME\", \"hello\"),\n    password: System.get_env(\"AUTH_PASSWORD\", \"secret\")\n  ],\n  public_dir: System.get_env(\"PUBLIC_DIR\", \"tmp/public\")\n```\n\n----------------------------------------\n\nTITLE: Elixir Application Module\nDESCRIPTION: Elixir module implementing the application supervision tree with Cowboy server configuration.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\n@impl true\ndef start(_type, _args) do\n  port = Application.fetch_env!(:my_app, :port)\n\n  children = [\n    {Plug.Cowboy, scheme: :http, plug: MyApp.Plug, options: [port: port]}\n  ]\n\n  opts = [strategy: :one_for_one, name: MyApp.Supervisor]\n  Supervisor.start_link(children, opts)\nend\n```\n\n----------------------------------------\n\nTITLE: Elixir Plug Implementation\nDESCRIPTION: Custom Plug implementation for handling HTTP requests with authentication and static file serving.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule MyApp.Plug do\n  use Plug.Builder\n\n  plug(Plug.Logger)\n  plug(:auth)\n  plug(:static)\n  plug(:not_found)\n\n  defp auth(conn, _opts) do\n    auth = Application.fetch_env!(:my_app, :auth)\n    Plug.BasicAuth.basic_auth(conn, auth)\n  end\n\n  defp static(conn, _opts) do\n    public_dir = Application.fetch_env!(:my_app, :public_dir)\n    opts = Plug.Static.init(at: \"/\", from: public_dir)\n    Plug.Static.call(conn, opts)\n  end\n\n  defp not_found(conn, _opts) do\n    send_resp(conn, 404, \"not found\")\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Docker Configuration\nDESCRIPTION: Dockerfile configuration for building and running the Elixir application in a container.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_7\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM hexpm/elixir:1.11.2-erlang-23.1.2-alpine-3.12.1 as build\nRUN apk add --no-cache git\nWORKDIR /app\nRUN mix local.hex --force && mix local.rebar --force\nENV MIX_ENV=prod\nCOPY mix.exs mix.lock ./\nRUN mix deps.get --only $MIX_ENV\nRUN mkdir config\nRUN mix deps.compile\nCOPY lib lib\nRUN mix compile\nCOPY config/runtime.exs config/\nRUN mix release\n\nFROM alpine:3.12.1 AS app\nRUN apk add --no-cache openssl ncurses-libs\nWORKDIR /app\nRUN chown nobody:nobody /app\nUSER nobody:nobody\nCOPY --from=build --chown=nobody:nobody /app/_build/prod/rel/my_app ./\nENV HOME=/app\nENTRYPOINT [\"bin/my_app\"]\nCMD [\"start\"]\n```\n\n----------------------------------------\n\nTITLE: S3 Bucket Policy Configuration\nDESCRIPTION: JSON configuration for S3 bucket policy to enable public read access for the Hex repository.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2008-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AllowPublicRead\",\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::my-bucket/*\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: IAM Policy Configuration\nDESCRIPTION: JSON configuration for IAM policy defining S3 bucket access permissions.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/docs/self_hosting.html.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"VisualEditor0\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:GetObject\",\n        \"s3:ListBucket\",\n        \"s3:DeleteObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::my-bucket\",\n        \"arn:aws:s3:::my-bucket/*\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Hex.pm\nDESCRIPTION: Standard robots.txt configuration that currently allows all crawler access and specifies the location of the sitemap. Includes commented examples for blocking all crawlers if needed.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/priv/static/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\n# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n#\n# To ban all spiders from the entire site uncomment the next two lines:\n# User-agent: *\n# Disallow: /\n\nSitemap: https://hex.pm/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Elixir Language Feature - with Expression\nDESCRIPTION: Example showing the 'with' expression as a feature not available in older Elixir versions that Hex 1.0 needs to support\nSOURCE: https://github.com/hexpm/hexpm/blob/main/lib/hexpm_web/templates/blog/015-hex-v10-released-and-the-future-of-hex.html.md#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\nwith\n```\n\n----------------------------------------\n\nTITLE: Parsing S3 Log Entries from Cache Server\nDESCRIPTION: Log entries showing access patterns to S3 storage, focusing on package tarball downloads and other requests. Each entry contains syslog priority, timestamp, server name, process info, IP address, timestamp, HTTP method, resource path, status code and user agent.\nSOURCE: https://github.com/hexpm/hexpm/blob/main/test/fixtures/fastly_logs_2.txt#2025-04-22_snippet_0\n\nLANGUAGE: log\nCODE:\n```\n<134>2014-02-06T04:32:22Z cache-ams4138 S3Logging[216674]: 192.168.1.0 \"Sat, 06 Feb 2014 04:32:22 GMT\" \"GET /tarballs/{package1}-0.0.1.tar\" 200 \"User-Agent\"\n<134>2014-02-06T04:32:22Z cache-ams4138 S3Logging[216674]: 192.168.1.1 \"Sat, 06 Feb 2014 04:32:22 GMT\" \"GET /tarballs/{package1}-0.0.1.tar\" 200 \"User-Agent\"\n<134>2014-02-06T04:32:22Z cache-ams4138 S3Logging[216674]: 192.168.1.1 \"Sat, 06 Feb 2014 04:32:22 GMT\" \"GET /some/other/thing\" 200 \"User-Agent\"\n<134>2014-02-06T04:32:22Z cache-ams4138 S3Logging[216674]: 192.168.1.2 \"Sat, 06 Feb 2014 04:32:22 GMT\" \"GET /tarballs/{package1}-0.0.1.tar\" 200 \"User-Agent\"\n<134>2014-02-06T04:32:22Z cache-ams4138 S3Logging[216674]: 127.0.0.255 \"Sat, 06 Feb 2014 04:32:22 GMT\" \"GET /tarballs/{package1}-0.0.2.tar\" 200 \"User-Agent\"\n```"
  }
]
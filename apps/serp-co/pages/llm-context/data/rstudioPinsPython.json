[
  {
    "owner": "rstudio",
    "repo": "pins-python",
    "content": "TITLE: Writing Data to a Pin Board in Python\nDESCRIPTION: Shows how to save (pin) data to a board using the pin_write() method, specifying the object, name, and pin type.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nboard.pin_write(mtcars.head(), \"mtcars\", type=\"csv\")\n```\n\n----------------------------------------\n\nTITLE: Reading Data from a Pin Board in Python\nDESCRIPTION: Demonstrates how to retrieve pinned data from a board using the pin_read() method.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nboard.pin_read(\"mtcars\")\n```\n\n----------------------------------------\n\nTITLE: Creating a Temporary Pin Board in Python\nDESCRIPTION: Demonstrates how to create a temporary pin board using the board_temp() function, which is useful for examples but not for real work as it's automatically deleted when the session ends.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport pins\nfrom pins.data import mtcars\n\nboard = pins.board_temp()\n```\n\n----------------------------------------\n\nTITLE: Creating a Posit Connect Pin Board in Python\nDESCRIPTION: Shows how to create a pin board connected to Posit Connect using environment variables for authentication.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# Note that this uses one approach to connecting,\n# the environment variables CONNECT_SERVER and CONNECT_API_KEY\n\nboard = pins.board_connect()\nboard.pin_write(tidy_sales_data, \"hadley/sales-summary\", type=\"csv\")\n```\n\n----------------------------------------\n\nTITLE: Reading from a Posit Connect Pin Board in Python\nDESCRIPTION: Demonstrates how to read data from a Posit Connect pin board, which can be used by others or in automated reports.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nboard = board_connect()\nboard.pin_read(\"hadley/sales-summary\")\n```\n\n----------------------------------------\n\nTITLE: Installing Pins Package from PyPI\nDESCRIPTION: Demonstrates how to install the released version of the pins package from PyPI using pip.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npython -m pip install pins\n```\n\n----------------------------------------\n\nTITLE: Installing Pins Development Version from GitHub\nDESCRIPTION: Shows how to install the development version of the pins package directly from the GitHub repository using pip.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npython -m pip install git+https://github.com/rstudio/pins-python\n```\n\n----------------------------------------\n\nTITLE: Installing pins Development Dependencies in Python\nDESCRIPTION: Installs the pins package with development dependencies using pip in editable mode.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npython -m pip install -e .[dev]\n```\n\n----------------------------------------\n\nTITLE: Specifying Required Dependencies with Version Constraints for pins-python\nDESCRIPTION: A requirements specification listing all the Python package dependencies with their exact versions needed for the pins-python project. This includes utilities for file system operations, data frame handling, templating, parallel processing, and metadata management.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/requirements/minimum.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nfsspec==2022.2.0\nxxhash==1.0.0\npandas==0.23.0\njinja2==2.10.0\njoblib==0.12.0\nimportlib-metadata==4.4\nimportlib-resources==1.3\nappdirs<2.0.0\nhumanize==1.0.0\n```\n\n----------------------------------------\n\nTITLE: Running pytest Commands\nDESCRIPTION: Various pytest commands for running different test configurations, including backend-specific tests and filtering options.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npytest pins\n\n# run all tests except those for Posit Connect\npytest pins -m 'not fs_rsc'\n\n# run only local filesystem backend tests\npytest pins -m 'fs_file'\n\n# run all tests except those for S3 and GCS\npytest pins -m 'not fs_s3 and not fs_gcs'\n\n# run all tests except those using data on GitHub\n# n.b. doctests cannot have marks https://github.com/pytest-dev/pytest/issues/5794\npytest pins -m 'not skip_on_github' -k 'not pins.boards.BoardManual'\n```\n\n----------------------------------------\n\nTITLE: Setting up Pre-commit Hooks\nDESCRIPTION: Instructions for installing and configuring pre-commit hooks for code checking and formatting.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npython -m pip install pre-commit\npre-commit install\n```\n\n----------------------------------------\n\nTITLE: Setting up Posit Connect Tests\nDESCRIPTION: Command for setting up Posit Connect tests, requiring RSC_LICENSE to be set in the .env file.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n# Be sure to set RSC_LICENSE in .env\nmake dev\n```\n\n----------------------------------------\n\nTITLE: Defining pip-compile Command and Index Configuration for pins-python\nDESCRIPTION: The header section shows the pip-compile command used to generate this dependency file from pyproject.toml, specifying extras to include and output format. It also sets the package index URL and trusted host configuration.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/requirements/dev.txt#2025-04-22_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n#\n# This file is autogenerated by pip-compile with Python 3.11\n# by the following command:\n#\n#    pip-compile --extra=check --extra=doc --extra=test --output-file=- pyproject.toml\n#\n--index-url https://pypi.python.org/simple/\n--trusted-host pypi.org\n```\n\n----------------------------------------\n\nTITLE: Running pip-compile to generate requirements file\nDESCRIPTION: Command line instruction for regenerating this requirements file from setup.cfg using pip-compile. This ensures dependencies are locked to specific versions for reproducibility.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/binder/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip-compile --extra=dev --output-file=- setup.cfg\n```\n\n----------------------------------------\n\nTITLE: Defining Pin Metadata in YAML for pins-python\nDESCRIPTION: YAML configuration that defines metadata for a pinned CSV file named 'data_frame.csv'. The metadata includes creation timestamp, file size, pin hash, title, type, and other attributes.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/example-bundle/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napi_version: 1\ncreated: 20220304T153828Z\ndescription: null\nfile: data_frame.csv\nfile_size: 15\nname: data_frame.csv\npin_hash: c65b0e9785abaa60\ntitle: some title\ntype: csv\nuser: {}\n```\n\n----------------------------------------\n\nTITLE: Defining Pin Metadata in YAML for pins-python\nDESCRIPTION: YAML configuration that describes a CSV pin's metadata. It contains essential information like API version, creation date, file details including size and hash, pin title, and type. This metadata helps the pins-python library track and manage pinned resources.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/_snapshots/test_board_pin_write_rsc_index_html/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napi_version: 1\ncreated: 20200113T235859Z\ndescription: some description\nfile: test_rsc_pin.csv\nfile_size: 19\npin_hash: a6cf5331bf3de6c6\ntitle: some pin\ntype: csv\nuser: {}\n```\n\n----------------------------------------\n\nTITLE: Arrow Pin YAML Configuration\nDESCRIPTION: Metadata configuration for a pinned Arrow data frame, specifying the file name, size, hash, type and creation timestamp. The pin contains a 2x2 data frame stored in Arrow format.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-compat/df_arrow/20220214T163720Z-ad0c1/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfile: df_arrow.arrow\nfile_size: 1282\npin_hash: ad0c1a5a64ad7ca7\ntype: arrow\ntitle: 'df_arrow: a pinned 2 x 2 data frame'\ndescription: ~\ncreated: 20220214T163720Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Pins Metadata YAML for a CSV Dataset\nDESCRIPTION: Metadata information for a pinned CSV dataset. The metadata includes the original filename, file size (28 bytes), a unique hash identifier, data type (csv), a descriptive title, creation timestamp, and API version information.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-compat/df_csv/20220214T163720Z-9bfad/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfile: df_csv.csv\nfile_size: 28\npin_hash: 9bfad6d1a322a904\ntype: csv\ntitle: 'df_csv: a pinned 2 x 3 data frame'\ndescription: ~\ncreated: 20220214T163720Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Defining Metadata for Pinned Integer Vector in JSON\nDESCRIPTION: This JSON object defines metadata for a pinned integer vector named 'y'. It includes information such as file size, pin hash, type, creation date, and API version. The pin is stored as a JSON file with a size of 53 bytes.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pin-board/y/20221215T180400Z-b81d5/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"file\": \"y.json\",\n  \"file_size\": 53,\n  \"pin_hash\": \"b81d5bea9e760608\",\n  \"type\": \"json\",\n  \"title\": \"y: a pinned integer vector\",\n  \"description\": null,\n  \"tags\": null,\n  \"created\": \"20221215T180400Z\",\n  \"api_version\": \"1.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Metadata for a Pinned Integer Vector in pins-python\nDESCRIPTION: Metadata for a pinned integer vector named 'x'. The file is 23 bytes in size with a hash value of 'c3943ca5a9aab2df'. It was created on December 15, 2022, and uses the pins API version 1.0.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pin-board/x/20221215T180351Z-c3943/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nfile: x.json\nfile_size: 23\npin_hash: c3943ca5a9aab2df\ntype: json\ntitle: 'x: a pinned integer vector'\ndescription: ~\ntags: ~\ncreated: 20221215T180351Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Pins-Python RDS Pin Metadata in YAML Format\nDESCRIPTION: Metadata for a pinned RDS data frame file. The file 'df_rds.rds' has a size of 116 bytes, with a specific pin hash. It contains a 2x2 data frame and was created on February 14, 2022.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-compat/df_rds/20220214T163720Z-35b15/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nfile: df_rds.rds\nfile_size: 116\npin_hash: 35b1570263448755\ntype: rds\ntitle: 'df_rds: a pinned 2 x 2 data frame'\ndescription: ~\ncreated: 20220214T163720Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Pin Metadata YAML Configuration\nDESCRIPTION: YAML configuration specifying metadata for a pinned integer vector. Includes file details, size, hash, type, title, creation date and API version information.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pin-board/y/20221215T180357Z-9ae7a/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfile: y.rds\nfile_size: 61\npin_hash: 9ae7a970010c84e0\ntype: rds\ntitle: 'y: a pinned integer vector'\ndescription: ~\ntags: ~\ncreated: 20221215T180357Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: YAML Metadata Configuration for Pinned CSV Data Frame\nDESCRIPTION: This YAML configuration describes a pinned CSV data frame. It includes the filename, file size (20 bytes), a unique hash identifier, content type (csv), a descriptive title, and creation timestamp information for tracking purposes.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-compat/df_csv/20220214T163718Z-eceac/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfile: df_csv.csv\nfile_size: 20\npin_hash: eceac651f7d06360\ntype: csv\ntitle: 'df_csv: a pinned 2 x 2 data frame'\ndescription: ~\ncreated: 20220214T163718Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Defining RDS Pin Metadata in YAML format\nDESCRIPTION: This YAML structure defines metadata for a pinned R data frame. It specifies the file path, size, hash, type, title, description, creation timestamp, and API version used for pinning the data.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-compat/df_unversioned/20220214T163720Z-35b15/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nfile: df_unversioned.rds\nfile_size: 116\npin_hash: 35b1570263448755\ntype: rds\ntitle: 'df_unversioned: a pinned 2 x 2 data frame'\ndescription: ~\ncreated: 20220214T163720Z\napi_version: 1.0\n```\n\n----------------------------------------\n\nTITLE: Version Tagging with Git\nDESCRIPTION: Creates a Git tag for version management using setuptools_scm.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit tag v0.0.1\n```\n\n----------------------------------------\n\nTITLE: Checking Current Version\nDESCRIPTION: Displays the current version number being used for the commit.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npython -m setuptools_scm\n```\n\n----------------------------------------\n\nTITLE: Defining Data Files Structure and Metadata in YAML\nDESCRIPTION: This YAML configuration specifies the paths to data files ('data.csv' and 'data.rds'), defines the data as a table type with 2 rows and 2 columns, and describes the column structure with their respective data types (integer for column 'a' and character for column 'b').\nSOURCE: https://github.com/rstudio/pins-python/blob/main/pins/tests/pins-old-types/a-table/v/data.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npath:\n- data.csv\n- data.rds\ntype: table\nrows: 2\ncols: 2\ncolumns:\n  a: integer\n  b: character\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Version for pins-python Project\nDESCRIPTION: This snippet defines the Python version to be used for the pins-python project. It specifies Python 3.9, which is likely used for environment configuration or version management tools.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/binder/runtime.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npython-3.9\n```\n\n----------------------------------------\n\nTITLE: Defining User Credentials in Plain Text\nDESCRIPTION: A basic credential list storing username and password pairs in space-separated format. Each line contains a username followed by its corresponding password.\nSOURCE: https://github.com/rstudio/pins-python/blob/main/script/setup-rsconnect/users.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nadmin admin0\ntest  test\nsusan susan\nderek derek\n```"
  }
]
[
  {
    "owner": "mautic",
    "repo": "mautic",
    "content": "TITLE: Converting PHP Template to Twig Template - Basic Structure\nDESCRIPTION: Complete example showing how to migrate a PHP template to Twig, including template extension, slots, routing, forms, and page actions.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-PHP-TO-TWIG-TEMPLATES.md#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$view->extend('MauticCoreBundle:Default:content.html.php');\n$view['slots']->set('mauticContent', 'mauticWebhook');\n$view['slots']->set('headerTitle', $view['translator']->trans('mautic.webhook.webhooks'));\n?>\n\n// ROUTING\n<a href=\"<?php echo $view['router']->path('/emails', ['objectAction' => 'batchDelete']); ?\"Hello world!</a>\n\n// FORMS\n<?php echo $view['form']->start($form); ?>\n<?php echo $view['form']->row($form['email']); ?>\n<?php echo $view['form']->end($form); ?>\n\n// PAGE ACTIONS\n$view['slots']->set('actions', $view->render('MauticCoreBundle:Helper:page_actions.html.php', [\n    'item'            => $item,\n    'templateButtons' => [\n        'edit'   => $view['security']->hasEntityAccess($permissions['webhook:webhooks:editown'], $permissions['webhook:webhooks:editother'], $item->getCreatedBy()),\n        'clone'  => $permissions['webhook:webhooks:create'],\n        'delete' => $view['security']->hasEntityAccess($permissions['webhook:webhooks:deleteown'], $permissions['webhook:webhooks:deleteown'], $item->getCreatedBy()),\n    ],\n    'routeBase' => 'webhook',\n]));\n\n// TODO add more examples\n```\n\nLANGUAGE: Twig\nCODE:\n```\n{% extends '@MauticCore/Default/content.html.twig' %}\n\n{% block headerTitle %}{% trans %}mautic.webhook.webhooks{% endtrans %}{% endblock %}\n{% block mauticContent %}mauticWebhook{% endblock %}\n\n{# ROUTING #}\n<a href=\"{{ path('/emails', {objectAction: 'batchDelete'}) }}\">Hello world!</a>\n\n{# FORMS #}\n{{ form_start(form) }}\n{{ form_row(form.email) }}\n{{ form_end(form) }}\n\n{# PAGE ACTIONS #}\n{% block actions %}\n    {{- include(\n        '@MauticCore/Helper/page_actions.html.twig', {\n            item: item,\n            templateButtons: {\n                'edit': securityHasEntityAccess(\n                    permissions['webhook:webhooks:editown'],\n                    permissions['webhook:webhooks:editother'],\n                    item.getCreatedBy()\n                ),\n                'clone': permissions['webhook:webhooks:create'],\n                'delete': securityHasEntityAccess(\n                    permissions['webhook:webhooks:deleteown'],\n                    permissions['webhook:webhooks:deleteother'],\n                    item.getCreatedBy()\n                )\n            },\n            routeBase: 'webhook'\n    }) -}}\n{% endblock %}\n\n{# TODO add more examples #}\n```\n\n----------------------------------------\n\nTITLE: Installing Mautic with DDEV\nDESCRIPTION: Command for starting Mautic using DDEV, which automatically installs dependencies and configures Mautic for use. DDEV is a local development environment tool that simplifies the setup process.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nddev start\n```\n\n----------------------------------------\n\nTITLE: Alternative DDEV Installation Commands\nDESCRIPTION: Alternative commands for configuring and starting Mautic with DDEV. This two-step process first configures DDEV for the Mautic project and then starts it to automatically install dependencies.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nddev config\n```\n\nLANGUAGE: shell\nCODE:\n```\nddev start\n```\n\n----------------------------------------\n\nTITLE: Programmatic Integration Sync in PHP\nDESCRIPTION: PHP implementation for pushing specific Mautic contacts to an integration using the SyncService. This can be used in campaigns, forms, or point actions.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/app/bundles/IntegrationsBundle/README.md#2025-04-22_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$mauticObjectIds = new \\Mautic\\IntegrationsBundle\\Sync\\DAO\\Sync\\ObjectIdsDAO();\n$mauticObjectIds->addObjectId('contact', '12');\n$mauticObjectIds->addObjectId('contact', '13');\n\n$inputOptions = new Mautic\\IntegrationsBundle\\Sync\\DAO\\Sync\\InputOptionsDAO(\n    [\n        'integration'      => 'Magento',\n        'disable-pull'     => true,\n        'mautic-object-id' => $mauticObjectIds,\n    ]\n);\n\n/** @var \\Mautic\\IntegrationsBundle\\Sync\\SyncService\\SyncServiceInterface $syncService **/\n$syncService->processIntegrationSync($inputOptions);\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Client in Mautic Service Class\nDESCRIPTION: Example of implementing the HTTP client in a service class using PSR-18 ClientInterface. Demonstrates proper dependency injection pattern for HTTP client usage.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-4.0.md#2025-04-22_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuse Psr\\Http\\Client\\ClientInterface;\n\n....\npublic function __construct(\n    ClientInterface $client\n) {\n    $this->client = $client;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Client Service in Mautic\nDESCRIPTION: Example of configuring a service class to use Mautic's HTTP client through dependency injection in config.php. Shows how to register a service with the HTTP client as a dependency.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-4.0.md#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'mautic.demo.class' => [\n    'class'     => DemoClass::class,\n    'arguments' => [\n        'mautic.http.client',\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Basic Integration Sync Command\nDESCRIPTION: Standard sync command for Magento integration that syncs all new records bidirectionally between Mautic and the CRM without date parameters.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/app/bundles/IntegrationsBundle/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ bin/console mautic:integrations:sync Magento\n```\n\n----------------------------------------\n\nTITLE: Selective Object Sync Command\nDESCRIPTION: Command for syncing specific Mautic contacts to an integration with pull disabled, demonstrating object-specific sync capabilities.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/app/bundles/IntegrationsBundle/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ bin/console mautic:integrations:sync Magento --disable-pull --mautic-object-id=contact:12 --mautic-object-id=contact:13\n```\n\n----------------------------------------\n\nTITLE: Running Integration Sync Command for First-time Setup\nDESCRIPTION: Example command for initializing sync between Mautic and a CRM integration (Magento) for the first time, with date parameters to control batch size.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/app/bundles/IntegrationsBundle/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ bin/console mautic:integrations:sync Magento --first-time-sync --start-datetime=\"2019-09-12T12:00:00\"\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple Filters in Twig\nDESCRIPTION: Demonstrates how to chain multiple filters together in Twig, processing content through several transformations in sequence.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-PHP-TO-TWIG-TEMPLATES.md#2025-04-22_snippet_4\n\nLANGUAGE: Twig\nCODE:\n```\n{{ message|striptags|trans({'%code%': status_code}) }}\n```\n\n----------------------------------------\n\nTITLE: Using Trans Filter with Variable Substitution\nDESCRIPTION: Shows how to use the more compact trans filter for translations with variable substitution, and demonstrates filter chaining.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-PHP-TO-TWIG-TEMPLATES.md#2025-04-22_snippet_3\n\nLANGUAGE: Twig\nCODE:\n```\n{{ message|trans({'%code%': status_code}) }}\n```\n\n----------------------------------------\n\nTITLE: Using Default Filter in Twig Templates\nDESCRIPTION: Example showing how to use Twig's default filter to provide fallback values for variables, making code more concise and readable.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-PHP-TO-TWIG-TEMPLATES.md#2025-04-22_snippet_1\n\nLANGUAGE: Twig\nCODE:\n```\nBefore:\n\n{% set nameGetter = nameGetter is defined and nameGetter is not empty ? nameGetter : 'getName' %}\n\nAfter:\n\n{% set nameGetter = nameGetter|default('getName') %}\n```\n\n----------------------------------------\n\nTITLE: Text Replacement with Translation in Twig\nDESCRIPTION: Demonstrates two approaches for handling variable replacement in translations: using the trans tag with context or using the trans filter with variables.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-PHP-TO-TWIG-TEMPLATES.md#2025-04-22_snippet_2\n\nLANGUAGE: Twig\nCODE:\n```\n{% trans with {'%code%': status_code} %}message{% endtrans %}\n```\n\n----------------------------------------\n\nTITLE: Updating Symfony 2.8 ChoiceType Implementation\nDESCRIPTION: Example of how to modify ChoiceType implementation to accommodate Symfony 2.8 changes, where choices must use labels as keys and include 'choices_as_values' => true to ensure correct labels and values.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n// Old implementation (Mautic 2.x)\n$builder->add('field', ChoiceType::class, [\n    'choices' => [1 => 'Label1', 2 => 'Label2']\n]);\n\n// New implementation (Mautic 3.x)\n$builder->add('field', ChoiceType::class, [\n    'choices' => ['Label1' => 1, 'Label2' => 2],\n    'choices_as_values' => true\n]);\n```\n\n----------------------------------------\n\nTITLE: Updating Form Type Class Methods\nDESCRIPTION: Form type classes need to replace getName() method with getBlockPrefix() method to maintain compatibility with JavaScript files that use form input ID selectors.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n// Old implementation (Mautic 2.x)\npublic function getName()\n{\n    return 'form_name';\n}\n\n// New implementation (Mautic 3.x)\npublic function getBlockPrefix()\n{\n    return 'form_name';\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Form Type Optional Fields\nDESCRIPTION: Replace deprecated setOptional() method with setDefined() method in form type classes to mark fields as not required but defined.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n// Old implementation (Mautic 2.x)\n$resolver->setOptional(['field1', 'field2']);\n\n// New implementation (Mautic 3.x)\n$resolver->setDefined(['field1', 'field2']);\n```\n\n----------------------------------------\n\nTITLE: Updating Router Usage in PHP Templates\nDESCRIPTION: Change in router usage for PHP templates, replacing generate() method with url() method for generating URLs.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n// Old implementation (Mautic 2.x)\n$url = $view['router']->generate('route_name', ['param' => 'value']);\n\n// New implementation (Mautic 3.x)\n$url = $view['router']->url('route_name', ['param' => 'value']);\n```\n\n----------------------------------------\n\nTITLE: Updating ConfigSubscriber in ConfigBundle for PHP\nDESCRIPTION: Example of how to update the onConfigGenerate method in ConfigSubscribers to include the new 'formType' parameter with the form type class name, while keeping the existing 'formAlias'.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\npublic function onConfigGenerate(ConfigBuilderEvent $event)\n{\n    $event->addForm([\n        'bundle'     => 'EmailBundle',\n        'formType'   => ConfigType::class,\n        'formAlias'  => 'emailconfig',\n        'formTheme'  => 'MauticEmailBundle:FormTheme\\Config',\n        'parameters' => $event->getParametersFromConfig('MauticEmailBundle'),\n    ]);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring API Rate Limiter Cache in PHP\nDESCRIPTION: Example of migrating Memcached configuration from Mautic 2.x to 3.x format showing the new adapter-based cache configuration structure.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n'api_rate_limiter_cache' => array(\n  'memcached' => array(\n    'servers' => array(\n      '0' => array(\n        'host' => 'memcached.local',\n          'port' => '12345'\n      )\n    )\n  )\n),\n```\n\nLANGUAGE: PHP\nCODE:\n```\n'api_rate_limiter_cache' => array(\n  'adapter' => 'cache.adapter.memcached',\n  'provider' => 'memcached://memcached.local:12345'\n),\n```\n\n----------------------------------------\n\nTITLE: Configuring Development Hosts in PHP\nDESCRIPTION: Example showing the change in development hosts configuration from string format to JSON encoded array.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$_SERVER['MAUTIC_DEV_HOSTS'] = '1.2.3.4';\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$_SERVER['MAUTIC_CUSTOM_DEV_HOSTS'] = '[\"1.2.3.4\"]';\n```\n\n----------------------------------------\n\nTITLE: Database Fixtures Installation in PHPUnit Tests\nDESCRIPTION: Example showing the change in database fixtures installation syntax from file path to class name based approach.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-3.0.md#2025-04-22_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$this->installDatabaseFixtures([dirname(__DIR__).'/../../../../../app/bundles/LeadBundle/DataFixtures/ORM/LoadLeadData.php']);\n```\n\nLANGUAGE: PHP\nCODE:\n```\n$this->installDatabaseFixtures([\\Mautic\\LeadBundle\\DataFixtures\\ORM\\LeadFieldData::class]);\n```\n\n----------------------------------------\n\nTITLE: Fixing Request Parameter Retrieval for Symfony 6 Compatibility\nDESCRIPTION: Example showing how to modify code to handle array values from request objects in Symfony 6, which requires using the all() method instead of get() when retrieving arrays.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- $asset = $request->request->get('asset') ?? [];\n+ $asset = $request->request->all()['asset'] ?? [];\n```\n\n----------------------------------------\n\nTITLE: Updating User Login in Functional Tests\nDESCRIPTION: Shows the new approach to logging in a user in functional tests by first retrieving the user entity from the repository and then passing it to the loginUser method.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n- $user = $this->loginUser('admin');\n+ $user = $this->em->getRepository(User::class)->findOneBy(['username' => 'admin']);\n+ $this->loginUser($user);\n```\n\n----------------------------------------\n\nTITLE: Creating AJAX Requests in Functional Tests\nDESCRIPTION: Demonstrates the migration from manual AJAX request creation to using the xmlHttpRequest method, including the necessary CSRF header setup for '/s/ajax' endpoints.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n- $this->client->request(Request::METHOD_POST, '/s/ajax', $payload, [], $this->createAjaxHeaders());\n+ $this->setCsrfHeader(); // this is necessary only for the /s/ajax endpoints. Other ajax requests do not need it.\n+ $this->client->xmlHttpRequest(Request::METHOD_POST, '/s/ajax', $payload);\n```\n\n----------------------------------------\n\nTITLE: Asserting Successful Response in Functional Tests\nDESCRIPTION: Demonstrates how to replace manual response checking with the more concise assertResponseIsSuccessful method in functional tests.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_4\n\nLANGUAGE: diff\nCODE:\n```\n$this->client->request('GET', '/s/campaigns/new/');\n- $response = $this->client->getResponse();\n- Assert::assertTrue($response->isOk(), $response->getContent());\n+ $this->assertResponseIsSuccessful();\n```\n\n----------------------------------------\n\nTITLE: Migrating from SessionInterface to RequestStack\nDESCRIPTION: Shows how to update code that uses the deprecated SessionInterface to the new RequestStack approach for session access, including constructor injection and method calls.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n- use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface;\n+ use Symfony\\Component\\HttpFoundation\\RequestStack;\nclass NeedsSession\n{\n-   public function __construct(private SessionInterface $session) {}\n+   public function __construct(private RequestStack $requestStack) {}\n\n    public function doStuff()\n    {\n-       $selected = $this->session->get('mautic.category.type', 'category');\n+       $selected = $this->requestStack->getSession()->get('mautic.category.type', 'category');\n        // ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Replacing Doctrine ASC Constants with Enums\nDESCRIPTION: Shows how to replace deprecated Doctrine ordering constants (Criteria::DESC) with the new enum syntax (Order::Descending->value).\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-6.0.md#2025-04-22_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n- $q->orderBy($this->getTableAlias().'.dateAdded', \\Doctrine\\Common\\Collections\\Criteria::DESC);\n+ $q->orderBy($this->getTableAlias().'.dateAdded', \\Doctrine\\Common\\Collections\\Order::Descending->value);\n```\n\n----------------------------------------\n\nTITLE: Running Symfony Messenger Consumer for Email Queue in Mautic 5\nDESCRIPTION: Command for starting the Symfony Messenger consumer to process emails in Mautic 5, replacing the previous bin/console mautic:emails:send command. This new approach uses Symfony Messenger to handle email queues in an asynchronous configuration.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbin/console messenger:consume email\n```\n\n----------------------------------------\n\nTITLE: Configuration Path Update\nDESCRIPTION: Replace kernel.root_dir path reference with kernel.project_dir/app due to Symfony 5 deprecation. This affects configuration file paths across the application.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n%kernel.root_dir% -> %kernel.project_dir%/app\n```\n\n----------------------------------------\n\nTITLE: Mailer DSN Configuration\nDESCRIPTION: Configuration key change for email transports, replacing all mailer_ prefixed keys with a single mailer_dsn configuration key.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nmailer_* -> mailer_dsn\n```\n\n----------------------------------------\n\nTITLE: Command Usage Update\nDESCRIPTION: Updated command syntax for broadcast send with limit and batch parameters.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nmautic:broadcast:send --limit=10 --batch=2\n```\n\n----------------------------------------\n\nTITLE: Service Reference Update\nDESCRIPTION: Updated service reference for HTTP client mock handler in tests.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nself::$container->get(\\GuzzleHttp\\Handler\\MockHandler::class)\n```\n\n----------------------------------------\n\nTITLE: Symfony Messenger Reference Command\nDESCRIPTION: The command 'messenger:consume' replaces the previous 'mautic:queue:process' command for processing queued messages in Mautic 5.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nmessenger:consume\n```\n\n----------------------------------------\n\nTITLE: Service Configuration File Path\nDESCRIPTION: Path to the main services configuration file in Mautic 5 that automatically configures all bundles including plugins for autowiring and autoconfiguration.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\napp/config/services.php\n```\n\n----------------------------------------\n\nTITLE: Plugin Services Configuration Path\nDESCRIPTION: Path pattern for plugin-specific service configuration files that may be needed to exclude folders or files from autowiring or to configure services with special requirements.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-5.0.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nplugins/*Bundle/Config/services.php\n```\n\n----------------------------------------\n\nTITLE: Removed PHP Constant in Dashboard Widget\nDESCRIPTION: The FORMAT_MYSQL constant has been removed from the Mautic\\DashboardBundle\\Dashboard\\Widget class. Developers should use DateTimeHelper::FORMAT_DB_DATE_ONLY instead for database date formatting.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-7.0.md#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n\\Mautic\\DashboardBundle\\Dashboard\\Widget::FORMAT_MYSQL\n```\n\n----------------------------------------\n\nTITLE: Alternative PHP Constant for Date Formatting\nDESCRIPTION: The recommended replacement for the removed FORMAT_MYSQL constant. This constant should be used for date formatting in database queries.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-7.0.md#2025-04-22_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nDateTimeHelper::FORMAT_DB_DATE_ONLY\n```\n\n----------------------------------------\n\nTITLE: Contributors List Table in HTML/Markdown\nDESCRIPTION: An HTML table embedded in Markdown that displays contributor information including avatars, names, and contribution types using the All Contributors specification format.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/README.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/dennisameling\"><img src=\"https://avatars.githubusercontent.com/u/17739158?v=4?s=100\" width=\"100px;\" alt=\"Dennis Ameling\"/><br /><sub><b>Dennis Ameling</b></sub></a><br /><a href=\"https://github.com/mautic/mautic/commits?author=dennisameling\" title=\"Code\">💻</a> <a href=\"#userTesting-dennisameling\" title=\"User Testing\">📓</a></td>\n      <!-- Additional contributor entries omitted for brevity -->\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Rendering Contributor Grid in HTML\nDESCRIPTION: This HTML snippet creates a table-based grid layout to display contributor information including avatars, names, and contribution types. It uses inline styles for alignment and sizing, and includes links to GitHub profiles and contribution details.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/README.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jos0405\"><img src=\"https://avatars.githubusercontent.com/u/4246909?v=4?s=100\" width=\"100px;\" alt=\"jos0405\"/><br /><sub><b>jos0405</b></sub></a><br /><a href=\"https://github.com/mautic/mautic/commits?author=jos0405\" title=\"Code\">💻</a> <a href=\"#userTesting-jos0405\" title=\"User Testing\">📓</a></td>\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://veenhof.be\"><img src=\"https://avatars.githubusercontent.com/u/161341?v=4?s=100\" width=\"100px;\" alt=\"Nick Veenhof\"/><br /><sub><b>Nick Veenhof</b></sub></a><br /><a href=\"https://github.com/mautic/mautic/pulls?q=is%3Apr+reviewed-by%3Anickveenhof\" title=\"Reviewed Pull Requests\">👀</a></td>\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Restrictions for Mautic in robots.txt\nDESCRIPTION: This robots.txt configuration specifies which directories and files should be excluded from search engine indexing. It prevents crawlers from accessing sensitive areas like plugins, application code, user files, and third-party dependencies.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /addons/\nDisallow: /plugins/\nDisallow: /app/\nDisallow: /media/dashboards/\nDisallow: /media/files/\nDisallow: /media/js/mautic-form-src.js\nDisallow: /themes/\nDisallow: /translations/\nDisallow: /vendor/\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt Directives for Mautic\nDESCRIPTION: This snippet defines the robots.txt rules for a Mautic installation. It specifies directories and files that should not be crawled by search engines, including addon, plugin, app, and media directories, as well as specific JavaScript files and other sensitive areas.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/app/assets/scaffold/files/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /addons/\nDisallow: /plugins/\nDisallow: /app/\nDisallow: /media/dashboards/\nDisallow: /media/files/\nDisallow: /media/js/mautic-form-src.js\nDisallow: /themes/\nDisallow: /translations/\nDisallow: /vendor/\n```\n\n----------------------------------------\n\nTITLE: Configuring Ignored Paths for Mautic Project\nDESCRIPTION: A comprehensive list of files and directories to be ignored in the Mautic project. This includes system files, IDE configurations, development environments, test directories, build artifacts, and specific vendor packages that shouldn't be included in version control or deployment processes.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/build/exclude_files.txt#2025-04-22_snippet_0\n\nLANGUAGE: gitignore\nCODE:\n```\n*.git*\n*.idea*\n.ddev/*\n.DS_Store\n.env.dist\n.github/*\n.gitignore\n.php-cs-fixer.php\n.travis.yml\ncodecov.yml\nGruntfile.js\nREADME.md\nUPGRADE*.md\napp/console\napp/phpunit.xml.dist\nbin/codecept\nbin/doctrine\nbin/doctrine-dbal\nbin/doctrine-migrations\nbin/doctrine.php\nbin/jp.php\nbin/php-cs-fixer\nbin/phpstan\nbin/phpstan.phar\nbin/phpunit\nbin/security-checker\nbin/simple-phpunit\nbuild/*\nmodified_files.txt\nnode_modules/*\nphpstan*.neon\nrector.php\ntests/*\nvendor/babdev/*\nvendor/liip/*\nvendor/symfony/browser-kit/*\nvendor/symfony/dom-crawler/*\nvendor/symfony/web-profiler-bundle/*\nvendor/webfactory/*\n```\n\n----------------------------------------\n\nTITLE: Applying GPLv3 License Notice to Source Files\nDESCRIPTION: A template for adding the GPLv3 license notice to the start of each source file in a program. It includes placeholders for the program name, copyright year, and author name.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/LICENSE.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: Terminal Interaction Notice for GPLv3 Programs\nDESCRIPTION: A template for displaying a short notice about the program's copyright and license when it starts in interactive mode. It includes placeholders for the program name, copyright year, and author name.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/LICENSE.txt#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n<program>  Copyright (C) <year>  <name of author>\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n```\n\n----------------------------------------\n\nTITLE: Referencing Deprecated Mautic Core Bundle Elements in PHP\nDESCRIPTION: This snippet shows the fully qualified names of deprecated elements in the Mautic Core Bundle. It includes a deprecated event constant, a deprecated class, and a deprecated service with its corresponding class.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/UPGRADE-4.3.md#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nMautic\\CoreBundle\\CoreEvents::ON_FORM_TYPE_BUILD\nMautic\\CoreBundle\\Event\\CustomFormEvent\n'mautic.form.extension.custom'\nMautic\\CoreBundle\\Form\\Extension\\CustomFormExtension\n```\n\n----------------------------------------\n\nTITLE: Displaying Repository URL in Markdown\nDESCRIPTION: This code snippet shows the URL of the main repository where the FullContact plugin is managed using Markdown syntax for links.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/plugins/MauticFullContactBundle/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nhttps://github.com/mautic/mautic/blob/head/plugins/MauticFullContactBundle\n```\n\n----------------------------------------\n\nTITLE: Displaying Mautic Social Bundle Repository Information in Markdown\nDESCRIPTION: This Markdown snippet provides information about the Mautic Social Bundle plugin repository. It includes the plugin name, central management location, and instructions for contributions.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/plugins/MauticSocialBundle/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Mautic bundle for Social plugin\n\n## This plugin is managed centrally in https://github.com/mautic/mautic/blob/head/plugins/MauticSocialBundle and this is a read-only mirror repository.\n\n**📣 Please make PRs and issues against Mautic Core, not here!**\n```\n\n----------------------------------------\n\nTITLE: Displaying Mautic Focus Items Plugin Repository Information in Markdown\nDESCRIPTION: This Markdown snippet provides information about the Mautic Focus Items plugin bundle. It includes the plugin name, repository management details, and instructions for contributors.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/plugins/MauticFocusBundle/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Mautic bundle for Focus Items plugin\n\n## This plugin is managed centrally in https://github.com/mautic/mautic/blob/head/plugins/MauticFocusBundle and this is a read-only mirror repository.\n\n**📣 Please make PRs and issues against Mautic Core, not here!**\n```\n\n----------------------------------------\n\nTITLE: Displaying Mautic Cards Theme Repository Information in Markdown\nDESCRIPTION: This markdown snippet provides information about the Cards theme for Mautic, including its central management location and instructions for contributions.\nSOURCE: https://github.com/mautic/mautic/blob/7.x/themes/cards/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cards theme for Mautic\n\n## This theme is managed centrally in https://github.com/mautic/mautic/blob/head/themes/cards and this is a read-only mirror repository.\n\n**📣 Please make PRs and issues against Mautic Core, not here!**\n```"
  }
]
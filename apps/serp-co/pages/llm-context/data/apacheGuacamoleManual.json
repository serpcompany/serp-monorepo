[
  {
    "owner": "apache",
    "repo": "guacamole-manual",
    "content": "TITLE: Parsing Guacamole Configuration from Properties File in Java\nDESCRIPTION: This snippet demonstrates how to parse the configuration from the guacamole.properties file after authenticating the user. It creates a GuacamoleConfiguration object based on the protocol and parameters specified in the properties file.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic Map<String, GuacamoleConfiguration>\n    getAuthorizedConfigurations(Credentials credentials)\n    throws GuacamoleException {\n\n    // Get the Guacamole server environment\n    Environment environment = LocalEnvironment.getInstance();\n\n    // Get username from guacamole.properties\n    String username = environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_USER\n    );      \n\n    // If wrong username, fail\n    if (!username.equals(credentials.getUsername()))\n        return null;\n\n    // Get password from guacamole.properties\n    String password = environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_PASSWORD\n    );      \n\n    // If wrong password, fail\n    if (!password.equals(credentials.getPassword()))\n        return null;\n\n    // Successful login. Return configurations.\n    Map<String, GuacamoleConfiguration> configs = \n        new HashMap<String, GuacamoleConfiguration>();\n\n    // Create new configuration\n    GuacamoleConfiguration config = new GuacamoleConfiguration();\n\n    // Set protocol specified in properties\n    config.setProtocol(environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_PROTOCOL\n    ));\n\n    // Set all parameters, splitting at commas\n    for (String parameterValue : environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_PARAMETERS\n    ).split(\",\\\\s*\")) {\n\n        // Find the equals sign\n        int equals = parameterValue.indexOf('=');\n        if (equals == -1)\n            throw new GuacamoleServerException(\"Required equals sign missing\");\n\n        // Get name and value from parameter string\n        String name = parameterValue.substring(0, equals);\n        String value = parameterValue.substring(equals+1);\n\n        // Set parameter as specified\n        config.setParameter(name, value);\n\n    }\n\n    configs.put(\"Tutorial Connection\", config);\n    return configs;\n\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing MySQL Database for Guacamole\nDESCRIPTION: Command to generate the SQL initialization script for setting up the MySQL schema required by Guacamole. This script must be executed on a MySQL database before Guacamole can use it for authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --mysql > initdb.sql\n```\n\n----------------------------------------\n\nTITLE: Example User Mapping Configuration for Guacamole Authentication\nDESCRIPTION: XML configuration for Guacamole's default authentication module, showing how to define users with plaintext and MD5-hashed passwords, and how to configure their authorized VNC connections with various parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<user-mapping>\n\n    <!-- Per-user authentication and config information -->\n    <authorize username=\"USERNAME\" password=\"PASSWORD\">\n        <protocol>vnc</protocol>\n        <param name=\"hostname\">localhost</param>\n        <param name=\"port\">5900</param>\n        <param name=\"password\">VNCPASS</param>\n    </authorize>\n\n    <!-- Another user, but using md5 to hash the password\n         (example below uses the md5 hash of \"PASSWORD\") -->\n    <authorize\n            username=\"USERNAME2\"\n            password=\"319f4d26e3c536b5dd871bb2c52e3178\"\n            encoding=\"md5\">\n\n        <!-- First authorized connection -->\n        <connection name=\"localhost\">\n            <protocol>vnc</protocol>\n            <param name=\"hostname\">localhost</param>\n            <param name=\"port\">5901</param>\n            <param name=\"password\">VNCPASS</param>\n        </connection>\n\n        <!-- Second authorized connection -->\n        <connection name=\"otherhost\">\n            <protocol>vnc</protocol>\n            <param name=\"hostname\">otherhost</param>\n            <param name=\"port\">5900</param>\n            <param name=\"password\">VNCPASS</param>\n        </connection>\n\n    </authorize>\n\n</user-mapping>\n```\n\n----------------------------------------\n\nTITLE: Establishing a Connection in Guacamole Extension\nDESCRIPTION: Outlines the process of establishing a connection using the Connection interface, including creating a GuacamoleTunnel.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nconnect()\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL Database and Schema for Guacamole\nDESCRIPTION: Commands for creating a new MySQL database for Guacamole and importing the required schema files. Includes database creation and schema import steps.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 233\nServer version: 5.5.29-0ubuntu0.12.10.1 (Ubuntu)\n\nmysql> CREATE DATABASE guacamole_db;\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> quit\nBye\n$ ls schema/\n001-create-schema.sql  002-create-admin-user.sql  upgrade\n$ cat schema/*.sql | mysql -u root -p guacamole_db\nEnter password:\n$\n```\n\n----------------------------------------\n\nTITLE: Initializing Guacamole Client in HTML with JavaScript\nDESCRIPTION: This snippet demonstrates how to set up the Guacamole client in an HTML file. It includes creating an HTTP tunnel, instantiating the client, adding it to the DOM, and handling connections and errors.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n    ...\n    <body>\n\n        <!-- Guacamole -->\n        <script type=\"text/javascript\"\n            src=\"guacamole-common-js/all.min.js\"></script>\n\n        <!-- Display -->\n        <div id=\"display\"></div>\n\n        <!-- Init -->\n        <script type=\"text/javascript\"> /* <![CDATA[ */\n\n            // Get display div from document\n            var display = document.getElementById(\"display\");\n\n            // Instantiate client, using an HTTP tunnel for communications.\n            var guac = new Guacamole.Client(\n                new Guacamole.HTTPTunnel(\"tunnel\")\n            );\n\n            // Add client to display div\n            display.appendChild(guac.getDisplay().getElement());\n            \n            // Error handler\n            guac.onerror = function(error) {\n                alert(error);\n            };\n\n            // Connect\n            guac.connect();\n\n            // Disconnect on close\n            window.onunload = function() {\n                guac.disconnect();\n            }\n\n        /* ]]> */ </script>\n\n    </body>\n    ...\n```\n\n----------------------------------------\n\nTITLE: Extracting Guacamole Server Source Archive\nDESCRIPTION: Commands to extract the guacamole-server stable release archive and navigate to the extracted directory. This is the recommended approach for production environments as stable releases have undergone thorough testing.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ tar -xzf guacamole-server-1.6.0.tar.gz\n$ cd guacamole-server-1.6.0/\n$\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Setting Connection ID for Shared Connections\nDESCRIPTION: Demonstrates how to retrieve and set the connection ID for shared connections using ConfiguredGuacamoleSocket and GuacamoleConfiguration in Guacamole's extension API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_15\n\nLANGUAGE: java\nCODE:\n```\ngetConnectionID()\n```\n\nLANGUAGE: java\nCODE:\n```\nsetConnectionID()\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Guacamole Tunnel Servlet in Java\nDESCRIPTION: Java implementation of a tunnel servlet that extends GuacamoleHTTPTunnelServlet. This class establishes a connection to guacd with a hard-coded VNC configuration to provide a simple remote desktop connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.net.example;\n\nimport javax.servlet.http.HttpServletRequest;\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.net.GuacamoleSocket;\nimport org.apache.guacamole.net.GuacamoleTunnel;\nimport org.apache.guacamole.net.InetGuacamoleSocket;\nimport org.apache.guacamole.net.SimpleGuacamoleTunnel;\nimport org.apache.guacamole.protocol.ConfiguredGuacamoleSocket;\nimport org.apache.guacamole.protocol.GuacamoleConfiguration;\nimport org.apache.guacamole.servlet.GuacamoleHTTPTunnelServlet;\n\npublic class TutorialGuacamoleTunnelServlet\n    extends GuacamoleHTTPTunnelServlet {\n\n    @Override\n    protected GuacamoleTunnel doConnect(HttpServletRequest request)\n        throws GuacamoleException {\n\n        // Create our configuration\n        GuacamoleConfiguration config = new GuacamoleConfiguration();\n        config.setProtocol(\"vnc\");\n        config.setParameter(\"hostname\", \"localhost\");\n        config.setParameter(\"port\", \"5901\");\n        config.setParameter(\"password\", \"potato\");\n\n        // Connect to guacd - everything is hard-coded here.\n        GuacamoleSocket socket = new ConfiguredGuacamoleSocket(\n                new InetGuacamoleSocket(\"localhost\", 4822),\n                config\n        );\n\n        // Return a new tunnel which uses the connected socket\n        return new SimpleGuacamoleTunnel(socket);;\n\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTTP Tunnel for Guacamole\nDESCRIPTION: Creates a new HTTP tunnel instance by supplying the relative URL to the server-side tunnel servlet. This tunnel can then be passed to a Guacamole.Client for use in a connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar tunnel = new Guacamole.Tunnel(\"tunnel\");\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom GuacamoleHTTPTunnelServlet\nDESCRIPTION: Example of extending GuacamoleHTTPTunnelServlet by implementing the doConnect() method to create a connection to guacd. This simple implementation returns a new SimpleGuacamoleTunnel with the connected socket.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common.md#2025-04-11_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class MyGuacamoleTunnelServlet\n    extends GuacamoleHTTPTunnelServlet {\n\n    @Override\n    protected GuacamoleTunnel doConnect(HttpServletRequest request)\n        throws GuacamoleException {\n\n        // Connect to guacd here (this is a STUB)\n        GuacamoleSocket socket;\n\n        // Return a new tunnel which uses the connected socket\n        return new SimpleGuacamoleTunnel(socket);\n\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL Database and Schema for Guacamole\nDESCRIPTION: Commands for creating a new PostgreSQL database for Guacamole and importing the schema files. Shows database creation and schema import process.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ createdb guacamole_db\n$ ls schema/\n001-create-schema.sql  002-create-admin-user.sql\n$ cat schema/*.sql | psql -d guacamole_db -f -\nCREATE TYPE\nCREATE TYPE\nCREATE TYPE\nCREATE TABLE\nCREATE INDEX\n...\nINSERT 0 1\nINSERT 0 4\nINSERT 0 3\n$\n```\n\n----------------------------------------\n\nTITLE: Connecting Guacamole to MySQL via Docker Link\nDESCRIPTION: Command for running a Guacamole Docker container with links to MySQL and guacd containers. This approach uses Docker networking to connect the containers.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    --link some-guacd:guacd        \\\n    --link some-mysql:mysql        \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Initializing Guacamole Client Display\nDESCRIPTION: Implements the join handler and client initialization functions. Sets up a 1024x768 display with gray background using Guacamole protocol instructions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_6\n\nLANGUAGE: c\nCODE:\n```\n#include <guacamole/client.h>\n#include <guacamole/protocol.h>\n#include <guacamole/socket.h>\n#include <guacamole/user.h>\n\n#include <stdlib.h>\n\n...\n\nint ball_join_handler(guac_user* user, int argc, char** argv) {\n\n    /* Get client associated with user */\n    guac_client* client = user->client;\n\n    /* Get user-specific socket */\n    guac_socket* socket = user->socket;\n\n    /* Send the display size */\n    guac_protocol_send_size(socket, GUAC_DEFAULT_LAYER, 1024, 768);\n\n    /* Prepare a curve which covers the entire layer */\n    guac_protocol_send_rect(socket, GUAC_DEFAULT_LAYER,\n            0, 0, 1024, 768);\n\n    /* Fill curve with solid color */\n    guac_protocol_send_cfill(socket,\n            GUAC_COMP_OVER, GUAC_DEFAULT_LAYER,\n            0x80, 0x80, 0x80, 0xFF);\n\n    /* Mark end-of-frame */\n    guac_protocol_send_sync(socket, client->last_sent_timestamp);\n\n    /* Flush buffer */\n    guac_socket_flush(socket);\n\n    /* User successfully initialized */\n    return 0;\n\n}\n\nint guac_client_init(guac_client* client) {\n\n    /* This example does not implement any arguments */\n    client->args = TUTORIAL_ARGS;\n\n    /* Client-level handlers */\n    client->join_handler = ball_join_handler;\n\n    return 0;\n\n}\n```\n\n----------------------------------------\n\nTITLE: Example URIs for Guacamole Quickconnect\nDESCRIPTION: Sample URIs demonstrating how to establish connections to different types of servers using various protocols and parameters with the quickconnect extension.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/adhoc-connections.md#2025-04-11_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nssh://linux1.example.com/\nvnc://linux1.example.com:5900/\nrdp://localuser@windows1.example.com/?security=rdp&ignore-cert=true&disable-audio=true&enable-drive=true&drive-path=/mnt/usb\n```\n\n----------------------------------------\n\nTITLE: Sending Size Instruction to All Users in Guacamole Client Plugin\nDESCRIPTION: Shows how to send a 'size' instruction to all connected users using the client-level broadcast socket in a Guacamole client plugin.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_3\n\nLANGUAGE: c\nCODE:\n```\nguac_protocol_send_size(client->socket, GUAC_DEFAULT_LAYER, 1024, 768);\n```\n\n----------------------------------------\n\nTITLE: Running guacd Container for Guacamole Docker Image\nDESCRIPTION: Command to run the guacd Docker container without exposing ports externally. This container will provide the guacd daemon accessible only to linked Docker containers.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacd -d guacamole/guacd\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx as Reverse Proxy for Guacamole with WebSocket Support\nDESCRIPTION: Nginx location block configuration for proxying Guacamole traffic. Includes necessary headers for WebSocket support and disables buffering which is critical for Guacamole's HTTP tunnel functionality.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_3\n\nLANGUAGE: nginx\nCODE:\n```\nlocation /guacamole/ {\n    proxy_pass http://HOSTNAME:8080;\n    proxy_buffering off;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    access_log off;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Time-Based Animation in Guacamole Client\nDESCRIPTION: Code that handles the passage of time in the ball rendering thread. It tracks actual frame duration, adjusts for client processing lag, and updates the ball position based on elapsed time for smooth, consistent animation regardless of network conditions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_12\n\nLANGUAGE: c\nCODE:\n```\n#include \"ball.h\"\n\n#include <guacamole/client.h>\n#include <guacamole/layer.h>\n#include <guacamole/protocol.h>\n#include <guacamole/socket.h>\n#include <guacamole/timestamp.h>\n#include <guacamole/user.h>\n\n#include <pthread.h>\n#include <stdlib.h>\n\n...\n\nvoid* ball_render_thread(void* arg) {\n\n    ...\n\n    /* Init time of last frame to current time */\n    guac_timestamp last_frame = guac_timestamp_current();\n\n    /* Update ball position as long as client is running */\n    while (client->state == CLIENT_RUNNING) {\n\n        /* Default to 30ms frames */\n        int frame_duration = 30;\n\n        /* Lengthen frame duration if client is lagging */\n        int processing_lag = guac_client_get_processing_lag(client);\n        if (processing_lag > frame_duration)\n            frame_duration = processing_lag;\n\n        /* Sleep for duration of frame, then get timestamp */\n        usleep(frame_duration);\n        guac_timestamp current = guac_timestamp_current();\n\n        /* Calculate change in time */\n        int delta_t = current - last_frame;\n\n        /* Update position */\n        data->ball_x += data->ball_velocity_x * delta_t / 1000;\n        data->ball_y += data->ball_velocity_y * delta_t / 1000;\n\n        ...\n\n        /* Update timestamp */\n        last_frame = current;\n\n    }\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Text Data to Terminal Using Guacamole StringWriter\nDESCRIPTION: Demonstrates how to use the Guacamole.StringWriter to send text data to a terminal session through the previously created pipe stream. The example shows sending multiple text segments and properly closing the writer and stream.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n// Wrap output stream in writer\nvar writer = new Guacamole.StringWriter(outputStream);\n\n// Send text\nwriter.sendText(\"hello\");\n\n// Send more text\nwriter.sendText(\"world\");\n\n// Close writer and stream\nwriter.sendEnd();\n```\n\n----------------------------------------\n\nTITLE: Accessing Connection and Group Directories in Java\nDESCRIPTION: Shows how to retrieve directories for connections and connection groups using the UserContext interface in Guacamole's extension API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_11\n\nLANGUAGE: java\nCODE:\n```\ngetConnectionDirectory()\n```\n\nLANGUAGE: java\nCODE:\n```\ngetConnectionGroupDirectory()\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Event Handler for Guacamole User in C\nDESCRIPTION: Demonstrates how to implement and set a mouse event handler for a Guacamole user. This handler processes mouse movement and button events from the client.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_6\n\nLANGUAGE: c\nCODE:\n```\nint mouse_handler(guac_user* user, int x, int y, int button_mask) {\n    /* Do something */\n}\n\n...\n\n/* Within the \"join\" handler of guac_client */\nuser->mouse_handler = mouse_handler;\n```\n\n----------------------------------------\n\nTITLE: Deploying Guacamole to Tomcat\nDESCRIPTION: Command for copying the guacamole.war file to the Tomcat webapps directory, which deploys the Guacamole web application to the Tomcat servlet container.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_9\n\nLANGUAGE: console\nCODE:\n```\n# cp guacamole.war /var/lib/tomcat/webapps\n#\n```\n\n----------------------------------------\n\nTITLE: Adding Guacamole Client Display to DOM\nDESCRIPTION: Adds the Guacamole client's display element to the document body, making it visible to users. This step is necessary before the display will appear in the DOM.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.body.appendChild(client.getDisplay().getElement());\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Authentication Event Listener in Java\nDESCRIPTION: This snippet shows a basic implementation of a Guacamole event listener that logs authentication success and failure events. It demonstrates how to handle different event types and access event-specific properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.event;\n\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.net.event.AuthenticationFailureEvent;\nimport org.apache.guacamole.net.event.AuthenticationSuccessEvent;\nimport org.apache.guacamole.net.event.listener.Listener;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class TutorialListener implements Listener {\n\n    private static final Logger logger = \n        LoggerFactory.getLogger(TutorialListener.class);\n\n    @Override\n    public void handleEvent(Object event) throws GuacamoleException {\n\n        if (event instanceof AuthenticationSuccessEvent) {\n            logger.info(\"successful authentication for user {}\", \n                ((AuthenticationSuccessEvent) event)\n                    .getCredentials().getUsername());\n        }\n        else if (event instanceof AuthenticationFailureEvent) {\n            logger.info(\"failed authentication for user {}\", \n                ((AuthenticationFailureEvent) event)\n                    .getCredentials().getUsername());\n        }\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Pipe Stream for Terminal Input in Guacamole\nDESCRIPTION: Creates a pipe stream named 'STDIN' to send data directly to a terminal session. This allows for programmatic input to SSH, telnet, or other terminal sessions without simulating keystrokes.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nvar outputStream = client.createPipeStream('text/plain', 'STDIN');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Root Connection Group in Java\nDESCRIPTION: Demonstrates how to access the root-level connection group using the UserContext interface in Guacamole's extension API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_10\n\nLANGUAGE: java\nCODE:\n```\ngetRootConnectionGroup()\n```\n\n----------------------------------------\n\nTITLE: Sample Guacamole Properties Configuration\nDESCRIPTION: This is a typical guacamole.properties configuration that explicitly defines values for the guacd-hostname and guacd-port properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Generating 128-bit AES Key Using MD5Sum in Bash\nDESCRIPTION: Demonstrates how to generate a 128-bit key for AES encryption by using md5sum on a passphrase. This generates a 32-digit hexadecimal value that can be used as the secret key for JSON authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ echo -n \"ThisIsATest\" | md5sum\n4c0b569e4c96df157eee1b65dd0e4d41  -\n```\n\n----------------------------------------\n\nTITLE: Creating New Guacamole User with Salted Password in MySQL\nDESCRIPTION: SQL script to create a new user in Guacamole with proper password salting and hashing using SHA-256. The script generates a random salt, creates the base entity entry, and inserts the user record with the hashed password.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_37\n\nLANGUAGE: mysql\nCODE:\n```\n-- Generate salt\nSET @salt = UNHEX(SHA2(UUID(), 256));\n\n-- Create base entity entry for user\nINSERT INTO guacamole_entity (name, type)\nVALUES ('myuser', 'USER');\n\n-- Create user and hash password with salt\nINSERT INTO guacamole_user (\n    entity_id,\n    password_salt,\n    password_hash,\n    password_date\n)\nSELECT\n    entity_id,\n    @salt,\n    UNHEX(SHA2(CONCAT('mypassword', HEX(@salt)), 256)),\n    CURRENT_TIMESTAMP\nFROM guacamole_entity\nWHERE\n    name = 'myuser'\n    AND type = 'USER';\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Guacamole Recording Storage\nDESCRIPTION: Commands to set the correct ownership and permissions for the recording storage directory to allow guacd to write recordings and Tomcat to read them.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/recording-playback.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ chown guacd:tomcat /var/lib/guacamole/recordings\n$ chmod 2750 /var/lib/guacamole/recordings\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom Property Value in Guacamole\nDESCRIPTION: Demonstrates how to retrieve the value of a custom property using the Environment interface's getProperty() method.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nInteger value = environment.getProperty(MyProperties.MY_PROPERTY);\n```\n\n----------------------------------------\n\nTITLE: Implementing Touch Event Handling in Guacamole\nDESCRIPTION: Sets up touch event handling with either Guacamole.Touchpad or Guacamole.Touchscreen. These abstractions convert touch events into mouse-like events, providing a consistent interface for handling both mouse and touch input.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar element = document.getElementById(\"some-arbitrary-id\");\nvar touch = new Guacamole.Touchpad(element); // or Guacamole.Touchscreen\n\ntouch.onmousedown =\ntouch.onmousemove =\ntouch.onmouseup   = function(state) {\n\n    // Do something with the mouse state received ...\n\n};\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Server Database and Schema for Guacamole\nDESCRIPTION: Commands for creating a new SQL Server database for Guacamole and importing the schema files using sqlcmd utility.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ /opt/mssql-tools/bin/sqlcmd -S localhost -U SA\nPassword:\n1> CREATE DATABASE guacamole_db;\n2> GO\n1> quit\n$ /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -d guacamole_db -i schema/001-create-schema.sql\nPassword:\nRule bound to data type.\nThe new rule has been bound to column(s) of the specified user data type.\nRule bound to data type.\nThe new rule has been bound to column(s) of the specified user data type.\n$ /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -d guacamole_db -i schema/002-create-admin-user.sql\nPassword:\n\n(1 rows affected)\n\n(3 rows affected)\n\n(5 rows affected)\n$\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache Location Block for Guacamole Proxy\nDESCRIPTION: This Apache configuration sets up a reverse proxy for Guacamole using mod_proxy. It includes the crucial flushpackets=on option to ensure proper streaming of data.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\n<Location /guacamole/>\n    Order allow,deny\n    Allow from all\n    ProxyPass http://HOSTNAME:8080/guacamole/ flushpackets=on\n    ProxyPassReverse http://HOSTNAME:8080/guacamole/\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Implementing Ball Rendering Thread\nDESCRIPTION: Thread function that updates ball position and handles collision with display boundaries. Updates display at fixed intervals.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_9\n\nLANGUAGE: c\nCODE:\n```\nvoid* ball_render_thread(void* arg) {\n    guac_client* client = (guac_client*) arg;\n    ball_client_data* data = (ball_client_data*) client->data;\n    while (client->state == GUAC_CLIENT_RUNNING) {\n        usleep(30000);\n        data->ball_x += data->ball_velocity_x * 30 / 1000;\n        data->ball_y += data->ball_velocity_y * 30 / 1000;\n        if (data->ball_x < 0) {\n            data->ball_x = -data->ball_x;\n            data->ball_velocity_x = -data->ball_velocity_x;\n        }\n        else if (data->ball_x >= 1024 - 128) {\n            data->ball_x = (2 * (1024 - 128)) - data->ball_x;\n            data->ball_velocity_x = -data->ball_velocity_x;\n        }\n        if (data->ball_y < 0) {\n            data->ball_y = -data->ball_y;\n            data->ball_velocity_y = -data->ball_velocity_y;\n        }\n        else if (data->ball_y >= 768 - 128) {\n            data->ball_y = (2 * (768 - 128)) - data->ball_y;\n            data->ball_velocity_y = -data->ball_velocity_y;\n        }\n        guac_protocol_send_move(client->socket, data->ball,\n                GUAC_DEFAULT_LAYER, data->ball_x, data->ball_y, 0);\n        guac_client_end_frame(client);\n        guac_socket_flush(client->socket);\n    }\n    return NULL;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing User Authentication in Java for Guacamole\nDESCRIPTION: This snippet shows the implementation of the getAuthorizedConfigurations method for authenticating users based on the username and password defined in guacamole.properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic Map<String, GuacamoleConfiguration>\n    getAuthorizedConfigurations(Credentials credentials)\n    throws GuacamoleException {\n\n    // Get the Guacamole server environment\n    Environment environment = LocalEnvironment.getInstance();\n\n    // Get username from guacamole.properties\n    String username = environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_USER\n    );      \n\n    // If wrong username, fail\n    if (!username.equals(credentials.getUsername()))\n        return null;\n\n    // Get password from guacamole.properties\n    String password = environment.getRequiredProperty(\n        TutorialGuacamoleProperties.TUTORIAL_PASSWORD\n    );      \n\n    // If wrong password, fail\n    if (!password.equals(credentials.getPassword()))\n        return null;\n\n    // Successful login. Return configurations (STUB)\n    return new HashMap<String, GuacamoleConfiguration>();\n\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting Guacamole Client\nDESCRIPTION: Initiates the connection for a Guacamole client. This calls the connect() function of the tunnel originally given to the client, establishing a connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclient.connect();\n```\n\n----------------------------------------\n\nTITLE: Restarting Tomcat and Starting guacd Daemon\nDESCRIPTION: Commands to restart the Tomcat service and start the guacd daemon after deploying the Guacamole WAR file. Shows the init scripts with corresponding success messages.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n# /etc/init.d/tomcat7 restart\nStopping Tomcat... OK\nStarting Tomcat... OK\n# /etc/init.d/guacd start\nStarting guacd: SUCCESS\nguacd[6229]: INFO:  Guacamole proxy daemon (guacd) version 1.6.0 started\n#\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Event Handling in Guacamole\nDESCRIPTION: Sets up mouse event handling with Guacamole.Mouse abstraction. This provides consistent cross-browser mouse events by binding to a DOM element and implementing handlers for mousedown, mousemove, and mouseup events.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar element = document.getElementById(\"some-arbitrary-id\");\nvar mouse = new Guacamole.Mouse(element);\n\nmouse.onmousedown =\nmouse.onmousemove =\nmouse.onmouseup   = function(state) {\n\n    // Do something with the mouse state received ...\n\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Extension Manifest File for Guacamole\nDESCRIPTION: The guac-manifest.json file required for all Guacamole extensions. It defines the extension's compatibility version, name, namespace, and the authentication provider class to be used.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\n    \"guacamoleVersion\" : \"1.6.0\",\n\n    \"name\"      : \"Tutorial Authentication Extension\",\n    \"namespace\" : \"guac-auth-tutorial\",\n\n    \"authProviders\" : [\n        \"org.apache.guacamole.auth.TutorialAuthenticationProvider\"\n    ]\n\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Keyboard Event Handling in Guacamole\nDESCRIPTION: Sets up keyboard event handling using Guacamole.Keyboard abstraction. This provides a consistent interface for handling keyboard events across browsers by converting them to X11 keysyms, which are compatible with the Guacamole protocol.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar keyboard = new Guacamole.Keyboard(document);\n\nkeyboard.onkeydown = function(keysym) {\n    // Do something ...\n};\n\nkeyboard.onkeyup = function(keysym) {\n    // Do something ...\n};\n```\n\n----------------------------------------\n\nTITLE: Restricting Authentication to Database Users (SQL Server)\nDESCRIPTION: Configuration property to restrict authentication to only users in the SQL Server database. This setting forces the database to have the final say on user access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_30\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-user-required: true\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Structure for Guacamole Authentication\nDESCRIPTION: The general format of the JSON data structure needed for Guacamole authentication, prior to encryption and signing. The structure includes user information, expiration timestamp, and connection configurations.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\n    \"username\" : \"arbitraryUsername\",\n    \"expires\" : TIMESTAMP,\n    \"connections\" : {\n\n        \"Connection Name\" : {\n            \"protocol\" : \"PROTOCOL\",\n            \"parameters\" : {\n                \"name1\" : \"value1\",\n                \"name2\" : \"value2\",\n                ...\n            }\n        },\n\n        ...\n\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Installing guacamole-server and Updating Library Cache\nDESCRIPTION: Demonstrates installing the compiled components with 'make install' and updating the system's library cache with 'ldconfig'.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n# make install\nMaking install in src/libguac\nmake[1]: Entering directory `/home/mjumper/guacamole/guacamole-server/src/libguac'\nmake[2]: Entering directory `/home/mjumper/guacamole/guacamole-server/src/libguac'\n...\n----------------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nIf you ever happen to want to link against installed libraries\nin a given directory, LIBDIR, you must either use libtool, and\nspecify the full pathname of the library, or use the `-LLIBDIR'\nflag during linking and do at least one of the following:\n   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the `LD_RUN_PATH' environment variable\n     during linking\n   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n   - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld(1) and ld.so(8) manual pages.\n----------------------------------------------------------------------\nmake[2]: Nothing to be done for `install-data-am'.\nmake[2]: Leaving directory `/home/mjumper/guacamole/guacamole-server/src/protocols/vnc'\nmake[1]: Leaving directory `/home/mjumper/guacamole/guacamole-server/src/protocols/vnc'\nmake[1]: Entering directory `/home/mjumper/guacamole/guacamole-server'\nmake[2]: Entering directory `/home/mjumper/guacamole/guacamole-server'\nmake[2]: Nothing to be done for `install-exec-am'.\nmake[2]: Nothing to be done for `install-data-am'.\nmake[2]: Leaving directory `/home/mjumper/guacamole/guacamole-server'\nmake[1]: Leaving directory `/home/mjumper/guacamole/guacamole-server'\n# ldconfig\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Client Select Instruction in Guacamole Handshake\nDESCRIPTION: This snippet shows the 'select' instruction sent by the client to initiate the handshake phase and select the VNC protocol.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n6.select,3.vnc;\n```\n\n----------------------------------------\n\nTITLE: Adding LDAP Schema to OpenLDAP\nDESCRIPTION: Command to add the Guacamole LDAP schema configuration using ldapadd utility. This adds the guacConfigGroup object class to the LDAP schema.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n# ldapadd -Q -Y EXTERNAL -H ldapi:/// -f schema/guacConfigGroup.ldif\n```\n\n----------------------------------------\n\nTITLE: Illustrating Server Args Instruction in Guacamole Handshake\nDESCRIPTION: This snippet demonstrates the 'args' instruction sent by the server in response to the client's select instruction, providing protocol version and accepted parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n4.args,13.VERSION_1_1_0,8.hostname,4.port,8.password,13.swap-red-blue,9.read-only;\n```\n\n----------------------------------------\n\nTITLE: Configuring Guacamole Proxy Connection Settings in YAML\nDESCRIPTION: Basic YAML configuration for the Guacamole proxy (guacd) connection, specifying the hostname and port where the Guacamole proxy server is running.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# Hostname and port of guacamole proxy\nguacd-hostname: localhost\nguacd-port:     4822\n```\n\n----------------------------------------\n\nTITLE: Initializing On-Screen Keyboard in JavaScript\nDESCRIPTION: Shows how to add a Guacamole on-screen keyboard to a webpage and set its size. Creates a keyboard instance from a layout file and appends it to the document body.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Add keyboard to body\nvar keyboard = new Guacamole.OnScreenKeyboard(\"path/to/layout.xml\");\ndocument.body.appendChild(keyboard.getElement());\n\n// Set size of keyboard to 100 pixels\nkeyboard.resize(100);\n```\n\n----------------------------------------\n\nTITLE: Creating Maven POM File for Guacamole Authentication Extension\nDESCRIPTION: Maven project configuration file (pom.xml) for building a Guacamole authentication extension. It defines project metadata, Java compiler settings, and dependencies including guacamole-ext API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n                        http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.apache.guacamole</groupId>\n    <artifactId>guacamole-auth-tutorial</artifactId>\n    <packaging>jar</packaging>\n    <version>1.6.0</version>\n    <name>guacamole-auth-tutorial</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <build>\n        <plugins>\n\n            <!-- Written for Java 8 -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.3</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n\n        </plugins>\n    </build>\n\n    <dependencies>\n\n        <!-- Guacamole Extension API -->\n        <dependency>\n            <groupId>org.apache.guacamole</groupId>\n            <artifactId>guacamole-ext</artifactId>\n            <version>1.6.0</version>\n            <scope>provided</scope>\n        </dependency>\n\n    </dependencies>\n\n</project>\n```\n\n----------------------------------------\n\nTITLE: Handling Keyboard Events in JavaScript\nDESCRIPTION: Demonstrates how to handle keyup and keydown events from the on-screen keyboard. Events provide X11 keysym values for key presses and releases.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Assuming we have an instance of Guacamole.OnScreenKeyboard already\n// called \"keyboard\"\n\nkeyboard.onkeydown = function(keysym) {\n    // Do something ...\n};\n\nkeyboard.onkeyup = function(keysym) {\n    // Do something ...\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Event Handling in Guacamole Listener\nDESCRIPTION: Enhanced Java implementation of a Guacamole event listener that specifically handles authentication success and failure events. The code checks the event type and logs detailed information about authentication attempts.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.event;\n\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.net.event.AuthenticationFailureEvent;\nimport org.apache.guacamole.net.event.AuthenticationSuccessEvent;\nimport org.apache.guacamole.net.event.listener.Listener;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n/**\n * A Listener that logs authentication success and failure events.\n */\npublic class TutorialListener implements Listener {\n\n    private static final Logger logger = \n        LoggerFactory.getLogger(TutorialListener.class);\n\n    @Override\n    public void handleEvent(Object event) throws GuacamoleException {\n\n        if (event instanceof AuthenticationSuccessEvent) {\n            logger.info(\"successful authentication for user {}\", \n                ((AuthenticationSuccessEvent) event)\n```\n\n----------------------------------------\n\nTITLE: Configuration Properties for Duo Authentication in Guacamole\nDESCRIPTION: Essential and optional configuration properties to be added to guacamole.properties for enabling Duo authentication. Includes API hostname, client credentials, redirect URI, timeout settings, and IP-based enforcement options.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/duo-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nduo-api-hostname\nduo-client-id\nduo-client-secret\nduo-redirect-uri\nduo-auth-timeout\nduo-bypass-hosts\nduo-enforce-hosts\n```\n\n----------------------------------------\n\nTITLE: Defining Guacamole Dependencies in Maven POM\nDESCRIPTION: Maven dependencies configuration that includes the Servlet API, Guacamole's main Java library, and the Guacamole JavaScript library required for the web application.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n    ...\n\n    <dependencies>\n\n        <!-- Servlet API -->\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n            <version>2.5</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <!-- Main Guacamole library -->\n        <dependency>\n            <groupId>org.apache.guacamole</groupId>\n            <artifactId>guacamole-common</artifactId>\n            <version>1.6.0</version>\n            <scope>compile</scope>\n        </dependency>\n\n        <!-- Guacamole JavaScript library -->\n        <dependency>\n            <groupId>org.apache.guacamole</groupId>\n            <artifactId>guacamole-common-js</artifactId>\n            <version>1.6.0</version>\n            <type>zip</type>\n            <scope>runtime</scope>\n        </dependency>\n\n    </dependencies>\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Cloning Guacamole Server Git Repository\nDESCRIPTION: Command to clone the latest guacamole-server source code from the Apache GitHub repository. This approach provides the absolute latest code but may not be as thoroughly tested as stable releases.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git://github.com/apache/guacamole-server.git\nCloning into 'guacamole-server'...\nremote: Counting objects: 6769, done.\nremote: Compressing objects: 100% (2244/2244), done.\nremote: Total 6769 (delta 3058), reused 6718 (delta 3008)\nReceiving objects: 100% (6769/6769), 2.32 MiB | 777 KiB/s, done.\nResolving deltas: 100% (3058/3058), done.\n$\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Guacamole Properties in Java\nDESCRIPTION: This snippet defines a utility class containing all properties used by the custom authentication tutorial. It includes properties for the allowed user, password, connection protocol, and parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.auth;\n\nimport org.apache.guacamole.properties.StringGuacamoleProperty;\n\n/**\n * Utility class containing all properties used by the custom authentication\n * tutorial. The properties defined here must be specified within\n * guacamole.properties to configure the tutorial authentication provider.\n */\npublic class TutorialGuacamoleProperties {\n\n    /**\n     * This class should not be instantiated.\n     */\n    private TutorialGuacamoleProperties() {}\n\n    /**\n     * The only user to allow.\n     */\n    public static final StringGuacamoleProperty TUTORIAL_USER = \n        new StringGuacamoleProperty() {\n\n        @Override\n        public String getName() { return \"tutorial-user\"; }\n\n    };\n\n    /**\n     * The password required for the specified user.\n     */\n    public static final StringGuacamoleProperty TUTORIAL_PASSWORD = \n        new StringGuacamoleProperty() {\n\n        @Override\n        public String getName() { return \"tutorial-password\"; }\n\n    };\n\n\n    /**\n     * The protocol to use when connecting.\n     */\n    public static final StringGuacamoleProperty TUTORIAL_PROTOCOL = \n        new StringGuacamoleProperty() {\n\n        @Override\n        public String getName() { return \"tutorial-protocol\"; }\n\n    };\n\n\n    /**\n     * All parameters associated with the connection, as a comma-delimited\n     * list of name=\"value\" \n     */\n    public static final StringGuacamoleProperty TUTORIAL_PARAMETERS = \n        new StringGuacamoleProperty() {\n\n        @Override\n        public String getName() { return \"tutorial-parameters\"; }\n\n    };\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Auth-Ban Properties in guacamole.properties\nDESCRIPTION: Configuration properties for the auth-ban extension that control login attempt thresholds, ban duration, and IP address tracking limits. These properties are optional and have default values if not specified.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/auth-ban.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nban-max-invalid-attempts=5\nban-address-duration=300\nban-max-addresses=10485670\n```\n\n----------------------------------------\n\nTITLE: Setting Display DPI in RDP Sessions\nDESCRIPTION: Optional parameter to specify the desired effective resolution of the client display in DPI. If not specified, Guacamole will use the resolution and size of the client display to determine an appropriate value.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_24\n\nLANGUAGE: markdown\nCODE:\n```\n`dpi`\n: The desired effective resolution of the client display, in DPI. This\n  parameter is optional. If this value is not specified, the resolution and\n  size of the client display will be used together to determine,\n  heuristically, an appropriate resolution for the RDP session.\n```\n\n----------------------------------------\n\nTITLE: Compositing Operations in Guacamole Protocol\nDESCRIPTION: Documents the supported compositing operations in Guacamole protocol using channel masks. Each operation is identified by a unique hex value and performs specific image blending functions based on Porter/Duff compositing model.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\nB out A (0x02)\nA atop B (0x06)\nA xor B (0x0A)\nB over A (0x0B)\nA over B (0x0E)\nA + B (0x0F)\n```\n\n----------------------------------------\n\nTITLE: Building guacamole-client with Maven\nDESCRIPTION: Command and output showing the Maven build process for guacamole-client, which compiles all components and produces a .war file containing the web application and its extensions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_8\n\nLANGUAGE: console\nCODE:\n```\n$ mvn package\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO]\n[INFO] guacamole-client                                                   [pom]\n[INFO] guacamole-common                                                   [jar]\n[INFO] guacamole-ext                                                      [jar]\n[INFO] guacamole-common-js                                                [pom]\n[INFO] guacamole                                                          [war]\n[INFO] extensions                                                         [pom]\n[INFO] guacamole-auth-duo                                                 [jar]\n[INFO] guacamole-auth-header                                              [jar]\n[INFO] guacamole-auth-jdbc                                                [pom]\n[INFO] guacamole-auth-jdbc-base                                           [jar]\n[INFO] guacamole-auth-jdbc-mysql                                          [jar]\n[INFO] guacamole-auth-jdbc-postgresql                                     [jar]\n[INFO] guacamole-auth-jdbc-sqlserver                                      [jar]\n[INFO] guacamole-auth-jdbc-dist                                           [pom]\n[INFO] guacamole-auth-json                                                [jar]\n[INFO] guacamole-auth-ldap                                                [jar]\n[INFO] guacamole-auth-quickconnect                                        [jar]\n[INFO] guacamole-auth-sso                                                 [pom]\n[INFO] guacamole-auth-sso-base                                            [jar]\n[INFO] guacamole-auth-sso-cas                                             [jar]\n[INFO] guacamole-auth-sso-openid                                          [jar]\n[INFO] guacamole-auth-sso-saml                                            [jar]\n[INFO] guacamole-auth-sso-dist                                            [pom]\n[INFO] guacamole-auth-totp                                                [jar]\n[INFO] guacamole-history-recording-storage                                [jar]\n[INFO] guacamole-vault                                                    [pom]\n[INFO] guacamole-vault-base                                               [jar]\n[INFO] guacamole-vault-ksm                                                [jar]\n[INFO] guacamole-vault-dist                                               [pom]\n[INFO] guacamole-example                                                  [war]\n[INFO] guacamole-playback-example                                         [war]\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for guacamole-client 1.6.0:\n[INFO] \n[INFO] guacamole-client ................................... SUCCESS [ 11.879 s]\n[INFO] guacamole-common ................................... SUCCESS [ 15.140 s]\n[INFO] guacamole-ext ...................................... SUCCESS [ 14.764 s]\n[INFO] guacamole-common-js ................................ SUCCESS [ 23.530 s]\n[INFO] guacamole .......................................... SUCCESS [01:09 min]\n[INFO] extensions ......................................... SUCCESS [  0.601 s]\n[INFO] guacamole-auth-duo ................................. SUCCESS [  6.680 s]\n[INFO] guacamole-auth-header .............................. SUCCESS [  3.379 s]\n[INFO] guacamole-auth-jdbc ................................ SUCCESS [  0.239 s]\n[INFO] guacamole-auth-jdbc-base ........................... SUCCESS [  6.755 s]\n[INFO] guacamole-auth-jdbc-mysql .......................... SUCCESS [  6.523 s]\n[INFO] guacamole-auth-jdbc-postgresql ..................... SUCCESS [  4.756 s]\n[INFO] guacamole-auth-jdbc-sqlserver ...................... SUCCESS [  4.600 s]\n[INFO] guacamole-auth-jdbc-dist ........................... SUCCESS [  3.381 s]\n[INFO] guacamole-auth-json ................................ SUCCESS [  6.449 s]\n[INFO] guacamole-auth-ldap ................................ SUCCESS [ 10.611 s]\n[INFO] guacamole-auth-quickconnect ........................ SUCCESS [  6.908 s]\n[INFO] guacamole-auth-sso ................................. SUCCESS [  0.216 s]\n[INFO] guacamole-auth-sso-base ............................ SUCCESS [  4.174 s]\n[INFO] guacamole-auth-sso-cas ............................. SUCCESS [ 12.180 s]\n[INFO] guacamole-auth-sso-openid .......................... SUCCESS [  5.119 s]\n[INFO] guacamole-auth-sso-saml ............................ SUCCESS [  5.263 s]\n[INFO] guacamole-auth-sso-dist ............................ SUCCESS [  6.400 s]\n[INFO] guacamole-auth-totp ................................ SUCCESS [  9.445 s]\n[INFO] guacamole-history-recording-storage ................ SUCCESS [  2.370 s]\n[INFO] guacamole-vault .................................... SUCCESS [  0.177 s]\n[INFO] guacamole-vault-base ............................... SUCCESS [  3.899 s]\n[INFO] guacamole-vault-ksm ................................ SUCCESS [  8.084 s]\n[INFO] guacamole-vault-dist ............................... SUCCESS [  3.555 s]\n[INFO] guacamole-example .................................. SUCCESS [  2.363 s]\n[INFO] guacamole-playback-example ......................... SUCCESS [  1.040 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  04:20 min\n[INFO] Finished at: 2023-01-10T17:20:33-08:00\n[INFO] ------------------------------------------------------------------------\n$\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Guacamole Protocol Instruction Format\nDESCRIPTION: This snippet shows the basic structure of a Guacamole protocol instruction, including the opcode and arguments format.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nOPCODE,ARG1,ARG2,ARG3,...;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sharing Credentials for Active Connection\nDESCRIPTION: Shows how to obtain sharing credentials for an active connection using the ActiveConnection interface in Guacamole's extension API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_14\n\nLANGUAGE: java\nCODE:\n```\ngetSharingCredentials()\n```\n\n----------------------------------------\n\nTITLE: Creating Guacamole Extension Manifest File\nDESCRIPTION: JSON manifest file (guac-manifest.json) required for Guacamole extensions. It specifies the extension name, compatible Guacamole version, namespace, and the fully-qualified class name of the listener implementation.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\n    \"guacamoleVersion\" : \"1.6.0\",\n\n    \"name\"      : \"Tutorial Listener Extension\",\n    \"namespace\" : \"guac-listener-tutorial\",\n\n    \"listeners\" : [\n        \"org.apache.guacamole.event.TutorialListener\"\n    ]\n\n}\n```\n\n----------------------------------------\n\nTITLE: Directory Class Interface Overview (Java)\nDESCRIPTION: Describes the core Directory class interface methods used for managing objects in Guacamole authentication providers. Includes get(), add(), update() and remove() operations.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nDirectory {\n    T get(String identifier);\n    void add(T object);\n    void update(T object);\n    void remove(String identifier);\n}\n```\n\n----------------------------------------\n\nTITLE: System Permission Constants (Java)\nDESCRIPTION: Defines the core system permission constants used in Guacamole's permission system, including administrative and creation permissions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nADMINISTER\nCREATE_CONNECTION\nCREATE_CONNECTION_GROUP\nCREATE_SHARING_PROFILE\nCREATE_USER\n```\n\n----------------------------------------\n\nTITLE: Configuring RADIUS Authentication Parameters in Guacamole Properties\nDESCRIPTION: This snippet lists and explains various configuration parameters for RADIUS authentication in Guacamole. It includes settings for authentication protocols, key files, certificate handling, and connection behaviors.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/radius-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nradius-auth-protocol=pap|chap|mschapv1|mschapv2|eap-md5|eap-tls|eap-ttls\nradius-key-file=/path/to/radius.key\nradius-key-type=pem|jceks|jks|pkcs12\nradius-key-password=your_key_password\nradius-ca-file=/path/to/ca.crt\nradius-ca-type=pem|jceks|jks|pkcs12\nradius-ca-password=your_ca_password\nradius-trust-all=true|false\nradius-retries=5\nradius-timeout=60\nradius-eap-ttls-inner-protocol=inner_protocol\nradius-nas-ip=manual_nas_ip_address\n```\n\n----------------------------------------\n\nTITLE: Importing Connections using CSV Format in Apache Guacamole\nDESCRIPTION: Example of a CSV file format for batch importing connections. It includes fields for connection name, protocol, credentials, hostname, group, users, and attributes.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/batch-import.md#2025-04-11_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\nname,protocol,username,password,hostname,group,users,groups,guacd-encryption (attribute)\nconn1,vnc,alice,pass1,conn1.web.com,ROOT,guac user 1;guac user 2,Connection 1 Users,none\nconn2,rdp,bob,pass2,conn2.web.com,ROOT/Parent Group,guac user 1,,ssl\nconn3,ssh,carol,pass3,conn3.web.com,ROOT/Parent Group/Child Group,guac user 2;guac user 3,,\nconn4,kubernetes,,,,,,,\n\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL User Permissions for Guacamole\nDESCRIPTION: SQL commands for creating a PostgreSQL user and granting necessary permissions for Guacamole database access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ psql -d guacamole_db\npsql (9.3.6)\nType \"help\" for help.\n\nguacamole=# CREATE USER guacamole_user WITH PASSWORD 'some_password';\nCREATE ROLE\nguacamole=# GRANT SELECT,INSERT,UPDATE,DELETE ON ALL TABLES IN SCHEMA public TO guacamole_user;\nGRANT\nguacamole=# GRANT SELECT,USAGE ON ALL SEQUENCES IN SCHEMA public TO guacamole_user;\nGRANT\nguacamole=# \\q\n$\n```\n\n----------------------------------------\n\nTITLE: Example of Complete Guacamole Protocol Instruction\nDESCRIPTION: This snippet provides a complete and valid instruction for setting the display size to 1024x768 in the Guacamole protocol.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n4.size,1.0,4.1024,3.768;\n```\n\n----------------------------------------\n\nTITLE: VNC Authentication Parameters in Guacamole\nDESCRIPTION: Configuration parameters for VNC authentication in Guacamole. The VNC protocol supports both standard password-only authentication and username/password authentication depending on the VNC server configuration.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n`username`\n: The username to use when attempting authentication, if any. This parameter\n  is optional.\n\n`password`\n: The password to use when attempting authentication, if any. This parameter\n  is optional.\n```\n\n----------------------------------------\n\nTITLE: Filling and Drawing a Bouncing Ball in Guacamole\nDESCRIPTION: This snippet demonstrates how to create and render a ball using Guacamole's drawing API. It creates a separate layer for the ball, draws a circular shape with a black border and teal fill, and handles cleanup of resources.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_11\n\nLANGUAGE: c\nCODE:\n```\n/* Fill curve with texture */\nguac_protocol_send_lfill(socket,\n        GUAC_COMP_OVER, GUAC_DEFAULT_LAYER,\n        texture);\n\n/* Set up ball layer */\nguac_protocol_send_size(socket, ball, 128, 128);\n\n/* Prepare a circular curve */\nguac_protocol_send_arc(socket, data->ball,\n        64, 64, 62, 0, 6.28, 0);\n\nguac_protocol_send_close(socket, data->ball);\n\n/* Draw a 4-pixel black border */\nguac_protocol_send_cstroke(socket,\n        GUAC_COMP_OVER, data->ball,\n        GUAC_LINE_CAP_ROUND, GUAC_LINE_JOIN_ROUND, 4,\n        0x00, 0x00, 0x00, 0xFF);\n\n/* Fill the circle with color */\nguac_protocol_send_cfill(socket,\n        GUAC_COMP_OVER, data->ball,\n        0x00, 0x80, 0x80, 0x80);\n\n/* Free texture (no longer needed) */\nguac_client_free_buffer(client, texture);\n\n/* Mark end-of-frame */\nguac_protocol_send_sync(socket, client->last_sent_timestamp);\n```\n\n----------------------------------------\n\nTITLE: Adding a Welcome Message to Guacamole Login Dialog with HTML Patching\nDESCRIPTION: Example of using HTML patching in a Guacamole extension to add a welcome message and privacy policy link after the login dialog. This demonstrates the 'after' directive that inserts HTML content after elements matching the specified selector.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"after\" content=\".login-ui .login-dialog\">\n\n<div class=\"welcome\">\n    <h2>Welcome to our Guacamole server!</h2>\n    <p>\n        Please be sure to read our <a href=\"/path/to/some/privacy.html\">privacy\n        policy</a> before continuing.\n    </p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tomcat HTTP Connector for Guacamole\nDESCRIPTION: XML configuration for Tomcat's HTTP connector listening on port 8080. The UTF-8 encoding attribute is essential for proper handling of non-Latin characters in connection names and parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Connector port=\"8080\" protocol=\"HTTP/1.1\" \n           connectionTimeout=\"20000\"\n           URIEncoding=\"UTF-8\"\n           redirectPort=\"8443\" />\n```\n\n----------------------------------------\n\nTITLE: Adding SSH Connection in Guacamole XML Configuration\nDESCRIPTION: This XML snippet demonstrates how to add a basic SSH connection to the user-mapping.xml file in Guacamole. It specifies the connection name, protocol, hostname, and port.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_29\n\nLANGUAGE: xml\nCODE:\n```\n<connection name=\"Unique Name\">\n    <protocol>ssh</protocol>\n    <param name=\"hostname\">localhost</param>\n    <param name=\"port\">22</param>\n</connection>\n```\n\n----------------------------------------\n\nTITLE: Creating a Connection and Parameters in MySQL for Guacamole\nDESCRIPTION: This code demonstrates how to create a new VNC connection in the Guacamole database. It inserts a new connection record, retrieves the auto-generated connection ID, and then adds the necessary connection parameters for hostname and port.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_38\n\nLANGUAGE: mysql\nCODE:\n```\n-- Create connection\nINSERT INTO guacamole_connection (connection_name, protocol) VALUES ('test', 'vnc');\n\n-- Determine the connection_id\nSELECT * FROM guacamole_connection WHERE connection_name = 'test' AND parent_id IS NULL;\n\n-- Add parameters to the new connection\nINSERT INTO guacamole_connection_parameter VALUES (1, 'hostname', 'localhost');\nINSERT INTO guacamole_connection_parameter VALUES (1, 'port', '5901');\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Authentication in guacamole.properties\nDESCRIPTION: Example configuration for guacamole.properties to set up PostgreSQL database authentication. Specifies the hostname, database name, username, and password for the Guacamole PostgreSQL connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_8\n\nLANGUAGE: properties\nCODE:\n```\n# PostgreSQL properties\npostgresql-hostname: localhost\npostgresql-database: guacamole_db\npostgresql-username: guacamole_user\npostgresql-password: some_password\n```\n\n----------------------------------------\n\nTITLE: Adding a Kubernetes Connection in Guacamole user-mapping.xml\nDESCRIPTION: This XML snippet shows how to add a Kubernetes connection to the user-mapping.xml file in Guacamole. It defines the connection name, protocol, hostname, and pod name.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_31\n\nLANGUAGE: XML\nCODE:\n```\n<connection name=\"Unique Name\">\n    <protocol>kubernetes</protocol>\n    <param name=\"hostname\">localhost</param>\n    <param name=\"pod\">mypod</param>\n</connection>\n```\n\n----------------------------------------\n\nTITLE: Basic Guacamole Client Plugin Implementation in C\nDESCRIPTION: Minimal implementation of a Guacamole client plugin with the required guac_client_init entry point function. This skeleton establishes the basic structure needed for a functional plugin without implementing any actual rendering yet.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_0\n\nLANGUAGE: c\nCODE:\n```\n#include <guacamole/client.h>\n\n#include <stdlib.h>\n\n/* Client plugin arguments (empty) */\nconst char* TUTORIAL_ARGS[] = { NULL };\n\nint guac_client_init(guac_client* client) {\n\n    /* This example does not implement any arguments */\n    client->args = TUTORIAL_ARGS;\n\n    return 0;\n\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing KSM CLI with One-Time Token\nDESCRIPTION: Example of using the KSM CLI tool to initialize a configuration with a one-time token. This generates a base64-encoded configuration blob required for Guacamole's ksm-config property.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/vault.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ ./ksm init default US:_-L2NIxWdMatbyYwBnYROLlJVjeg4BzO3xZWoiDkh4U\n\newogICJjbGllbnRJZCI6ICJTR1ZzYkc4Z2RHaGxjbVVoSUZSb1pYTmxJSEJ5YjNCbGNuUnBaWE1n\nYUdGMlpTQmlaV1Z1SUcxaGJuVmhiR3g1SUhKbFpHRmpkR1ZrTGlCWGFIay9Qdz09IiwKICAicHJp\ndmF0ZUtleSI6ICJWRzhnWlc1emRYSmxJSFJvWVhRZ1lXTjBkV0ZzSUhObGJuTnBkR2wyWlNCMllX\neDFaWE1nWVhKbElHNXZkQ0JsZUhCdmMyVmtJSFpwWVNCdmRYSWdiV0Z1ZFdGc0xpQlVhR1Y1SUcx\naGVTQnViM1FnUVV4TUlHSmxJSE5sYm5OcGRHbDJaU0IyWVd4MVpYTXNJR0oxZENCaGRDQnNaV0Z6\nZENCdmJtVWdjMlZsYlhNZ2RHOGdZbVV1IiwKICAiYXBwS2V5IjogIlYyVnNZMjl0WlNFZ1JXNXFi\nM2tnUVhCaFkyaGxJRWQxWVdOaGJXOXNaU0U9IiwKICAiaG9zdG5hbWUiOiAia2VlcGVyc2VjdXJp\ndHkuY29tIiwKICAic2VydmVyUHVibGljS2V5SWQiOiAiMTAiCn0K\n$   \n```\n\n----------------------------------------\n\nTITLE: Forcing Lossless Compression in RDP\nDESCRIPTION: Optional parameter to control whether the connection should only use lossless compression for graphical updates. When set to \"true\", lossy compression will not be used even when it might be more efficient.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_26\n\nLANGUAGE: markdown\nCODE:\n```\n`force-lossless`\n: Whether this connection should only use lossless compression for graphical\n  updates. If set to \"true\", lossy compression will not be used. This\n  parameter is optional. By default, lossy compression will be used when\n  heuristics determine that it would likely outperform lossless compression.\n```\n\n----------------------------------------\n\nTITLE: Encryption Script Usage Example with Key and Output\nDESCRIPTION: A full example showing the command to encrypt a JSON file using the encrypt-json.sh script with a specific 128-bit hex key, and the resulting encrypted base64 output that can be submitted to Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ ./encrypt-json.sh 4C0B569E4C96DF157EEE1B65DD0E4D41 auth.json\n```\n\n----------------------------------------\n\nTITLE: Adding a Telnet Connection in Guacamole user-mapping.xml\nDESCRIPTION: This XML snippet demonstrates how to add a Telnet connection to the user-mapping.xml file in Guacamole. It specifies the connection name, protocol, hostname, and port.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_30\n\nLANGUAGE: XML\nCODE:\n```\n<connection name=\"Unique Name\">\n    <protocol>telnet</protocol>\n    <param name=\"hostname\">localhost</param>\n    <param name=\"port\">23</param>\n</connection>\n```\n\n----------------------------------------\n\nTITLE: Creating VNC Connection Using LDIF Configuration\nDESCRIPTION: LDIF configuration example showing how to create a VNC connection with access granted to specific users. The configuration includes connection parameters like hostname, port, and password along with group membership definitions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_10\n\nLANGUAGE: ldif\nCODE:\n```\ndn: cn=Example Connection,ou=groups,dc=example,dc=net\nobjectClass: guacConfigGroup\nobjectClass: groupOfNames\ncn: Example Connection\nguacConfigProtocol: vnc\nguacConfigParameter: hostname=localhost\nguacConfigParameter: port=5900\nguacConfigParameter: password=secret\nmember: cn=user1,ou=people,dc=example,dc=net\nmember: cn=user2,ou=people,dc=example,dc=net\n```\n\n----------------------------------------\n\nTITLE: Enabling Environment Properties in Guacamole Configuration\nDESCRIPTION: This code shows how to enable Guacamole to evaluate its environment for configuration property values before using values from guacamole.properties or defaults.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nenable-environment-properties: true\n```\n\n----------------------------------------\n\nTITLE: Defining Ball Client Data Structure\nDESCRIPTION: Header file defining the data structure for maintaining ball state using Guacamole layers.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_7\n\nLANGUAGE: c\nCODE:\n```\n#ifndef BALL_H\n#define BALL_H\n\n#include <guacamole/layer.h>\n\ntypedef struct ball_client_data {\n\n    guac_layer* ball;\n\n} ball_client_data;\n\n#endif\n```\n\n----------------------------------------\n\nTITLE: Quickconnect URI Format for Guacamole Connections\nDESCRIPTION: The general format for URIs used with the quickconnect extension to establish connections. It includes protocol, username, password, host, port, and additional parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/adhoc-connections.md#2025-04-11_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n{protocol}://{username}:{password}@{host}:{port}/?{parameters}\n```\n\n----------------------------------------\n\nTITLE: Creating a Comprehensive Extension Manifest in JSON\nDESCRIPTION: A more complete example of a guac-manifest.json file for a Guacamole extension that provides theming or branding. This example includes CSS files, HTML modifications, and static resources with their corresponding MIME types.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\n    \"guacamoleVersion\" : \"1.6.0\",\n\n    \"name\"      : \"My Extension\",\n    \"namespace\" : \"my-extension\",\n\n    \"css\" : [ \"theme.css\" ],\n\n    \"html\" : [ \"loginDisclaimer.html\" ],\n\n    \"resources\" : {\n        \"images/logo.png\"   : \"image/png\",\n        \"images/cancel.png\" : \"image/png\",\n        \"images/delete.png\" : \"image/png\"\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Running Guacamole Container with Manual guacd Connection\nDESCRIPTION: Command to run the Guacamole web application container with environment variables specifying the guacd connection details instead of using a Docker link.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    -e GUACD_HOSTNAME=172.17.42.1  \\\n    -e GUACD_PORT=4822             \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Building and Installing a Guacamole Client Plugin\nDESCRIPTION: Console commands for building and installing the Guacamole client plugin using the GNU Automake build system. Shows the complete process from generating the configure script to installing the plugin so guacd can find it.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ autoreconf -fi\nlibtoolize: putting auxiliary files in '.'.\nlibtoolize: copying file './ltmain.sh'\nlibtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'm4'.\nlibtoolize: copying file 'm4/libtool.m4'\nlibtoolize: copying file 'm4/ltoptions.m4'\nlibtoolize: copying file 'm4/ltsugar.m4'\nlibtoolize: copying file 'm4/ltversion.m4'\nlibtoolize: copying file 'm4/lt~obsolete.m4'\nconfigure.ac:10: installing './compile'\nconfigure.ac:4: installing './missing'\nMakefile.am: installing './depcomp'\n$ ./configure\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\n...\nconfigure: creating ./config.status\nconfig.status: creating Makefile\nconfig.status: executing depfiles commands\nconfig.status: executing libtool commands\n$\n```\n\n----------------------------------------\n\nTITLE: Configuring TOTP Properties in guacamole.properties\nDESCRIPTION: Configuration options for the TOTP extension in Apache Guacamole that can be specified in the guacamole.properties file. These settings allow customization of the TOTP implementation, including issuer name, code length, validity period, hash algorithm, and host-based access rules.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/totp-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\ntotp-issuer\ntotp-digits\ntotp-period\ntotp-mode\ntotp-bypass-hosts\ntotp-enforce-hosts\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Complexity Rules for SQL Server in Guacamole\nDESCRIPTION: Sets minimum password length, requires multiple case, symbols, digits, and prohibits username in password for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_12\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-user-password-min-length: 8\nsqlserver-user-password-require-multiple-case: true\nsqlserver-user-password-require-symbol: true\nsqlserver-user-password-require-digit: true\nsqlserver-user-password-prohibit-username: true\n```\n\n----------------------------------------\n\nTITLE: Setting CAS Extension Priority to Display Login Screen\nDESCRIPTION: Configuration snippet to present users with a normal Guacamole login screen, giving them the option to log in with traditional credentials or with CAS. This is done by ensuring the CAS extension does not have priority.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/cas-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: *, cas\n```\n\n----------------------------------------\n\nTITLE: Debug-Level Logging Configuration Using Logback XML\nDESCRIPTION: XML configuration for Logback that enables debug-level logging for Guacamole. This example configures the console appender to display all debug messages with timestamp, thread, log level, and logger information.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<configuration>\n\n    <!-- Appender for debugging -->\n    <appender name=\"GUAC-DEBUG\" class=\"ch.qos.logback.core.ConsoleAppender\">\n        <encoder>\n            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n        </encoder>\n    </appender>\n\n    <!-- Log at DEBUG level -->\n    <root level=\"debug\">\n        <appender-ref ref=\"GUAC-DEBUG\"/>\n    </root>\n\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Adding VNC Connection Configuration\nDESCRIPTION: XML configuration snippet for adding a VNC connection to the user-mapping.xml file, specifying connection parameters like hostname and port.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<connection name=\"Unique Name\">\n    <protocol>vnc</protocol>\n    <param name=\"hostname\">localhost</param>\n    <param name=\"port\">5901</param>\n</connection>\n```\n\n----------------------------------------\n\nTITLE: Configuring Initial Program for RDP Sessions\nDESCRIPTION: Optional parameter to specify a program that should run immediately upon connecting to the RDP server, providing the full path to the program.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n`initial-program`\n: The full path to the program to run immediately upon connecting. This\n  parameter is optional.\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenID Connect Extension Priority for Login Screen\nDESCRIPTION: This snippet demonstrates how to set the extension priority to present unauthenticated users with a login screen, allowing them to choose between traditional credentials and OpenID Connect.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/openid-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: *, openid\n```\n\n----------------------------------------\n\nTITLE: Configuring SAML Extension Priority for Optional SAML Login\nDESCRIPTION: Configuration snippet to set the SAML extension priority, allowing users to see a normal Guacamole login screen with the option to log in using traditional credentials or SAML.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/saml-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: *, saml\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic RDP Connection in Guacamole XML\nDESCRIPTION: Demonstrates how to add a basic RDP connection to the user-mapping.xml file. This configuration establishes an RDP connection to localhost on port 3389 with a unique name identifier.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<connection name=\"Unique Name\">\n    <protocol>rdp</protocol>\n    <param name=\"hostname\">localhost</param>\n    <param name=\"port\">3389</param>\n</connection>\n```\n\n----------------------------------------\n\nTITLE: Configuring Password History for SQL Server in Guacamole\nDESCRIPTION: Sets the number of previous passwords to remember and prevent reuse for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_18\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-user-password-history-size: 6\n```\n\n----------------------------------------\n\nTITLE: Compiling guacamole-server with Make\nDESCRIPTION: Shows the output of running the make command to compile guacamole-server after successfully configuring it.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ make\nMaking all in src/libguac\nmake[1]: Entering directory `/home/mjumper/guacamole/guacamole-server/src/libguac'\n...\nmake[1]: Leaving directory `/home/mjumper/guacamole/guacamole-server/src/protocols/vnc'\nmake[1]: Entering directory `/home/mjumper/guacamole/guacamole-server'\nmake[1]: Nothing to be done for `all-am'.\nmake[1]: Leaving directory `/home/mjumper/guacamole/guacamole-server'\n$\n```\n\n----------------------------------------\n\nTITLE: VNC Display Configuration Parameters in Guacamole\nDESCRIPTION: Configuration parameters for controlling VNC display settings in Guacamole, including color depth, input device behavior, display resizing, color correction, cursor mode, encoding options, and compression settings.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n`color-depth`\n: The color depth to request, in bits-per-pixel. This parameter is optional.\n  If specified, this must be either 8, 16, 24, or 32. Regardless of what\n  value is chosen here, if a particular update uses less than 256 colors,\n  Guacamole will always send that update as a 256-color PNG.\n\n`disable-server-input`\n: Whether or not the VNC client should ask the VNC server to disable local\n  input devices when the client connects. Some VNC servers support this\n  feature in order to give preference to input from the client, and to\n  avoid situations where the local keyboard and/or mouse may be \"fighting\"\n  with the remote keyboard and/or mouse for control. Note that this\n  requires the remote VNC server to have this feature supported and\n  enabled, and there is no guarantee that the remote system will honor\n  the request. Setting this parameter to \"true\" will request that the\n  VNC server disable the local input devices; leaving it blank or\n  setting to false will not make that request. This parameter is\n  optional.\n\n`disable-display-resize`\n: Whether or not the VNC client should *not* attempt to update the\n  remote (server) display with its size. By default, when Guacamole\n  connects to a VNC server, it will check for server support for\n  configuring the remote display size, and will attempt to send the\n  size of the browser area to the server to set the remote display\n  to the same size as the browser. Also, if the browser window is\n  resized, Guacamole will detect the resize and send the updated\n  size to the server. If the server supports dynamic resizing, it\n  may adjust the display size to match the browser. If this option\n  is set to true, Guacamole will disable the client-side display\n  updates, and the size of the desktop will not be sent to the\n  VNC server, either during initial connection or when the browser\n  is resized.\n\n`swap-red-blue`\n: If the colors of your display appear wrong (blues appear orange or red,\n  etc.), it may be that your VNC server is sending image data incorrectly,\n  and the red and blue components of each color are swapped. If this is the\n  case, set this parameter to \"true\" to work around the problem. This\n  parameter is optional.\n\n`cursor`\n: If set to \"remote\", the mouse pointer will be rendered remotely, and the\n  local position of the mouse pointer will be indicated by a small dot. A\n  remote mouse cursor will feel slower than a local cursor, but may be\n  necessary if the VNC server does not support sending the cursor image to\n  the client.\n\n`encodings`\n: A space-delimited list of VNC encodings to use. The format of this\n  parameter is dictated by libvncclient and thus doesn't really follow the\n  form of other Guacamole parameters. This parameter is optional, and\n  libguac-client-vnc will use any supported encoding by default.\n\n  Beware that this parameter is intended to be replaced with individual,\n  encoding-specific parameters in a future release.\n\n`read-only`\n: Whether this connection should be read-only. If set to \"true\", no input\n  will be accepted on the connection at all. Users will only see the desktop\n  and whatever other users using that same desktop are doing. This parameter\n  is optional.\n\n`force-lossless`\n: Whether this connection should only use lossless compression for graphical\n  updates. If set to \"true\", lossy compression will not be used. This\n  parameter is optional. By default, lossy compression will be used when\n  heuristics determine that it would likely outperform lossless compression.\n\n`compress-level`\n: Controls the level of compression requested of the VNC server when either\n  tight or zlib encoding is in use, on a scale of 0 to 9, with 0 being no\n  compression and 9 being the highest level of compression. Note that this\n  is negotiated with the server, and ultimately the decision on the amount\n  of compression that is done is up to the VNC server.\n\n`quality-level`\n: Sets the JPEG qualit level, on a scale of 0 to 9, when the tight encoding\n  is in use, with 0 being the lowest image quality (but likely improved\n  compression and speed) and 9 being the highest image quality but with\n  reduced compression and speed.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Server Ready Instruction in Guacamole Handshake\nDESCRIPTION: This snippet shows the 'ready' instruction sent by the server to indicate successful connection initialization and provide the unique connection ID.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_6\n\nLANGUAGE: text\nCODE:\n```\n5.ready,37.$260d01da-779b-4ee9-afc1-c16bae885cc7;\n```\n\n----------------------------------------\n\nTITLE: Importing Connections using JSON Format in Apache Guacamole\nDESCRIPTION: Example of a JSON file format for batch importing connections. It demonstrates the structure for specifying connection details, including name, protocol, parameters, group, users, and attributes.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/batch-import.md#2025-04-11_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"conn1\",\n    \"protocol\": \"vnc\",\n    \"parameters\": { \"username\": \"alice\", \"password\": \"pass1\", \"hostname\": \"conn1.web.com\" },\n    \"parentIdentifier\": \"ROOT\",\n    \"users\": [ \"guac user 1\", \"guac user 2\" ],\n    \"groups\": [ \"Connection 1 Users\" ],\n    \"attributes\": { \"guacd-encryption\": \"none\" }\n  },\n  {\n    \"name\": \"conn2\",\n    \"protocol\": \"rdp\",\n    \"parameters\": { \"username\": \"bob\", \"password\": \"pass2\", \"hostname\": \"conn2.web.com\" },\n    \"group\": \"ROOT/Parent Group\",\n    \"users\": [ \"guac user 1\" ],\n    \"attributes\": { \"guacd-encryption\": \"none\" }\n  },\n  {\n    \"name\": \"conn3\",\n    \"protocol\": \"ssh\",\n    \"parameters\": { \"username\": \"carol\", \"password\": \"pass3\", \"hostname\": \"conn3.web.com\" },\n    \"group\": \"ROOT/Parent Group/Child Group\",\n    \"users\": [ \"guac user 2\", \"guac user 3\" ]\n  },\n  {\n    \"name\": \"conn4\",\n    \"protocol\": \"kubernetes\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Single LDAP Server Configuration Example\nDESCRIPTION: Example configuration for a single LDAP server in guacamole.properties showing common authentication parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\nldap-hostname: dc1.example.net\nldap-user-base-dn: ou=Users,dc=example,dc=net\nldap-username-attribute: sAMAccountName\nldap-search-bind-dn: cn=Guacamole,ou=Service Users,dc=example,dc=net\nldap-search-bind-password: SomePassword!\n```\n\n----------------------------------------\n\nTITLE: Connecting Guacamole to PostgreSQL via Docker Link\nDESCRIPTION: Command for running a Guacamole Docker container with links to PostgreSQL and guacd containers. This approach leverages Docker networking for container connections.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_9\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    --link some-guacd:guacd        \\\n    --link some-postgres:postgres  \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Retrieving Configuration Properties from KSM\nDESCRIPTION: Example of guacamole.properties.ksm file that defines MySQL connection credentials using KSM secrets. This demonstrates how to reference username and password fields from a record in KSM using Keeper Notation.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/vault.md#2025-04-11_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\nmysql-username: keeper://iel4yeic5ahxae7Eereec7/field/login\nmysql-password: keeper://iel4yeic5ahxae7Eereec7/field/password\n```\n\n----------------------------------------\n\nTITLE: Configuring Servlet Mapping in web.xml for Guacamole Tunnel\nDESCRIPTION: XML configuration for web.xml that maps the custom TutorialGuacamoleTunnelServlet to the /tunnel URL path, enabling HTTP requests to the tunnel servlet.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n    ...\n\n    <!-- Guacamole Tunnel Servlet -->\n    <servlet>\n        <description>Tunnel servlet.</description>\n        <servlet-name>Tunnel</servlet-name>\n        <servlet-class>\n            org.apache.guacamole.net.example.TutorialGuacamoleTunnelServlet\n        </servlet-class>\n    </servlet>\n\n    <servlet-mapping>\n        <servlet-name>Tunnel</servlet-name>\n        <url-pattern>/tunnel</url-pattern>\n    </servlet-mapping>\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Adjusting Nginx File Upload Limits for Guacamole\nDESCRIPTION: This Nginx configuration snippet demonstrates how to increase the maximum file upload size for Guacamole to 1GB using the client_max_body_size directive.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_6\n\nLANGUAGE: nginx\nCODE:\n```\nlocation /guacamole/ {\n    proxy_pass http://HOSTNAME:8080;\n    proxy_buffering off;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    client_max_body_size 1g;\n    access_log off;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Guacamole Properties for Custom Authentication\nDESCRIPTION: This snippet shows the configuration settings to be added to the guacamole.properties file. It includes settings for the username, password, connection protocol, and parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\n# Username and password\ntutorial-user:     tutorial\ntutorial-password: password\n\n# Connection information\ntutorial-protocol:   vnc\ntutorial-parameters: hostname=localhost, port=5900\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Complexity Rules for MySQL in Guacamole\nDESCRIPTION: Sets minimum password length, requires multiple case, symbols, digits, and prohibits username in password for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_10\n\nLANGUAGE: properties\nCODE:\n```\nmysql-user-password-min-length: 8\nmysql-user-password-require-multiple-case: true\nmysql-user-password-require-symbol: true\nmysql-user-password-require-digit: true\nmysql-user-password-prohibit-username: true\n```\n\n----------------------------------------\n\nTITLE: Creating an Organizational Connection Group in MySQL\nDESCRIPTION: This query creates a new organizational connection group named 'test' in the Guacamole database. Organizational connection groups are used to organize connections in a hierarchical structure.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_39\n\nLANGUAGE: mysql\nCODE:\n```\n-- Create connection group\nINSERT INTO guacamole_connection_group (connection_group_name, type)\n     VALUES ('test', 'ORGANIZATIONAL');\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Veto for User Authentication in Java\nDESCRIPTION: This snippet demonstrates how to use event vetoing to influence Guacamole's behavior. It prevents a specific user (\"guacadmin\") from logging in by throwing a GuacamoleSecurityException when that user successfully authenticates.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.event;\n\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.GuacamoleSecurityException;\nimport org.apache.guacamole.net.event.AuthenticationFailureEvent;\nimport org.apache.guacamole.net.event.AuthenticationSuccessEvent;\nimport org.apache.guacamole.net.event.listener.Listener;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class TutorialListener implements Listener {\n\n    private static final Logger logger = \n        LoggerFactory.getLogger(TutorialListener.class);\n\n    @Override\n    public void handleEvent(Object event) throws GuacamoleException {\n\n        if (event instanceof AuthenticationSuccessEvent) {\n          final String username = ((AuthenticationSuccessEvent) event)\n              .getCredentials().getUsername();\n\n          if (\"guacadmin\".equals(username)) {\n            logger.warn(\"user {} has been blocked\", username);\n            throw new GuacamoleSecurityException(\n                \"User '\" + username + \"' is currently blocked\");\n          }\n\n          logger.info(\"successful authentication for user {}\", username);\n        }\n        else if (event instanceof AuthenticationFailureEvent) {\n            logger.info(\"failed authentication for user {}\", \n                ((AuthenticationFailureEvent) event)\n                    .getCredentials().getUsername());\n        }\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting Guacamole to MySQL via Environment Variables\nDESCRIPTION: Command for running a Guacamole Docker container with explicit MySQL connection details using environment variables instead of Docker links.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_7\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    --link some-guacd:guacd        \\\n    -e MYSQL_HOSTNAME=172.17.42.1  \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Basic SSL Configuration in guacd.conf\nDESCRIPTION: A basic example of SSL configuration in the guacd.conf file, showing how to specify server certificate and key file paths in the [ssl] section.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_41\n\nLANGUAGE: ini\nCODE:\n```\n[ssl]\n\nserver_certificate = /etc/ssl/certs/guacd.crt\nserver_key = /etc/ssl/private/guacd.key\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-User Connection Limits for MySQL in Guacamole\nDESCRIPTION: Sets default maximum connections and group connections per user for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_22\n\nLANGUAGE: properties\nCODE:\n```\nmysql-default-max-connections-per-user: 0\nmysql-default-max-group-connections-per-user: 0\n```\n\n----------------------------------------\n\nTITLE: Configuration Parameter Tokens\nDESCRIPTION: Special tokens used in Guacamole's configuration for recording paths. These tokens are used to dynamically generate paths and filenames for session recordings.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/recording-playback.md#2025-04-11_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\n${HISTORY_PATH}/${HISTORY_UUID}\n```\n\nLANGUAGE: properties\nCODE:\n```\n${HISTORY_PATH}\n```\n\nLANGUAGE: properties\nCODE:\n```\n${HISTORY_UUID}\n```\n\nLANGUAGE: properties\nCODE:\n```\n${GUAC_DATE}\n```\n\nLANGUAGE: properties\nCODE:\n```\n${GUAC_TIME}\n```\n\n----------------------------------------\n\nTITLE: Initializing PostgreSQL Database for Guacamole\nDESCRIPTION: Command to generate the SQL initialization script for a PostgreSQL database. This creates the necessary schema for Guacamole authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_8\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --postgresql > initdb.sql\n```\n\n----------------------------------------\n\nTITLE: Defining Parameter Tokens in KSM using YAML\nDESCRIPTION: Example YAML configuration for defining parameter tokens in KSM. This snippet shows how to define Windows admin password and Linux server key tokens by referencing KSM secrets using Keeper Notation.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/vault.md#2025-04-11_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nWINDOWS_ADMIN_PASSWORD: keeper://odei1zeejoL7Ceiv3eig0a/field/password\nLINUX_SERVER_KEY: keeper://Chah0VuPh0ohyeuL4che1o/file/idrsa.pem\n```\n\n----------------------------------------\n\nTITLE: Auto-Creating Database Users (PostgreSQL)\nDESCRIPTION: Configuration property to enable automatic creation of user accounts in the PostgreSQL database for users authenticated by other extensions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_32\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-auto-create-accounts: true\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hyper-V Virtual Machine ID using PowerShell\nDESCRIPTION: PowerShell commands to retrieve the VM ID required for the preconnection-blob parameter when connecting to Hyper-V virtual machines. The VM ID is necessary for the RDP Session Selection Extension to identify the correct VM behind Hyper-V.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_27\n\nLANGUAGE: powershell\nCODE:\n```\nPS C:\\> Get-VM VirtualMachineName | Select-Object Id\n\nId\n--\ned272546-87bd-4db9-acba-e36e1a9ca20a\n\n\nPS C:\\>\n```\n\n----------------------------------------\n\nTITLE: Setting Server-Side Keyboard Layout for RDP\nDESCRIPTION: Configures the server-side keyboard layout used by the RDP server. This is necessary for Guacamole to properly translate key events between its own system and the RDP protocol which depends on keyboard layout.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n`server-layout`\n: The server-side keyboard layout. This is the layout of the RDP server and\n  has nothing to do with the keyboard layout in use on the client. *The\n  Guacamole client is independent of keyboard layout.* The RDP protocol,\n  however, is *not* independent of keyboard layout, and Guacamole needs to\n  know the keyboard layout of the server in order to send the proper keys\n  when a user is typing.\n\n  Possible values are generally in the format\n  {samp}`{LANGUAGE}-{REGION}-{VARIANT}`, where `LANGUAGE` is the standard\n  two-letter language code for the primary language associated with the\n  layout, `REGION` is a standard representation of the location that the\n  keyboard is used (the two-letter country code, when possible), and\n  `VARIANT` is the specific keyboard layout variant (such as \"qwerty\",\n  \"qwertz\", or \"azerty\"):\n\n  | Keyboard layout                | Parameter value        |\n  | ------------------------------ | ---------------------- |\n  | Brazilian (Portuguese)         | `pt-br-qwerty`         |\n  | English (UK)                   | `en-gb-qwerty`         |\n  | English (US)                   | `en-us-qwerty`         |\n  | French                         | `fr-fr-azerty`         |\n  | French (Belgian)               | `fr-be-azerty`         |\n  | French (Swiss)                 | `fr-ch-qwertz`         |\n  | German                         | `de-de-qwertz`         |\n  | German (Swiss)                 | `de-ch-qwertz`         |\n  | Hungarian                      | `hu-hu-qwertz`         |\n  | Italian                        | `it-it-qwerty`         |\n  | Japanese                       | `ja-jp-qwerty`         |\n  | Norwegian                      | `no-no-qwerty`         |\n  | Spanish                        | `es-es-qwerty`         |\n  | Spanish (Latin American)       | `es-latam-qwerty`      |\n  | Swedish                        | `sv-se-qwerty`         |\n  | Turkish-Q                      | `tr-tr-qwerty`         |\n\n  If you server's keyboard layout is not yet supported, and it is not possible\n  to set your server to use a supported layout, the `failsafe` layout may be used\n  to force Unicode events to be used for all input, however beware that doing so\n  may prevent keyboard shortcuts from working as expected.\n```\n\n----------------------------------------\n\nTITLE: Configuring Timezone for RDP Sessions\nDESCRIPTION: Specifies the timezone information to send to the RDP server for configuring local time display. The format uses IANA key zone format which Guacamole converts to the appropriate Windows format.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n`timezone`\n: The timezone that the client should send to the server for configuring the\n  local time display of that server. The format of the timezone is in the\n  standard IANA key zone format, which is the format used in UNIX/Linux.\n  This will be converted by RDP into the correct format for Windows.\n\n  The timezone is detected and will be passed to the server during the\n  handshake phase of the connection, and may used by protocols, like RDP,\n  that support it. This parameter can be used to override the value detected\n  and passed during the handshake, or can be used in situations where guacd\n  does not support passing the timezone parameter during the handshake phase\n  (guacd versions prior to 1.3.0).\n\n  Support for forwarding the client timezone varies by RDP server\n  implementation. For example, with Windows, support for forwarding\n  timezones is only present in Windows Server with Remote Desktop Services\n  (RDS, formerly known as Terminal Services) installed. Windows Server\n  installations in admin mode, along with Windows workstation versions, do\n  not allow the timezone to be forwarded. Other server implementations, for\n  example, xrdp, may not implement this feature at all. Consult the\n  documentation for the RDP server to determine whether or not this feature\n  is supported.\n```\n\n----------------------------------------\n\nTITLE: Connecting Guacamole to PostgreSQL via Environment Variables\nDESCRIPTION: Command for running a Guacamole Docker container with explicit PostgreSQL connection details using environment variables instead of Docker links.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_10\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole     \\\n    --link some-guacd:guacd            \\\n    -e POSTGRESQL_HOSTNAME=172.17.42.1 \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Implementing Client Graphics Setup\nDESCRIPTION: Creates a checkerboard pattern background and configures ball graphics with translucent fill and border\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_10\n\nLANGUAGE: c\nCODE:\n```\nint ball_join_handler(guac_user* user, int argc, char** argv) {\n    guac_layer* texture = guac_client_alloc_buffer(client);\n    guac_protocol_send_rect(socket, texture, 0, 0, 64, 64);\n    guac_protocol_send_cfill(socket, GUAC_COMP_OVER, texture,\n            0x88, 0x88, 0x88, 0xFF);\n    guac_protocol_send_rect(socket, texture, 0, 0, 32, 32);\n    guac_protocol_send_cfill(socket, GUAC_COMP_OVER, texture,\n            0xDD, 0xDD, 0xDD, 0xFF);\n    guac_protocol_send_rect(socket, texture, 32, 32, 32, 32);\n    guac_protocol_send_cfill(socket, GUAC_COMP_OVER, texture,\n            0xDD, 0xDD, 0xDD, 0xFF);\n```\n\n----------------------------------------\n\nTITLE: Installing the Guacamole Client Plugin\nDESCRIPTION: Console commands showing the make install process for a Guacamole client plugin and running ldconfig to update the shared library cache, allowing guacd to locate and load the plugin when needed.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ make\n  CC       src/ball.lo\n  CCLD     libguac-client-ball.la\n# make install\nmake[1]: Entering directory '/home/user/libguac-client-ball'\n /usr/bin/mkdir -p '/usr/local/lib'\n /bin/sh ./libtool   --mode=install /usr/bin/install -c   libguac-client-ball.la '/usr/local/lib'\n...\n----------------------------------------------------------------------\nLibraries have been installed in:\n   /usr/local/lib\n\nIf you ever happen to want to link against installed libraries\nin a given directory, LIBDIR, you must either use libtool, and\nspecify the full pathname of the library, or use the '-LLIBDIR'\nflag during linking and do at least one of the following:\n   - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable\n     during execution\n   - add LIBDIR to the 'LD_RUN_PATH' environment variable\n     during linking\n   - use the '-Wl,-rpath -Wl,LIBDIR' linker flag\n   - have your system administrator add LIBDIR to '/etc/ld.so.conf'\n\nSee any operating system documentation about shared libraries for\nmore information, such as the ld(1) and ld.so(8) manual pages.\n----------------------------------------------------------------------\nmake[1]: Nothing to be done for 'install-data-am'.\nmake[1]: Leaving directory '/home/user/libguac-client-ball'\n# ldconfig\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Location Block for Guacamole Proxy\nDESCRIPTION: This Nginx configuration block sets up a reverse proxy for Guacamole. It includes settings for proxy passing, buffering, HTTP version, and header modifications.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_4\n\nLANGUAGE: nginx\nCODE:\n```\nlocation /new-path/ {\n    proxy_pass http://HOSTNAME:8080;\n    proxy_buffering off;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    access_log off;\n}\n```\n\n----------------------------------------\n\nTITLE: Running guacd Container with Custom Log Level\nDESCRIPTION: Command to run the guacd Docker container with a specific log level defined by the GUACD_LOG_LEVEL environment variable. The default is 'info' but can be changed to other valid levels.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ docker run -e GUACD_LOG_LEVEL=debug -d guacamole/guacd\n```\n\n----------------------------------------\n\nTITLE: Pattern-based LDAP Server Matching\nDESCRIPTION: YAML configuration showing how to match users to specific LDAP servers using username patterns.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n- hostname: dc1.example.net\n  match-usernames: COMPANYA\\\\(.*)\n\n- hostname: dc2.example.net\n  match-usernames: COMPANYB\\\\(.*)\n```\n\n----------------------------------------\n\nTITLE: GNU Automake Configure Script for Guacamole Client Plugin\nDESCRIPTION: The configure.ac file used by GNU Automake to generate the configure script for building the bouncing ball client plugin. It defines project information and dependencies, particularly the required libguac library.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Project information\nAC_PREREQ([2.61])\nAC_INIT([libguac-client-ball], [0.1.0])\nAM_INIT_AUTOMAKE([-Wall -Werror foreign subdir-objects])\nAM_SILENT_RULES([yes])\n\nAC_CONFIG_MACRO_DIRS([m4])\n\n# Check for required build tools\nAC_PROG_CC\nAC_PROG_CC_C99\nAC_PROG_LIBTOOL\n\n# Check for libguac\nAC_CHECK_LIB([guac], [guac_client_stream_png],,\n      AC_MSG_ERROR(\"libguac is required for communication via \"\n                   \"the Guacamole protocol\"))\n\nAC_CONFIG_FILES([Makefile])\nAC_OUTPUT\n```\n\n----------------------------------------\n\nTITLE: Multiple Pattern LDAP Server Matching\nDESCRIPTION: Advanced YAML configuration for matching multiple username patterns per LDAP server.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n- hostname: dc1.example.net\n  match-usernames:\n    - COMPANYA\\\\(.*)\n    - (.*)@a\\.example\\.net\n\n- hostname: dc2.example.net\n  match-usernames:\n    - COMPANYB\\\\(.*)\n    - (.*)@b\\.example\\.net\n```\n\n----------------------------------------\n\nTITLE: Using guacctl SSH Session Control Utility\nDESCRIPTION: Example usage of the guacctl utility for managing SSH file transfers in Guacamole. Shows basic command syntax for downloading files and setting directories for uploads.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/using-guacamole.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ guacctl\nguacctl 0.8.0, Guacamole SSH session control utility.\nUsage: guacctl [OPTION] [FILE]...\n\n    -d, --download         download each of the files listed.\n    -s, --set-directory    set the destination directory for future uploaded \n                           files.\n$ guacctl -d FILENAME\n$ guacctl -s DIRECTORY\n$\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven WAR Plugin for Guacamole JS Integration\nDESCRIPTION: Maven WAR plugin configuration that uses overlays to include the guacamole-common-js JavaScript files in the web application package.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n    ...\n\n    <build>\n        <plugins>\n\n            ...\n\n            <!-- Overlay guacamole-common-js (zip) -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-war-plugin</artifactId>\n                <version>2.6</version>\n                <configuration>\n                    <overlays>\n                        <overlay>\n                            <groupId>org.apache.guacamole</groupId>\n                            <artifactId>guacamole-common-js</artifactId>\n                            <type>zip</type>\n                        </overlay>\n                    </overlays>\n                </configuration>\n            </plugin>\n\n        </plugins>\n\n    </build>\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: Basic LDAP Configuration in guacamole.properties\nDESCRIPTION: Minimal configuration required for LDAP authentication in Guacamole's properties file.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\n# LDAP properties\nldap-user-base-dn: ou=people,dc=example,dc=net\n```\n\n----------------------------------------\n\nTITLE: Multiple LDAP Servers Configuration\nDESCRIPTION: YAML configuration for multiple LDAP servers with shared properties defined in guacamole.properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n- hostname: dc1.example.net\n- hostname: dc2.example.net\n```\n\n----------------------------------------\n\nTITLE: VNC Reverse Connection Parameters in Guacamole\nDESCRIPTION: Configuration parameters for reverse VNC connections in Guacamole, where the VNC client (Guacamole) listens for an incoming connection from the VNC server rather than initiating the connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n`reverse-connect`\n: Whether reverse connection should be used. If set to \"true\", instead of\n  connecting to a server at a given hostname and port, guacd will listen on\n  the given port for inbound connections from a VNC server.\n\n`listen-timeout`\n: If reverse connection is in use, the maximum amount of time to wait for an\n  inbound connection from a VNC server, in milliseconds. If blank, the\n  default value is 5000 (five seconds).\n```\n\n----------------------------------------\n\nTITLE: Setting Libtool Version Info in Makefile\nDESCRIPTION: Specifies the version information for the ball client plugin library using Libtool versioning format.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_5\n\nLANGUAGE: makefile\nCODE:\n```\nlibguac_client_ball_la_LDFLAGS = -version-info 0:0:0\n```\n\n----------------------------------------\n\nTITLE: Granting PostgreSQL Permissions After Upgrade\nDESCRIPTION: SQL commands for re-granting necessary permissions to the Guacamole PostgreSQL user after applying database upgrade scripts. This grants SELECT, INSERT, UPDATE, and DELETE permissions on tables and SELECT and USAGE permissions on sequences.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nGRANT SELECT,INSERT,UPDATE,DELETE ON ALL TABLES IN SCHEMA public TO guacamole_user;\nGRANT SELECT,USAGE ON ALL SEQUENCES IN SCHEMA public TO guacamole_user;\n```\n\n----------------------------------------\n\nTITLE: Docker logs command for Guacamole container troubleshooting\nDESCRIPTION: Command to check logs of the Guacamole Docker container for troubleshooting issues related to configuration parameters or database initialization problems.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ docker logs some-guacamole\n```\n\n----------------------------------------\n\nTITLE: Implementing Key Event Handler for Guacamole User in C\nDESCRIPTION: Shows how to implement and set a key event handler for a Guacamole user. This handler processes key press and release events from the client.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_5\n\nLANGUAGE: c\nCODE:\n```\nint key_handler(guac_user* user, int keysym, int pressed) {\n    /* Do something */\n}\n\n...\n\n/* Within the \"join\" handler of guac_client */\nuser->key_handler = key_handler;\n```\n\n----------------------------------------\n\nTITLE: Accessing Configuration Files in Guacamole Home Directory\nDESCRIPTION: Shows how to locate and access custom configuration files within the Guacamole home directory using the Environment interface.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nFile myConfigFile = new File(environment.getGuacamoleHome(), \"my-config.xml\");\n```\n\n----------------------------------------\n\nTITLE: Auto-Creating Database Users (SQL Server)\nDESCRIPTION: Configuration property to enable automatic creation of user accounts in the SQL Server database for users authenticated by other extensions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_33\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-auto-create-accounts: true\n```\n\n----------------------------------------\n\nTITLE: Building Guacamole with RADIUS authentication extension\nDESCRIPTION: Command for building Guacamole with the LGPL-licensed RADIUS extension enabled using the -Plgpl-extensions flag to Maven, which produces the guacamole-auth-radius JAR file that can be used for RADIUS authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/radius-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ mvn clean package -Plgpl-extensions\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Build Order:\n[INFO] \n[INFO] guacamole-client                                                   [pom]\n[INFO] guacamole-common                                                   [jar]\n[INFO] guacamole-ext                                                      [jar]\n[INFO] guacamole-common-js                                                [pom]\n[INFO] guacamole                                                          [war]\n[INFO] extensions                                                         [pom]\n[INFO] guacamole-auth-duo                                                 [jar]\n[INFO] guacamole-auth-header                                              [jar]\n[INFO] guacamole-auth-jdbc                                                [pom]\n[INFO] guacamole-auth-jdbc-base                                           [jar]\n[INFO] guacamole-auth-jdbc-mysql                                          [jar]\n[INFO] guacamole-auth-jdbc-postgresql                                     [jar]\n[INFO] guacamole-auth-jdbc-sqlserver                                      [jar]\n[INFO] guacamole-auth-jdbc-dist                                           [pom]\n[INFO] guacamole-auth-json                                                [jar]\n[INFO] guacamole-auth-ldap                                                [jar]\n[INFO] guacamole-auth-quickconnect                                        [jar]\n[INFO] guacamole-auth-sso                                                 [pom]\n[INFO] guacamole-auth-sso-base                                            [jar]\n[INFO] guacamole-auth-sso-cas                                             [jar]\n[INFO] guacamole-auth-sso-openid                                          [jar]\n[INFO] guacamole-auth-sso-saml                                            [jar]\n[INFO] guacamole-auth-sso-dist                                            [pom]\n[INFO] guacamole-auth-totp                                                [jar]\n[INFO] guacamole-history-recording-storage                                [jar]\n[INFO] guacamole-vault                                                    [pom]\n[INFO] guacamole-vault-base                                               [jar]\n[INFO] guacamole-vault-ksm                                                [jar]\n[INFO] guacamole-vault-dist                                               [pom]\n[INFO] guacamole-auth-radius                                              [jar]\n[INFO] guacamole-example                                                  [war]\n[INFO] guacamole-playback-example                                         [war]\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for guacamole-client 1.6.0:\n[INFO] \n[INFO] guacamole-client ................................... SUCCESS [ 12.839 s]\n[INFO] guacamole-common ................................... SUCCESS [ 15.446 s]\n[INFO] guacamole-ext ...................................... SUCCESS [ 19.988 s]\n[INFO] guacamole-common-js ................................ SUCCESS [ 22.000 s]\n[INFO] guacamole .......................................... SUCCESS [01:08 min]\n[INFO] extensions ......................................... SUCCESS [  0.451 s]\n[INFO] guacamole-auth-duo ................................. SUCCESS [  7.043 s]\n[INFO] guacamole-auth-header .............................. SUCCESS [  4.836 s]\n[INFO] guacamole-auth-jdbc ................................ SUCCESS [  0.244 s]\n[INFO] guacamole-auth-jdbc-base ........................... SUCCESS [  8.011 s]\n[INFO] guacamole-auth-jdbc-mysql .......................... SUCCESS [  4.717 s]\n[INFO] guacamole-auth-jdbc-postgresql ..................... SUCCESS [  5.098 s]\n[INFO] guacamole-auth-jdbc-sqlserver ...................... SUCCESS [  5.620 s]\n[INFO] guacamole-auth-jdbc-dist ........................... SUCCESS [  4.031 s]\n[INFO] guacamole-auth-json ................................ SUCCESS [  6.319 s]\n[INFO] guacamole-auth-ldap ................................ SUCCESS [  8.948 s]\n[INFO] guacamole-auth-quickconnect ........................ SUCCESS [  9.128 s]\n[INFO] guacamole-auth-sso ................................. SUCCESS [  0.270 s]\n[INFO] guacamole-auth-sso-base ............................ SUCCESS [  3.665 s]\n[INFO] guacamole-auth-sso-cas ............................. SUCCESS [ 12.263 s]\n[INFO] guacamole-auth-sso-openid .......................... SUCCESS [  5.667 s]\n[INFO] guacamole-auth-sso-saml ............................ SUCCESS [  5.068 s]\n[INFO] guacamole-auth-sso-dist ............................ SUCCESS [  4.884 s]\n[INFO] guacamole-auth-totp ................................ SUCCESS [  9.310 s]\n[INFO] guacamole-history-recording-storage ................ SUCCESS [  3.131 s]\n[INFO] guacamole-vault .................................... SUCCESS [  0.231 s]\n[INFO] guacamole-vault-base ............................... SUCCESS [  4.671 s]\n[INFO] guacamole-vault-ksm ................................ SUCCESS [  6.411 s]\n[INFO] guacamole-vault-dist ............................... SUCCESS [  3.421 s]\n[INFO] guacamole-auth-radius .............................. SUCCESS [ 10.806 s]\n[INFO] guacamole-example .................................. SUCCESS [  2.052 s]\n[INFO] guacamole-playback-example ......................... SUCCESS [  0.938 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  04:36 min\n[INFO] Finished at: 2023-01-10T17:27:11-08:00\n[INFO] ------------------------------------------------------------------------\n$\n```\n\n----------------------------------------\n\nTITLE: Implementing Clipboard Handler in Guacamole C API\nDESCRIPTION: Demonstrates how to implement and register a clipboard handler for processing clipboard data streams. The handler is installed in the clipboard_handler member of the guac_user structure and is responsible for processing incoming clipboard data.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_7\n\nLANGUAGE: c\nCODE:\n```\nint clipboard_handler(guac_user* user, guac_stream* stream, char* mimetype) {\n    /* Do something */\n}\n\n...\n\n/* Within the \"join\" handler of guac_client */\nuser->clipboard_handler = clipboard_handler;\n```\n\n----------------------------------------\n\nTITLE: Illustrating Join Existing Connection in Guacamole Protocol\nDESCRIPTION: This snippet demonstrates how to join an existing connection by providing the connection ID in the 'select' instruction instead of a protocol name.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_7\n\nLANGUAGE: text\nCODE:\n```\n6.select,37.$260d01da-779b-4ee9-afc1-c16bae885cc7;\n```\n\n----------------------------------------\n\nTITLE: Running Guacamole Docker Container with Custom GUACAMOLE_HOME\nDESCRIPTION: Command for running a Guacamole Docker container with a custom GUACAMOLE_HOME configuration directory mounted as a volume. This allows using custom or third-party extensions not supported by the standard Docker image.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_12\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole    \\\n    ...\n    -v /local/path:/some-directory   \\\n    -e GUACAMOLE_HOME=/some-directory \\\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Running the Encryption Shell Script with Secret Key\nDESCRIPTION: Example of running the encrypt-json.sh script to encrypt and sign a JSON file for Guacamole authentication. The script takes a hex encryption key and the path to the JSON file as parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ ./encrypt-json.sh HEX_ENCRYPTION_KEY file-to-sign-and-encrypt.json\n```\n\n----------------------------------------\n\nTITLE: Implementing File Handler in Guacamole C API\nDESCRIPTION: Shows the implementation and registration of a file handler for processing file transfer streams. The handler receives additional metadata including the mimetype and filename of the transferred file.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_8\n\nLANGUAGE: c\nCODE:\n```\nint file_handler(guac_user* user, guac_stream* stream,\n        char* mimetype, char* filename) {\n    /* Do something */\n}\n\n...\n\n/* Within the \"join\" handler of guac_client */\nuser->file_handler = file_handler;\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC Attribute Claim Types in guacamole.properties\nDESCRIPTION: Configuration example showing how to specify OpenID Connect claim types in guacamole.properties that will be available as tokens with the OIDC_ prefix.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_39\n\nLANGUAGE: INI\nCODE:\n```\nopenid-attributes-claim-type: firstname, lastname, email, mobile\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Name in RDP Connections\nDESCRIPTION: Specifies the client name that Guacamole will provide to the RDP server instead of its own hostname. On Windows RDP servers, this value is exposed within the session as the CLIENTNAME environment variable.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n`client-name`\n: When connecting to the RDP server, Guacamole will normally provide its own\n  hostname as the name of the client. If this parameter is specified,\n  Guacamole will use its value instead.\n\n  On Windows RDP servers, this value is exposed within the session as the\n  `CLIENTNAME` environment variable.\n```\n\n----------------------------------------\n\nTITLE: Escaping Special Characters in guacd.conf\nDESCRIPTION: Examples demonstrating how to escape special characters like double quotes, newlines, and backslashes within parameter values using the backslash character.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_43\n\nLANGUAGE: ini\nCODE:\n```\n# Parameter value containing a double quote\nparameter = \"some\\\"value\"\n\n# Parameter value containing newline characters\nparameter2 = \"line1\\\nline2\\\nline3\"\n\n# Parameter value containing backslashes\nparameter3 = \"c:\\\\windows\\\\path\\\\to\\\\file.txt\"\n```\n\n----------------------------------------\n\nTITLE: Defining POSIX Group Structure in LDAP\nDESCRIPTION: This LDAP snippet shows the structure of a group using the posixGroup scheme. It demonstrates how group members are defined using the 'memberUid' attribute with usernames.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_3\n\nLANGUAGE: ldap\nCODE:\n```\ndn: cn=group1,ou=Groups,dc=example,dc=net\nobjectClass: posixGroup\ncn: group1\ngidNumber: 12345\nmemberUid: user1\nmemberUid: user2\n```\n\n----------------------------------------\n\nTITLE: Using Dynamic Token Values in KSM References\nDESCRIPTION: Example showing how to use dynamic token substitution in KSM references. This snippet demonstrates defining a Linux server key token that selects a private key file named after the current user.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/vault.md#2025-04-11_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nLINUX_SERVER_KEY: keeper://Chah0VuPh0ohyeuL4che1o/file/${USERNAME}.pem\n```\n\n----------------------------------------\n\nTITLE: Setting Color Depth in RDP Display\nDESCRIPTION: Optional parameter to request a specific color depth from the RDP server in bits-per-pixel. Valid values are 8, 16, or 24. Guacamole will optimize and use 256-color PNGs when possible regardless of this setting.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n`color-depth`\n: The color depth to request, in bits-per-pixel. This parameter is optional.\n  If specified, this must be either 8, 16, or 24. Regardless of what value\n  is chosen here, if a particular update uses less than 256 colors,\n  Guacamole will always send that update as a 256-color PNG.\n```\n\n----------------------------------------\n\nTITLE: Implementing Leave Handler for Guacamole Client Plugin in C\nDESCRIPTION: Shows the implementation of a leave handler for a Guacamole client plugin. This function is called when a user disconnects and is used to free user-specific data and perform cleanup.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_1\n\nLANGUAGE: C\nCODE:\n```\nint leave_handler(guac_user* user) {\n    /* Free user-specific data and clean up */\n}\n\n...\n\n/* Within guac_client_init  */\nclient->leave_handler = leave_handler;\n```\n\n----------------------------------------\n\nTITLE: Defining LDAP Group Structure in LDAP\nDESCRIPTION: This LDAP snippet demonstrates the structure of a group using the groupOfNames scheme. It shows how group members are defined using the 'member' attribute with full DNs.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_2\n\nLANGUAGE: ldap\nCODE:\n```\ndn: cn=group1,ou=Groups,dc=example,dc=net\nobjectClass: groupOfNames\ncn: group1\ngidNumber: 12345\nmember: user1,ou=People,dc=example,dc=net\nmember: user2,ou=People,dc=example,dc=net\n```\n\n----------------------------------------\n\nTITLE: Implementing a Skeleton Authentication Provider in Java\nDESCRIPTION: Basic implementation of a Guacamole authentication provider that extends SimpleAuthenticationProvider. This skeleton implementation returns null for all authentication attempts, causing all login attempts to be rejected.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.auth;\n\nimport java.util.Map;\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.net.auth.simple.SimpleAuthenticationProvider;\nimport org.apache.guacamole.net.auth.Credentials;\nimport org.apache.guacamole.protocol.GuacamoleConfiguration;\n\n/**\n * Authentication provider implementation intended to demonstrate basic use\n * of Guacamole's extension API. The credentials and connection information for\n * a single user are stored directly in guacamole.properties.\n */\npublic class TutorialAuthenticationProvider extends SimpleAuthenticationProvider {\n\n    @Override\n    public String getIdentifier() {\n        return \"tutorial\";\n    }\n\n    @Override\n    public Map<String, GuacamoleConfiguration>\n        getAuthorizedConfigurations(Credentials credentials)\n        throws GuacamoleException {\n\n        // Do nothing ... yet\n        return null;        \n\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Display Resize Method for RDP\nDESCRIPTION: Specifies the method to update the RDP server when client display size changes. Options include \"display-update\" for RDP 8.1+ servers using the Display Update channel, or \"reconnect\" to disconnect and reconnect with the new size.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_25\n\nLANGUAGE: markdown\nCODE:\n```\n`resize-method`\n: The method to use to update the RDP server when the width or height of the\n  client display changes. This parameter is optional. If this value is not\n  specified, no action will be taken when the client display changes size.\n\n  Normally, the display size of an RDP session is constant and can only be\n  changed when initially connecting. As of RDP 8.1, the \"Display Update\"\n  channel can be used to request that the server change the display size.\n  For older RDP servers, the only option is to disconnect and reconnect with\n  the new size.\n\n  Possible values are:\n\n  display-update\n  : Uses the \"Display Update\" channel added with RDP 8.1 to signal the\n    server when the client display size has changed.\n\n  reconnect\n  : Automatically disconnects the RDP session when the client display size\n    has changed, and reconnects with the new size.\n```\n\n----------------------------------------\n\nTITLE: XML Connection Configuration Example\nDESCRIPTION: Example showing required 'name' attribute in connection tag within user-mapping.xml. The connection tag must have a name attribute specified or the XML will be considered malformed.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/troubleshooting.md#2025-04-11_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<connection name=\"example-connection\">\n```\n\n----------------------------------------\n\nTITLE: Verifying LDAP Schema Configuration\nDESCRIPTION: Command to verify the successful addition of the guacConfigGroup schema using ldapsearch utility. This displays all schema objects including the newly added Guacamole configuration.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n# ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b cn=schema,cn=config dn\n```\n\n----------------------------------------\n\nTITLE: Configuring Display Width in RDP Sessions\nDESCRIPTION: Optional parameter to specify the width of the RDP display in pixels. If not specified, Guacamole will use the width of the connecting client display.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n`width`\n: The width of the display to request, in pixels. This parameter is\n  optional. If this value is not specified, the width of the connecting\n  client display will be used instead.\n```\n\n----------------------------------------\n\nTITLE: Session Filtering Example with CIDR Notation\nDESCRIPTION: Examples showing how to filter active sessions using search terms and CIDR notation for IP address ranges. Supports both IPv4 and IPv6 address filtering.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/administration.md#2025-04-11_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nguacadmin 2015-03\n```\n\nLANGUAGE: text\nCODE:\n```\n10.0.0.0/8\n```\n\nLANGUAGE: text\nCODE:\n```\n2001:db8:1234::/48\n```\n\n----------------------------------------\n\nTITLE: Configuring Display Height in RDP Sessions\nDESCRIPTION: Optional parameter to specify the height of the RDP display in pixels. If not specified, Guacamole will use the height of the connecting client display.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n`height`\n: The height of the display to request, in pixels. This parameter is\n  optional. If this value is not specified, the height of the connecting\n  client display will be used instead.\n```\n\n----------------------------------------\n\nTITLE: Initializing Ball Client Structure\nDESCRIPTION: Defines the structure to hold client-level state of the ball including position, velocity, and rendering thread\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_8\n\nLANGUAGE: c\nCODE:\n```\ntypedef struct ball_client_data {\n    guac_layer* ball;\n    int ball_x;\n    int ball_y;\n    int ball_velocity_x;\n    int ball_velocity_y;\n    pthread_t render_thread;\n} ball_client_data;\n```\n\n----------------------------------------\n\nTITLE: Example of Client Handshake Response in Guacamole Protocol\nDESCRIPTION: This snippet shows a series of instructions sent by the client in response to the server's args instruction, including supported formats and connection parameters.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n4.size,4.1024,3.768,2.96;\n5.audio,9.audio/ogg;\n5.video;\n5.image,9.image/png,10.image/jpeg;\n8.timezone,16.America/New_York;\n7.connect,13.VERSION_1_1_0,9.localhost,4.5900,0.,0.,0.;\n```\n\n----------------------------------------\n\nTITLE: Configuring PulseAudio TCP Module Without Network Restrictions\nDESCRIPTION: Loads the TCP module for PulseAudio allowing anonymous connections from any IP address. Should only be used in secure network environments.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_13\n\nLANGUAGE: text\nCODE:\n```\nload-module module-native-protocol-tcp auth-anonymous=1\n```\n\n----------------------------------------\n\nTITLE: Basic YAML LDAP Server Configuration\nDESCRIPTION: Simple YAML configuration for an LDAP server using ldap-servers.yml format.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n- hostname: dc1.example.net\n  user-base-dn: ou=Users,dc=example,dc=net\n  username-attribute: sAMAccountName\n  search-bind-dn: cn=Guacamole,ou=Service Users,dc=example,dc=net\n  search-bind-password: SomePassword!\n```\n\n----------------------------------------\n\nTITLE: Creating Recording Storage Directory in Linux\nDESCRIPTION: Command to create the default recording storage directory for Guacamole session recordings at /var/lib/guacamole/recordings.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/recording-playback.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir -p /var/lib/guacamole/recordings\n```\n\n----------------------------------------\n\nTITLE: Configuring Java 8 Compilation in Maven POM\nDESCRIPTION: Maven configuration that specifies Java 8 as the source and target version for compilation. This is required as Guacamole needs at least Java 8.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n    ...\n\n    <build>\n        <plugins>\n\n            <!-- Compile using Java 8 -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.3</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n\n        </plugins>\n\n    </build>\n\n    ...\n```\n\n----------------------------------------\n\nTITLE: VNC Repeater Configuration Parameters in Guacamole\nDESCRIPTION: Parameters for configuring VNC connections through repeaters or proxies in Guacamole. These settings allow specification of destination host and port when connecting through intermediaries like UltraVNC Repeater.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n`dest-host`\n: The destination host to request when connecting to a VNC proxy such as\n  UltraVNC Repeater. This is only necessary if the VNC proxy in use requires\n  the connecting user to specify which VNC server to connect to. If the VNC\n  proxy automatically connects to a specific server, this parameter is not\n  necessary.\n\n`dest-port`\n: The destination port to request when connecting to a VNC proxy such as\n  UltraVNC Repeater. This is only necessary if the VNC proxy in use requires\n  the connecting user to specify which VNC server to connect to. If the VNC\n  proxy automatically connects to a specific server, this parameter is not\n  necessary.\n```\n\n----------------------------------------\n\nTITLE: Extracting guacamole-client Source Archive\nDESCRIPTION: Command for extracting the guacamole-client source code from a downloaded .tar.gz archive and changing into the extracted directory.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_6\n\nLANGUAGE: console\nCODE:\n```\n$ tar -xzf guacamole-client-1.6.0.tar.gz\n$ cd guacamole-client-1.6.0/\n$\n```\n\n----------------------------------------\n\nTITLE: Defining Keyboard Layout in XML\nDESCRIPTION: Example of defining a simple keyboard layout with shift and 'a' keys using XML. Shows how to specify modifier keys, key caps, and conditional key states based on modifiers.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<keyboard lang=\"en_US\" layout=\"example\" size=\"5\">\n    <row>\n        <key size=\"4\">\n            <cap modifier=\"shift\" keysym=\"0xFFE1\">Shift</cap>\n        </key>\n        <key>\n            <cap>a</cap>\n            <cap if=\"shift\">A</cap>\n        </key>\n    </row>\n</keyboard>\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Server User Permissions for Guacamole\nDESCRIPTION: SQL commands for creating a SQL Server login and user with appropriate permissions for Guacamole database access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_5\n\nLANGUAGE: console\nCODE:\n```\n$ /opt/mssql-tools/bin/sqlcmd -S localhost -U SA\nPassword:\n1> CREATE LOGIN guacamole_user WITH PASSWORD = 'some_password';\n2> GO\n1> USE guacamole_db;\n2> GO\n1> CREATE USER guacamole_user;\n2> GO\n1> ALTER ROLE db_datawriter ADD MEMBER guacamole_user;\n2> ALTER ROLE db_datareader ADD MEMBER guacamole_user;\n3> GO\n1> quit\n$\n```\n\n----------------------------------------\n\nTITLE: Setting CAS Extension Priority for Automatic Redirection\nDESCRIPTION: Configuration snippet to give CAS extension priority over all others, ensuring users are automatically redirected to the CAS identity provider without seeing a Guacamole login screen.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/cas-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: cas\n```\n\n----------------------------------------\n\nTITLE: Displaying SSO Extension Files in Markdown Table\nDESCRIPTION: A markdown table showing the supported SSO methods and their corresponding extension file names. It includes CAS, OpenID Connect, and SAML authentication methods with their respective JAR file names.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/include/sso-download.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| SSO Method                    | Extension                                    |\n| ----------------------------- | -------------------------------------------- |\n| [CAS](cas-auth)               | `cas/guacamole-auth-sso-cas-1.6.0.jar`       |\n| [OpenID Connect](openid-auth) | `openid/guacamole-auth-sso-openid-1.6.0.jar` |\n| [SAML](saml-auth)             | `saml/guacamole-auth-sso-saml-1.6.0.jar`     |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Active Connection Directory in Java\nDESCRIPTION: Demonstrates how to access the directory of active connections using the UserContext interface in Guacamole's extension API.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_13\n\nLANGUAGE: java\nCODE:\n```\ngetActiveConnectionDirectory()\n```\n\n----------------------------------------\n\nTITLE: Configuring PulseAudio TCP Module with Network Restrictions\nDESCRIPTION: Loads the TCP module for PulseAudio with IP-based access control, configuring it to accept connections from a specific subnet without authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_12\n\nLANGUAGE: text\nCODE:\n```\nload-module module-native-protocol-tcp auth-ip-acl=192.168.1.0/24 auth-anonymous=1\n```\n\n----------------------------------------\n\nTITLE: Running Guacamole Container with Docker Link to guacd\nDESCRIPTION: Command to run the Guacamole web application container linked to a guacd container. The Docker link provides the necessary connection information automatically.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    --link some-guacd:guacd        \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Configuring Password Complexity Rules for PostgreSQL in Guacamole\nDESCRIPTION: Sets minimum password length, requires multiple case, symbols, digits, and prohibits username in password for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_11\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-user-password-min-length: 8\npostgresql-user-password-require-multiple-case: true\npostgresql-user-password-require-symbol: true\npostgresql-user-password-require-digit: true\npostgresql-user-password-prohibit-username: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Quickconnect Extension Parameters in Guacamole\nDESCRIPTION: Configuration properties for controlling allowed and denied connection parameters in the quickconnect extension. These properties are set in the Guacamole configuration to restrict or allow specific parameters in URIs.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/adhoc-connections.md#2025-04-11_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nquickconnect-allowed-parameters\nquickconnect-denied-parameters\n```\n\n----------------------------------------\n\nTITLE: Implementing Free Handler for Guacamole Client Plugin in C\nDESCRIPTION: Demonstrates how to implement and set the free handler for a Guacamole client plugin. This handler is called when the last user leaves a connection, allowing the plugin to free allocated resources.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_2\n\nLANGUAGE: c\nCODE:\n```\nint free_handler(guac_client* client) {\n    /* Disconnect, free client-specific data, etc. */\n}\n\n...\n\n/* Within guac_client_init  */\nclient->free_handler = free_handler;\n```\n\n----------------------------------------\n\nTITLE: Running guacd Container with External Port Access\nDESCRIPTION: Command to run the guacd Docker container with port 4822 exposed to allow external services to connect to guacd. This should be used with caution as guacd doesn't perform authentication.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacd -d -p 4822:4822 guacamole/guacd\n```\n\n----------------------------------------\n\nTITLE: REST Resource Path Structure (URL Pattern)\nDESCRIPTION: Shows the URL pattern structure for REST resources exposed by authentication providers and UserContext implementations.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_8\n\nLANGUAGE: text\nCODE:\n```\n{PATH}/api/ext/{IDENTIFIER}\n{PATH}/api/session/ext/{IDENTIFIER}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Authentication Configuration with RDP Connections\nDESCRIPTION: A complete example of a JSON authentication configuration file defining a user with two RDP connections. Each connection includes parameters like hostname, port, and screen recording settings.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"username\" : \"test\",\n    \"expires\" : \"1446323765000\",\n    \"connections\" : {\n        \"My Connection\" : {\n            \"protocol\" : \"rdp\",\n            \"parameters\" : {\n                \"hostname\" : \"10.10.209.63\",\n                \"port\" : \"3389\",\n                \"ignore-cert\": \"true\",\n                \"recording-path\": \"/recordings\",\n                \"recording-name\": \"My-Connection-${GUAC_USERNAME}-${GUAC_DATE}-${GUAC_TIME}\"\n            }\n        },\n        \"My OTHER Connection\" : {\n            \"protocol\" : \"rdp\",\n            \"parameters\" : {\n                \"hostname\" : \"10.10.209.64\",\n                \"port\" : \"3389\",\n                \"ignore-cert\": \"true\",\n                \"recording-path\": \"/recordings\",\n                \"recording-name\": \"My-OTHER-Connection-${GUAC_USERNAME}-${GUAC_DATE}-${GUAC_TIME}\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Password Age Limits for MySQL in Guacamole\nDESCRIPTION: Configures minimum and maximum password age in days for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_13\n\nLANGUAGE: properties\nCODE:\n```\nmysql-user-password-min-age: 7\nmysql-user-password-max-age: 90\n```\n\n----------------------------------------\n\nTITLE: Using Vault Parameter Tokens for Connection Secrets in Guacamole\nDESCRIPTION: Explains the format and usage of parameter tokens for retrieving secrets from vaults like Keeper Secrets Manager. Tokens follow the ${KEEPER_CRITERIA_SECRET} pattern, where CRITERIA determines how to locate records and SECRET specifies what value to retrieve.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/vault.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n${KEEPER_USER_PASSWORD}\n```\n\n----------------------------------------\n\nTITLE: Setting Password Age Limits for SQL Server in Guacamole\nDESCRIPTION: Configures minimum and maximum password age in days for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_15\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-user-password-min-age: 7\nsqlserver-user-password-max-age: 90\n```\n\n----------------------------------------\n\nTITLE: Configuring Skip-if-unavailable in Guacamole Properties\nDESCRIPTION: This snippet shows how to configure Guacamole to ignore failures from specific authentication providers (MySQL and LDAP) using the skip-if-unavailable property.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nskip-if-unavailable: mysql, ldap\n```\n\n----------------------------------------\n\nTITLE: Accessing guacenc Manual Page\nDESCRIPTION: Command to display the manual page for the guacenc utility, which provides detailed documentation about its options and usage for converting Guacamole recordings to video.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_33\n\nLANGUAGE: console\nCODE:\n```\n$ man guacenc\n```\n\n----------------------------------------\n\nTITLE: Setting SAML Extension Priority in Guacamole Configuration\nDESCRIPTION: Configuration snippet to set the SAML extension priority, ensuring users are redirected to the SAML identity provider immediately without seeing a Guacamole login screen.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/saml-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: saml\n```\n\n----------------------------------------\n\nTITLE: Verifying Recording Directory Permissions in Linux\nDESCRIPTION: Command to verify that the permissions and ownership of the Guacamole recording directory are set correctly, showing the expected output format.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/recording-playback.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ ls -ld /var/lib/guacamole/recordings\ndrwxr-s---. 1 guacd tomcat 0 Feb  5 05:43 /var/lib/guacamole/recordings/\n$\n```\n\n----------------------------------------\n\nTITLE: Setting Extension Priority in Guacamole Properties\nDESCRIPTION: These examples demonstrate how to control the load order of Guacamole extensions using the extension-priority property, ensuring SAML support is loaded first or last.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: saml\n```\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: *, saml\n```\n\n----------------------------------------\n\nTITLE: Client Error Codes in Guacamole Protocol\nDESCRIPTION: Defines error codes returned when client-side issues occur, including timeout (780), data overrun (781), bad data type (783), and resource exhaustion (797).\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/protocol-reference.rst#2025-04-11_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n780 (CLIENT_TIMEOUT)\n    The client (usually the user of Guacamole or their browser) is taking too\n    long to respond.\n\n781 (CLIENT_OVERRUN)\n    The client has sent more data than the protocol allows.\n\n783 (CLIENT_BAD_TYPE)\n    The client has sent data of an unexpected or illegal type.\n\n797 (CLIENT_TOO_MANY)\n    The client is already using too many resources. Existing resources must be\n    freed before further requests are allowed.\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Authentication in guacamole.properties\nDESCRIPTION: Example configuration for guacamole.properties to set up MySQL database authentication. Specifies the hostname, database name, username, and password for the Guacamole MySQL connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\n# MySQL properties\nmysql-hostname: localhost\nmysql-database: guacamole_db\nmysql-username: guacamole_user\nmysql-password: some_password\n```\n\n----------------------------------------\n\nTITLE: Configuring Password History for PostgreSQL in Guacamole\nDESCRIPTION: Sets the number of previous passwords to remember and prevent reuse for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_17\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-user-password-history-size: 6\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx for Different External and Internal Paths\nDESCRIPTION: This Nginx configuration allows serving Guacamole at a different external path while maintaining the internal /guacamole/ path.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_5\n\nLANGUAGE: nginx\nCODE:\n```\nlocation /new-path/ {\n    proxy_pass http://HOSTNAME:8080/guacamole/;\n    proxy_buffering off;\n    proxy_http_version 1.1;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection $http_connection;\n    access_log off;\n}\n```\n\n----------------------------------------\n\nTITLE: XML Parameter Tag Example\nDESCRIPTION: Example showing the correct usage of param tag in XML configuration that requires a name attribute. Missing this attribute will result in malformed XML and login failures.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/troubleshooting.md#2025-04-11_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<param name=\"example\"/>\n```\n\n----------------------------------------\n\nTITLE: Configuring SQL Server Connection Properties in Guacamole\nDESCRIPTION: Basic configuration properties for connecting Guacamole to a SQL Server database. These properties define the hostname, database name, and authentication credentials required for establishing a database connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n# SQL Server properties\nsqlserver-hostname: localhost\nsqlserver-database: guacamole_db\nsqlserver-username: guacamole_user\nsqlserver-password: some_password\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrent Connection Limits for SQL Server in Guacamole\nDESCRIPTION: Configures default maximum concurrent connections and group connections for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_21\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-default-max-connections: 1\nsqlserver-default-max-group-connections: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-User Connection Limits for PostgreSQL in Guacamole\nDESCRIPTION: Sets default maximum connections and group connections per user for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_23\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-default-max-connections-per-user: 0\npostgresql-default-max-group-connections-per-user: 0\n```\n\n----------------------------------------\n\nTITLE: Configuring JSON Secret Key in Guacamole Properties\nDESCRIPTION: Shows the configuration entry needed in guacamole.properties file to set up the JSON authentication secret key using the generated 32-digit hex value.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\njson-secret-key: 4c0b569e4c96df157eee1b65dd0e4d41\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-User Connection Limits for SQL Server in Guacamole\nDESCRIPTION: Sets default maximum connections and group connections per user for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_24\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-default-max-connections-per-user: 0\nsqlserver-default-max-group-connections-per-user: 0\n```\n\n----------------------------------------\n\nTITLE: Sending Size Instruction to Specific User in Guacamole Client Plugin\nDESCRIPTION: Demonstrates how to send a 'size' instruction to a specific user using the user-level socket in a Guacamole client plugin.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_4\n\nLANGUAGE: c\nCODE:\n```\nguac_protocol_send_size(user->socket, GUAC_DEFAULT_LAYER, 1024, 768);\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP User Attributes in guacamole.properties\nDESCRIPTION: Configuration example showing how to specify LDAP user attributes in guacamole.properties that will be available as tokens with the LDAP_ prefix.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_38\n\nLANGUAGE: INI\nCODE:\n```\nldap-user-attributes: cn, givenName, sn, mobile, mail\n```\n\n----------------------------------------\n\nTITLE: Restricting Authentication to Database Users (MySQL)\nDESCRIPTION: Configuration property to restrict authentication to only users in the MySQL database. This setting forces the database to have the final say on user access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_28\n\nLANGUAGE: properties\nCODE:\n```\nmysql-user-required: true\n```\n\n----------------------------------------\n\nTITLE: GNU Automake Makefile for Guacamole Client Plugin\nDESCRIPTION: The Makefile.am configuration that specifies build options and source files for the bouncing ball client plugin. It defines compiler flags and identifies the main source file to be compiled.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/custom-protocols.md#2025-04-11_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nAUTOMAKE_OPTIONS = foreign\n\nACLOCAL_AMFLAGS = -I m4\nAM_CFLAGS = -Werror -Wall -pedantic\n\nlib_LTLIBRARIES = libguac-client-ball.la\n\n# All source files of libguac-client-ball\nlibguac_client_ball_la_SOURCES = src/ball.c\n\n```\n\n----------------------------------------\n\nTITLE: Restricting Authentication to Database Users (PostgreSQL)\nDESCRIPTION: Configuration property to restrict authentication to only users in the PostgreSQL database. This setting forces the database to have the final say on user access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_29\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-user-required: true\n```\n\n----------------------------------------\n\nTITLE: Using Quotes for Special Characters in guacd.conf\nDESCRIPTION: Example showing how to use double quotes to include special characters like whitespace and special symbols in parameter values.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_42\n\nLANGUAGE: ini\nCODE:\n```\n[ssl]\n\n# Whitespace is legal within double quotes ...\nserver_certificate = \"/etc/ssl/my certs/guacd.crt\"\n\n# ... as are other special symbols\nserver_key = \"/etc/ssl/#private/guacd.key\"\n```\n\n----------------------------------------\n\nTITLE: Authorization Encoding Configuration\nDESCRIPTION: Example showing valid encoding types for the authorize tag in XML configuration. Only 'plain' and 'md5' are valid values.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/troubleshooting.md#2025-04-11_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<authorize encoding=\"plain\">\n<authorize encoding=\"md5\">\n```\n\n----------------------------------------\n\nTITLE: Adding LDIF Configuration Using ldapadd Command\nDESCRIPTION: Console command example demonstrating how to add the VNC connection configuration to LDAP using the ldapadd utility with administrative credentials.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/ldap-auth.md#2025-04-11_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n$ ldapadd -x -D cn=admin,dc=example,dc=net -W -f example-connection.ldif\nEnter LDAP Password:\nadding new entry \"cn=Example Connection,ou=groups,dc=example,dc=net\"\n\n$\n```\n\n----------------------------------------\n\nTITLE: Auto-Creating Database Users (MySQL)\nDESCRIPTION: Configuration property to enable automatic creation of user accounts in the MySQL database for users authenticated by other extensions.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_31\n\nLANGUAGE: properties\nCODE:\n```\nmysql-auto-create-accounts: true\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL User Permissions for Guacamole\nDESCRIPTION: SQL commands for creating a MySQL user and granting necessary permissions for Guacamole database access.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 233\nServer version: 5.5.29-0ubuntu0.12.10.1 (Ubuntu)\n\nmysql> CREATE USER 'guacamole_user'@'localhost' IDENTIFIED BY 'some_password';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> GRANT SELECT,INSERT,UPDATE,DELETE ON guacamole_db.* TO 'guacamole_user'@'localhost';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> FLUSH PRIVILEGES;\nQuery OK, 0 rows affected (0.02 sec)\n\nmysql> quit\nBye\n$\n```\n\n----------------------------------------\n\nTITLE: Unimplemented Compositing Operations\nDESCRIPTION: Documents compositing operations that are defined in the protocol but not implemented in HTML5 canvas.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\nClear (0x00)\nB (0x03)\nA xnor B (0x05)\n(A + B) atop B (0x07)\n(A + B) atop A (0x0D)\n```\n\n----------------------------------------\n\nTITLE: Example JSON Stream Index Format for Guacamole Objects\nDESCRIPTION: This JSON example demonstrates the format of the root stream content returned when requesting the root stream (\"/\") of an object. It shows how available streams are represented as a map of stream names to their corresponding mimetypes.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/protocol-reference.rst#2025-04-11_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"A\" : \"text/plain\",\n  \"B\" : \"text/plain\"\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Access Window Enforcement for Active Sessions (MySQL)\nDESCRIPTION: Configuration property to disable the enforcement of access windows for active sessions in MySQL. This allows users to continue their sessions even after their access window has expired.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_34\n\nLANGUAGE: properties\nCODE:\n```\nmysql-enforce-access-windows-for-active-sessions: false\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrent Connection Limits for MySQL in Guacamole\nDESCRIPTION: Configures default maximum concurrent connections and group connections for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_19\n\nLANGUAGE: properties\nCODE:\n```\nmysql-default-max-connections: 1\nmysql-default-max-group-connections: 1\n```\n\n----------------------------------------\n\nTITLE: Initializing Guacamole Client with Tunnel\nDESCRIPTION: Creates a new Guacamole client instance with an unconnected tunnel. This is the first step in setting up a Guacamole client connection.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-common-js.md#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar client = new Guacamole.Client(tunnel);\n```\n\n----------------------------------------\n\nTITLE: Setting Absolute Maximum Connections for SQL Server in Guacamole\nDESCRIPTION: Configures the absolute maximum number of connections allowed for SQL Server authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_27\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-absolute-max-connections: 0\n```\n\n----------------------------------------\n\nTITLE: Implementing Join Handler for Guacamole Client Plugin in C\nDESCRIPTION: Demonstrates how to implement a join handler for a Guacamole client plugin. This function is called when a user joins a connection and is typically used to synchronize display state and initialize the user.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/libguac.md#2025-04-11_snippet_0\n\nLANGUAGE: C\nCODE:\n```\nint join_handler(guac_user* user, int argc, char** argv) {\n    /* Synchronize display state, init the user, etc. */\n}\n\n...\n\n/* Within guac_client_init  */\nclient->join_handler = join_handler;\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrent Connection Limits for PostgreSQL in Guacamole\nDESCRIPTION: Configures default maximum concurrent connections and group connections for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_20\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-default-max-connections: 1\npostgresql-default-max-group-connections: 1\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Guacamole Event Listener\nDESCRIPTION: Java implementation of a basic Guacamole event listener that implements the Listener interface. This skeleton code logs a message whenever any Guacamole event notification is received.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage org.apache.guacamole.event;\n\nimport org.apache.guacamole.GuacamoleException;\nimport org.apache.guacamole.net.event.listener.Listener;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\n/**\n * A Listener implementation intended to demonstrate basic use\n * of Guacamole's listener extension API.\n */\npublic class TutorialListener implements Listener {\n\n    private static final Logger logger = \n         LoggerFactory.getLogger(TutorialListener.class);\n\n    @Override\n    public void handleEvent(Object event) throws GuacamoleException {\n        logger.info(\"received Guacamole event notification\");\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Absolute Maximum Connections for MySQL in Guacamole\nDESCRIPTION: Configures the absolute maximum number of connections allowed for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_25\n\nLANGUAGE: properties\nCODE:\n```\nmysql-absolute-max-connections: 0\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Property in Java for Guacamole Extension\nDESCRIPTION: Shows how to create a custom property by extending the IntegerGuacamoleProperty base class. The property is defined as a static member with an implementation of the getName() method to identify the property.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic class MyProperties {\n\n    public static MY_PROPERTY = new IntegerGuacamoleProperty() {\n\n        @Override\n        public String getName() { return \"my-property\"; }\n\n    };\n\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Guacamole WAR file to Tomcat\nDESCRIPTION: Command to copy the compiled Guacamole WAR file to Tomcat's webapps directory for deployment.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_10\n\nLANGUAGE: console\nCODE:\n```\n# cp guacamole/target/guacamole-1.6.0.war /var/lib/tomcat/webapps/guacamole.war\n```\n\n----------------------------------------\n\nTITLE: Setting Absolute Maximum Connections for PostgreSQL in Guacamole\nDESCRIPTION: Configures the absolute maximum number of connections allowed for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_26\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-absolute-max-connections: 0\n```\n\n----------------------------------------\n\nTITLE: Cloning guacamole-client Git Repository\nDESCRIPTION: Command for cloning the latest development version of guacamole-client from the GitHub repository, providing access to the most recent but potentially less stable code.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_7\n\nLANGUAGE: console\nCODE:\n```\n$ git clone git://github.com/apache/guacamole-client.git\nCloning into 'guacamole-client'...\nremote: Counting objects: 12788, done.\nremote: Compressing objects: 100% (4183/4183), done.\nremote: Total 12788 (delta 3942), reused 12667 (delta 3822)\nReceiving objects: 100% (12788/12788), 3.23 MiB | 799 KiB/s, done.\nResolving deltas: 100% (3942/3942), done.\n$\n```\n\n----------------------------------------\n\nTITLE: Disabling Access Window Enforcement for Active Sessions (PostgreSQL)\nDESCRIPTION: Configuration property to disable the enforcement of access windows for active sessions in PostgreSQL. This allows users to continue their sessions even after their access window has expired.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_35\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-enforce-access-windows-for-active-sessions: false\n```\n\n----------------------------------------\n\nTITLE: Running Configure with Init Directory Option\nDESCRIPTION: Demonstrates running the configure script with options to check dependencies and prepare for building, specifying the init directory for startup scripts.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ ./configure --with-init-dir=/etc/init.d\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes\n...\n\n------------------------------------------------\nguacamole-server version 1.6.0\n------------------------------------------------\n\n   Library status:\n\n     freerdp ............. yes (3.x)\n     pango ............... yes\n     libavcodec .......... yes\n     libavformat ......... yes\n     libavutil ........... yes\n     libssh2 ............. yes\n     libssl .............. yes\n     libswscale .......... yes\n     libtelnet ........... yes\n     libVNCServer ........ yes\n     libvorbis ........... yes\n     libpulse ............ yes\n     libwebsockets ....... yes\n     libwebp ............. yes\n     wsock32 ............. no\n\n   Protocol support:\n\n      Kubernetes .... yes\n      RDP ........... yes\n      SSH ........... yes\n      Telnet ........ yes\n      VNC ........... yes\n\n   Services / tools:\n\n      guacd ...... yes\n      guacenc .... yes\n      guaclog .... yes\n\n   FreeRDP plugins: /usr/lib/pkgconfig/../../lib/freerdp3\n   Init scripts: /etc/init.d\n   Systemd units: no\n\nType \"make\" to compile guacamole-server.\n\n$\n```\n\n----------------------------------------\n\nTITLE: Importing Connections using YAML Format in Apache Guacamole\nDESCRIPTION: Example of a YAML file format for batch importing connections. It shows the structure for defining connections with their properties, similar to the JSON format but in YAML syntax.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/batch-import.md#2025-04-11_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\n  - name: conn1\n    protocol: vnc\n    parameters:\n      username: alice\n      password: pass1\n      hostname: conn1.web.com\n    group: ROOT\n    users:\n      - guac user 1\n      - guac user 2\n    groups:\n    - Connection 1 Users\n    attributes:\n      guacd-encryption: none\n  - name: conn2\n    protocol: rdp\n    parameters:\n      username: bob\n      password: pass2\n      hostname: conn2.web.com\n    group: ROOT/Parent Group\n    users:\n      - guac user 1\n    attributes:\n      guacd-encryption: none\n  - name: conn3\n    protocol: ssh\n    parameters:\n      username: carol\n      password: pass3\n      hostname: conn3.web.com\n    group: ROOT/Parent Group/Child Group\n    users:\n      - guac user 2\n      - guac user 3\n  - name: conn4\n    protocol: kubernetes\n```\n\n----------------------------------------\n\nTITLE: Sample guacd.conf Configuration File\nDESCRIPTION: Example configuration file for guacd (the Guacamole proxy daemon) showing sections for daemon and server settings with options for PID file, logging level, and connection binding.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_40\n\nLANGUAGE: INI\nCODE:\n```\n#\n# guacd configuration file\n#\n\n[daemon]\n\npid_file = /var/run/guacd.pid\nlog_level = info\n\n[server]\n\nbind_host = localhost\nbind_port = 4822\n\n#\n# The following parameters are valid only if\n# guacd was built with SSL support.\n\n```\n\n----------------------------------------\n\nTITLE: Setting OpenID Connect Extension Priority in Guacamole\nDESCRIPTION: This snippet shows how to configure the extension priority to automatically redirect unauthenticated users to the OpenID identity provider.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/openid-auth.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nextension-priority: openid\n```\n\n----------------------------------------\n\nTITLE: Generating Configure Script from Git Repository\nDESCRIPTION: Shows how to generate the configure script manually when working with source code downloaded directly from the git repository.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/installing-guacamole.md#2025-04-11_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ cd guacamole-server/\n$ autoreconf -fi\n$\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed Languages in Guacamole Properties\nDESCRIPTION: This snippet demonstrates how to restrict Guacamole to only English and German display language choices using the allowed-languages property in guacamole.properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nallowed-languages: en, de\n```\n\n----------------------------------------\n\nTITLE: Configuring RemoteIpValve for Both IPv4 and IPv6 Support\nDESCRIPTION: Enhanced XML configuration for Tomcat's RemoteIpValve that handles both IPv4 and IPv6 localhost addresses, ensuring consistent client IP retrieval in dual-stack environments.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<Valve className=\"org.apache.catalina.valves.RemoteIpValve\"\n               internalProxies=\"127\\.0\\.0\\.1|0:0:0:0:0:0:0:1\"\n               remoteIpHeader=\"x-forwarded-for\"\n               remoteIpProxiesHeader=\"x-forwarded-by\"\n               protocolHeader=\"x-forwarded-proto\" />\n```\n\n----------------------------------------\n\nTITLE: Enabling Console (Admin) Session in RDP\nDESCRIPTION: Parameter to connect to the console (admin) session of an RDP server by setting the value to \"true\".\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n`console`\n: If set to \"true\", you will be connected to the console (admin) session of\n  the RDP server.\n```\n\n----------------------------------------\n\nTITLE: Configuring RemoteIpValve in Tomcat for Client IP Address Handling\nDESCRIPTION: XML configuration for Tomcat's RemoteIpValve to properly capture client IP addresses when behind a reverse proxy. This allows Guacamole to see the original client IP instead of the proxy's IP.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Valve className=\"org.apache.catalina.valves.RemoteIpValve\"\n               internalProxies=\"127\\.0\\.0\\.1\"\n               remoteIpHeader=\"x-forwarded-for\"\n               remoteIpProxiesHeader=\"x-forwarded-by\"\n               protocolHeader=\"x-forwarded-proto\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse and Keyboard Input for Guacamole Client\nDESCRIPTION: This snippet shows how to add mouse and keyboard input handling to the Guacamole client. It creates Guacamole.Mouse and Guacamole.Keyboard objects and sets up event handlers to send input events to the client.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n        ...\n\n        <!-- Init -->\n        <script type=\"text/javascript\"> /* <![CDATA[ */\n\n            ...\n\n            // Mouse\n            var mouse = new Guacamole.Mouse(guac.getDisplay().getElement());\n\n            mouse.onmousedown = \n            mouse.onmouseup   =\n            mouse.onmousemove = function(mouseState) {\n                guac.sendMouseState(mouseState);\n            };\n\n            // Keyboard\n            var keyboard = new Guacamole.Keyboard(document);\n\n            keyboard.onkeydown = function (keysym) {\n                guac.sendKeyEvent(1, keysym);\n            };\n\n            keyboard.onkeyup = function (keysym) {\n                guac.sendKeyEvent(0, keysym);\n            };\n\n        /* ]]> */ </script>\n\n        ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Apache for WebSocket Proxy with Guacamole\nDESCRIPTION: This Apache configuration demonstrates how to set up a WebSocket proxy for Guacamole using mod_proxy_wstunnel, in addition to the standard HTTP proxy.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_8\n\nLANGUAGE: apache\nCODE:\n```\n<Location /guacamole/>\n    Order allow,deny\n    Allow from all\n    ProxyPass http://HOSTNAME:8080/guacamole/ flushpackets=on\n    ProxyPassReverse http://HOSTNAME:8080/guacamole/\n</Location>\n\n<Location /guacamole/websocket-tunnel>\n    Order allow,deny\n    Allow from all\n    ProxyPass ws://HOSTNAME:8080/guacamole/websocket-tunnel\n    ProxyPassReverse ws://HOSTNAME:8080/guacamole/websocket-tunnel\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Template\nDESCRIPTION: Initial HTML template serving as a placeholder for the Guacamole client interface. Will be enhanced later with Guacamole-specific functionality.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE HTML>\n<html>\n\n    <head>\n        <title>Guacamole Tutorial</title>\n    </head>\n\n    <body>\n        <p>Hello World</p>\n    </body>\n\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Project for Guacamole Application\nDESCRIPTION: Basic Maven POM configuration file that sets up a web application project for Guacamole. Defines project metadata, packaging type as WAR, and basic encoding properties.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 \n                             http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.apache.guacamole</groupId>\n    <artifactId>guacamole-tutorial</artifactId>\n    <packaging>war</packaging>\n    <version>1.6.0</version>\n    <name>guacamole-tutorial</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n</project>\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven POM for Guacamole Listener Extension\nDESCRIPTION: Maven POM configuration for a Guacamole listener extension that defines the project structure, dependencies on guacamole-ext API, and SLF4J for logging. It specifies Java 8 as the target version and sets up the proper project metadata.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/event-listeners.md#2025-04-11_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n                        http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.apache.guacamole</groupId>\n    <artifactId>guacamole-listener-tutorial</artifactId>\n    <packaging>jar</packaging>\n    <version>1.6.0</version>\n    <name>guacamole-listener-tutorial</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <build>\n        <plugins>\n\n            <!-- Written for Java 8 -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.3</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n\n        </plugins>\n    </build>\n\n    <dependencies>\n\n        <!-- Guacamole Extension API -->\n        <dependency>\n            <groupId>org.apache.guacamole</groupId>\n            <artifactId>guacamole-ext</artifactId>\n            <version>1.6.0</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <!-- Slf4j API -->\n        <!-- This is needed only if your listener wants to \n                write to the Guacamole web application log -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>1.7.7</version>\n            <scope>provided</scope>\n        </dependency>\n\n    </dependencies>\n\n</project>\n```\n\n----------------------------------------\n\nTITLE: Converting Guacamole Recordings to Video using guacenc\nDESCRIPTION: Example of using the guacenc utility to convert a Guacamole session recording to an M4V video file. The command takes the path to the recording as its argument and produces a video file with the same name.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_32\n\nLANGUAGE: console\nCODE:\n```\n$ guacenc /path/to/recording/NAME\n```\n\n----------------------------------------\n\nTITLE: Message Instruction Codes in Guacamole Protocol\nDESCRIPTION: Defines message codes used for user join/leave notifications in the protocol. These codes are used with the 'msg' instruction and include user identification information.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/protocol-reference.rst#2025-04-11_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n1 (USER_JOINED)\n    Notifies the owner of a connection that another user has joined the\n    connection. This message is expected to include two additional\n    arguments: the guacd-generated UUID of the user who is joining the\n    connection, and the arbitrary name of the user provided by the\n    client during the handshake.\n\n2 (USER_LEFT)\n    Notifies the owner of a connection that another user has left the\n    connection. This message is expected to include two additional\n    arguments: the guacd-generated UUID of the user who is leaving the\n    connection, and the arbitrary name of the user provided by the\n    client during the handshake.\n```\n\n----------------------------------------\n\nTITLE: WebKit-Limited Compositing Operations\nDESCRIPTION: Lists compositing operations that may have limited functionality in WebKit browsers due to transparency handling constraints.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\nB in A (0x01)\nA in B (0x04)\nA out B (0x08)\nB atop A (0x09)\nA (0x0C)\n```\n\n----------------------------------------\n\nTITLE: Running Guacamole with LDAP Authentication in Docker\nDESCRIPTION: Example Docker command for running Guacamole with LDAP authentication. This shows how to use the LDAP_HOSTNAME environment variable to connect to an LDAP server at 172.17.42.1, while linking to a guacd container.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-docker.md#2025-04-11_snippet_11\n\nLANGUAGE: console\nCODE:\n```\n$ docker run --name some-guacamole \\\n    --link some-guacd:guacd        \\\n    -e LDAP_HOSTNAME=172.17.42.1   \\\n    ...\n    -d -p 8080:8080 guacamole/guacamole\n```\n\n----------------------------------------\n\nTITLE: Checking PulseAudio Port Status\nDESCRIPTION: Console command to verify PulseAudio is listening on port 4713 for incoming TCP connections using netstat.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_14\n\nLANGUAGE: console\nCODE:\n```\n$ netstat -ln | grep 4713\ntcp        0      0 0.0.0.0:4713            0.0.0.0:*               LISTEN\ntcp6       0      0 :::4713                 :::*                    LISTEN\n$\n```\n\n----------------------------------------\n\nTITLE: Illustrating Guacamole Protocol Element Format\nDESCRIPTION: This snippet demonstrates how each element in a Guacamole protocol instruction is prefixed with its length and separated by a period.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-protocol.md#2025-04-11_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nLENGTH.VALUE\n```\n\n----------------------------------------\n\nTITLE: Changing Guacamole Path in Apache Configuration\nDESCRIPTION: This Apache configuration shows how to change the path under which Guacamole is served, updating both the standard HTTP and WebSocket proxy configurations.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_9\n\nLANGUAGE: apache\nCODE:\n```\n<Location /new-path/>\n    Order allow,deny\n    Allow from all\n    ProxyPass http://HOSTNAME:8080/new-path/ flushpackets=on\n    ProxyPassReverse http://HOSTNAME:8080/new-path/\n</Location>\n\n<Location /new-path/websocket-tunnel>\n    Order allow,deny\n    Allow from all\n    ProxyPass ws://HOSTNAME:8080/new-path/websocket-tunnel\n    ProxyPassReverse ws://HOSTNAME:8080/new-path/websocket-tunnel\n</Location>\n```\n\n----------------------------------------\n\nTITLE: Disabling Access Window Enforcement for Active Sessions (SQL Server)\nDESCRIPTION: Configuration property to disable the enforcement of access windows for active sessions in SQL Server. This allows users to continue their sessions even after their access window has expired.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_36\n\nLANGUAGE: properties\nCODE:\n```\nsqlserver-enforce-access-windows-for-active-sessions: false\n```\n\n----------------------------------------\n\nTITLE: Properties File Configuration Example\nDESCRIPTION: Example showing required property format in guacamole.properties file. Missing required properties will result in configuration errors.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/troubleshooting.md#2025-04-11_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\nrequired.property=value\n```\n\n----------------------------------------\n\nTITLE: Examining guacd Syslog Entries\nDESCRIPTION: Example of typical syslog entries from guacd showing its startup process, including binding to ports and passing control between processes. This log shows guacd successfully starting and listening on port 4823.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/troubleshooting.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nguacd[19663]: Guacamole proxy daemon (guacd) version 0.7.0\nguacd[19663]: Unable to bind socket to host ::1, port 4823: Address family\n              not supported by protocol\nguacd[19663]: Successfully bound socket to host 127.0.0.1, port 4823\nguacd[19663]: Exiting and passing control to PID 19665\nguacd[19665]: Exiting and passing control to PID 19666\nguacd[19666]: Listening on host 127.0.0.1, port 4823\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Application Deployment Descriptor\nDESCRIPTION: Web application deployment descriptor (web.xml) that defines basic configuration including welcome file settings. Required for Java EE standard WAR file building.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<web-app version=\"2.5\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee \n                        http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\">\n\n    <!-- Basic config -->\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n    </welcome-file-list>\n\n</web-app>\n```\n\n----------------------------------------\n\nTITLE: Converting Guacamole Recordings to Text Logs using guaclog\nDESCRIPTION: Example of using the guaclog utility to interpret key events from a Guacamole session recording. The command converts input events to a human-readable text file with the same name and a .txt extension.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_34\n\nLANGUAGE: console\nCODE:\n```\n$ guaclog /path/to/recording/NAME\nguaclog: INFO: Guacamole input log interpreter (guaclog) version 1.6.0\nguaclog: INFO: 1 input file(s) provided.\nguaclog: INFO: Writing input events from \"/path/to/recording/NAME\" to \"/path/to/recording/NAME.txt\" ...\nguaclog: INFO: All files interpreted successfully.\n$\n```\n\n----------------------------------------\n\nTITLE: Replaying Typescript Recordings with scriptreplay\nDESCRIPTION: Command for replaying a typescript recording created by Guacamole using the standard UNIX scriptreplay utility. It requires both the timing file and the raw text data file as arguments.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/configuring-guacamole.md#2025-04-11_snippet_35\n\nLANGUAGE: console\nCODE:\n```\n$ scriptreplay NAME.timing NAME\n```\n\n----------------------------------------\n\nTITLE: Setting Password Age Limits for PostgreSQL in Guacamole\nDESCRIPTION: Configures minimum and maximum password age in days for PostgreSQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_14\n\nLANGUAGE: properties\nCODE:\n```\npostgresql-user-password-min-age: 7\npostgresql-user-password-max-age: 90\n```\n\n----------------------------------------\n\nTITLE: Running Docker Container for Guacamole Manual\nDESCRIPTION: Docker command to run the container with the Guacamole manual, mapping port 8080 on the host to port 80 in the container. The manual can then be accessed via http://localhost:8080 in a web browser.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/README.md#2025-04-11_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ docker container run -p 8080:80 guacamole/manual\n```\n\n----------------------------------------\n\nTITLE: Creating a Minimal Extension Manifest in JSON\nDESCRIPTION: The minimal required format for the guac-manifest.json file that defines a Guacamole extension. This example includes only the required properties: guacamoleVersion, name, and namespace.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"guacamoleVersion\" : \"1.6.0\",\n    \"name\" : \"My Extension\",\n    \"namespace\" : \"my-extension\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Password History for MySQL in Guacamole\nDESCRIPTION: Sets the number of previous passwords to remember and prevent reuse for MySQL authentication in Guacamole.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/jdbc-auth.md#2025-04-11_snippet_16\n\nLANGUAGE: properties\nCODE:\n```\nmysql-user-password-history-size: 6\n```\n\n----------------------------------------\n\nTITLE: POST Request Example for Submitting Authentication Data to Guacamole\nDESCRIPTION: An example curl command demonstrating how to POST the encrypted JSON data to the Guacamole API endpoint for authentication. The data is submitted as a URL-encoded parameter named 'data'.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/json-auth.md#2025-04-11_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ curl --data-urlencode \"data=BASE64_RESULT\" http://localhost:8080/guacamole/api/tokens\n```\n\n----------------------------------------\n\nTITLE: Disabling Apache Logging for Guacamole Tunnel Requests\nDESCRIPTION: This Apache configuration snippet demonstrates how to disable logging for Guacamole tunnel requests to prevent bloated access logs.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/reverse-proxy.md#2025-04-11_snippet_10\n\nLANGUAGE: apache\nCODE:\n```\nSetEnvIf Request_URI \"^/guacamole/tunnel\" dontlog\nCustomLog  /var/log/apache2/guac.log common env=!dontlog\n```\n\n----------------------------------------\n\nTITLE: Installing Required Python Packages for Building Guacamole Manual\nDESCRIPTION: Command for installing the necessary Python packages using pip to build the Guacamole manual. Required packages include Sphinx, sphinx-rtd-theme, sphinx-inline-tabs, and myst-parser.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ pip install sphinx sphinx-rtd-theme sphinx-inline-tabs myst-parser\n```\n\n----------------------------------------\n\nTITLE: RST Table of Contents Structure\nDESCRIPTION: Sphinx/RST markup defining the table of contents structure for the Guacamole manual, organized into major sections including Overview, User's Guide, Developer's Guide, and Appendices.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/index.md#2025-04-11_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n:::{toctree}\n:caption: Overview\n:name: overview\n:maxdepth: 1\n\nintroduction\n:::\n```\n\nLANGUAGE: rst\nCODE:\n```\n:::{toctree}\n:caption: User's Guide\n:name: users-guide\n:maxdepth: 1\n\nguacamole-architecture\ninstalling-guacamole\nguacamole-docker\nreverse-proxy\nconfiguring-guacamole\njdbc-auth\nldap-auth\nvault\nduo-auth\ntotp-auth\nheader-auth\njson-auth\ncas-auth\nopenid-auth\nsaml-auth\nradius-auth\nadhoc-connections\nauth-ban\nauth-restrict\nusing-guacamole\nrecording-playback\nadministration\nbatch-import\ntroubleshooting\n:::\n```\n\nLANGUAGE: rst\nCODE:\n```\n:::{toctree}\n:caption: Developer's Guide\n:name: developers-guide\n:maxdepth: 1\n\nguacamole-protocol\nlibguac\nguacamole-common\nguacamole-common-js\nguacamole-ext\ncustom-protocols\ncustom-auth\nevent-listeners\nwriting-you-own-guacamole-app\n:::\n```\n\nLANGUAGE: rst\nCODE:\n```\n:::{toctree}\n:caption: Appendices\n:name: appendices\n:maxdepth: 1\n\nprotocol-reference\n:::\n```\n\n----------------------------------------\n\nTITLE: HTML Patching in Guacamole Extensions\nDESCRIPTION: Example of HTML meta tag syntax used to modify existing HTML in the Guacamole interface. This technique uses special meta tags to specify how and where HTML should be inserted or modified.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/guacamole-ext.md#2025-04-11_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"NAME\" content=\"SELECTOR\">\n```\n\n----------------------------------------\n\nTITLE: Maven Build Command Output\nDESCRIPTION: Example console output showing successful Maven build process for the Guacamole web application skeleton.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/src/writing-you-own-guacamole-app.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ mvn package\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Building guacamole-tutorial\n[INFO]    task-segment: [package]\n[INFO] ------------------------------------------------------------------------\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESSFUL\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 4 seconds\n[INFO] Finished at: Fri Jan 11 13:04:11 PST 2013\n[INFO] Final Memory: 18M/128M\n[INFO] ------------------------------------------------------------------------\n$\n```\n\n----------------------------------------\n\nTITLE: Building the Guacamole Manual with make\nDESCRIPTION: Simple make command to build the Guacamole manual using Sphinx. After execution, the HTML version of the manual will be available in the build/html/ directory.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/README.md#2025-04-11_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ make\n```\n\n----------------------------------------\n\nTITLE: Installing Required Python Packages Using pip3\nDESCRIPTION: Alternative command using pip3 for systems where Python 3's pip is explicitly named. Installs the same required packages (Sphinx, sphinx-rtd-theme, sphinx-inline-tabs, and myst-parser).\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/README.md#2025-04-11_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ pip3 install sphinx sphinx-rtd-theme sphinx-inline-tabs myst-parser\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Guacamole Manual\nDESCRIPTION: Docker command for building an Apache httpd image containing the Guacamole user manual. The image is tagged as guacamole/manual and built from the Dockerfile in the current directory.\nSOURCE: https://github.com/apache/guacamole-manual/blob/main/README.md#2025-04-11_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ docker image build -t guacamole/manual .\n```"
  }
]
[
  {
    "owner": "pythagora-io",
    "repo": "gpt-pilot",
    "content": "TITLE: Running GPT Pilot\nDESCRIPTION: This command starts the GPT Pilot application from the command line.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython main.py\n```\n\n----------------------------------------\n\nTITLE: Installing GPT Pilot Dependencies with pip\nDESCRIPTION: This command installs the required Python dependencies for GPT Pilot using pip and the requirements.txt file.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Creating and Activating Python Virtual Environment\nDESCRIPTION: These commands create a Python virtual environment and activate it for use with GPT Pilot.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv venv\nsource venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Loading and Continuing a GPT Pilot Project\nDESCRIPTION: This command loads and continues a GPT Pilot project from the latest step or a specific step.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npython main.py --project <app_id>\npython main.py --project <app_id> --step <step>\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements List\nDESCRIPTION: Comprehensive list of Python package dependencies with pinned versions required for the gpt-pilot project. Includes core packages like aiosqlite, openai, pydantic, sqlalchemy and various utility packages.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\naiosqlite==0.20.0\nalembic==1.13.2\nannotated-types==0.7.0\nanthropic==0.39.0\nanyio==4.7.0\ncertifi==2024.8.30\ncharset-normalizer==3.4.0\ndistro==1.9.0\ngreenlet==3.1.1\ngroq==0.6.0\nh11==0.14.0\nhttpcore==1.0.7\nhttpx==0.27.0\nidna==3.10\nJinja2==3.1.4\njiter==0.8.0\njsonref==1.1.0\nMako==1.3.7\nMarkupSafe==3.0.2\nopenai==1.40.6\nprompt-toolkit==3.0.48\npsutil==5.9.8\npydantic-core==2.20.1\npydantic==2.8.2\npython-dotenv==1.0.1\nregex==2024.11.6\nrequests==2.32.3\nsniffio==1.3.1\nsqlalchemy==2.0.32\nsqlalchemy[asyncio]==2.0.32\ntenacity==9.0.0\ntiktoken==0.8.0\ntqdm==4.67.1\ntyping-extensions==4.12.2\nurllib3==2.2.3\nwcwidth==0.2.13\n```\n\n----------------------------------------\n\nTITLE: Displaying GPT Pilot Help Information\nDESCRIPTION: This command displays all available command-line options for GPT Pilot.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npython main.py --help\n```\n\n----------------------------------------\n\nTITLE: Listing GPT Pilot Projects\nDESCRIPTION: This command lists all created projects (apps) in GPT Pilot.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython main.py --list\n```\n\n----------------------------------------\n\nTITLE: Deleting a GPT Pilot Project\nDESCRIPTION: This command deletes a GPT Pilot project with the specified app_id.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npython main.py --delete <app_id>\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL Support for GPT Pilot\nDESCRIPTION: This command installs additional Python packages required for PostgreSQL support in GPT Pilot.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npip install asyncpg psycopg2\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Project\nDESCRIPTION: Command to install the required npm packages for the project.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Node.js Project\nDESCRIPTION: Command to run the server in development mode with pretty-printing and hot-reload.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting Production Server for Node.js Project\nDESCRIPTION: Command to run the application in production mode, with logs sent to standard output in JSON format.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Database Migration with Prisma (Conditional)\nDESCRIPTION: Command to create the initial database migration using Prisma ORM. This step is only applicable if the project uses an SQL database.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx prisma migrate dev --name initial\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Node.js Project\nDESCRIPTION: Command to execute the project's test suite.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Node.js Project\nDESCRIPTION: Command to build a Docker image for the project, tagging it with the project folder name.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t {{ project_folder }} .\n```\n\n----------------------------------------\n\nTITLE: Running Docker Container for Node.js Project\nDESCRIPTION: Command to run the Docker container, exposing the internal port and using the environment file.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --env-file .env --P {{ project_folder }}\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Queueing Background Tasks with Bull in Node.js\nDESCRIPTION: Example of how to queue a background task using Bull task queue in the application code. This is only applicable if the project uses background tasks.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { tasks } from \"./src/utils/queue.js\";\nconst result = await tasks.someFunction(...);\n```\n\n----------------------------------------\n\nTITLE: Running Background Task Worker for Node.js Project\nDESCRIPTION: Command to start the worker process that executes queued background tasks. This is only applicable if the project uses background tasks.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run worker\n```\n\n----------------------------------------\n\nTITLE: Running Custom Command in Docker Container for Node.js Project\nDESCRIPTION: Example of running a custom command (in this case, starting the Node shell) using the Docker image.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/core/templates/tree/react_express/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --env-file .env {{ project_folder }} npm run shell\n```\n\n----------------------------------------\n\nTITLE: Basic Jinja2 Template with Conditionals\nDESCRIPTION: Template for rendering a greeting message with optional age display. Uses variable interpolation for name and age, with a conditional statement to only show age if greater than 0.\nSOURCE: https://github.com/pythagora-io/gpt-pilot/blob/main/tests/llm/prompts/test.txt#2025-04-22_snippet_0\n\nLANGUAGE: jinja2\nCODE:\n```\nhello {{ name }},\n{% if age > 0 %}\nyou are {{ age }} bn years old\n{% endif %}\n```"
  }
]
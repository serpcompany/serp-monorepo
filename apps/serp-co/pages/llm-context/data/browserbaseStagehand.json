[
  {
    "owner": "browserbase",
    "repo": "stagehand",
    "content": "TITLE: Browser Automation with Stagehand and Playwright\nDESCRIPTION: Example demonstrating core Stagehand functionality including page navigation, AI actions, agent execution, and data extraction using Playwright and OpenAI integration.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Use Playwright functions on the page object\nconst page = stagehand.page;\nawait page.goto(\"https://github.com/browserbase\");\n\n// Use act() to execute individual actions\nawait page.act(\"click on the stagehand repo\");\n\n// Use Computer Use agents for larger actions\nconst agent = stagehand.agent({\n    provider: \"openai\",\n    model: \"computer-use-preview\",\n});\nawait agent.execute(\"Get to the latest PR\");\n\n// Use extract() to read data from the page\nconst { author, title } = await page.extract({\n  instruction: \"extract the author and title of the PR\",\n  schema: z.object({\n    author: z.string().describe(\"The username of the PR author\"),\n    title: z.string().describe(\"The title of the PR\"),\n  }),\n});\n```\n\n----------------------------------------\n\nTITLE: Example of targeted extraction with selector parameter in TypeScript\nDESCRIPTION: Demonstrates how to use the textExtract feature with a selector parameter to limit DOM processing for targeted extraction, which reduces token usage and improves performance.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst weatherData = await stagehand.page.extract({\n  instruction: \"extract the weather data for Sun, Feb 23 at 11PM\",\n  schema: z.object({\n    temperature: z.string(),\n    weather_description: z.string(),\n    wind: z.string(),\n    humidity: z.string(),\n    barometer: z.string(),\n    visibility: z.string(),\n  }),\n  modelName,\n  useTextExtract,\n  selector: xpath, // xpath of the element to extract from\n});\n```\n\n----------------------------------------\n\nTITLE: Logging Different Levels of Messages in Stagehand\nDESCRIPTION: Demonstrates how to log error, info, and debug messages using the Stagehand logging system. Includes examples of setting log levels and adding auxiliary information.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Log an error\nstagehand.log({\n  message: \"An error occurred\",\n  level: 0,\n  category: \"error\",\n});\n\n// Log info (level 1 is default)\nstagehand.log({\n  message: \"Operation completed\",\n  category: \"operation\",\n});\n\n// Log debug information\nstagehand.log({\n  message: \"Debug details\",\n  level: 2,\n  category: \"debug\",\n  auxiliary: {\n    details: {\n      value: JSON.stringify({ key: \"value\" }),\n      type: \"object\",\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Stagehand with Verbose Logging in TypeScript\nDESCRIPTION: Creates a new Stagehand instance with verbose logging set to show all logs up to debug level.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst stagehand = new Stagehand({\n  verbose: 2, // Show all logs up to debug level\n  // other options...\n});\n```\n\n----------------------------------------\n\nTITLE: Installing and Building Stagehand\nDESCRIPTION: Commands for installing Stagehand via npx create-browser-app or building from source including dependency installation and environment setup.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-browser-app\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/browserbase/stagehand.git\ncd stagehand\nnpm install\nnpx playwright install\nnpm run build\nnpm run example # run the blank script at ./examples/example.ts\n```\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\nnano .env # Edit the .env file to add API keys\n```\n\n----------------------------------------\n\nTITLE: Enabling Inference Logging to File in Stagehand\nDESCRIPTION: Shows how to enable detailed logging of inference operations (act, extract, observe) to a file in the Stagehand system.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Enable inference logging to file\nconst stagehand = new Stagehand({\n  logInferenceToFile: true,\n  // other options...\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Pino Logger in Stagehand\nDESCRIPTION: Shows how to use Pino with custom configuration in Stagehand, creating a custom configured logger and passing it to the Stagehand instance.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { StagehandLogger } from \"@browserbasehq/stagehand/lib/logger\";\n\n// Create a custom configured logger\nconst customLogger = new StagehandLogger({\n  pretty: true,\n  level: \"debug\",\n  // Other Pino options...\n});\n\n// Pass it to Stagehand\nconst stagehand = new Stagehand({\n  logger: (logLine) => customLogger.log(logLine),\n  // other options...\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Logger in Stagehand\nDESCRIPTION: Demonstrates how to provide a custom logger when creating a Stagehand instance, allowing for custom logging logic.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst stagehand = new Stagehand({\n  logger: (logLine) => {\n    // Your custom logging logic here\n    console.log(`[${logLine.category}] ${logLine.message}`);\n  },\n  // other options...\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Standalone StagehandLogger Instance\nDESCRIPTION: Demonstrates how to create and use a standalone StagehandLogger instance for use in applications outside of Stagehand.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { StagehandLogger } from \"@browserbasehq/stagehand/lib/logger\";\n\nconst logger = new StagehandLogger({\n  pretty: true,\n  level: \"debug\",\n});\n\nlogger.info(\"Information message\");\nlogger.debug(\"Debug message\", { details: \"some data\" });\nlogger.error(\"Error message\", { error: \"details\" });\n```\n\n----------------------------------------\n\nTITLE: Publishing Package with Changeset\nDESCRIPTION: Command to publish the new version to NPM using changesets, which also creates a git tag for the release.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpx changeset publish\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Output to File in Stagehand\nDESCRIPTION: Shows how to direct logs to a file or other destination using the StagehandLogger, creating a file stream for log output.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport fs from \"fs\";\nimport { StagehandLogger } from \"@browserbasehq/stagehand/lib/logger\";\n\nconst fileStream = fs.createWriteStream(\"./logs/application.log\", {\n  flags: \"a\",\n});\n\nconst logger = new StagehandLogger({\n  destination: fileStream,\n});\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes and Tags to GitHub\nDESCRIPTION: Git command to push both the version commit and the newly created tag to the GitHub repository.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngit push --follow-tags\n```\n\n----------------------------------------\n\nTITLE: Running Changeset Version Command for Package Updates\nDESCRIPTION: Command to consume changesets and update the changelog and package.json with new version numbers based on the changes made.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx changeset version\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Building Package\nDESCRIPTION: Commands to reinstall dependencies and build the package artifacts for release.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install && npm run build\n```\n\n----------------------------------------\n\nTITLE: Committing Version Changes\nDESCRIPTION: Git command to commit all the version-related file changes with a standardized commit message.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngit commit -am 'Version Packages'\n```\n\n----------------------------------------\n\nTITLE: Updating Package Lock File\nDESCRIPTION: Command to update the package-lock.json file to match the version changes made to package.json.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cleaning Working Directory Before Build\nDESCRIPTION: Git clean command to remove build artifacts and dependencies while preserving .env file, ensuring a clean state before building the release package.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n% git clean -fxd -e .env\nRemoving dist/\nRemoving lib/dom/build/\nRemoving node_modules/\n```\n\n----------------------------------------\n\nTITLE: Checking Changed Files After Versioning\nDESCRIPTION: Git command to verify which files were modified by the changeset version command, typically showing changes to CHANGELOG.md and package.json.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n% git status --short\n M CHANGELOG.md\n M package.json\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: A series of changelog entries documenting various updates to the Stagehand browser automation library, including bug fixes, new features, and improvements.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- [#506](https://github.com/browserbase/stagehand/pull/506) [`e521645`](https://github.com/browserbase/stagehand/commit/e5216455ce3fc2a4f4f7aa5614ecc92354eb670c) Thanks [@miguelg719](https://github.com/miguelg719)! - fixing 5s timeout on actHandler\n\n- [#535](https://github.com/browserbase/stagehand/pull/535) [`3782054`](https://github.com/browserbase/stagehand/commit/3782054734dcd0346f84003ddd8e0e484b379459) Thanks [@miguelg719](https://github.com/miguelg719)! - Adding backwards compatibility to new act->observe pipeline by accepting actOptions\n\n- [#508](https://github.com/browserbase/stagehand/pull/508) [`270f666`](https://github.com/browserbase/stagehand/commit/270f6669f1638f52fd5cd3f133f76446ced6ef9f) Thanks [@miguelg719](https://github.com/miguelg719)! - Fixed stagehand to support multiple pages with an enhanced context\n```\n\n----------------------------------------\n\nTITLE: Disabling Pino Logger in Stagehand\nDESCRIPTION: Demonstrates how to disable the built-in Pino logger and handle all logging manually in Stagehand.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/logging.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { StagehandLogger } from \"@browserbasehq/stagehand/lib/logger\";\n\nconst logger = new StagehandLogger(\n  {\n    usePino: false,\n  },\n  (logLine) => {\n    // Your custom logging logic\n    console.log(`[${logLine.level}] ${logLine.message}`);\n  },\n);\n```\n\n----------------------------------------\n\nTITLE: Checking Files After Lock File Update\nDESCRIPTION: Git command showing the status after updating the package-lock.json file, confirming changes to changelog, package-lock.json, and package.json.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n% git status --short\n M CHANGELOG.md\n M package-lock.json\n M package.json\n```\n\n----------------------------------------\n\nTITLE: Showing Version Change in package.json\nDESCRIPTION: Diff showing how the version number is updated in package.json after running the changeset version command.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n  \"name\": \"@browserbasehq/stagehand\",\n-  \"version\": \"1.3.0\",\n+  \"version\": \"1.3.1\",\n```\n\n----------------------------------------\n\nTITLE: Showing Version Changes in package-lock.json\nDESCRIPTION: Diff showing how the version number is updated in multiple places within the package-lock.json file.\nSOURCE: https://github.com/browserbase/stagehand/blob/main/docs/release.md#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n {\n   \"name\": \"@browserbasehq/stagehand\",\n-  \"version\": \"1.3.0\",\n+  \"version\": \"1.3.1\",\n   \"lockfileVersion\": 3,\n   \"requires\": true,\n   \"packages\": {\n     \"\": {\n       \"name\": \"@browserbasehq/stagehand\",\n-      \"version\": \"1.3.0\",\n+      \"version\": \"1.3.1\",\n```"
  }
]
[
  {
    "owner": "storybookjs",
    "repo": "web",
    "content": "TITLE: Configuring Theme Provider with Multiple Themes in Storybook\nDESCRIPTION: Full configuration for styled-components theme support in Storybook, including multiple themes (light and dark) and global styles. This enables theme switching in the Storybook toolbar.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/styled-components.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.jsx\n\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { withThemeFromJSXProvider } from '@storybook/addon-themes';\n\nimport { lightTheme, darkTheme } from '../src/themes';\n\n/* snipped for brevity */\n\nexport const decorators = [\n  withThemeFromJSXProvider({\n  themes: {\n    light: lightTheme,\n    dark: darkTheme,\n  }\n  defaultTheme: 'light',\n  Provider: ThemeProvider,\n  GlobalStyles,\n})];\n```\n\n----------------------------------------\n\nTITLE: Implementing Theme Switching with Emotion in Storybook\nDESCRIPTION: Complete configuration for .storybook/preview.jsx that sets up theme switching between light and dark themes using Emotion's ThemeProvider. This configuration provides multiple themes and automatically adds a theme selector to the Storybook toolbar.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@emotion/styled.mdx#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n// .storybook/preview.jsx\n\nimport { withThemeFromJSXProvider } from '@storybook/addon-themes';\nimport { Global, css, ThemeProvider } from '@emotion/react';\n\nimport { lightTheme, darkTheme } from '../src/themes';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      body {\n        font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      }\n    `}\n  />\n);\n\nexport const decorators = [\n  withThemeFromJSXProvider({\n  themes: {\n    light: lightTheme,\n    dark: darkTheme,\n  }\n  defaultTheme: 'light',\n  Provider: ThemeProvider,\n  GlobalStyles,\n})];\n```\n\n----------------------------------------\n\nTITLE: Implementing Theme Switching by Class Name\nDESCRIPTION: Adding the withThemeByClassName decorator to Storybook to enable toggling between light and dark themes using CSS classes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_6\n\nLANGUAGE: js\nCODE:\n```\n// .storybook/preview.js\nimport { withThemeByClassName } from '@storybook/addon-themes';\n\n/* snipped for brevity */\n\nexport const decorators = [\n  withThemeByClassName({\n    themes: {\n      light: 'light',\n      dark: 'dark',\n    },\n    defaultTheme: 'light',\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Initializing i18next instance in React\nDESCRIPTION: This snippet shows how to set up an i18next instance in a React app. It uses the HTTP backend for lazy loading translations and a language detector to automatically detect the user's language.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// src/i18n.js\n\nimport i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n  .use(Backend) // lazy loads translations from /public/locales\n  .use(LanguageDetector) // detect user language\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n```\n\n----------------------------------------\n\nTITLE: Implementing Theme Switching by Data Attribute\nDESCRIPTION: Adding the withThemeByDataAttribute decorator to Storybook to enable toggling between light and dark themes using data attributes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_7\n\nLANGUAGE: js\nCODE:\n```\n// .storybook/preview.js\nimport { withThemeByDataAttribute } from '@storybook/addon-themes';\n\n/* snipped for brevity */\n\nexport const decorators = [\n  withThemeByDataAttribute({\n    themes: {\n      light: 'light',\n      dark: 'dark',\n    },\n    defaultTheme: 'light',\n    attributeName: 'data-mode',\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Adding a theme switcher tool to Storybook\nDESCRIPTION: Configuration to add a theme switcher tool to Storybook's toolbar. This allows switching between light and dark themes for all stories.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nexport const globalTypes = {\n  theme: {\n    name: 'Theme',\n    description: 'Global theme for components',\n    toolbar: {\n      icon: 'paintbrush',\n      // Array of plain string values or MenuItem shape\n      items: [\n        { value: 'light', title: 'Light', left: 'ðŸŒž' },\n        { value: 'dark', title: 'Dark', left: 'ðŸŒ›' },\n      ],\n      // Change title based on selected value\n      dynamicTitle: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Enabling experimental SWC support in Storybook for Next.js\nDESCRIPTION: Configuration update to enable experimental SWC support in Storybook for Next.js projects that already use SWC (e.g., version 14 or higher). This feature was introduced in Storybook version 7.6.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/main.js\n\nexport default {\n  // ...\n  framework: {\n    name: '@storybook/nextjs',\n    options: {\n      builder: {\n        useSWC: true, // Enables SWC support\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Wrapping Storybook stories with i18next provider\nDESCRIPTION: This code creates a decorator to wrap Storybook stories with the I18nextProvider component. It also handles suspense for components that are still loading translations.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n// .storybook/preview.jsx\n\nimport React, { Suspense } from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../src/i18n';\n\n// Wrap your stories in the I18nextProvider component\nconst withI18next = (Story) => {\n  return (\n    // This catches the suspense from components not yet ready (still loading translations)\n    // Alternative: set useSuspense to false on i18next.options.react when initializing i18next\n    <Suspense fallback={<div>loading translations...</div>}>\n      <I18nextProvider i18n={i18n}>\n        <Story />\n      </I18nextProvider>\n    </Suspense>\n  );\n};\n\n// export decorators for storybook to wrap your stories in\nexport const decorators = [withI18next];\n```\n\n----------------------------------------\n\nTITLE: Adding locale switcher to Storybook toolbar\nDESCRIPTION: This snippet demonstrates how to add a locale switcher to the Storybook toolbar. It defines a global variable 'locale' with a list of supported languages to choose from.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.jsx\n\n/* Snipped for brevity */\n\n// Create a global variable called locale in storybook\n// and add a menu in the toolbar to change your locale\nexport const globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    toolbar: {\n      icon: 'globe',\n      items: [\n        { value: 'en', title: 'English' },\n        { value: 'de', title: 'Deutsch' },\n      ],\n      showName: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Registering Vuetify plugins in Storybook preview\nDESCRIPTION: Configuration to register Vuetify plugins in the Storybook preview. This code loads Vuetify's fonts and registers all of its components with Storybook's Vue app.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport { setup } from '@storybook/vue3';\nimport { registerPlugins } from '../src/plugins';\n\nsetup((app) => {\n  // Registers your app's plugins into Storybook\n  registerPlugins(app);\n});\n```\n\n----------------------------------------\n\nTITLE: Applying Vuetify theme decorator in Storybook preview\nDESCRIPTION: Configuration to apply the Vuetify theme decorator to all stories in Storybook. This code registers plugins and sets up the withVuetifyTheme decorator.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport { setup } from '@storybook/vue3';\nimport { registerPlugins } from '../src/plugins';\nimport { withVuetifyTheme } from './withVuetifyTheme.decorator';\n\nsetup((app) => {\n  registerPlugins(app);\n});\n\n/* snipped for brevity */\n\nexport const decorators = [withVuetifyTheme];\n```\n\n----------------------------------------\n\nTITLE: Registering Pinia with Storybook's Vue app instance\nDESCRIPTION: Extended configuration to register Pinia with Storybook's Vue app instance using the setup function. This allows Pinia to be used within Storybook stories.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/pinia.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// .storybook/preview.ts\n\nimport { type Preview, setup }  from '@storybook/vue3';\n\nimport { type App } from 'vue';\n\nimport { createPinia } from 'pinia';\n\nconst pinia = createPinia();\n\nsetup((app: App) => {\n  app.use(pinia);\n});\n\nconst preview: Preview = {\n  parameters: {\n    backgrounds: {\n      default: 'light',\n    },\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Vuetify theme decorator for dynamic theming\nDESCRIPTION: Modified JavaScript file that updates the withVuetifyTheme decorator to pass the selected theme to the StoryWrapper component.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/withVeutifyTheme.decorator.js\n\nimport { h } from 'vue';\nimport StoryWrapper from './StoryWrapper.vue';\n\nexport const DEFAULT_THEME = 'light';\n\nexport const withVuetifyTheme = (storyFn, context) => {\n  // Pull our global theme variable, fallback to DEFAULT_THEME\n  const themeName = context.globals.theme || DEFAULT_THEME;\n  const story = storyFn();\n\n  return () => {\n    return h(\n      StoryWrapper,\n      // give themeName to StoryWrapper as a prop\n      { themeName },\n      {\n        story: () => h(story, { ...context.args }),\n      }\n    );\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Setting up Global Styles with Emotion in Storybook\nDESCRIPTION: Configuration for .storybook/preview.jsx that adds global styles using Emotion's Global component. This example sets up a font family and applies it to all stories using the withThemeFromJSXProvider decorator.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@emotion/styled.mdx#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// .storybook/preview.jsx\n\nimport { withThemeFromJSXProvider } from '@storybook/addon-themes';\nimport { Global, css } from '@emotion/react';\n\nconst GlobalStyles = () => (\n  <Global\n    styles={css`\n      body {\n        font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n      }\n    `}\n  />\n);\n\nexport const decorators = [\n  withThemeFromJSXProvider({\n    GlobalStyles, // Adds your GlobalStyles component to all stories\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Tailwind for Theme Switching\nDESCRIPTION: Updates to the Tailwind configuration file to enable theme switching based on class or data attributes for dark mode support.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_4\n\nLANGUAGE: js\nCODE:\n```\n// tailwind.config.js\n\nmodule.exports = {\n  content: ['./src/**/*.{js,jsx,ts,tsx}'],\n  // Toggle dark-mode based on .dark class or data-mode=\"dark\"\n  darkMode: ['class', '[data-mode=\"dark\"]'],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring theme switcher in Storybook preview\nDESCRIPTION: JavaScript code to configure the theme switcher in Storybook using the withThemeByDataAttribute decorator. This enables switching between light and dark modes for Bootstrap themes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/bootstrap.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport { withThemeByDataAttribute } from '@storybook/addon-themes';\n\n// snipped for brevity\n\nexport const decorators = [\n  withThemeByDataAttribute({\n    themes: {\n      light: 'light',\n      dark: 'dark',\n    },\n    defaultTheme: 'light',\n    attributeName: 'data-bs-theme',\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Setting document direction for right-to-left languages\nDESCRIPTION: This code sets the document direction based on the selected locale. It uses i18next's dir() function and languageChanged event to handle right-to-left languages like Arabic.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.jsx\n\n/* Snipped for brevity */\n\n// When The language changes, set the document direction\ni18n.on('languageChanged', (locale) => {\n  const direction = i18n.dir(locale);\n  document.dir = direction;\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme Provider in Storybook\nDESCRIPTION: JavaScript setup for Material UI theme provider with light and dark themes\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\\n\\nimport { CssBaseline, ThemeProvider } from '@mui/material';\\nimport { withThemeFromJSXProvider } from '@storybook/addon-themes';\\nimport { lightTheme, darkTheme } from '../src/themes.js';\\n\\n/* snipped for brevity */\\n\\nexport const decorators = [\\n  withThemeFromJSXProvider({\\n    themes: {\\n      light: lightTheme,\\n      dark: darkTheme,\\n    },\\n    defaultTheme: 'light',\\n    Provider: ThemeProvider,\\n    GlobalStyles: CssBaseline,\\n  }),\\n];\n```\n\n----------------------------------------\n\nTITLE: Storybook Main Configuration\nDESCRIPTION: TypeScript configuration for Storybook main file including DocGen settings for Material UI props\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// .storybook/main.ts\\n\\nmodule.exports = {\\n  stories: ['../src/**/*.mdx', '../src/**/*.stories.@(js|jsx|ts|tsx)'],\\n  addons: ['@storybook/addon-essentials', '@storybook/addon-styling'],\\n  framework: '@storybook/your-framework',\\n  typescript: {\\n    reactDocgen: 'react-docgen-typescript',\\n    reactDocgenTypescriptOptions: {\\n      compilerOptions: {\\n        allowSyntheticDefaultImports: false,\\n        esModuleInterop: false,\\n      },\\n      shouldExtractLiteralValuesFromEnum: true,\\n      shouldRemoveUndefinedFromOptional: true,\\n      propFilter: (prop) =>\\n        prop.parent\\n          ? !/node_modules\\/(?!@mui)/.test(prop.parent.fileName)\\n          : true,\\n    },\\n  },\\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Storybook main.js for Next.js\nDESCRIPTION: Updates to the Storybook main.js configuration file to use the Next.js framework and remove unnecessary plugins. This change is part of the manual migration process.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/main.js\n\nexport default {\n  // ...\n  framework: {\n    // name: '@storybook/react-webpack5', // Remove this\n    name: '@storybook/nextjs', // Add this\n    options: {},\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating StoryWrapper component for theme support\nDESCRIPTION: Modified Vue component that accepts a themeName prop to apply the selected theme to the v-app component.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_6\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <v-app :theme=\"themeName\">\n    <v-main>\n      <slot name=\"story\"></slot>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  props: {\n    themeName: String,\n  },\n};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Styles in Storybook\nDESCRIPTION: A basic implementation of global styles in Storybook's preview file using styled-components and the themes addon decorator. It sets up a font-family for all stories.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/styled-components.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.jsx\n\nimport { withThemeFromJSXProvider } from '@storybook/addon-themes';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: \"Nunito Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  }\n`;\n\nexport const decorators = [\n  withThemeFromJSXProvider({\n    GlobalStyles, // Adds your GlobalStyle component to all stories\n  }),\n];\n```\n\n----------------------------------------\n\nTITLE: Creating a Vuetify story wrapper component\nDESCRIPTION: Vue component that wraps stories in Vuetify's v-app component. This is necessary to use some of Vuetify's larger layout components like v-app-bar.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<!-- .storybook/StoryWrapper.vue -->\n\n<template>\n  <v-app>\n    <v-main>\n      <slot name=\"story\"></slot>\n    </v-main>\n  </v-app>\n</template>\n\n<script></script>\n```\n\n----------------------------------------\n\nTITLE: Updating decorator to change locale\nDESCRIPTION: This code updates the withI18next decorator to change the locale when a new language is selected in the Storybook toolbar. It uses the useEffect hook to trigger the language change.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n// .storybook/preview.jsx\n\n/* Snipped for brevity */\n\nconst withI18next = (Story, context) => {\n  const { locale } = context.globals;\n\n  // When the locale global changes\n  // Set the new locale in i18n\n  useEffect(() => {\n    i18n.changeLanguage(locale);\n  }, [locale]);\n\n  return (\n    <Suspense fallback={<div>loading translations...</div>}>\n      <I18nextProvider i18n={i18n}>\n        <Story />\n      </I18nextProvider>\n    </Suspense>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Importing Global Sass Styles in Storybook\nDESCRIPTION: JavaScript configuration to import global Sass styles in Storybook's preview file\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/sass.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport '../src/index.scss';\n```\n\n----------------------------------------\n\nTITLE: Enhanced Button Component with MUI Props\nDESCRIPTION: TypeScript implementation of button component extending Material UI ButtonProps\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n// button.component.tsx\\n\\nimport React from 'react';\\nimport {\\n  Button as MuiButton,\\n  ButtonProps as MuiButtonProps,\\n} from '@mui/material';\\n\\nexport interface ButtonProps extends MuiButtonProps {\\n  label: string;\\n}\\n\\nexport const Button = ({ label, ...rest }: ButtonProps) => (\\n  <MuiButton {...rest}>{label}</MuiButton>\\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Arabic to locale switcher\nDESCRIPTION: This snippet shows how to add Arabic as an option in the locale switcher by adding an object to the items array of globalTypes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/react-i18next.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.jsx\n\n/* Snipped for brevity */\n\n// Create a global variable called locale in storybook\n// and add a menu in the toolbar to change your locale\nexport const globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    toolbar: {\n      icon: 'globe',\n      items: [\n        { value: 'en', title: 'English' },\n        { value: 'de', title: 'Deutsch' },\n        { value: 'ar', title: 'Ø¹Ø±Ø¨ÙŠ' },\n      ],\n      showName: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Standalone Angular Material Component\nDESCRIPTION: Example of a standalone NavBar component using Material components with direct imports\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component, Input } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@Component({\n  selector: 'app-nav-bar',\n  standalone: true,\n  imports: [MatToolbarModule, MatButtonModule, MatIconModule],\n  template: `\n    <mat-toolbar color=\"primary\">\n      <span>{{pageTitle}}</span>\n    </mat-toolbar>\n  `,\n  styles: ``,\n})\nexport class NavBarComponent {\n  @Input()\n  pageTitle?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Bootstrap in Storybook preview\nDESCRIPTION: Code snippet for importing Bootstrap CSS and optional JS files in the Storybook preview configuration. It also includes default parameter settings for actions and controls.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/bootstrap.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Only import this if you want to use Bootstrap's\n// JQuery helpers\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\nexport const parameters = {\n  actions: { argTypesRegex: '^on[A-Z].*' },\n  controls: {\n    expanded: true,\n    hideNoControlsWarning: true,\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Pinia in Storybook preview configuration\nDESCRIPTION: Code snippet for initializing Pinia in the Storybook preview configuration file. It imports necessary types and creates a Pinia instance.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/pinia.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// .storybook/preview.ts\n\nimport { type Preview }  from '@storybook/vue3';\n\nimport { createPinia } from 'pinia';\n\nconst pinia = createPinia();\n\nconst preview: Preview = {\n  parameters: {\n    backgrounds: {\n      default: 'light',\n    },\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Button Component Implementation\nDESCRIPTION: TypeScript implementation of a basic button component using Material UI\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n// button.component.tsx\\n\\nimport React from 'react';\\nimport { Button as MuiButton } from '@mui/material';\\n\\nexport interface ButtonProps {\\n  label: string;\\n}\\n\\nexport const Button = ({ label, ...rest }: ButtonProps) => <MuiButton {...rest}>{label}</MuiButton>;\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook in a Next.js project\nDESCRIPTION: Command to add Storybook to an existing Next.js project. This is typically run after setting up a Next.js app following their official setup instructions.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Creating Stories for Module-based Component\nDESCRIPTION: Storybook configuration for a module-based Angular Material component using moduleMetadata decorator\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { NavBarComponent } from './nav-bar.component';\n\nconst meta: Meta<NavBarComponent> = {\n  title: 'Toolbar',\n  decorators: [\n    moduleMetadata({\n      declarations: [NavBarComponent],\n      imports: [MatToolbarModule, MatButtonModule, MatIconModule],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj<NavBarComponent>;\n\nexport const Default: Story = {\n  args: {\n    pageTitle: 'Example Title',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n    <app-nav-bar pageTitle={{pageTitle}}>\n    </app-nav-bar>\n    `,\n  }),\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Vuetify theme decorator for Storybook\nDESCRIPTION: JavaScript file that defines a Storybook decorator to wrap stories in the StoryWrapper component. This decorator allows for theme application to all stories.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/withVeutifyTheme.decorator.js\n\nimport { h } from 'vue';\nimport StoryWrapper from './StoryWrapper.vue';\n\nexport const withVuetifyTheme = (storyFn, context) => {\n  const story = storyFn();\n\n  return () => {\n    return h(\n      StoryWrapper,\n      {}, // Props for StoryWrapper\n      {\n        // Puts your story into StoryWrapper's \"story\" slot with your story args\n        story: () => h(story, { ...context.args }),\n      }\n    );\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Button Component with Selective Props\nDESCRIPTION: TypeScript implementation using Pick utility to select specific Material UI props\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n// button.component.tsx\\n\\nimport React from 'react';\\nimport {\\n  Button as MuiButton,\\n  ButtonProps as MuiButtonProps,\\n} from '@mui/material';\\n\\n// Only include variant, size, and color\\ntype ButtonBaseProps = Pick<MuiButtonProps, 'variant' | 'size' | 'color'>;\\n\\n// Use all except disableRipple\\n// type ButtonBaseProps = Omit<MuiButtonProps, \\\"disableRipple\\\">;\\n\\nexport interface ButtonProps extends ButtonBaseProps {\\n  label: string;\\n}\\n\\nexport const Button = ({ label, ...rest }: ButtonProps) => (\\n  <MuiButton {...rest}>{label}</MuiButton>\\n);\n```\n\n----------------------------------------\n\nTITLE: Importing Global Less Styles in Storybook\nDESCRIPTION: JavaScript configuration to import global Less styles into Storybook's preview file.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/less.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\n\nimport '../src/index.less';\n```\n\n----------------------------------------\n\nTITLE: Configuring Font Imports in Storybook\nDESCRIPTION: JavaScript configuration to import Material UI font CSS files in Storybook preview\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\\n\\nimport '@fontsource/roboto/300.css';\\nimport '@fontsource/roboto/400.css';\\nimport '@fontsource/roboto/500.css';\\nimport '@fontsource/roboto/700.css';\\nimport '@fontsource/material-icons';\n```\n\n----------------------------------------\n\nTITLE: Importing Tailwind CSS in Storybook Preview\nDESCRIPTION: Code snippet showing how to import the Tailwind CSS file in Storybook's preview.js to make Tailwind classes available to all stories.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// .storybook/preview.js\n\nimport '../src/tailwind.css'; // replace with the name of your tailwind css file\n```\n\n----------------------------------------\n\nTITLE: Configuring Angular.json for Material Fonts\nDESCRIPTION: Configuration to include Material fonts and styles in Storybook build settings\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"storybook\": {\n    \"builder\": \"@storybook/angular:start-storybook\",\n    \"options\": {\n      \"configDir\": \".storybook\",\n      \"browserTarget\": \"angular-latest:build\",\n      \"compodoc\": true,\n      \"compodocArgs\": [\"-e\", \"json\", \"-d\", \".\"],\n      \"port\": 6006,\n      \"styles\": [\n        \"@angular/material/prebuilt-themes/indigo-pink.css\",\n        \"@fontsource/roboto/300.css\",\n        \"@fontsource/roboto/400.css\",\n        \"@fontsource/roboto/500.css\",\n        \"@fontsource/roboto/700.css\",\n        \"@fontsource/material-icons\",\n        \"src/styles.scss\"\n      ]\n    }\n  },\n  \"build-storybook\": {\n    \"builder\": \"@storybook/angular:build-storybook\",\n    \"options\": {\n      \"configDir\": \".storybook\",\n      \"browserTarget\": \"angular-latest:build\",\n      \"compodoc\": true,\n      \"compodocArgs\": [\"-e\", \"json\", \"-d\", \".\"],\n      \"styles\": [\n        \"@angular/material/prebuilt-themes/indigo-pink.css\",\n        \"@fontsource/roboto/300.css\",\n        \"@fontsource/roboto/400.css\",\n        \"@fontsource/roboto/500.css\",\n        \"@fontsource/roboto/700.css\",\n        \"@fontsource/material-icons\",\n        \"src/styles.scss\"\n      ],\n      \"outputDir\": \"storybook-static\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Angular.json for Tailwind CSS in Storybook\nDESCRIPTION: Configuration for Angular projects to make sure Tailwind CSS styles are processed with PostCSS and injected into the preview iframe.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsonc\nCODE:\n```\n// angular.json\n{\n \"storybook\": {\n    \"builder\": \"@storybook/angular:start-storybook\",\n    \"options\": {\n      \"browserTarget\": \"my-default-project:build\",\n      \"styles\": [\"src/tailwind.css\"]\n    }\n  } \n}\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook in a Vue 3 project\nDESCRIPTION: Command to add Storybook to an existing Vue 3 project using npm.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/vuetify.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Storybook Preview Configuration\nDESCRIPTION: JavaScript configuration for Storybook preview parameters\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/preview.js\\n\\nexport const parameters = {\\n  actions: { argTypesRegex: '^on[A-Z].*' },\\n  controls: {\\n    expanded: true, // Adds the description and default columns\\n    matchers: {\\n      color: /(background|color)$/i,\\n      date: /Date$/,\\n    },\\n  },\\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Stories for Standalone Component\nDESCRIPTION: Storybook configuration for a standalone Angular Material component\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { Meta, StoryObj } from '@storybook/angular';\nimport { NavBarComponent } from './nav-bar.component';\n\nconst meta: Meta<NavBarComponent> = {\n  title: 'Toolbar',\n  component: NavBarComponent,\n};\n\nexport default meta;\ntype Story = StoryObj<NavBarComponent>;\n\nexport const Default: Story = {\n  args: {\n    pageTitle: 'Example Title',\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Storybook in a New SvelteKit Project\nDESCRIPTION: Command to create Storybook in a SvelteKit project's root directory. This will start the Storybook creation process, automatically detecting the SvelteKit project and installing necessary packages and configurations.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@sveltejs/kit.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server with Yarn\nDESCRIPTION: Command to start the Next.js development server locally using Yarn. Once executed, the application will be accessible at http://localhost:3000 in a web browser.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: Command to start the Next.js development server using Yarn. This will launch the application locally for development and testing purposes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/addon-catalog/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Angular Global Styles\nDESCRIPTION: Angular-specific configuration for including global Sass styles in the project's angular.json file\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/sass.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsonc\nCODE:\n```\n// angular.json\n{\n \"storybook\": {\n    \"builder\": \"@storybook/angular:start-storybook\",\n    \"options\": {\n      \"browserTarget\": \"my-default-project:build\",\n      \"styles\": [\"src/index.scss\"]\n    }\n  } \n}\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Next.js framework\nDESCRIPTION: Command to install the Storybook Next.js framework package as a development dependency using Yarn.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn add -D @storybook/nextjs\n```\n\n----------------------------------------\n\nTITLE: Upgrading Storybook to version 7\nDESCRIPTION: Command to upgrade an existing Storybook installation to version 7, which is required for the Next.js framework integration.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest upgrade\n```\n\n----------------------------------------\n\nTITLE: Removing unnecessary Storybook addons for Next.js\nDESCRIPTION: Configuration update to remove Storybook addons that are no longer necessary when using the Next.js framework. This is part of the manual migration process.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/next.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// .storybook/main.js\n\nexport default {\n  // ...\n  addons: [\n    // ...\n    // These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Storybook Themes addon\nDESCRIPTION: Command to install the @storybook/addon-themes addon which provides theming capabilities for Storybook. This addon allows for theme switching in the Storybook UI.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@emotion/styled.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-themes\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook in a React app\nDESCRIPTION: Command to add Storybook to an existing React application with Emotion. This assumes the user has already set up a React app with Emotion.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@emotion/styled.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Themes Addon\nDESCRIPTION: Command to install and register the @storybook/addon-themes addon\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx storybook@latest add @storybook/addon-themes\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook styling webpack addon\nDESCRIPTION: Command to install and register the Storybook addon for styling with Webpack. This addon helps configure Storybook to work with Vanilla Extract by running a configuration script.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@vanilla-extract/css.mdx#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-styling-webpack\n```\n\n----------------------------------------\n\nTITLE: Installing Vanilla-extract dependencies for Storybook\nDESCRIPTION: Commands to install the necessary Vanilla-extract plugins for either Vite or Webpack build systems. Vite users need the vite-plugin while Webpack users need the webpack-plugin and mini-css-extract-plugin.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@vanilla-extract/css.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# For Vite users\nyarn add -D @vanilla-extract/vite-plugin\n\n# For Webpack users\nyarn add -D @vanilla-extract/webpack-plugin mini-css-extract-plugin\n```\n\n----------------------------------------\n\nTITLE: Adding Storybook Themes Addon\nDESCRIPTION: Command to install and register the @storybook/addon-themes addon which provides theme switching functionality.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/styled-components.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-themes\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook with npm create command\nDESCRIPTION: Command to add Storybook to an existing project that already uses Vanilla-extract. This should be run after following Vanilla-extract's setup instructions.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@vanilla-extract/css.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook addon-themes\nDESCRIPTION: Shell command to install and register the @storybook/addon-themes addon, which enables theme switching functionality in Storybook.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/bootstrap.mdx#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-themes\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Styling Webpack Addon\nDESCRIPTION: Command to install and register the Storybook addon for PostCSS and Webpack integration.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-styling-webpack\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook via npm\nDESCRIPTION: Command to add Storybook to a project using npm. This is a prerequisite step for users who don't have Storybook >=7.0 installed.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/bootstrap.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Material UI Fonts\nDESCRIPTION: Command to install Roboto and Material Icons fonts as dependencies\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @fontsource/roboto @fontsource/material-icons\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Styling Webpack Addon\nDESCRIPTION: Command to add the Storybook styling webpack addon for Sass support\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/sass.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-styling-webpack\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook with npm\nDESCRIPTION: Command to add Storybook to an existing React project with Material UI\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@mui/material.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Upgrading Existing Storybook in a SvelteKit Project\nDESCRIPTION: Command to upgrade an existing Storybook installation to the latest version in a SvelteKit project. This process will prompt for migration to the new @storybook/sveltekit package if using the Vite builder.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@sveltejs/kit.mdx#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest upgrade\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook with npm\nDESCRIPTION: Command to add Storybook to an existing React project that uses styled-components.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/styled-components.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook in a SvelteKit Project\nDESCRIPTION: Command to add Storybook to an existing SvelteKit project. This command initiates the Storybook setup process, which will detect the SvelteKit environment and configure accordingly.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@sveltejs/kit.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook in a Vue 3 project with Pinia\nDESCRIPTION: Command to add Storybook to an existing Vue 3 project that uses Pinia for state management.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/pinia.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook CLI\nDESCRIPTION: Command to create a new Storybook installation using the CLI tool.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/less.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook CLI\nDESCRIPTION: Command to create a new Storybook installation using the CLI tool\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/sass.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Styling Webpack Addon\nDESCRIPTION: Command to install and register the Storybook styling webpack addon for Less support.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/less.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-styling-webpack\n```\n\n----------------------------------------\n\nTITLE: Installing Material Fonts\nDESCRIPTION: Command to install Roboto and Material Icons fonts as local dependencies\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn add @fontsource/roboto @fontsource/material-icons\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook Themes Addon\nDESCRIPTION: Command to install and register the Storybook addon for theme switching between light and dark modes.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpx storybook@latest add @storybook/addon-themes\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook with npm\nDESCRIPTION: Command to add Storybook to an existing React app that already has Tailwind CSS installed.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/tailwindcss.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```\n\n----------------------------------------\n\nTITLE: Running Development Environment in Storybook Web Monorepo\nDESCRIPTION: Turborepo command to run all apps locally in development mode\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpx turbo dev\n```\n\n----------------------------------------\n\nTITLE: Building Applications in Storybook Web Monorepo\nDESCRIPTION: Turborepo command to build all applications locally\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpx turbo build\n```\n\n----------------------------------------\n\nTITLE: Cleaning Storybook Web Monorepo\nDESCRIPTION: Command to clean the monorepo. Requires reinstalling dependencies afterwards.\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm run clean\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Storybook Web Monorepo\nDESCRIPTION: Command to install all project dependencies in the monorepo\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Generating Redirects in Storybook Web Monorepo\nDESCRIPTION: Turborepo command to generate redirects file\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpx turbo generate-redirects\n```\n\n----------------------------------------\n\nTITLE: Fetching Documentation in Storybook Web Monorepo\nDESCRIPTION: Turborepo command to fetch documentation from the monorepo\nSOURCE: https://github.com/storybookjs/web/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpx turbo fetch-docs\n```\n\n----------------------------------------\n\nTITLE: Package Name Declaration in Markdown\nDESCRIPTION: Defines the package name using markdown header syntax with code formatting.\nSOURCE: https://github.com/storybookjs/web/blob/main/packages/eslint-config/README.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# `@turbo/eslint-config`\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Storybook.js.org Website\nDESCRIPTION: This robots.txt file provides instructions for search engine crawlers on how to index the Storybook.js.org website. It sets global access permissions, defines the canonical host URL, and references sitemaps for various sections of the site including addons, blog, documentation, recipes, releases, showcase, and tutorials.\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/app/robots.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# *\nUser-agent: *\nAllow: /\n\n# Host\nHost: https://storybook.js.org\n\n# Sitemaps\nSitemap: https://storybook.js.org/addons/sitemap.xml\nSitemap: https://storybook.js.org/blog/sitemap.xml\nSitemap: https://storybook.js.org/docs/sitemap.xml\nSitemap: https://storybook.js.org/recipes/sitemap.xml\nSitemap: https://storybook.js.org/releases/sitemap.xml\nSitemap: https://storybook.js.org/showcase/sitemap.xml\nSitemap: https://storybook.js.org/tutorials/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Installing Storybook with npm\nDESCRIPTION: Command to add Storybook to an existing Angular Material project\nSOURCE: https://github.com/storybookjs/web/blob/main/apps/frontpage/content/recipes/@angular/material.mdx#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Add Storybook:\nnpm create storybook@latest\n```"
  }
]
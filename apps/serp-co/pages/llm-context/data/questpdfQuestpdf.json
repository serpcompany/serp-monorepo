[
  {
    "owner": "questpdf",
    "repo": "questpdf",
    "content": "TITLE: Generating a Basic PDF Document with QuestPDF in C#\nDESCRIPTION: This code snippet demonstrates how to create a simple PDF document using QuestPDF. It includes page setup, header, content with text and image, and a footer with page numbering.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/Source/QuestPDF/Resources/PackageReadme.md#2025-04-18_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing QuestPDF.Fluent;\nusing QuestPDF.Helpers;\nusing QuestPDF.Infrastructure;\n\n// code in your main method\nDocument.Create(container =>\n{\n    container.Page(page =>\n    {\n        page.Size(PageSizes.A4);\n        page.Margin(2, Unit.Centimetre);\n        page.Background(Colors.White);\n        page.DefaultTextStyle(x => x.FontSize(20));\n        \n        page.Header()\n            .Text(\"Hello PDF!\")\n            .SemiBold().FontSize(36).FontColor(Colors.Blue.Medium);\n        \n        page.Content()\n            .PaddingVertical(1, Unit.Centimetre)\n            .Column(x =>\n            {\n                x.Spacing(20);\n                \n                x.Item().Text(Placeholders.LoremIpsum());\n                x.Item().Image(Placeholders.Image(200, 100));\n            });\n        \n        page.Footer()\n            .AlignCenter()\n            .Text(x =>\n            {\n                x.Span(\"Page \");\n                x.CurrentPageNumber();\n            });\n    });\n})\n.GeneratePdf(\"hello.pdf\");\n```\n\n----------------------------------------\n\nTITLE: Generating a Simple PDF Document with QuestPDF in C#\nDESCRIPTION: This snippet demonstrates the basics of creating a PDF document using QuestPDF's fluent API. It shows how to set up page properties, add header/footer content, include text and images, and generate the final PDF file.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/Source/QuestPDF/Resources/Description.md#2025-04-18_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing QuestPDF.Fluent;\nusing QuestPDF.Helpers;\nusing QuestPDF.Infrastructure;\n\n// code in your main method\nDocument.Create(container =>\n{\n    container.Page(page =>\n    {\n        page.Size(PageSizes.A4);\n        page.Margin(2, Unit.Centimetre);\n        page.Background(Colors.White);\n        page.DefaultTextStyle(x => x.FontSize(20));\n        \n        page.Header()\n            .Text(\"Hello PDF!\")\n            .SemiBold().FontSize(36).FontColor(Colors.Blue.Medium);\n        \n        page.Content()\n            .PaddingVertical(1, Unit.Centimetre)\n            .Column(x =>\n            {\n                x.Spacing(20);\n                \n                x.Item().Text(Placeholders.LoremIpsum());\n                x.Item().Image(Placeholders.Image(200, 100));\n            });\n        \n        page.Footer()\n            .AlignCenter()\n            .Text(x =>\n            {\n                x.Span(\"Page \");\n                x.CurrentPageNumber();\n            });\n    });\n})\n.GeneratePdf(\"hello.pdf\");\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Layout Generation in C#\nDESCRIPTION: Example showing how to create dynamic PDF layouts using conditional statements and loops. Demonstrates column creation with conditional text and iterative item generation.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/README.md#2025-04-18_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n.Column(column =>\n{\n    if (Model.Comments != null)\n        column.Item().Text(Model.Comments);\n\n    foreach(var item in Model.Items)\n       column.Item().Element(c => CreateItem(c, item);\n});\n```\n\n----------------------------------------\n\nTITLE: Performing PDF Operations with DocumentOperation API\nDESCRIPTION: Example demonstrating common PDF operations like merging documents, adding attachments, and applying encryption using the DocumentOperation API.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/README.md#2025-04-18_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nDocumentOperation\n    .LoadFile(\"input.pdf\")\n    .TakePages(\"1-10\")\n    .MergeFile(\"appendix.pdf\", \"1-z\") // all pages\n    .AddAttachment(new DocumentAttachment\n    {\n        FilePath = \"metadata.xml\"\n    })\n    .Encrypt(new Encryption256Bit\n    {\n        OwnerPassword = \"mypassword\",\n        AllowPrinting = true,\n        AllowContentExtraction = false\n    })\n    .Save(\"final-document.pdf\");\n```\n\n----------------------------------------\n\nTITLE: Styling PDF Elements with Background Colors\nDESCRIPTION: Code diff showing how to modify container styling by changing background colors for items in the PDF document.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/README.md#2025-04-18_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\nvoid CreateItem(IContainer container, Item item)\n{\n    container\n-       .Background(Colors.Grey.Lighten2)\n+       .Background(item.Color)\n        .Padding(10)\n        .Text(item.Text);\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Apache License 2.0 Boilerplate Notice\nDESCRIPTION: This is a template for the boilerplate notice that should be included in project files to apply the Apache License 2.0. Users should replace the placeholder fields with their own copyright information.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/Source/QuestPDF/Resources/ExternalDependencyLicenses/ninja-build.txt#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Applying Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: A template for the copyright notice and license statement that should be included in files of a project using the Apache License 2.0. Developers should replace the bracketed fields with their own information.\nSOURCE: https://github.com/questpdf/questpdf/blob/main/Source/QuestPDF/Resources/ExternalDependencyLicenses/qpdf.txt#2025-04-18_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```"
  }
]
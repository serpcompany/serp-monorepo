[
  {
    "owner": "crossref",
    "repo": "rest-api-doc",
    "content": "TITLE: Example cURL Request with Authorization Token for Crossref Plus Service\nDESCRIPTION: This snippet demonstrates how to perform an authenticated GET request to the Crossref API using cURL, including setting the \"Crossref-Plus-API-Token\" in the request headers for authorized access to Plus SLA features. It also includes a custom \"User-Agent\" header for polite identification.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X GET \\\n  https://api.crossref.org/works \\\n  -H 'Crossref-Plus-API-Token: Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vY3Jvc3NyZWYub3JnLyIsImF1ZXYZImVuaGFuY2VkY21zIiwianRpIjoiN0M5ODlFNTItMTFEQS00QkY3LUJCRUUtODFCMUM3QzE0OTZEIn0.NYe3-O066sce9R1fjMzNEvP88VqSEaYdBY622FDiG8Uq' \\\n  -H 'User-Agent: GroovyBib/1.1 (https://example.org/GroovyBib/; mailto:GroovyBib@example.org) BasedOnFunkyLib/1.4'\n```\n\n----------------------------------------\n\nTITLE: Sorting Results by Publication Date (Ascending) via Crossref REST API URL\nDESCRIPTION: This snippet shows how to sort results from the Crossref REST API. It queries for 'josiah carberry', sorts the results by the 'published' field, and orders them in 'asc' (ascending) order. This retrieves results starting with the least recent publication date.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_1\n\nLANGUAGE: HTTP/URL\nCODE:\n```\nhttps://api.crossref.org/works?query=josiah+carberry&sort=published&order=asc\n```\n\n----------------------------------------\n\nTITLE: Retrieving All 'type-name' Facet Counts via Crossref REST API URL\nDESCRIPTION: This snippet demonstrates how to request facet counts from the Crossref REST API. It sets 'rows=0' to get only the facet counts without result items and requests faceting for the 'type-name' field with `*` to retrieve all available type names and their counts.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_2\n\nLANGUAGE: HTTP/URL\nCODE:\n```\nhttps://api.crossref.org/works?rows=0&facet=type-name:*\n```\n\n----------------------------------------\n\nTITLE: Filtering Works Route with Dot Filters Example\nDESCRIPTION: This snippet shows how to use 'dot filters' to query related records. It filters works that have an award with a specific number and funder. The 'dot' notation allows filtering based on properties of related objects (awards in this case). The `/works` resource is used to show all publications that meet the award criteria. The filter utilizes a combination of `award.number` and `award.funder` to look for a specific combination of parameters in the dataset.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_4\n\nLANGUAGE: N/A\nCODE:\n```\n/works?filter=award.number:CBET-0756451,award.funder:10.13039/100000001\n```\n\n----------------------------------------\n\nTITLE: Limiting Crossref API Results Using 'rows'\nDESCRIPTION: Demonstrates how to limit the number of results returned by the Crossref API to 5 using the 'rows' parameter in a query for works matching 'allen renear'.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_5\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?query=allen+renear&rows=5\n```\n\n----------------------------------------\n\nTITLE: Paginating Crossref API Results Using 'offset'\nDESCRIPTION: Illustrates how to retrieve a specific page of results (results 6-10) by using the 'offset' parameter in conjunction with the 'rows' parameter. Note that offsets are limited to 10K for /works.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_7\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?query=allen+renear&rows=5&offset=5\n```\n\n----------------------------------------\n\nTITLE: Initiating Deep Paging with Crossref API Cursor\nDESCRIPTION: Example of starting a deep paging session using a cursor to retrieve all 'journal-article' works from member '311'. The 'cursor=*' parameter initiates the process for retrieving large result sets beyond the offset limit.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_8\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/members/311/works?filter=type:journal-article&cursor=*\n```\n\n----------------------------------------\n\nTITLE: Continuing Deep Paging with Crossref API Cursor\nDESCRIPTION: Demonstrates retrieving the next page of results in a deep paging session by passing the 'next-cursor' value obtained from the previous response as the 'cursor' parameter.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_9\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/members/311/works?filter=type:journal-article&cursor=AoE/CGh0dHA6Ly9keC5kb2kub3JnLzEwLjEwMDIvdGRtX2xpY2Vuc2VfMQ==\n```\n\n----------------------------------------\n\nTITLE: Sampling Random Works with Crossref API\nDESCRIPTION: Shows how to retrieve a random sample of 10 works from the Crossref API using the 'sample' parameter. When 'sample' is used, 'rows' and 'offset' are ignored.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_10\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?sample=10\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Prefix and Publication Date\nDESCRIPTION: Example query to find all works published by owner prefix '10.1016' within a specific month (January 2010) using 'from-pub-date' and 'until-pub-date' filters.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_11\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/prefixes/10.1016/works?filter=from-pub-date:2010-01,until-pub-date:2010-01\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Funder and License\nDESCRIPTION: Example query to find all works funded by funder ID '10.13039/100000001' that have a specific CC-BY license URL.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_12\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/funders/10.13039/100000001/works?filter=license.url:http://creativecommons.org/licenses/by/3.0/\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Prefix, Date Range, and License\nDESCRIPTION: Example query combining filters for owner prefix ('10.6064'), publication date range (Feb 2010 - Feb 2013), and a specific CC-BY license URL.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_13\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/prefixes/10.6064/works?filter=license.url:http://creativecommons.org/licenses/by/3.0/,from-pub-date:2010-02,until-pub-date:2013-02\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Funder, License, and Embargo\nDESCRIPTION: Example query to find works funded by '10.13039/100000015' with a specific CC-BY license URL and a maximum license embargo period of 365 days ('license.delay').\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_14\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/funders/10.13039/100000015/works?filter=license.url:http://creativecommons.org/licenses/by/3.0/,license.delay:365\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Archive Partner\nDESCRIPTION: Example query to find all works where the listed archive partner is 'CLOCKSS' using the 'archive' filter.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_15\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?filter=archive:CLOCKSS\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Members by Name\nDESCRIPTION: Example query to find all Crossref members whose name contains 'hind' using the 'query' parameter on the '/members' endpoint.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_16\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/members?query=hind\n```\n\n----------------------------------------\n\nTITLE: Retrieving Only Summary from Crossref API\nDESCRIPTION: Shows how to retrieve only the summary information (metadata about the results, not the items themselves) by setting the 'rows' parameter to 0.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_6\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?query=allen+renear&rows=0\n```\n\n----------------------------------------\n\nTITLE: Faceting Crossref Works by License for a Member\nDESCRIPTION: Example query using facets to find all unique licenses linked to works published by a specific member ('member:78'). 'rows=0' retrieves only facet counts, not the actual works.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_17\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/v1/works?facet=license:*&filter=member:78&rows=0\n```\n\n----------------------------------------\n\nTITLE: Faceting Crossref Works by License for a Journal ISSN\nDESCRIPTION: Example query using facets to find all licenses applied to works published in a journal identified by its ISSN ('issn:2090-8091'). 'rows=0' retrieves only facet counts.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_18\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?facet=license:*&filter=issn:2090-8091\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref Works by Award Number and Funder\nDESCRIPTION: Example query to find works associated with a specific award number ('award.number:1F31MH11745') and a specific funder ID ('award.funder:10.13039/100000025').\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_19\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/works?filter=award.number:1F31MH11745,award.funder:10.13039/100000025\n```\n\n----------------------------------------\n\nTITLE: Faceting Crossref Works by Publisher for Open References\nDESCRIPTION: Example query to count works that have references ('has-references:true') which are openly available ('reference-visibility:open'), faceted by publisher name. 'rows=0' retrieves only facet counts.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_20\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/v1.0/works?filter=has-references:true,reference-visibility:open&facet=publisher-name:*&rows=0\n```\n\n----------------------------------------\n\nTITLE: Accessing Specific Crossref API Major Version\nDESCRIPTION: Demonstrates how to target a specific major version (e.g., v1) of the Crossref API by including the version number in the URL path to ensure compatibility.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_21\n\nLANGUAGE: uri\nCODE:\n```\nhttps://api.crossref.org/v1/works\n```\n\n----------------------------------------\n\nTITLE: Recording Proprietary License Reference in Crossref Metadata XML\nDESCRIPTION: Example of how to implement the license_ref element for content under a publisher's proprietary license. This points to the publisher's own license document rather than a standard license.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/funder_kpi_metadata_best_practice.md#_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<license_ref>http://www.psychoceramics.org/license_v1.html</license_ref>\n```\n\n----------------------------------------\n\nTITLE: Recording Complex Embargoed Content with Multiple Post-Embargo Licenses in Crossref XML\nDESCRIPTION: Example showing a complex licensing scenario where content initially under a proprietary license transitions to dual licensing options (commercial and non-commercial) after an embargo period.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/funder_kpi_metadata_best_practice.md#_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<license_ref start_date=\"2014-02-03\">http://www.psychoceramics.org/license_v1.html</license_ref>\n\n<license_ref start_date=\"2015-02-03\">http://www.psychoceramics.org/non_commercial_license_v1.html</license_ref>\n\n<license_ref start_date=\"2015-02-03\">http://www.psychoceramics.org/commercial_license_v1.html</license_ref>\n```\n\n----------------------------------------\n\nTITLE: Recording CC-BY License Reference in Crossref Metadata XML\nDESCRIPTION: Example of how to implement the license_ref element in Crossref metadata deposits for content licensed under Creative Commons BY license. This allows funders to track open access compliance.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/funder_kpi_metadata_best_practice.md#_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<license_ref>http://creativecommons.org/licenses/by/3.0/deed.en_US</license_ref>\n```\n\n----------------------------------------\n\nTITLE: Recording Dual License References in Crossref Metadata XML\nDESCRIPTION: Example showing how to record multiple license_ref elements when content is available under dual licensing terms, such as separate commercial and non-commercial licenses.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/funder_kpi_metadata_best_practice.md#_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<license_ref>http://www.psychoceramics.org/non_commercial_license_v1.html</license_ref>\n<license_ref>http://www.psychoceramics.org/commercial_license_v1.html</license_ref>\n```\n\n----------------------------------------\n\nTITLE: Recording Embargoed Content Licenses with Start Dates in Crossref Metadata XML\nDESCRIPTION: Example showing how to use the start_date attribute with license_ref elements to indicate when content transitions from a proprietary license to an open license after an embargo period.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/funder_kpi_metadata_best_practice.md#_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<license_ref start_date=\"2014-02-03\">http://www.psychoceramics.org/license_v1.html</license_ref>\n<license_ref start_date=\"2015-02-03\">http://creativecommons.org/licenses/by/3.0/deed.en_US</license_ref>\n```\n\n----------------------------------------\n\nTITLE: Filtering Works Route with Multiple Filters Example\nDESCRIPTION: This snippet illustrates how to use multiple filters in a single query to the `/works` route. The example demonstrates how to combine different filters using comma-separated values. It locates documents that match all the specified filter criteria. The filter uses the AND operator. The filters include: `is-update:true`, `from-pub-date:2014-03-03` and either `funder:10.13039/100000001` or `funder:10.13039/100000050`. The output consists of metadata records of publications that meet the conditions set by the filter parameters.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/README.md#_snippet_3\n\nLANGUAGE: N/A\nCODE:\n```\n/works?filter=is-update:true,from-pub-date:2014-03-03,funder:10.13039/100000001,funder:10.13039/100000050\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref API with Query Parameter (Poor Example)\nDESCRIPTION: Shows a bad example of querying the Crossref API using the plain query parameter, which searches the entire record and often results in false positives and distorted scores. The aim is to highlight inefficient search practices and suggest better alternatives. It's best to avoid this type of query when matching references.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/api_tips.md#_snippet_1\n\nLANGUAGE: none\nCODE:\n```\nhttp://api.crossref.org/works?query=\"Toward a Unified Theory of High-Energy Metaphysics, Josiah Carberry 2008-08-13\"\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref API with Parameters\nDESCRIPTION: Demonstrates a poor example of querying the Crossref API using multiple parameters, which results in an expensive and slow query. The example includes parameters like query.author, filter, query.container-title, and query. The goal is to show how to structure queries to avoid performance issues.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/api_tips.md#_snippet_0\n\nLANGUAGE: none\nCODE:\n```\nhttp://api.crossref.org/works?query.author=\"Josiah Carberry\"&filter=from-pub-date:2008-08-13,until-pub-date:2008-08-13&query.container-title=\"Journal of Psychoceramics\"&query=\"Toward a Unified Theory of High-Energy Metaphysics\"&order=score&sort=desc\n```\n\n----------------------------------------\n\nTITLE: Filtering Works by Publication Date and Affiliation\nDESCRIPTION: This snippet demonstrates how to filter works based on the online publication date and the presence of affiliation data. It retrieves works indexed today that have affiliation data. It uses the `datetime` module to get today's date in ISO format and the `filter()` method to apply the criteria.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport datetime\nworks=Works()\ntoday = datetime.date.today().isoformat()\nworks_with_affiliations = [w for w in works.filter(from_online_pub_date=today, has_affiliation='true')]\nprint(len(works_with_affiliations))\n```\n\n----------------------------------------\n\nTITLE: Filtering Works by Publication Date and Funder\nDESCRIPTION: This snippet demonstrates how to filter works by publication date and funder ID. It retrieves works published after a specific date (e.g., '2017-01-01') that are funded by a particular funder. It requires the funder ID obtained from the previous snippet.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nimport datetime\nworks=Works()\ntoday = datetime.date.today().isoformat()\nworks_with_funding_data = [w for w in works.filter(from_online_pub_date='2017-01-01', funder=funder_id)]\nprint(len(works_with_funding_data))\n```\n\n----------------------------------------\n\nTITLE: Getting the URL of a Query\nDESCRIPTION: This snippet demonstrates how to retrieve the generated REST API URL for a given query using the `crossref-restful` library. It first initializes the `Works` class and then constructs a query for works containing the term 'zika'. Finally, it retrieves the URL of the constructed query using the `.url` attribute.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom crossref.restful import Works\nworks = Works()\nworks.query('zika').url\n```\n\n----------------------------------------\n\nTITLE: Querying Funders by Name\nDESCRIPTION: This snippet retrieves the ID of a funder based on its name using the `Funders` class. It initializes the `Funders` class, queries for a specific funder name (e.g., NIH), and then extracts the 'id' from the first result.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom crossref.restful import Funders\nfunders=Funders()\nfunder_name=\"NIH\"\nfunder_id=next(iter(funders.query(funder_name)))['id']\nfunder_id\n```\n\n----------------------------------------\n\nTITLE: Sampling Query Results\nDESCRIPTION: This snippet shows how to retrieve a sample of results from a query using the `sample()` method. It queries for works containing 'zika' and then takes a sample of 10 results. The results are stored in a list called `zika_sample`.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom crossref.restful import Works\nworks = Works()\nzika_sample = [work for work in works.query('zika').sample(10)]\nzika_sample\n```\n\n----------------------------------------\n\nTITLE: Querying Works by Affiliation and Publication Date\nDESCRIPTION: This snippet filters publications by publication date and affiliation. It uses the `filter()` method to find works published today and the `query()` method to search for a specific affiliation (e.g., Harvard).\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport datetime\naffiliation=\"Harvard\"\ntoday = datetime.date.today().isoformat()\nrecent_affiliation_pubs = works.filter(from_online_pub_date=today).query(affiliation=affiliation)\nrecent_affiliation_pubs.count()\n```\n\n----------------------------------------\n\nTITLE: Querying Crossref API Using query.bibliographic (Best Practice)\nDESCRIPTION: Provides the recommended approach to querying the Crossref API using the query.bibliographic parameter. It is focused on efficiently matching references. It is best practice to minimize other parameters, filters and facets and limit rows to 2.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/api_tips.md#_snippet_2\n\nLANGUAGE: none\nCODE:\n```\nhttp://api.crossref.org/works?query.bibliographic=\"Toward a Unified Theory of High-Energy Metaphysics, Josiah Carberry 2008-08-13\"&rows=2\n```\n\n----------------------------------------\n\nTITLE: Checking DOI Registration Agency with Crossref API\nDESCRIPTION: This endpoint allows you to determine which registration agency a DOI belongs to. Use this before repeatedly querying Crossref for a DOI that might belong to another agency.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/api_tips.md#_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nhttps://api.crossref.org/works/{doi}/agency\n```\n\n----------------------------------------\n\nTITLE: Accessing the First Record with Funding Data\nDESCRIPTION: This snippet retrieves the first record from a filtered list of works with funding data using `next(iter())` to access the first element of the iterable.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nnext(iter(works_with_funding_data))\n```\n\n----------------------------------------\n\nTITLE: Accessing the First Record from a Query Result\nDESCRIPTION: This snippet retrieves the first record from a query result. It uses `next(iter(recent_affiliation_pubs))` to get the first item from the iterable returned by a query.\nSOURCE: https://github.com/crossref/rest-api-doc/blob/master/demos/crossref-api-demo.ipynb#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nnext(iter(recent_affiliation_pubs))\n```"
  }
]
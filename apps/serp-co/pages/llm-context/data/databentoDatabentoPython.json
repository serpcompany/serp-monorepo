[
  {
    "owner": "databento",
    "repo": "databento-python",
    "content": "TITLE: Basic Historical Data Retrieval with Databento Python Client\nDESCRIPTION: Demonstrates how to initialize the Databento Historical client with an API key, retrieve time series data for ES futures contracts, and replay the data using a callback function.\nSOURCE: https://github.com/databento/databento-python/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport databento as db\n\nclient = db.Historical('YOUR_API_KEY')\ndata = client.timeseries.get_range(\n    dataset='GLBX.MDP3',\n    symbols='ES.FUT',\n    stype_in='parent',\n    start='2022-06-10T14:30',\n    end='2022-06-10T14:40',\n)\n\ndata.replay(callback=print)  # market replay, with `print` as event handler\n```\n\n----------------------------------------\n\nTITLE: Converting Databento Data to DataFrame or NumPy Array\nDESCRIPTION: Shows how to convert retrieved Databento market data into Pandas DataFrame or NumPy ndarray formats for analysis.\nSOURCE: https://github.com/databento/databento-python/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndf = data.to_df()  # to DataFrame\narray = data.to_ndarray()  # to ndarray\n```\n\n----------------------------------------\n\nTITLE: Initializing Databento Client with Environment Variable\nDESCRIPTION: Demonstrates two methods of providing API credentials: directly as a parameter or via the DATABENTO_API_KEY environment variable (recommended for production).\nSOURCE: https://github.com/databento/databento-python/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport databento as db\n\n# Pass as parameter\nclient = db.Historical('YOUR_API_KEY')\n\n# Or, pass as `DATABENTO_API_KEY` environment variable\nclient = db.Historical()\n```\n\n----------------------------------------\n\nTITLE: Initializing Databento Historical Client\nDESCRIPTION: Initialize the Databento historical client with an API key for making data requests\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport databento as db\n\n\nclient = db.Historical(key=\"YOUR_API_KEY\")\ndb.__version__\n```\n\n----------------------------------------\n\nTITLE: Requesting Time Series Data\nDESCRIPTION: Request historical time series data with specified parameters and record limit\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndata = client.timeseries.get_range(\n    **params,\n    limit=1000,  # <-- request limited to 1000 records\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Query Parameters\nDESCRIPTION: Define parameters for querying market data including dataset, symbols, schema, and time range\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nparams = {\n    \"dataset\": \"GLBX.MDP3\",\n    \"symbols\": \"ES.FUT\",\n    \"stype_in\": \"parent\",\n    \"schema\": \"mbo\",\n    \"start\": \"2022-06-10T14:30\",\n    \"end\": \"2022-06-11\",\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Data to Pandas DataFrame\nDESCRIPTION: Transform the DBNStore data into a pandas DataFrame for analysis\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nimport pandas as pd\n\n\npd.set_option(\"display.max_columns\", None)\n\ndf = data.to_df()\ndf.head(20)\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Handler\nDESCRIPTION: Define a handler function for processing data records during replay\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef my_handler(record):\n    # backtesting / trading strategies (event-driven)\n    print(record)\n```\n\n----------------------------------------\n\nTITLE: Submitting Batch Job\nDESCRIPTION: Submit a batch download request for historical market data\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nnew_job = client.batch.submit_job(\n    dataset=\"GLBX.MDP3\",\n    symbols=[\"ESH1\"],\n    schema=\"trades\",\n    start=\"2020-12-27T12:00\",\n    end=\"2020-12-29\",\n    encoding=\"dbn\",\n    delivery=\"download\",\n    limit=1000,  # <-- request limited to 1000 records\n)\nnew_job_id = new_job[\"id\"]\n\nnew_job\n```\n\n----------------------------------------\n\nTITLE: Querying Batch Jobs\nDESCRIPTION: List and filter batch jobs based on state and time criteria\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclient.batch.list_jobs(since=pd.Timestamp.utcnow() - pd.Timedelta(minutes=5))\n```\n\n----------------------------------------\n\nTITLE: Downloading Batch Job Results\nDESCRIPTION: Download completed batch job files to a specified directory\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclient.batch.download(job_id=new_job_id, output_dir=\"mydata\")\n```\n\n----------------------------------------\n\nTITLE: Installing Databento Python Client\nDESCRIPTION: Installation command for the Databento Python client library using pip\nSOURCE: https://github.com/databento/databento-python/blob/main/notebooks/quickstart.ipynb#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -U databento\n```\n\n----------------------------------------\n\nTITLE: Breaking Code Change - Symbol Renaming\nDESCRIPTION: Renamed CbboMsg class to CBBOMsg and changed use_snapshot parameter name in Live.subscribe function. All Python exceptions now use DBNError type.\nSOURCE: https://github.com/databento/databento-python/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n# Previous code\nCbboMsg\nLive.subscribe(use_snapshot=True)\n\n# New code\nCBBOMsg\nLive.subscribe(snapshot=True)\n```\n\n----------------------------------------\n\nTITLE: Breaking Code Change - Partial Downloads Parameter\nDESCRIPTION: Removed enable_partial_downloads parameter and reordered parameters in Historical.batch.download and Historical.batch.download_async methods. job_id parameter now comes first.\nSOURCE: https://github.com/databento/databento-python/blob/main/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\n# Previous code\nHistorical.batch.download(output_dir=\"/path\", job_id=\"123\", enable_partial_downloads=True)\n\n# New code\nHistorical.batch.download(job_id=\"123\", output_dir=\"/path\") # partial downloads always enabled\n```"
  }
]
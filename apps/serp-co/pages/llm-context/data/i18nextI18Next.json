[
  {
    "owner": "i18next",
    "repo": "i18next",
    "content": "TITLE: Setting fallbackLng as an Object Example in i18next\nDESCRIPTION: Shows how to configure fallbackLng as an object to define language fallback chains in i18next. This allows specifying different fallback languages for different language variants.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nfallbackLng: {\n  'de-CH': ['fr', 'it', 'en'],\n  'de': ['fr', 'en'],\n  'zh-Hans': ['zh-Hant', 'en'],\n  'zh-Hant': ['zh-Hans', 'en'],\n  'default': ['en']\n}\n```\n\n----------------------------------------\n\nTITLE: Using Interpolation Formatting in i18next\nDESCRIPTION: Shows the syntax for using formatting rules with interpolation variables in i18next. This requires defining a format function in the interpolation options.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n'format this: {{var, formatRule}}'\n```\n\n----------------------------------------\n\nTITLE: Disabling Nesting in i18next Translation Call\nDESCRIPTION: Demonstrates how to disable nesting functionality for a specific translation call by passing the nest option as false to the t function.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\ni18next.t('key', { nest: false })\n```\n\n----------------------------------------\n\nTITLE: Allowing fallbackLng as Function in i18next Configuration\nDESCRIPTION: Version 19.8.0 introduces the ability to specify fallbackLng as a function in the i18next configuration options.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ni18next.init({\n  fallbackLng: (code) => {\n    // Custom logic to determine fallback language\n    return ['en']; // Return an array of fallback languages\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Importing i18next in Deno\nDESCRIPTION: This snippet demonstrates three different ways to import the i18next library in a Deno environment. Options include importing from the Deno package registry, directly from GitHub, or via a CDN.\nSOURCE: https://github.com/i18next/i18next/blob/master/src/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport i18next from 'https://deno.land/x/i18next/index.js';\n// or import i18next from 'https://raw.githubusercontent.com/i18next/i18next/master/src/index.js'\n// or import i18next from 'https://cdn.jsdelivr.net/gh/i18next/i18next/src/index.js'\n```\n\n----------------------------------------\n\nTITLE: Support for Formatting in Nested Translations in i18next\nDESCRIPTION: Version 19.4.0 adds support for applying formatting options to nested translations.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Translation JSON\n{\n  \"key\": \"Hello {{name, uppercase}}\",\n  \"nested\": \"$t(key, { 'name': 'world' })\"\n}\n\n// Usage\ni18next.t('nested'); // Output: \"Hello WORLD\"\n```\n\n----------------------------------------\n\nTITLE: Setting the compatibilityJSON Option in i18next\nDESCRIPTION: Demonstrates how to configure i18next to use v2 compatibility mode for plurals, which uses a different index system than the gettext-compatible default in v3+.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\ncompatibilityJSON = 'v2'\n```\n\n----------------------------------------\n\nTITLE: Renaming Whitelist Option to supportedLngs in i18next\nDESCRIPTION: Version 19.5.0 renames the 'whitelist' option to 'supportedLngs' and 'nonExplicitWhitelist' to 'nonExplicitSupportedLngs' for more inclusive terminology.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\ni18next.init({\n  supportedLngs: ['en', 'de', 'fr'], // formerly 'whitelist'\n  nonExplicitSupportedLngs: true // formerly 'nonExplicitWhitelist'\n});\n```\n\n----------------------------------------\n\nTITLE: New Interpolation Option in i18next: skipOnVariables\nDESCRIPTION: Version 19.6.0 introduces a new interpolation option 'skipOnVariables' to control interpolation behavior when variables are present.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\ni18next.init({\n  interpolation: {\n    skipOnVariables: true // Skip interpolation if variables are present in the value\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Chainable Resource Manipulation Functions in i18next\nDESCRIPTION: Version 19.7.0 makes resource manipulation functions chainable, allowing for more fluent API usage.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\ni18next\n  .addResource('en', 'ns1', 'key1', 'value1')\n  .addResources('en', 'ns1', { key2: 'value2', key3: 'value3' })\n  .addResourceBundle('en', 'ns2', { key4: 'value4' }, true, true);\n```\n\n----------------------------------------\n\nTITLE: Generating Trace for Performance Analysis in i18next\nDESCRIPTION: Command to generate a performance trace using TypeScript compiler and analyze it with ts-analyze-trace tool, providing detailed insights into i18next key parsing performance.\nSOURCE: https://github.com/i18next/i18next/blob/master/test/typescript/many-keys/PERF_README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx tsc -p tsconfig.json --generateTrace traceDir && analyze-trace traceDir\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript Tests for Specific Projects in i18next\nDESCRIPTION: Command to run TypeScript tests for a specific project using the --project flag, with an example targeting the 'custom-types' project.\nSOURCE: https://github.com/i18next/i18next/blob/master/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:typescript -- --project custom-types\n```\n\n----------------------------------------\n\nTITLE: Running Local Tests in i18next\nDESCRIPTION: Command to run local test files that are not meant to be executed in CI/CD environments. These tests use a separate vitest workspace definition.\nSOURCE: https://github.com/i18next/i18next/blob/master/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:local\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript Compilation for Performance Check in i18next\nDESCRIPTION: Command to execute TypeScript compilation without emitting files, used to measure performance of key parsing in i18next with many keys.\nSOURCE: https://github.com/i18next/i18next/blob/master/test/typescript/many-keys/PERF_README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntime npx tsc --noEmit\n```\n\n----------------------------------------\n\nTITLE: Changing Directory for Performance Testing in i18next\nDESCRIPTION: Command to navigate to the directory containing the performance test files for i18next key parsing.\nSOURCE: https://github.com/i18next/i18next/blob/master/test/typescript/many-keys/PERF_README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd test/typescript/many-keys\n```\n\n----------------------------------------\n\nTITLE: Removing Named Exports in i18next Main File\nDESCRIPTION: Version 17.0.0 removes named exports in the main file to improve usage in CommonJS scenarios and avoid issues with mixed exports.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Old usage (no longer supported)\nimport { changeLanguage } from 'i18next';\nchangeLanguage('de');\n\n// New usage\nimport i18next from 'i18next';\ni18next.changeLanguage('de');\n```\n\n----------------------------------------\n\nTITLE: Compatibility Code for i18next v1\nDESCRIPTION: Reference to compatibility code that can be added to support i18next v1 features in newer versions. Points to a GitHub file that contains the specific compatibility implementation.\nSOURCE: https://github.com/i18next/i18next/blob/master/CHANGELOG.md#2025-04-19_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/i18next/i18next/blob/master/test/backward/v1.11.1.compat.js#L45-L52\n```"
  }
]
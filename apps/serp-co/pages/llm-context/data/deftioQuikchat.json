[
  {
    "owner": "deftio",
    "repo": "quikchat",
    "content": "TITLE: Initializing QuikChat with Message Handling\nDESCRIPTION: Comprehensive example of initializing a QuikChat instance with a container selector, a message callback function, and customization options. Includes examples of adding messages and manipulating the chat interface.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nchat = new quikchat(\n      \"#chat-container\",//a css selector such as \"#chat-container\" or DOM element\n      (chat, msg) => { // this callback triggered when user hits the Send\n            // messages are not automatically echoed.\n            // this allows filtering of the message before posting.\n            chat.messageAddNew(msg, 'me', 'right'); // echo msg to chat area \n            // now call an LLM or do other actions with msg\n            // ... callLLM(msg) ... do other logic if needed.\n            // or callLLM(chat.historyGet());  // pass full history (can also filter)\n      },\n      {\n        theme: 'quikchat-theme-light', // set theme, see quikchat.css\n        titleArea: { title: 'My Chat', align: 'left', show: true }, // internal title area if desired\n      });\n\n// Add a message at any point not just from callback\nchat.messageAddNew('Hello!', 'You', 'left');    //  should appear left justified\nchat.messageAddNew('Hello!', 'Me', 'right');  //  should appear  right justified\n\n\n//... other logic\nlet messageHistory = chat.historyGet(); // get all the messages (see docs for filters)\nconsole.log(messageHistory); // do something with messages\n\n// show / hide the title area\nchat.titleAreaHide();  // hides the title area for a bare chat\n\n// hide the input area\nchat.inputAreaHide(); // hides the input area so chat is now just a message stream.\n\n// change themes at any time\nchat.changeTheme(\"quikchat-theme-dark\"); // change theme on the fly (see quikchat.css for examples)\n```\n\n----------------------------------------\n\nTITLE: Importing QuikChat as ES Module\nDESCRIPTION: Demonstrates how to import QuikChat as an ES module and initialize it with a callback function. The example includes creating a chat instance, handling user messages, and generating automatic bot responses.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport quikchat from '../dist/quikchat.esm.min.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const parentDiv = document.querySelector('#chatContainerInstance');\n    window.chatBox = new quikchat(parentDiv, \n    (chat, msg) => {\n        chat.messageAddNew(msg, 'me', 'right'); // echo the message to the chat area\n\n        // example of a bot response using the built-in lorem ipsum generator\n        const botResponse = quikchat.loremIpsum();\n        chat.messageAddNew(botResponse, 'bot', 'left');\n    },\n    { // options\n        theme: 'quikchat-theme-light',\n        titleArea: { title: 'QuikChatJS', align: 'left', show: true },\n    });\n    chatBox.messageAddNew('Hello, how are you?', 'bot', 'left');\n    chatBox.messageAddNew('I am fine, thank you.', 'user', 'right');\n    chatBox.messageAddNew('How can I help you today?', 'bot', 'left');\n    chatBox.changeTheme(\"quikchat-theme-light\");\n    console.log(\"quikchat version: \"+quikchat.version().version);\n\n});\n```\n\n----------------------------------------\n\nTITLE: Installing QuikChat via CDN\nDESCRIPTION: Shows how to load QuikChat directly from a CDN without downloading or hosting the files. This approach provides a quick way to use the library without local installation.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/quikchat\"></script>\n<link rel=\"stylesheet\" href=\"https://unpkg.com/quikchat/dist/quikchat.css\" />\n```\n\n----------------------------------------\n\nTITLE: Installing QuikChat via HTML Script Tags\nDESCRIPTION: Demonstrates how to include QuikChat in a project using direct script and CSS references. This is the traditional approach to loading the library in a non-module environment.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"./path/to/quikchat.umd.min.js\"></script>\n<link rel=\"stylesheet\" href=\"./path/to/quikchat.css\">\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Container for QuikChat\nDESCRIPTION: Shows how to create a container element in HTML for the QuikChat widget. The chat control will take 100% of the parent container's dimensions and resize with it.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n#chat-container {width: 100%; height: 50vh;}  /* use any width / height as appropriate for your app */\n</style>\n<div id=\"chat-container\"></div>\n```\n\n----------------------------------------\n\nTITLE: Installing QuikChat Dependencies with NPM\nDESCRIPTION: Commands to initialize a new NPM project and install the required QuikChat and Express.js dependencies.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/NPM_Express_js.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init\nnpm install quikchat expressjs\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration Setup\nDESCRIPTION: Example configuration for the .env file containing OpenAI API credentials and base URL.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENAI_BASE_URL=https://api.openai.com/v1\nOPENAI_API_KEY=your-api-key\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration for FastAPI Quikchat Starter\nDESCRIPTION: Example content for the .env file, which includes the OpenAI API base URL and API key. These environment variables are crucial for the application to interact with the OpenAI API.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/fastapi_llm/README.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nOPENAI_BASE_URL=https://api.openai.com/v1\nOPENAI_API_KEY=your_openai_api_key_here\n```\n\n----------------------------------------\n\nTITLE: Repository Clone and Setup Commands\nDESCRIPTION: Bash commands for cloning the QuikChatJS repository and installing dependencies using npm.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/yourusername/quikchatjs.git\ncd quikchatjs/examples/express-chat-widget\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for FastAPI Quikchat Starter\nDESCRIPTION: Command to install the required Python dependencies for the FastAPI Quikchat Starter project using pip and the requirements.txt file.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/fastapi_llm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Starting Express.js Server\nDESCRIPTION: Command to start the local Express.js server that hosts the QuikChat widget.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/NPM_Express_js.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode server.cjs\n```\n\n----------------------------------------\n\nTITLE: Running the FastAPI Quikchat Starter Application\nDESCRIPTION: Command to start the FastAPI server for the Quikchat Starter project. The server will run on http://127.0.0.1:8000 by default.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/fastapi_llm/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython main.py\n```\n\n----------------------------------------\n\nTITLE: Server Startup Command\nDESCRIPTION: Command to start the Express.js server using Node.js.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode server.js\n```\n\n----------------------------------------\n\nTITLE: QuikChat Light Theme CSS Example\nDESCRIPTION: Example CSS for styling the QuikChat widget with a light theme. Shows how to customize the appearance of various chat components including message areas, input fields, and buttons.\nSOURCE: https://github.com/deftio/quikchat/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n/* quikchat theme light */\n.quikchat-theme-light {\n  border: 1px solid #cccccc;\n  border-radius: 10px;\n  background-color: #f9f9f9;\n}\n  \n.quikchat-theme-light .quikchat-title-area {\n  padding: 8px;\n  color: #333;\n}\n  \n.quikchat-theme-light .quikchat-messages-area {\n  background-color: #ffffffe2;\n  color: #333;\n}\n \n/* support for alternating row styles */\n.quikchat-theme-light .quikchat-messages-area-alt .quikchat-message:nth-child(odd) {\n    background-color: #fffffff0;\n    color: #005662;\n}\n.quikchat-theme-light .quikchat-messages-area-alt .quikchat-message:nth-child(even) {\n    background-color: #eeeeeee9;\n    color: #353535;\n}\n\n/* input area / text entry / send button */\n.quikchat-theme-light .quikchat-input-area {\n  background-color: #f9f9f9;\n  border-bottom-left-radius : 10px;\n  border-bottom-right-radius : 10px;\n}\n\n.quikchat-theme-light .quikchat-input-textbox {\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #333;\n}\n  \n.quikchat-theme-light .quikchat-input-send-btn {\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n}\n```\n\n----------------------------------------\n\nTITLE: Project Structure Overview for FastAPI Quikchat Starter\nDESCRIPTION: Displays the directory structure of the FastAPI Quikchat Starter project, showing the main application file, static assets, and configuration files.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/fastapi_llm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/examples/FastApi-Quikchat-Starter\n|--- app.py                      # Main FastAPI application\n|--- static/\n|   |-- index.html              # Main chat page\n|   |-- widget.html             # Embeddable chat widget page\n|   |-- quikchat.css            # QuikChatJS CSS\n|   |-- quikchat.umd.min.js     # QuikChatJS JavaScript\n|-- .env                        # Environment variables\n|-- README.md                   # This documentation\n|-- requirements.txt            # Python dependencies\n```\n\n----------------------------------------\n\nTITLE: Project Directory Structure in Text Format\nDESCRIPTION: Shows the hierarchical file and directory structure of the QuikChat project, including static assets, configuration files, and server components.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/npm_express/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nproject-root/\n|\n|-- static/\n|   |-- index.html\n|   |-- widget.html\n|   |-- quikchat.min.css\n|   |-- quikchat.umd.min.js\n|\n|-- .env\n|-- package.json\n|-- package-lock.json\n|-- server.js\n|-- README.md\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for quikchat Project\nDESCRIPTION: A requirements list containing the essential Python packages needed for running the quikchat project. It includes FastAPI for API development, requests for HTTP client functionality, and uvicorn as an ASGI server to serve the FastAPI application.\nSOURCE: https://github.com/deftio/quikchat/blob/main/examples/fastapi_llm/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nfastapi\nrequests\nuvicorn\n```\n\n----------------------------------------\n\nTITLE: Implementing Person Icon SVG for Chat Interface\nDESCRIPTION: SVG markup defining a person icon with circular head, facial features, and curved body elements. Designed for use as a human user chat avatar.\nSOURCE: https://github.com/deftio/quikchat/blob/main/dev/todo.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" width=\"64\" height=\"64\">\n  <circle cx=\"32\" cy=\"24\" r=\"12\" stroke=\"#000\" stroke-width=\"3\" fill=\"none\"/>\n  <path d=\"M16 50 Q32 38 48 50\" stroke=\"#000\" stroke-width=\"3\" fill=\"none\"/>\n  <circle cx=\"28\" cy=\"22\" r=\"2\" fill=\"#000\"/>\n  <circle cx=\"36\" cy=\"22\" r=\"2\" fill=\"#000\"/>\n  <path d=\"M30 28 Q32 30 34 28\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Implementing Robot Icon SVG for Chat Interface\nDESCRIPTION: SVG markup defining a robot icon with geometric shapes including rectangles for the head, circles for eyes, and various decorative elements. Designed for use as a chat avatar.\nSOURCE: https://github.com/deftio/quikchat/blob/main/dev/todo.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" width=\"64\" height=\"64\">\n  <rect x=\"18\" y=\"20\" width=\"28\" height=\"28\" rx=\"6\" ry=\"6\" stroke=\"#000\" stroke-width=\"3\" fill=\"none\"/>\n  <circle cx=\"26\" cy=\"30\" r=\"3\" fill=\"#000\"/>\n  <circle cx=\"38\" cy=\"30\" r=\"3\" fill=\"#000\"/>\n  <rect x=\"30\" y=\"14\" width=\"4\" height=\"6\" fill=\"#000\"/>\n  <path d=\"M26 38 Q32 44 38 38\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/>\n  <rect x=\"14\" y=\"24\" width=\"4\" height=\"10\" rx=\"2\" ry=\"2\" stroke=\"#000\" stroke-width=\"3\" fill=\"none\"/>\n  <rect x=\"46\" y=\"24\" width=\"4\" height=\"10\" rx=\"2\" ry=\"2\" stroke=\"#000\" stroke-width=\"3\" fill=\"none\"/>\n</svg>\n```"
  }
]
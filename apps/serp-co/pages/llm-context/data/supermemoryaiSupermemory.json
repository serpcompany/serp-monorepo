[
  {
    "owner": "supermemoryai",
    "repo": "supermemory",
    "content": "TITLE: Defining OpenAPI POST /search Endpoint for SuperMemory AI\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the /search POST endpoint. It specifies that the endpoint is used for searching through documents with metadata filtering capabilities.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/search/post-search.mdx#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /search\n```\n\n----------------------------------------\n\nTITLE: Adding a memory using curl\nDESCRIPTION: A curl command example to add a new memory to your Supermemory account. It requires your API key for authentication and sends a JSON payload with the content of the memory to be added.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/quickstart.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST https://v2.api.supermemory.ai/add \\\n  -H \"x-api-key: YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"content\": \"This is the content of my first memory.\"}'\n```\n\n----------------------------------------\n\nTITLE: Composing Advanced Filters in JSON for Supermemory API\nDESCRIPTION: This JSON structure demonstrates how to create complex filters for Supermemory API queries. It combines multiple conditions using AND/OR operators and includes numeric comparisons. This example filters for records after a specific timestamp, within a certain user group, and matching either a specific team or organization name.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/essentials/metadata-filtering.mdx#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AND\": [\n        {\n            \"filterType\": \"numeric\",\n            \"key\": \"timestamp\",\n            \"value\": \"1742745777\",\n            \"negate\": false,\n            \"numericOperator\": \">\"\n        },\n        {\n            \"key\": \"group\",\n            \"value\": \"jira_users\",\n            \"negate\": false\n        },\n        {\n            \"OR\": [\n                {\n                    \"key\": \"team_name\",\n                    \"value\": \"engineering\",\n                    \"negate\": false\n                },\n                {\n                    \"key\": \"org_name\",\n                    \"value\": \"supermemory\",\n                    \"negate\": false\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Searching memories using curl\nDESCRIPTION: A curl command example to search for memories in your Supermemory account. It requires your API key for authentication and sends a JSON payload with the search query.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/quickstart.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST https://v2.api.supermemory.ai/search \\\n  -H \"x-api-key: YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"q\": \"This is the content of my first memory.\"}'\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET /fastsearch Endpoint\nDESCRIPTION: OpenAPI specification for a fast search endpoint that uses quantized embeddings for lossy but quick search operations. This endpoint is designed for applications where search speed is critical or for text completion features.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/search/get-fastsearch.mdx#2025-04-21_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /fastsearch\n```\n\n----------------------------------------\n\nTITLE: Executing a Filtered Search Query with cURL for Supermemory API\nDESCRIPTION: This cURL command demonstrates how to make a search request to the Supermemory API with custom filters. It includes an API key for authentication, sets the content type to JSON, and provides a search query with filters for specific book and author attributes. The request limits the results to 10 items.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/essentials/metadata-filtering.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location 'https://v2.api.supermemory.ai/search' \\\n--header 'x-api-key: supermemory_RXPx' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"q\": \"How to use teamcity to set up a project?\",\n    \"limit\": 10,\n    \"filters\":  {\n                \"AND\": [\n                    {\n                        \"key\": \"book\",\n                        \"value\": \"maths\",\n                        \"negate\": false\n                    },\n                    {\n                        \"key\": \"author\",\n                        \"value\": \"r.d. sharma\",\n                        \"negate\": false\n                    }\n                ]\n            }\n}'\n```\n\n----------------------------------------\n\nTITLE: Adding Memory with String Metadata in SuperMemory API (JSON)\nDESCRIPTION: Example of adding a memory with string metadata. Using strings enables exact searches within the SuperMemory system. The example shows how to structure metadata as a JSON object with string values.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/memory-management/post-add.mdx#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"classId\": \"21412\",\n   \"year\": \"fifth\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Memory with Numeric Metadata in SuperMemory API (JSON)\nDESCRIPTION: Example of adding a memory with numeric metadata. Using numeric values enables range searches (for time, numbers, prices) within the SuperMemory system. The example shows a price field with a numeric value.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/memory-management/post-add.mdx#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"price\": 1250\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI PUT endpoint for updating memories\nDESCRIPTION: OpenAPI specification for the PUT /update/{id} endpoint that updates an existing memory in the system. This endpoint replaces all existing metadata with the new ones provided in the request.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/memory-management/put-update.mdx#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /update/{id}\n```\n\n----------------------------------------\n\nTITLE: Base URL for Supermemory API\nDESCRIPTION: The base URL endpoint for all Supermemory API requests. All API endpoints should be accessed using this URL as the prefix.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/quickstart.mdx#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://v2.api.supermemory.ai\n```\n\n----------------------------------------\n\nTITLE: Retrieving Connection Details OpenAPI Endpoint\nDESCRIPTION: OpenAPI specification for a GET endpoint that retrieves connection details using a connection ID parameter. The endpoint path uses a path parameter 'connectionId' to identify the specific connection.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/connect/connection-information.mdx#2025-04-21_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /connections/{connectionId}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Definition for SuperMemory Connect\nDESCRIPTION: Defines the GET endpoint for connecting SuperMemory to external applications. The endpoint returns a redirect URL for user authorization.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/connect/connect-app.mdx#2025-04-21_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /connect/{app}\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint in OpenAPI\nDESCRIPTION: OpenAPI specification for a DELETE endpoint that removes a resource by its ID. The endpoint path includes a path parameter for the resource ID to be deleted.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/memory-management/delete-delete.mdx#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /delete/{id}\n```\n\n----------------------------------------\n\nTITLE: Defining PUT /settings Endpoint in OpenAPI Specification\nDESCRIPTION: OpenAPI specification fragment for a settings update endpoint. This appears to be part of a larger API definition file that uses the OpenAPI standard to document the API's endpoints and operations.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/api-reference/endpoints/settings.mdx#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /settings\n```\n\n----------------------------------------\n\nTITLE: Configuring Backend Environment Variables\nDESCRIPTION: Environment variables required for the backend of Supermemory, including API keys and database configuration.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_3\n\nLANGUAGE: env\nCODE:\n```\nWORKOS_API_KEY=your_workos_api_key\nWORKOS_CLIENT_ID=your_workos_client_id\nWORKOS_COOKIE_PASSWORD=your_cookie_password\nDATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/supermemorylocal\"\nCONTENT_WORKFLOW=your_content_workflow\nGEMINI_API_KEY=your_gemini_api_key\nNODE_ENV=development\nOPEN_AI_API_KEY=your_openai_api_key\nBRAINTRUST_API_KEY=your_braintrust_api_key\nRESEND_API_KEY=your_resend_api_key\nTURNSTILE_SECRET_KEY=your_turnstile_secret_key\n```\n\n----------------------------------------\n\nTITLE: Configuring Web App Environment Variables\nDESCRIPTION: Environment variables required for the web application of Supermemory, including WorkOS, database, and third-party service configurations.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_4\n\nLANGUAGE: env\nCODE:\n```\nWORKOS_CLIENT_ID=your_workos_client_id\nWORKOS_API_KEY=your_workos_api_key\nWORKOS_REDIRECT_URI=\"http://localhost:3000/callback\"\nWORKOS_COOKIE_PASSWORD=your_cookie_password\nDATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/supermemorylocal\"\n\nCLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id\nR2_ACCESS_KEY_ID=your_r2_access_key_id\nR2_SECRET_ACCESS_KEY=your_r2_secret_access_key\n\nBACKEND_URL=http://localhost:8787\nOPENAI_API_KEY=your_openai_api_key\nNOTION_CLIENT_ID=your_notion_client_id\nNOTION_CLIENT_SECRET=your_notion_client_secret\n\nNODE_ENV=development\nSTRIPE_CHECKOUT_KEY=your_stripe_checkout_key\nSTRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret\n```\n\n----------------------------------------\n\nTITLE: Backend Environment Configuration\nDESCRIPTION: Environment variables required for the backend application including API keys, database connection, and service configurations.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/SELF-HOSTING-GUIDE.md#2025-04-21_snippet_2\n\nLANGUAGE: env\nCODE:\n```\nWORKOS_API_KEY=your_workos_api_key\nWORKOS_CLIENT_ID=your_workos_client_id \nWORKOS_COOKIE_PASSWORD=your_cookie_password\nDATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/supermemory\"\nCONTENT_WORKFLOW=your_content_workflow\nGEMINI_API_KEY=your_gemini_api_key\nNODE_ENV=development\nOPEN_AI_API_KEY=your_openai_api_key\nBRAINTRUST_API_KEY=your_braintrust_api_key\nRESEND_API_KEY=your_resend_api_key\nTURNSTILE_SECRET_KEY=your_turnstile_secret_key\n```\n\n----------------------------------------\n\nTITLE: Web Application Environment Configuration\nDESCRIPTION: Environment variables for the web application including authentication, storage, and third-party service configurations.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/SELF-HOSTING-GUIDE.md#2025-04-21_snippet_3\n\nLANGUAGE: env\nCODE:\n```\nWORKOS_CLIENT_ID=your_workos_client_id\nWORKOS_API_KEY=your_workos_api_key\nWORKOS_REDIRECT_URI=\"http://localhost:3000/callback\"\nWORKOS_COOKIE_PASSWORD=your_cookie_password\nDATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/supermemorydhravya\"\n\nCLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id\nR2_ACCESS_KEY_ID=your_r2_access_key_id\nR2_SECRET_ACCESS_KEY=your_r2_secret_access_key\n\nBACKEND_URL=http://localhost:8787\nOPENAI_API_KEY=your_openai_api_key\nNOTION_CLIENT_ID=your_notion_client_id\nNOTION_CLIENT_SECRET=your_notion_client_secret\n\nNODE_ENV=development\nSTRIPE_CHECKOUT_KEY=your_stripe_checkout_key\nSTRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret\n```\n\n----------------------------------------\n\nTITLE: Generating and Applying Database Migrations\nDESCRIPTION: Commands to generate and apply database migrations for Supermemory.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbun run generate-migration\nbun run migrate:local\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing Supermemory Repository\nDESCRIPTION: Commands to clone the Supermemory repository, install Bun globally, and install project dependencies.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/supermemoryai/supermemory.git\ncd supermemory\nnpm i -g bun\nbun install\n```\n\n----------------------------------------\n\nTITLE: Starting PostgreSQL Database with Docker Compose\nDESCRIPTION: Command to start a PostgreSQL database with pgvector extension using Docker Compose.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Starting PostgreSQL Database with Docker Compose\nDESCRIPTION: Launches a PostgreSQL database with pgvector extension locally on port 5432 using Docker Compose.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/SELF-HOSTING-GUIDE.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Development Servers\nDESCRIPTION: Commands to install project dependencies and start the development servers for Supermemory.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/self-hosting.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nbun install\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Database Migration Commands\nDESCRIPTION: Commands for generating and applying database migrations using Bun runtime.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/SELF-HOSTING-GUIDE.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbun run generate-migration\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun run migrate:local\n```\n\n----------------------------------------\n\nTITLE: Application Setup Commands\nDESCRIPTION: Commands for installing dependencies and starting the development servers using Bun package manager.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/SELF-HOSTING-GUIDE.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nbun install\n```\n\nLANGUAGE: bash\nCODE:\n```\nbun run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Development Server for SuperMemory\nDESCRIPTION: Commands to install project dependencies and start the development server for local testing and development of the SuperMemory project.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/backend/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Deploying SuperMemory Project\nDESCRIPTION: Command to deploy the SuperMemory project to a production environment after development and testing are complete.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/backend/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Running Remix Development Server\nDESCRIPTION: Command to start the local development server for a Remix application.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/web/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Building and Starting with Wrangler\nDESCRIPTION: Commands to build the application and run it using Wrangler, Cloudflare's command-line tool.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/web/README.md#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Generating Cloudflare Binding Types\nDESCRIPTION: Command to generate TypeScript types for Cloudflare bindings defined in wrangler.toml. This needs to be rerun after any changes to the configuration file.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/web/README.md#2025-04-21_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run typegen\n```\n\n----------------------------------------\n\nTITLE: Building for Production\nDESCRIPTION: Command to build the Remix application for production deployment.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/web/README.md#2025-04-21_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Deploying to Cloudflare Pages\nDESCRIPTION: Command to deploy the built application to Cloudflare Pages hosting.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/web/README.md#2025-04-21_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Mintlify CLI with npm\nDESCRIPTION: Command to install the Mintlify CLI globally using npm, which is required to preview documentation changes locally.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g mintlify\n```\n\n----------------------------------------\n\nTITLE: Running Mintlify Development Server\nDESCRIPTION: Command to start the Mintlify development server at the root of your documentation where the mint.json configuration file is located.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Release Notes in Markdown\nDESCRIPTION: Markdown formatted release notes for version 0.1.1 documenting new features including multi-space search, API versioning updates, and documentation improvements.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/changelog/overview.mdx#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Product Updates\"\ndescription: \"New updates and improvements\"\nmode: \"center\"\n---\n\n<Update label=\"2025-02-01\" description=\"v0.1.1\">\n  - You can now search for memories in multiple spaces at once.\n  - All endpoints have been updated to `/v1` for better versioning\n  - Improved documentation and examples\n  - Interactive [API Playground](https://docs.supermemory.ai/api-reference)\n</Update>\n```\n\n----------------------------------------\n\nTITLE: Markdown Structure for Supermemory Documentation\nDESCRIPTION: The main documentation structure using Mintlify-style markdown with custom components like Steps, Cards, and CardGroups to organize content about Supermemory's features and capabilities.\nSOURCE: https://github.com/supermemoryai/supermemory/blob/main/apps/docs/introduction.mdx#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Introduction\"\ndescription: \"Supermemory is the Memory API for the AI era.\"\n---\n```"
  }
]
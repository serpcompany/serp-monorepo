[
  {
    "owner": "dart-lang",
    "repo": "web",
    "content": "TITLE: Basic DOM Manipulation with 'package:web' in Dart\nDESCRIPTION: Demonstrates how to use the 'web' package in Dart to interact with the Document Object Model (DOM). It imports the package, selects a 'div' element using `document.querySelector`, and sets its text content dynamically using the `text` property.\nSOURCE: https://github.com/dart-lang/web/blob/main/README.md#_snippet_0\n\nLANGUAGE: Dart\nCODE:\n```\nimport 'package:web/web.dart';\n\nvoid main() {\n  final div = document.querySelector('div')!;\n  div.text = 'Text set at ${DateTime.now()}';\n}\n```\n\n----------------------------------------\n\nTITLE: Setting DOM Element Text Using Package Web in Dart\nDESCRIPTION: This Dart code snippet demonstrates importing the package:web library to access browser document APIs and modify a DOM element's text. It selects the first <div> element in the document and sets its text content to a string containing the current date and time. The snippet showcases basic DOM manipulation with package:web, relying on Dart compiled to JavaScript or WebAssembly. The code depends on the package:web API exposing the document and querySelector functionality similar to dart:html.\nSOURCE: https://github.com/dart-lang/web/blob/main/web/README.md#_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:web/web.dart';\n\nvoid main() {\n  final div = document.querySelector('div')!;\n  div.text = 'Text set at ${DateTime.now()}';\n}\n```\n\n----------------------------------------\n\nTITLE: Regenerating Web Bindings using update_bindings.dart in Dart - shell\nDESCRIPTION: This snippet demonstrates how to regenerate Dart bindings from Web IDL definitions using the provided Dart script. No additional dependencies beyond Dart itself are required, but the script must be present in the 'bin' directory. Running this command reads current IDL versions and writes updated bindings to the package. Execute the command from the project root; takes no parameters unless updating or customizing behavior.\nSOURCE: https://github.com/dart-lang/web/blob/main/web_generator/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndart bin/update_bindings.dart\n```\n\n----------------------------------------\n\nTITLE: Updating to Latest Web IDL Versions via update_bindings.dart with --update - shell\nDESCRIPTION: This command updates the binding source to use the latest upstream Web IDL versions and then regenerates the Dart bindings. It requires that 'update_bindings.dart' exists in the 'bin' directory and is invoked from the repository root. The '--update' flag ensures that IDL dependencies are automatically updated; no additional arguments are needed.\nSOURCE: https://github.com/dart-lang/web/blob/main/web_generator/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndart bin/update_bindings.dart --update\n```\n\n----------------------------------------\n\nTITLE: Scraping Latest MDN Documentation using scrape_mdn.dart in Dart - shell\nDESCRIPTION: This snippet shows how to update the Dart documentation comments by scraping content from the MDN Web Docs using a Dart script. The script saves the updated documentation as JSON under 'third_party/mdn/mdn.json'. It requires the 'scrape_mdn.dart' file in the 'bin' folder and an active internet connection to download MDN data. Run this command to ensure documentation in the package is synchronized with MDN.\nSOURCE: https://github.com/dart-lang/web/blob/main/web_generator/README.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndart bin/scrape_mdn.dart\n```\n\n----------------------------------------\n\nTITLE: Generating All Web Bindings (Including Experimental) using update_bindings.dart - shell\nDESCRIPTION: This command forces the regeneration of all Dart bindings, bypassing compatibility data filters from MDN to include experimental and non-standard web APIs. Requires that 'update_bindings.dart' is in the 'bin' directory and that the project dependencies are up to date. Use the '--generate-all' flag to emit all available interface members regardless of compatibility status.\nSOURCE: https://github.com/dart-lang/web/blob/main/web_generator/README.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndart bin/update_bindings.dart --generate-all\n```\n\n----------------------------------------\n\nTITLE: Running Dart Fix Tests Manually - Bash\nDESCRIPTION: Provides the command-line instructions to navigate to the test directory and execute the dart fix tool with the --compare-to-golden flag, allowing manual testing and comparison of refactoring outputs against expected golden files.\nSOURCE: https://github.com/dart-lang/web/blob/main/web/test_fixes/README.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ncd test_fixes\ndart fix --compare-to-golden\n```"
  }
]
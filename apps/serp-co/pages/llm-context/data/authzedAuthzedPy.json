[
  {
    "owner": "authzed",
    "repo": "authzed-py",
    "content": "TITLE: Performing Permission Check with Authzed in Python\nDESCRIPTION: Example of performing a permission check using the Authzed client. It demonstrates how to create object and subject references, and make a CheckPermission API call.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom authzed.api.v1 import (\n    CheckPermissionRequest,\n    CheckPermissionResponse,\n    ObjectReference,\n    SubjectReference,\n)\n\n\npost_one = ObjectReference(object_type=\"blog/post\", object_id=\"1\")\nemilia = SubjectReference(object=ObjectReference(\n    object_type=\"blog/user\",\n    object_id=\"emilia\",\n))\n\n# Is Emilia in the set of users that can read post #1?\nresp = client.CheckPermission(CheckPermissionRequest(\n    resource=post_one,\n    permission=\"reader\",\n    subject=emilia,\n))\nassert resp.permissionship == CheckPermissionResponse.PERMISSIONSHIP_HAS_PERMISSION\n```\n\n----------------------------------------\n\nTITLE: Initializing Authzed Client in Python\nDESCRIPTION: Example of initializing an Authzed client using the v1 API. It demonstrates how to create a client instance with a bearer token for authentication.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom authzed.api.v1 import Client\nfrom grpcutil import bearer_token_credentials\n\n\nclient = Client(\n    \"grpc.authzed.com:443\",\n    bearer_token_credentials(\"t_your_token_here_1234567deadbeef\"),\n)\n```\n\n----------------------------------------\n\nTITLE: Installing Authzed Python Client with pip\nDESCRIPTION: Command to install the Authzed Python client library using pip package manager.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install authzed\n```\n\n----------------------------------------\n\nTITLE: Initializing Insecure Authzed Client in Python\nDESCRIPTION: Example of initializing an insecure Authzed client for development or testing purposes, particularly useful in Docker Compose environments.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom authzed.api.v1 import InsecureClient\n\nclient = InsecureClient(\n    \"spicedb:50051\",\n    \"my super secret token\"\n)\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for authzed-py\nDESCRIPTION: Steps to install development dependencies, run a SpiceDB test server in Docker, and execute pytest for the project.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npoetry install --with dev\ndocker run -d -p 50051:50051 -p 50052:50052 --entrypoint spicedb quay.io/authzed/spicedb:latest-debug serve-testing\npoetry run pytest -vv .\n```\n\n----------------------------------------\n\nTITLE: Running Linters for authzed-py\nDESCRIPTION: Commands to install development dependencies, activate the virtual environment, and run various linters including pyflakes, black, and isort on Python files.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npoetry install --with dev\npoetry shell\nfind . -name \"*.py\" | grep -v \"_pb2\" | xargs pyflakes\nblack .\nfind . -name \"*.py\" | grep -v \"_pb2\" | xargs isort\n```\n\n----------------------------------------\n\nTITLE: Regenerating Protobuf Code\nDESCRIPTION: Command to regenerate the Protobuf code from API definitions using buf.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./buf.gen.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Dependencies with Poetry\nDESCRIPTION: Demonstrates how to add a new dependency to the project using Poetry package manager.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npoetry add library\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies with Poetry\nDESCRIPTION: Shows how to update all project dependencies using the Poetry package manager.\nSOURCE: https://github.com/authzed/authzed-py/blob/main/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npoetry update\n```"
  }
]
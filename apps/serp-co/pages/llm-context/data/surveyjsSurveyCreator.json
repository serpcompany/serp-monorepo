[
  {
    "owner": "surveyjs",
    "repo": "survey-creator",
    "content": "TITLE: Complete Angular Implementation for Survey Creator with Save/Load\nDESCRIPTION: Full implementation of a Survey Creator component in Angular that includes HTML template, TypeScript component, CSS styling, and module configuration with both save and load functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<!-- survey-creator.component.html -->\n<div id=\"surveyCreator\">\n  <survey-creator [model]=\"surveyCreatorModel\"></survey-creator>\n</div>\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// survey-creator.component.ts\nimport { Component, OnInit } from \"@angular/core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\n\nconst creatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\n@Component({\n  selector: 'survey-creator-component',\n  templateUrl: './survey-creator.component.html',\n  styleUrls: ['./survey-creator.component.css']\n})\nexport class SurveyCreatorComponent implements OnInit {\n  surveyCreatorModel: SurveyCreatorModel;\n  ngOnInit() {\n    const creator = new SurveyCreatorModel(creatorOptions);\n    creator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n\n    creator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n      window.localStorage.setItem(\"survey-json\", creator.text);\n      callback(saveNo, true);\n      // saveSurveyJson(\n      //     \"https://your-web-service.com/\",\n      //     creator.JSON,\n      //     saveNo,\n      //     callback\n      // );\n    };\n    this.surveyCreatorModel = creator;\n  }\n}\n\n// function saveSurveyJson(url: string | URL, json: object, saveNo: number, callback: Function) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\nLANGUAGE: css\nCODE:\n```\n/* survey-creator.component.css */\n#surveyCreator {\n    height: 100vh;\n    width: 100vw;\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SurveyCreatorModule } from 'survey-creator-angular';\n\nimport { AppComponent } from './app.component';\nimport { SurveyCreatorComponent } from './survey-creator/survey-creator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SurveyCreatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    SurveyCreatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Using Advanced Aggregation Functions in SurveyJS for Matrix and Panel Questions\nDESCRIPTION: Examples of using advanced aggregation functions sumInArray, minInArray, maxInArray, avgInArray, and countInArray in SurveyJS. These functions operate on specific columns in matrix questions or questions within dynamic panels, with optional filtering.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_39\n\nLANGUAGE: markdown\nCODE:\n```\n\"sumInArray({matrixdynamic}, 'total', {categoryId} = 1)\"\n\"minInArray({matrixdynamic}, 'quantity', {quantity} > 0 and {categoryId} = 1)\"\n\"maxInArray({matrixdynamic}, 'quantity', {quantity} < 100)\"\n\"avgInArray({matrixdynamic}, 'quantity', {quantity} > 0)\"\n\"countInArray({matrixdynamic}, 'quantity', {quantity} > 0 and {categoryId} = 1)\"\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator JavaScript Initialization\nDESCRIPTION: JavaScript code for initializing SurveyJS Creator with configuration options, default JSON survey template, and local storage persistence. The commented out sections show how to implement file uploads and server-side survey saving.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_13\n\nLANGUAGE: js\nCODE:\n```\nconst creatorOptions = {\n    autoSaveEnabled: true,\n    collapseOnDrag: true\n};\n\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo, callback) => { \n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n    // saveSurveyJson(\n    //     \"https://your-web-service.com/\",\n    //     creator.JSON,\n    //     saveNo,\n    //     callback\n    // );\n};\n\n// creator.onUploadFile.add((_, options) => {\n//     const formData = new FormData();\n//     options.files.forEach(file => {\n//         formData.append(file.name, file);\n//     });\n//     fetch(\"https://example.com/uploadFiles\", {\n//         method: \"post\",\n//         body: formData\n//     }).then(response => response.json())\n//         .then(result => {\n//             options.callback(\n//                 \"success\",\n//                 // A link to the uploaded file\n//                 \"https://example.com/files?name=\" + result[options.files[0].name]\n//             );\n//         })\n//         .catch(error => {\n//             options.callback('error');\n//         });\n// });\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(document.getElementById(\"surveyCreator\"));\n});\n\n// function saveSurveyJson(url, json, saveNo, callback) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Creator Implementation\nDESCRIPTION: Full HTML and JavaScript implementation showing Survey Creator setup with save/load functionality and styling.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator / Form Builder</title>\n    <meta charset=\"utf-8\">\n    <link  href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-js/survey-creator-js.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n</html>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    autoSaveEnabled: true,\n    collapseOnDrag: true\n};\n\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo, callback) => { \n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n    // saveSurveyJson(\n    //     \"https://your-web-service.com/\",\n    //     creator.JSON,\n    //     saveNo,\n    //     callback\n    // );\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(document.getElementById(\"surveyCreator\"));\n});\n\n// function saveSurveyJson(url, json, saveNo, callback) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Date Function dateDiff() Examples\nDESCRIPTION: Examples of using the dateDiff() function to calculate differences between dates in various units (days, months, years, hours, minutes).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n\"dateDiff('2000-01-01', '2000-02-01', \\\"days\\\")\"\n\"dateDiff('2000-01-01', '2000-04-01', \\\"months\\\")\"\n\"dateDiff('2000-01-01', '2009-02-01', \\\"years\\\")\"\n\"dateDiff('2000-01-01T01:00:00', '2000-01-01T03:00:00', \\\"hours\\\")\"\n\"dateDiff('2000-01-01T01:00:00', '2000-01-01T01:45:00', \\\"minutes\\\")\"\n```\n\n----------------------------------------\n\nTITLE: Complete SurveyCreator Implementation in Vue.js\nDESCRIPTION: A full Vue.js component implementation showing how to initialize SurveyJS Creator with options, load a survey schema with default fallback, and set up auto-saving to localStorage. It includes all necessary imports and styling requirements.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<!-- components/SurveyCreator.vue -->\n<script setup lang=\"ts\">\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nimport type { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nimport { SurveyCreatorComponent } from \"survey-creator-vue\";\n\nconst creatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n  window.localStorage.setItem(\"survey-json\", creator.text);\n  callback(saveNo, true);\n  // saveSurveyJson(\n  //     \"https://your-web-service.com/\",\n  //     creator.JSON,\n  //     saveNo,\n  //     callback\n  // );\n};\n\n// function saveSurveyJson(url: string, json: object, saveNo: number, callback: Function) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n</script>\n\n<template>\n  <SurveyCreatorComponent :model=\"creator\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator Component Implementation in Angular\nDESCRIPTION: This TypeScript code implements the SurveyCreatorComponent class, initializing the SurveyCreatorModel with options, default JSON, and saving functionality. It also includes commented-out code for file upload handling.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n// survey-creator.component.ts\nimport { Component, OnInit } from \"@angular/core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\n\nconst creatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\n@Component({\n  selector: 'survey-creator-component',\n  templateUrl: './survey-creator.component.html',\n  styleUrls: ['./survey-creator.component.css']\n})\nexport class SurveyCreatorComponent implements OnInit {\n  surveyCreatorModel: SurveyCreatorModel;\n  ngOnInit() {\n    const creator = new SurveyCreatorModel(creatorOptions);\n    creator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n\n    creator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n      window.localStorage.setItem(\"survey-json\", creator.text);\n      callback(saveNo, true);\n      // saveSurveyJson(\n      //     \"https://your-web-service.com/\",\n      //     creator.JSON,\n      //     saveNo,\n      //     callback\n      // );\n    };\n\n    // creator.onUploadFile.add((_, options) => {\n    //   const formData = new FormData();\n    //   options.files.forEach((file: File) => {\n    //     formData.append(file.name, file);\n    //   });\n    //   fetch(\"https://example.com/uploadFiles\", {\n    //     method: \"post\",\n    //     body: formData\n    //   }).then(response => response.json())\n    //     .then(result => {\n    //       options.callback(\n    //         \"success\",\n    //         // A link to the uploaded file\n    //         \"https://example.com/files?name=\" + result[options.files[0].name]\n    //       );\n    //     })\n    //     .catch(error => {\n    //       options.callback('error');\n    //     });\n    // });\n\n    this.surveyCreatorModel = creator;\n  }\n}\n\n// function saveSurveyJson(url: string | URL, json: object, saveNo: number, callback: Function) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Configuring SurveyJS Form Builder in Angular Component\nDESCRIPTION: Angular component code to configure and instantiate the SurveyJS Form Builder. It sets up creator options and initializes the SurveyCreatorModel.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Component, OnInit } from '@angular/core';\nimport { SurveyCreatorModel } from \"survey-creator-core\";\n\n@Component({\n  selector: 'survey-creator-component',\n  templateUrl: './survey-creator.component.html',\n  styleUrls: ['./survey-creator.component.css']\n})\nexport class SurveyCreatorComponent implements OnInit {\n  surveyCreatorModel: SurveyCreatorModel;\n  ngOnInit() {\n    const creatorOptions = {\n      autoSaveEnabled: true,\n      collapseOnDrag: true\n    };\n    const creator = new SurveyCreatorModel(creatorOptions);\n    this.surveyCreatorModel = creator;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Matrix Cell Access\nDESCRIPTION: Examples of accessing matrix cells using various syntaxes for different matrix types.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n{row.column1}\n{matrix.row1.column1}\n{question1-total.column1}\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Creator Implementation in React\nDESCRIPTION: This snippet provides a full implementation of the Survey Creator component in React. It includes initialization, saving functionality, and loading of survey schemas.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n'use client'\n\nimport { useState } from \"react\";\nimport { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreatorComponent, SurveyCreator } from \"survey-creator-react\";\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nconst defaultCreatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  creator.saveSurveyFunc = (saveNo: number, callback: (num: number, status: boolean) => void) => {\n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n    // saveSurveyJson(\n    //     \"https://your-web-service.com/\",\n    //     creator.JSON,\n    //     saveNo,\n    //     callback\n    // );\n  };\n\n  creator.text = JSON.stringify(props.json) || window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <SurveyCreatorComponent creator={creator} />\n    </div>\n  );\n}\n\n// function saveSurveyJson (url: string, json: object, saveNo: number, callback: (num: number, status: boolean) => void) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Full SurveyCreator Component Implementation in React\nDESCRIPTION: This code snippet shows the complete implementation of the SurveyCreator component in React. It includes the creation of the SurveyCreator instance, handling of save functionality, and the setup for file uploads (commented out).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\n'use client'\n\nimport { useState } from \"react\";\nimport {\n  ICreatorOptions,\n  // SurveyCreatorModel,\n  // UploadFileEvent\n} from \"survey-creator-core\";\nimport { SurveyCreatorComponent, SurveyCreator } from \"survey-creator-react\";\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nconst defaultCreatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  creator.saveSurveyFunc = (saveNo: number, callback: (num: number, status: boolean) => void) => {\n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n    // saveSurveyJson(\n    //     \"https://your-web-service.com/\",\n    //     creator.JSON,\n    //     saveNo,\n    //     callback\n    // );\n  };\n\n  // creator.onUploadFile.add((_: SurveyCreatorModel, options: UploadFileEvent) => {\n  //   const formData = new FormData();\n  //   options.files.forEach((file: File) => {\n  //     formData.append(file.name, file);\n  //   });\n  //   fetch(\"https://example.com/uploadFiles\", {\n  //     method: \"post\",\n  //     body: formData\n  //   }).then(response => response.json())\n  //     .then(result => {\n  //       options.callback(\n  //         \"success\",\n  //         // A link to the uploaded file\n  //         \"https://example.com/files?name=\" + result[options.files[0].name]\n  //       );\n  //     })\n  //     .catch(error => {\n  //       options.callback('error');\n  //     });\n  // });\n\n  creator.text = JSON.stringify(props.json) || window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <SurveyCreatorComponent creator={creator} />\n    </div>\n  );\n}\n\n// function saveSurveyJson (url: string, json: object, saveNo: number, callback: (num: number, status: boolean) => void) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Initializing and Configuring SurveyJS Creator in JavaScript\nDESCRIPTION: This JavaScript code initializes and configures the SurveyJS Creator, including setting up options, loading saved data, and implementing the save functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    showLogicTab: true,\n    isAutoSave: true\n};\n\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo, callback) => { \n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n    // saveSurveyJson(\n    //     \"https://your-web-service.com/\",\n    //     creator.JSON,\n    //     saveNo,\n    //     callback\n    // );\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(\"surveyCreator\");\n});\n\n// function saveSurveyJson(url, json, saveNo, callback) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n```\n\n----------------------------------------\n\nTITLE: Complete SurveyJS Creator Implementation with Vue 3\nDESCRIPTION: Full implementation of a SurveyJS Creator component in Vue 3 with TypeScript. It includes configuration options, local storage for saving surveys, and commented-out code for image uploads and server-side saving functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<!-- components/SurveyCreator.vue -->\n<script setup lang=\"ts\">\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nimport type { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nimport { SurveyCreatorComponent } from \"survey-creator-vue\";\n\nconst creatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n  window.localStorage.setItem(\"survey-json\", creator.text);\n  callback(saveNo, true);\n  // saveSurveyJson(\n  //     \"https://your-web-service.com/\",\n  //     creator.JSON,\n  //     saveNo,\n  //     callback\n  // );\n};\n\n// creator.onUploadFile.add((_, options) => {\n//   const formData = new FormData();\n//   options.files.forEach((file: File) => {\n//     formData.append(file.name, file);\n//   });\n//   fetch(\"https://example.com/uploadFiles\", {\n//     method: \"post\",\n//     body: formData\n//   }).then(response => response.json())\n//     .then(result => {\n//       options.callback(\n//         \"success\",\n//         // A link to the uploaded file\n//         \"https://example.com/files?name=\" + result[options.files[0].name]\n//       );\n//     })\n//     .catch(error => {\n//       options.callback('error');\n//     });\n// });\n\n// function saveSurveyJson(url: string, json: object, saveNo: number, callback: Function) {\n//   fetch(url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json;charset=UTF-8'\n//     },\n//     body: JSON.stringify(json)\n//   })\n//   .then(response => {\n//     if (response.ok) {\n//       callback(saveNo, true);\n//     } else {\n//       callback(saveNo, false);\n//     }\n//   })\n//   .catch(error => {\n//     callback(saveNo, false);\n//   });\n// }\n</script>\n\n<template>\n  <SurveyCreatorComponent :model=\"creator\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Schema with Default Values\nDESCRIPTION: Shows how to load a survey model schema from localStorage with fallback to default JSON if no saved schema exists.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n```\n\n----------------------------------------\n\nTITLE: Dynamic Panel Date Validation\nDESCRIPTION: Expression for validating that a start date is before an end date within a dynamic panel.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{panel.start-date} < {panel.end-date}\n```\n\n----------------------------------------\n\nTITLE: Validating Survey JSON Schema on NodeJS Server\nDESCRIPTION: Server-side code that demonstrates how to validate and clean a survey JSON schema before saving it. Uses SurveyJS's Model class to remove incorrect properties and values.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Server-side code for a NodeJS backend\nimport { Model } from \"survey-core\";\n\nconst incorrectSurveyJson = { ... };\nconst survey = new Model(surveyJson);\nconst correctSurveyJson = survey.toJSON();\n// ...\n// Save `correctSurveyJson` in a database\n// ...\n```\n\n----------------------------------------\n\nTITLE: Implementing saveSurveyFunc for Saving Survey Model in Vue.js\nDESCRIPTION: This snippet demonstrates how to implement the saveSurveyFunc function in a Vue.js component to save survey model schema to either localStorage or a web service. It includes a helper function to handle API calls with proper error handling and callback execution.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n// ...\ncreator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n  // If you use localStorage:\n  window.localStorage.setItem(\"survey-json\", creator.text);\n  callback(saveNo, true);\n\n  // If you use a web service:\n  saveSurveyJson(\n      \"https://your-web-service.com/\",\n      creator.JSON,\n      saveNo,\n      callback\n  );\n};\n\n// If you use a web service:\nfunction saveSurveyJson(url: string, json: object, saveNo: number, callback: Function) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n</script>\n\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Server-side Survey JSON Validation in NodeJS\nDESCRIPTION: Demonstrates how to validate and clean survey JSON schemas on the server side using the SurveyJS Model class.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Server-side code for a NodeJS backend\nimport { Model } from \"survey-core\";\n\nconst incorrectSurveyJson = { ... };\nconst survey = new Model(surveyJson);\nconst correctSurveyJson = survey.toJSON();\n// ...\n// Save `correctSurveyJson` in a database\n// ...\n```\n\n----------------------------------------\n\nTITLE: Combined Duration Expression for Years and Months\nDESCRIPTION: Expression that combines full years and remaining months to create a formatted duration string.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-calculate-duration-between-dates-within-form.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndateDiff({since-date}, today(), 'years') + ' years' + ' ' + dateDiff({since-date}, today(), 'months') % 12 + ' months'\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator HTML Setup\nDESCRIPTION: HTML boilerplate for setting up SurveyJS Creator with necessary CSS and JavaScript dependencies. It includes links to Survey Core, Survey JS UI, and Survey Creator libraries from CDN.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator / Form Builder</title>\n    <meta charset=\"utf-8\">\n    <link  href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-js/survey-creator-js.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator Initialization and Configuration\nDESCRIPTION: JavaScript code for initializing and configuring SurveyJS Creator with local storage integration and default survey structure.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    showLogicTab: true,\n    isAutoSave: true\n};\n\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\ncreator.saveSurveyFunc = (saveNo, callback) => { \n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(\"surveyCreator\");\n});\n```\n\n----------------------------------------\n\nTITLE: Rendering Survey Creator with Full Configuration\nDESCRIPTION: Complete JavaScript implementation showing Survey Creator configuration, initialization, and rendering in a DOM element after the page has loaded.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    autoSaveEnabled: true,\n    collapseOnDrag: true\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(document.getElementById(\"surveyCreator\"));\n});\n```\n\n----------------------------------------\n\nTITLE: Rendering Survey Creator in HTML and JavaScript\nDESCRIPTION: This snippet demonstrates how to create a container for Survey Creator in HTML and render it using JavaScript when the DOM is fully loaded.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    creator.render(\"surveyCreator\");\n});\n```\n\n----------------------------------------\n\nTITLE: Calculating Date Duration Expression in Dynamic Matrix\nDESCRIPTION: Expression used in a Dynamic Matrix column to calculate the duration between two dates in days using the dateDiff() function.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-use-column-totals-in-matrix-questions.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndateDiff({row.from}, {row.to}, 'days')\n```\n\n----------------------------------------\n\nTITLE: Full SurveyCreator Component Implementation\nDESCRIPTION: Complete implementation of the SurveyCreator component showing imports, configuration, state management, and component structure.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\nimport { useState } from \"react\";\nimport { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreator } from \"survey-creator-react\";\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nconst defaultCreatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  return \"...\";\n}\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Implementation with Survey Creator\nDESCRIPTION: Full HTML implementation with all required resources and the container for the Survey Creator component with proper structure.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator / Form Builder</title>\n    <meta charset=\"utf-8\">\n    <link  href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-js/survey-creator-js.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Save Functionality for Survey Models in Angular\nDESCRIPTION: This snippet demonstrates how to implement the saveSurveyFunc to persist survey JSON data either in localStorage or via a web service. It includes an Angular component setup and a helper function for API communication.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// ...\n@Component({\n  // ...\n})\nexport class SurveyCreatorComponent implements OnInit {\n  ngOnInit() {\n    // ...\n    creator.saveSurveyFunc = (saveNo: number, callback: Function) => { \n      // If you use localStorage:\n      window.localStorage.setItem(\"survey-json\", creator.text);\n      callback(saveNo, true);\n\n      // If you use a web service:\n      saveSurveyJson(\n          \"https://your-web-service.com/\",\n          creator.JSON,\n          saveNo,\n          callback\n      );\n    };\n    // ...\n  }\n}\n\n// If you use a web service:\nfunction saveSurveyJson(url: string | URL, json: object, saveNo: number, callback: Function) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Image Upload in SurveyJS Creator with React\nDESCRIPTION: This code snippet demonstrates how to handle image uploads in SurveyJS Creator using React. It shows the implementation of the onUploadFile event handler to upload files to a server and update the survey with the resulting image links.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\nimport { SurveyCreatorModel, UploadFileEvent } from \"survey-creator-core\";\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  // ...\n  creator.onUploadFile.add((_: SurveyCreatorModel, options: UploadFileEvent) => {\n    const formData = new FormData();\n    options.files.forEach((file: File) => {\n      formData.append(file.name, file);\n    });\n    fetch(\"https://example.com/uploadFiles\", {\n      method: \"post\",\n      body: formData\n    }).then(response => response.json())\n      .then(result => {\n        options.callback(\n          \"success\",\n          // A link to the uploaded file\n          \"https://example.com/files?name=\" + result[options.files[0].name]\n        );\n      })\n      .catch(error => {\n        options.callback('error');\n      });\n  });\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Survey Creator in JavaScript\nDESCRIPTION: JavaScript code that creates a configuration object for Survey Creator with autoSaveEnabled and collapseOnDrag options, then initializes the creator instance with these settings.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    autoSaveEnabled: true,\n    collapseOnDrag: true\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\n```\n\n----------------------------------------\n\nTITLE: Date Function month() Example\nDESCRIPTION: Example of using the month() function to extract the month from a date (1-12).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n\"month('2000-01-01')\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Image Upload in SurveyJS Creator with Vue 3\nDESCRIPTION: This code demonstrates how to handle the onUploadFile event in SurveyJS Creator to upload images to a server instead of embedding them as Base64 URLs in the JSON schema. It shows a Vue 3 component with TypeScript that sends images to a server endpoint and processes the response.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n// ...\ncreator.onUploadFile.add((_, options) => {\n  const formData = new FormData();\n  options.files.forEach((file: File) => {\n    formData.append(file.name, file);\n  });\n  fetch(\"https://example.com/uploadFiles\", {\n    method: \"post\",\n    body: formData\n  }).then(response => response.json())\n    .then(result => {\n      options.callback(\n        \"success\",\n        // A link to the uploaded file\n        \"https://example.com/files?name=\" + result[options.files[0].name]\n      );\n    })\n    .catch(error => {\n      options.callback('error');\n    });\n});\n// ...\n</script>\n\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Creator Implementation\nDESCRIPTION: Full code showing both the SurveyCreator component and the Next.js page that implements it with dynamic importing.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n'use client'\n\nimport { useState } from \"react\";\nimport { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreator, SurveyCreatorComponent } from \"survey-creator-react\";\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nconst defaultCreatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <SurveyCreatorComponent creator={creator} />\n    </div>\n  );\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// creator/page.tsx\nimport dynamic from 'next/dynamic';\n\nconst SurveyCreatorComponent = dynamic(() => import(\"@/components/SurveyCreator\"), {\n  ssr: false\n});\n\nexport default function SurveyCreator() {\n  return (\n    <SurveyCreatorComponent />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing saveSurveyFunc for Saving Survey JSON in JavaScript\nDESCRIPTION: This snippet shows how to implement the saveSurveyFunc to save a survey model schema in localStorage or a web service. It includes error handling for web service requests.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.saveSurveyFunc = (saveNo, callback) => {\n    // If you use localStorage:\n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n\n    // If you use a web service:\n    saveSurveyJson(\n        \"https://your-web-service.com/\",\n        creator.JSON,\n        saveNo,\n        callback\n    );\n};\n\n// If you use a web service:\nfunction saveSurveyJson(url, json, saveNo, callback) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Model Schema in SurveyJS Creator\nDESCRIPTION: This code snippet demonstrates how to load a survey model schema JSON into Survey Creator. It retrieves the schema from localStorage or uses a default JSON if not found.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst defaultJson = {\n    pages: [{\n        name: \"Name\",\n        elements: [{\n            name: \"FirstName\",\n            title: \"Enter your first name:\",\n            type: \"text\"\n        }, {\n            name: \"LastName\",\n            title: \"Enter your last name:\",\n            type: \"text\"\n        }]\n    }]\n};\n\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n```\n\n----------------------------------------\n\nTITLE: Date Function age() Example\nDESCRIPTION: Example of using the age() function to calculate age based on a birthdate.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n\"age('2000-01-01')\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Survey Creator in JavaScript\nDESCRIPTION: This code configures Survey Creator options and instantiates the SurveyCreator object. It enables the Logic tab and auto-save functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    showLogicTab: true,\n    isAutoSave: true\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator Component Template in Angular\nDESCRIPTION: This HTML template defines the structure for the SurveyJS Creator component in an Angular application. It uses the survey-creator element with a model binding.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<!-- survey-creator.component.html -->\n<div id=\"surveyCreator\">\n  <survey-creator [model]=\"surveyCreatorModel\"></survey-creator>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing File Upload Handler in SurveyJS Creator\nDESCRIPTION: This code snippet demonstrates how to handle the onUploadFile event in SurveyJS Creator to upload images to a server. It creates a FormData object with the image files, sends them to a server endpoint, and returns the image URL to be stored in the survey JSON.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_11\n\nLANGUAGE: js\nCODE:\n```\ncreator.onUploadFile.add((_, options) => {\n    const formData = new FormData();\n    options.files.forEach(file => {\n        formData.append(file.name, file);\n    });\n    fetch(\"https://example.com/uploadFiles\", {\n        method: \"post\",\n        body: formData\n    }).then(response => response.json())\n        .then(result => {\n            options.callback(\n                \"success\",\n                // A link to the uploaded file\n                \"https://example.com/files?name=\" + result[options.files[0].name]\n            );\n        })\n        .catch(error => {\n            options.callback('error');\n        });\n});\n```\n\n----------------------------------------\n\nTITLE: Hiding Change Type Adorner for Dropdown Questions in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the onElementAllowOperations event to hide the 'Change Type' adorner for Dropdown questions in Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/customize-survey-creation-process.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.onElementAllowOperations.add((_, options) => {\n  if (options.element?.getType() === \"dropdown\") {\n    options.allowChangeType = false;\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Summing Numerical Values Across Matrix Columns\nDESCRIPTION: Expression used to sum numerical values from multiple columns in a matrix using the sum() function.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-use-column-totals-in-matrix-questions.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nsum({row.columnOneName}, {row.columnTwoName})\n```\n\n----------------------------------------\n\nTITLE: Implementing saveSurveyFunc for Survey Creator in React\nDESCRIPTION: This snippet demonstrates how to implement the saveSurveyFunc to save survey model schemas in localStorage or a web service. It includes a function to handle web service interactions and error handling.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  // ...\n  creator.saveSurveyFunc = (saveNo: number, callback: (num: number, status: boolean) => void) => {\n    // If you use localStorage:\n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n\n    // If you use a web service:\n    saveSurveyJson(\n        \"https://your-web-service.com/\",\n        creator.JSON,\n        saveNo,\n        callback\n    );\n  };\n  // ...\n}\n\n// If you use a web service:\nfunction saveSurveyJson (url: string, json: object, saveNo: number, callback: (num: number, status: boolean) => void) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Survey Creator Constructor Usage\nDESCRIPTION: Example showing the new way to instantiate and render the Survey Creator with separated initialization and rendering steps.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst creator = new SurveyCreator.SurveyCreator(options);\n// ...\n// Add event handlers, survey JSON, and customizations here\n// ...\ncreator.render(\"creatorElement\");\n\n// In modular applications:\nimport { SurveyCreator } from \"survey-creator-knockout\";\nconst creator = new SurveyCreator(options);\n// ...\n// Add event handlers, survey JSON, and customizations here\n// ...\ncreator.render(\"creatorElement\");\n```\n\n----------------------------------------\n\nTITLE: Configuring File Upload Handler in SurveyJS Creator\nDESCRIPTION: Demonstrates how to implement file upload functionality by handling the onUploadFile event. The code shows how to send files to a server using FormData and handle the response.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.onUploadFile.add((_, options) => {\n    const formData = new FormData();\n    options.files.forEach(file => {\n        formData.append(file.name, file);\n    });\n    fetch(\"https://example.com/uploadFiles\", {\n        method: \"post\",\n        body: formData\n    }).then(response => response.json())\n        .then(result => {\n            options.callback(\n                \"success\",\n                // A link to the uploaded file\n                \"https://example.com/files?name=\" + result[options.files[0].name]\n            );\n        })\n        .catch(error => {\n            options.callback('error');\n        });\n});\n```\n\n----------------------------------------\n\nTITLE: Registering Predefined Themes in Modular Applications\nDESCRIPTION: Shows how to import and register predefined Survey Creator themes in modular applications using the registerCreatorTheme method.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport SurveyCreatorTheme from \"survey-creator-core/themes\";\nimport { registerCreatorTheme } from \"survey-creator-core\";\n\nregisterCreatorTheme(SurveyCreatorTheme);\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Modulus\nDESCRIPTION: Expression that returns the remainder when dividing the value of question q1 by question q2.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} % {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Survey Creator Instance\nDESCRIPTION: Creating and maintaining a Survey Creator instance using React useState hook and passing configuration options to the constructor.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\nimport { useState } from \"react\";\nimport { SurveyCreator } from \"survey-creator-react\";\n\nconst defaultCreatorOptions: ICreatorOptions = { /* ... */ }\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  return \"...\";\n}\n```\n\n----------------------------------------\n\nTITLE: Instantiating Survey Creator Model in Vue\nDESCRIPTION: Creating an instance of SurveyCreatorModel with the configuration options that will be used to render the Survey Creator component.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n// ...\nimport { SurveyCreatorModel } from \"survey-creator-core\";\n// ...\nconst creator = new SurveyCreatorModel(creatorOptions);\n</script>\n```\n\n----------------------------------------\n\nTITLE: Validating Survey JSON Schema on NodeJS Server\nDESCRIPTION: This server-side JavaScript code demonstrates how to validate a survey JSON schema before saving it to a database. It uses the SurveyJS Model class to clean up incorrect properties and values from the schema.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Server-side code for a NodeJS backend\nimport { Model } from \"survey-core\";\n\nconst incorrectSurveyJson = { ... };\nconst survey = new Model(surveyJson);\nconst correctSurveyJson = survey.toJSON();\n// ...\n// Save `correctSurveyJson` in a database\n// ...\n```\n\n----------------------------------------\n\nTITLE: Installing Survey Creator Dependencies for Vue 3\nDESCRIPTION: These commands navigate to the survey-creator-vue directory and install the necessary build dependencies for Survey Creator / Form Builder for Vue 3.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd survey-creator/packages/survey-creator-vue\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Dynamic Import of Survey Creator Component in Next.js\nDESCRIPTION: This snippet shows how to dynamically import the Survey Creator component in a Next.js page, ensuring it's only loaded on the client-side.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// creator/page.tsx\nimport dynamic from 'next/dynamic';\n\nconst SurveyCreatorComponent = dynamic(() => import(\"@/components/SurveyCreator\"), {\n  ssr: false\n});\n\nexport default function SurveyCreator() {\n  return (\n    <SurveyCreatorComponent />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Logical Function iif() Example\nDESCRIPTION: Example of using the iif() function to return 'High' if question1 is greater than 20, otherwise 'Low'.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n\"iif({question1} > 20, 'High', 'Low')\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Theme Save and Load Functionality\nDESCRIPTION: Code demonstrating how to save theme JSON to localStorage or a web service and load it back into Theme Editor.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creatorOptions = {\n  // ...\n  showThemeTab: true\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\n\ncreator.saveThemeFunc = (saveNo, callback) => { \n  // If you use localStorage:\n  window.localStorage.setItem(\"survey-theme-json\", JSON.stringify(creator.theme));\n  callback(saveNo, true);\n\n  // If you use a web service:\n  saveThemeJson(\n      \"https://your-web-service.com/\",\n      creator.theme,\n      saveNo,\n      callback\n  );\n};\n\n// If you use a web service:\nfunction saveThemeJson(url, json, saveNo, callback) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Schema with Default Configuration in Angular\nDESCRIPTION: Code snippet showing how to load a survey model schema from localStorage or use a default schema if none exists. This is useful for initializing Survey Creator with existing data.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\n// ...\n@Component({\n  // ...\n})\nexport class SurveyCreatorComponent implements OnInit {\n  ngOnInit() {\n    // ...\n    creator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n    // ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing SurveyJS Style Sheets\nDESCRIPTION: Code snippet showing how to import the necessary CSS files for SurveyJS Form Library and Survey Creator components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n```\n\n----------------------------------------\n\nTITLE: Dynamic Import for Next.js\nDESCRIPTION: Implementation of dynamic importing in Next.js to prevent hydration errors by disabling server-side rendering for SurveyJS components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// creator/page.tsx\nimport dynamic from 'next/dynamic';\n\nconst SurveyCreatorComponent = dynamic(() => import(\"@/components/SurveyCreator\"), {\n  ssr: false\n});\n\nexport default function SurveyCreator() {\n  return (\n    <SurveyCreatorComponent />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Limiting Available Question Types in JavaScript\nDESCRIPTION: Configuration code to restrict which question types appear in the Survey Creator Toolbox by specifying an array of allowed types.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n    questionTypes: [\"text\", \"checkbox\", \"radiogroup\", \"dropdown\"]\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\n\n// In React:\nimport { SurveyCreator } from \"survey-creator-react\";\nconst creator = new SurveyCreator(creatorOptions);\n// In other modular applications:\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creator = new SurveyCreatorModel(creatorOptions);\n```\n\n----------------------------------------\n\nTITLE: Implementing Survey Save Functions in JavaScript\nDESCRIPTION: Shows how to save survey model schemas using localStorage or a web service. Implements the saveSurveyFunc with error handling and callback functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.saveSurveyFunc = (saveNo, callback) => {\n    // If you use localStorage:\n    window.localStorage.setItem(\"survey-json\", creator.text);\n    callback(saveNo, true);\n\n    // If you use a web service:\n    saveSurveyJson(\n        \"https://your-web-service.com/\",\n        creator.JSON,\n        saveNo,\n        callback\n    );\n};\n\n// If you use a web service:\nfunction saveSurveyJson(url, json, saveNo, callback) {\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: JSON.stringify(json)\n  })\n  .then(response => {\n    if (response.ok) {\n      callback(saveNo, true);\n    } else {\n      callback(saveNo, false);\n    }\n  })\n  .catch(error => {\n    callback(saveNo, false);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Schema with Default Fallback in Vue.js\nDESCRIPTION: This code shows how to load a survey schema from localStorage into Survey Creator. It includes a default schema definition that's used as a fallback when no saved schema is found, such as during first-time use.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n// ...\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\n// ...\ncreator.text = window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n// ...\n</script>\n\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator Component Styles in Angular\nDESCRIPTION: This CSS defines the styling for the SurveyJS Creator component, setting its height and width to fill the viewport.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_14\n\nLANGUAGE: css\nCODE:\n```\n/* survey-creator.component.css */\n#surveyCreator {\n    height: 100vh;\n    width: 100vw;\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Model Schema into Survey Creator in React\nDESCRIPTION: This snippet demonstrates how to load a survey model schema into Survey Creator. It assigns the schema to the creator's text property, using data from props, localStorage, or a default JSON if no schema is found.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\nconst defaultJson = {\n  pages: [{\n    name: \"Name\",\n    elements: [{\n      name: \"FirstName\",\n      title: \"Enter your first name:\",\n      type: \"text\"\n    }, {\n      name: \"LastName\",\n      title: \"Enter your last name:\",\n      type: \"text\"\n    }]\n  }]\n};\n\nexport default function SurveyCreatorWidget(props: { json?: Object, options?: ICreatorOptions }) {\n  // ...\n  creator.text = JSON.stringify(props.json) || window.localStorage.getItem(\"survey-json\") || JSON.stringify(defaultJson);\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Survey Creator Plugin Globally in Vue\nDESCRIPTION: Code for the main.ts file to register the Survey Creator and SurveyJS Form Library plugins globally in a Vue 3 application.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// main.ts\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport { surveyPlugin } from \"survey-vue3-ui\";\nimport { surveyCreatorPlugin } from \"survey-creator-vue\";\n\ncreateApp(App)\n  .use(surveyPlugin)\n  .use(surveyCreatorPlugin)\n  .mount(\"#app\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Design Mode Survey Instance in JavaScript\nDESCRIPTION: This code snippet demonstrates how to access and modify the design mode survey instance in Survey Creator using the survey property.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/customize-survey-creation-process.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.survey.title = \"My Survey\";\n```\n\n----------------------------------------\n\nTITLE: Validating Survey JSON Schema on NodeJS Server\nDESCRIPTION: This server-side code for a NodeJS backend demonstrates how to check and correct a survey JSON schema before saving it. It uses the SurveyModel's toJSON() method to remove unknown properties and incorrect values.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Server-side code for a NodeJS backend\nimport { Model } from \"survey-core\";\n\nconst incorrectSurveyJson = { ... };\nconst survey = new Model(surveyJson);\nconst correctSurveyJson = survey.toJSON();\n// ...\n// Save `correctSurveyJson` in a database\n// ...\n```\n\n----------------------------------------\n\nTITLE: Building Survey Creator Model from Source\nDESCRIPTION: Instructions for cloning the repository, installing dependencies, and building the library from source. This process requires the survey-library to be built first.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/surveyjs/survey-creator.git\ncd survey-creator/packages/survey-creator-core\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Creator Component Implementation in Vue\nDESCRIPTION: Full implementation of a Survey Creator component in Vue 3, showing all the required imports, configuration, and rendering of the creator component.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<!-- components/SurveyCreator.vue -->\n<script setup lang=\"ts\">\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nimport type { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nimport { SurveyCreatorComponent } from \"survey-creator-vue\";\n\nconst creatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\n</script>\n\n<template>\n  <SurveyCreatorComponent :model=\"creator\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Angular Module Configuration for SurveyJS Creator\nDESCRIPTION: This TypeScript code configures the Angular module for the SurveyJS Creator application, importing necessary modules and declaring components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\n// app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SurveyCreatorModule } from 'survey-creator-angular';\n\nimport { AppComponent } from './app.component';\nimport { SurveyCreatorComponent } from './survey-creator/survey-creator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SurveyCreatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    SurveyCreatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Accessing Preview Mode Survey Instance in JavaScript\nDESCRIPTION: This code snippet demonstrates how to access and modify the preview mode survey instance in Survey Creator using the onSurveyInstanceCreated event.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/customize-survey-creation-process.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.onSurveyInstanceCreated.add((_, options) => {\n  if (options.area === \"preview-tab\") {\n    options.survey.title = \"You started previewing the survey at: \" + new Date().toLocaleTimeString();\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Enabling Ace Editor in SurveyJS Creator with Angular\nDESCRIPTION: This TypeScript code demonstrates how to import and enable the Ace Editor in the SurveyJS Creator component for enhanced JSON editing capabilities.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\n// survey-creator.component.ts\n// ...\nimport \"ace-builds/src-noconflict/ace\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n// ...\n```\n\n----------------------------------------\n\nTITLE: Checking Toolbox Display Mode in JavaScript\nDESCRIPTION: Simple code to check if the toolbox is currently in compact mode.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(creator.toolbox.isCompact);\n```\n\n----------------------------------------\n\nTITLE: Complete Survey Creator Configuration Code in Vue\nDESCRIPTION: Full code example showing the complete setup for Survey Creator, including style imports, creator options, and model instantiation.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n\nimport type { ICreatorOptions } from \"survey-creator-core\";\nimport { SurveyCreatorModel } from \"survey-creator-core\";\n\nconst creatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\n</script>\n\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Basic Question Value Reference\nDESCRIPTION: Shows how to reference a question's value in an expression using curly braces syntax.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{my-question-name}\n```\n\n----------------------------------------\n\nTITLE: Implementing Image Upload in SurveyJS Creator with Angular\nDESCRIPTION: This snippet demonstrates how to handle the onUploadFile event in SurveyJS Creator to upload images to a server and save image links in JSON schemas. It uses the Fetch API to send a POST request with form data containing the image files.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// ...\n@Component({\n  // ...\n})\nexport class SurveyCreatorComponent implements OnInit {\n  ngOnInit() {\n    // ...\n    creator.onUploadFile.add((_, options) => {\n      const formData = new FormData();\n      options.files.forEach((file: File) => {\n        formData.append(file.name, file);\n      });\n      fetch(\"https://example.com/uploadFiles\", {\n        method: \"post\",\n        body: formData\n      }).then(response => response.json())\n        .then(result => {\n          options.callback(\n            \"success\",\n            // A link to the uploaded file\n            \"https://example.com/files?name=\" + result[options.files[0].name]\n          );\n        })\n        .catch(error => {\n          options.callback('error');\n        });\n    });\n    // ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Linking SurveyJS Resources in HTML\nDESCRIPTION: HTML code snippet showing how to link Survey Creator and SurveyJS Form Library resources in the head section of an HTML page. This includes CSS and JavaScript files needed for both the form library and creator components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <!-- SurveyJS Form Library resources -->\n    <link  href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n\n    <!-- (Optional) Predefined theme configurations -->\n    <script src=\"https://unpkg.com/survey-core/themes/index.min.js\"></script>\n    \n    <!-- Survey Creator resources -->\n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-js/survey-creator-js.min.js\"></script>\n    <!-- ... -->\n</head>\n```\n\n----------------------------------------\n\nTITLE: Creating an Age Calculation Custom Variable in SurveyJS\nDESCRIPTION: This example shows the expression syntax for creating a custom variable that calculates a respondent's age using the age() function with a date of birth field. The expression references the date-of-birth question by its ID.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-use-custom-variables-in-form-calculations.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nage({date-of-birth})\n```\n\n----------------------------------------\n\nTITLE: Configuring Styles in angular.json for SurveyJS Form Builder\nDESCRIPTION: JSON configuration in angular.json to include the necessary CSS files for Survey Creator and SurveyJS Form Library. This ensures the correct styling of the Form Builder component.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n  // ...\n  \"projects\": {\n    \"project-name\": {\n      \"projectType\": \"application\",\n      // ...\n      \"architect\": {\n        \"build\": {\n          // ...\n          \"options\": {\n            // ...\n            \"styles\": [\n              \"src/styles.css\",\n              \"node_modules/survey-core/survey-core.min.css\",\n              \"node_modules/survey-creator-core/survey-creator-core.min.css\"\n            ],\n            // ...\n          }\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Hiding Individual Properties in SurveyJS Property Grid\nDESCRIPTION: Demonstrates how to hide a single property from the Property Grid using the Serializer's getProperty method\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Hide the `title` property for Boolean questions\nSurvey.Serializer.getProperty(\"boolean\", \"title\").visible = false;\n\n// In modular applications:\nimport { Serializer } from \"survey-core\";\nSerializer.getProperty(\"boolean\", \"title\").visible = false;\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Toolbox Subitems in JavaScript\nDESCRIPTION: Code showing how to add a custom subitem to an existing toolbox item, in this case adding a character-limited text area to the Long Text item.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creatorOptions = { ... };\nconst creator = new SurveyCreatorModel(creatorOptions);\n\nconst longTextItem = creator.toolbox.getItemByName(\"comment\");\nlongTextItem.addSubitem({\n    name: \"limitedLongText\",\n    title: \"Limited to 280 characters\",\n    json: {\n        type: \"comment\",\n        maxLength: 280\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Survey Creator Options in Vue\nDESCRIPTION: Setting up the configuration object with properties for Survey Creator, including enabling auto-save and collapse on drag functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\n// ...\nimport type { ICreatorOptions } from \"survey-creator-core\";\n\nconst creatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating Course-Numbered Dynamic Tab Titles\nDESCRIPTION: This snippet demonstrates how to combine static text with dynamic panel indices to create meaningful tab titles. It prefixes each tab number with 'Course #'.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-dynamic-tab-title-format.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nCourse #{panelIndex}\n```\n\n----------------------------------------\n\nTITLE: Importing SurveyCreatorModule in Angular Module\nDESCRIPTION: Angular module configuration to import the SurveyCreatorModule, enabling the use of Survey Creator components in the application.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// app.module.ts\n// ...\nimport { SurveyCreatorModule } from 'survey-creator-angular';\n\n@NgModule({\n  declarations: [ ... ],\n  imports: [\n    ...,\n    SurveyCreatorModule\n  ],\n  providers: [ ... ],\n  bootstrap: [ ... ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Loading Saved Theme from localStorage\nDESCRIPTION: Code to load a previously saved theme JSON object from localStorage into Theme Editor.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst savedTheme = window.localStorage.getItem(\"survey-theme-json\");\nif (savedTheme) {\n    creator.theme = JSON.parse(savedTheme); \n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Ace Editor in SurveyJS Creator with Vue 3\nDESCRIPTION: This code shows how to integrate the Ace code editor with searchbox extension into the JSON Editor tab in SurveyJS Creator. The imports need to be added to the Vue component that renders the Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<!-- components/SurveyCreator.vue -->\n<script setup lang=\"ts\">\n// ...\nimport \"ace-builds/src-noconflict/ace\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n// ...\n</script>\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Customizing Predefined Toolbox Items in JavaScript\nDESCRIPTION: Example showing how to modify a predefined toolbox item by changing the choices array for a Dropdown question.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.toolbox\n  .getItemByName(\"dropdown\")\n  .json\n  .choices = [\n    { text: \"Option 1\", value: 1 },\n    { text: \"Option 2\", value: 2 },\n    { text: \"Option 3\", value: 3 }\n  ];\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Basic Aggregation Functions in SurveyJS Expressions\nDESCRIPTION: Examples of using basic aggregation functions sum, min, max, and avg in SurveyJS expressions. These functions operate on a set of passed numbers.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_38\n\nLANGUAGE: markdown\nCODE:\n```\n\"sum(10, 20, 30, 40)\" (100)\n\"min(10, 20, 30, 40)\" (10)\n\"max(10, 20, 30, 40)\" (40)\n\"avg(10, 20, 30, 40)\" (25)\n```\n\n----------------------------------------\n\nTITLE: Importing SurveyJS Styles for Standalone Angular Components\nDESCRIPTION: JavaScript code to import SurveyJS styles directly in a standalone Angular component file. This is an alternative to configuring styles in angular.json for projects using standalone components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// survey-creator.component.ts\nimport \"survey-core/survey-core.min.css\";\nimport \"survey-creator-core/survey-creator-core.min.css\";\n```\n\n----------------------------------------\n\nTITLE: Handling Survey Instance Recreation in Design Mode\nDESCRIPTION: This code snippet shows how to use the onSurveyInstanceCreated event to handle the recreation of the design mode survey instance in Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/customize-survey-creation-process.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.onSurveyInstanceCreated.add((_, options) => {\n  if (options.area === \"designer-tab\") {\n    // The recreated survey instance is stored in the `options.survey` property.\n    console.log(options.survey);\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Question Names on Creation in JavaScript\nDESCRIPTION: This code snippet shows how to handle the onQuestionAdded event to customize the default question name when a new question is added to the survey in Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/customize-survey-creation-process.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlet questionNumbers = {};\ncreator.onQuestionAdded.add(function (_, options) {\n  const question = options.question;\n  const type = question.getType();\n  if (!questionNumbers[type]) {\n    questionNumbers[type] = 1;\n  }\n  const number = questionNumbers[type];\n  // Set `name` in the following format: DropdownQuestion1, CheckboxQuestion6, etc.\n  question.name = type[0].toUpperCase() + type.substring(1) + \"Question\" + number;\n  questionNumbers[type] = number + 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Toolbox Subitems in JavaScript\nDESCRIPTION: Example showing how to modify an existing subitem by adding an input mask to the Phone Number subitem under the Single-Line Input toolbox item.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst singleTextInputItem = creator.toolbox.getItemByName(\"text\");\nconst telSubitem = singleTextInputItem.getSubitem(\"tel\");\ntelSubitem.json[\"maskType\"] = \"pattern\";\ntelSubitem.json[\"maskSettings\"] = { \"pattern\": \"+1(999)999-99-99\" };\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with empty Operator\nDESCRIPTION: Expression that checks if a question value is empty (undefined or null).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} empty\"\n```\n\n----------------------------------------\n\nTITLE: React Survey Creator Implementation\nDESCRIPTION: Example of implementing Survey Creator V2 in React, showing imports, creator initialization, and component rendering.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"survey-core/defaultV2.min.css\";\nimport \"survey-creator-core/survey-creator-core.min.css\";\nimport { SurveyCreator, SurveyCreatorComponent } from \"survey-creator-react\";\n\nconst options = {\n  showLogicTab: true\n};\n\nexport default function SurveyComponent() {\n  const creator = new SurveyCreator(options);\n  // ...\n  // Add event handlers, survey JSON, and customizations here\n  // ...\n  return <SurveyCreatorComponent creator={creator} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering SurveyJS Form Builder in Angular Template\nDESCRIPTION: HTML template code to render the Survey Creator component in an Angular application. It binds the component to the SurveyCreatorModel instance.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<div id=\"surveyCreator\">\n  <survey-creator [model]=\"surveyCreatorModel\"></survey-creator>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Enabling Theme Editor in Survey Creator\nDESCRIPTION: Code to enable the Theme Editor tab in Survey Creator by setting the showThemeTab property.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creatorOptions = {\n  // ...\n  showThemeTab: true\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\n```\n\n----------------------------------------\n\nTITLE: Rendering the Survey Creator Component\nDESCRIPTION: Code that renders the SurveyCreatorComponent with the client-side directive for frameworks that use React Server Components.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n'use client'\n// ...\nimport { SurveyCreatorComponent } from \"survey-creator-react\";\n\nconst defaultCreatorOptions: ICreatorOptions = { /* ... */ }\n\nexport function SurveyCreatorWidget() {\n  let [creator, setCreator] = useState<SurveyCreator>();\n\n  if (!creator) {\n    creator = new SurveyCreator(props.options || defaultCreatorOptions);\n    setCreator(creator);\n  }\n\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <SurveyCreatorComponent creator={creator} />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: SurveyJS Creator HTML Setup\nDESCRIPTION: HTML configuration for setting up SurveyJS Creator with Knockout integration. Includes necessary script and style references.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator for Knockout</title>\n    <meta charset=\"utf-8\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n\n    <link  href=\"https://unpkg.com/survey-core/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-knockout/survey-creator-knockout.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Rendering Survey Creator Component in Vue Template\nDESCRIPTION: Code to render the Survey Creator component in a Vue template by importing the component and binding it to the previously created model.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\nimport { SurveyCreatorComponent } from \"survey-creator-vue\";\n// ...\n</script>\n\n<template>\n  <SurveyCreatorComponent :model=\"creator\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Enabling the Translation Tab in Survey Creator\nDESCRIPTION: Enable the Translation tab in Survey Creator to allow users to translate survey content into multiple languages.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst creatorOptions = {\n  showTranslationTab: true\n};\n\nconst creator = new SurveyCreator.SurveyCreator(creatorOptions);\n\n// In React:\nimport { SurveyCreator } from \"survey-creator-react\";\nconst creator = new SurveyCreator(creatorOptions);\n// In other modular applications:\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creator = new SurveyCreatorModel(creatorOptions);\n```\n\n----------------------------------------\n\nTITLE: Importing Survey Creator Localization Module in JavaScript\nDESCRIPTION: Import the Survey Creator localization module to enable translations for all available languages in a modular application.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"survey-creator-core/survey-creator-core.i18n\";\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Structure with Survey Creator Container\nDESCRIPTION: Complete HTML structure showing resource linking and the container div for the Survey Creator component with full height styling.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator / Form Builder</title>\n    <meta charset=\"utf-8\">\n    <link  href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-js/survey-creator-js.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Rendering Survey Creator with jQuery\nDESCRIPTION: JavaScript code showing how to render Survey Creator using the jQuery plugin alternative, useful for applications that already use jQuery.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n$(function() {\n    $(\"#surveyCreator\").SurveyCreator({ model: creator });\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Validation Rule for Date of Birth in Survey Creator\nDESCRIPTION: This snippet demonstrates how to add a custom validation rule for a Date of Birth question using the age() function. It validates if the respondent's age is between 18 and 50 years old.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-customize-validation-messages.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nage({date-of-birth}) >= 18 and age({date-of-birth}) <= 50\n```\n\n----------------------------------------\n\nTITLE: Registering Survey Themes - Modular Applications\nDESCRIPTION: Code to register predefined UI themes in modular applications using survey-core/themes.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport SurveyTheme from \"survey-core/themes\";\nimport { registerSurveyTheme } from \"survey-creator-core\";\n\nregisterSurveyTheme(SurveyTheme);\n```\n\n----------------------------------------\n\nTITLE: Setting Default Properties with onQuestionAdded Event in SurveyJS Creator\nDESCRIPTION: This example demonstrates how to use the onQuestionAdded event to make all newly added questions required by default. The event fires when a user drops a question from the toolbox onto a survey page in the designer.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/SurveyCreator/onQuestionAdded.md#2025-04-18_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ncreator.onQuestionAdded.add(function(sender, options){\n  options.question.isRequired = true;\n})\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Any Of\nDESCRIPTION: Expression that checks if a question value is among an array of specified values.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} anyof [ 'value1', 'value2', 'value3' ]\"\n```\n\n----------------------------------------\n\nTITLE: Restricting Available Languages for Survey Localization\nDESCRIPTION: Limit the languages available for survey content localization by specifying the supportedLocales array.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nSurvey.surveyLocalization.supportedLocales = [\"en\", \"de\", \"es\", \"fr\"];\n\n// In modular applications\nimport { surveyLocalization } from 'survey-core';\nsurveyLocalization.supportedLocales = [\"en\", \"de\", \"es\", \"fr\"];\n```\n\n----------------------------------------\n\nTITLE: Registering Predefined Themes in Classic Applications\nDESCRIPTION: Demonstrates how to register predefined Survey Creator themes in classic script applications using CDN references.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script src=\"https://unpkg.com/survey-creator-core/themes/index.min.js\"></script>\n    <!-- ... -->\n</head>\n<body>\n    <script>\n        SurveyCreatorCore.registerCreatorTheme(SurveyCreatorTheme);\n    </script>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Registering Survey Themes - Classic Script Applications\nDESCRIPTION: HTML and JavaScript code to register predefined UI themes in classic script applications.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/themes/index.min.js\"></script>\n    <!-- ... -->\n</head>\n<body>\n  <script>\n    SurveyCreatorCore.registerSurveyTheme(SurveyTheme);\n  </script>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Multiple Textbox Item Access\nDESCRIPTION: Demonstrates how to access individual textbox values in a Multiple Textboxes question.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{question1.item1}\n```\n\n----------------------------------------\n\nTITLE: Setting Question-Type Specific Help Text\nDESCRIPTION: Demonstrates how to set help texts for properties of specific question types\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ntranslations.pehelp.file = { \n  title: \"A hint for the Title property editor in File Upload questions\"\n};\ntranslations.pehelp.comment = { \n  title: \"A hint for the Title property editor in Long Text questions\"\n};\n```\n\n----------------------------------------\n\nTITLE: Installing SurveyJS Form Builder npm Package for Angular\nDESCRIPTION: Command to install the survey-creator-angular npm package, which includes the survey-creator-core as a dependency. This package is required for integrating the Form Builder into an Angular application.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install survey-creator-angular --save\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Theme to Survey Creator\nDESCRIPTION: Code to apply a custom theme JSON object to a survey in Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/theme-editor.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { SurveyCreatorModel } from \"survey-creator-core\";\nconst creatorOptions = {\n  // ...\n  showThemeTab: true\n};\nconst creator = new SurveyCreatorModel(creatorOptions);\n\nconst themeJson = { ... };\ncreator.theme = themeJson;\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Greater Than\nDESCRIPTION: Expression that checks if a question value is greater than 10.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} > 10\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Content-Based Dynamic Tab Titles\nDESCRIPTION: This example shows how to reference a question's answer within the Dynamic Panel to generate meaningful tab titles. It uses the syntax {panel.question-name} to display the value entered in a specific question.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-dynamic-tab-title-format.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{panel.course-title}\n```\n\n----------------------------------------\n\nTITLE: Installing survey-creator-vue Package via NPM\nDESCRIPTION: Command to install the Survey Creator for Vue 3, which automatically installs the survey-creator-core dependency.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nnpm install survey-creator-vue --save\n```\n\n----------------------------------------\n\nTITLE: Saving and Restoring Theme Customizations\nDESCRIPTION: Demonstrates how to save custom theme settings to localStorage and restore them when the application reloads.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst localStorageKey = \"userSurveyCreatorTheme\";\n\n// Save a custom theme\nconst saveTheme = () => {\n    const themeStr = JSON.stringify(creator.creatorTheme);\n    localStorage.setItem(localStorageKey, themeStr);\n};\n\n// Restore a custom theme\nconst savedTheme = localStorage.getItem(localStorageKey);\nif (savedTheme) {\n    creator.applyCreatorTheme(JSON.parse(savedTheme));\n}\n```\n\n----------------------------------------\n\nTITLE: Array Index Access\nDESCRIPTION: Shows how to access array items in multi-select questions using zero-based index.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{question1[0]}\n```\n\n----------------------------------------\n\nTITLE: Configuring Survey Creator Options\nDESCRIPTION: Setting up the default configuration options for Survey Creator, including enabling auto-save and collapsing elements on drag operations.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\nimport { ICreatorOptions } from \"survey-creator-core\";\n\nconst defaultCreatorOptions: ICreatorOptions = {\n  autoSaveEnabled: true,\n  collapseOnDrag: true\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Survey Creator React Dependencies\nDESCRIPTION: Commands to uninstall the old survey-creator package and install the new survey-creator-react package with its dependencies.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nnpm uninstall survey-creator\nnpm install survey-creator-react --save\n```\n\n----------------------------------------\n\nTITLE: Registering Specific Themes in Modular Applications\nDESCRIPTION: Shows how to import and register specific predefined themes individually in modular applications.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n    SC2020,\n    DefaultDark,\n    DefaultContrast\n} from \"survey-creator-core/themes\";\nimport { registerCreatorTheme } from \"survey-creator-core\";\n\nregisterCreatorTheme(SC2020);\nregisterCreatorTheme(DefaultDark);\nregisterCreatorTheme(DefaultContrast);\n```\n\n----------------------------------------\n\nTITLE: Date Function dateAdd() Examples\nDESCRIPTION: Examples of using the dateAdd() function to add or subtract days, months, or years from a date.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n\"dateAdd('2000-01-01', 10, \\\"days\\\")\"\n\"dateAdd('2000-01-01', 4, \\\"months\\\")\"\n\"dateAdd('2000-01-01', -5, \\\"years\\\")\"\n```\n\n----------------------------------------\n\nTITLE: Setting Current Locale in Survey Creator\nDESCRIPTION: Change the Survey Creator UI language by setting the currentLocale property in global context or using the creator.locale property.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nSurveyCreator.editorLocalization.currentLocale = \"fr\";\n\n// In modular applications:\nimport { editorLocalization } from \"survey-creator-core\";\nimport \"survey-creator-core/i18n/french\";\neditorLocalization.currentLocale = \"fr\";\n// ----- or -----\ncreator.locale = \"fr\";\n```\n\n----------------------------------------\n\nTITLE: Styling SurveyJS Form Builder Container in Angular\nDESCRIPTION: CSS code to style the container of the Survey Creator component, setting its dimensions to full viewport height and width.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-angular.md#2025-04-18_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\n#surveyCreator {\n    height: 100vh;\n    width: 100vw;\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Property Values\nDESCRIPTION: Example of how to change default property values in the Property Grid using Serializer\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Override the default value of the `eachRowRequired` property for Single-Select Matrix questions\nSurvey.Serializer.getProperty(\"matrix\", \"eachRowRequired\").defaultValue = true;\n\n// In modular applications:\nimport { Serializer } from \"survey-core\";\nSerializer.getProperty(\"matrix\", \"eachRowRequired\").defaultValue = true;\n```\n\n----------------------------------------\n\nTITLE: Setting Toolbox Display Mode in JavaScript\nDESCRIPTION: Code showing how to force compact or full display mode for the Survey Creator Toolbox and how to check the current display mode.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Compact mode\ncreator.toolbox.forceCompact = true;\n// Full mode\ncreator.toolbox.forceCompact = false;\n```\n\n----------------------------------------\n\nTITLE: Setting Default Locale for Fallback Translations\nDESCRIPTION: Specify a fallback locale to use when translations are missing in the current locale.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\neditorLocalization.defaultLocale = \"fr\";\n```\n\n----------------------------------------\n\nTITLE: Importing Survey Creator Style Sheets in Vue Component\nDESCRIPTION: Code to import the necessary CSS style sheets for Survey Creator and SurveyJS Form Library in a Vue 3 component.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script setup lang=\"ts\">\nimport \"survey-core/survey-core.css\";\nimport \"survey-creator-core/survey-creator-core.css\";\n</script>\n\n<template>\n  <!-- ... -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Element-Specific Help Text\nDESCRIPTION: Shows how to specify different help texts for properties of surveys, pages, and questions\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ntranslations.pehelp.survey = { \n  title: \"A hint for the Title property editor of the survey\"\n};\ntranslations.pehelp.page = { \n  title: \"A hint for the Title property editor of all pages\"\n};\ntranslations.pehelp.question = { \n  title: \"A hint for the Title property editor of all questions\"\n};\n```\n\n----------------------------------------\n\nTITLE: Removing Specific Subitems from Toolbox Items in SurveyJS Creator\nDESCRIPTION: Demonstrates how to remove specific subitems from toolbox items using the removeSubitem() method. The example shows removing the 'labels' subitem from the Rating Scale toolbox item.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// Remove the Labels subitem of the Rating Scale toolbox item\nconst ratingScaleItem = creator.toolbox.getItemByName(\"rating\");\nratingScaleItem.removeSubitem(\"labels\");\n\n// Remove all subitems of the Single-Line Input toolbox item\nconst singleLineInputItem = creator.toolbox.getItemByName(\"text\");\nsingleLineInputItem.clearSubitems();\n```\n\n----------------------------------------\n\nTITLE: Applying a Custom Locale\nDESCRIPTION: Set a custom locale as the current locale and optionally specify a default locale for missing translations.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport { editorLocalization } from \"survey-creator-core\";\n// ...\n// Activate the custom locale\neditorLocalization.currentLocale = \"customlocale\";\n// ----- or -----\ncreator.locale = \"customlocale\";\n```\n\n----------------------------------------\n\nTITLE: Calculating Single Value Duration in SurveyJS\nDESCRIPTION: Basic syntax examples for calculating duration in days, hours, minutes, months, and years between two dates using the dateDiff() function.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-calculate-duration-between-dates-within-form.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndateDiff({firstDate}, {secondDate}, 'days')\ndateDiff({firstDateTime}, {secondDateTime}, 'hours')\ndateDiff({firstDateTime}, {secondDateTime}, 'minutes')\ndateDiff({firstDate}, {secondDate}, 'months')\ndateDiff({firstDate}, {secondDate}, 'years')\n```\n\n----------------------------------------\n\nTITLE: Adding Help Text to Property Editor\nDESCRIPTION: Demonstrates how to add hints and help texts to property editors using localization\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Get English translations\nconst translations = SurveyCreatorCore.getLocaleStrings(\"en\");\n// In modular applications\nimport { getLocaleStrings } from \"survey-creator-core\";\nconst translations = getLocaleStrings(\"en\");\n\ntranslations.pehelp.title = \"A hint for the Title property editor\";\n```\n\n----------------------------------------\n\nTITLE: Disabling Subitems Feature in SurveyJS Creator Toolbox\nDESCRIPTION: Shows how to completely deactivate the subitems feature by setting the toolbox's showSubitems property to false.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.toolbox.showSubitems = false;\n```\n\n----------------------------------------\n\nTITLE: Hiding Multiple Properties Using Event Handler\nDESCRIPTION: Shows how to hide multiple properties using the onPropertyShowing event with blacklist/whitelist approach\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst blackList = [ \"visible\", \"isRequired\" ];\n// const whiteList = [ \"title\", \"name\" ];\n\ncreator.onPropertyShowing.add((_, options) => {\n  if (options.element.getType() === \"panel\") {\n    // Hide properties found in `blackList`\n    options.show = blackList.indexOf(options.property.name) === -1;\n\n    // Hide all properties except those found in `whiteList`\n    // options.show = whiteList.indexOf(options.property.name) > -1;\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Calculating Incomplete Period Duration in SurveyJS\nDESCRIPTION: Syntax for calculating remaining days/months in incomplete years and minutes in incomplete hours using modulo operations.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-calculate-duration-between-dates-within-form.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndateDiff({firstDate}, {secondDate}, 'days') % 365\ndateDiff({firstDate}, {secondDate}, 'months') % 12\ndateDiff({firstDateTime}, {secondDateTime}, 'hours') % 60\n```\n\n----------------------------------------\n\nTITLE: Localizing Toolbox Category Names in Modular Applications\nDESCRIPTION: Code to change the default 'General' category name to 'Common' using the localization system in modular applications.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"survey-creator-core/survey-creator-core.i18n\";\nimport { getLocaleStrings } from \"survey-creator-core\";\nconst translations = getLocaleStrings(\"en\");\ntranslations.toolboxCategories[\"general\"] = \"Common\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Category Behavior in JavaScript\nDESCRIPTION: Code showing how to control category expansion behavior by configuring allowExpandMultipleCategories and keepAllCategoriesExpanded properties.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.toolbox.allowExpandMultipleCategories = true;\ncreator.toolbox.keepAllCategoriesExpanded = false;\n```\n\n----------------------------------------\n\nTITLE: Grouping Toolbox Items by Categories in JavaScript\nDESCRIPTION: Code showing how to organize toolbox items into custom categories by using the changeCategories method.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.toolbox.changeCategories([\n    { name: \"panel\", category: \"Panels\" }, \n    { name: \"paneldynamic\", category: \"Panels\" }, \n    { name: \"matrix\", category: \"Matrixes\" },\n    { name: \"matrixdropdown\", category: \"Matrixes\" },\n    { name: \"matrixdynamic\", category: \"Matrixes\" }\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Tab Titles with Panel Index\nDESCRIPTION: This example shows how to set up tab titles using the panel index number. The pattern uses a special variable {panelIndex} to automatically number each panel tab.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-dynamic-tab-title-format.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{panelIndex}\n```\n\n----------------------------------------\n\nTITLE: Localizing Toolbox Category Names in Non-modular Applications\nDESCRIPTION: Code to change the default 'General' category name to 'Common' using the localization system in non-modular applications.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/toolbox-customization.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.i18n.min.js\"></script>\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst translations = SurveyCreatorCore.getLocaleStrings(\"en\");\ntranslations.toolboxCategories[\"general\"] = \"Common\";\n```\n\n----------------------------------------\n\nTITLE: HTML Container Element for Survey Creator\nDESCRIPTION: HTML code showing the container div where Survey Creator will be rendered, with a height set to 100% of the viewport height.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Overriding Localizable Property Values\nDESCRIPTION: Shows how to override default values for localizable properties using localization capabilities\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/property-grid-customization.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Get English locale translations\nconst engLocale = Survey.getLocaleStrings(\"en\");\n// In modular applications\nimport { getLocaleStrings } from \"survey-core\";\nconst engLocale = getLocaleStrings(\"en\");\n\nengLocale.pagePrevText = \"Back\";\nengLocale.pageNextText = \"Forward\";\nengLocale.completeText = \"Send\";\n```\n\n----------------------------------------\n\nTITLE: Custom HTML Feedback for No Correct Answers\nDESCRIPTION: HTML markup for displaying a message when the respondent has no correct answers in the quiz. This is used in the Dynamic 'Thank You' page markup with the condition {correctAnswers} == 0.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-create-quiz-or-assessment-test.md#2025-04-18_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n'<h4>Unfortunately, none of your answers is correct. Please try again.</h4>'\n```\n\n----------------------------------------\n\nTITLE: Setting Question Convert Mode in SurveyJS Creator\nDESCRIPTION: This code snippet demonstrates how to configure the SurveyCreator settings to limit the question type conversion options to only interchangeable types. This reverts to the old behavior of question type conversion in the Survey Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/Creator-V2-Whats-New.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nSurveyCreator.settings.questionConvertMode = 1;\n```\n\n----------------------------------------\n\nTITLE: Logical Operator Example with Negation\nDESCRIPTION: Expression that negates the value of a question, returning true if the question value is false and vice versa.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n!{q1}\n```\n\n----------------------------------------\n\nTITLE: Importing Specific Language Localization Modules in JavaScript\nDESCRIPTION: Import only specific language modules needed for your application instead of loading all languages.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"survey-creator-core/i18n/french\";\nimport \"survey-creator-core/i18n/german\";\nimport \"survey-creator-core/i18n/italian\";\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Division\nDESCRIPTION: Expression that divides the value of question q1 by question q2.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} / {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Validating Survey JSON Schema on NodeJS Server\nDESCRIPTION: This snippet shows how to validate a survey JSON schema on a NodeJS server before saving it. It uses the SurveyModel's toJSON() method to remove unknown properties and incorrect values.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Server-side code for a NodeJS backend\nimport { Model } from \"survey-core\";\n\nconst incorrectSurveyJson = { ... };\nconst survey = new Model(surveyJson);\nconst correctSurveyJson = survey.toJSON();\n// ...\n// Save `correctSurveyJson` in a database\n// ...\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Addition\nDESCRIPTION: Expression that adds the values of two questions.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} + {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Integrating Ace Editor with SurveyJS Creator\nDESCRIPTION: HTML code snippet showing how to include Ace Editor in the JSON Editor tab of SurveyJS Creator. It references the main Ace script and the searchbox extension that adds Find/Replace functionality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-html-css-javascript.md#2025-04-18_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/ace-builds/src-min-noconflict/ace.js\" type=\"text/javascript\"></script>\n<script src=\"https://unpkg.com/ace-builds/src-min-noconflict/ext-searchbox.js\" type=\"text/javascript\"></script>\n```\n\n----------------------------------------\n\nTITLE: Logical Operator Example with OR\nDESCRIPTION: Expression that combines two conditions with OR, returning true if either condition is true.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} empty or {q2} empty\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Quiz Results on Thank You Page with HTML\nDESCRIPTION: HTML markup that shows the number of correct answers out of the total questions attempted in a quiz. This code is used in the 'Thank You' page markup field in SurveyJS.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-create-quiz-or-assessment-test.md#2025-04-18_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n'<h4>You got <b>{correctAnswers}</b> out of <b>{questionCount}</b> correct answers.</h4>'\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Subtraction\nDESCRIPTION: Expression that subtracts the value of question q2 from question q1.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} - {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Using dateDiff() Function in Validation Expression\nDESCRIPTION: Example of using dateDiff() function to validate that the difference between two dates doesn't exceed 14 days. This snippet demonstrates the validation expression syntax using question variables.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ndateDiff({start-date}, {end-date}, \"days\") <= 14\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with notempty Operator\nDESCRIPTION: Expression that checks if a question value is not empty (neither undefined nor null).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} notempty\"\n```\n\n----------------------------------------\n\nTITLE: Loading Specific Language Localization Files in HTML\nDESCRIPTION: Reference only specific language files needed for your application instead of loading all languages.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/survey-creator-core/i18n/french.js\"></script>\n<script src=\"https://unpkg.com/survey-creator-core/i18n/german.js\"></script>\n<script src=\"https://unpkg.com/survey-creator-core/i18n/italian.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Importing Ace Editor in SurveyJS Creator React Component\nDESCRIPTION: This code snippet demonstrates how to import Ace Editor and its extensions in the React component that renders SurveyJS Creator. It includes the import for the Find/Replace dialog extension.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// components/SurveyCreator.tsx\n// ...\nimport \"ace-builds/src-noconflict/ace\";\nimport \"ace-builds/src-noconflict/ext-searchbox\";\n// ...\n```\n\n----------------------------------------\n\nTITLE: Question Visibility Condition\nDESCRIPTION: Example of an expression used to control question visibility based on another question's value.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{nps-score} >= 9\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Not Contains\nDESCRIPTION: Expression that checks if a question value does not contain the string 'abc'.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} notcontains 'abc'\"\n```\n\n----------------------------------------\n\nTITLE: Importing Localization Dictionary in Webpack\nDESCRIPTION: Code example showing how to import a new localization dictionary file (french.ts) into the Survey Creator's Webpack configuration through the i18n.ts entry point.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/src/localization/readme.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport \"../localization/french\";\n```\n\n----------------------------------------\n\nTITLE: Rendering SurveyCreator Component in Next.js\nDESCRIPTION: This code snippet shows how to render the SurveyCreator component in a Next.js page. It uses dynamic import to load the component client-side only.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// creator/page.tsx\nimport dynamic from 'next/dynamic';\n\nconst SurveyCreatorComponent = dynamic(() => import(\"@/components/SurveyCreator\"), {\n  ssr: false\n});\n\nexport default function SurveyCreator() {\n  return (\n    <SurveyCreatorComponent />\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for SurveyJS Creator\nDESCRIPTION: This HTML snippet sets up the structure for the SurveyJS Creator, including necessary script and stylesheet references.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Survey Creator for Knockout</title>\n    <meta charset=\"utf-8\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n\n    <link  href=\"https://unpkg.com/survey-core/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n    \n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-knockout/survey-creator-knockout.min.js\"></script>\n\n    <script type=\"text/javascript\" src=\"index.js\"></script>\n</head>\n<body>\n    <div id=\"surveyCreator\" style=\"height: 100vh;\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Power\nDESCRIPTION: Expression that raises the value of question q1 to the power of the value of question q2.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} ^ {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Installing Survey Creator React Package\nDESCRIPTION: Command to install the survey-creator-react npm package which automatically includes survey-creator-core as a dependency.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_0\n\nLANGUAGE: cmd\nCODE:\n```\nnpm install survey-creator-react --save\n```\n\n----------------------------------------\n\nTITLE: Automatic Theme Saving on Changes\nDESCRIPTION: Shows how to automatically save theme changes using the onCreatorThemePropertyChanged event handler.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ncreator.onCreatorThemePropertyChanged.add(() => {\n    const themeStr = JSON.stringify(creator.creatorTheme);\n    localStorage.setItem(localStorageKey, themeStr);\n});\n```\n\n----------------------------------------\n\nTITLE: Linking Survey Creator Resources in HTML\nDESCRIPTION: This snippet shows how to include necessary CSS and JavaScript files for Survey Creator, SurveyJS, and Knockout in the HTML head.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-knockout-jquery.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script type=\"text/javascript\" src=\"https://unpkg.com/knockout/build/output/knockout-latest.js\"></script>\n\n    <!-- SurveyJS resources -->\n    <link  href=\"https://unpkg.com/survey-core/defaultV2.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n    \n    <!-- Survey Creator resources -->\n    <link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-knockout/survey-creator-knockout.min.js\"></script>\n    <!-- ... -->\n</head>\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operator Example with Multiplication\nDESCRIPTION: Expression that multiplies the values of two questions.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} * {q2}\"\n```\n\n----------------------------------------\n\nTITLE: Installing Ace Editor for SurveyJS Creator\nDESCRIPTION: This code snippet shows the npm command to install the ace-builds package, which is required to enable Ace Editor in the JSON Editor tab of SurveyJS Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-react.md#2025-04-18_snippet_16\n\nLANGUAGE: shell\nCODE:\n```\nnpm install ace-builds --save\n```\n\n----------------------------------------\n\nTITLE: Custom HTML Feedback for Perfect Score\nDESCRIPTION: HTML markup for displaying a congratulatory message when the respondent has answered all questions correctly. This is used in the Dynamic 'Thank You' page markup with the condition {correctAnswers} == {questionCount}.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-create-quiz-or-assessment-test.md#2025-04-18_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n'<h4>Congratulations! You answered all the questions correctly!</h4>'\n```\n\n----------------------------------------\n\nTITLE: Registering Specific Themes in Classic Applications\nDESCRIPTION: Shows how to register specific predefined themes in classic script applications using individual theme scripts.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-creator-interface-themes.md#2025-04-18_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    <!-- ... -->\n    <script src=\"https://unpkg.com/survey-creator-core/themes/sc2020.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-core/themes/default-dark.min.js\"></script>\n    <script src=\"https://unpkg.com/survey-creator-core/themes/default-contrast.min.js\"></script>\n    <!-- ... -->\n</head>\n<body>\n    <script>\n        SurveyCreatorCore.registerCreatorTheme(\n            SurveyCreatorTheme.SC2020,\n            SurveyCreatorTheme.DefaultDark,\n            SurveyCreatorTheme.DefaultContrast\n        );\n    </script>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Date Function day() Example\nDESCRIPTION: Example of using the day() function to extract the day of the month from a date (1-31).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n\"day('2000-01-30')\"\n```\n\n----------------------------------------\n\nTITLE: Installing Survey Creator Dependencies in JavaScript\nDESCRIPTION: This snippet shows how to install build dependencies for Survey Creator in a JavaScript environment. It navigates to the project directory and runs the npm install command.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-js/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd survey-creator/packages/survey-creator-js\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Overriding Individual Translation Strings\nDESCRIPTION: Customize specific translation strings by modifying properties in the locale object obtained with getLocaleStrings().\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Get English translations\nconst translations = SurveyCreatorCore.getLocaleStrings(\"en\");\n// In modular applications\nimport { getLocaleStrings } from \"survey-creator-core\";\nconst translations = getLocaleStrings(\"en\");\n\n// Change text for the `visible` property in Property Grid\ntranslations.p.visible = \"Is visible\";\n// Change text for the `visible` property in Modal Editor\ntranslations.pe.visible = \"Is element visible?\";\n// Change the JSON Editor tab name\ntranslations.ed.jsonEditor = \"Edit As Text\";\n```\n\n----------------------------------------\n\nTITLE: Building Production Bundle with Type-Checking\nDESCRIPTION: Command to type-check, compile, and minify the project for production deployment.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/example/README.md#2025-04-18_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Date Function today() Example for Yesterday and Tomorrow\nDESCRIPTION: Examples of using the today() function to get yesterday's and tomorrow's dates by shifting from the current date.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n\"today(-1)\"\n\"today(1)\"\n```\n\n----------------------------------------\n\nTITLE: Building Survey Creator Library in JavaScript\nDESCRIPTION: This snippet demonstrates how to build the Survey Creator library using npm. It runs the build script defined in the package.json file.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-js/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Loading Survey Creator Localization Scripts in HTML\nDESCRIPTION: Reference the Survey Creator localization script in the HTML head to enable translations for all available languages.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/survey-localization-translate-surveys-to-different-languages.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.i18n.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with Hot-Reload\nDESCRIPTION: Command to start the Vite development server with hot-reload functionality for development purposes.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/example/README.md#2025-04-18_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Equality\nDESCRIPTION: Expression that checks if a question value is equal to 10 using loose equality.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} = 10\"\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Survey Creator in JavaScript\nDESCRIPTION: This snippet shows how to run unit tests for the Survey Creator library using npm. It executes the test script which uses Karma as the test runner.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-js/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing Ace Editor for SurveyJS Creator\nDESCRIPTION: Command to install the ace-builds package which provides the Ace code editor functionality for the JSON Editor tab in SurveyJS Creator.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/get-started-vue.md#2025-04-18_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\nnpm install ace-builds --save\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm\nDESCRIPTION: Command to install all the project dependencies defined in package.json.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/example/README.md#2025-04-18_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Date Function currentDate() Example\nDESCRIPTION: Example of using the currentDate() function to get the current date and time.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n\"currentDate()\"\n```\n\n----------------------------------------\n\nTITLE: Building the Survey Creator Library\nDESCRIPTION: Command to build the Survey Creator library after installation. The built library will be available in the 'build' directory.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running Survey Creator React Unit Tests\nDESCRIPTION: Command to run the unit tests for Survey Creator React using Karma test runner.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing Build Dependencies for Survey Creator React\nDESCRIPTION: Commands for installing the necessary dependencies to build the Survey Creator React component from source.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd survey-creator/packages/survey-creator-react\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Contains\nDESCRIPTION: Expression that checks if a question value contains the string 'abc'.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} contains 'abc'\"\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Less Than or Equal\nDESCRIPTION: Expression that checks if a question value is less than or equal to 10.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} <= 10\"\n```\n\n----------------------------------------\n\nTITLE: Vue 2 Package Migration\nDESCRIPTION: Package installation and import statements for Vue 2 implementation of Survey Creator V2.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_3\n\nLANGUAGE: cmd\nCODE:\n```\nnpm uninstall survey-creator\nnpm install survey-creator-knockout --save\n```\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\nimport \"survey-core/defaultV2.min.css\";\nimport \"survey-creator-core/survey-creator-core.min.css\";\n</script>\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Survey Creator Vue 3\nDESCRIPTION: This command runs unit tests for the Survey Creator / Form Builder Vue 3 library using Karma test runner.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Not Equal\nDESCRIPTION: Expression that checks if a question value is not equal to 10.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} != 10\"\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Greater Than or Equal\nDESCRIPTION: Expression that checks if a question value is greater than or equal to 10.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} >= 10\"\n```\n\n----------------------------------------\n\nTITLE: Knockout/jQuery Script References Update\nDESCRIPTION: Updated CDN script and stylesheet references for Knockout and jQuery implementations.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/survey-core/survey.core.min.css\"></script>\n<script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n<script src=\"https://unpkg.com/survey-knockout-ui/survey-knockout-ui.min.js\"></script>\n\n<link  href=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n<script src=\"https://unpkg.com/survey-creator-core/survey-creator-core.min.js\"></script>\n<script src=\"https://unpkg.com/survey-creator-knockout/survey-creator-knockout.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Mobile Browser Support HTML Structure\nDESCRIPTION: HTML markup defining supported mobile browsers with their minimum versions, following the same styling pattern as desktop browsers.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/supported-browsers.md#2025-04-18_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-chrome.svg\" alt=\"Google Chrome icon\"> <span>Google Chrome for Android 100+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-safari.svg\" alt=\"Safari icon\"> <span>Safari iOS 15+</span> </div>\n```\n\n----------------------------------------\n\nTITLE: Date Function year() Example\nDESCRIPTION: Example of using the year() function to extract the year from a date.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n\"year('2000-01-01')\"\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with Less Than\nDESCRIPTION: Expression that checks if a question value is less than 10.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} < 10\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Window Safely in SurveyJS Creator\nDESCRIPTION: A bug fix that implements safe access to the global window object, addressing issue #6763 in the SurveyJS Creator repository.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* access global window safely ([#6763](https://github.com/surveyjs/survey-creator/issues/6763)) ([4a63812](https://github.com/surveyjs/survey-creator/commit/4a63812b8207c8290b57f40ed07d5a2c1144322c))\n```\n\n----------------------------------------\n\nTITLE: Logical Operator Example with AND\nDESCRIPTION: Expression that combines two conditions with AND, returning true only if both conditions are true.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} empty and {q2} empty\"\n```\n\n----------------------------------------\n\nTITLE: Comparison Operator Example with All Of\nDESCRIPTION: Expression that checks if a question array value contains all values from a specified array.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"{q1} allof [ 'value1', 'value2', 'value3' ]\"\n```\n\n----------------------------------------\n\nTITLE: Updating German Translation of 'Header'\nDESCRIPTION: A bug fix that changes the German translation of the word 'header', addressing issue #5013 in the SurveyJS Creator repository.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/CHANGELOG.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* change german translation of \"header\" ([#5013](https://github.com/surveyjs/survey-creator/issues/5013)) ([a004c08](https://github.com/surveyjs/survey-creator/commit/a004c08f3a576450023f163a8d902e469afb2bf1))\n```\n\n----------------------------------------\n\nTITLE: Updating German Translation for Header\nDESCRIPTION: Bug fix changing the German translation of the word \"header\", addressing issue #5013. This localization update was implemented in version 1.9.123.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/CHANGELOG.md#2025-04-18_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\nchange german translation of \"header\" ([#5013](https://github.com/surveyjs/survey-creator/issues/5013)) ([a004c08](https://github.com/surveyjs/survey-creator/commit/a004c08f3a576450023f163a8d902e469afb2bf1))\n```\n\n----------------------------------------\n\nTITLE: Angular Package Uninstallation Commands\nDESCRIPTION: Commands to uninstall old Survey Creator packages when migrating to Angular implementation.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/migration-guide-to-survey-creator-v2.md#2025-04-18_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\nnpm uninstall survey-creator\nnpm uninstall survey-creator-knockout\n```\n\n----------------------------------------\n\nTITLE: Date Function weekday() Example\nDESCRIPTION: Example of using the weekday() function to get the day of the week from a date (0-6, Sunday to Saturday).\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-expression-syntax.md#2025-04-18_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n\"weekday('2000-01-01')\"\n```\n\n----------------------------------------\n\nTITLE: Removing Unused Return Value from showModalPropertyEditor\nDESCRIPTION: A bug fix that removes an unused return value from the showModalPropertyEditor function, addressing issue #5421 in the SurveyJS Creator repository.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* remove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([5a2a0ea](https://github.com/surveyjs/survey-creator/commit/5a2a0eaf7883c2b1ba472d87a85bb09b57f075a6))\n* remove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([0ec293c](https://github.com/surveyjs/survey-creator/commit/0ec293c2467fb950a0bfac9832721ac95f90e597))\n```\n\n----------------------------------------\n\nTITLE: Building Survey Creator for Vue 3\nDESCRIPTION: This command builds the Survey Creator / Form Builder library for Vue 3. The built library will be available in the \"build\" directory.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Formatting Markdown Changelog Entry\nDESCRIPTION: Example of markdown formatting for a changelog entry showing version number, comparison link, and bug fixes section.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-js/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### [2.0.5](https://github.com/surveyjs/survey-creator/compare/v2.0.4...v2.0.5) (2025-04-15)\n\n### Bug Fixes\n\n* access global window safely ([#6763](https://github.com/surveyjs/survey-creator/issues/6763)) ([4a63812](https://github.com/surveyjs/survey-creator/commit/4a63812b8207c8290b57f40ed07d5a2c1144322c))\n```\n\n----------------------------------------\n\nTITLE: Version Links in Markdown\nDESCRIPTION: Links to version comparisons between SurveyJS Editor releases using GitHub compare view URLs. Each entry follows a standard format with version number, compare link, and date.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.0.29](https://github.com/surveyjs/editor/compare/v1.0.28...v1.0.29) (2018-06-26)\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Window Safely in SurveyJS Creator\nDESCRIPTION: Bug fix implemented in version 2.0.5 to safely access the global window object, preventing potential issues in environments where window might not be available. This addresses issue #6763.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* access global window safely ([#6763](https://github.com/surveyjs/survey-creator/issues/6763)) ([4a63812](https://github.com/surveyjs/survey-creator/commit/4a63812b8207c8290b57f40ed07d5a2c1144322c))\n```\n\n----------------------------------------\n\nTITLE: Building Survey Creator React Library\nDESCRIPTION: Command to build the Survey Creator React library from source code.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/README.md#2025-04-18_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Implementing Safe Global Window Access in JavaScript\nDESCRIPTION: Fix for safely accessing the global window object in JavaScript, addressing issue #6763. This prevents errors when accessing window in environments where it might not be defined.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\naccess global window safely ([#6763](https://github.com/surveyjs/survey-creator/issues/6763)) ([4a63812](https://github.com/surveyjs/survey-creator/commit/4a63812b8207c8290b57f40ed07d5a2c1144322c))\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Survey Creator\nDESCRIPTION: Command to run unit tests for the Survey Creator library using Karma test runner.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-core/README.md#2025-04-18_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Updating German Translation for Header in SurveyJS Creator\nDESCRIPTION: Bug fix implemented in version 1.9.123 to change the German translation of the word \"header\". This addresses issue #5013 to improve localization consistency.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/CHANGELOG.md#2025-04-18_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* change german translation of \"header\" ([#5013](https://github.com/surveyjs/survey-creator/issues/5013)) ([a004c08](https://github.com/surveyjs/survey-creator/commit/a004c08f3a576450023f163a8d902e469afb2bf1))\n```\n\n----------------------------------------\n\nTITLE: Building Survey Creator Angular from Sources\nDESCRIPTION: A series of commands to build the Survey Creator for Angular from source code. Includes steps to install dependencies and build the library.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-angular/README.md#2025-04-18_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd survey-creator/packages/survey-creator-angular\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Linting Project with ESLint\nDESCRIPTION: Command to run ESLint for code quality checking and ensuring consistent code style.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/example/README.md#2025-04-18_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm run lint\n```\n\n----------------------------------------\n\nTITLE: Configuration Example for Image and Video Choice Questions\nDESCRIPTION: Shows common property values used for configuring visual containers in SurveyJS forms. These values control display area dimensions and responsiveness.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/end-user-guide-how-to-add-image-or-video-choice-question-to-form.md#2025-04-18_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n- Minimum display area width: 200px (default)\n- Maximum display area width: 400px (default)\n- Minimum display area height: 133px (default)\n- Maximum display area height: 266px (default)\n```\n\n----------------------------------------\n\nTITLE: Desktop Browser Support HTML Structure\nDESCRIPTION: HTML markup defining supported desktop browsers with their minimum versions, using a custom CSS class for styling browser entries.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/docs/supported-browsers.md#2025-04-18_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-chrome.svg\" alt=\"Google Chrome icon\"> <span>Google Chrome 100+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-firefox.svg\" alt=\"Mozilla Firefox icon\"> <span>Firefox 100+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-safari.svg\" alt=\"Safari icon\"> <span>Safari 15.0+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-opera.svg\" alt=\"Opera icon\"> <span>Opera 100+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-edge.svg\" alt=\"Microsoft Edge icon\"> <span>Microsoft Edge 100+</span> </div>\n<div class=\"v2-class---documentation-page__supported-browsers\"> <img src=\"images/browser-icons-ie.svg\" alt=\"Internet Explorer icon\"> <span>Internet Explorer 11 (polyfills required)</span> </div>\n```\n\n----------------------------------------\n\nTITLE: Removing Unused Return Value in SurveyJS Modal Property Editor\nDESCRIPTION: Bug fix implemented in version 1.10.1 to remove an unused return value from the showModalPropertyEditor method. This change was implemented in two separate commits to address issue #5421.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* remove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([5a2a0ea](https://github.com/surveyjs/survey-creator/commit/5a2a0eaf7883c2b1ba472d87a85bb09b57f075a6))\n* remove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([0ec293c](https://github.com/surveyjs/survey-creator/commit/0ec293c2467fb950a0bfac9832721ac95f90e597))\n```\n\n----------------------------------------\n\nTITLE: Removing Unused Return Value from showModalPropertyEditor Function\nDESCRIPTION: Bug fix removing an unused return value from the showModalPropertyEditor function, addressing issue #5421. This change appeared in two separate commits in version 1.10.1.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-react/CHANGELOG.md#2025-04-18_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nremove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([5a2a0ea](https://github.com/surveyjs/survey-creator/commit/5a2a0eaf7883c2b1ba472d87a85bb09b57f075a6))\nremove unused return value from showModalPropertyEditor ([#5421](https://github.com/surveyjs/survey-creator/issues/5421)) ([0ec293c](https://github.com/surveyjs/survey-creator/commit/0ec293c2467fb950a0bfac9832721ac95f90e597))\n```\n\n----------------------------------------\n\nTITLE: Fixing Survey-Core Instance in SurveyJS Example\nDESCRIPTION: Bug fix implemented in version 1.9.99 to ensure that only one instance of the survey-core library is used in an example. This addresses potential conflicts or performance issues related to multiple library instances.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-vue/CHANGELOG.md#2025-04-18_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* should be one instance of survey-core in example ([cd30e10](https://github.com/surveyjs/survey-library/commit/cd30e10887cc1d1b24dad0a7455df0b560045258))\n```\n\n----------------------------------------\n\nTITLE: Accessing Window Safely in JavaScript\nDESCRIPTION: Bug fix implementation that safely accesses the global window object to prevent errors in environments where window might not be defined.\nSOURCE: https://github.com/surveyjs/survey-creator/blob/master/packages/survey-creator-angular/CHANGELOG.md#2025-04-18_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\naccess global window safely\n```"
  }
]
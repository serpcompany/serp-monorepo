[
  {
    "owner": "konkonam",
    "repo": "nuxt-shopify",
    "content": "TITLE: Complete Nuxt Shopify Module Configuration Reference\nDESCRIPTION: Full configuration reference showing all available options for the Nuxt Shopify module including sandbox mode, code generation settings, and logger configuration.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/configuration/module.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    modules: [ '@konkonam/nuxt-shopify' ],\n    \n    shopify: {\n        name: 'quickstart-abcd1234',                        // Shopify app name.\n        \n        clients: {                                          // Available shopify clients.\n\n            storefront: {                                   // Storefront client options.\n                apiVersion: '2024-10',                      // API version to use.\n                publicAccessToken: 'YOUR_ACCESS_TOKEN',     // Public access token to use.\n                privateAccessToken: 'YOUR_ACCESS_TOKEN',    // Private access token to use.\n                sandbox: true,                              // Enable sandbox for the client.\n                skipCodegen: false,                         // Skip code generation for the client.\n                documents: []                               // Glob patterns to include in code generation.\n            },\n            \n            admin: {                                        // Admin client options.\n                apiVersion: '2024-10',                      // API version to use.\n                accessToken: 'YOUR_ACCESS_TOKEN',           // Access token to use.\n                sandbox: true,                              // Enable sandbox for the client.\n                skipCodegen: false,                         // Skip code generation for the client.\n                documents: []                               // Glob patterns to include in code generation.\n            },\n        },\n    },\n\n    logger: {}                                              // Optional module logger configuration (Consola options).\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Shopify API Settings in Nuxt Config\nDESCRIPTION: Configuration example for setting up Shopify API credentials in nuxt.config.ts, including storefront and admin API settings.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    shopify: {\n        name: 'quickstart-abcd1234',\n        clients: {\n            storefront: {\n                apiVersion: '2024-10',\n                publicAccessToken: 'YOUR_ACCESS_TOKEN',\n            },\n\n            admin: {\n                apiVersion: '2024-10',\n                accessToken: 'YOUR_ACCESS_TOKEN',\n            },\n        },\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Nuxt Shopify Module Configuration\nDESCRIPTION: Basic configuration example showing how to set up the Nuxt Shopify module with both storefront and admin clients. Includes essential parameters like API version and access tokens.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/configuration/module.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    modules: ['@konkonam/nuxt-shopify'],\n\n    shopify: {\n        name: 'quickstart-abcd1234',\n        clients: {\n            storefront: {\n                apiVersion: '2024-10',\n                publicAccessToken: 'YOUR_ACCESS_TOKEN',\n            },\n\n            admin: {\n                apiVersion: '2024-10',\n                accessToken: 'YOUR_ACCESS_TOKEN',\n            },\n        },\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Complete Validated Storefront API Query\nDESCRIPTION: Full implementation of a Storefront API endpoint with Zod validation and GraphQL query\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/storefront.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { z } from 'zod'\n\nconst schema = z.object({\n    first: z.preprocess(v => Number(v), z.number().min(1)),\n})\n\nexport default defineEventHandler(async () => {\n    const storefront = useStorefront()\n    const variables = await getValidatedQuery(event, schema.parse)\n    \n    const query = `#graphql\n        query FetchProducts($first: Int) {\n            products(first: $first) {\n                nodes {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    `\n    \n    return storefront.request(query, { variables })\n})\n```\n\n----------------------------------------\n\nTITLE: Querying Shopify Storefront API with TypeScript in Nuxt\nDESCRIPTION: Demonstrates how to use the automatically typed Shopify Storefront API in a Nuxt server API route. The example shows a GraphQL query for fetching menu and product data with automatic type inference.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/configuration/codegen.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/server/api/example.ts\n\n// ...\nconst storefront = useStorefront()\n\nconst myQuery = await storefront.request(`#graphql\n    query ExampleQuery {\n        menu(handle: \"main-menu\") {\n            ...MenuFields\n        }\n        products(first: 10) {\n            ...ProductFields\n        }\n    }\n`)\n// ...\n```\n\n----------------------------------------\n\nTITLE: Querying Shopify Products using Admin API in Nuxt Server\nDESCRIPTION: Example of using the useAdmin utility to fetch products from Shopify Admin API within a Nuxt server endpoint. The code demonstrates GraphQL query execution with variables and type safety.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/admin.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineEventHandler(async () => {\n    const admin = useAdmin()\n\n    return await admin.request(`#graphql\n        query FetchProducts($first: Int) {\n            products(first: $first) {\n                nodes {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    `, {\n        variables: {\n            first: 1,\n        },\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Accessing Shopify Storefront API via Nitro Endpoint\nDESCRIPTION: Example of creating a Nitro endpoint to fetch products from the Shopify Storefront API using GraphQL. This demonstrates how to use the useStorefront utility provided by the module.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/quickstart.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/server/api/products.ts\n\nexport default defineEventHandler(async () => {\n    const storefront = useStorefront()\n\n    const query = `#graphql\n        query FetchProducts($first: Int) {\n            products(first: $first) {\n                nodes {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    `\n\n    return storefront.request(query, {\n        variables: {\n            first: 1,\n        },\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Admin API Access in Nitro Endpoint\nDESCRIPTION: Server endpoint example demonstrating how to use the useAdmin utility to access Shopify's Admin API.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/server/api/your-admin-api-handler.ts\n\nexport default defineEventHandler(async () => {\n    const admin = useAdmin()\n\n    return await admin.request(...)\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Storefront API Access in Nitro Endpoint\nDESCRIPTION: Server endpoint example that demonstrates how to use the useStorefront utility to query Shopify's Storefront API for product data.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/server/api/products.ts\n\nexport default defineEventHandler(async () => {\n    const storefront = useStorefront()\n\n    return await storefront.request(`#graphql\n        query FetchProducts($first: Int) {\n            products(first: $first) {\n                nodes {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    `, {\n        variables: {\n            first: 3,\n        },\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Storefront API Query in TypeScript\nDESCRIPTION: Demonstrates how to use the useStorefront utility to fetch products from Shopify's Storefront API using GraphQL\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/storefront.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineEventHandler(async () => {\n    const storefront = useStorefront()\n\n    return await storefront.request(`#graphql\n        query FetchProducts($first: Int) {\n            products(first: $first) {\n                nodes {\n                    id\n                    title\n                    description\n                }\n            }\n        }\n    `, {\n        variables: {\n            first: 1,\n        },\n    })\n})\n```\n\n----------------------------------------\n\nTITLE: Minimal Admin Client Configuration\nDESCRIPTION: Minimal configuration example for setting up only the Shopify Admin client with essential parameters.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/configuration/module.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    shopify: {\n        name: 'quickstart-abcd1234',\n\n        clients: {\n            admin: {\n                apiVersion: '2024-10',\n                accessToken: 'YOUR_ACCESS_TOKEN',\n            },\n        },\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Minimal Storefront Client Configuration\nDESCRIPTION: Minimal configuration example for setting up only the Shopify Storefront client with essential parameters.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/configuration/module.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    shopify: {\n        name: 'quickstart-abcd1234',\n\n        clients: {\n            storefront: {\n                apiVersion: '2024-10',\n                publicAccessToken: 'YOUR_ACCESS_TOKEN',\n            },\n        },\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Client-side API Call Example\nDESCRIPTION: Shows how to call the validated API endpoint from a Nuxt page component\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/storefront.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst response = await useFetch('/api/products', {\n    query: {\n        first: 1,\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Fetching Data from Storefront API in Vue Component\nDESCRIPTION: Client-side code showing how to fetch data from a Nitro endpoint that accesses the Shopify Storefront API.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/pages/your-page.vue\n\nconst { data, error } = await useFetch('/api/products')\n```\n\n----------------------------------------\n\nTITLE: Configuring Shopify Settings in Nuxt.js\nDESCRIPTION: Add Shopify configuration to the Nuxt configuration file (nuxt.config.ts), including the store name, API version, and public access token.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/quickstart.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/nuxt.config.ts\n\nexport default defineNuxtConfig({\n    shopify: {\n        name: 'quickstart-abcd1234',\n            clients: {\n                storefront: {\n                apiVersion: '2024-10',\n                publicAccessToken: 'YOUR_ACCESS_TOKEN',\n            },\n        },\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Nuxt Shopify Module to Nuxt Configuration\nDESCRIPTION: Code snippet showing how to add the Nuxt Shopify module to the modules array in nuxt.config.ts file.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n    modules: [\n        '@konkonam/nuxt-shopify',\n    ],\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Nuxt.js to Use Shopify Module\nDESCRIPTION: Add the @konkonam/nuxt-shopify module to the modules array in the Nuxt configuration file (nuxt.config.ts).\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/quickstart.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// ~/nuxt.config.ts\n\nexport default defineNuxtConfig({\n    modules: [\n        '@konkonam/nuxt-shopify',\n    ],\n})\n```\n\n----------------------------------------\n\nTITLE: Creating GraphQL Configuration File for IDE Support\nDESCRIPTION: YAML configuration that defines GraphQL schema paths to enable IDE support for GraphQL operations in a Nuxt Shopify project.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# ~/graphql.config.yml\n\nschema:\n  - ./.nuxt/schema/storefront.schema.json\n  - ./.nuxt/schema/admin.schema.json\n```\n\n----------------------------------------\n\nTITLE: Setting Up GraphQL Configuration for IDE Support\nDESCRIPTION: Create a GraphQL configuration file (graphql.config.yml) in the project root to enable IDE support for Shopify GraphQL schemas.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/quickstart.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n# ~/graphql.config.yml\nschema:\n  - ./.nuxt/schema/storefront.schema.json\n  - ./.nuxt/schema/admin.schema.json\n```\n\n----------------------------------------\n\nTITLE: Creating Zod Schema for GraphQL Variables\nDESCRIPTION: Defines a Zod schema for validating the 'first' parameter, including type conversion from string to number\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/storefront.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { z } from 'zod'\n\nconst schema = z.object({\n  first: z.preprocess(v => Number(v), z.number().min(1)),\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring VitePress Homepage YAML\nDESCRIPTION: Homepage configuration for a Nuxt-Shopify documentation site using VitePress. Defines the layout, hero section with actions and image, and feature list highlighting Storefront API, Admin API, typed operations, and GraphiQL Explorer integration.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# https://vitepress.dev/reference/default-theme-home-page\nlayout: home\n\nhero:\n  name: \"nuxt-shopify\"\n\n  text: \"Plug & play Shopify integration\"\n\n  tagline: \"for Nuxt 3 & 4\"\n\n  actions:\n    - theme: brand\n      text: \"Quickstart\"\n      link: \"/quickstart\"\n    - theme: alt\n      text: \"Examples\"\n      link: \"/examples/storefront\"\n\n  image:\n    src: /logo.png\n    alt: \"nuxt-shopify logo\"\n\nfeatures:\n  - title: Storefront API\n    icon: 🛍️\n    details: \"Integrate the shopify storefront API into your nuxt app\"\n    link: \"/examples/storefront\"\n  - title: Admin API\n    icon: 🔐\n    details: \"Connect to the shopify admin API\"\n    link: \"/examples/admin\"\n  - title: Typed operations\n    icon: ⚡️\n    details: \"Fully typed GraphQL operations with hot-reloading\"\n  - title: GraphiQL Explorer\n    icon: 🧭\n    details: \"Integrates the GraphiQL Explorer for faster development\"\n```\n\n----------------------------------------\n\nTITLE: Installing Nuxt Shopify Module via npm\nDESCRIPTION: Command to install the @konkonam/nuxt-shopify module as a development dependency in your Nuxt.js project.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/quickstart.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D @konkonam/nuxt-shopify\n```\n\n----------------------------------------\n\nTITLE: Installing Nuxt Shopify Module via NPM\nDESCRIPTION: Command to install the Nuxt Shopify module as a development dependency in a Nuxt project.\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -D @konkonam/nuxt-shopify\n```\n\n----------------------------------------\n\nTITLE: Installing Zod Validation Library\nDESCRIPTION: Command to install Zod package for input validation\nSOURCE: https://github.com/konkonam/nuxt-shopify/blob/main/docs/examples/storefront.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install zod\n```"
  }
]
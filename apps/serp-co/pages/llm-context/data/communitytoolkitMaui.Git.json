[
  {
    "owner": "communitytoolkit",
    "repo": "maui.git",
    "content": "TITLE: Initializing .NET MAUI Community Toolkit in MauiProgram.cs\nDESCRIPTION: This code shows how to initialize the .NET MAUI Community Toolkit in your application's MauiProgram.cs file. It demonstrates adding the UseMauiCommunityToolkit() extension method to the MauiApp builder chain along with configuring fonts.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui;\n\npublic static class MauiProgram\n{\n\tpublic static MauiApp CreateMauiApp()\n\t{\n\t\tvar builder = MauiApp.CreateBuilder();\n\t\tbuilder\n\t\t\t.UseMauiApp<App>()\n\t\t\t// Initialize the .NET MAUI Community Toolkit by adding the below line of code\n\t\t\t.UseMauiCommunityToolkit()\n\t\t\t// After initializing the .NET MAUI Community Toolkit, optionally add additional fonts\n\t\t\t.ConfigureFonts(fonts =>\n\t\t\t{\n\t\t\t\tfonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n\t\t\t\tfonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n\t\t\t});\n\n\t\t// Continue initializing your .NET MAUI App here\n\n\t\treturn builder.Build();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Adding .NET MAUI Community Toolkit Namespace in XAML\nDESCRIPTION: This snippet shows the XML namespace declaration needed to use the .NET MAUI Community Toolkit in XAML files. Adding this namespace allows access to all toolkit components in your XAML markup.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\nxmlns:toolkit=\"http://schemas.microsoft.com/dotnet/2022/maui/toolkit\"\n```\n\n----------------------------------------\n\nTITLE: Null Checking with Pattern Matching in C#\nDESCRIPTION: Demonstrates the preferred way of checking for null values using the 'is' operator instead of equality operators. This approach provides more type safety and readability in conditional statements.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\n// null\nif (something is null)\n{\n\n}\n\n// or not null\nif (something is not null)\n{\n   \n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Task/ValueTask Methods with CancellationToken in C#\nDESCRIPTION: Best practices for implementing methods that return Task or ValueTask, including using CancellationToken and providing default values for public methods.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\npublic Task SomeMethodAsync(CancellationToken token = default)\n{\n    token.ThrowIfCancellationRequested();\n    // Method implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing .NET MAUI Community Toolkit in C#\nDESCRIPTION: This code snippet demonstrates how to initialize the .NET MAUI Community Toolkit in a MAUI application. It shows the necessary using statement and the extension method that needs to be called in the CreateMauiApp method of the MauiProgram.cs file.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Core/readme.txt#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui.Core;\n\npublic static MauiApp CreateMauiApp()\n{\n    var builder = MauiApp.CreateBuilder();\n\n    // Initialise the toolkit\n\tbuilder.UseMauiApp<App>().UseMauiCommunityToolkitCore();\n\n    // the rest of your logic...\n}\n```\n\n----------------------------------------\n\nTITLE: File Scoped Namespaces in C# 10\nDESCRIPTION: Demonstrates the use of file scoped namespaces introduced in C# 10 to reduce code verbosity. This syntax applies the namespace to the entire file without requiring braces around the code.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace CommunityToolkit.Maui.Converters;\n\nusing System;\n\nclass BoolToObjectConverter\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Type Checking with Pattern Matching in C#\nDESCRIPTION: Shows how to check object types using pattern matching with the 'is' operator, which allows for type checking and variable declaration in a single statement.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nif (something is Bucket bucket)\n{\n   bucket.Empty();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing .NET MAUI Community Toolkit in MauiProgram.cs\nDESCRIPTION: This code demonstrates how to initialize the .NET MAUI Community Toolkit in a MAUI application. It shows the required extension method UseMauiCommunityToolkit() that needs to be called after builder.UseMauiApp<App>() and before other configuration options like ConfigureFonts().\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui/ReadMe.txt#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui;\n\npublic static class MauiProgram\n{\n\tpublic static MauiApp CreateMauiApp()\n\t{\n\t\tvar builder = MauiApp.CreateBuilder();\n\t\tbuilder\n\t\t\t.UseMauiApp<App>()\n\t\t\t// Initialize the .NET MAUI Community Toolkit by adding the below line of code\n\t\t\t.UseMauiCommunityToolkit()\n\t\t\t// After initializing the .NET MAUI Community Toolkit, optionally add additional fonts\n\t\t\t.ConfigureFonts(fonts =>\n\t\t\t{\n\t\t\t\tfonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n\t\t\t\tfonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n\t\t\t});\n\n\t\t// Continue initializing your .NET MAUI App here\n\n\t\treturn builder.Build();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Using Braces with Control Structures in C#\nDESCRIPTION: Illustrates the requirement to use braces with control flow statements like if, for, foreach, do, and while, even for single-line blocks, to improve code readability and prevent bugs.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nif (something is not null)\n{\n   ActOnIt();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing MediaElement in MauiProgram.cs for .NET MAUI Community Toolkit\nDESCRIPTION: This code snippet demonstrates how to initialize the MediaElement component from the .NET MAUI Community Toolkit in the MauiProgram.cs file. It shows how to call the UseMauiCommunityToolkitMediaElement() extension method as part of the application's initialization process.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.MediaElement/readme.txt#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui;\n\npublic static class MauiProgram\n{\n\tpublic static MauiApp CreateMauiApp()\n\t{\n\t\tvar builder = MauiApp.CreateBuilder();\n\t\tbuilder\n\t\t\t.UseMauiApp<App>()\n\t\t\t// Initialize the .NET MAUI Community Toolkit MediaElement by adding the below line of code\n\t\t\t.UseMauiCommunityToolkitMediaElement()\n\t\t\t// After initializing the .NET MAUI Community Toolkit, optionally add additional fonts\n\t\t\t.ConfigureFonts(fonts =>\n\t\t\t{\n\t\t\t\tfonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n\t\t\t\tfonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n\t\t\t});\n\n\t\t// Continue initializing your .NET MAUI App here\n\n\t\treturn builder.Build();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing MAUI Community Toolkit Maps in MauiProgram.cs\nDESCRIPTION: Demonstrates how to initialize the MAUI Community Toolkit Maps component with platform-specific configurations. Includes conditional compilation for Windows platform and font configuration setup.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Maps/ReadMe.txt#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui;\n\npublic static class MauiProgram\n{\n\tpublic static MauiApp CreateMauiApp()\n\t{\n\t\tvar builder = MauiApp.CreateBuilder();\n\t\tbuilder\n\t\t\t.UseMauiApp<App>()\n\n#if WINDOWS\n\t\t\t// Initialize the .NET MAUI Community Toolkit Maps by adding the below line of code\n\t\t\t.UseMauiCommunityToolkitMaps(\"key\")\n#else\n            // For all other platforms\n            .UseMauiMaps()\n#endif\n\n\t\t\t// After initializing the .NET MAUI Community Toolkit, optionally add additional fonts\n\t\t\t.ConfigureFonts(fonts =>\n\t\t\t{\n\t\t\t\tfonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n\t\t\t\tfonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n\t\t\t});\n\n\t\t// Continue initializing your .NET MAUI App here\n\n\t\treturn builder.Build();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing .NET MAUI Community Toolkit CameraView in MauiProgram.cs\nDESCRIPTION: This code snippet demonstrates how to initialize the .NET MAUI Community Toolkit CameraView in the MauiProgram.cs file. It shows the process of creating a MauiApp builder, adding the CameraView, and configuring fonts.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Camera/readme.txt#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing CommunityToolkit.Maui;\n\npublic static class MauiProgram\n{\n\tpublic static MauiApp CreateMauiApp()\n\t{\n\t\tvar builder = MauiApp.CreateBuilder();\n\t\tbuilder\n\t\t\t.UseMauiApp<App>()\n\t\t\t// Initialize the .NET MAUI Community Toolkit CameraView by adding the below line of code\n\t\t\t.UseMauiCommunityToolkitCamera()\n\t\t\t// After initializing the .NET MAUI Community Toolkit, optionally add additional fonts\n\t\t\t.ConfigureFonts(fonts =>\n\t\t\t{\n\t\t\t\tfonts.AddFont(\"OpenSans-Regular.ttf\", \"OpenSansRegular\");\n\t\t\t\tfonts.AddFont(\"OpenSans-Semibold.ttf\", \"OpenSansSemibold\");\n\t\t\t});\n\n\t\t// Continue initializing your .NET MAUI App here\n\n\t\treturn builder.Build();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Using Trace.WriteLine for Debug Logging in C#\nDESCRIPTION: Always use Trace.WriteLine() instead of Debug.WriteLine for debug logging because Debug.WriteLine is removed by the compiler in Release builds.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nTrace.WriteLine(\"Debug message\");\n```\n\n----------------------------------------\n\nTITLE: XAML Namespace Declaration for MAUI Community Toolkit\nDESCRIPTION: Shows the XAML namespace declaration required to use the MAUI Community Toolkit components in XAML files.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Maps/ReadMe.txt#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\nxmlns:toolkit=\"http://schemas.microsoft.com/dotnet/2022/maui/toolkit\"\n```\n\n----------------------------------------\n\nTITLE: MAUI Community Toolkit Rules Table in Markdown\nDESCRIPTION: Markdown tables documenting new and changed analyzer rules, including rule IDs, categories, and severity levels. Notably shows the change of rule MCT001 from Usage to Initialization category while maintaining Error severity.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Analyzers/AnalyzerReleases.Unshipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### New Rules\n\nRule ID | Category | Severity | Notes\n--------|----------|----------|--------------------\n\n### Changed Rules\n\nRule ID | New Category | New Severity | Old Category | Old Severity | Notes\n--------|--------------|--------------|--------------|--------------|-------\nMCT001 | Initialization | Error | Usage | Error | UseCommunityToolkitInitializationAnalyzer\n```\n\n----------------------------------------\n\nTITLE: Rule Documentation Tables in Markdown\nDESCRIPTION: Markdown tables documenting new and changed analyzer rules for the MAUI Community Toolkit, including rule IDs, categories, and severity levels.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.MediaElement.Analyzers/AnalyzerReleases.Unshipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### New Rules\n\nRule ID | Category | Severity | Notes\n--------|----------|----------|--------------------\n\n### Changed Rules\n\nRule ID | New Category | New Severity | Old Category | Old Severity | Notes\n--------|--------------|--------------|--------------|--------------|-------\nMCTME001 | Initialization | Error | Usage | Error | UseCommunityToolkitMediaElementInitializationAnalyzer\n```\n\n----------------------------------------\n\nTITLE: Rule Changes Table in Markdown\nDESCRIPTION: Markdown table showing changes to MCTSG001-004 rules, including category changes from Usage to TextColorTo while maintaining their respective severity levels.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.SourceGenerators/AnalyzerReleases.Unshipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRule ID | New Category | New Severity | Old Category | Old Severity | Notes\\n--------|--------------|--------------|--------------|--------------|-------\\nMCTSG001 | TextColorTo | Warning | Usage | Warning | TextColorToDiagnostic\\nMCTSG002 | TextColorTo | Error | Usage | Error | TextColorToDiagnostic\\nMCTSG003 | TextColorTo | Info | Usage | Info | TextColorToDiagnostic\\nMCTSG004 | TextColorTo | Info | Usage | Info | TextColorToDiagnostic\n```\n\n----------------------------------------\n\nTITLE: Creating Rule Documentation Table in Markdown\nDESCRIPTION: Markdown table structure for documenting rules with columns for Rule ID, Category, Severity, and Notes. The table includes header formatting with alignment indicators.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.SourceGenerators.Internal/AnalyzerReleases.Unshipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRule ID | Category | Severity | Notes\n--------|----------|----------|--------------------\n```\n\n----------------------------------------\n\nTITLE: Displaying New Rules in Markdown Table for MAUI Community Toolkit v1.0.0\nDESCRIPTION: A markdown table showing the new rule MCTME001 introduced in version 1.0.0. This rule produces an error when the MediaElement extension method is not found on MauiAppBuilder.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.MediaElement.Analyzers/AnalyzerReleases.Shipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRule ID | Category | Severity | Notes\n--------|----------|----------|--------------------\nMCTME001| Usage    | Error    | `.UseMauiCommunityToolkitMediaElement()` Not Found on MauiAppBuilder\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for New Analyzer Rules in MAUI Community Toolkit 1.0.0\nDESCRIPTION: A markdown table displaying the new analyzer rule MCTC001 which checks for proper usage of the camera extension method on MauiAppBuilder. The rule has Error severity and belongs to the Usage category.\nSOURCE: https://github.com/communitytoolkit/maui.git/blob/main/src/CommunityToolkit.Maui.Camera.Analyzers/AnalyzerReleases.Shipped.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nRule ID | Category | Severity | Notes                                               \n--------|----------|----------|-----------------------------------------------------\nMCTC001 | Usage    | Error    | `.UseMauiCommunityToolkitCamera()` Not Found on MauiAppBuilder  \n```"
  }
]
[
  {
    "owner": "rnmapbox",
    "repo": "maps",
    "content": "TITLE: Setting Mapbox Access Token in React Native\nDESCRIPTION: Code to set the Mapbox access token which is required for the map to work. You need to create an account on Mapbox and generate an access token from their website.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/GettingStarted.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Mapbox from \"@rnmapbox/maps\";\n\nMapbox.setAccessToken(\"<YOUR_ACCESSTOKEN>\");\n```\n\n----------------------------------------\n\nTITLE: Initializing React Native Project and Installing Mapbox Maps\nDESCRIPTION: Commands to initialize a new React Native project and install the rnmapbox/maps package from GitHub. This snippet creates a new project with a specific React Native version and adds the Mapbox maps library from the main branch.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nreact-native init sample --version 0.60.5\ncd sample\nyarn add https://github.com/rnmapbox/maps#main --save\n\ncode android/build.gradle \n```\n\n----------------------------------------\n\nTITLE: Basic Expo Plugin Configuration for @rnmapbox/maps\nDESCRIPTION: Basic configuration for the @rnmapbox/maps Expo plugin in app.json. This specifies the Mapbox Maps SDK version to use.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"@rnmapbox/maps\",\n        {\n          \"RNMapboxMapsVersion\": \"11.8.0\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Offline Pack in JavaScript\nDESCRIPTION: This snippet demonstrates how to create and register an offline pack using the createPack method. It includes options for zoom levels, style URL, and region bounds, as well as progress and error listeners.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst progressListener = (offlineRegion, status) => console.log(offlineRegion, status);\nconst errorListener = (offlineRegion, err) => console.log(offlineRegion, err);\n\nawait Mapbox.offlineManager.createPack({\n  name: 'offlinePack',\n  styleURL: 'mapbox://...',\n  minZoom: 14,\n  maxZoom: 20,\n  bounds: [[neLng, neLat], [swLng, swLat]]\n}, progressListener, errorListener)\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Map Component in React Native with Mapbox\nDESCRIPTION: A complete React Native component that demonstrates how to display a Mapbox map. It includes setting the access token, disabling telemetry, and rendering a MapView component with proper styling.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/GettingStarted.md#2025-04-16_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { Component } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Mapbox, {MapView} from \"@rnmapbox/maps\";\n\nMapbox.setAccessToken(\"<YOUR_ACCESSTOKEN>\");\n\nconst styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F5FCFF\"\n  },\n  container: {\n    height: 300,\n    width: 300,\n    backgroundColor: \"tomato\"\n  },\n  map: {\n    flex: 1\n  }\n});\n\nexport default class App extends Component {\n  componentDidMount() {\n    Mapbox.setTelemetryEnabled(false);\n  }\n\n  render() {\n    return (\n      <View style={styles.page}>\n        <View style={styles.container}>\n          <MapView style={styles.map} />\n        </View>\n      </View>\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Style Component json Property Type Definition\nDESCRIPTION: This snippet defines the expected type for the required json property of the Style component. It can accept either a MapboxJSON object that conforms to the Mapbox Style Specification schema or a URL to such JSON.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Style.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nMapboxJSON | URL\n```\n\n----------------------------------------\n\nTITLE: Adding a Basic Map Component in React Native with Mapbox\nDESCRIPTION: This snippet demonstrates how to set up a basic map view in a React Native application using the Mapbox Maps SDK. It initializes the Mapbox access token, creates a simple styled MapView component inside a container, and sets up the necessary styling.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Mapbox from '@rnmapbox/maps';\n\nMapbox.setAccessToken('<YOUR_ACCESSTOKEN>');\n\nconst App = () => {\n  return (\n    <View style={styles.page}>\n      <View style={styles.container}>\n        <Mapbox.MapView style={styles.map} />\n      </View>\n    </View>\n  );\n}\n\nexport default App;\n\nconst styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    height: 300,\n    width: 300,\n  },\n  map: {\n    flex: 1\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating 3D Buildings and Custom Streets with Mapbox Expressions\nDESCRIPTION: This example shows how to create 3D building extrusions with height-based coloring and custom street styling. It demonstrates transitions, line join styles, and other advanced styling properties.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst layerStyles = {\n  building: {\n    fillExtrusionOpacity: 1,\n    fillExtrusionHeight: ['get', 'height'],\n    fillExtrusionBase: ['get', 'min_height'],\n    fillExtrusionColor: [\n      'interpolate',\n      ['exponential', 1.5],\n      ['get', 'height'],\n      [0, 'white'],\n      [50, 'blue'],\n      [100, 'red'],\n    ],\n    fillExtrusionColorTransition: {duration: 2000, delay: 0},\n  },\n  streets: {\n    lineColor: 'blue',\n    lineWidth: 2,\n    lineOpacity: 0.50,\n    lineJoin: MapboxGL.LineJoin.Round,\n    lineCap: MapboxGL.LineCap.Round,\n    lineDasharray: [2, 2]\n  }\n};\n\n// ...\n\n<MapboxGL.FillExtrusionLayer\n  id='building3d'\n  sourceLayerID='building'\n  style={layerStyles.building}\n/>\n\n< MapboxGL.LineLayer\n  id='streetLineColor'\n  sourceLayerID='road'\n  minZoomLevel={14}\n  belowLayerID='building3d'\n  style={layerStyles.streets}\n/>\n```\n\n----------------------------------------\n\nTITLE: Initializing MapboxGL React Native Module\nDESCRIPTION: This snippet defines the MapboxGL module for React Native, including method declarations and event emitters. It sets up the bridge between JavaScript and native MapboxGL functionality.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/android/src/main/java/README.md#2025-04-16_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { NativeModules, NativeEventEmitter } from 'react-native';\n\nconst MapboxGL = NativeModules.MGLModule;\nconst MapboxGLManager = NativeModules.MGLMapViewManager;\n\nconst MapboxGLEventEmitter = new NativeEventEmitter(MapboxGL);\n\nMapboxGL.StyleURL = {\n  Street: 'mapbox://styles/mapbox/streets-v11',\n  Dark: 'mapbox://styles/mapbox/dark-v10',\n  Light: 'mapbox://styles/mapbox/light-v10',\n  Outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n  Satellite: 'mapbox://styles/mapbox/satellite-v9',\n  SatelliteStreet: 'mapbox://styles/mapbox/satellite-streets-v11',\n};\n\nMapboxGL.RequestParameters = {\n  MAIN_THREAD: 'main_thread',\n  BACKGROUND_THREAD: 'background_thread',\n};\n\nMapboxGL.AnimatedPoint = 'animated_point';\n\nexport default {\n  ...MapboxGL,\n  MapView: MapboxGLManager,\n  setAccessToken: MapboxGL.setAccessToken,\n  getAccessToken: MapboxGL.getAccessToken,\n  setTelemetryEnabled: MapboxGL.setTelemetryEnabled,\n  isTelemetryEnabled: MapboxGL.isTelemetryEnabled,\n  addCustomHeader: MapboxGL.addCustomHeader,\n  removeCustomHeader: MapboxGL.removeCustomHeader,\n  // ... other method declarations\n  on: (eventName, handler) => MapboxGLEventEmitter.addListener(eventName, handler),\n  off: (eventName, handler) => {\n    if (handler) {\n      MapboxGLEventEmitter.removeListener(eventName, handler);\n    } else {\n      MapboxGLEventEmitter.removeAllListeners(eventName);\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested Expressions for Combined Zoom and Attribute Styling\nDESCRIPTION: These examples demonstrate how to combine zoom-based and attribute-based expressions to create styles that change based on both zoom level and feature properties, creating more dynamic visualizations.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// would change based on the zoom level and rating value\n// {zoom_level}: [{value}, {style_value}]\n[\n  'step',\n  ['zoom'],\n  ['step', ['get', 'rating'], 0, 5, 5],\n  20,\n  ['step', ['get', 'rating'], 0, 5, 20],\n];\n\n{\n  circleRadius: [\n    'step',\n    ['zoom'],\n    ['step', ['get', 'rating'], 0, 5, 5],\n    20,\n    ['step', ['get', 'rating'], 0, 5, 20],\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Telemetry in React Native Mapbox\nDESCRIPTION: Code that disables Mapbox's telemetry collection. This is implemented in a React component's lifecycle method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/GettingStarted.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n  componentDidMount() {\n    Mapbox.setTelemetryEnabled(false);\n  }\n```\n\n----------------------------------------\n\nTITLE: Fetching Cluster Leaves in JavaScript\nDESCRIPTION: This method returns a FeatureCollection from a cluster. It takes the cluster feature, a limit for the number of points to return, and an offset for pagination.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ShapeSource.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst collection = await shapeSource.getClusterLeaves(clusterId, limit, offset);\n```\n\n----------------------------------------\n\nTITLE: Deleting an Offline Pack in JavaScript\nDESCRIPTION: This snippet demonstrates how to unregister and delete an offline pack using the deletePack method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.deletePack('packName')\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom HTTP Header in React Native Mapbox\nDESCRIPTION: Adding a custom HTTP header to Mapbox tile requests. This allows for custom authentication or metadata to be included with requests to the tile server.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomHttpHeaders.md#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nMapboxGL.addCustomHeader('Authorization', '{auth header}');\n```\n\n----------------------------------------\n\nTITLE: Invalidating an Offline Pack in JavaScript\nDESCRIPTION: This snippet shows how to invalidate a specific offline pack using the invalidatePack method, which checks and updates local tiles against the server version.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.invalidatePack('packName')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Offline Packs in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve all current offline packs stored in the database using the getPacks method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst offlinePacks = await Mapbox.offlineManager.getPacks();\n```\n\n----------------------------------------\n\nTITLE: Setting Mapbox Access Token\nDESCRIPTION: Sets the accessToken required for using Mapbox tiles. This is not required when using other tile providers.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### setAccessToken(accessToken)\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `accessToken` | `String` | `Yes` | required acessToken to pull mapbox tiles, can be `null` if other tiles are used |\n```\n\n----------------------------------------\n\nTITLE: Using Camera with Ref\nDESCRIPTION: Example showing how to use the Camera component with a ref to access imperative methods.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst camera = useRef<Camera>(null);\n\nuseEffect(() => {\n  camera.current?.setCamera({\n    centerCoordinate: [lon, lat],\n  });\n}, []);\n\nreturn (\n  <Camera ref={camera} />\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox Maven Repository in Android Gradle\nDESCRIPTION: This code snippet shows how to add the Mapbox Maven repository to the Android project's build.gradle file. It includes authentication setup using a secret access token.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/android/install.md#2025-04-16_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\n// android/build.gradle\n\nallprojects {\n    repositories {\n        // ...other repos\n        maven {\n            url 'https://api.mapbox.com/downloads/v2/releases/maven'\n            authentication {\n                basic(BasicAuthentication)\n            }\n            credentials {\n                // Do not change the username below.\n                // This should always be `mapbox` (not your username).\n                username = 'mapbox'\n                // Use the secret token you stored in gradle.properties as the password\n                password = project.properties['MAPBOX_DOWNLOADS_TOKEN'] ?: \"\"\n            }\n        }\n        // ...even more repos?\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Zoom-based Expressions in Mapbox Stylesheets\nDESCRIPTION: These snippets demonstrate how to create zoom-based style expressions that change properties as the map zoom level changes. They use interpolation to gradually change colors at different zoom levels.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// color would change based on zoom level keys.\n[\n  'interpolate',\n  ['exponential', 1.5],\n  ['zoom'],\n  0, 'blue',\n  10, 'green',\n  20, 'yellow',\n];\n\n// Example of use inside stylesheet\n{\n  fillColor: ['step', ['zoom'], 'blue', 20, 'green'];\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Offline Pack in JavaScript\nDESCRIPTION: This snippet shows how to retrieve a specific offline pack stored in the database by name using the getPack method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst offlinePack = await Mapbox.offlineManager.getPack();\n```\n\n----------------------------------------\n\nTITLE: Expo Plugin Configuration with Download Token\nDESCRIPTION: Configuration for the @rnmapbox/maps Expo plugin with a download token. The token requires DOWNLOADS:READ scope and is necessary for accessing Mapbox resources.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"@rnmapbox/maps\",\n        {\n          \"RNMapboxMapsDownloadToken\": \"sk.ey...qg\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Offline Pack Events in JavaScript\nDESCRIPTION: This snippet shows how to subscribe to download status and error events for a specific offline pack using the subscribe method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst progressListener = (offlinePack, status) => console.log(offlinePack, status)\nconst errorListener = (offlinePack, err) => console.log(offlinePack, err)\nMapbox.offlineManager.subscribe('packName', progressListener, errorListener)\n```\n\n----------------------------------------\n\nTITLE: Working Example of Custom Headers in React Native Mapbox Component\nDESCRIPTION: A complete React Native component example showing how to add custom headers both in componentDidMount lifecycle method and directly in the render method before rendering a MapboxGL.MapView.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomHttpHeaders.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nexport default class HelloWorldApp extends Component {\n  componentDidMount() {\n    MapboxGL.addCustomHeader('Authorization', '{auth header}');\n  }\n\n  render() {\n    MapboxGL.addCustomHeader('X-Some-Header', 'my-value');\n    return (\n      <View style={styles.page}>\n        <View style={styles.container}>\n          <MapboxGL.MapView \n            style={styles.map} \n            styleURL={STYLE_URL} />\n        </View>\n      </View>\n    );\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Progress Event Throttle in JavaScript\nDESCRIPTION: This snippet demonstrates how to set the period at which download status events will be sent over the React Native bridge using the setProgressEventThrottle method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nMapbox.offlineManager.setProgressEventThrottle(500);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cluster Children in JavaScript\nDESCRIPTION: This method returns a FeatureCollection from the cluster at the next zoom level. It takes a feature cluster as an argument.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ShapeSource.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst collection = await shapeSource.getClusterChildren(clusterId);\n```\n\n----------------------------------------\n\nTITLE: Camera SetCamera Method Example\nDESCRIPTION: Example of using the setCamera method to update camera position.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncamera.current?.setCamera({\n  centerCoordinate: [lon, lat],\n});\n```\n\n----------------------------------------\n\nTITLE: Camera FitBounds Method Examples\nDESCRIPTION: Examples of using fitBounds method to set camera position with bounds.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncamera.fitBounds([lon, lat], [lon, lat]);\ncamera.fitBounds([lon, lat], [lon, lat], [20, 0], 1000);\n```\n\n----------------------------------------\n\nTITLE: Implementing Point Clustering with Expressions in Mapbox\nDESCRIPTION: This example demonstrates creating styles for clustered points, including styling based on point count. It shows how to apply different styles for single points, clustered points, and cluster count labels.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst layerStyles = {\n  singlePoint: {\n    circleColor: 'green',\n    circleOpacity: 0.84,\n    circleStrokeWidth: 2,\n    circleStrokeColor: 'white',\n    circleRadius: 5,\n  },\n\n  clusteredPoints: {\n    circleColor: [\n      'interpolate',\n      ['exponential', 1.5],\n      ['get', 'point_count'],\n      25, 'yellow',\n      50, 'red',\n      75, 'blue',\n      100, 'orange',\n      300, 'pink',\n      750, 'white',\n    ],\n\n    circleRadius: [\n      'interpolate',\n      ['exponential', 1.5],\n      ['get', 'point_count'],\n      [0, 15],\n      [100, 20],\n      [750, 30],\n    ],\n\n    circleOpacity: 0.84,\n    circleStrokeWidth: 2,\n    circleStrokeColor: 'white',\n  },\n\n  clusterCount: {\n    textField: ['get', 'point_count'],\n    textSize: 12,\n  },\n};\n\n// ...\n\n<MapboxGL.SymbolLayer\n  id='pointCount'\n  style={layerStyles.clusterCount}\n/>\n\n< MapboxGL.CircleLayer\n  id='clusteredPoints'\n  belowLayerID='pointCount'\n  filter={['has', 'point_count'\n  ]\n  }\n  style={layerStyles.clusteredPoints}\n/>\n\n< MapboxGL.CircleLayer\n  id='singlePoint'\n  filter={['!has', 'point_count'\n  ]\n  }\n  style={layerStyles.singlePoint}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating Attribute-based Expressions for Mapbox Styles\nDESCRIPTION: These snippets show how to create expressions that change style properties based on feature attributes. The example uses the 'rating' property to determine the color of features on a scale from 1 to 5.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// would color the layer based the property rating=[1, 5]\n[\n  'step',\n  ['get', 'rating'],\n  'red',\n  2, 'orange',\n  3, 'yellow',\n  4, 'yellowgreen',\n  5, 'green',\n];\n\n// Example of use inside stylesheet\n{\n  circleColor: [\n    'step',\n    ['get', 'rating'],\n    'red',\n    2, 'orange',\n    3, 'yellow',\n    4, 'yellowgreen',\n    5, 'green',\n  ];\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Ambient Cache Size in JavaScript\nDESCRIPTION: This snippet demonstrates how to set the maximum size of the ambient cache in bytes using the setMaximumAmbientCacheSize method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.setMaximumAmbientCacheSize(5000000);\n```\n\n----------------------------------------\n\nTITLE: Invalidating Ambient Cache in JavaScript\nDESCRIPTION: This snippet shows how to force a revalidation of tiles in the ambient cache using the invalidateAmbientCache method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.invalidateAmbientCache();\n```\n\n----------------------------------------\n\nTITLE: iOS AppDelegate Implementation for Mapbox Custom Headers\nDESCRIPTION: Example of how to initialize custom headers support in iOS AppDelegate.m file. This includes importing the necessary header file, initializing headers to enable method swizzling, and optionally adding global headers.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomHttpHeaders.md#2025-04-16_snippet_3\n\nLANGUAGE: obj-c\nCODE:\n```\n// (1) Include the header file\n#import \"MGLCustomHeaders.h\"\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];\n  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                   moduleName:@\"SampleApp\"\n                                            initialProperties:nil];\n  // (2) Init headers, add swizzle method\n  [[MGLCustomHeaders sharedInstance] initHeaders];\n  // (3*) Optionally you can add some global headers here\n  [[MGLCustomHeaders sharedInstance] addHeader:@\"IP\" forHeaderName:@\"X-For-Real\"];\n\n  ...\n  return YES;\n}\n\n...\n\n@end\n```\n\n----------------------------------------\n\nTITLE: Basic StyleSheet Implementation for Multiple Layers\nDESCRIPTION: This example shows how to create a simple stylesheet with different styles for buildings and streets, then apply them to their respective layers in a Mapbox GL component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleSheet.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst styles = {\n  buildings: {\n    fillColor: 'blue',\n  },\n  street: {\n    lineColor: 'green',\n  }\n};\n\n// ...\n\n<MapboxGL.FillLayer\n  style={styles.buildings}\n  // ...\n/>\n< MapboxGL.FillLayer\n  style={styles.street}\n  // ...\n/>\n```\n\n----------------------------------------\n\nTITLE: Camera MoveTo Method Examples\nDESCRIPTION: Examples of using moveTo method to center the camera.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ncamera.moveTo([lon, lat], 200);\ncamera.moveTo([lon, lat]);\n```\n\n----------------------------------------\n\nTITLE: Configuring post_install Hook in iOS Podfile for @rnmapbox/maps\nDESCRIPTION: Adds the required post_install hook to the iOS Podfile for @rnmapbox/maps integration. This hook ensures proper configuration after the installation process.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/ios/install.md#2025-04-16_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n  post_install do |installer|\n    $RNMapboxMaps.post_install(installer)\n    ... other post install hooks\n  end\n```\n\n----------------------------------------\n\nTITLE: Specifying Native Asset Images in React Native Mapbox\nDESCRIPTION: This snippet shows the type definition for the 'nativeAssetImages' prop, which allows specifying an array of asset names for iOS and Android.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Images.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Configuring iOS Podfile for Mapbox Integration\nDESCRIPTION: Configuration for the iOS Podfile to integrate Mapbox. This snippet sets the implementation type and adds the necessary pre_install and post_install hooks required by the Mapbox library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_4\n\nLANGUAGE: pod\nCODE:\n```\n  # change these\n  $RNMapboxMapsImpl = 'mapbox'\n\n  platform :ios, min_ios_version_supported\n\n  ...\n\n  ...\n\n  pre_install do |installer|\n    $RNMapboxMaps.pre_install(installer)\n  end\n  \n  post_install do |installer|\n    react_native_post_install(installer)\n    $RNMapboxMaps.post_install(installer)\n  end\n```\n\n----------------------------------------\n\nTITLE: Icon and Text Property Types Documentation\nDESCRIPTION: Documentation of various paint properties for Mapbox symbol layers including icon and text styling. Properties cover aspects like halo effects, translation, opacity, and color with their types, default values, and requirements.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### iconHaloColor\nName: `iconHaloColor`\n\nMapbox spec: [icon-halo-color](https://docs.mapbox.com/style-spec/reference/layers/#paint-symbol-icon-halo-color)\n\n#### Description\nThe color of the icon's halo. Icon halos can only be used with [SDF icons](https://docs.mapbox.com/help/troubleshooting/using-recolorable-images-in-mapbox-maps/).\n\n#### Type\n`color`\n#### Default Value\n`rgba(0, 0, 0, 0)`\n\n#### Requires\n`iconImage`\n\n#### Expression\nParameters: `zoom, feature, feature-state, measure-light`\n```\n\n----------------------------------------\n\nTITLE: Camera ZoomTo Method Examples\nDESCRIPTION: Examples of using zoomTo method to change zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ncamera.zoomTo(16);\ncamera.zoomTo(16, 100);\n```\n\n----------------------------------------\n\nTITLE: Merging Offline Regions in JavaScript\nDESCRIPTION: This snippet demonstrates how to sideload an offline database using the mergeOfflineRegions method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.mergeOfflineRegions(path);\n```\n\n----------------------------------------\n\nTITLE: VectorSource onPress prop type definition\nDESCRIPTION: Defines the onPress prop type as a function callback that is triggered when a user presses one of the children layers with a higher z-index than other source layers.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Getting Mapbox Access Token\nDESCRIPTION: Retrieves the current Mapbox access token.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### getAccessToken()\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `accessToken` | `String` | `Yes` | required acessToken to pull mapbox tiles, can be `null` if other tiles are used |\n```\n\n----------------------------------------\n\nTITLE: Camera FlyTo Method Examples\nDESCRIPTION: Examples of using flyTo method for animated camera movement.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ncamera.flyTo([lon, lat]);\ncamera.flyTo([lon, lat], 12000);\n```\n\n----------------------------------------\n\nTITLE: Using takeSnap method to create map snapshots\nDESCRIPTION: Examples demonstrating different ways to use the snapshotManager.takeSnap method, including creating temporary files, base64 images without logos, and snapshots with specified bounds.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/snapshotManager.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// creates a temp file png of base map\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: MapboxGL.StyleURL.Dark,\n  writeToDisk: true, // Create a temporary file\n});\n\n// creates base64 png of base map without logo\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: MapboxGL.StyleURL.Dark,\n  withLogo: false, // Disable Mapbox logo (Android only)\n});\n\n// creates snapshot with bounds\nconst uri = await MapboxGL.snapshotManager.takeSnap({\n  bounds: [[-74.126410, 40.797968], [-74.143727, 40.772177]],\n  width: width,\n  height: height,\n  styleURL: MapboxGL.StyleURL.Dark,\n});\n```\n\n----------------------------------------\n\nTITLE: Migrating ShapeSource Images to Images Component\nDESCRIPTION: Shows the new approach of using the Images component instead of the deprecated ShapeSource#images property for managing map images.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n<MapView\n  ...\n>\n  ...\n  <Images images={{pin, dot}} />\n  ...\n  <ShapeSource ... >\n     <SymbolLayer ...>\n  </ShapeSource>\n</MapView>\n```\n\n----------------------------------------\n\nTITLE: Pulsing Property Configuration for LocationPuck\nDESCRIPTION: Defines the configuration for the sonar-like pulsing circle animation around the 2D puck, including options for enabling/disabling, color, and radius settings.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\n| {\n    /**\n     * Flag determining whether the pulsing circle animation.\n     */\n    isEnabled?: boolean;\n\n    /**\n     * The color of the pulsing circle.\n     */\n    color?: number | ColorValue;\n\n    /**\n     * Circle radius configuration for the pulsing circle animation.\n     *  - accuracy:  Pulsing circle animates with the `horizontalAccuracy` form the latest puck location.\n     *  - number: Pulsing circle should animate with the constant radius.\n     */\n    radius?: 'accuracy' | number;\n  }\n| 'default'\n```\n\n----------------------------------------\n\nTITLE: Requesting Android Location Permissions\nDESCRIPTION: Android-specific method that opens the location permission prompt. Returns a Promise resolving to a boolean indicating whether permission was granted or denied.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### requestAndroidLocationPermissions()\n#### Description\nOpens Android Location Permission prompt.\nReturns a Promise which resolves into a boolean.\nEither permission was granted or denied.\n```\n\n----------------------------------------\n\nTITLE: Customizing Mapbox Libraries in Android Gradle\nDESCRIPTION: This code shows how to customize Mapbox libraries by specifying exact versions for different components in the Android project's build.gradle file.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/android/install.md#2025-04-16_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\nbuildscript {\n    ext {\n        // ...\n        RNMapboxMapsLibs = { // optional - only required if you want to customize it\n            implementation 'com.mapbox.maps:android:10.6.0'\n            implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:5.4.1'\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Coordinates from @rnmapbox/maps in TSX\nDESCRIPTION: The code imports the coordinates module from the @rnmapbox/maps package and references it. This is likely used for handling location data in a React Native Mapbox application as it relates to the locationManager module.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/coordinates.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { coordinates } from '@rnmapbox/maps';\n\ncoordinates\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Atmosphere Component in React Native Mapbox\nDESCRIPTION: This snippet demonstrates how to import and use the Atmosphere component from @rnmapbox/maps in a React Native application.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Atmosphere.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Atmosphere } from '@rnmapbox/maps';\n\nAtmosphere\n```\n\n----------------------------------------\n\nTITLE: Android Render Mode Options for LocationPuck\nDESCRIPTION: Defines the available render modes for the location puck on Android. Options include normal (circle), compass (triangle with heading), or GPS (large arrow).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n'normal' | 'compass' | 'gps'\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from Offline Pack Events in JavaScript\nDESCRIPTION: This snippet demonstrates how to unsubscribe listeners associated with an offline pack using the unsubscribe method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nMapbox.offlineManager.unsubscribe('packName')\n```\n\n----------------------------------------\n\nTITLE: Setting Location Event Throttle in React Native Mapbox\nDESCRIPTION: This example shows how to use the setLocationEventThrottle method of the locationManager to control the frequency of location events sent over the React Native bridge. The method takes a throttle value in milliseconds as an argument.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/locationManager.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlocationManager.setLocationEventThrottle(500);\n```\n\n----------------------------------------\n\nTITLE: Creating an Offline Map Pack\nDESCRIPTION: Creates and registers an offline pack for downloading map resources for offline use. Requires options including name, style URL, zoom levels, and geographical bounds.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.createPack({\n  name: 'offlinePack',\n  styleURL: 'mapbox://...',\n  minZoom: 14,\n  maxZoom: 20,\n  bounds: [[neLng, neLat], [swLng, swLat]]\n})\n```\n\n----------------------------------------\n\nTITLE: Using FillExtrusionLayer Component\nDESCRIPTION: This snippet demonstrates the usage of the FillExtrusionLayer component in a React Native application.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nFillExtrusionLayer\n```\n\n----------------------------------------\n\nTITLE: Installing @rnmapbox/maps with Expo CLI\nDESCRIPTION: Command to install the @rnmapbox/maps package using Expo CLI. This is the recommended installation method for Expo projects.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nexpo install @rnmapbox/maps\n```\n\n----------------------------------------\n\nTITLE: Handling UserLocation Updates\nDESCRIPTION: Example reference to handling location update events from the UserLocation component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n[User Location Updates](../examples/UserLocation/UserLocationUpdates)\n```\n\n----------------------------------------\n\nTITLE: Puck Bearing Options for LocationPuck\nDESCRIPTION: Defines the options for the puck bearing source. 'heading' orients the puck to match the device's facing direction, while 'course' orients it to match the movement direction.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n'heading' | 'course'\n```\n\n----------------------------------------\n\nTITLE: CircleLayer style Prop Type Definition\nDESCRIPTION: Defines the style prop type which contains all customizable style attributes for the circle layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nCircleLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Deleting an Offline Pack\nDESCRIPTION: Removes an offline pack registration and frees up resources if no longer needed by other packs.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManagerLegacy.deletePack('packName')\n```\n\n----------------------------------------\n\nTITLE: Configuring Location Permissions with expo-location\nDESCRIPTION: Configuration for adding location permissions using the expo-location plugin. This is required when using the UserLocation component to show the user's current location on the map.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"expo-location\",\n        {\n          \"locationWhenInUsePermission\": \"Show current location on map.\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Terrain Component in React Native Mapbox\nDESCRIPTION: Basic example showing how to import and use the Terrain component from @rnmapbox/maps library to add 3D terrain features to maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Terrain.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Terrain } from '@rnmapbox/maps';\n\nTerrain\n```\n\n----------------------------------------\n\nTITLE: UserLocation Render Mode Configuration\nDESCRIPTION: Example reference to different render modes available for the UserLocation component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n[User Location Render Mode](../examples/UserLocation/UserLocationRenderMode)\n```\n\n----------------------------------------\n\nTITLE: Clearing Mapbox Data Cache\nDESCRIPTION: Clears temporary map data from the specified data path. Useful for reducing disk usage or when the disk cache contains invalid data.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n### clearData\n\nClears temporary map data from the data path defined in the given resource options. Useful to reduce the disk usage or in case the disk cache contains invalid data.\n```\n\n----------------------------------------\n\nTITLE: Importing TileStore from @rnmapbox/maps in TypeScript/React\nDESCRIPTION: This snippet shows how to import the tileStore module from @rnmapbox/maps. The tileStore is used to manage downloads and storage for tile-related API endpoint requests, enforcing a disk usage quota.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/tileStore.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { tileStore } from '@rnmapbox/maps';\n\ntileStore\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cluster Expansion Zoom in JavaScript\nDESCRIPTION: This method returns the zoom level needed to expand a cluster. It takes a feature cluster as an argument and returns a promise that resolves to the zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ShapeSource.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst zoom = await shapeSource.getClusterExpansionZoom(clusterId);\n```\n\n----------------------------------------\n\nTITLE: Importing Models Module from RNMapbox Maps\nDESCRIPTION: Imports the Models module from @rnmapbox/maps package for handling 3D model assets.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Models.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Models } from '@rnmapbox/maps';\n\nModels\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'onSelected' Prop Type Definition\nDESCRIPTION: Type definition for the onSelected callback which fires when the annotation is selected, returning a Feature object.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Setting Tile Count Limit in JavaScript\nDESCRIPTION: This snippet shows how to set the maximum number of Mapbox-hosted tiles that can be downloaded and stored on the device using the setTileCountLimit method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nMapbox.offlineManager.setTileCountLimit(1000);\n```\n\n----------------------------------------\n\nTITLE: Configuring Android App Build for Shared Libraries\nDESCRIPTION: Android app-level Gradle configuration to handle shared library files. This snippet adds packagingOptions to prevent duplicate library file errors by picking the first occurrence of each shared library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\n# add the following:\nandroid {\n    packagingOptions {\n        pickFirst 'lib/x86/libc++_shared.so'\n        pickFirst 'lib/x86_64/libc++_shared.so'\n        pickFirst 'lib/arm64-v8a/libc++_shared.so'\n        pickFirst 'lib/armeabi-v7a/libc++_shared.so'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing VectorSource from @rnmapbox/maps\nDESCRIPTION: Shows how to import the VectorSource component from the @rnmapbox/maps package and its basic usage.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { VectorSource } from '@rnmapbox/maps';\n\nVectorSource\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox Logger Level in JavaScript\nDESCRIPTION: Code example showing how to change the default Mapbox logging verbosity level from warning to verbose using the Logger.setLogLevel method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nLogger.setLogLevel('verbose')\n```\n\n----------------------------------------\n\nTITLE: Adding Required Podfile Hooks for React Native Mapbox\nDESCRIPTION: Ruby code demonstrating how to add the required pre_install and post_install hooks in your Podfile for proper installation of the React Native Mapbox library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npre_install do |installer|\n  $RNMBGL.pre_install(installer)\n  ...\nend\n```\n\nLANGUAGE: ruby\nCODE:\n```\npost_install do |installer|\n  $RNMBGL.post_install(installer)\n  ...\nend\n```\n\n----------------------------------------\n\nTITLE: Importing CircleLayer Component from @rnmapbox/maps\nDESCRIPTION: Basic example showing how to import the CircleLayer component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CircleLayer } from '@rnmapbox/maps';\n\nCircleLayer\n```\n\n----------------------------------------\n\nTITLE: Adding Custom HTTP Header\nDESCRIPTION: Adds a custom HTTP header for Mapbox API requests. See the CustomHttpHeaders documentation for more details.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### addCustomHeader(headerName, headerValue)\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `headerName` | `String` | `Yes` | name for customHeader |\n| `headerValue` | `String` | `Yes` | value for customHeader |\n```\n\n----------------------------------------\n\nTITLE: Filter Property Type Definition\nDESCRIPTION: FilterExpression property for defining conditions to filter features in the source layer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: Configuring Jest for Testing Mapbox Maps in React Native\nDESCRIPTION: This code snippet shows how to configure Jest to properly test React Native applications that use the Mapbox Maps SDK. It sets up the testing environment with the necessary mocks and transformation patterns.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"jest\": {\n  \"preset\": \"react-native\",\n  \"setupFilesAfterEnv\": [\"@rnmapbox/maps/setup-jest\"],\n  \"transformIgnorePatterns\": [\n      \"node_modules/(?!(...|@rnmapbox))\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring pre_install Hook in iOS Podfile for @rnmapbox/maps\nDESCRIPTION: Adds the required pre_install hook to the iOS Podfile for @rnmapbox/maps integration. This hook must be placed in the Podfile to properly configure the installation process.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/ios/install.md#2025-04-16_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n  pre_install do |installer|\n    $RNMapboxMaps.pre_install(installer)\n    ... other pre install hooks\n  end\n```\n\n----------------------------------------\n\nTITLE: Importing UserLocation Component from React Native Mapbox\nDESCRIPTION: Basic import example for the UserLocation component from the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { UserLocation } from '@rnmapbox/maps';\n\nUserLocation\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Mapbox Logger Callback\nDESCRIPTION: Example of how to override the default logger callback that treats Mapbox log messages as redbox/yellowbox errors/warnings in React Native.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nLogger.setLoggerCallback(log => { return true })\n```\n\n----------------------------------------\n\nTITLE: Source Layer ID Property Type Definition\nDESCRIPTION: String property identifying the layer within the source from which to obtain styling data.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Running Android Application\nDESCRIPTION: Command to build and run the application on Android emulator or connected device.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn android\n```\n\n----------------------------------------\n\nTITLE: Importing SymbolLayer from @rnmapbox/maps\nDESCRIPTION: Basic example showing how to import and use the SymbolLayer component\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SymbolLayer } from '@rnmapbox/maps';\n\nSymbolLayer\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox Maven Repository in Android\nDESCRIPTION: Configuration to add the Mapbox Maven repository to Android project. This snippet sets up authentication for the Mapbox downloads API using a token stored in gradle properties.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\n# add the following:\nallprojects {\n    repositories {\n        maven {\n            url 'https://api.mapbox.com/downloads/v2/releases/maven'\n            authentication {\n                basic(BasicAuthentication)\n            }\n            credentials {\n                // Do not change the username below.\n                // This should always be `mapbox` (not your username). \n                username = 'mapbox'\n                // Use the secret token you stored in gradle.properties as the password\n                password = project.properties['MAPBOX_DOWNLOADS_TOKEN'] ?: \"\"\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Android Render Mode for NativeUserLocation\nDESCRIPTION: Specifies the render mode for the user location indicator on Android. Options include 'normal' (circle), 'compass' (triangle with heading), and 'gps' (large arrow).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n'normal' | 'compass' | 'gps'\n```\n\n----------------------------------------\n\nTITLE: Importing Location Manager in RNMapbox Maps\nDESCRIPTION: Demonstrates importing and accessing the location object from @rnmapbox/maps package. This provides access to location management functionality within the RNMapbox maps implementation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/location.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { location } from '@rnmapbox/maps';\n\nlocation\n```\n\n----------------------------------------\n\nTITLE: CircleLayer sourceID Prop Type Definition\nDESCRIPTION: Defines the sourceID prop type which specifies the source from which to obtain the data to style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Mapbox SDK Version in Podfile\nDESCRIPTION: Ruby code for specifying a custom Mapbox SDK version in the Podfile. This is for advanced use cases and should be used with caution to avoid compatibility issues.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/ios/install.md#2025-04-16_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# Warning: only for advanced use cases, only do this if you know what you're doing.\n# $RNMapboxMapsVersion = '~> 10.16.2'\n```\n\n----------------------------------------\n\nTITLE: Importing StyleImport Component from RNMapbox Maps\nDESCRIPTION: Example showing how to import and use the StyleImport component from @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleImport.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { StyleImport } from '@rnmapbox/maps';\n\nStyleImport\n```\n\n----------------------------------------\n\nTITLE: Configuring iOS User Heading Indicator for NativeUserLocation\nDESCRIPTION: iOS-specific option to show a permanent heading indicator for the user location annotation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: VectorSource attribution prop type definition\nDESCRIPTION: Defines the attribution prop type as a string of HTML or literal text for buttons displayed when the map view's attribution button is pressed.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Importing HeadingIndicator Component in React Native Mapbox\nDESCRIPTION: This snippet demonstrates how to import and use the HeadingIndicator component from the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeadingIndicator.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { HeadingIndicator } from '@rnmapbox/maps';\n\nHeadingIndicator\n```\n\n----------------------------------------\n\nTITLE: Importing Camera Component\nDESCRIPTION: Basic import statement for the Camera component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Camera.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Camera } from '@rnmapbox/maps';\n\nCamera\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Mapbox Version in Android Gradle\nDESCRIPTION: This snippet demonstrates how to set a custom Mapbox version in the Android project's build.gradle file. It's important to use a compatible version when updating @rnmapbox/maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/android/install.md#2025-04-16_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\nbuildscript {\n    ext {\n        RNMapboxMapsVersion = '11.4.1'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Connection Status for Android in React Native Mapbox\nDESCRIPTION: Android-specific code that manually sets the connectivity state for the Mapbox app, which may be necessary when hosting styles and sources on localhost.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/GettingStarted.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Mapbox from \"@rnmapbox/maps\";\n\nMapbox.setConnected(true);\n```\n\n----------------------------------------\n\nTITLE: Importing PointAnnotation Component in React Native Mapbox\nDESCRIPTION: Basic import statement for the PointAnnotation component from the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { PointAnnotation } from '@rnmapbox/maps';\n\nPointAnnotation\n```\n\n----------------------------------------\n\nTITLE: Migrating Offline Cache\nDESCRIPTION: Migrates the offline cache from pre-v10 SDKs to the new v10 cache location.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.migrateOfflineCache()\n```\n\n----------------------------------------\n\nTITLE: URL prop type for RasterSource\nDESCRIPTION: Defines the URL prop which points to a TileJSON configuration file describing the source's contents and metadata.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Importing Annotation Component\nDESCRIPTION: Shows how to import the Annotation component from @rnmapbox/maps package\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Annotation } from '@rnmapbox/maps';\n\nAnnotation\n```\n\n----------------------------------------\n\nTITLE: Importing BackgroundLayer Component\nDESCRIPTION: Basic import statement for the BackgroundLayer component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { BackgroundLayer } from '@rnmapbox/maps';\n\nBackgroundLayer\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox V11 SDK in Expo Plugin\nDESCRIPTION: Configuration for using Mapbox V11 SDK with the @rnmapbox/maps Expo plugin. This specifies the V11 version and includes the required download token.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"@rnmapbox/maps\",\n        {\n          \"RNMapboxMapsVersion\": \"11.8.0\",\n          \"RNMapboxMapsDownloadToken\": \"sk.ey...qg\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack for @rnmapbox/maps Transpilation\nDESCRIPTION: Customizes the Expo webpack configuration to include @rnmapbox/maps in the transpilation process. This is necessary because the package name doesn't start with 'react-native-', which is typically auto-transpiled by @expo/webpack-config.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/src/web/install.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = async function (env, argv) {\n  const config = await createExpoWebpackConfigAsync(\n    {\n      ...env,\n      babel: { dangerouslyAddModulePathsToTranspile: [\"@rnmapbox/maps\"] },\n    },\n    argv\n  );\n  \n  return config;\n};\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'coordinate' Prop Type Definition\nDESCRIPTION: Type definition for the required coordinate prop which specifies the center point of the annotation as a map coordinate.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nPosition\n```\n\n----------------------------------------\n\nTITLE: RasterLayer style prop type definition\nDESCRIPTION: Type definition for the required style prop which contains all customizable style attributes for the raster layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nRasterLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Style Property Type Definition\nDESCRIPTION: Property for customizable style attributes using ModelLayerStyleProps\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nModelLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Importing ShapeSource Component in React Native\nDESCRIPTION: This snippet shows how to import the ShapeSource component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ShapeSource.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ShapeSource } from '@rnmapbox/maps';\n\nShapeSource\n```\n\n----------------------------------------\n\nTITLE: Importing Viewport Component in React Native Mapbox Maps\nDESCRIPTION: Demonstrates how to import the Viewport component from the @rnmapbox/maps library for camera management.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Viewport.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Viewport } from '@rnmapbox/maps';\n\nViewport\n```\n\n----------------------------------------\n\nTITLE: Installing mapbox-gl Dependency using Yarn\nDESCRIPTION: Adds the mapbox-gl package as a dependency to the project using Yarn package manager.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/src/web/install.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn add mapbox-gl\n```\n\n----------------------------------------\n\nTITLE: Advanced Expo Plugin Configuration with Custom SDK Version\nDESCRIPTION: Advanced configuration for the @rnmapbox/maps Expo plugin with a specific Mapbox SDK version and download token. This allows overriding the default SDK version.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/plugin/install.md#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"expo\": {\n    \"plugins\": [\n      [\n        \"@rnmapbox/maps\",\n        {\n          \"RNMapboxMapsVersion\": \"10.16.2\",\n          \"RNMapboxMapsDownloadToken\": \"sk.ey...qg\"\n        }\n      ]\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing LineLayer from @rnmapbox/maps\nDESCRIPTION: Basic import statement for the LineLayer component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { LineLayer } from '@rnmapbox/maps';\n\nLineLayer\n```\n\n----------------------------------------\n\nTITLE: Style Property Type Definition\nDESCRIPTION: SkyLayerStyleProps property containing customizable style attributes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nSkyLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Defining coordinate prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the required 'coordinate' prop of the MarkerView component, which specifies the center point of the marker on the map.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nPosition\n```\n\n----------------------------------------\n\nTITLE: Defining Image Types for React Native Mapbox\nDESCRIPTION: This snippet defines the type for the 'images' prop in the Images component, specifying the structure for key-value pairs of image definitions.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Images.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\ntype Images = {\n  [object Object]: union; /* FIX ME NO DESCRIPTION */\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Callout Component from RN Mapbox Maps in TypeScript\nDESCRIPTION: Shows how to import the Callout component from the @rnmapbox/maps package. This component displays information about a selected annotation near the annotation point on a map.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Callout } from '@rnmapbox/maps';\n\nCallout\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Offline Pack\nDESCRIPTION: Retrieves a specific offline pack from the database by name.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst offlinePack = await Mapbox.offlineManagerLegacy.getPack();\n```\n\n----------------------------------------\n\nTITLE: Migrating Camera Properties from MapView to Camera Component\nDESCRIPTION: Shows the transition of camera-related properties from MapView component to a dedicated Camera component for controlling map position and zoom.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n<MapView\n   zoomLevel={8}\n   centerCoordinate={[-111.8678, 40.2866]}\n   ...\n>\n   ...\n</MapView>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<MapView\n  ...\n>\n  <Camera\n     zoomLevel={8}\n     centerCoordinate={[-111.8678, 40.2866]}\n  />\n</MapView>\n```\n\n----------------------------------------\n\nTITLE: Importing RasterSource from @rnmapbox/maps\nDESCRIPTION: Shows how to import and use the RasterSource component from the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RasterSource } from '@rnmapbox/maps';\n\nRasterSource\n```\n\n----------------------------------------\n\nTITLE: HeatmapLayer Slot Property Type\nDESCRIPTION: Type definition for the slot property that determines layer positioning in v11.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n'bottom' | 'middle' | 'top'\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource id Prop Type\nDESCRIPTION: Type definition for the id prop which uniquely identifies the source. Defaults to MapboxGL.StyleSource.DefaultSourceID.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: TileUrlTemplates prop type for RasterSource\nDESCRIPTION: Defines the tileUrlTemplates prop which is an array of tile URL templates for fetching raster tiles.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Importing SkyLayer Component\nDESCRIPTION: Basic import statement for the SkyLayer component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SkyLayer } from '@rnmapbox/maps';\n\nSkyLayer\n```\n\n----------------------------------------\n\nTITLE: Running iOS Application\nDESCRIPTION: Command to build and run the application on iOS simulator.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Migrating StyleSheet.create to Direct Style Objects in React Native Mapbox\nDESCRIPTION: Demonstrates the change from using MapboxGL.StyleSheet.create with identity function to using direct style objects with expression arrays for layer styling.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nmapboxStyle=MapboxGL.Stylesheet.create({..., fillColor: MapboxGL.Stylesheet.identity('color') ...})\n...\n<MapView\n  ...\n  <FillLayer style={mapboxStyle}... />\n</MapView>\n```\n\nLANGUAGE: jsx\nCODE:\n```\nmapboxStyle={..., fillColor: ['get', 'color'] ...}\n...\n<MapView\n  ...\n  <FillLayer style={mapboxStyle}... />\n</MapView>\n```\n\n----------------------------------------\n\nTITLE: Setting Minimum Displacement for UserLocation Updates\nDESCRIPTION: Example reference to setting minimum movement threshold in meters before GPS location is updated.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n[Set Displacement](../examples/UserLocation/SetDisplacement)\n```\n\n----------------------------------------\n\nTITLE: CircleLayer belowLayerID Prop Type Definition\nDESCRIPTION: Defines the belowLayerID prop type which specifies where to insert the layer in the layer stack.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Terrain sourceID Property Type Declaration\nDESCRIPTION: Type definition for the sourceID property that specifies the name of a raster_dem source to be used for terrain elevation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Terrain.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: VectorSource tms prop type definition\nDESCRIPTION: Defines the tms prop type as a boolean that influences the y direction of tile coordinates, inverting the y axis when true.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: SourceBounds prop type for RasterSource\nDESCRIPTION: Defines the sourceBounds prop which specifies the bounding box coordinates for the source to limit tile requests to a specific geographic area.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Configuring Pulsing Animation for NativeUserLocation\nDESCRIPTION: Sets up a sonar-like pulsing circle animation around the 2D puck, including color, radius, and enablement options.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\n| {\n    /**\n     * Flag determining whether the pulsing circle animation.\n     */\n    isEnabled?: boolean;\n\n    /**\n     * The color of the pulsing circle.\n     */\n    color?: number | ColorValue;\n\n    /**\n     * Circle radius configuration for the pulsing circle animation.\n     *  - accuracy:  Pulsing circle animates with the `horizontalAccuracy` form the latest puck location.\n     *  - number: Pulsing circle should animate with the constant radius.\n     */\n    radius?: 'accuracy' | number;\n  }\n| 'default'\n```\n\n----------------------------------------\n\nTITLE: VectorSource id prop type definition\nDESCRIPTION: Defines the id prop type as a string that uniquely identifies the source. Defaults to MapboxGL.StyleSource.DefaultSourceID.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Migrating User Tracking Properties from MapView to Camera Component\nDESCRIPTION: Illustrates the migration of user tracking functionality from MapView properties to the Camera component, including changes in property names and tracking modes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<MapView\n   userTrackingMode={UserTrackingModes.Follow}\n   ...\n>\n   ...\n</MapView>\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<MapView\n  ...\n>\n  <Camera\n     followUserLocation=true\n     followUserMode=\"normal\"\n  />\n</MapView>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Mapbox iOS SDK Version in Podfile\nDESCRIPTION: Configuration option for specifying a custom version of the Mapbox iOS SDK in the Podfile. This allows developers to override the default SDK version and use version 6.2.1 instead.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: Ruby\nCODE:\n```\n$ReactNativeMapboxGLIOSVersion = \"6.2.1\"\n```\n\n----------------------------------------\n\nTITLE: CircleLayer layerIndex Prop Type Definition\nDESCRIPTION: Defines the layerIndex prop type which specifies the index at which to insert the layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: TileSize prop type for RasterSource\nDESCRIPTION: Defines the tileSize prop which specifies the size of map tiles in pixels. Mapbox URLs default to 256, others to 512.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: UserLocation androidRenderMode Prop Types\nDESCRIPTION: Android-specific render mode options for the UserLocation component, defining how the location icon appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n'normal' | 'compass' | 'gps'\n```\n\n----------------------------------------\n\nTITLE: Configuring Puck Bearing for NativeUserLocation\nDESCRIPTION: Sets the bearing of the puck. 'heading' orients the puck to match the device's facing direction, while 'course' orients it to match the device's movement direction.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n'heading' | 'course'\n```\n\n----------------------------------------\n\nTITLE: Importing Style Component from @rnmapbox/maps\nDESCRIPTION: This snippet shows how to import the Style component from the @rnmapbox/maps package. This component allows adding sources and layers to a map using Mapbox GL Style Spec.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Style.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Style } from '@rnmapbox/maps';\n\nStyle\n```\n\n----------------------------------------\n\nTITLE: Setting Mapbox Implementation Type in Android\nDESCRIPTION: Configuration to specify the Mapbox implementation type in the Android project. This snippet adds the RNMapboxMapsImpl variable to the project's buildscript extensions to use the 'mapbox' implementation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n    ext {\n      ...\n      RNMapboxMapsImpl = 'mapbox'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'id' Prop Type Definition\nDESCRIPTION: Type definition for the required id prop which uniquely identifies the annotation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: LineLayer minZoomLevel Property Type Definition\nDESCRIPTION: Type definition for the minZoomLevel property that sets the minimum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: CircleLayer slot Prop Type Definition\nDESCRIPTION: Defines the slot prop type which assigns the layer to a specific position in the layer order (v11 only).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\n'bottom' | 'middle' | 'top'\n```\n\n----------------------------------------\n\nTITLE: Handling Map Press Events\nDESCRIPTION: Example reference to handling press events on the map component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/UserLocation.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n[Show Map](../examples/Map/ShowMap)\n```\n\n----------------------------------------\n\nTITLE: Removing Custom HTTP Header\nDESCRIPTION: Removes a previously added custom HTTP header. See the CustomHttpHeaders documentation for more details.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### removeCustomHeader(headerName)\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `headerName` | `String` | `Yes` | name of customHeader to be removed |\n```\n\n----------------------------------------\n\nTITLE: Importing HeatmapLayer Component\nDESCRIPTION: Basic import statement for the HeatmapLayer component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { HeatmapLayer } from '@rnmapbox/maps';\n\nHeatmapLayer\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install project dependencies using Yarn package manager.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Styling FillExtrusionLayer\nDESCRIPTION: This snippet shows the prop type for the 'style' property of FillExtrusionLayer, which allows customization of various style attributes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nFillExtrusionLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: LineLayer belowLayerID Property Type Definition\nDESCRIPTION: Type definition for the belowLayerID property that specifies where to insert the layer in the layer stack.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource maxZoomLevel Prop Type\nDESCRIPTION: Type definition for the maxZoomLevel prop which specifies the maximum zoom level (0-22) for displaying tiles.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing LocationPuck Component in React Native Mapbox\nDESCRIPTION: Basic import statement for the LocationPuck component from the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { LocationPuck } from '@rnmapbox/maps';\n\nLocationPuck\n```\n\n----------------------------------------\n\nTITLE: Setting Telemetry Enabled Status\nDESCRIPTION: Enables or disables Mapbox telemetry data collection.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### setTelemetryEnabled(telemetryEnabled)\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `telemetryEnabled` | `Boolean` | `Yes` |  |\n```\n\n----------------------------------------\n\nTITLE: LineLayer style Property Type Definition\nDESCRIPTION: Type definition for the style property that defines customizable style attributes for the line layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nLineLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Starting React Native Packager with Cache Reset\nDESCRIPTION: Command to start the React Native Metro bundler with cache reset for resolving module-related issues.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn start --reset-cache\n```\n\n----------------------------------------\n\nTITLE: Starting React Native Packager\nDESCRIPTION: Command to start the React Native Metro bundler for development.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: RasterLayer layerIndex prop type definition\nDESCRIPTION: Type definition for the layerIndex prop which specifies the exact index at which this layer should be inserted.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: VectorSource maxZoomLevel prop type definition\nDESCRIPTION: Defines the maxZoomLevel prop type as a number specifying the maximum zoom level for displaying tiles from the source. Valid range is 0-22, defaulting to 22.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Shadow Image Property Type for LocationPuck\nDESCRIPTION: String property type definition for specifying the image name to use as the background for the location indicator. The Images component should define this image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'selected' Prop Type Definition\nDESCRIPTION: Type definition for the selected prop which manually selects or deselects an annotation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Importing NativeUserLocation Component in React Native\nDESCRIPTION: This snippet shows how to import and use the NativeUserLocation component from @rnmapbox/maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { NativeUserLocation } from '@rnmapbox/maps';\n\nNativeUserLocation\n```\n\n----------------------------------------\n\nTITLE: Migrating Offline Cache in JavaScript\nDESCRIPTION: This snippet shows how to migrate the offline cache from pre-v10 SDKs to the new v10 cache location using the migrateOfflineCache method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.migrateOfflineCache()\n```\n\n----------------------------------------\n\nTITLE: Importing OfflineManagerLegacy from @rnmapbox/maps\nDESCRIPTION: Shows how to import the offlineManagerLegacy module from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { offlineManagerLegacy } from '@rnmapbox/maps';\n\nofflineManagerLegacy\n```\n\n----------------------------------------\n\nTITLE: RasterLayer filter prop type definition\nDESCRIPTION: Type definition for the filter prop which allows filtering features in the source layer based on defined conditions.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource minZoomLevel Prop Type\nDESCRIPTION: Type definition for the minZoomLevel prop which specifies the minimum zoom level (0-22) for displaying tiles.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Defining Children Types for Images Component in React Native Mapbox\nDESCRIPTION: This snippet specifies the allowed types for the 'children' prop of the Images component, including single or multiple React elements.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Images.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nReactElement<T> | Array<TypedReactNode<T>> | never\n```\n\n----------------------------------------\n\nTITLE: Importing MarkerView from @rnmapbox/maps in TypeScript\nDESCRIPTION: This snippet shows how to import the MarkerView component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { MarkerView } from '@rnmapbox/maps';\n\nMarkerView\n```\n\n----------------------------------------\n\nTITLE: Setting Visibility for NativeUserLocation\nDESCRIPTION: Determines whether the location icon is visible. Defaults to true.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: LineLayer filter Property Type Definition\nDESCRIPTION: Type definition for the filter property that filters features in the source layer based on a defined condition.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: Removing a Custom HTTP Header in React Native Mapbox\nDESCRIPTION: Removing a previously added custom HTTP header from Mapbox tile requests. This can be useful when authentication changes or a header is no longer needed.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomHttpHeaders.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nMapboxGL.removeCustomHeader('Authorization');\n```\n\n----------------------------------------\n\nTITLE: Defining FillExtrusionLayer ID\nDESCRIPTION: This snippet shows the prop type for the required 'id' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Source ID Property Type Definition\nDESCRIPTION: String property defining the source from which to obtain the data to style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: MinZoomLevel prop type for RasterSource\nDESCRIPTION: Defines the minZoomLevel prop which specifies the minimum zoom level to display tiles from the source (0-22).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing Light Component from RNMapbox Maps\nDESCRIPTION: Basic example showing how to import and use the Light component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Light.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Light } from '@rnmapbox/maps';\n\nLight\n```\n\n----------------------------------------\n\nTITLE: VectorSource url prop type definition\nDESCRIPTION: Defines the url prop type as a string URL to a TileJSON configuration file describing the source's contents and metadata.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Importing CustomLocationProvider - React Native Mapbox\nDESCRIPTION: Shows how to import the CustomLocationProvider component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomLocationProvider.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CustomLocationProvider } from '@rnmapbox/maps';\n\nCustomLocationProvider\n```\n\n----------------------------------------\n\nTITLE: Invalidating an Offline Pack\nDESCRIPTION: Updates local tiles that don't match the server version for the specified offline pack name.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManagerLegacy.invalidatePack('packName')\n```\n\n----------------------------------------\n\nTITLE: Attribution prop type for RasterSource\nDESCRIPTION: Defines the attribution prop which provides HTML or text defining buttons displayed in an action sheet when the map's attribution button is pressed.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: LineLayer sourceLayerID Property Type Definition\nDESCRIPTION: Type definition for the sourceLayerID property that identifies the layer within the source from which to obtain data.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: LineLayer maxZoomLevel Property Type Definition\nDESCRIPTION: Type definition for the maxZoomLevel property that sets the maximum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Light Style Props Type Declaration\nDESCRIPTION: Type declaration for the required style properties of the Light component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Light.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nLightLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: LineLayer sourceID Property Type Definition\nDESCRIPTION: Type definition for the sourceID property that specifies the source from which to obtain data to style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Line Style Default Values\nDESCRIPTION: Default configuration values for line layer transitions and properties\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"lineOffsetTransition\": {\"duration\": 300, \"delay\": 0},\n  \"lineBlur\": 0,\n  \"lineBlurTransition\": {\"duration\": 300, \"delay\": 0},\n  \"lineTrimOffset\": [0,0]\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting Offline Database\nDESCRIPTION: Deletes and reinitializes the existing database, including both ambient cache and offline packs.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.resetDatabase();\n```\n\n----------------------------------------\n\nTITLE: LineLayer id Property Type Definition\nDESCRIPTION: Type definition for the required id property that uniquely identifies the source in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: CircleLayer id Prop Type Definition\nDESCRIPTION: Defines the required id prop type for CircleLayer which uniquely identifies the source in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Min Zoom Level Property Type Definition\nDESCRIPTION: Type definition for the minZoomLevel property that sets the minimum zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'title' Prop Type Definition\nDESCRIPTION: Type definition for the title prop which contains the annotation's title, required for callouts on iOS.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Setting TileStore Options in TypeScript/React\nDESCRIPTION: This snippet describes the setOption method of the TileStore. It allows setting additional options for the TileStore instance that are specific to a data type. The method takes three parameters: key, domain, and value.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/tileStore.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nsetOption(key, domain, value)\n```\n\n----------------------------------------\n\nTITLE: CircleLayer sourceLayerID Prop Type Definition\nDESCRIPTION: Defines the sourceLayerID prop type which identifies the layer within the source from which to obtain data.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Clearing Ambient Cache in JavaScript\nDESCRIPTION: This snippet demonstrates how to erase resources from the ambient cache using the clearAmbientCache method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.clearAmbientCache();\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'onDragEnd' Prop Type Definition\nDESCRIPTION: Type definition for the onDragEnd callback which fires when the annotation stops being dragged.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Layer Position Properties\nDESCRIPTION: Properties for controlling layer positioning: aboveLayerID, belowLayerID, and layerIndex.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Slot Property Type Definition\nDESCRIPTION: Property for specifying the layer slot position in v11, accepting 'bottom', 'middle', or 'top'\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\n'bottom' | 'middle' | 'top'\n```\n\n----------------------------------------\n\nTITLE: Annotation Children Type Definition\nDESCRIPTION: Type definition for the required children prop accepting ReactElement or array of ReactElements\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nReactElement | ReactElement[]\n```\n\n----------------------------------------\n\nTITLE: Defining Atmosphere Layer Style Props in React Native Mapbox\nDESCRIPTION: This code defines the type for Atmosphere layer style properties in React Native Mapbox. It is used as the type for the required 'style' prop of the Atmosphere component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Atmosphere.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nAtmosphereLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'onDragStart' Prop Type Definition\nDESCRIPTION: Type definition for the onDragStart callback which fires when the annotation starts being dragged.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: LineLayer aboveLayerID Property Type Definition\nDESCRIPTION: Type definition for the aboveLayerID property that specifies where to insert the layer in the layer stack.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Resetting Database in JavaScript\nDESCRIPTION: This snippet shows how to delete the existing database and reinitialize it using the resetDatabase method.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nawait Mapbox.offlineManager.resetDatabase();\n```\n\n----------------------------------------\n\nTITLE: CircleLayer filter Prop Type Definition\nDESCRIPTION: Defines the filter prop type which allows filtering features in the source layer based on a condition.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: SourceID Property Type Definition\nDESCRIPTION: String property specifying the source from which to obtain styling data\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Defining FillExtrusionLayer Source ID\nDESCRIPTION: This snippet shows the prop type for the 'sourceID' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: ImageSource URL Property Type\nDESCRIPTION: Defines the url property type for specifying the image source location\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nnumber | string\n```\n\n----------------------------------------\n\nTITLE: Running Pod Install for @rnmapbox/maps\nDESCRIPTION: Terminal commands to navigate to the iOS directory and run pod install to download the proper Mapbox dependencies after Podfile configuration.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/ios/install.md#2025-04-16_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Go to the ios folder\ncd ios\n\n# Run Pod Install\npod install\n```\n\n----------------------------------------\n\nTITLE: ID prop type for RasterSource\nDESCRIPTION: Defines the ID prop which uniquely identifies the source. Defaults to MapboxGL.StyleSource.DefaultSourceID.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Setting Image Layers for NativeUserLocation\nDESCRIPTION: Configures the top, bearing, and shadow images for the location indicator. These should be defined in the Images component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: VectorSource tileUrlTemplates prop type definition\nDESCRIPTION: Defines the tileUrlTemplates prop type as an Array of tile URL templates that can be used as endpoints for the vector tiles.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: iOS Shows User Heading Indicator Property Type\nDESCRIPTION: Boolean property type definition for iOS-specific behavior that controls whether the user location annotation displays a permanent heading indicator.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Visible Property Type for LocationPuck\nDESCRIPTION: Boolean property type definition that determines whether the location icon is visible. Defaults to true.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Importing FillLayer Component\nDESCRIPTION: Basic import statement for the FillLayer component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FillLayer } from '@rnmapbox/maps';\n\nFillLayer\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Pod Dependencies\nDESCRIPTION: Commands to navigate to iOS directory and install CocoaPods dependencies.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd ios\npod install\n```\n\n----------------------------------------\n\nTITLE: VectorSource existing prop type definition\nDESCRIPTION: Defines the existing prop type as a boolean that indicates if the id refers to an existing source in the style, not creating a new source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Mapbox Annotations Feature Comparison\nDESCRIPTION: A detailed comparison table showing features and implementation details of different annotation types in React Native Mapbox, including SymbolLayer, PointAnnotation, MarkerView, and CircleLayer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotations.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature                    | SymbolLayer                                                                                                         | PointAnnotation                                                                                                                                                                     | MarkerView                                                                                                                                                                        | CircleLayer                                                                                                         |\n|----------------------------|---------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------|\n| **Can use Images**         | &check;                                                                                                             |                                                                                                                                                                                     |                                                                                                                                                                                   |                                                                                                                     |\n| **RN Views as Children**   | iOS: Static                                                                                                         | Static in v10, _was interactive on iOS before v10_                                                                                                                                  | Interactive                                                                                                                                                                       |                                                                                                                     |\n| **Interactions**           | Click                                                                                                               | Click, Drag, Callout                                                                                                                                                                | Supports full interactivity in the sense that inside MarkerViews one can place any RN View, which can be interacted with. Not to be misunderstood with drag n drop interactivity. | Click                                                                                                               |\n| **Control z-index**        | &check;                                                                                                             | All rendered within a single layer <details><summary>more</summary>Get the LayerID with `getAnnotationsLayerID('PointAnnotations')` to place other layers above or below.</details> | Always on top                                                                                                                                                                     | &check;                                                                                                             |\n| **Clustering**             | &check;                                                                                                             |                                                                                                                                                                                     |                                                                                                                                                                                   | &check;                                                                                                             |\n| **Style with Expressions** | &check;                                                                                                             |                                                                                                                                                                                     |                                                                                                                                                                                   | &check;                                                                                                             |\n```\n\n----------------------------------------\n\nTITLE: CircleLayer aboveLayerID Prop Type Definition\nDESCRIPTION: Defines the aboveLayerID prop type which specifies where to insert the layer in the layer stack.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Setting FillExtrusionLayer Minimum Zoom Level\nDESCRIPTION: This snippet shows the prop type for the required 'minZoomLevel' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Scale Property Type for LocationPuck Images\nDESCRIPTION: Defines the type for scale property that determines the size of the puck images as a factor applied to the image size. Supports expressions based on zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nT | Expression\n```\n\n----------------------------------------\n\nTITLE: Importing Image Component from RNMapbox Maps\nDESCRIPTION: Basic import statement for the Image component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Image } from '@rnmapbox/maps';\n\nImage\n```\n\n----------------------------------------\n\nTITLE: Configuring Packaging Options for Shared Libraries in Android Gradle\nDESCRIPTION: This snippet shows how to resolve the '2 files found with path 'lib/arm64-v8a/libc++_shared.so' from inputs' issue by configuring packaging options in the app's build.gradle file.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/android/install.md#2025-04-16_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\nandroid {\n    packagingOptions {\n        pickFirst 'lib/x86/libc++_shared.so'\n        pickFirst 'lib/x86_64/libc++_shared.so'\n        pickFirst 'lib/arm64-v8a/libc++_shared.so'\n        pickFirst 'lib/armeabi-v7a/libc++_shared.so'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'onDrag' Prop Type Definition\nDESCRIPTION: Type definition for the onDrag callback which fires while the annotation is being dragged.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Importing Images Component in React Native Mapbox\nDESCRIPTION: This snippet shows how to import the Images component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Images.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Images } from '@rnmapbox/maps';\n\nImages\n```\n\n----------------------------------------\n\nTITLE: Setting Gradle Build Permissions for Android\nDESCRIPTION: Commands to fix permission issues when building Android app from command line.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd android\nchmod +x gradlew\n```\n\n----------------------------------------\n\nTITLE: Existing prop type for RasterSource\nDESCRIPTION: Defines the existing prop which indicates if the ID refers to an existing source in the style without creating a new one.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Scaling Images for NativeUserLocation\nDESCRIPTION: Sets the size of the images as a scale factor. Supports expressions based on zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nT | Expression\n```\n\n----------------------------------------\n\nTITLE: HeatmapLayer ID Type Definition\nDESCRIPTION: Type definition for the required id property of HeatmapLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Handling Missing Images in React Native Mapbox\nDESCRIPTION: This snippet defines the type for the 'onImageMissing' prop, which is a function called when a layer tries to render an image that is not present in the Images component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Images.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: CircleLayer minZoomLevel Prop Type Definition\nDESCRIPTION: Defines the minZoomLevel prop type which sets the minimum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing LocationManager in React Native Mapbox\nDESCRIPTION: This snippet demonstrates how to import and access the locationManager from the @rnmapbox/maps package in a React Native application.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/locationManager.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { locationManager } from '@rnmapbox/maps';\n\nlocationManager\n```\n\n----------------------------------------\n\nTITLE: VectorSource children prop type definition\nDESCRIPTION: Defines the children prop type as React elements that can be passed as children to the VectorSource component.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nReact.ReactElement | React.ReactElement[]\n```\n\n----------------------------------------\n\nTITLE: Children prop type for RasterSource\nDESCRIPTION: Defines the children prop type which can accept React elements, though the description is missing in the source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nReact.ReactElement | React.ReactElement[]\n```\n\n----------------------------------------\n\nTITLE: Top Image Property Type for LocationPuck\nDESCRIPTION: String property type definition for specifying the image name to use as the top layer for the location indicator. The Images component should define this image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: HeatmapLayer Style Property Type\nDESCRIPTION: Type definition for the style property that contains customizable style attributes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nHeatmapLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: ImageSource Coordinates Property Type\nDESCRIPTION: Defines the coordinates property type for specifying image position on the map\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\ntuple\n```\n\n----------------------------------------\n\nTITLE: CircleLayer maxZoomLevel Prop Type Definition\nDESCRIPTION: Defines the maxZoomLevel prop type which sets the maximum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing the snapshotManager from @rnmapbox/maps\nDESCRIPTION: Basic import statement for accessing the snapshotManager module from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/snapshotManager.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { snapshotManager } from '@rnmapbox/maps';\n\nsnapshotManager\n```\n\n----------------------------------------\n\nTITLE: SourceID Property Type Definition\nDESCRIPTION: String property specifying the source from which to obtain styling data.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource existing Prop Type\nDESCRIPTION: Type definition for the existing prop which indicates if the id refers to an existing source in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Image Content Property Type Definition\nDESCRIPTION: Tuple of four numbers defining the content box coordinates for icon-text-fit functionality.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\ntuple\n```\n\n----------------------------------------\n\nTITLE: StyleImport ID Property Type Definition\nDESCRIPTION: Type definition for the required id property of StyleImport component, which specifies the style import identifier.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleImport.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox v11 Support in Podfile\nDESCRIPTION: Ruby code for setting the Mapbox SDK version to v11 in the Podfile. This enables support for Mapbox v11 features in the @rnmapbox/maps library.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/ios/install.md#2025-04-16_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n$RNMapboxMapsVersion = '= 11.8.0'\n```\n\n----------------------------------------\n\nTITLE: RasterLayer minZoomLevel prop type definition\nDESCRIPTION: Type definition for the minZoomLevel prop which sets the minimum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing OfflineManager in TypeScript\nDESCRIPTION: This snippet shows how to import the offlineManager from @rnmapbox/maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManager.md#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { offlineManager } from '@rnmapbox/maps';\n\nofflineManager\n```\n\n----------------------------------------\n\nTITLE: Filter Property Type Definition\nDESCRIPTION: FilterExpression property for conditionally filtering features in the source layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource children Prop Type\nDESCRIPTION: Type definition for the children prop which accepts React elements.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nReact.ReactElement | React.ReactElement[]\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'children' Prop Type Definition\nDESCRIPTION: Type definition for the required children prop which expects one child element and an optional callout.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nReact.ReactElement | [React.ReactElement, React.ReactElement]\n```\n\n----------------------------------------\n\nTITLE: ID Property Type Definition\nDESCRIPTION: Required string property that uniquely identifies the source in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Annotation Animated Type Definition\nDESCRIPTION: Type definition for the animated prop with default value of false\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: ImageSource ID Property Type\nDESCRIPTION: Defines the required id property type for uniquely identifying the source\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterLayer maxZoomLevel prop type definition\nDESCRIPTION: Type definition for the maxZoomLevel prop which sets the maximum zoom level at which the layer appears.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Models Type Definition\nDESCRIPTION: Defines the type structure for model assets, mapping model names to their corresponding GLTF/GBL file paths, URLs, or asset IDs.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Models.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\ntype Models = {\n  [object Object]: union; /* FIX ME NO DESCRIPTION */\n}\n```\n\n----------------------------------------\n\nTITLE: Setting FillExtrusionLayer Source Layer ID\nDESCRIPTION: This snippet shows the prop type for the 'sourceLayerID' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: SymbolLayer Children Type Definition\nDESCRIPTION: Type definition for the deprecated children prop used for setting icon images\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nJSX.Element | JSX.Element[]\n```\n\n----------------------------------------\n\nTITLE: Defining children prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the required 'children' prop of the MarkerView component, which should be one or more valid React Native views.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nReactReactElement\n```\n\n----------------------------------------\n\nTITLE: Annotation Animation Duration Type Definition\nDESCRIPTION: Type definition for the animationDuration prop with default value of 1000\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Position Type for coordinate prop - React Native Mapbox\nDESCRIPTION: Defines the coordinate property type as Position, used to specify the longitude and latitude for the custom location provider.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomLocationProvider.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nPosition\n```\n\n----------------------------------------\n\nTITLE: Annotation Coordinates Type Definition\nDESCRIPTION: Type definition for the required coordinates prop\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Installing New Architecture Example for iOS\nDESCRIPTION: Command to update pods for running the example app with React Native's New Architecture (Fabric) on iOS.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CONTRIBUTING.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd example/ios ; RCT_NEW_ARCH_ENABLED=1 pod update MapboxMaps\n```\n\n----------------------------------------\n\nTITLE: MaxZoomLevel prop type for RasterSource\nDESCRIPTION: Defines the maxZoomLevel prop which specifies the maximum zoom level to display tiles from the source (0-22).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'snippet' Prop Type Definition\nDESCRIPTION: Type definition for the snippet prop which contains the annotation's subtitle, not displayed in default callout.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'anchor' Prop Type Definition\nDESCRIPTION: Type definition for the anchor prop which specifies the anchor point on the annotation in continuous space [0.0, 1.0] x [0.0, 1.0].\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\ntype Anchor = {\n  x: number; /* See anchor */\n  y: number; /* See anchor */\n}\n```\n\n----------------------------------------\n\nTITLE: Annotation Animation Easing Function Type Definition\nDESCRIPTION: Type definition for the animationEasingFunction prop with default value of Easing.linear\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Annotation ID Type Definition\nDESCRIPTION: Type definition for the required id prop of the Annotation component\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Annotation OnPress Type Definition\nDESCRIPTION: Type definition for the onPress event handler\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: Setting Puck Bearing Enabled for NativeUserLocation\nDESCRIPTION: Determines whether the puck rotates to track the bearing source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/NativeUserLocation.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: LineLayer existing Property Type Definition\nDESCRIPTION: Type definition for the existing property that indicates if the id refers to an existing layer in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Defining allowOverlap prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the 'allowOverlap' prop of the MarkerView component, which determines whether nearby markers should all be displayed.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'draggable' Prop Type Definition\nDESCRIPTION: Type definition for the draggable prop which enables or disables dragging, defaulting to false.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Importing ModelLayer Component\nDESCRIPTION: Basic import statement for the ModelLayer component from @rnmapbox/maps\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ModelLayer } from '@rnmapbox/maps';\n\nModelLayer\n```\n\n----------------------------------------\n\nTITLE: Positioning FillExtrusionLayer Above Another Layer\nDESCRIPTION: This snippet shows the prop type for the 'aboveLayerID' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: VectorSource minZoomLevel prop type definition\nDESCRIPTION: Defines the minZoomLevel prop type as a number specifying the minimum zoom level for displaying tiles from the source. Valid range is 0-22, defaulting to 0.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Positioning FillExtrusionLayer Below Another Layer\nDESCRIPTION: This snippet shows the prop type for the 'belowLayerID' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource url Prop Type\nDESCRIPTION: Type definition for the url prop which specifies the TileJSON configuration file URL.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Image Children Property Type Definition\nDESCRIPTION: Required property that accepts a single React Native view for rendering the image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nReactElement\n```\n\n----------------------------------------\n\nTITLE: Heading Type Definition - React Native Mapbox\nDESCRIPTION: Defines the heading property type as number, used to specify the bearing/direction for the custom location provider.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CustomLocationProvider.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: ID Property Type Definition\nDESCRIPTION: Required string property that uniquely identifies the source in the style\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterLayer aboveLayerID prop type definition\nDESCRIPTION: Type definition for the aboveLayerID prop which specifies that this layer should be inserted above the identified layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'onDeselected' Prop Type Definition\nDESCRIPTION: Type definition for the onDeselected callback which fires when the annotation is deselected.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: VectorSource hitbox prop type definition\nDESCRIPTION: Defines the hitbox prop type structure that overrides the default touch hitbox dimensions (44x44 pixels) for the source layers.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/VectorSource.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\ntype Hitbox = {\n  width: number; /* `width` of hitbox */\n  height: number; /* `height` of hitbox */\n}\n```\n\n----------------------------------------\n\nTITLE: TMS prop type for RasterSource\nDESCRIPTION: Defines the tms prop which influences the y direction of tile coordinates by inverting the y axis if true.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterSource.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Terrain exaggeration Property Type Declaration\nDESCRIPTION: Type definition for the exaggeration property that controls terrain elevation multiplication factor. Note that this is deprecated in favor of using exaggeration in style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Terrain.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nValue\n```\n\n----------------------------------------\n\nTITLE: Existing Property Type Definition\nDESCRIPTION: Boolean property indicating if the id refers to an existing layer in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Existing Property Type Definition\nDESCRIPTION: Boolean property indicating if the id refers to an existing layer in the style\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: RasterLayer belowLayerID prop type definition\nDESCRIPTION: Type definition for the belowLayerID prop which specifies that this layer should be inserted below the identified layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource tileUrlTemplates Prop Type\nDESCRIPTION: Type definition for the tileUrlTemplates prop which accepts an array of tile URL templates.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Image Name Property Type Definition\nDESCRIPTION: Required property that defines the ID of the image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterLayer slot prop type definition\nDESCRIPTION: Type definition for the slot prop which assigns the layer to a named position in the layer order. Only available in Mapbox v11.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\n'bottom' | 'middle' | 'top'\n```\n\n----------------------------------------\n\nTITLE: Callout TextStyle Prop Type Definition in TypeScript\nDESCRIPTION: Defines the textStyle prop type for the Callout component. This ViewStyle is applied to the title text displayed in the content bubble of the callout.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nViewStyle\n```\n\n----------------------------------------\n\nTITLE: Callout Title Prop Type Definition in TypeScript\nDESCRIPTION: Defines the type for the required title prop of the Callout component. This string value gets displayed in the default callout bubble.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: SourceLayerID Property Type Definition\nDESCRIPTION: String property identifying the layer within the source\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Annotation Icon Type Definition\nDESCRIPTION: Type definition for the icon prop accepting string, number or object\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nstring | number | object\n```\n\n----------------------------------------\n\nTITLE: HeatmapLayer Existing Property Type\nDESCRIPTION: Type definition for the existing property that determines if the layer ID refers to an existing layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Callout ContainerStyle Prop Type Definition in TypeScript\nDESCRIPTION: Defines the containerStyle prop type for the Callout component. This ViewStyle is applied to the native RNMBXCallout container, with a warning to use at your own risk.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nViewStyle\n```\n\n----------------------------------------\n\nTITLE: ID Property Type Definition\nDESCRIPTION: Type definition for the required id property that uniquely identifies the layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Callout Style Prop Type Definition in TypeScript\nDESCRIPTION: Defines the style prop type for the Callout component. This ViewStyle is applied to the Animated.View wrapper and can be used for animations.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nViewStyle\n```\n\n----------------------------------------\n\nTITLE: Callout TipStyle Prop Type Definition in TypeScript\nDESCRIPTION: Defines the tipStyle prop type for the Callout component. This ViewStyle is applied to the triangle tip displayed under the content bubble of the callout.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nViewStyle\n```\n\n----------------------------------------\n\nTITLE: MaxZoomLevel Property Type Definition\nDESCRIPTION: Numeric property defining the maximum zoom level for layer visibility\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: SymbolLayer Existing Type Definition\nDESCRIPTION: Type definition for the existing prop that determines if the layer already exists\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Setting Connected Status for Android\nDESCRIPTION: Android-specific method that controls whether Mapbox is connected to the internet. Useful for forcing offline maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n### setConnected(connected)\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `connected` | `Boolean` | `Yes` | whether or not mapbox is told to be connected or not |\n```\n\n----------------------------------------\n\nTITLE: Callout ContentStyle Prop Type Definition in TypeScript\nDESCRIPTION: Defines the contentStyle prop type for the Callout component. This ViewStyle is applied to the content bubble of the callout.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Callout.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nViewStyle\n```\n\n----------------------------------------\n\nTITLE: HeatmapLayer Source ID Type\nDESCRIPTION: Type definition for the sourceID property that specifies the data source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeatmapLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: SymbolLayer ID Type Definition\nDESCRIPTION: Type definition for the required id prop that uniquely identifies the layer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Importing FillExtrusionLayer in React Native\nDESCRIPTION: This snippet shows how to import the FillExtrusionLayer component from the @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FillExtrusionLayer } from '@rnmapbox/maps';\n```\n\n----------------------------------------\n\nTITLE: SymbolLayer SourceID Type Definition\nDESCRIPTION: Type definition for the sourceID prop that specifies the data source\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SymbolLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Image SDF Property Type Definition\nDESCRIPTION: Optional boolean property for making the image an SDF (Signed Distance Field) icon, used for recolorable images in Mapbox maps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Image StretchX Property Type Definition\nDESCRIPTION: Array property defining horizontal stretchable areas using from-to position pairs.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: ID Property Type Definition\nDESCRIPTION: Required string property that uniquely identifies the source in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Style Property Type Definition\nDESCRIPTION: Type definition for the style property that contains customizable style attributes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nBackgroundLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Importing RasterLayer from @rnmapbox/maps\nDESCRIPTION: Basic import statement for the RasterLayer component from the @rnmapbox/maps library. This is the entry point for using raster layers in your React Native Mapbox application.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RasterLayer } from '@rnmapbox/maps';\n\nRasterLayer\n```\n\n----------------------------------------\n\nTITLE: RasterLayer id prop type definition\nDESCRIPTION: Type definition for the required id prop which uniquely identifies the source in the style to which it is added.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Image StretchY Property Type Definition\nDESCRIPTION: Array property defining vertical stretchable areas using from-to position pairs.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nArray\n```\n\n----------------------------------------\n\nTITLE: Setting FillExtrusionLayer Existing Property\nDESCRIPTION: This snippet shows the prop type for the 'existing' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Puck Bearing Enabled Property Type\nDESCRIPTION: Boolean property type definition that determines whether the puck rotates to track the bearing source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Layer Index Property Type Definition\nDESCRIPTION: Type definition for the layerIndex property that specifies the layer's position in the stack.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Importing ImageSource Component\nDESCRIPTION: Shows how to import the ImageSource component from @rnmapbox/maps library\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ImageSource } from '@rnmapbox/maps';\n\nImageSource\n```\n\n----------------------------------------\n\nTITLE: RasterLayer sourceID prop type definition\nDESCRIPTION: Type definition for the sourceID prop which specifies the source from which to obtain the data to style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Bearing Image Property Type for LocationPuck\nDESCRIPTION: String property type definition for specifying the image name to use as the middle layer for the location indicator. The Images component should define this image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LocationPuck.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Source Layer ID Property Type Definition\nDESCRIPTION: Type definition for the sourceLayerID property that identifies the layer within the source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: HeadingIndicator 'heading' Prop Type Definition\nDESCRIPTION: This defines the 'heading' prop for the HeadingIndicator component as a number type. Documentation notes this prop lacks a description.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/HeadingIndicator.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: LineLayer layerIndex Property Type Definition\nDESCRIPTION: Type definition for the layerIndex property that specifies the index at which to insert the layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: AboveLayerID Property Type Definition\nDESCRIPTION: String property specifying the layer above which to insert this layer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Importing RasterDemSource Component\nDESCRIPTION: Basic import statement for the RasterDemSource component from @rnmapbox/maps package.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RasterDemSource } from '@rnmapbox/maps';\n\nRasterDemSource\n```\n\n----------------------------------------\n\nTITLE: Terrain style Property Type Declaration\nDESCRIPTION: Type definition for the style property that allows customizing terrain appearance through TerrainLayerStyleProps.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Terrain.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nTerrainLayerStyleProps\n```\n\n----------------------------------------\n\nTITLE: Running Web Example with Expo\nDESCRIPTION: Command to start the example app in web mode using Expo CLI.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CONTRIBUTING.md#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx expo start -c --web\n```\n\n----------------------------------------\n\nTITLE: Defining anchor prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the 'anchor' prop of the MarkerView component, which specifies the anchor point of the marker view.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\ntype Anchor = {\n  x: number; /* FIX ME NO DESCRIPTION */\n  y: number; /* FIX ME NO DESCRIPTION */\n}\n```\n\n----------------------------------------\n\nTITLE: Existing Property Type Definition\nDESCRIPTION: Type definition for the existing property that determines if the id refers to an existing layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: LineLayer slot Property Type Definition\nDESCRIPTION: Type definition for the slot property that assigns the layer to a specific position in the layer order (v11 only).\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/LineLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\n'bottom' | 'middle' | 'top'\n```\n\n----------------------------------------\n\nTITLE: PointAnnotation 'style' Prop Type Definition\nDESCRIPTION: Type definition for the style prop which applies view styles to the PointAnnotation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/PointAnnotation.md#2025-04-16_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nViewProps['style']\n```\n\n----------------------------------------\n\nTITLE: Navigating to Example Directory in Terminal\nDESCRIPTION: Command to change directory to the example folder in the project repository.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/example/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd example\n```\n\n----------------------------------------\n\nTITLE: Function type for onStatusChanged prop\nDESCRIPTION: Defines the type for the onStatusChanged callback property which is triggered when the viewport status changes.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Viewport.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nfunc\n```\n\n----------------------------------------\n\nTITLE: RasterLayer sourceLayerID prop type definition\nDESCRIPTION: Type definition for the sourceLayerID prop which identifies the layer within the source from which to obtain the data to style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Filter Property Type Definition\nDESCRIPTION: Type definition for the filter property that defines conditions for feature filtering.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: RasterDemSource tileSize Prop Type\nDESCRIPTION: Type definition for the tileSize prop which specifies the size of map tiles. Defaults vary by URL type.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterDemSource.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Testing Linting on Specific JavaScript File for rnmapbox/maps\nDESCRIPTION: This snippet shows how to test the linting process on a specific JavaScript file. It installs dependencies and runs the linting script with a specified file path.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/scripts/actions/lint-code-example-in-issues/README.md#2025-04-16_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\nLINT_FILE=example.jsx  node lint-code-example-in-issues.js\n```\n\n----------------------------------------\n\nTITLE: Boolean property type for transitionsToIdleUponUserInteraction prop\nDESCRIPTION: Defines the type for the transitionsToIdleUponUserInteraction property which controls whether the viewport should idle on touch input.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Viewport.md#2025-04-16_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Image Scale Property Type Definition\nDESCRIPTION: Number property defining the scale factor for the image.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Image.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Max Zoom Level Property Type Definition\nDESCRIPTION: Type definition for the maxZoomLevel property that sets the maximum zoom level.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Defining allowOverlapWithPuck prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the 'allowOverlapWithPuck' prop of the MarkerView component, which determines whether markers should be hidden if close to a UserLocation puck.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: ImageSource Existing Property Type\nDESCRIPTION: Defines the existing property type that determines if the source references an existing style\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Defining isSelected prop type for MarkerView in TypeScript\nDESCRIPTION: This snippet defines the type for the 'isSelected' prop of the MarkerView component. The purpose of this prop is not described in the provided documentation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/MarkerView.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Filtering FillExtrusionLayer Features\nDESCRIPTION: This snippet shows the prop type for the 'filter' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nFilterExpression\n```\n\n----------------------------------------\n\nTITLE: Adding React-Core Modular Headers for React Native 0.60\nDESCRIPTION: Additional Podfile configuration specifically for React Native 0.60. This snippet modifies the React-Core pod configuration to include modular headers, which is required for compatibility with Mapbox on this specific React Native version.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/README-v10.md#2025-04-16_snippet_5\n\nLANGUAGE: pod\nCODE:\n```\n# on RN 0.60 only:\n# add modular_headers to `React-Core`\npod 'React-Core', :path => '../node_modules/react-native/React', modular_headers: true\n```\n\n----------------------------------------\n\nTITLE: ImageSource Children Property Type\nDESCRIPTION: Defines the children property type for the component\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ImageSource.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nReact.ReactElement | React.ReactElement[]\n```\n\n----------------------------------------\n\nTITLE: Setting FillExtrusionLayer Maximum Zoom Level\nDESCRIPTION: This snippet shows the prop type for the required 'maxZoomLevel' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Setting FillExtrusionLayer Index\nDESCRIPTION: This snippet shows the prop type for the 'layerIndex' property of FillExtrusionLayer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/FillExtrusionLayer.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Source ID Property Type Definition\nDESCRIPTION: Type definition for the sourceID property that specifies the data source.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Installing V11 MapboxMaps for iOS Example\nDESCRIPTION: Command to update pods for running the example app with Mapbox V11 on iOS.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CONTRIBUTING.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd example/ios ; RNMBX11=1 pod update MapboxMaps\n```\n\n----------------------------------------\n\nTITLE: StyleImport Config Property Type Definition\nDESCRIPTION: Type definition for the required config property which defines configuration options for the style import. Used to customize the Mapbox standard style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleImport.md#2025-04-16_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\ntype Config = {\n  [object Object]: string; /* FIX ME NO DESCRIPTION */\n}\n```\n\n----------------------------------------\n\nTITLE: Above Layer ID Property Type Definition\nDESCRIPTION: Type definition for the aboveLayerID property that determines layer positioning.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: StyleImport Existing Property Type Definition\nDESCRIPTION: Type definition for the required existing property of StyleImport component, which must always be set to true.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/StyleImport.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Below Layer ID Property Type Definition\nDESCRIPTION: Type definition for the belowLayerID property that determines layer positioning.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/BackgroundLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: RasterLayer existing prop type definition\nDESCRIPTION: Type definition for the existing prop which indicates that the id refers to an existing layer in the style and doesn't create a new layer.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/RasterLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: BelowLayerID Property Type Definition\nDESCRIPTION: String property specifying the layer below which to insert this layer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nstring\n```\n\n----------------------------------------\n\nTITLE: Existing Property Type Definition\nDESCRIPTION: Boolean property indicating if the ID refers to an existing layer in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/SkyLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: LayerIndex Property Type Definition\nDESCRIPTION: Numeric property specifying the index at which to insert the layer\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Running Linting Process for rnmapbox/maps Issues\nDESCRIPTION: This snippet shows the commands to install dependencies, fetch an issue, and run the linting process on code examples in issues.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/scripts/actions/lint-code-example-in-issues/README.md#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\nnode ./fetch-issue.js\nGITHUB_EVENT_PATH=./test-issue.json node lint-code-example-in-issues.js\n```\n\n----------------------------------------\n\nTITLE: MinZoomLevel Property Type Definition\nDESCRIPTION: Numeric property defining the minimum zoom level for layer visibility\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/ModelLayer.md#2025-04-16_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nnumber\n```\n\n----------------------------------------\n\nTITLE: Setting Well Known Tile Server\nDESCRIPTION: Deprecated method for setting a tile server. Will be removed in the next version.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Mapbox.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### setWellKnownTileServer(tileServer)\n\n\n\n#### arguments\n| Name | Type | Required | Description  |\n| ---- | :--: | :------: | :----------: |\n| `tileServer` | `String` | `Yes` | tile server |\n```\n\n----------------------------------------\n\nTITLE: CircleLayer existing Prop Type Definition\nDESCRIPTION: Defines the existing prop type which indicates whether the id refers to an existing layer in the style.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nboolean\n```\n\n----------------------------------------\n\nTITLE: Defining CircleStrokeOpacity Transition Object in JavaScript\nDESCRIPTION: Default configuration object for circle stroke opacity transitions. Specifies the animation duration in milliseconds and the delay before the transition begins.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/CircleLayer.md#2025-04-16_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  duration: 300,\n  delay: 0\n}\n```\n\n----------------------------------------\n\nTITLE: Annotation Style Type Definition\nDESCRIPTION: Type definition for the style prop as an object\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/Annotation.md#2025-04-16_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nobject\n```\n\n----------------------------------------\n\nTITLE: Code Generation Template Example\nDESCRIPTION: Example of code generation template markers used in the project for automated code generation.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/CONTRIBUTING.md#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// @{codepart-replace-start(LayerManagerCommonProps.codepart-kt.ejs,{layerType:\"RNMBXCircleLayer\"})}\n...\n// @{codepart-replace-end}\n```\n\n----------------------------------------\n\nTITLE: Debugging Linting Process with VSCode for rnmapbox/maps\nDESCRIPTION: This snippet demonstrates how to use the VSCode debugger with the linting process. It includes steps to install dependencies, fetch a specific issue, and run the linting script with the debugger attached.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/scripts/actions/lint-code-example-in-issues/README.md#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install\nnode ./fetch-issue-for-testing.js 2871\nGITHUB_EVENT_PATH=./test-issue.json node --inspect lint-code-example-in-issues.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Offline Packs\nDESCRIPTION: Gets all current offline packs stored in the database.\nSOURCE: https://github.com/rnmapbox/maps/blob/main/docs/OfflineManagerLegacy.md#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst offlinePacks = await Mapbox.offlineManagerLegacy.getPacks();\n```"
  }
]
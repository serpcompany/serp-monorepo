[
  {
    "owner": "hbnetwork",
    "repo": "python-decouple",
    "content": "TITLE: Django Settings Integration with Python Decouple\nDESCRIPTION: Comprehensive example of integrating Python Decouple in a Django settings.py file, including database configuration with dj-database-url and various application settings.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# coding: utf-8\nfrom decouple import config\nfrom unipath import Path\nfrom dj_database_url import parse as db_url\n\n\nBASE_DIR = Path(__file__).parent\n\nDEBUG = config('DEBUG', default=False, cast=bool)\nTEMPLATE_DEBUG = DEBUG\n\nDATABASES = {\n    'default': config(\n        'DATABASE_URL',\n        default='sqlite:///' + BASE_DIR.child('db.sqlite3'),\n        cast=db_url\n    )\n}\n\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_L10N = True\nUSE_TZ = True\n\nSECRET_KEY = config('SECRET_KEY')\n\nEMAIL_HOST = config('EMAIL_HOST', default='localhost')\nEMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)\n\n# ...\n```\n\n----------------------------------------\n\nTITLE: Django Settings Example with Python Decouple\nDESCRIPTION: This snippet shows how to use python-decouple in a Django settings.py file to manage configuration, including database URLs, debug settings, and other Django-specific settings.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config, Csv\n\nDEBUG = config('DEBUG', default=False, cast=bool)\nTEMPLATE_DEBUG = DEBUG\nALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': config('DATABASE_NAME'),\n        'USER': config('DATABASE_USER'),\n        'PASSWORD': config('DATABASE_PASSWORD'),\n        'HOST': config('DATABASE_HOST'),\n        'PORT': '',\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Configuration Parameters with Decouple\nDESCRIPTION: Examples of retrieving different types of configuration parameters with optional default values and type casting using Python Decouple's config function.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nSECRET_KEY = config('SECRET_KEY')\nDEBUG = config('DEBUG', default=False, cast=bool)\nEMAIL_HOST = config('EMAIL_HOST', default='localhost')\nEMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Python Decouple with Environment Variables\nDESCRIPTION: This snippet demonstrates how to import and use the config function from python-decouple to read configuration values from environment variables, with default values provided as fallbacks.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config\n\nDEBUG = config('DEBUG', default=False, cast=bool)\nEMAIL = config('EMAIL', default='example@example.com')\nTOKEN = config('TOKEN')\n```\n\n----------------------------------------\n\nTITLE: Examples of Using the Cast Argument with Decouple\nDESCRIPTION: Examples demonstrating how the cast argument in Python Decouple can transform string values into appropriate Python types including booleans, integers, lists, and tuples.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n>>> os.environ['DEBUG'] = 'False'\n>>> config('DEBUG', cast=bool)\nFalse\n\n>>> os.environ['EMAIL_PORT'] = '42'\n>>> config('EMAIL_PORT', cast=int)\n42\n\n>>> os.environ['ALLOWED_HOSTS'] = '.localhost, .herokuapp.com'\n>>> config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])\n['.localhost', '.herokuapp.com']\n\n>>> os.environ['SECURE_PROXY_SSL_HEADER'] = 'HTTP_X_FORWARDED_PROTO, https'\n>>> config('SECURE_PROXY_SSL_HEADER', cast=Csv(post_process=tuple))\n('HTTP_X_FORWARDED_PROTO', 'https')\n```\n\n----------------------------------------\n\nTITLE: Python Decouple Configuration with Multiple Sources\nDESCRIPTION: This example demonstrates the repository pattern used by python-decouple, showing how to prioritize configuration sources including environment variables, .ini files, and .env files.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import Config, RepositoryEnv, RepositoryIni\n\nconfig = Config(RepositoryEnv())\n# or\nconfig = Config(RepositoryIni(filename))\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Python Decouple\nDESCRIPTION: Basic example of using Python Decouple to access configuration variables from either environment variables or a settings file.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/no_repository/empty.txt#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config\n\nDEBUG = config('DEBUG', default=False, cast=bool)\nTEMPLATE_DEBUG = config('TEMPLATE_DEBUG', default=DEBUG, cast=bool)\nSECRET_KEY = config('SECRET_KEY')\nDATABASE_URL = config('DATABASE_URL')\nALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])\n```\n\n----------------------------------------\n\nTITLE: Reading Configurations with Default Values\nDESCRIPTION: Example showing how to use Python Decouple with default values when configuration keys might be missing.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/no_repository/empty.txt#2025-04-19_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config\n\nAMAZON_SECRET_KEY = config('AMAZON_SECRET_KEY', default='')\nEMAIL_HOST = config('EMAIL_HOST', default='localhost')\nEMAIL_PORT = config('EMAIL_PORT', default=25, cast=int)\n```\n\n----------------------------------------\n\nTITLE: Using Python Decouple with Different Configuration Sources\nDESCRIPTION: Example showing how to explicitly define the configuration source (environment variables, .env file, or settings.ini) with Python Decouple.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/no_repository/empty.txt#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import Config, RepositoryEnv, RepositoryIni\n\nconfig = Config(RepositoryEnv('.env'))\nDEBUG = config('DEBUG', default=False, cast=bool)\n\n# or\n\nconfig = Config(RepositoryIni('settings.ini'))\nDEBUG = config('DEBUG', default=False, cast=bool)\n```\n\n----------------------------------------\n\nTITLE: Using the Built-in Csv Helper in Decouple\nDESCRIPTION: Examples of using the Csv helper class provided by Python Decouple to parse comma-separated values from configuration with various options like custom delimiters and type casting.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n>>> from decouple import Csv\n>>> os.environ['ALLOWED_HOSTS'] = '.localhost, .herokuapp.com'\n>>> config('ALLOWED_HOSTS', cast=Csv())\n['.localhost', '.herokuapp.com']\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Boolean Logic Issue with Environment Variables in Python\nDESCRIPTION: This snippet demonstrates why direct use of environment variables can be problematic for boolean values. When checking the DEBUG environment variable without proper type casting, a string value of 'False' will evaluate to True in Python logic.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nif os.environ['DEBUG']:\n    print True\nelse:\n    print False\n```\n\n----------------------------------------\n\nTITLE: Python Decouple with Custom Casting Functions\nDESCRIPTION: This example shows how to use a custom casting function with python-decouple to convert configuration values to specific types beyond the built-in types.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# Using cast is simple\n\n# Cast to type int\nPORT = config('PORT', default=8000, cast=int)\n\n# Cast to extra types or custom types\nFROM = config('FROM', default='foo@bar.com', cast=Email())\n```\n\n----------------------------------------\n\nTITLE: CSV Processing with Python Decouple\nDESCRIPTION: Demonstrates how to use the Csv cast with post-processing to convert environment variables into specific data types like tuples.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n>>> os.environ['SECURE_PROXY_SSL_HEADER'] = 'HTTP_X_FORWARDED_PROTO, https'\n>>> config('SECURE_PROXY_SSL_HEADER', cast=Csv(post_process=tuple))\n('HTTP_X_FORWARDED_PROTO', 'https')\n```\n\n----------------------------------------\n\nTITLE: Choices Validation in Python Decouple\nDESCRIPTION: Shows how to use the Choices helper for validating configuration values against a predefined list of options.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n>>> from decouple import config, Choices\n>>> os.environ['CONNECTION_TYPE'] = 'usb'\n>>> config('CONNECTION_TYPE', cast=Choices(['eth', 'usb', 'bluetooth']))\n'usb'\n\n>>> os.environ['CONNECTION_TYPE'] = 'serial'\n>>> config('CONNECTION_TYPE', cast=Choices(['eth', 'usb', 'bluetooth']))\nTraceback (most recent call last):\n ...\nValueError: Value not in list: 'serial'; valid values are ['eth', 'usb', 'bluetooth']\n```\n\n----------------------------------------\n\nTITLE: Advanced Csv Helper Configuration\nDESCRIPTION: Examples of more complex Csv helper usage including type casting to integers and customizing delimiter and string processing options.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n>>> os.environ['LIST_OF_INTEGERS'] = '1,2,3,4,5'\n>>> config('LIST_OF_INTEGERS', cast=Csv(int))\n[1, 2, 3, 4, 5]\n\n>>> os.environ['COMPLEX_STRING'] = '%virtual_env%\\t *important stuff*\\t   trailing spaces   '\n>>> csv = Csv(cast=lambda s: s.upper(), delimiter='\\t', strip=' %*')\n>>> csv(os.environ['COMPLEX_STRING'])\n['VIRTUAL_ENV', 'IMPORTANT STUFF', 'TRAILING SPACES']\n```\n\n----------------------------------------\n\nTITLE: Csv Helper with Default Values\nDESCRIPTION: Example of using the Csv helper with a default value when the environment variable isn't set.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n>>> from decouple import Csv\n>>> config('ALLOWED_HOSTS', default='127.0.0.1', cast=Csv())\n['127.0.0.1']\n```\n\n----------------------------------------\n\nTITLE: Choices Helper with Type Casting\nDESCRIPTION: Demonstrates using the Choices helper with additional type casting for numeric values.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n>>> os.environ['SOME_NUMBER'] = '42'\n>>> config('SOME_NUMBER', cast=Choices([7, 14, 42], cast=int))\n42\n```\n\n----------------------------------------\n\nTITLE: Django-style Choices Configuration\nDESCRIPTION: Shows how to use Django-style choice tuples with python-decouple for configuration validation.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n>>> USB = 'usb'\n>>> ETH = 'eth'\n>>> BLUETOOTH = 'bluetooth'\n>>>\n>>> CONNECTION_OPTIONS = (\n...        (USB, 'USB'),\n...        (ETH, 'Ethernet'),\n...        (BLUETOOTH, 'Bluetooth'),)\n...\n>>> os.environ['CONNECTION_TYPE'] = BLUETOOTH\n>>> config('CONNECTION_TYPE', cast=Choices(choices=CONNECTION_OPTIONS))\n'bluetooth'\n```\n\n----------------------------------------\n\nTITLE: Creating .env Configuration File for Python Decouple\nDESCRIPTION: This example shows the format for a .env file that can be used with python-decouple. It defines key-value pairs for configuration settings.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_2\n\nLANGUAGE: ini\nCODE:\n```\nDEBUG=True\nTEMPLATE_DEBUG=True\nSECRET_KEY=ARANDOMSECRETKEY\nDATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\nSHOW_TOOLBAR=True\nSENDGRID_USERNAME=myuser\nSENDGRID_PASSWORD=mypass\n```\n\n----------------------------------------\n\nTITLE: Sample INI Configuration File Format\nDESCRIPTION: Example of a settings.ini configuration file format that can be used with Python Decouple. Demonstrates various parameter types and string interpolation.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_6\n\nLANGUAGE: ini\nCODE:\n```\n[settings]\nDEBUG=True\nTEMPLATE_DEBUG=%(DEBUG)s\nSECRET_KEY=ARANDOMSECRETKEY\nDATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\nPERCENTILE=90%%\n#COMMENTED=42\n```\n\n----------------------------------------\n\nTITLE: Sample .env Configuration File Format\nDESCRIPTION: Example of a .env configuration file format that can be used with Python Decouple. Shows the simpler key-value format without sections.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_7\n\nLANGUAGE: console\nCODE:\n```\nDEBUG=True\nTEMPLATE_DEBUG=True\nSECRET_KEY=ARANDOMSECRETKEY\nDATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\nPERCENTILE=90%\n#COMMENTED=42\n```\n\n----------------------------------------\n\nTITLE: Creating Settings Configuration File\nDESCRIPTION: Example of a settings.ini configuration file used with Python Decouple to store application settings outside of code.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/no_repository/empty.txt#2025-04-19_snippet_1\n\nLANGUAGE: ini\nCODE:\n```\n[settings]\nDEBUG=True\nTEMPLATE_DEBUG=%(DEBUG)s\nSECRET_KEY=ARANDOMSECRETKEY\nDATABASE_URL=mysql://myuser:mypassword@myhost/mydatabase\nALLOWED_HOSTS=127.0.0.1, .localhost\n```\n\n----------------------------------------\n\nTITLE: Multiple Environment Files Configuration\nDESCRIPTION: Demonstrates how to use multiple environment files together using ChainMap.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nfrom collections import ChainMap\nfrom decouple import Config, RepositoryEnv\n\n\nconfig = Config(ChainMap(RepositoryEnv(\".private.env\"), RepositoryEnv(\".env\")))\n```\n\n----------------------------------------\n\nTITLE: Custom Environment File Path Configuration\nDESCRIPTION: Demonstrates how to specify a custom path for the .env file in python-decouple.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom decouple import Config, RepositoryEnv\n\n\nconfig = Config(RepositoryEnv(\"path/to/.env\"))\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Based Config Path\nDESCRIPTION: Shows how to define the environment file path using an environment variable.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom decouple import Config, RepositoryEnv\n\n\nDOTENV_FILE = os.environ.get(\"DOTENV_FILE\", \".env\") # only place using os.environ\nconfig = Config(RepositoryEnv(DOTENV_FILE))\n```\n\n----------------------------------------\n\nTITLE: Changing Decouple's Default Encoding\nDESCRIPTION: Example of how to change the default encoding used by Python Decouple when reading configuration files. The default is UTF-8, but this can be customized.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config\nconfig.encoding = 'cp1251'\nSECRET_KEY = config('SECRET_KEY')\n```\n\n----------------------------------------\n\nTITLE: Using System's Default Encoding with Decouple\nDESCRIPTION: Example of how to configure Python Decouple to use the system's preferred encoding when reading configuration files.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nimport locale\nfrom decouple import config\nconfig.encoding = locale.getpreferredencoding(False)\nSECRET_KEY = config('SECRET_KEY')\n```\n\n----------------------------------------\n\nTITLE: Importing the Config Object from Decouple\nDESCRIPTION: Basic import statement to bring the config object from the decouple module into your Python script.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom decouple import config\n```\n\n----------------------------------------\n\nTITLE: Installing Python Decouple via pip\nDESCRIPTION: Command to install the Python Decouple package using pip package manager.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_1\n\nLANGUAGE: console\nCODE:\n```\npip install python-decouple\n```\n\n----------------------------------------\n\nTITLE: Installing Python Decouple via pip\nDESCRIPTION: This command installs the python-decouple package using pip, the Python package manager.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/env/project/empty.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install python-decouple\n```\n\n----------------------------------------\n\nTITLE: Installing Python Decouple via pip\nDESCRIPTION: Command to install the Python Decouple library using pip package manager.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/tests/autoconfig/no_repository/empty.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install python-decouple\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for python-decouple\nDESCRIPTION: This snippet lists the required Python packages and their versions for the python-decouple project. It includes packages for mocking, testing, documentation generation, and package distribution.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmock==2.0.0\npytest==3.2.0\ntox==2.7.0\ndocutils==0.14\nPygments>=2.7.4\ntwine\n```\n\n----------------------------------------\n\nTITLE: Development Environment Setup\nDESCRIPTION: Console commands for setting up the development environment for contributing to python-decouple.\nSOURCE: https://github.com/hbnetwork/python-decouple/blob/master/README.rst#2025-04-19_snippet_20\n\nLANGUAGE: console\nCODE:\n```\ngit clone git@github.com:henriquebastos/python-decouple.git\ncd python-decouple\npython -m venv .venv\nsource .venv/bin/activate\npip install -r requirements.txt\ntox\n```"
  }
]
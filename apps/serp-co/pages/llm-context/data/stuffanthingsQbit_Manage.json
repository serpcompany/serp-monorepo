[
  {
    "owner": "stuffanthings",
    "repo": "qbit_manage",
    "content": "TITLE: Configuring New Qbit-Manage Torrent Management in YAML\nDESCRIPTION: This snippet demonstrates the new configuration structure for Qbit-Manage 4.0.0+. It introduces a group-based system for managing torrents, allowing for more flexible and granular control over share limits based on tags, categories, and hardlink status.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/v4-Migration-Guide.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncat:\n  movies: \"/data/torrents/movies\"\n  tv: \"/data/torrents/tv\"\ntracker:\n  Tracker-a:\n    tag: a\n  Tracker-b:\n    tag: b\n    Tracker-c:\n    tag: c\nnohardlinks:\n- movies\n- tv\nshare_limits:\n  group1.noHL:\n    priority: 1\n    include_any_tags:\n    - a\n    - b\n    include_all_tags:\n    - noHL\n    categories:\n    - movies\n    max_ratio: 2\n    max_seeding_time: 75\n    cleanup: true\n  group1:\n    priority: 2\n    include_any_tags:\n    - a\n    - b\n    categories:\n    - movies\n    max_ratio: 5\n    max_seeding_time: 100\n  group2.noHL:\n    priority: 3\n    include_any_tags:\n    - c\n    include_all_tags:\n    - noHL\n    categories:\n    - tv\n    max_ratio: 1\n    max_seeding_time: 25\n  group2:\n    priority: 4\n    include_any_tags:\n    - c\n    categories:\n    - tv\n    max_ratio:\n    max_seeding_time:\n```\n\n----------------------------------------\n\nTITLE: Defining Category Path Configuration in YAML\nDESCRIPTION: YAML syntax for defining category paths in qbit_manage. Maps category names to their corresponding save paths.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncategory: <path>/<to>/category\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for qbit_manage\nDESCRIPTION: Complete docker-compose configuration for qbit_manage including volume mappings, environment variables, and container settings. Includes configuration for torrent management, logging, and various qBittorrent-related features.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Docker-Installation.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.7\"\nservices:\n  qbit_manage:\n    container_name: qbit_manage\n    image: ghcr.io/stuffanthings/qbit_manage:latest\n    volumes:\n      - /mnt/user/appdata/qbit_manage/:/config:rw\n      - /mnt/user/data/torrents/:/data/torrents:rw\n      - /mnt/user/appdata/qbittorrent/:/qbittorrent/:ro\n    environment:\n      - QBT_RUN=false\n      - QBT_SCHEDULE=1440\n      - QBT_CONFIG=/config/config.yml\n      - QBT_LOGFILE=activity.log\n      - QBT_RECHECK=false\n      - QBT_CAT_UPDATE=false\n      - QBT_TAG_UPDATE=false\n      - QBT_REM_UNREGISTERED=false\n      - QBT_REM_ORPHANED=false\n      - QBT_TAG_TRACKER_ERROR=false\n      - QBT_TAG_NOHARDLINKS=false\n      - QBT_SHARE_LIMITS=false\n      - QBT_SKIP_CLEANUP=false\n      - QBT_DRY_RUN=false\n      - QBT_LOG_LEVEL=INFO\n      - QBT_DIVIDER==\n      - QBT_WIDTH=100\n    restart: on-failure:2\n```\n\n----------------------------------------\n\nTITLE: Configuring Old Qbit-Manage Torrent Management in YAML\nDESCRIPTION: This snippet shows the old configuration structure for Qbit-Manage, where torrents are managed based on trackers and hardlink status. It defines categories, tracker-specific settings, and no-hardlink rules with their respective share limits.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/v4-Migration-Guide.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncat:\n  movies: \"/data/torrents/movies\"\n  tv: \"/data/torrents/tv\"\ntracker:\n  Tracker-a:\n    tag: a\n    max_seeding_time: 100\n    max_ratio: 5\n  Tracker-b:\n    tag: b\n    max_seeding_time: 100\n    max_ratio: 5\n  Tracker-c:\n    tag: c\n    max_seeding_time: 50\n    max_ratio: 3\nnohardlinks:\n  movies:\n    cleanup: true\n    max_seeding_time: 75\n    max_ratio: 2\n  tv:\n    cleanup: true\n    max_seeding_time: 25\n    max_ratio: 1\n```\n\n----------------------------------------\n\nTITLE: Running qBit Manage Help Command in Bash\nDESCRIPTION: Command to run qBit Manage in an interactive terminal that displays a list of all available commands and options. Requires Python to be installed with the script accessible in the current directory.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython qbit_manage.py -h\n```\n\n----------------------------------------\n\nTITLE: Share Limits Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when share limits are updated for a specific group of torrents. Contains information about the group, torrents, their tags, and various share limit parameters including max ratio, max/min seeding time, and upload speed limit.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"share_limits\",               // Webhook Trigger keyword\n  \"title\": str,                             // Title of the Payload\n  \"body\": str,                              // Message of the Payload\n  \"grouping\": str,                          // Share Limit group name\n  \"torrents\": [str],                        // List of Torrent Names\n  \"torrent_tag\": str,                       // Torrent Tags\n  \"torrent_max_ratio\": float,               // Set the Max Ratio Share Limit\n  \"torrent_max_seeding_time\": int,          // Set the Max Seeding Time (minutes) Share Limit\n  \"torrent_min_seeding_time\": int,          // Set the Min Seeding Time (minutes) Share Limit\n  \"torrent_limit_upload_speed\": int         // Set the the torrent upload speed limit (kB/s)\n}\n```\n\n----------------------------------------\n\nTITLE: Cleanup Share Limits Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when torrents meeting share limit criteria are cleaned up. Contains information about the share limit group, affected torrents, category, tracker URL, Notifiarr indexer, and whether torrent contents were also deleted.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"cleanup_share_limits\",       // Webhook Trigger keyword\n  \"title\": str,                             // Title of the Payload\n  \"body\": str,                              // Message of the Payload\n  \"grouping\": str,                          // Share Limit group name\n  \"torrents\": [str],                        // List of Torrent Names\n  \"torrent_category\": str,                  // Torrent Category\n  \"cleanup\": True,                          // Cleanup flag\n  \"torrent_tracker\": str,                   // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                 // Notifiarr React name/id for indexer\n  \"torrents_deleted_and_contents\": bool,    // Deleted Torrents and contents or Deleted just the torrent\n}\n```\n\n----------------------------------------\n\nTITLE: Category Change Configuration in YAML\nDESCRIPTION: YAML syntax for configuring category changes in qbit_manage. Maps old category names to new category names for completed torrents.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nold_category_name: new_category_name\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for qbit_manage Project\nDESCRIPTION: A requirements.txt file that specifies the Python package dependencies with their specific versions. These packages are required for the qbit_manage project to function properly, covering functionalities like BitTorrent operations, scheduling, API interactions, and data formatting.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nbencodepy==0.9.5\ncroniter==6.0.0\nGitPython==3.1.44\nhumanize==4.12.1\npytimeparse2==1.7.1\nqbittorrent-api==2025.2.0\nrequests==2.32.3\nretrying==1.3.4\nruamel.yaml==0.18.10\nschedule==1.2.2\n```\n\n----------------------------------------\n\nTITLE: qbit_manage Update Script Content\nDESCRIPTION: This bash script automates the process of updating qbit_manage. It checks for updates, pulls changes, updates dependencies, and restarts the service if necessary. Users need to update the paths and service name as per their setup.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\nqbmPath=\"/home/bakerboy448/QbitManage\"\nqbmVenvPath=\"$qbmPath\"/\"qbit-venv/\"\nqbmServiceName=\"qbm\"\ncd \"$qbmPath\" || exit\ncurrentVersion=$(cat VERSION)\nbranch=$(git rev-parse --abbrev-ref HEAD)\ngit fetch\nif [ \"$(git rev-parse HEAD)\" = \"$(git rev-parse @'{u}')\" ]; then\n    echo \"=== Already up to date $currentVersion on $branch ===\"\n    exit 0\nfi\ngit pull\nnewVersion=$(cat VERSION)\n\"$qbmVenvPath\"/bin/python -m pip install -r requirements.txt\necho \"=== Updated from $currentVersion to $newVersion on $branch ===\"\necho \"=== Restarting qbm Service ===\"\nsudo systemctl restart \"$qbmServiceName\"\nexit 0\n```\n\n----------------------------------------\n\nTITLE: Run End Notification Webhook Payload Structure in YAML\nDESCRIPTION: This YAML structure defines the comprehensive webhook payload format sent at the end of qBit Manage execution. It includes detailed statistics about the operations performed, including counts of torrents modified and files deleted.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"run_end\",                      // Webhook Trigger keyword\n  \"title\": str,                               // Title of the Payload\n  \"body\": str,                                // Message of the Payload\n  \"start_time\": str,                          // Time Run started Format \"YYYY-mm-dd HH:MM:SS\"\n  \"end_time\": str,                            // Time Run ended Format \"YYYY-mm-dd HH:MM:SS\"\n  \"next_run\": str,                            // Time Next Run Format \"YYYY-mm-dd HH:MM:SS\"\n  \"run_time\": str,                            // Total Run Time \"H:MM:SS\"\n  \"torrents_added\": int,                      // Total Torrents Added\n  \"torrents_deleted\": int,                    // Total Torrents Deleted\n  \"torrents_deleted_and_contents_count\": int, // Total Torrents + Contents Deleted\n  \"torrents_resumed\": int,                    // Total Torrents Resumed\n  \"torrents_rechecked\": int,                  // Total Torrents Rechecked\n  \"torrents_categorized\": int,                // Total Torrents Categorized\n  \"torrents_tagged\": int,                     // Total Torrents Tagged\n  \"remove_unregistered\": int,                 // Total Unregistered Torrents Removed\n  \"torrents_tagged_tracker_error\": int,       // Total Tracker Error Torrents Tagged\n  \"torrents_untagged_tracker_error\": int,     // Total Tracker Error Torrents untagged\n  \"orphaned_files_found\": int,                // Total Orphaned Files Found\n  \"torrents_tagged_no_hardlinks\": int,        // Total noHL Torrents Tagged\n  \"torrents_untagged_no_hardlinks\": int,      // Total noHL Torrents untagged\n  \"torrents_updated_share_limits\": int        // Total Share Limits updated\n  \"torrents_cleaned_share_limits\": int        // Total Share Limit Torrents Cleaned (Deleted + Contents Deleted)\n  \"files_deleted_from_recyclebin\": int,       // Total Files Deleted from Recycle Bin\n  \"files_deleted_from_orphaned\": int          // Total Files Deleted from Orphaned Data\n}\n```\n\n----------------------------------------\n\nTITLE: Running qBit Manager Script with Full Logging\nDESCRIPTION: Bash script example for running qbit_manage with logging and custom commands. Shows complete implementation with echo statements for tracking execution.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Unraid-Installation.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"Running qBitTorrent Management\"\npython3 /mnt/user/data/scripts/qbit/qbit_manage.py -c /mnt/user/data/scripts/qbit/config.yml -l /mnt/user/data/scripts/qbit/activity.log -r -<list of commands>\necho \"qBitTorrent Management Completed\"\n```\n\n----------------------------------------\n\nTITLE: Remove Unregistered Torrents Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when unregistered torrents are found and potentially removed. Contains information about the torrents, category, status message, tags, tracker URL, Notifiarr indexer, and whether torrent contents were also deleted.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"rem_unregistered\",          // Webhook Trigger keyword\n  \"title\": str,                            // Title of the Payload\n  \"body\": str,                             // Message of the Payload\n  \"torrents\": [str],                       // List of Torrent Names\n  \"torrent_category\": str,                 // Torrent Category\n  \"torrent_status\": str,                   // Torrent Tracker Status message\n  \"torrent_tag\": str,                      // Torrent Tags\n  \"torrent_tracker\": str,                  // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                // Notifiarr React name/id for indexer\n  \"torrents_deleted_and_contents\": bool,   // Deleted Torrents and contents or Deleted just the torrent\n}\n```\n\n----------------------------------------\n\nTITLE: Remove Orphaned Files Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when orphaned files are found and moved to a dedicated orphaned folder. Contains information about the orphaned files, their target directory, and the total count of orphaned files.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"rem_orphaned\",          // Webhook Trigger keyword\n  \"title\": str,                        // Title of the Payload\n  \"body\": str,                         // Message of the Payload\n  \"orphaned_files\": list,              // List of orphaned files\n  \"orphaned_directory\": str,           // Folder path where orphaned files will be moved to\n  \"total_orphaned_files\": int,         // Total number of orphaned files found\n}\n```\n\n----------------------------------------\n\nTITLE: Cleanup Directories Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when files are deleted from various folders during cleanup operations. Contains information about the location being cleaned, files that were deleted, retention period, and total size of deleted data in bytes.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"cleanup_dirs\",             // Webhook Trigger keyword\n  \"location\": str,                        // Location of the folder that is being cleaned\n  \"title\": str,                           // Title of the Payload\n  \"body\": str,                            // Message of the Payload\n  \"files\": list,                          // List of files that were deleted from the location\n  \"empty_after_x_days\": int,              // Number of days that the files will be kept in the location\n  \"size_in_bytes\": int,                   // Total number of bytes deleted from the location\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Docker Run Command for qbit_manage\nDESCRIPTION: Basic docker run command to start qbit_manage container with volume mounting for configuration files.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Docker-Installation.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it -v <PATH_TO_CONFIG>:/config:rw ghcr.io/stuffanthings/qbit_manage:latest\n```\n\n----------------------------------------\n\nTITLE: Category Update Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when updating torrents with missing category. Contains information about the torrents, new category, tags, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"cat_update\",          // Webhook Trigger keyword\n  \"title\": str,                      // Title of the Payload\n  \"body\": str,                       // Message of the Payload\n  \"torrents\": [str],                 // List of Torrent Names\n  \"torrent_category\": str,           // New Torrent Category\n  \"torrent_tag\": str,                // Torrent Tags\n  \"torrent_tracker\": str,            // Torrent Tracker URL\n  \"notifiarr_indexer\": str,          // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Tag Update Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when updating torrents with missing tags. Contains information about the torrents, category, new tag, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"tag_update\",                 // Webhook Trigger keyword\n  \"title\": str,                             // Title of the Payload\n  \"body\": str,                              // Message of the Payload\n  \"torrents\": [str],                        // List of Torrent Names\n  \"torrent_category\": str,                  // Torrent Category\n  \"torrent_tag\": str,                       // New Torrent Tag\n  \"torrent_tracker\": str,                   // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                 // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Tag Tracker Error Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when torrents with tracker errors are tagged with an 'issue' tag. Contains information about the affected torrents, their category, tracker status message, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"tag_tracker_error\",                   // Webhook Trigger keyword\n  \"title\": str,                                      // Title of the Payload\n  \"body\": str,                                       // Message of the Payload\n  \"torrents\": [str],                                 // List of Torrent Names\n  \"torrent_category\": str,                           // Torrent Category\n  \"torrent_tag\": \"issue\",                            // Tag Added\n  \"torrent_status\": str,                             // Torrent Tracker Status message\n  \"torrent_tracker\": str,                            // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                          // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Tag No Hardlinks Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when torrents without hardlinks are found and tagged with 'noHL'. Contains information about the affected torrents, their category, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"tag_nohardlinks\",            // Webhook Trigger keyword\n  \"title\": str,                             // Title of the Payload\n  \"body\": str,                              // Message of the Payload\n  \"torrents\": [str],                        // List of Torrent Names\n  \"torrent_category\": str,                  // Torrent Category\n  \"torrent_tag\": 'noHL',                    // Add `noHL` to Torrent Tags\n  \"torrent_tracker\": str,                   // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                 // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Untag No Hardlinks Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when hardlinks are found for torrents previously tagged with 'noHL', causing the tag to be removed. Contains information about the affected torrents, their category, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"untag_nohardlinks\",          // Webhook Trigger keyword\n  \"title\": str,                             // Title of the Payload\n  \"body\": str,                              // Message of the Payload\n  \"torrents\": [str],                        // List of Torrent Names\n  \"torrent_category\": str,                  // Torrent Category\n  \"torrent_tag\": 'noHL',                    // Remove `noHL` from Torrent Tags\n  \"torrent_tracker\": str,                   // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                 // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Untag Tracker Error Notification Payload in YAML\nDESCRIPTION: Payload schema sent by qbit_manage when the 'issue' tag is removed from torrents that previously had tracker errors. Contains information about the affected torrents, their category, tags, tracker URL, and Notifiarr indexer.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"untag_tracker_error\",                 // Webhook Trigger keyword\n  \"title\": str,                                      // Title of the Payload\n  \"body\": str,                                       // Message of the Payload\n  \"torrents\": [str],                                 // List of Torrent Names\n  \"torrent_category\": str,                           // Torrent Category\n  \"torrent_tag\": str,                                // Tag Added\n  \"torrent_tracker\": str,                            // Torrent Tracker URL\n  \"notifiarr_indexer\": str,                          // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Run Start Notification Webhook Payload Structure in YAML\nDESCRIPTION: This YAML structure defines the webhook payload format sent at the beginning of qBit Manage execution. It includes function identifier, title, message, start time, and dry run status.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"run_start\",     // Webhook Trigger keyword\n  \"title\": str,                // Title of the Payload\n  \"body\": str,                 // Message of the Payload\n  \"start_time\": str,           // Time Run is started Format \"YYYY-mm-dd HH:MM:SS\"\n  \"dry_run\": bool              // Dry-Run\n}\n```\n\n----------------------------------------\n\nTITLE: Recheck Notification Webhook Payload Structure in YAML\nDESCRIPTION: This YAML structure defines the webhook payload format sent when qBit Manage rechecks or resumes paused torrents. It includes torrent details such as names, tags, category, tracker URL, and indexer information.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"recheck\",             // Webhook Trigger keyword\n  \"title\": str,                      // Title of the Payload\n  \"body\": str,                       // Message of the Payload\n  \"torrents\": [str],                 // List of Torrent Names\n  \"torrent_tag\": str,                // Torrent Tags\n  \"torrent_category\": str,           // Torrent Category\n  \"torrent_tracker\": str,            // Torrent Tracker URL\n  \"notifiarr_indexer\": str,          // Notifiarr React name/id for indexer\n}\n```\n\n----------------------------------------\n\nTITLE: Error Notification Webhook Payload Structure in YAML\nDESCRIPTION: This YAML structure defines the webhook payload format sent by qBit Manage when errors occur during execution. It includes function identifier, title, error message, criticality flag, and error type information.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Config-Setup.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  \"function\": \"run_error\",     // Webhook Trigger keyword\n  \"title\": str,                // Title of the Payload\n  \"body\": str,                 // Error Message of the Payload\n  \"critical\": bool,            // Critical Error\n  \"type\": str                  // severity of error\n}\n```\n\n----------------------------------------\n\nTITLE: Basic qBit Manager Command Structure\nDESCRIPTION: Core command structure for running qbit_manage with essential parameters including config file path, log file location, and custom commands.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Unraid-Installation.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython3 /<path to script>/qbit_manage.py -c /<path to config>/config.yml -l /<path to where you want log file>/activity.log -r -<list of commands>\n```\n\n----------------------------------------\n\nTITLE: Downloading qbit_manage Script from GitHub\nDESCRIPTION: This command downloads the qbit_manage script from GitHub and extracts it, stripping the top-level directory.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget -O - https://github.com/StuffAnThings/qbit_manage/archive/master.tar.gz | tar xz --strip=1 \"qbit_manage-master\"\n```\n\n----------------------------------------\n\nTITLE: Installing Python Requirements for qBit Manager on Unraid\nDESCRIPTION: Bash script to install Python package requirements for qbit_manage using pip. Script is configured to run at first array start.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Unraid-Installation.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\necho \"Installing required packages\"\npython3 -m pip install -r /mnt/user/path/to/requirements.txt\necho \"Required packages installed\"\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies for qbit_manage\nDESCRIPTION: This command installs the required Python packages listed in the requirements.txt file.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Creating and Editing qbit_manage Configuration\nDESCRIPTION: These commands create a copy of the sample configuration file and open it for editing using nano.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd config\ncp config.yml.sample config.yml\nnano -e config.yml\n```\n\n----------------------------------------\n\nTITLE: Cloning Qbit Manager Repository\nDESCRIPTION: Command to clone the Qbit Manager repository from GitHub\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/StuffAnThings/qbit_manage\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies\nDESCRIPTION: Command to install required Python packages using pip package manager\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Ignore Flag\nDESCRIPTION: Alternative installation command that ignores installed packages in case of dependency conflicts\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt --ignore-installed\n```\n\n----------------------------------------\n\nTITLE: Specifying Config File Location\nDESCRIPTION: Command to run Qbit Manager with a custom config file path\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython qbit_manage.py --config-file <path_to_config>\n```\n\n----------------------------------------\n\nTITLE: Specifying Log File Location\nDESCRIPTION: Command to run Qbit Manager with a custom log file path\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npython qbit_manage.py --log-file <path_to_log>\n```\n\n----------------------------------------\n\nTITLE: Displaying Help Commands\nDESCRIPTION: Command to show available options and commands for the Qbit Manager script\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Local-Installations.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npython qbit_manage.py -h\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Dependencies with Version Requirements\nDESCRIPTION: Defines required Python packages with pinned versions for the QBit management project. Includes pre-commit 4.1.0 for Git hook management and ruff 0.10.0 for Python linting and code quality checks.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/requirements-dev.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npre-commit==4.1.0\nruff==0.10.0\n```\n\n----------------------------------------\n\nTITLE: Creating qbit_manage Update Script\nDESCRIPTION: This command creates a new file named qbm-update.sh using the nano text editor.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnano qbm-update.sh\n```\n\n----------------------------------------\n\nTITLE: Running qbit_manage Update Script\nDESCRIPTION: This command executes the qbm-update.sh script to update qbit_manage.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n./qbm-update.sh\n```\n\n----------------------------------------\n\nTITLE: Making qbit_manage Update Script Executable\nDESCRIPTION: This command changes the permissions of the qbm-update.sh file to make it executable.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x qbm-update.sh\n```\n\n----------------------------------------\n\nTITLE: Making qbit_manage Script Executable\nDESCRIPTION: This command changes the permissions of the qbit_manage.py file to make it executable.\nSOURCE: https://github.com/stuffanthings/qbit_manage/blob/master/docs/Nix-Installation.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nchmod +x qbit_manage.py\n```"
  }
]
[
  {
    "owner": "vasturiano",
    "repo": "r3f-forcegraph",
    "content": "TITLE: Using R3fForceGraph in a React Component with Three.js\nDESCRIPTION: Illustrates how to use the R3fForceGraph component within a React component that uses Three.js. It shows setting up a reference, updating the graph on each frame, and rendering the graph within a Canvas.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nuseFrame(() => fgRef.current.tickFrame());\n\n...\n\n<Canvas>\n  <R3fForceGraph\n    ref={fgRef}\n    graphData={myData}\n  />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Input Data Structure for r3f-forcegraph\nDESCRIPTION: JSON schema showing the expected input format for the graph data. Demonstrates the structure for nodes with id, name and value properties, and links defined by source and target node IDs.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nodes\": [ \n        { \n          \"id\": \"id1\",\n          \"name\": \"name1\",\n          \"val\": 1 \n        },\n        { \n          \"id\": \"id2\",\n          \"name\": \"name2\",\n          \"val\": 10 \n        },\n        ...\n    ],\n    \"links\": [\n        {\n            \"source\": \"id1\",\n            \"target\": \"id2\"\n        },\n        ...\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Importing R3fForceGraph in JavaScript\nDESCRIPTION: Shows how to import the R3fForceGraph component in a JavaScript file. This is typically used in a React application.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport R3fForceGraph from 'r3f-forcegraph';\n```\n\n----------------------------------------\n\nTITLE: Link Styling Properties Table in Markdown\nDESCRIPTION: Markdown table documenting link styling properties including visibility, color, opacity, width, curvature, materials, and other visual attributes for force graph links.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Prop | Type | Default | Description |\n| --- | :--: | :--: | --- |\n| <b>linkVisibility</b>| <i>bool</i>, <i>string</i> or <i>func</i> | `true` | Link object accessor function, attribute or a boolean constant for whether to display the link line. |\n| <b>linkColor</b>| <i>string</i> or <i>func</i> | `color` | Link object accessor function or attribute for line color. |\n```\n\n----------------------------------------\n\nTITLE: Link Methods Table in Markdown\nDESCRIPTION: Markdown table documenting available methods for link manipulation, specifically the emitParticle method for generating non-cyclical particles on links.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Method | Arguments | Description |\n| --- | :--: | --- |\n| <b>emitParticle</b> | (<i>link</i>) | An alternative mechanism for generating particles, this method emits a non-cyclical single particle within a specific link. The emitted particle shares the styling (speed, width, color) of the regular particle props. A valid `link` object that is included in `graphData` should be passed as a single parameter. |\n```\n\n----------------------------------------\n\nTITLE: Including R3fForceGraph via CDN in HTML\nDESCRIPTION: Demonstrates how to include the R3fForceGraph component using a script tag and CDN link in an HTML file.\nSOURCE: https://github.com/vasturiano/r3f-forcegraph/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"//cdn.jsdelivr.net/npm/r3f-forcegraph\"></script>\n```"
  }
]
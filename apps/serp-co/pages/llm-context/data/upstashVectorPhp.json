[
  {
    "owner": "upstash",
    "repo": "vector-php",
    "content": "TITLE: Installing Upstash Vector PHP SDK\nDESCRIPTION: This snippet provides the Composer command required to install the Upstash Vector client SDK for PHP as a dependency in your project.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require upstash/vector\n```\n\n----------------------------------------\n\nTITLE: Initializing Upstash Vector PHP Index\nDESCRIPTION: This code demonstrates two ways to initialize an `Index` object: by explicitly providing the REST URL and Token, or by using the static `fromEnv()` method to read credentials from environment variables.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\n\\n// Initialize the index\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n// or just to use the environment variables\\n$index = Index::fromEnv();\n```\n\n----------------------------------------\n\nTITLE: Querying Data with Upstash Vector PHP (Embedding Models)\nDESCRIPTION: This code shows how to perform a similarity search using text data directly. The text is embedded into a vector by Upstash Vector before being used for the query.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\DataQuery;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->queryData(new DataQuery(\\n    data: 'What is Upstash Vector?',\\n    topK: 5,\\n));\n```\n\n----------------------------------------\n\nTITLE: Upserting Data with Upstash Vector PHP (Embedding Models)\nDESCRIPTION: This code demonstrates upserting raw text data instead of pre-computed vectors. The SDK sends the text to Upstash Vector, which uses an configured embedding model to generate the vector before storing it.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\DataUpsert;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->upsertData(new DataUpsert(\\n    id: 'upstash-vector',\\n    data: 'Upstash Vector is a serverless vector database.',\\n    metadata: ['field' => 'value'],\\n));\n```\n\n----------------------------------------\n\nTITLE: Upserting Vectors with Upstash Vector PHP\nDESCRIPTION: This snippet shows how to insert or update a vector in the index. It requires creating a `VectorUpsert` object with an ID, the vector data (generated randomly here), and optional metadata.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\VectorUpsert;\\n\\nuse function Upstash\\Vector\\createRandomVector;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->upsert(new VectorUpsert(\\n    id: 'upstash-rocks',\\n    vector: createRandomVector(dimensions: 1536),\\n    metadata: ['field' => 'value'],\\n));\n```\n\n----------------------------------------\n\nTITLE: Querying Vectors with Upstash Vector PHP\nDESCRIPTION: This snippet illustrates how to perform a similarity search using a query vector. It takes a `VectorQuery` object with the query vector and the desired number of results (`topK`).\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\VectorQuery;\\n\\nuse function Upstash\\Vector\\createRandomVector;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->query(new VectorQuery(\\n    vector: createRandomVector(dimensions: 1536),\\n    topK: 5,\\n));\n```\n\n----------------------------------------\n\nTITLE: Fetching Specific Vectors with Upstash Vector PHP\nDESCRIPTION: This snippet demonstrates how to retrieve one or more specific vectors by their unique IDs using the `fetch` method. It takes a `VectorFetch` object containing an array of IDs.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\VectorFetch;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->fetch(new VectorFetch(ids: ['upstash-rocks']));\n```\n\n----------------------------------------\n\nTITLE: Deleting Vectors with Upstash Vector PHP\nDESCRIPTION: This code shows how to remove vectors from the index. The `delete` method accepts an array of vector IDs to be removed.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n$index->delete(['upstash-rocks']);\n```\n\n----------------------------------------\n\nTITLE: Upserting Vectors within a Namespace with Upstash Vector PHP\nDESCRIPTION: This snippet demonstrates how to perform operations within a specific namespace. By calling the `namespace()` method, subsequent operations like `upsert` are limited to that namespace.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nuse Upstash\\Vector\\Index;\\nuse Upstash\\Vector\\VectorUpsert;\\n\\nuse function Upstash\\Vector\\createRandomVector;\\n\\n$index = new Index(\\n    url: 'UPSTASH_VECTOR_REST_URL',\\n    token: 'UPSTASH_VECTOR_REST_TOKEN',\\n);\\n\\n// Upsert to namespace\\n$index->namespace('books')->upsert(new VectorUpsert(\\n    id: 'upstash-rocks',\\n    vector: createRandomVector(dimensions: 1536),\\n    metadata: ['field' => 'value'],\\n));\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Upstash Vector PHP SDK\nDESCRIPTION: This snippet provides the Composer command to execute the test suite for the Upstash Vector PHP SDK, verifying its functionality.\nSOURCE: https://github.com/upstash/vector-php/blob/master/README.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncomposer test\n```"
  }
]
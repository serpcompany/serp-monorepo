[
  {
    "owner": "rancher",
    "repo": "rancher",
    "content": "TITLE: Configuring Rancher Helm Chart Parameters\nDESCRIPTION: Configuration parameters for customizing Rancher deployment using Helm chart. Includes settings for ingress, services, Let's Encrypt, proxies, resources, images, TLS, and custom logos.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ningress.extraAnnotations: {}\ningress.configurationSnippet: \" \"\nservice.annotations: {}\nservice.type: \" \"\nletsEncrypt.ingress.class: \" \"\nproxy: \" \"\nnoProxy: \"127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,.svc,.cluster.local\"\nresources: {}\nrancherImage: \"rancher/rancher\"\nrancherImageTag: \"same as chart version\"\nrancherImagePullPolicy: \"IfNotPresent\"\ntls: \"ingress\"\nsystemDefaultRegistry: \"\"\nuseBundledSystemChart: false\ncustomLogos.enabled: false\ncustomLogos.volumeSubpaths.emberUi: \"ember\"\ncustomLogos.volumeSubpaths.vueUi: \"vue\"\ncustomLogos.volumeName: \"\"\ncustomLogos.storageClass: \"\"\ncustomLogos.accessMode: \"ReadWriteOnce\"\ncustomLogos.size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment Settings in YAML\nDESCRIPTION: Basic YAML configuration for setting up Rancher server connection details and test behavior. Includes host address, admin token, and optional settings for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  cleanup: false\n  insecure: true/optional\n  cleanup: false/optional\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Rancher Advanced Configuration Parameters\nDESCRIPTION: A markdown table defining advanced configuration parameters for Rancher installation, including their default values and descriptions. Covers settings for trusted CAs, anti-affinity rules, audit logging, and ingress configurations.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter                                | Default Value                                                             | Description                                                                                                                                                                                                                                                                             |\n| ---------------------------------------- | ------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `additionalTrustedCAs`                   | false                                                                     | ***bool*** - [See Additional Trusted CAs Server](https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/installation-references/helm-chart-options#additional-trusted-cas)                                                                                                                                   |\n| `addLocal`                               | \"true\"                                                                    | ***string*** - As of Rancher v2.5.0 this flag is deprecated and must be set to \"true\"                                                                                                                                                                                                   |\n| `antiAffinity`                           | \"preferred\"                                                               | ***string*** - AntiAffinity rule for Rancher pods - *\"preferred, required\"*                                                                                                                                                                                                             |\n| `replicas`                               | 3                                                                         | ***int*** - Number of replicas of Rancher pods                                                                                                                                                                                                                                          |\n| `auditLog.destination`                   | \"sidecar\"                                                                 | ***string*** - Stream to sidecar container console or hostPath volume - *\"sidecar, hostPath\"*                                                                                                                                                                                           |\n```\n\n----------------------------------------\n\nTITLE: Running Rancher Docker Container\nDESCRIPTION: Quick start command to run Rancher container with necessary port mappings and privileges. Exposes ports 80 and 443, and configures container to restart unless explicitly stopped.\nSOURCE: https://github.com/rancher/rancher/blob/main/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher\n```\n\n----------------------------------------\n\nTITLE: Configuring EKS Cluster for Rancher Provisioning Tests\nDESCRIPTION: YAML configuration for EKS cluster setup, including Kubernetes version, node groups, networking settings, and other AWS-specific configurations. This template creates a cluster with 3 t3.medium instances running Kubernetes 1.26.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\neksClusterConfig:\n  imported: false\n  kmsKey: \"\"\n  kubernetesVersion: \"1.26\"\n  loggingTypes: []\n  nodeGroups:\n  - desiredSize: 3\n    diskSize: 50\n    ec2SshKey: \"\"\n    gpu: false\n    imageId: \"\"\n    instanceType: t3.medium\n    labels: {}\n    maxSize: 10\n    minSize: 1\n    nodeRole: \"\"\n    nodegroupName: \"\"\n    requestSpotInstances: false\n    resourceTags: {}\n    spotInstanceTypes: []\n    subnets: []\n    tags: {}\n    userData: \"\"\n    version: \"1.26\"\n  privateAccess: false\n  publicAccess: true\n  publicAccessSources: []\n  region: us-east-2\n  secretsEncryption: false\n  securityGroups:\n  -\n  serviceRole: \"\"\n  subnets:\n  -\n  -\n  tags: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring AKS Cluster for Rancher Provisioning Tests\nDESCRIPTION: YAML configuration for AKS cluster setup, including Kubernetes version, network plugin, load balancer SKU, and node pool specifications. Creates a cluster with 3 Standard_DS2_v2 nodes running Kubernetes 1.26.6.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\naksClusterConfig:\n  dnsPrefix: \"\"\n  kubernetesVersion: \"1.26.6\"\n  linuxAdminUsername: \"azureuser\"\n  loadBalancerSku: \"Standard\"\n  networkPlugin: \"kubenet\"\n  nodePools:\n  - availabilityZones:\n    - \"1\"\n    - \"2\"\n    - \"3\"\n    enableAutoScaling: false\n    maxPods: 110\n    maxCount: 10\n    minCount: 3\n    mode: \"System\"\n    name: \"agentpool\"\n    nodeCount: 3\n    osDiskSizeGB: 128\n    osDiskType: \"Managed\"\n    osType: \"Linux\"\n    vmSize: \"Standard_DS2_v2\"\n  resourceGroup: \"\"\n  resourceLocation: \"\"\n  tags: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Schema Test Settings in YAML\nDESCRIPTION: YAML configuration block for setting up Rancher schema tests. Specifies the Rancher server connection details, authentication token, and test parameters including the target cluster name and cleanup options.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/schemas/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"downstream_cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Installing Rancher with Let's Encrypt\nDESCRIPTION: Installs Rancher using Helm with Let's Encrypt certificates for SSL/TLS.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm install rancher rancher-latest/rancher \\\n  --namespace cattle-system \\\n  --set hostname=rancher.my.org \\\n  --set ingress.tls.source=letsEncrypt \\\n  --set letsEncrypt.email=me@example.org\n```\n\n----------------------------------------\n\nTITLE: Installing Rancher with Generated Certificates\nDESCRIPTION: Installs Rancher using Helm with Rancher-generated certificates for SSL/TLS.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install rancher rancher-latest/rancher \\\n  --namespace cattle-system \\\n  --set hostname=rancher.my.org\n```\n\n----------------------------------------\n\nTITLE: Deploying Custom Rancher Image with Helm\nDESCRIPTION: This Helm command upgrades or installs Rancher using a custom container image. It specifies the namespace, repository, and tag for the custom Rancher image.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/development.md#2025-04-10_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nhelm upgrade --install rancher/rancher \\\n  --namespace cattle-system \\\n  --create-namespace \\\n  --set rancherImage=\"my-test-repo/image\" \\\n  --set rancherImageTag=\"dev-tag\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Shell Test Parameters in YAML\nDESCRIPTION: This YAML configuration specifies essential parameters for Rancher shell testing, including the server address, admin token, security settings, cleanup option, and shell image version.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/shell/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\" \n  adminToken: \"rancher_admin_token\"\n  insecure: true/optional\n  cleanup: true/optional\n  shellImage : \"rancher/shell:<Version>\"\n```\n\n----------------------------------------\n\nTITLE: Installing Rancher with Private CA Certificates\nDESCRIPTION: Installs Rancher using Helm with private CA signed certificates.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhelm install rancher rancher-latest/rancher \\\n  --namespace cattle-system \\\n  --set hostname=rancher.my.org \\\n  --set ingress.tls.source=secret \\\n  --set privateCA=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher CLI Test Environment in YAML\nDESCRIPTION: YAML configuration for Rancher CLI tests specifying the server address, admin token, insecure option, and enabling the Rancher CLI flag.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/cli/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: true/optional\n  rancherCLI: true\n```\n\n----------------------------------------\n\nTITLE: Installing Rancher with Custom Certificates\nDESCRIPTION: Installs Rancher using Helm with custom certificates provided as secrets.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install rancher rancher-latest/rancher \\\n  --namespace cattle-system \\\n  --set hostname=rancher.my.org \\\n  --set ingress.tls.source=secret\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Vai Test Settings in YAML\nDESCRIPTION: YAML configuration block specifying required settings for running Vai tests including Rancher server address, admin token, and optional parameters for insecure mode, cleanup, and cluster name selection.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/steve/vai/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True # optional\n  cleanup: True # optional\n  clusterName: \"local\" # can just be checked against local\n```\n\n----------------------------------------\n\nTITLE: Generating Rancher Dashboard Setup URL with Bootstrap Password\nDESCRIPTION: Command to generate a complete setup URL for the Rancher dashboard that includes the bootstrap password from the kubernetes secret store. This URL provides direct access to the initial setup page.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/templates/NOTES.txt#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho https://{{ .Values.hostname }}/dashboard/?setup=$(kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{ \"{{\" }}.data.bootstrapPassword|base64decode{{ \"}}\" }}')\n```\n\n----------------------------------------\n\nTITLE: Checking Rancher Deployment Details\nDESCRIPTION: Retrieves detailed information about the Rancher deployment.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n cattle-system get deploy rancher\n```\n\n----------------------------------------\n\nTITLE: Retrieving Rancher Bootstrap Password\nDESCRIPTION: Command to retrieve just the bootstrap password from the kubernetes secret store. The password is stored as a base64 encoded secret in the cattle-system namespace.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/templates/NOTES.txt#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{ \"{{\" }}.data.bootstrapPassword|base64decode{{ \"}}\" }}{{ \"{{\" }} \"\\n\" {{ \"}}\" }}'\n```\n\n----------------------------------------\n\nTITLE: Cross-Building Rancher Container Image for Specific Architecture\nDESCRIPTION: This command demonstrates how to build a Rancher container image for a different architecture (amd64) than the host system. It uses environment variables to configure the build process.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/development.md#2025-04-10_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nREPO=\"localhost:5000/my-test-repo/image\" \\\n  TAG=\"tag\" \\\n  ARCH=\"amd64\" \\\n  make quick\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher HA Settings in YAML\nDESCRIPTION: YAML configuration for Rancher HA settings including chart versions, RKE versions, image tags, and helm repository settings. Contains essential parameters for HA deployment and upgrade process.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/pipeline/docs/release-upgrade/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nha:\n  host: \"\" # String, needs to be URL\n  chartVersion: \"\" # String without any prefix, no v in front of version\n  chartVersionToUpgrade: \"\" # String without any prefix, no v in front of version\n  rkeVersion: \"\" # String with prefix v \n  imageTag: \"\" # String with prefix v \n  imageTagToUpgrade: \"\" # String with prefix v \n  helmRepo: \"\" # String\n  certOption: \"\" # String\n  insecure: false # String\n  cleanup: false  # String, default is true\n```\n\n----------------------------------------\n\nTITLE: Adding Rancher Helm Repository\nDESCRIPTION: Adds the Rancher Helm chart repository containing charts for Rancher installation.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add rancher-latest https://releases.rancher.com/server-charts/latest\n```\n\n----------------------------------------\n\nTITLE: Defining Common Configuration Options for Rancher Helm Chart in Markdown\nDESCRIPTION: This markdown table defines common configuration parameters for the Rancher Helm chart. It includes options for setting the hostname, configuring ingress TLS, specifying Let's Encrypt email and environment, and enabling private CA support.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| Parameter                 | Default Value | Description                                                                                  |\n| ------------------------- | ------------- | -------------------------------------------------------------------------------------------- |\n| `hostname`                | \" \"           | ***string*** - the Fully Qualified Domain Name for your Rancher Server                       |\n| `ingress.tls.source`      | \"rancher\"     | ***string*** - Where to get the cert for the ingress. - \"***rancher, letsEncrypt, secret***\" |\n| `letsEncrypt.email`       | \" \"           | ***string*** - Your email address                                                            |\n| `letsEncrypt.environment` | \"production\"  | ***string*** - Valid options: \"***staging, production***\"                                    |\n| `privateCA`               | false         | ***bool*** - Set to true if your cert is signed by a private CA                              |\n```\n\n----------------------------------------\n\nTITLE: Verifying Rancher Deployment Status\nDESCRIPTION: Checks the rollout status of the Rancher deployment.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n cattle-system rollout status deploy/rancher\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Environment with Rancher Instance URL\nDESCRIPTION: Sets the CATTLE_TEST_URL environment variable to point to the local Rancher instance. This URL will be used by the tests to connect to Rancher.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/integration/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport CATTLE_TEST_URL=https://172.17.0.2:8443\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace\nDESCRIPTION: Creates the required cattle-system namespace for Rancher resources.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace cattle-system\n```\n\n----------------------------------------\n\nTITLE: Running RKE1 Node Pool Scaling Tests with Gotestsum\nDESCRIPTION: These commands run various node pool scaling tests for RKE1 clusters, including both static test cases and dynamic input tests. They target both standard node pools and custom cluster nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE1NodeScalingTestSuite/TestScalingRKE1NodePools\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE1NodeScalingTestSuite/TestScalingRKE1NodePoolsDynamicInput\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE1CustomClusterNodeScalingTestSuite/TestScalingRKE1CustomClusterNodes\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE1CustomClusterNodeScalingTestSuite/TestScalingRKE1CustomClusterNodesDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Generating Rancher Container Image with Make Quick\nDESCRIPTION: This command builds a local Rancher container image for testing changes. It uses docker buildx to create an image for the current OS and architecture, specifying a custom repository and tag.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/development.md#2025-04-10_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nREPO=\"localhost:5000/my-test-repo/image\" TAG=\"tag\" make quick\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Rancher Project\nDESCRIPTION: This code snippet lists the required Python packages and their versions for the Rancher project. It includes libraries for cloud services, cryptography, testing frameworks, infrastructure management, and API interactions. The file is likely used as a requirements.txt for pip installation.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/requirements_v3api.txt#2025-04-10_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\ngit+https://github.com/rancher/client-python.git@master#egg=client-python\nboto3==1.21.46\ncryptography==42.0.4\nflake8==3.5.0\ninvoke==1.2.0\nJinja2==3.1.3\nkubernetes==12.0.1\nnetaddr==0.8.0\nparamiko==3.4.0\nPyJWT==2.4.0\npytest==6.2.5\npytest-repeat==0.8.0\npytest-xdist==2.0.0\npytest-html==3.2.0\npytest-ordering>=0.6\npython-digitalocean==1.13.2\npython-terraform==0.10.1\nPyYAML==6.0.1\nrequests==2.31.0\nrsa==4.7.2\nwebsocket-client==0.57.0\nsemver==2.13.0\npackaging==23.1\npluggy==1.2.0\n```\n\n----------------------------------------\n\nTITLE: Running EKS Cluster Provisioning Tests in Rancher\nDESCRIPTION: Shell command for executing the EKS cluster provisioning validation tests with the gotestsum test runner. Includes necessary tags and timeout configurations for proper test execution.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/hosted --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestHostedEKSClusterProvisioningTestSuite/TestProvisioningHostedEKS\"\n```\n\n----------------------------------------\n\nTITLE: Running RKE2 Node Driver Tests with Go\nDESCRIPTION: Commands for running RKE2 provisioning tests using Go test tags. Includes examples for standard and dynamic input tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE2ProvisioningTestSuite/TestProvisioningRKE2Cluster\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE2ProvisioningTestSuite/TestProvisioningRKE2ClusterDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Server Settings for RBAC Tests\nDESCRIPTION: JSON configuration for connecting to the Rancher server when running RBAC tests. Defines the server address, authentication token, target cluster name, and optional settings for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"rancher\": { \n  \"host\": \"rancher_server_address\",\n  \"adminToken\": \"rancher_admin_token\",\n  \"clusterName\": \"cluster_to_run_tests_on\",\n  \"insecure\": true/optional,\n  \"cleanup\": false/optional,\n}\n```\n\n----------------------------------------\n\nTITLE: Running GKE Cluster Provisioning Tests in Rancher\nDESCRIPTION: Shell command for executing the GKE cluster provisioning validation tests with the gotestsum test runner. Includes necessary tags and timeout configurations for proper test execution.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/hosted --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestHostedGKEClusterProvisioningTestSuite/TestProvisioningHostedGKE\"\n```\n\n----------------------------------------\n\nTITLE: Creating Python Virtual Environment for Rancher Tests\nDESCRIPTION: Sets up a Python 3.11 virtual environment in the top-level of the Rancher repository clone to isolate test dependencies from system packages.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/integration/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3.11 -m venv .venv && source .venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Defining Cluster Configurations in YAML\nDESCRIPTION: Comprehensive YAML configuration for different cluster types including RKE1, RKE2, K3s, and hosted clusters. Specifies provider settings, kubernetes versions, CNI options, and enabled features for each cluster type.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/pipeline/docs/release-upgrade/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nclusters:\n  rke1:\n    nodeProvider:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n    custom:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n  rke2:\n    nodeProvider:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n      - provider: \"aws\"\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"ubuntu\"\n        cni: [\"calico\"]\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n    custom:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n  k3s:\n    nodeProvider:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n    custom:\n      - provider: \"\" # Name of the provider\n        kubernetesVersion: \"vMYVERSION\" # String with prefix v, as UI shows\n        kubernetesVersionToUpgrade: \"vMYVERSION\" # String with prefix v, as UI shows\n        image: \"\" # String\n        sshUser: \"\" # String\n        cni: [\"calico\"] # Slice of strings, options can be found in provisioning configuration\n        enabledFeatures:\n          chart: false # Boolean, pre/post upgrade checks, default is false\n          ingress: false # Boolean, pre/post upgrade checks, default is false\n  hosted:\n    - provider: \"\" # Name of the provider\n      kubernetesVersion: \"MYVERSION\" # String without prefix v, as UI shows\n      kubernetesVersionToUpgrade: \"MYVERSION\" # String without prefix v, as UI shows\n      enabledFeatures:\n         chart: false # Boolean, pre/post upgrade checks, default is false\n         ingress: false # Boolean, pre/post upgrade checks, default is false\n    - provider: \"\" # Name of the provider\n      kubernetesVersion: \"MYVERSION\" # String without prefix v, as UI shows\n      kubernetesVersionToUpgrade: \"MYVERSION\" # String without prefix v, as UI shows\n      enabledFeatures:\n         chart: false # Boolean, pre/post upgrade checks, default is false\n         ingress: false # Boolean, pre/post upgrade checks, default is false\n    - provider: \"\" # Name of the provider\n      kubernetesVersion: \"MYVERSION\" # String without prefix v, as UI shows\n      kubernetesVersionToUpgrade: \"MYVERSION\" # String without prefix v, as UI shows\n      enabledFeatures:\n         chart: false # Boolean, pre/post upgrade checks, default is false\n         ingress: false # Boolean, pre/post upgrade checks, default is false\n```\n\n----------------------------------------\n\nTITLE: Running AKS Node Pool Scaling Tests with Gotestsum\nDESCRIPTION: These commands run node pool scaling tests specifically for Azure Kubernetes Service (AKS) clusters, including both static test cases and dynamic input tests. Note that enableAutoScaling must be set to true when specifying maxCount and minCount.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestAKSNodeScalingTestSuite/TestScalingAKSNodePools\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestAKSNodeScalingTestSuite/TestScalingAKSNodePoolsDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC Dynamic Input Testing\nDESCRIPTION: JSON configuration for RBAC dynamic input tests, specifying the role type, username, and password. The role parameter accepts only specific values like cluster-owner, cluster-member, project-owner, or project-member.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/README.md#2025-04-10_snippet_1\n\nLANGUAGE: json\nCODE:\n```\nrbacInput:\n  role: \"cluster-owner\"\n  username: \"<userID>\"\n  password: \"<password>\"\n```\n\n----------------------------------------\n\nTITLE: Running Containerized RKE Tests\nDESCRIPTION: Command to execute RKE tests in a Docker container. It mounts the local rancher-validation directory and runs the tests using pytest with verbose output.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/tests/rke/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --rm -v ~/path/to/rancher-validation:/src/rancher-validation rancher-validation-tests -c pytest -s rke_tests/\n```\n\n----------------------------------------\n\nTITLE: Contributing Guidelines Markdown Header\nDESCRIPTION: Markdown header and link directing contributors to the official Rancher documentation for contribution guidelines.\nSOURCE: https://github.com/rancher/rancher/blob/main/CONTRIBUTING.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributing to Rancher\n\nThanks for the interest to contribute to Rancher. Please see [Contributing to Rancher](https://ranchermanager.docs.rancher.com/contribute-to-rancher) to get started.\n```\n\n----------------------------------------\n\nTITLE: RKE1 Test Execution Commands\nDESCRIPTION: Commands for running custom cluster tests with Go test tags and formatting options.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke1 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCustomClusterRKE1ProvisioningTestSuite/TestProvisioningRKE1CustomCluster\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Snapshot Tests in YAML\nDESCRIPTION: YAML configuration for Rancher snapshot tests, including server details, cluster information, and snapshot-specific parameters. This configuration sets up the environment for running various snapshot and restore tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: false/optional\nsnapshotInput:\n  upgradeKubernetesVersion: \"\"        # If left blank, the default version in Rancher will be used.\n  snapshotRestore: \"all\"              # Options include none, kubernetesVersion, all. Option 'none' means that only the etcd will be restored.\n  controlPlaneConcurrencyValue: \"15%\"\n  workerConcurrencyValue: \"20%\"\n  controlPlaneUnavailableValue: \"1\"\n  workerUnavailableValue: \"10%\"\n  recurringRestores: 1                # By default, this is set to 1 if this field is not included in the config.\n  replaceRoles:                       # If selected, S3 must be properly configured on the cluster. This test is specific to S3 etcd snapshots.\n    etcd: false\n    controlplane: false\n    worker: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Settings in YAML\nDESCRIPTION: Configuration settings for Rancher server connection and test cluster specification. Required fields include host address, admin token, cluster name, with optional insecure and cleanup flags.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/fleet/snapshot/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: false/optional\n```\n\n----------------------------------------\n\nTITLE: Running Snapshot Restore Test in Go\nDESCRIPTION: Command to run the snapshot restore test using gotestsum. This test focuses on restoring only the etcd component of the cluster.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreETCDOnlyTestSuite/TestSnapshotRestoreETCDOnly\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Environment for ClusterRoleTemplateBinding Tests in YAML\nDESCRIPTION: YAML configuration for setting up the test environment. It specifies the Rancher server address, admin token, security settings, cleanup behavior, and target cluster name.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/crtb/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True\n  cleanup: True\n  clusterName: \"downstream_cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Running Helm Unit Tests for Rancher Charts in Bash\nDESCRIPTION: This snippet shows how to run test runs against the Rancher chart only using helm-unittest. It requires the helm-unittest plugin to be installed first, and then executes a bash script for running the tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/tests/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# install the helm plugin first - helm plugin install https://github.com/helm-unittest/helm-unittest.git\nbash dev-scripts/helm-unittest.sh\n```\n\n----------------------------------------\n\nTITLE: Running Snapshot Restore with K8s Upgrade Test in Go\nDESCRIPTION: Command to run the snapshot restore test with Kubernetes upgrade using gotestsum. This test combines snapshot restoration with a Kubernetes version upgrade.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreK8sUpgradeTestSuite/TestSnapshotRestoreK8sUpgrade\"\n```\n\n----------------------------------------\n\nTITLE: Configuring JSON for Rancher RBAC PSA Tests\nDESCRIPTION: JSON configuration for setting up Rancher RBAC PSA tests. It includes the Rancher server address, admin token, target cluster name, and optional settings for insecure connections and cleanup.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/psa/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rancher\": { \n    \"host\": \"rancher_server_address\",\n    \"adminToken\": \"rancher_admin_token\",\n    \"clusterName\": \"cluster_to_run_tests_on\",\n    \"insecure\": true,\n    \"cleanup\": false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment for LastLogin Testing\nDESCRIPTION: JSON configuration required for running LastLogin tests. The configuration includes the Rancher server address, admin token, security settings, cleanup preferences, and the admin password for authentication.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/auth/lastlogin/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"rancher\": { \n  \"host\": \"rancher_server_address\",\n  \"adminToken\": \"rancher_admin_token\",\n  \"insecure\": true/optional,\n  \"cleanup\": false/optional,\n  \"adminPassword\": \"<adminPassword>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Additional Snapshot Tests in Go\nDESCRIPTION: Command to run additional snapshot tests using gotestsum. This test suite includes various supplementary tests related to snapshot functionality.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotAdditionalTestsTestSuite$\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment in YAML\nDESCRIPTION: This YAML configuration sets up the Rancher test environment for certificate rotation tests. It specifies the Rancher server address, admin token, target cluster name, and optional settings for insecure connections and cleanup.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/certrotation/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: false/optional\n```\n\n----------------------------------------\n\nTITLE: Exporting Build Variables in Bash\nDESCRIPTION: Example of how to update the export-config script to export a newly added build variable as an environment variable. This script uses yq to read values from the build.yaml file.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/build.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nCATTLE_RANCHER_WEBHOOK_VERSION=$(yq -e '.webhookVersion' \"$file\")\nexport CATTLE_RANCHER_WEBHOOK_VERSION\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML for Rancher ServiceAccount Tests on RKE1 Cluster\nDESCRIPTION: This YAML configuration specifies the necessary parameters for running serviceaccount tests on an RKE1 cluster in Rancher. It includes the Rancher server address, admin token, target cluster name, and optional settings for insecure connections and cleanup.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/serviceaccounts/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: true/optional\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Provider Migration Test in Bash\nDESCRIPTION: Bash command for running the AWS cloud provider migration test using gotestsum.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/upgrade --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCloudProviderMigrationTestSuite/TestAWS\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TestRbacOpaqueSecretTestSuite in YAML\nDESCRIPTION: YAML configuration for running the TestRbacOpaqueSecretTestSuite. It specifies the Rancher server details, admin token, and target cluster name.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/secrets/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML for Rancher RBAC Tests\nDESCRIPTION: This YAML configuration is required for running cluster_role_test.go and project_role_test.go suites. It specifies the Rancher server address, admin token, and other optional settings for the test environment.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/clusterandprojectroles/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"downstream_cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: AWS Cloud Credentials Configuration\nDESCRIPTION: Configuration for AWS cloud credentials used in K3S provisioning tests. Requires AWS secret key, access key, and default region for authentication with AWS services.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nawsCredentials:                       \n  secretKey: \"\"                       #required\n  accessKey: \"\"                       #required\n  defaultRegion: \"\"                   #required\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Rancher Settings for Fleet Tests in YAML\nDESCRIPTION: Basic configuration required for Fleet integration tests. Specifies the Rancher server details including host address, admin token, and target cluster name. Optional parameters include insecure mode and cleanup settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/fleet/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  cleanup: false\n  insecure: true/optional\n  cleanup: false/optional\n  clusterName: \"your-cluster-name\"\n```\n\n----------------------------------------\n\nTITLE: Decoding General Debug Data in Bash\nDESCRIPTION: This command decodes base64-encoded, gzipped JSON debug data into a readable format. It pipes the encoded blob through base64 decoding, gunzip decompression, and finally formats it with jq for improved readability.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2prov/DEBUG.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\necho 'blob' | base64 --decode | gzip -d | jq -r\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Credentials Configuration\nDESCRIPTION: Configuration for Google Cloud credentials used in K3S provisioning tests. Requires a JSON authentication key encoded as a string for authentication with Google Cloud services.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ngoogleCredentials:                    \n  authEncodedJson: \"\"                 #required\n```\n\n----------------------------------------\n\nTITLE: Configuring Node Pool Scaling Tests in YAML\nDESCRIPTION: This YAML configuration defines the scaling input parameters for different node pool types across various Kubernetes platforms. It includes configuration for standard node pools, machine pools, and specific settings for AKS, EKS, and GKE node pools.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:        # Optional block, only use if using vsphere\n  providers: [\"\"]         # Specify to vsphere if you have a Windows node in your cluster\nscalingInput:\n  nodeProvider: \"ec2\"\n  nodePools:\n    nodeRoles:\n      worker: true\n      quantity: 2\n  machinePools:\n    nodeRoles:\n      etcd: true\n      quantity: 1\n  aksNodePool:\n    nodeCount: 3\n  eksNodePool:\n    desiredSize: 6\n  gkeNodePool:\n    initialNodeCount: 3\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Credentials for AKS in Rancher\nDESCRIPTION: YAML configuration for Azure credentials required for AKS cluster provisioning tests. Includes client ID, client secret, subscription ID, and cloud environment settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nazureCredentials:\n  clientId: \"\",\n  clientSecret: \"\",\n  subscriptionId: \"\",\n  environment: \"AzurePublicCloud\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral Standalone Tests in YAML\nDESCRIPTION: This YAML configuration snippet demonstrates how to set up Corral packages and configs for standalone testing. It includes settings for package images, debug options, cleanup, custom repositories, and various configuration variables.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/standalone/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncorralPackages:\n  corralPackageImages:\n    <nameOfPackage1>: <public corral image to deploy \"ghcr.io/rancherlabs/corral/$pkg:latest>\n    ...\n  hasDebug: <bool, default=false>\n  hasCleanup: <bool, default=true>\n  hasCustomRepo: <string, suggeseted=https://github.com/rancherlabs/corral-packages.git>\n\ncorralConfigs:\n  corralConfigUser: <string, default=\"jenkauto\">\n  corralConfigVars:\n    <var1>: <string, \"val1\">\n    ...\n  corralSSHPath: <string, optional, mostly for local testing>\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral Standalone Parameters in YAML\nDESCRIPTION: Configuration template for setting up Corral standalone deployments. Includes settings for Rancher HA, kubernetes versions, registry configuration, package management, and SSH access. Supports airgap installations with customizable cluster parameters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/airgap/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncorralRancherHA:\n  name: rancherha\nprovisioningInput:\n  cni:\n  - calico\n  k3sKubernetesVersion:\n  - v1.23\n  - v1.24\n  - v1.25\n  rke1KubernetesVersion:\n  - v1.23\n  - v1.24\n  - v1.25\n  rke2KubernetesVersion:\n  - v1.25\n  - v1.24\n  - v1.23\nregistries:\n  existingNoAuthRegistry: <value>\ncorralPackages:\n  corralPackageImages:\n    airgapCustomCluster: dist/aws-rancher-custom-cluster-true\n    rancherHA: dist/aws-aws-registry-standalone-rke2-rancher-airgap-calico-true-2.15.1-1.8.0\n    ...\n  hasDebug: <bool, default=false>\n  hasCleanup: <bool, default=true>\n  hasSetCorralSSHKeys: <bool, default=false>\ncorralConfigs:\n  corralConfigUser: <string, default=\"jenkauto\">\n  corralConfigVars:\n    <var1>: <string, \"val1\">\n    bastion_ip: <val>\n    corral_private_key: <val>\n    corral_public_key: <val>\n    registry_cert: <val>\n    registry_key: <val>\n    ...\n  corralSSHPath: <string, optional, mostly for local testing>\n```\n\n----------------------------------------\n\nTITLE: Google Credentials Configuration\nDESCRIPTION: Configuration for Google cloud credentials requiring encoded JSON authentication.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ngoogleCredentials:                    \n  authEncodedJson: \"\"                 #required\n```\n\n----------------------------------------\n\nTITLE: Filtering Secrets with Labels - HTTP\nDESCRIPTION: API endpoints showing how to filter secrets using label selectors and complex filter combinations. Demonstrates filtering by label values and multiple conditions.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/steveapi/README.md#2025-04-10_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET https://rancherurl/v1/secrets?filter=metadata.labels.test-label-gte=3,metadata.labels.test-label=2&filter=metadata.namespace=1\n```\n\n----------------------------------------\n\nTITLE: AWS Node Configuration\nDESCRIPTION: Detailed configuration for AWS EC2 node templates including instance type, security groups, and networking settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n  awsNodeConfig:\n    ami: \"\"\n    blockDurationMinutes: \"0\"\n    encryptEbsVolume: false\n    endpoint: \"\"\n    httpEndpoint: \"enabled\"\n    httpTokens: \"optional\"\n    iamInstanceProfile: \"\"\n    insecureTransport: false\n    instanceType: \"t2.2xlarge\"\n    keypairName: \"your-key-name\"\n    kmsKey: \"\"\n    monitoring: false\n    privateAddressOnly: false\n    region: \"us-east-2\"\n    requestSpotInstance: true\n    retries: \"5\"\n    rootSize: \"16\"\n    securityGroup: [\"open-all\"]\n    securityGroupReadonly: false\n    sessionToken: \"\"\n    spotPrice: \"0.50\"\n    sshKeyContents: \"\"\n    sshUser: \"ec2-user\"\n    subnetId: \"\"\n    tags: \"\"\n    type: \"amazonec2Config\"\n    useEbsOptimizedInstance: false\n    usePrivateAddress: false\n    userdata: \"\"\n    volumeType: \"gp2\"\n    vpcId: \"\"\n    zone: \"a\"\n```\n\n----------------------------------------\n\nTITLE: Paginating Secrets Results - HTTP\nDESCRIPTION: API endpoints demonstrating pagination of secrets using limit, continue token, and page size parameters. Shows how to handle paginated results for large datasets.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/steveapi/README.md#2025-04-10_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nGET https://rancherurl/v1/secrets?limit=3\nGET https://rancherurl/v1/secrets?limit=3&continue=nondeterministictoken\nGET https://rancherurl/v1/secrets?pagesize=3\n```\n\n----------------------------------------\n\nTITLE: Querying Secrets with Field Selectors - HTTP\nDESCRIPTION: API endpoints for querying secrets using field selectors to filter by namespace and name. Shows different combinations of field selector parameters for users with different permissions.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/steveapi/README.md#2025-04-10_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET https://rancherurl/v1/secrets?fieldSelector=metadata.namespace=test-ns-2\nGET https://rancherurl/v1/secrets?fieldSelector=metadata.name=test1\n```\n\n----------------------------------------\n\nTITLE: Harvester K3S Machine Configuration\nDESCRIPTION: Machine configuration for Harvester K3S clusters, specifying VM details like CPU count, memory size, disk size, and network settings. Defines the characteristics of Harvester VMs used as K3S nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nharvesterMachineConfig\":\n  diskSize: \"40\"\n  cpuCount: \"2\"\n  memorySize: \"8\"\n  networkName: \"default/ctw-network-1\"\n  imageName: \"default/image-rpj98\"\n  vmNamespace: \"default\"\n  sshUser: \"ubuntu\"\n  diskBus: \"virtio\n```\n\n----------------------------------------\n\nTITLE: RKE1 Provisioning Input Configuration\nDESCRIPTION: Defines core test configuration including node pools, kubernetes version, CNI, providers, and etcd settings for RKE1 provisioning tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  nodePools:\n  - nodeRoles:\n      etcd: true\n      controlplane: true\n      worker: true\n      quantity: 1\n  - nodeRoles:\n      worker: true\n      drainBeforeDelete: true\n      quantity: 2\n  rke1KubernetesVersion: [\"v1.28.10-rancher1-1\"]\n  cni: [\"calico\"]\n  providers: [\"linode\", \"aws\", \"do\", \"harvester\", \"vsphere\", \"azure\"]\n  cloudProvider: \"\"\n  nodeProviders: [\"ec2\"]\n  psact: \"\"\n  criDockerd: false\n  etcdRKE1:\n    backupConfig:\n      enabled: true\n      intervalHours: 12\n      safeTimestamp: true\n      timeout: 120\n      s3BackupConfig:\n        accessKey: \"\"\n        bucketName: \"\"\n        endpoint: \"\"\n        folder: \"\"\n        region: \"\"\n        secretKey: \"\"\n    retention: \"72h\"\n    snapshot: false\nchartUpgrade:\n  isUpgradable: false\n```\n\n----------------------------------------\n\nTITLE: Defining RKE2 Provisioning Input in YAML\nDESCRIPTION: Specifies the provisioning input for RKE2 tests, including machine pools, Kubernetes version, CNI, providers, and various cluster configurations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  machinePools:\n  - machinePoolConfig:                        #required(dynamic only) (at least 1)\n      etcd: true                              #required(dynamic only) (at least 1 controlplane & etcd & worker)\n      controlplane: true\n      worker: true\n      quantity: 5\n      drainBeforeDelete: true\n      hostnameLengthLimit: 29\n      nodeStartupTimeout: \"600s\"\n      unhealthyNodeTimeout: \"300s\"\n      maxUnhealthy: \"2\"\n      unhealthyRange: \"2-4\"\n  - machinePoolConfig:\n      worker: true\n      quantity: 2\n  - machinePoolConfig:\n      windows: true\n      quantity: 1\n  rke2KubernetesVersion: [\"v1.27.10+rke2r1\"]\n  cni: [\"calico\"]\n  providers: [\"linode\", \"aws\", \"do\", \"harvester\", \"vsphere\", \"azure\"]\n  cloudProvider: \"\" # either: aws|rancher-vsphere\n  nodeProviders: [\"ec2\"]\n  hardened: false\n  psact: \"\"                                   #either rancher-privileged|rancher-restricted|rancher-baseline\n  clusterSSHTests: [\"CheckCPU\", \"NodeReboot\", \"AuditLog\"]\n  etcd:\n    disableSnapshot: false\n    snapshotScheduleCron: \"0 */5 * * *\"\n    snapshotRetain: 3\n    s3:\n      bucket: \"\"\n      endpoint: \"s3.us-east-2.amazonaws.com\"\n      endpointCA: \"\"\n      folder: \"\"\n      region: \"us-east-2\"\n      skipSSLVerify: true\n```\n\n----------------------------------------\n\nTITLE: Configuring RKE2 Cluster Template Test in YAML\nDESCRIPTION: YAML configuration for setting up an RKE2 cluster template test. Includes repository metadata and template provider information.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntemplateTest:\n  repo:\n    metadata:\n      name: \"demo\"\n    spec:\n      gitRepo: \"https://github.com/<forked repo>/cluster-template-examples.git\"\n      gitBranch: main\n      insecureSkipTLSVerify: true\n  templateProvider: \"aws\"\n  templateName: \"cluster-template\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher and StackState for Integration Testing in YAML\nDESCRIPTION: This YAML configuration sets up the necessary parameters for running StackState integration tests in Rancher. It includes Rancher server details, cluster information, and StackState-specific configurations such as URL, service token, and API key.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/observability/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"downstream_cluster_name\"\n\nstackstateConfigs: \n  url: \"stackstate_ui_server_address\"\n  serviceToken: \"stackstate_user_service_token\"\n  clusterApiKey: \"stackstate_cluster_apikey\"\n  upgradeVersion: \"Stackstate_agent_version\" #optional\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral Package for Rancher Registry in YAML\nDESCRIPTION: Example YAML configuration for a Jenkins job RANCHER_CORRAL_CONFIG, specifying the Corral package values needed to build Rancher with a private registry. The configuration includes templates, CNI options, Kubernetes versions, registry authentication settings, and version dependencies.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmanifest:\n  name: rancher-registry\n  description: rancher-registry\n  variables:\n    registry_auth:\n      default: enabled\ntemplates:\n  - aws/cluster_nodes\n  - aws/registry_nodes\n  - registry-standalone\n  - rke2\n  - rancher\nvariables:\n  cni:\n    - calico\n  kubernetes_version:\n    - v1.23.10+rke2r1\n    - v1.24.4+rke2r1\n  registry_auth:\n    - global\n  docker_compose_version:\n    - 2.15.1\n  rancher_version:\n    - 2.7.0\n  cert_manager_version:\n    - 1.11.0\n```\n\n----------------------------------------\n\nTITLE: Running RKE1 Node Replacement Tests with Gotestsum\nDESCRIPTION: This command runs node replacement tests specifically for RKE1 clusters using gotestsum to format and collect test results. It includes timeout configuration, validation tags, and test filtering parameters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestRKE1NodeReplacingTestSuite/TestReplacingRKE1Nodes\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RKE Template Default Variables\nDESCRIPTION: Default environment variables for RKE template configuration including Kubernetes image and network plugin settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/readme.md#2025-04-10_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nDEFAULT_K8S_IMAGE defaults to 'rancher/k8s:v1.8.7-rancher1-1', defaults the templates service images\nDEFAULT_NETWORK_PLUGIN defaults to 'canal', defaults the templates to use the select network plugin\n```\n\n----------------------------------------\n\nTITLE: Running RKE2/K3S Node Replacement Tests with Gotestsum\nDESCRIPTION: This command runs node replacement tests for RKE2 or K3S clusters using gotestsum to format and collect test results. It includes timeout configuration, validation tags, and test filtering parameters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestNodeReplacingTestSuite/TestReplacingNodes\"\n```\n\n----------------------------------------\n\nTITLE: Running RKE2/K3S Auto Replace Node Tests with Gotestsum\nDESCRIPTION: This command runs auto-replace node tests for RKE2 or K3S clusters, testing the UnhealthyNodeTimeout functionality. These tests require at least 2 nodes in the specified role's pool to function properly.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestEtcdAutoReplaceRKE2K3S/TestEtcdAutoReplaceRKE2K3S\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Oracle Container Engine (OKE) Test Variables\nDESCRIPTION: Environment variables needed for Oracle Container Engine cluster testing including tenancy and authentication details.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/readme.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nCATTLE_TEST_URL no default. The Rancher server for test execution.\nUSER_TOKEN user token used for /meta/oci/ calls\nRANCHER_OCI_TENANCY_OCID required OCID of the tenancy in which to create the cluster and resources\nRANCHER_OCI_COMPARTMENT_OCID required OCID of the compartment in which to create the cluster and resources\nRANCHER_OCI_USER_OCID required OCID of a user who has access to the specified tenancy/compartment\nRANCHER_OCI_FINGERPRINT URL required fingerprint corresponding to the specified user's private API Key\nRANCHER_OCI_PRIVATE_KEY_PATH required private API key path for the specified OCI user, in PEM format\nRANCHER_OCI_PRIVATE_KEY_PASSPHRASE required if user private key is protected with a passphrase\nRANCHER_OCI_REGION defaults to us-phoenix-1\nRANCHER_OKE_VERSION defaults to latest version\nRANCHER_OKE_NODE_SHAPE defaults to random OKE node shape\nRANCHER_OKE_NODE_IMAGE defaults to latest Oracle Linux node image\n```\n\n----------------------------------------\n\nTITLE: Querying Secrets with Namespace Exclusion Filter\nDESCRIPTION: API request to get secrets while excluding specific projects and namespaces using the '!=' operator.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/steveapi/README.md#2025-04-10_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nhttps://rancherurl/v1/secrets?projectsornamespaces!=test-prj-1,test-ns-6,test-ns-8\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Credentials for EKS in Rancher\nDESCRIPTION: YAML configuration for AWS credentials required for EKS cluster provisioning tests. Includes secret key, access key, and default region settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nawsCredentials:\n  secretKey: \"\",\n  accessKey: \"\",\n  defaultRegion: \"\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Namespace Secrets by Project\nDESCRIPTION: API requests to access secrets in a specific namespace filtered by different project contexts.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/steveapi/README.md#2025-04-10_snippet_9\n\nLANGUAGE: http\nCODE:\n```\nhttps://rancherurl/v1/secrets/test-ns-6?projectsornamespaces=test-prj-2\nhttps://rancherurl/v1/secrets/test-ns-6?projectsornamespaces=test-prj-1\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies for Rancher Project\nDESCRIPTION: A requirements.txt file listing all required Python packages with specific version constraints for the Rancher project. Includes dependencies for API clients, testing, web functionality, and security operations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/integration/requirements.txt#2025-04-10_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ngit+https://github.com/rancher/client-python.git@1ecfc3e6a300f5f336da4e4416c46c50d544fd77\nwebsocket-client==0.56.0\nPyJWT==2.4.0\n\nflask==2.2.5\npytest==6.2.5\npytest-repeat==0.8.0\npytest-xdist==2.0.0\npytest-timeout==2.1.0\npyyaml==6.0.1\nnetaddr==0.8.0\nrequests==2.31.0\nkubernetes==12.0.1\njinja2>=2.10\ncryptography==42.0.4\nwerkzeug==3.0.3\n```\n\n----------------------------------------\n\nTITLE: Executing Rancher Cluster Deletion Tests for RKE1, RKE2, and K3S\nDESCRIPTION: Command for running deletion tests against RKE1, RKE2, or K3S clusters. Uses gotestsum to execute the TestDeletingCluster test with appropriate validation tags and formatting options.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/deleting/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/deleting --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestClusterDeleteTestSuite/TestDeletingCluster\"\n```\n\n----------------------------------------\n\nTITLE: Running Kubernetes Upgrade Tests in Bash\nDESCRIPTION: Bash commands for running Kubernetes upgrade tests using gotestsum. It includes commands for both standard and Windows Kubernetes upgrades.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/upgrade --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestKubernetesUpgradeTestSuite/TestUpgradeKubernetes\"\n\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/upgrade --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestWindowsKubernetesUpgradeTestSuite/TestUpgradeWindowsKubernetes\"\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Provider Version Upgrade Test in Bash\nDESCRIPTION: Bash command for running the cloud provider version upgrade test suite using gotestsum.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/upgrade --junitfile results.xml -- -timeout=60m -tags=validation -v -run ^TestCloudProviderVersionUpgradeSuite$\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Credentials for GKE in Rancher\nDESCRIPTION: YAML configuration for Google Cloud credentials required for GKE cluster provisioning tests. Contains the service account JSON with authentication details encoded as a string.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ngoogleCredentials:\n  authEncodedJson: |-\n    {\n      \"type\": \"\",\n      \"project_id\": \"\",\n      \"private_key_id\": \"\",\n      \"private_key\": \"\",\n      \"client_email\": \"\",\n      \"client_id\": \"\",\n      \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n      \"token_uri\": \"https://oauth2.googleapis.com/token\",\n      \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n      \"client_x509_cert_url\": \"\"\n    }\n```\n\n----------------------------------------\n\nTITLE: Running Snapshot Restore Tests with Fleet\nDESCRIPTION: Commands for executing snapshot restore tests using gotestsum with specific test suites and validation tags. Includes timeout settings and verbose output configuration.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/fleet/snapshot/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreWithFleetTestSuite/TestFleetThenSnapshotRestore\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreWithFleetTestSuite/TestSnapshotThenFleetRestore\"\n```\n\n----------------------------------------\n\nTITLE: Running Snapshot Restore with Upgrade Strategy Test in Go\nDESCRIPTION: Command to run the snapshot restore test with upgrade strategy using gotestsum. This test focuses on restoring snapshots while applying an upgrade strategy.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreUpgradeStrategyTestSuite/TestSnapshotRestoreUpgradeStrategy\"\n```\n\n----------------------------------------\n\nTITLE: Running S3 Snapshot Restore Test in Go\nDESCRIPTION: Command to run the S3 snapshot restore test using gotestsum. This test is specifically designed for clusters with S3 backups enabled and focuses on restoring from S3 snapshots.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestS3SnapshotTestSuite/TestS3SnapshotRestore\"\n```\n\n----------------------------------------\n\nTITLE: Defining Cluster Node Pools in YAML\nDESCRIPTION: This YAML snippet defines a typical cluster configuration for testing, consisting of three node pools: one for ControlPlane, one for Etcd, and one for Worker nodes. Each pool specifies its role and quantity.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/certrotation/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n{\n  {\n    ControlPlane: true,\n    Quantity:     1,\n  },\n  {\n    Etcd:     true,\n    Quantity: 1,\n  },\n  {\n    Worker:   true,\n    Quantity: 1,\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher JSON Settings for Chart Tests\nDESCRIPTION: JSON configuration required to run chart tests in Rancher. This specifies the Rancher server host, admin token, security settings, cleanup options, and the target cluster for testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/charts/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"rancher\": { \n  \"host\": \"<rancher-server-host>\",\n  \"adminToken\": \"<rancher-admin-token>\",\n  \"insecure\": true/optional,\n  \"cleanup\": false/optional,\n  \"clusterName\": \"<cluster-to-run-test>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Build Variable in YAML\nDESCRIPTION: Example of adding a new build variable to the build.yaml file. This snippet shows how to define a version for a subcomponent (webhook) used in the Rancher project.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/build.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nwebhookVersion: 2.0.6+up0.3.6-rc1\n```\n\n----------------------------------------\n\nTITLE: Using Build Variables in Dockerfile\nDESCRIPTION: Example of how to use build variables in a Dockerfile. This snippet shows how to capture an environment variable as an ARG and ENV, which can then be passed during the docker build process.\nSOURCE: https://github.com/rancher/rancher/blob/main/docs/build.md#2025-04-10_snippet_2\n\nLANGUAGE: dockerfile\nCODE:\n```\nARG CATTLE_FLEET_VERSION\nENV CATTLE_FLEET_VERSION=$CATTLE_FLEET_VERSION\n```\n\n----------------------------------------\n\nTITLE: Running Rancher CLI Tests with Go Test\nDESCRIPTION: Command for executing Rancher CLI validation tests using gotestsum, specifying test packages, timeout, and validation tags.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/cli/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/cli --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCLITestSuite$\"\n```\n\n----------------------------------------\n\nTITLE: Executing Certificate Rotation Tests with Go Test\nDESCRIPTION: This bash command demonstrates how to run the certificate rotation tests using gotestsum. It specifies the test package, output format, timeout, and test tags. The command targets the TestCertRotation suite.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/certrotation/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/certrotation --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCertRotation/TestCertRotation\"\n```\n\n----------------------------------------\n\nTITLE: Defining Corral Input for Import Provisioning Tests in YAML\nDESCRIPTION: This snippet demonstrates how to configure the corral input for import provisioning tests. It includes AWS-specific settings, node counts, and corral package configuration.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/import/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncorralConfigs:\n    corralConfigVars:\n        agent_count: 0\n        aws_access_key: \"your_key\"\n        aws_ami: \"your_ami\"\n        aws_hostname_prefix: autoimport\n        aws_region: us-west-1\n        aws_route53_zone: \"your_zone\"\n        aws_secret_key: \"your_secret_key\"\n        aws_security_group: \"your_security_group\"\n        aws_ssh_user: \"your_user\"\n        aws_subnet: \"your_subnet\"\n        aws_volume_size: 50\n        aws_volume_type: gp3\n        hostname: \"your_hostname(should match the prefix + route_53 zone)\"\n        aws_vpc: \"your_vpc\"\n        instance_type: t3a.medium\n        # kubernetes_version: not supported with suggested package\n        node_count: 3\n        server_count: 3\n\n    corralSSHPath: \"/root/go/src/github.com/rancher/rancher/tests/v2/validation/.ssh/<your_ssh_key>\"\ncorralPackages:\n    corralPackageImages:\n        # NOTE: k3sToImport is the **Required** package name. It can point to any path, as long as the package name is k3sToImport.\n        k3sToImport: /root/go/src/github.com/rancherlabs/corral-packages/dist/aws-k3s-v1.26.8-k3s1\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Flags for K3S Provisioning\nDESCRIPTION: Configuration for test flags that determine which static table tests are run. The 'Long' flag runs all tests, while the 'Short' flag runs a subset of tests with the short flag enabled.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nflags:\n  desiredflags: \"Long\"   #required (static tests only)\n```\n\n----------------------------------------\n\nTITLE: Azure Cloud Credentials Configuration\nDESCRIPTION: Configuration for Azure cloud credentials used in K3S provisioning tests. Requires client ID, client secret, subscription ID, and environment details for authenticating with Azure.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nazureCredentials:                     \n  clientId: \"\"                        #required\n  clientSecret: \"\"                    #required\n  subscriptionId\": \"\"                 #required\n  environment: \"AzurePublicCloud\"     #required\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster Template Provisioning for RKE1 in YAML\nDESCRIPTION: Sample YAML configuration for cluster template provisioning tests. It includes Rancher settings, provisioning input, and Amazon EC2 configuration details. This config is used for node driver provisioning tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/clustertemplates/provisioning/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:                                   \n  host: \"\"                                  #required\n  adminToken: \"\"                            #required\n  clusterName: \"\"                           \n\nprovisioningInput:\n  RKE1KubernetesVersions: [\"<Your preferred Version>\"]    #optional. if empty, latest version is considered.\n  cni: [\"calico\"]                                  #optional, if empty, calico is considered.\n  providers: [\"aws\"]                           #required (at least 1)                    \n\namazonec2Config:\n    accessKey: \"\"\n    secretKey: \"\"\n    ami: \"ami-0e6577a75723c81f8\"\n    blockDurationMinutes: \"0\"\n    encryptEbsVolume: false\n    endpoint: \"\"\n    httpEndpoint: \"enabled\"\n    httpTokens: \"optional\"\n    iamInstanceProfile: \"\"\n    insecureTransport: false\n    instanceType: \"t3.xlarge\"\n    keypairName: \"\"\n    kmsKey: \"\"\n    monitoring: false\n    privateAddressOnly: false\n    region: \"us-east-2\"\n    requestSpotInstance: false\n    retries: \"5\"\n    rootSize: \"100\"\n    securityGroup: []\n    securityGroupReadonly: false\n    sessionToken: \"\"\n    spotPrice: \"0.50\"\n    sshKeyContents: \"\"\n    sshUser: \"ubuntu\"\n    subnetId: \"\"\n    tags: \"\"\n    type: \"amazonec2Config\"\n    useEbsOptimizedInstance: false\n    usePrivateAddress: false\n    userdata: \"\"\n    volumeType: \"gp2\"\n    vpcId: \"vpc-bfccf4d7\"\n    zone: \"a\"                      \n```\n\n----------------------------------------\n\nTITLE: VMware vSphere Cloud Credentials Configuration\nDESCRIPTION: Configuration for VMware vSphere cloud credentials used in K3S provisioning tests. Requires vCenter credentials and connection details for authenticating with the vSphere environment.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nvmwarevsphereCredentials:             \n  password: \"\"                        #required\n  username: \"\"                        #required\n  vcenter: \"\"                         #required\n  vcenterPort: \"\"                     #required\n```\n\n----------------------------------------\n\nTITLE: Digital Ocean K3S Machine Configuration\nDESCRIPTION: Machine configuration for Digital Ocean K3S clusters, specifying droplet details like image, size, region, and SSH settings. Defines the characteristics of Digital Ocean droplets used as K3S nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndoMachineConfig:\n  image: \"ubuntu-20-04-x64\"\n  backups: false\n  ipv6: false\n  monitoring: false\n  privateNetworking: false\n  region: \"nyc3\"\n  size: \"s-2vcpu-4gb\"\n  sshKeyContents: \"\"\n  sshKeyFingerprint: \"\"\n  sshPort: \"22\"\n  sshUser: \"root\"\n  tags: \"\"\n  userdata: \"\"\n```\n\n----------------------------------------\n\nTITLE: Linode K3S Machine Configuration\nDESCRIPTION: Machine configuration for Linode K3S clusters, specifying instance details like image, instance type, region, and SSH settings. Defines the characteristics of Linode instances used as K3S nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nlinodeMachineConfig:\n  authorizedUsers: \"\"\n  createPrivateIp: true\n  dockerPort: \"2376\"\n  image: \"linode/ubuntu22.04\"\n  instanceType: \"g6-standard-8\"\n  region: \"us-west\"\n  rootPass: \"\"\n  sshPort: \"22\"\n  sshUser: \"\"\n  stackscript: \"\"\n  stackscriptData: \"\"\n  swapSize: \"512\"\n  tags: \"\"\n  uaPrefix: \"Rancher\"\n```\n\n----------------------------------------\n\nTITLE: VMware vSphere K3S Machine Configuration\nDESCRIPTION: Machine configuration for VMware vSphere K3S clusters, specifying detailed VM settings including datacenter paths, datastore URLs, folder locations, and resource allocations. Defines the characteristics of vSphere VMs used as K3S nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/k3s/README.md#2025-04-10_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nvmwarevsphereMachineConfigs:\n    datacenter: \"/<datacenter>\"                                 #required \n    hostSystem: \"/<datacenter>/path-to-host\"                    #required\n    datastoreURL: \"/datastore.URL\"                              #required \n    datastore: \"\"/<datacenter>/path-to-datastore\"               #required \n    folder: \"/<datacenter>/path-to-vm-folder\"                   #required \n    pool: \"/<datacenter>/path-to-resource-pool\"                 #required \n    vmwarevsphereMachineConfig:\n    - cfgparam: [\"disk.enableUUID=TRUE\"]                        #required\n      cloudConfig: \"#cloud-config\\n\\n\"\n      customAttribute: []\n      tag: []\n      roles: [\"etcd\",\"controlplane\",worker]\n      creationType: \"template\"                                  #required\n      os: \"linux\"                                               #required\n      cloneFrom: \"/<datacenter>/path-to-linux-image\"            #required(linux templates only)\n      cloneFromWindows: \"/<datacenter>/path-to-windows-image\"   #required(windows templates only)\n      contentLibrary: \"\"                                        \n      datastoreCluster: \"\"\n      network: [\"/<datacenter>/path-to-vm-network\"]             #required\n      sshUser: \"\"                                               #required\n      sshPassword: \"\"                                           \n      sshUserGroup: \"\"\n      sshPort: \"22\"\n      cpuCount: \"4\"\n      diskSize: \"40000\"\n      memorySize: \"8192\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GKE Cluster for Rancher Provisioning Tests\nDESCRIPTION: YAML configuration for GKE cluster setup, including Kubernetes version (1.26.8-gke.200), networking options, node pools, and other Google Cloud-specific settings. Creates a cluster with 3 n1-standard-2 nodes using COS_CONTAINERD image type.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ngkeClusterConfig:\n  clusterAddons:\n    horizontalPodAutoscaling: true\n    httpLoadBalancing: true\n    networkPolicyConfig: false\n  clusterIpv4Cidr: \"\"\n  enableKubernetesAlpha: false\n  horizontalPodAutoscaling: true\n  httpLoadBalancing: true\n  ipAllocationPolicy:\n    clusterIpv4Cidr: \"\"\n    clusterIpv4CidrBlock: null\n    clusterSecondaryRangeName: null\n    createSubnetwork: false\n    nodeIpv4CidrBlock: null\n    servicesIpv4CidrBlock: null\n    servicesSecondaryRangeName: null\n    subnetworkName: null\n    useIpAliases: true\n  kubernetesVersion: 1.26.8-gke.200\n  labels: {}\n  locations: []\n  loggingService: logging.googleapis.com/kubernetes\n  maintenanceWindow: \"\"\n  masterAuthorizedNetworks:\n    enabled: false\n  monitoringService: monitoring.googleapis.com/kubernetes\n  network: default\n  networkPolicyConfig: false\n  networkPolicyEnabled: false\n  nodePools:\n  - autoscaling:\n      enabled: false\n      maxNodeCount: null\n      minNodeCount: null\n    config:\n      diskSizeGb: 100\n      diskType: pd-standard\n      imageType: COS_CONTAINERD\n      labels: {}\n      localSsdCount: 0\n      machineType: n1-standard-2\n      oauthScopes:\n      - https://www.googleapis.com/auth/devstorage.read_only\n      - https://www.googleapis.com/auth/logging.write\n      - https://www.googleapis.com/auth/monitoring\n      - https://www.googleapis.com/auth/servicecontrol\n      - https://www.googleapis.com/auth/service.management.readonly\n      - https://www.googleapis.com/auth/trace.append\n      preemptible: false\n      tags: null\n      taints: null\n    initialNodeCount: 3\n    isNew: true\n    management:\n      autoRepair: true\n      autoUpgrade: true\n    maxPodsConstraint: 110\n    name: markus-automation\n  privateClusterConfig:\n    enablePrivateEndpoint: false\n    enablePrivateNodes: false\n    masterIpv4CidrBlock: null\n  projectID: \"\"\n  region: \"\"\n  subnetwork: default\n  zone: us-central1-c\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Environment Variables for Rancher Provisioning\nDESCRIPTION: This snippet shows how to set up proxy-related environment variables for both RKE1 and RKE2 agents in the provisioning input. It includes settings for HTTPS_PROXY, HTTP_PROXY, and NO_PROXY.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/proxy/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  agentEnvVars:\n  - name: HTTPS_PROXY\n    value: #proxy server internal ip address:port\n  - name: HTTP_PROXY\n    value: #proxy server internal ip address:port\n  - name: NO_PROXY\n    value: localhost,127.0.0.1,0.0.0.0,10.0.0.0/8,172.16.0.0/12,cattle-system.svc\n  agentEnvVarsRKE1:\n  - name: HTTPS_PROXY\n    value: #proxy server internal ip address:port\n  - name: HTTP_PROXY\n    value: #proxy server internal ip address:port\n  - name: NO_PROXY\n    value: localhost,127.0.0.1,0.0.0.0,10.0.0.0/8,172.16.0.0/12,cattle-system.svc\n```\n\n----------------------------------------\n\nTITLE: Registry Corral Package Configuration in YML\nDESCRIPTION: Defines the registry manifest configuration including variables for authentication modes, docker compose version, Rancher version, and cert manager version\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\nmanifest:\n  name: registry\n  description: registry\n  variables:\n    registry_auth:\n      default: enabled\ntemplates:\n  - aws/registry_nodes\n  - registry-standalone\nvariables:\n  registry_auth:\n    - global\n    - enabled\n    - disabled\n    - ecr\n  docker_compose_version:\n    - 2.15.1\n  rancher_version:\n    - 2.7.0\n  cert_manager_version:\n    - 1.11.0\n```\n\n----------------------------------------\n\nTITLE: AWS and Corral Configuration Settings\nDESCRIPTION: Comprehensive configuration for AWS credentials, EC2 settings, node templates, and Corral-specific configurations including package paths and registry settings\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nawsCredentials:\n  accessKey: <REDACTED>\n  defaultRegion: us-east-2\n  secretKey: <REDACTED>\nawsEC2Config:\n  awsAMI: <REDACTED>\n  awsAccessKeyID: <REDACTED>\n  awsCICDInstanceTag: rancher-validation\n  awsIAMProfile: \"\"\n  awsRegionAZ: \"\"\n  awsSSHKeyName: <REDACTED>\n  awsSecretAccessKey: <REDACTED>\n  awsSecurityGroups:\n  - <REDACTED>\n  awsUser: ubuntu\n  instanceType: t3a.xlarge\n  region: us-east-2\n  volumeSize: 50\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral Variables for RKE2 Node Setup in YAML\nDESCRIPTION: Configuration block defining essential variables for RKE2 nodes setup, including AWS credentials, network settings, and registry configurations. These settings control node deployment, load balancer setup, and registry configuration.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ncorralConfigs:\n  corralConfigUser: izaac\n  corralConfigVars:\n    agent_count: 1\n    aws_access_key: \n    aws_ami: \n    aws_domain: <REDACTED>\n    aws_hostname_prefix: example1\n    aws_ipv6_80_target_group_arn: \n    aws_ipv6_443_target_group_arn: \n    aws_region: us-west-1\n    aws_route53_zone: <REDACTED>\n    aws_secret_key: \n    aws_security_group: <REDACTED>\n    aws_ssh_user: ec2-user\n    aws_subnet: <REDACTED>\n    aws_vpc: <REDACTED>\n    aws_zone_id: \n    instance_type: t3a.xlarge\n    registry_cert: <base64 string>\n    registry_key: <base64 string>\n    registry_ecr_fqdn: <ID>.dkr.ecr.us-west-1.amazonaws.com\n    server_count: 3\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS RKE2 Machine Config in YAML\nDESCRIPTION: Defines the AWS-specific machine configuration for RKE2 provisioning, including region, AMI, instance type, and other AWS-specific settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nawsMachineConfigs:\n  region: \"us-east-2\"                         #required\n  awsMachineConfig:\n  - roles: [\"etcd\",\"controlplane\",\"worker\"]   #required\n    ami: \"\"                                   #required\n    instanceType: \"t3a.medium\"                \n    sshUser: \"ubuntu\"                         #required\n    vpcId: \"\"                                 #required\n    volumeType: \"gp2\"                         \n    zone: \"a\"                                 #required\n    retries: \"5\"                              \n    rootSize: \"60\"                            \n    securityGroup: [\"\"]                       \n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Corral Package for RKE2\nDESCRIPTION: YAML configuration for Rancher deployment using RKE2. Defines variables for CNI, kubernetes version, registry authentication, docker compose version, rancher version, and cert manager version.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmanifest:\n  name: rancher-registry\n  description: rancher-registry\n  variables:\n    registry_auth:\n      default: enabled\ntemplates:\n  - aws/cluster_nodes\n  - aws/registry_nodes\n  - registry-standalone\n  - rke2\n  - rancher\nvariables:\n  cni:\n    - calico\n  kubernetes_version:\n    - v1.23.13+rke2r1\n  registry_auth:\n    - global\n  docker_compose_version:\n    - 2.15.1\n  rancher_version:\n    - 2.7.1\n  cert_manager_version:\n    - 1.11.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Registry Corral Package\nDESCRIPTION: YAML configuration for registry setup. Specifies variables for registry authentication types, docker compose version, rancher version, and cert manager version.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmanifest:\n  name: registry\n  description: registry\n  variables:\n    registry_auth:\n      default: enabled\ntemplates:\n  - aws/registry_nodes\n  - registry-standalone\nvariables:\n  registry_auth:\n    - global\n    - enabled\n    - disabled\n    - ecr\n  docker_compose_version:\n    - 2.15.1\n  rancher_version:\n    - 2.7.1\n  cert_manager_version:\n    - 1.11.0\n```\n\n----------------------------------------\n\nTITLE: AWS Credentials Configuration\nDESCRIPTION: Configuration for AWS cloud credentials including access key, secret key, and region.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nawsCredentials:                       \n  secretKey: \"\"                       #required\n  accessKey: \"\"                       #required\n  defaultRegion: \"\"                   #required\n```\n\n----------------------------------------\n\nTITLE: Chart Upgrade Configuration\nDESCRIPTION: Configuration for enabling chart upgrades in RKE1 clusters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nchartUpgrade:\n  isUpgradable: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Deletion Test Parameters in YAML\nDESCRIPTION: Base configuration YAML for setting up cluster deletion tests. Includes essential parameters like Rancher host address, admin token, target cluster name, and optional settings for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/deleting/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: false/optional\n```\n\n----------------------------------------\n\nTITLE: Node Template Basic Configuration\nDESCRIPTION: Basic node template configuration for RKE1 including engine installation URL and name.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n  nodeTemplate:\n    engineInstallURL: \"testNT\"\n    name:             \"testNTName\"\n```\n\n----------------------------------------\n\nTITLE: Azure Node Configuration\nDESCRIPTION: Detailed configuration for Azure node templates including VM size, networking, and storage settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nazureNodeConfig:\n  availabilitySet: \"docker-machine\"\n  customData: \"\"\n  diskSize: \"30\"\n  dns: \"\"\n  dockerPort: \"2376\"\n  environment: \"AzurePublicCloud\"\n  faultDomainCount: \"3\"\n  image: \"canonical:UbuntuServer:22.04-LTS:latest\"\n  location: \"eastus2\"\n  managedDisks: false\n  noPublicIp: false\n  openPort: [\"6443/tcp\",\"2379/tcp\",\"2380/tcp\",\"8472/udp\",\"4789/udp\",\"9796/tcp\",\"10256/tcp\",\"10250/tcp\",\"10251/tcp\",\"10252/tcp\"]\n  plan: \"\"\n  privateIpAddress: \"\"\n  resourceGroup: \"\"\n  size: \"Standard_D2_v2\"\n  sshUser: \"azureuser\"\n  staticPublicIp: false\n  storageType: \"Standard_LRS\"\n  subnet: \"docker-machine\"\n  subnetPrefix: \"192.168.0.0/16\"\n  subscriptionId: \"\"\n  type: \"azureConfig\"\n  updateDomainCount: \"5\"\n  vnet: \"docker-machine-vnet\"\n```\n\n----------------------------------------\n\nTITLE: Harvester Node Configuration\nDESCRIPTION: Detailed configuration for Harvester node templates including VM resources and networking settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nharvesterNodeConfig\":\n  cloudConfig: \"\"\n  cpuCount: \"2\"\n  diskBus: \"virtio\"\n  diskSize: \"40\"\n  imageName: \"default/image-gchq8\"\n  keyPairName: \"\"\n  memorySize: \"4\"\n  networkData: \"\"\n  networkModel: \"virtio\"\n  networkName: \"\"\n  networkType: \"dhcp\"\n  sshPassword: \"\"\n  sshPort: \"22\"\n  sshPrivateKeyPath: \"\"\n  sshUser: \"ubuntu\"\n  type: \"harvesterConfig\"\n  userData: \"\"\n  vmAffinity: \"\"\n  vmNamespace: \"default\n```\n\n----------------------------------------\n\nTITLE: AWS EC2 Custom Cluster Configuration\nDESCRIPTION: YAML configuration for setting up AWS EC2 instances in a custom RKE1 cluster. Includes configurations for control plane and worker nodes with specific instance types and roles.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n  awsEC2Configs:\n  region: \"us-east-2\"\n  awsSecretAccessKey: \"\"\n  awsAccessKeyID: \"\"\n  awsEC2Config:\n    - instanceType: \"t3a.medium\"\n      awsRegionAZ: \"\"\n      awsAMI: \"\"\n      awsSecurityGroups: [\"\"]\n      awsSSHKeyName: \"\"\n      awsCICDInstanceTag: \"rancher-validation\"\n      awsIAMProfile: \"\"\n      awsUser: \"ubuntu\"\n      volumeSize: 50\n      roles: [\"etcd\", \"controlplane\"]\n    - instanceType: \"t3a.medium\"\n      awsRegionAZ: \"\"\n      awsAMI: \"\"\n      awsSecurityGroups: [\"\"]\n      awsSSHKeyName: \"\"\n      awsCICDInstanceTag: \"rancher-validation\"\n      awsIAMProfile: \"\"\n      awsUser: \"ubuntu\"\n      volumeSize: 50\n      roles: [\"worker\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Wrangler Context for Kubernetes Controller Testing in Go\nDESCRIPTION: Go code snippet to create a wrangler context for integration testing of Wrangler controllers.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/rancher/rancher/pkg/wrangler\"\n\nwranglerContext, err := wrangler.NewContext(ctx, nil, restCfg)\n```\n\n----------------------------------------\n\nTITLE: PSACT Test Configuration\nDESCRIPTION: YAML configuration for PSACT testing with Linode provider settings and node configurations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke1/README.md#2025-04-10_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"<rancher server url>\"\n  adminToken: \"<rancher admin bearer token>\"\n  cleanup: false\n  clusterName: \"<provided cluster name>\"\n  insecure: true\nprovisioningInput:\n  rke1KubernetesVersion: [\"v1.27.10-rancher1-1\"]\n  cni: [\"calico\"]\n  providers: [\"linode\"]\n  nodeProviders: [\"ec2\"]\nnodeTemplate:\n  engineInstallURL: \"https://releases.rancher.com/install-docker/23.0.sh\"\nlinodeNodeConfig:\n  authorizedUsers: \"\"\n  createPrivateIp: true\n  dockerPort: \"2376\"\n  image: \"linode/ubuntu22.04\"\n  instanceType: \"g6-dedicated-8\"\n  label: \"\"\n  region: \"us-west\"\n  rootPass: \"\"\n  sshPort: \"22\"\n  sshUser: \"root\"\n  stackscript: \"\"\n  stackscriptData: \"\"\n  swapSize: \"512\"\n  tags: \"\"\n  token: \"\"\n  type: \"linodeConfig\"\n  uaPrefix: \"Rancher\"\n```\n\n----------------------------------------\n\nTITLE: Running Rancher Integration Tests with Make\nDESCRIPTION: This command runs the integration tests in tests/v2/integration using a Dapper container. It sets up Rancher, creates a local k3s cluster, and deploys CRDs before running the tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/integration/README.md#2025-04-10_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmake ci\n```\n\n----------------------------------------\n\nTITLE: Running AKS Cluster Provisioning Tests in Rancher\nDESCRIPTION: Shell command for executing the AKS cluster provisioning validation tests with the gotestsum test runner. Includes necessary tags and timeout configurations for proper test execution.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hosted/README.md#2025-04-10_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/hosted --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestHostedAKSClusterProvisioningTestSuite/TestProvisioningHostedAKS\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Digital Ocean Environment Variables\nDESCRIPTION: Environment variable configuration required for running tests on Digital Ocean infrastructure.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/readme.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nDO_ACCESS_KEY no default, your DO access key\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Cloud Provider Variables\nDESCRIPTION: Basic environment variables for configuring cloud provider testing environment including OS and Docker settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/readme.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nOS_VERSION defaults to 'ubuntu-16.04', Used to select which image to use\nDOCKER_VERSION defaults to '1.12.6', Used to select image to use if DOCKER_INSTALLED is 'true'\nDOCKER_INSTALLED defaults to 'true', When false, base image is used for OS_VERSION, and docker version DOCKER_VERSION is installed\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Environment Variables\nDESCRIPTION: Environment variables required for AWS infrastructure testing including access keys, instance configuration, and networking settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/readme.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nAWS_ACCESS_KEY_ID no default, your AWS access key id\nAWS_SECRET_ACCESS_KEY no default, your AWS secret access key\nAWS_SSH_KEY_NAME no default, the filename of the private key, e.i. jenkins-rke-validation.pem\nAWS_CICD_INSTANCE_TAG defaults to 'rancher-validation', Tags the instance with CICD=AWS_CICD_INSTANCE_TAG\nAWS_INSTANCE_TYPE defaults to 't3a.medium', selects the instance type and size\nAWS_REGION no default, the region for your ec2 instances\nAWS_SUBNET no default, the subnet for your ec2 instances\nAWS_VPC no default, the VPC for your ec2 instances\nAWS_SG no default, the SG for your ec2 instances\nAWS_ZONE no default, the zone for your ec2 instances\nAWS_IAM_PROFILE no default, the IAM profile for your ec2 instances\n```\n\n----------------------------------------\n\nTITLE: Running Custom Operation Test with RKE2\nDESCRIPTION: Example command for running a specific operation test with RKE2 distribution. This command uses environment variables to customize which tests are executed.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2prov/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nV2PROV_TEST_RUN_REGEX=Test_Operation_Custom_EncryptionKeyRotation V2PROV_TEST_DIST=rke2 make provisioning-tests\n```\n\n----------------------------------------\n\nTITLE: Installing setup-envtest for Kubernetes Controller Testing in Go\nDESCRIPTION: Command to install setup-envtest, a tool required for running controller integration tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo install sigs.k8s.io/controller-runtime/tools/setup-envtest@latest\n```\n\n----------------------------------------\n\nTITLE: Initializing envtest Environment for Kubernetes Controller Testing in Go\nDESCRIPTION: Go code snippet to start a local Kubernetes server using envtest for integration testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_2\n\nLANGUAGE: go\nCODE:\n```\ntestEnv = &envtest.Environment{}\nrestCfg, err := testEnv.Start()\n```\n\n----------------------------------------\n\nTITLE: Creating CRDs for Kubernetes Controller Testing in Go\nDESCRIPTION: Go code snippet to create Custom Resource Definitions (CRDs) for integration testing using the wrangler library.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/rancher/wrangler/v3/pkg/crd\"\n\nfactory, err := crd.NewFactoryFromClient(restCfg)\nerr = factory.BatchCreateCRDs(ctx,\ncrd.CRD{\n    SchemaObject: <CRD struct>,\n    NonNamespace: <true/false>,\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Server Settings for ETCD Backup Tests\nDESCRIPTION: JSON configuration block specifying connection details for Rancher server including host address, admin token, target cluster name, and optional settings for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/snapshotrbac/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"rancher\": { \n  \"host\": \"rancher_server_address\",\n  \"adminToken\": \"rancher_admin_token\",\n  \"clusterName\": \"cluster_to_run_tests_on\",\n  \"insecure\": true/optional,\n  \"cleanup\": false/optional,\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Wrangler Controller for Integration Testing in Go\nDESCRIPTION: Go code snippet to register a Wrangler controller for integration testing, using the feature controller as an example.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nimport \"github.com/rancher/rancher/pkg/controllers/management/feature\"\n\nfeature.Register(ctx, wranglerContext)\n```\n\n----------------------------------------\n\nTITLE: Starting Resource Caches for Wrangler Controller Testing in Go\nDESCRIPTION: Go code snippet to start resource caches for additional resources needed in Wrangler controller integration testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_7\n\nLANGUAGE: go\nCODE:\n```\n_, err := wranglerContext.ControllerFactory.SharedCacheFactory().ForKind(schema.GroupVersionKind{\n\tGroup:   \"management.cattle.io\",\n\tVersion: \"v3\",\n\tKind:    \"NodeDriver\",\n})\nerr = wranglerContext.ControllerFactory.SharedCacheFactory().StartGVK(s.ctx, schema.GroupVersionKind{\n\tGroup:   \"management.cattle.io\",\n\tVersion: \"v3\",\n\tKind:    \"NodeDriver\",\n})\n```\n\n----------------------------------------\n\nTITLE: File Structure Example for AKS Testing\nDESCRIPTION: Shows the directory structure for AKS-related test files in the rancher project.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/kev2/README.md#2025-04-10_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nrancher/rancher\n-> pkg/controllers/management/aks\n     -> aks_cluster_handler.go\n     -> aks_cluster_handler_test.go\n     -> tests/\n          -> test1.yaml\n          -> test2.json\n```\n\n----------------------------------------\n\nTITLE: Running Individual Provider Tests\nDESCRIPTION: Commands to run tests for specific cloud providers separately.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/kev2/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v ./pkg/controllers/management/aks\ngo test -v ./pkg/controllers/management/eks\ngo test -v ./pkg/controllers/management/gke\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML for RKE1 Cluster Workspace Migration Test\nDESCRIPTION: YAML configuration for the test suite that verifies role bindings when moving an RKE1 cluster to a new workspace. The configuration specifies the Rancher server address, admin token, optional security settings, and target cluster name.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/fleetworkspaces/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"RKE1_cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Running All Provider Tests\nDESCRIPTION: Command to run tests for all cloud providers simultaneously.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/kev2/README.md#2025-04-10_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngo test -v ./pkg/controllers/management/aks ./pkg/controllers/management/eks ./pkg/controllers/management/gke\n```\n\n----------------------------------------\n\nTITLE: Checking Test Coverage\nDESCRIPTION: Commands to generate and view test coverage reports.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/kev2/README.md#2025-04-10_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngo test (or alias command) -coverprofile=coverage.out\ngo tool cover -html=coverage.out\n```\n\n----------------------------------------\n\nTITLE: Installing Test Dependencies for Rancher Integration Testing\nDESCRIPTION: Installs the required Python packages for running Rancher integration tests, including the tox test runner.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/integration/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\npip install tox\n```\n\n----------------------------------------\n\nTITLE: Starting Local Rancher Instance for Testing\nDESCRIPTION: Uses the make command to run a local Rancher instance that will be the target for integration tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/integration/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake run\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Connection for Node Scaling Tests in YAML\nDESCRIPTION: This YAML configuration specifies the Rancher server connection details required for running node scaling tests, including the host address, admin token, target cluster name, and optional parameters for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  clusterName: \"cluster_to_run_tests_on\"\n  insecure: true/optional\n  cleanup: false/optional\n```\n\n----------------------------------------\n\nTITLE: Decoding Pod Logs with Newline Handling in Bash\nDESCRIPTION: This command processes Rancher pod logs that contain literal \"\\n\" strings instead of actual newlines. It decodes the base64 content, decompresses it, and uses sed to replace the newline placeholders with actual newline characters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2prov/DEBUG.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\necho 'podlogblob' | base64 --decode | gzip -d | sed -e 's/SnewlineG/\\n/g'\n```\n\n----------------------------------------\n\nTITLE: Running Rancher e2e Tests with Local Kubernetes Config\nDESCRIPTION: Command to run end-to-end tests for the Rancher project using local Kubernetes configuration. This requires a running Kubernetes cluster and valid kubeconfig file paths for both TEST_CLUSTER_MGR_CONFIG and TEST_CLUSTER_CONFIG environment variables.\nSOURCE: https://github.com/rancher/rancher/blob/main/pkg/controllers/management/test/e2e/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nTEST_CLUSTER_MGR_CONFIG=~/.kube/config TEST_CLUSTER_CONFIG=~/.kube/config go test -check.vv -v .\n```\n\n----------------------------------------\n\nTITLE: Configuring Prime Settings in YAML for Rancher Testing\nDESCRIPTION: YAML configuration for setting up Prime testing in Rancher. Includes required fields for both rancher server connection and prime-specific settings like brand name, isPrime flag, Rancher version, and registry information.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/prime/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  ...\nprime:\n  brand: \"<name of brand>\"\n  isPrime: false  #boolean, default is false\n  rancherVersion: \"<version_or_commit_of_rancher>\"\n  registry: \"<name of registry>\n```\n\n----------------------------------------\n\nTITLE: Defining Apache License 2.0 Header for Rancher Project\nDESCRIPTION: This code snippet contains the Apache License 2.0 header that is used in the Rancher project. It includes the copyright notice, permission to use the software, and conditions of the license.\nSOURCE: https://github.com/rancher/rancher/blob/main/scripts/boilerplate.go.txt#2025-04-10_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/*\nCopyright YEAR Rancher Labs, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n```\n\n----------------------------------------\n\nTITLE: Running Full Chart CI with Live Cluster for Rancher in Bash\nDESCRIPTION: This snippet demonstrates how to execute a full chart CI run with a live cluster for the Rancher project. It uses a script located in the scripts/charts directory.\nSOURCE: https://github.com/rancher/rancher/blob/main/chart/tests/README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./scripts/charts/ci\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment in YAML\nDESCRIPTION: YAML configuration for setting up Rancher test environment parameters including server address, admin token, and cluster settings. Includes optional boolean flags for insecure connections and cleanup operations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/projects/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"downstream_cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Execute RKE2 Hostname Truncation Test Command\nDESCRIPTION: Command to run the hostname truncation test using gotestsum with specific test parameters and build tags for validation testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hostnametruncation/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/hostnametruncation --junitfile results.xml -- -timeout=120m -tags=validation -v -run \"TestProvisioningHostnameTruncationTestSuite/TestProvisioningRKE2ClusterTruncation\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Environment for Rancher Configmaps RBAC Tests\nDESCRIPTION: YAML configuration required for setting up the test environment. Specifies the Rancher server connection details, authentication token, and target cluster information for running the ConfigmapsRBAC test suite.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/configmaps/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True  #optional\n  cleanup: True #optional\n  clusterName: \"cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment in YAML\nDESCRIPTION: YAML configuration for setting up the Rancher test environment. It specifies the Rancher server address, admin token, and other optional settings like insecure mode and cleanup. The cluster name for testing is also defined.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/globalroles/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Running EKS Node Pool Scaling Tests with Gotestsum\nDESCRIPTION: These commands run node pool scaling tests specifically for Amazon Elastic Kubernetes Service (EKS) clusters, including both static test cases and dynamic input tests. Note that maxSize must be set higher than the desired node count.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestEKSNodeScalingTestSuite/TestScalingEKSNodePools\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestEKSNodeScalingTestSuite/TestScalingEKSNodePoolsDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TestRbacRegistrySecretTestSuite in YAML\nDESCRIPTION: YAML configuration for running the TestRbacRegistrySecretTestSuite. It includes Rancher server details, admin token, cluster name, and registry input parameters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/secrets/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"cluster_name\"\nregistryInput: \n  name: \"registry_name\"\n  registryUsername: \"registry_username\" \n  registryPassword: \"registry_password\"\n```\n\n----------------------------------------\n\nTITLE: Running GKE Node Pool Scaling Tests with Gotestsum\nDESCRIPTION: These commands run node pool scaling tests specifically for Google Kubernetes Engine (GKE) clusters, including both static test cases and dynamic input tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestGKENodeScalingTestSuite/TestScalingGKENodePools\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestGKENodeScalingTestSuite/TestScalingGKENodePoolsDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment for Networking Tests in JSON\nDESCRIPTION: JSON configuration for setting up a Rancher test environment. Specifies the host address, admin token, target cluster, and optional settings for insecure connections and cleanup behavior.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/networking/README.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"rancher\": { \n    \"host\": \"rancher_server_address\",\n    \"adminToken\": \"rancher_admin_token\",\n    \"clusterName\": \"cluster_to_run_tests_on\",\n    \"insecure\": true/optional,\n    \"cleanup\": false/optional,\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running RKE2 Cluster Template Test with Go\nDESCRIPTION: Command for running RKE2 cluster template provisioning test using Go test tags.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestClusterTemplateTestSuite/TestProvisionRKE2TemplateCluster\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic GitRepo Parameters for Fleet Tests in YAML\nDESCRIPTION: Configuration for the dynamic GitRepo test that allows specifying custom repository parameters. The configuration includes metadata for the GitRepo resource and specification details such as repository URL, branch, and paths to deploy.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/fleet/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ngitRepo:\n  metadata:\n    name: \"dynamic-test-1\"\n    namespace: \"fleet-default\"\n  spec:\n    repo: https://github.com/rancher/fleet-examples\n    branch: master\n    paths:\n    - simple\n    imageScanCommit:\n      authorName: \"\"\n      authorEmail: \"\"\n```\n\n----------------------------------------\n\nTITLE: Keybase CLI Command for User Verification\nDESCRIPTION: A Bash command demonstrating how to verify the identity of the Keybase user 'rancher' using the Keybase command-line interface. This allows for public auditing of identity claims.\nSOURCE: https://github.com/rancher/rancher/blob/main/keybase.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# look me up\nkeybase id rancher\n```\n\n----------------------------------------\n\nTITLE: Using remove_resource Fixture in Python Tests\nDESCRIPTION: Demonstrates how to use the remove_resource fixture for automatic cleanup of resources created during tests. The fixture ensures resources are deleted after test completion regardless of test outcome.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/tests/v3_api/README.md#2025-04-10_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef test_wl_rbac_project_member(remove_resource):\n    ...\n    workload = p_client.create_workload(name=name, containers=con, namespaceId=ns.id)\n    remove_resource(workload)\n    ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloud Provider Upgrade Tests in YAML\nDESCRIPTION: YAML configuration for setting up cloud provider upgrade tests, specifically for VMware vSphere. It includes Rancher host details and VMware vSphere credentials and configuration.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: <your_host>\n  adminToken: <your_token>\n  insecure: true/false\n  cleanup: false/true\n  clusterName: \"<your_cluster_name>\"\nvmwarevsphereCredentials:\n  ...\nvmwarevsphereConfig: \n  ...\n```\n\n----------------------------------------\n\nTITLE: Configuring RKE2 Test Flags in YAML\nDESCRIPTION: Defines flags to determine which static table tests are run. 'Long' runs all tests, while 'Short' runs a subset.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nflags:\n  desiredflags: \"Long\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral Packages and Settings for Rancher Proxy Tests\nDESCRIPTION: This snippet demonstrates how to configure Corral packages and settings for Rancher proxy tests. It includes settings for corral packages, configurations, and Rancher HA setup.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/proxy/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncorralPackages:\n  corralPackageImages:\n    airgapCustomCluster: \"/dist/aws-rancher-custom-cluster-false-true\"\n    rancherHA: \"/dist/aws-aws-proxy-standalone-rke2-rancher-proxy-calico-true-2.15.1-1.11.0\" # the name of the corral rancher is configurable with config entry above\n    ...\n  hasDebug: <bool, default=false>\n  hasCleanup: <bool, default=true>\ncorralConfigs:\n  corralConfigUser: <string, default=\"jenkauto\">\n  corralConfigVars:\n    <var1>: <string, \"val1\"> # for now only aws is supported, so use the appropriate aws vars\n    registry_ip: <addr> # if the proxied rancher instance is created beforehand (not in the same job) set this to the registry public IP, otherwise it is automatically done in the job. \n    registry_private_ip: <addr> # if the proxied rancher instance is created beforehand (not in the same job) set this to the registry private IP, otherwise it is automatically done in the job.\n    rancher_chart_repo: <val> #  \n    rancher_version: <val> #\n    kubernetes_version: <val> #\n    corral_private_key: <val> # only set this if you have created the proxied rancher instance beforehand. By doing `corral vars <corral> corral_private_key`\n    corral_public_key: <val> # only set this if you have created the proxied rancher instance beforehand. By doing `corral vars <corral> corral_private_key`\n    ...\n  corralSSHPath: <string, optional, mostly for local testing>\ncorralRancherHA:\n  name: rancherha # this is the name of your aigap corral package if it hasn't been created beforehand\n```\n\n----------------------------------------\n\nTITLE: Test Flags Configuration in YML\nDESCRIPTION: Defines the test execution flags for controlling registry infrastructure and Rancher installation behavior\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_3\n\nLANGUAGE: yml\nCODE:\n```\nflags:\n  desiredflags: UseExistingRegistries, InstallRancher\n```\n\n----------------------------------------\n\nTITLE: Configuring Cloud Provider Migration Tests in YAML\nDESCRIPTION: YAML configuration for setting up cloud provider migration tests. It specifies Rancher host details, admin token, and cluster name.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: <your_host>\n  adminToken: <your_token>\n  insecure: true/false\n  cleanup: false/true\n  clusterName: \"<your_cluster_name>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher Test Environment in YAML\nDESCRIPTION: This YAML configuration sets up the necessary parameters for running tests on the Global Role Binding Status Field in Rancher. It includes the Rancher server address, admin token, cluster name, and optional settings for insecure connections and cleanup.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/grb/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher: \n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"cluster_name\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS EC2 for Custom RKE2 Cluster in YAML\nDESCRIPTION: YAML configuration for setting up AWS EC2 instances for a custom RKE2 cluster. Includes settings for different node roles and Windows nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nawsEC2Configs:\n  region: \"us-east-2\"\n  awsSecretAccessKey: \"\"\n  awsAccessKeyID: \"\"\n  awsEC2Config:\n    - instanceType: \"t3a.medium\"\n      awsRegionAZ: \"\"\n      awsAMI: \"\"\n      awsSecurityGroups: [\"\"]\n      awsSSHKeyName: \"\"\n      awsCICDInstanceTag: \"rancher-validation\"\n      awsIAMProfile: \"\"\n      awsUser: \"ubuntu\"\n      volumeSize: 50\n      roles: [\"etcd\", \"controlplane\"]\n    - instanceType: \"t3a.medium\"\n      awsRegionAZ: \"\"\n      awsAMI: \"\"\n      awsSecurityGroups: [\"\"]\n      awsSSHKeyName: \"\"\n      awsCICDInstanceTag: \"rancher-validation\"\n      awsIAMProfile: \"\"\n      awsUser: \"ubuntu\"\n      volumeSize: 50\n      roles: [\"worker\"]\n    - instanceType: \"t3a.xlarge\"\n      awsAMI: \"\"\n      awsSecurityGroups: [\"\"]\n      awsSSHKeyName: \"\"\n      awsCICDInstanceTag: \"rancher-validation\"\n      awsUser: \"Administrator\"\n      volumeSize: 50\n      roles: [\"windows\"]\n```\n\n----------------------------------------\n\nTITLE: Registry Configuration Settings in YML\nDESCRIPTION: Details the registry configuration including authentication settings, ECR configuration, and registry URLs\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\nregistries:\n  existingAuthRegistry:\n    password: \n    url: <fqdn>\n    username: corral\n  ecrRegistryConfig:\n    url: <ID>.dkr.ecr.us-west-1.amazonaws.com\n    password: \n    awsAccessKeyId: \n    awsSecretAccessKey: \n  existingNoAuthRegistry: <fqdn>\n  registryConfigNames:\n  - registryauthdisabled\n  - registryauthenabled\n  - registryecr\n```\n\n----------------------------------------\n\nTITLE: Configuring PSACT Test for RKE2 Cluster in YAML\nDESCRIPTION: YAML configuration for setting up PSACT (Pod Security Admission Control Templates) tests for RKE2 clusters. Includes Rancher server and Linode provider settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"<rancher server url>\"\n  adminToken: \"<rancher admin bearer token>\"\n  cleanup: false\n  clusterName: \"<provided cluster name>\"\n  insecure: true\nprovisioningInput:\n  rke2KubernetesVersion: [\"v1.27.10+rke2r1\"]\n  cni: [\"calico\"]\n  providers: [\"linode\"]\n  nodeProviders: [\"ec2\"]\nlinodeCredentials:\n   token: \"\"\nlinodeMachineConfigs:\n  region: \"us-west\"\n  linodeMachineConfig:\n  - roles: [\"etcd\", \"controlplane\", \"worker\"]\n    authorizedUsers: \"\"\n    createPrivateIp: true\n    dockerPort: \"2376\"\n    image: \"linode/ubuntu22.04\"\n    instanceType: \"g6-standard-8\"\n    region: \"us-west\"\n    rootPass: \"\"\n    sshPort: \"22\"\n    sshUser: \"\"\n    stackscript: \"\"\n    stackscriptData: \"\"\n    swapSize: \"512\"\n    tags: \"\"\n    uaPrefix: \"Rancher\"\n```\n\n----------------------------------------\n\nTITLE: Environment Variables for Container-based RKE Testing\nDESCRIPTION: Required environment variables for running RKE tests in a container. These include OS and Docker versions, Kubernetes tooling versions, and AWS credentials.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/tests/rke/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nOS_VERSION=[ubuntu-16.04|rhel-7.4]\nDOCKER_VERSION=[latest|17.03|1.13.1|1.12.6]\nKUBECTL_VERSION=\nRKE_VERSION=\nCLOUD_PROVIDER=AWS\nAWS_SSH_KEY_NAME=aws_cert.pem\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Options for RKE2 Cluster in YAML\nDESCRIPTION: YAML configuration for advanced options in RKE2 clusters, including cluster agent and fleet agent customization. Covers resource requests, limits, node affinity, and tolerations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nadvancedOptions:\n  clusterAgent: # change this to fleetAgent for fleet agent\n    appendTolerations:\n    - key: \"Testkey\"\n      value: \"testValue\"\n      effect: \"NoSchedule\"\n    overrideResourceRequirements:\n      limits:\n        cpu: \"750m\"\n        memory: \"500Mi\"\n      requests:\n        cpu: \"250m\"\n        memory: \"250Mi\"\n      overrideAffinity:\n        nodeAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n            - preference:\n                matchExpressions:\n                  - key: \"cattle.io/cluster-agent\"\n                    operator: \"In\"\n                    values:\n                      - \"true\"\n              weight: 1\n```\n\n----------------------------------------\n\nTITLE: Running Hardened Custom RKE2 Cluster Tests with Go\nDESCRIPTION: Command for running hardened custom RKE2 cluster provisioning tests using Go test tags. These tests cover CIS scan profiles.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestHardenedRKE2ClusterProvisioningTestSuite$\"\n```\n\n----------------------------------------\n\nTITLE: Running the AD GUID to DN Reverse Migration Script via Rancher Agent\nDESCRIPTION: Command for executing the Active Directory GUID to DN reverse migration utility through Rancher Agent. The script requires the Rancher Agent image path and supports optional flags for dry run mode and deletion of missing users.\nSOURCE: https://github.com/rancher/rancher/blob/main/cleanup/ad-guid-README.md#2025-04-10_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./ad-guid-unmigration.sh <AGENT IMAGE> [--dry-run] [--delete-missing]\n```\n\n----------------------------------------\n\nTITLE: Running Init Machine Deletion Tests for RKE2/K3S Clusters\nDESCRIPTION: Command for executing the TestDeleteInitMachine test suite that validates proper deletion of init nodes in RKE2/K3S provisioned clusters. Addresses a specific issue where init nodes could hang in deletion state.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/deleting/README.md#2025-04-10_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/deleting --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestDeleteInitMachineTestSuite/TestDeleteInitMachine\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Corral for Fleet Airgap Testing in YAML\nDESCRIPTION: This YAML configuration specifies the settings required for running Fleet tests in an airgapped environment. It includes provisioning inputs, registry configuration, Corral package settings, and AWS-specific variables.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/fleet/provisioning/airgap/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  cni:\n  - calico\n  rke2KubernetesVersion:\n  - v1.xx.xx\nregistries:\n  existingNoAuthRegistry: <value>\ncorralPackages:\n  corralPackageImages:\n    airgapCustomCluster: .../dist/aws-rancher-custom-cluster-true\n    rancherHA: .../dist/aws-aws-registry-standalone-rke2-rancher-airgap-calico-true-2.15.1-1.11.0\n    ...\n  hasDebug: <bool, default=false>\n  hasCleanup: <bool, default=true>\n  hasSetCorralSSHKeys: <bool, default=false>\ncorralConfigs:\n  corralConfigUser: <string, default=\"jenkauto\">\n  corralConfigVars:\n    <var1>: <string, \"val1\">\n    bastion_ip: <val>\n    corral_private_key: <val>\n    corral_public_key: <val>\n    registry_cert: <val>\n    registry_key: <val>\n    ...\n  corralSSHPath: <string, optional, mostly for local testing>\n```\n\n----------------------------------------\n\nTITLE: Setting KUBEBUILDER_ASSETS Environment Variable for Controller Testing in Go\nDESCRIPTION: Command to set the KUBEBUILDER_ASSETS environment variable, pointing to the installed setup-envtest location.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport KUBEBUILDER_ASSETS=$(setup-envtest use -p path)\n```\n\n----------------------------------------\n\nTITLE: RKE2 Cluster Test Configuration in YAML\nDESCRIPTION: YAML configuration file for setting up RKE2 cluster hostname truncation tests. Includes Rancher settings, provisioning input for machine pools, AWS credentials, and machine configuration details.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/hostnametruncation/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:                                   \n  host: \"\"                                  #required\n  adminToken: \"\"                            #required\n  clusterName: \"\"                           \n\nprovisioningInput:\n  machinePools:                             \n  - nodeRoles:                              #required (at least 1)\n      etcd: true                            #required (at least 1 controlplane & etcd & worker)                            \n      quantity: 1\n  - nodeRoles:\n      controlplane: true\n      quantity: 1\n  - nodeRoles:\n      worker: true\n      quantity: 1\n  rke2KubernetesVersion: [\"v1.27.6+rke2r1\"] #required (at least 1)\n  cni: [\"calico\"]                           #required (at least 1)\n  providers: [\"aws\"]                        #required (at least 1)\n\nawsCredentials:                            \n  secretKey: \"\",                            #required                                               \n  accessKey: \"\",                            #required                          \n  defaultRegion: \"\"                         #required                      \n\nawsMachineConfig:                                   \n  region: \"us-east-2\"                       \n  ami: \"\"                                   #required                      \n  instanceType: \"t3a.medium\"                #required                \n  sshUser: \"ubuntu\"                         #required                        \n  vpcId: \"\"                                 #required                               \n  volumeType: \"gp2\"                         #required                        \n  zone: \"a\"                                 #required                          \n  retries: \"5\"                              #required\n  rootSize: \"60\"                            #required\n  securityGroup: [\"\"]                       #required\n```\n\n----------------------------------------\n\nTITLE: Defining Node Pools for Replacement Testing in YAML\nDESCRIPTION: This YAML configuration defines the node pool structure required for node replacement tests, with separate sections for RKE1 nodePools and RKE2/K3s machinePools. Each pool specifies node roles (etcd, controlplane, worker) and quantities.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  providers: [\"\"]     # Specify to vsphere if you have a Windows node in your cluster\n  nodePools:          # nodePools is specific for RKE1 clusters.\n  - nodeRoles:\n      etcd: true\n      quantity: 3\n  - nodeRoles:\n      controlplane: true\n      quantity: 2\n  - nodeRoles:\n      worker: true\n      quantity: 3\n  machinePools:       # machinePools is specific for RKE2/K3s clusters.\n  - machinePoolConfig:\n      etcd: true\n      quantity: 3\n  - machinePoolConfig:\n      controlplane: true\n      quantity: 2\n  - machinePoolConfig:\n      worker: true\n      quantity: 3\n```\n\n----------------------------------------\n\nTITLE: Creating and Starting Controller Factory for Wrangler Testing in Go\nDESCRIPTION: Go code snippet to create and start a controller factory for Wrangler controller integration testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/controllers/README.md#2025-04-10_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nimport \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ncontrollerFactory := wranglerContext.ControllerFactory.ForResourceKind(schema.GroupVersionResource{\n    Group: \"management.cattle.io\",\n    Version: \"v3\",\n    Resource: \"features\",\n}, \"Feature\", false)\nerr := controllerFactory.Start(ctx, 1)\n```\n\n----------------------------------------\n\nTITLE: Running Snapshot Restore Test for Windows Clusters in Go\nDESCRIPTION: Command to run the snapshot restore test for Windows clusters using gotestsum. This test is specifically designed for clusters containing Windows nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/snapshot/README.md#2025-04-10_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/snapshot --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestSnapshotRestoreWindowsTestSuite/TestSnapshotRestoreWindows\"\n```\n\n----------------------------------------\n\nTITLE: Running RKE2/K3S Node Pool Scaling Tests with Gotestsum\nDESCRIPTION: These commands run various node pool scaling tests for RKE2 or K3S clusters, including both static test cases and dynamic input tests. They target both standard node pools and custom cluster nodes.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/nodescaling/README.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestNodeScalingTestSuite/TestScalingNodePools\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestNodeScalingTestSuite/TestScalingNodePoolsDynamicInput\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCustomClusterNodeScalingTestSuite/TestScalingCustomClusterNodes\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/nodescaling --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCustomClusterNodeScalingTestSuite/TestScalingCustomClusterNodesDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Cloning Rancher Repository\nDESCRIPTION: Commands to clone and navigate to the rancher repository.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/kev2/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nGit clone rancher/rancher\ncd rancher\n```\n\n----------------------------------------\n\nTITLE: Configuring vSphere RKE2 Machine in YAML\nDESCRIPTION: YAML configuration for setting up vSphere machines for RKE2 clusters. Includes settings for datacenter, host system, datastore, network, and VM specifications.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvmwarevsphereMachineConfigs:\n    datacenter: \"/<datacenter>\"                                 #required \n    hostSystem: \"/<datacenter>/path-to-host\"                    #required\n    datastore: \"/<datacenter>/path-to-datastore\"                #required \n    datastoreURL: \"ds:///<url>\"             \n    folder: \"/<datacenter>/path-to-vm-folder\"                   #required \n    pool: \"/<datacenter>/path-to-resource-pool\"                 #required \n    vmwarevsphereMachineConfig:\n    - cfgparam: [\"disk.enableUUID=TRUE\"]                        #required\n      cloudConfig: \"#cloud-config\\n\\n\"\n      customAttribute: []\n      tag: []\n      roles: [\"etcd\",\"controlplane\",worker]\n      creationType: \"template\"                                  #required\n      os: \"linux\"                                               #required\n      cloneFrom: \"/<datacenter>/path-to-linux-image\"            #required(linux templates only)\n      cloneFromWindows: \"/<datacenter>/path-to-windows-image\"   #required(windows templates only)\n      contentLibrary: \"\"                                        \n      datastoreCluster: \"\"\n      network: [\"/<datacenter>/path-to-vm-network\"]             #required\n      sshUser: \"\"                                               #required\n      sshPassword: \"\"                                           \n      sshUserGroup: \"\"\n      sshPort: \"22\"\n      cpuCount: \"4\"\n      diskSize: \"40000\"\n      memorySize: \"8192\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Flags for Import Provisioning Tests in YAML\nDESCRIPTION: This snippet shows how to configure flags for determining which static table tests are run. The 'Long' flag runs all tests, while 'Short' runs a subset.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/import/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nflags:\n  desiredflags: \"Long\"   #required (static tests only)\n```\n\n----------------------------------------\n\nTITLE: Running Cluster Template Provisioning Test with Go\nDESCRIPTION: Command to run the cluster template provisioning test using Go build tags. It specifies the test package, format, timeout, and other necessary parameters.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/clustertemplates/provisioning/README.md#2025-04-10_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/clustertemplates --junitfile results.xml -- -timeout=120m -tags=validation -v -run \"TestClusterTemplateRKE1ProvisioningTestSuite/TestProvisioningRKE1ClusterWithClusterTemplate\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Upgrade Tests in YAML\nDESCRIPTION: YAML configuration for setting up Kubernetes and pre/post upgrade workload tests. It specifies cluster details, enabled features, and provisioning input for different Kubernetes versions.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/upgrade/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nupgradeInput:\n  clusters:\n    - name: \"\"                      # Cluster name that is already provisioned in Rancher\n      psact: \"\"                     # Values are rancher-privileged, rancher-restricted or rancher-baseline\n      enabledFeatures:\n        chart: false                # Boolean, pre/post upgrade checks, default is false\n        ingress: false              # Boolean, pre/post upgrade checks, default is false\n      provisioningInput:            # See the [Hosted Provider Provisioning](hosted/README.md)\n        rke1KubernetesVersion: [\"\"]\n        rke2KubernetesVersion: [\"\"]\n        k3sKubernetesVersion: [\"\"]\n\n```\n\n----------------------------------------\n\nTITLE: Keybase Proof JSON Object for GitHub Verification\nDESCRIPTION: A JSON object containing identity information for the Keybase user 'rancher', including their key fingerprint, GitHub username, and verification metadata required for the Keybase proof system.\nSOURCE: https://github.com/rancher/rancher/blob/main/keybase.md#2025-04-10_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"body\": {\n    \"key\": {\n      \"eldest_kid\": \"01208358649f8a0961727af7cad37b772f01d0158cabe5475be08226a2bc00d2176d0a\",\n      \"fingerprint\": \"7ace6fb60dc4e26c4c6f344dc9df50bdac351da9\",\n      \"host\": \"keybase.io\",\n      \"key_id\": \"c9df50bdac351da9\",\n      \"kid\": \"010195274cdf339669e41a38d3439a161ebf7d5dc4d7cb3cedaefcef3515c85c8b2f0a\",\n      \"uid\": \"01b937b34ac988003e7eccf9d986f719\",\n      \"username\": \"rancher\"\n    },\n    \"service\": {\n      \"name\": \"github\",\n      \"username\": \"rancher\"\n    },\n    \"type\": \"web_service_binding\",\n    \"version\": 1\n  },\n  \"ctime\": 1644337278,\n  \"expire_in\": 157680000,\n  \"prev\": \"c1ca2429497f33d213cd9ea8322a1469a975d862eebdf71f9211614dc9bcb08f\",\n  \"seqno\": 27,\n  \"tag\": \"signature\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Rancher KDM Test Environment in YAML\nDESCRIPTION: Configuration file example for setting up KDM testing environment. Specifies the Rancher server URL, admin token, cluster name, and security settings required for TestChangeKDMurl test execution.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/kdm/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_url\"\n  adminToken: \"bearer_api_token\"\n  clusterName: \"local\"\n  insecure: true\n```\n\n----------------------------------------\n\nTITLE: Defining Corral Package Images Configuration in YAML\nDESCRIPTION: Configuration for Corral package images specifying paths for different registry types including RancherHA, auth-disabled registry, auth-enabled registry, and ECR registry. All package versions must match across configurations.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncorralPackages:\n  cleanup: false\n  corralPackageImages:\n    rancherha: /root/src/github.com/rancherlabs/corral-packages/dist/aws-aws-registry-standalone-rke2-rancher-calico-v1.23.10-rke2r1-global-2.15.1-2.7.0-1.11.0\n    registryauthdisabled: /root/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-disabled-2.15.1-2.7.0-1.11.0\n    registryauthenabled: /root/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-enabled-2.15.1-2.7.0-1.11.0\n    corralecr: /root/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-ecr-2.15.1-2.7.0-1.11.0\n```\n\n----------------------------------------\n\nTITLE: Main Configuration Setup for Rancher Testing\nDESCRIPTION: Comprehensive configuration including corral package paths, provisioning inputs for different Kubernetes distributions, registry configurations, and test parameters for Rancher v2.7.1 testing.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_10\n\nLANGUAGE: java\nCODE:\n```\ncorralPackages:\n  corralPackageImages:\n    corralecr: /root/go/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-ecr-2.15.1-2.7.1-1.11.0\n    rancherha: /root/go/src/github.com/rancherlabs/corral-packages/dist/aws-aws-registry-standalone-rke2-rancher-calico-v1.23.13-rke2r1-global-2.15.1-2.7.1-1.11.0\n    registryauthdisabled: /root/go/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-disabled-2.15.1-2.7.1-1.11.0\n    registryauthenabled: /root/go/src/github.com/rancherlabs/corral-packages/dist/aws-registry-standalone-enabled-2.15.1-2.7.1-1.11.0\n  hasCleanup: false\n  hasDebug: true\ncorralRancherHA:\n  name: rancherha\nflags:\n  desiredflags: UseExistingRegistries\nprovisioningInput:\n  cni:\n  - calico\n  k3sKubernetesVersion:\n  - v1.23.15-k3s1 \n  nodeProviders:\n  - ec2\n  nodesAndRoles:\n  - controlplane: true\n    etcd: true\n    quantity: 1\n    worker: true\n  nodesAndRolesRKE1:\n  - controlplane: true\n    etcd: true\n    quantity: 3\n    worker: true\n  providers:\n  - aws\n  rke1KubernetesVersion:\n  - v1.24.9-rancher1-1 \n  rke2KubernetesVersion:\n  - v1.23.13-rke2r1 \nrancher:\n  host: izrancher7.qa.rancher.space\n  adminToken: < Automatically generated if the UseExistingRegistries flag is not set >\n  adminPassword: \n  insecure: true\n  cleanup: true\n  caFile: \"\"\n  caCerts: \"\"\n  clusterName: auto-noauthregcluster-ezgrq\n  shellImage: \"\"\nregistries:\n  existingAuthRegistry:\n    password: e04090bb395d\n    url: <REDACTED>\n    username: corral\n  ecrRegistryConfig:\n    url: <ID>.dkr.ecr.us-west-1.amazonaws.com\n    password: <REDACTED>\n    awsAccessKeyId: <REDACTED>\n    awsSecretAccessKey: <REDACTED>\n  existingNoAuthRegistry: <REDACTED>\n  registryConfigNames:\n  - registryauthdisabled\n  - registryauthenabled\n  - corralecr\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML for Global Roles v2 Testing\nDESCRIPTION: A comprehensive YAML configuration template for setting up Global Roles v2 tests. It includes Rancher server details, provisioning inputs for downstream clusters, AWS credentials, machine configuration parameters, and SSH path settings.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/rbac/globalrolesv2/README.md#2025-04-10_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrancher:\n  host: \"rancher_server_address\"\n  adminToken: \"rancher_admin_token\"\n  insecure: True #optional\n  cleanup: True #optional\n  clusterName: \"downstream_cluster_name\"\nprovisioningInput:\n machinePools:\n - machinePoolConfig:                    \n     etcd: true                            \n     controlplane: true\n     worker: true\n     quantity: 1\n nodePools:\n - nodeRoles:\n     etcd: true\n     controlplane: true\n     worker: true\n     quantity: 1\n rke1KubernetesVersion:\n   - \"v1.28.10-rancher1-1\"\n rke2KubernetesVersion:\n   - \"v1.28.10+rke2r1\"\n k3sKubernetesVersion:\n   - \"v1.28.10+k3s1\"\n cni:\n   - \"calico\"\n providers:\n   - \"aws\"\n nodeProviders:\n   - \"ec2\"\nawsCredentials:\n accessKey: \"<Your Access Key>\"\n secretKey: \"<Your Secret Key>\"\n defaultRegion: \"us-east-2\"\n \nawsMachineConfig:\n region: \"us-east-2\"\n instanceType: \"t3a.xlarge\"\n sshUser: \"ubuntu\"\n vpcId: \"\"\n volumeType: \"gp2\"\n zone: \"a\"\n retries: 5\n rootSize: 50\n securityGroup:\n   - \"rancher-nodes\"\n \nawsEC2Configs:\n region: \"us-east-2\"\n awsAccessKeyID: \"<Your Access Key>\"\n awsSecretAccessKey: \"<Your Secret Key>\"\n awsEC2Config:\n   - instanceType: \"t3a.xlarge\"\n     awsRegionAZ: \"\"\n     awsAMI: \"<AMI>\"\n     awsSecurityGroups: [\"sg-0e753fd5550206e55\"]\n     awsSSHKeyName: \"<Your ssh key>\"\n     awsCICDInstanceTag: \"rancher-validation\"\n     awsIAMProfile: \"EngineeringUsersUS\"\n     awsUser: \"ubuntu\"\n     volumeSize: 50\n     roles: [\"etcd\", \"controlplane\", \"worker\"]\n     isWindows: false\nsshPath:\n sshPath: \"<Your ssh path>\"\n```\n\n----------------------------------------\n\nTITLE: Running Custom RKE2 Cluster Tests with Go\nDESCRIPTION: Commands for running custom RKE2 cluster provisioning tests using Go test tags. Includes examples for standard and dynamic input tests.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/rke2/README.md#2025-04-10_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCustomClusterRKE2ProvisioningTestSuite/TestProvisioningRKE2CustomCluster\"\ngotestsum --format standard-verbose --packages=github.com/rancher/rancher/tests/v2/validation/provisioning/rke2 --junitfile results.xml -- -timeout=60m -tags=validation -v -run \"TestCustomClusterRKE2ProvisioningTestSuite/TestProvisioningRKE2CustomClusterDynamicInput\"\n```\n\n----------------------------------------\n\nTITLE: Defining Test Method Naming Convention for Rancher Client\nDESCRIPTION: Specifies the format for naming test methods in the Rancher client project. The convention includes resource name, optional fields, operation, and an optional order number for multiple test cases.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/validation/tests/v1_api/README.md#2025-04-10_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ntest_{resource_name}_[with_{field}]_{operation}[_{order_number}]\n```\n\n----------------------------------------\n\nTITLE: Configuring Provisioning Input for Downstream Clusters in YAML\nDESCRIPTION: Provisioning configuration for downstream clusters specifying CNI options, Kubernetes versions for different distributions, node providers, and node roles. All Kubernetes versions must match those in rancher-images.txt.\nSOURCE: https://github.com/rancher/rancher/blob/main/tests/v2/validation/provisioning/registries/README.md#2025-04-10_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nprovisioningInput:\n  cni:\n  - calico\n  k3sKubernetesVersion:\n  - v1.24.7+k3s1\n  nodeProviders:\n  - ec2\n  nodesAndRoles:\n  - controlplane: true\n    etcd: true\n    quantity: 1\n    worker: true\n  nodesAndRolesRKE1:\n  - controlplane: true\n    etcd: true\n    quantity: 3\n    worker: true\n  providers:\n  - aws\n  rke1KubernetesVersion:\n  - v1.23.12-rancher1-1\n  rke2KubernetesVersion:\n  - v1.24.7+rke2r1\n```"
  }
]
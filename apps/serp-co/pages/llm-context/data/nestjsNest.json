[
  {
    "owner": "nestjs",
    "repo": "nest",
    "content": "TITLE: Running NestJS Application\nDESCRIPTION: Commands for running the NestJS application in development, watch, and production modes using npm scripts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/28-sse/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Modes\nDESCRIPTION: These commands demonstrate how to run a NestJS application in different modes: development, watch mode, and production. Each command uses npm scripts defined in the project's package.json file.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/posts-application/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Using NestJS Common Decorators in TypeScript\nDESCRIPTION: Demonstrates the usage of common decorators like @Controller() and @Injectable() provided by the NestJS common package. These decorators are used to define controllers and injectable services in a NestJS application.\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/common/PACKAGE.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n@Controller()\n@Injectable()\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Applications in Different Environments\nDESCRIPTION: Commands for running a NestJS application in development, watch mode, and production environments using npm scripts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/users-application/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Testing NestJS Application\nDESCRIPTION: Commands for running unit tests, end-to-end tests, and generating test coverage reports using npm scripts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/28-sse/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for running different types of tests in a NestJS application, including unit tests, end-to-end tests, and generating test coverage reports. These execute the test scripts defined in package.json.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/26-queues/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Applications in Different Environments\nDESCRIPTION: Commands for running a NestJS application in development, watch, and production modes. Each command triggers a different npm script configured in package.json.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/gateway/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Executing File Upload Example in NestJS\nDESCRIPTION: Instructions for starting the NestJS server and testing file upload functionality using curl. This demonstrates uploading a file (package.json) with additional form data (name parameter) to the /file endpoint.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/29-file-upload/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm run start # OR npm run start:dev\n# in another terminal\ncurl http://localhost:3000/file -F 'file=@./package.json' -F 'name=test'\n```\n\n----------------------------------------\n\nTITLE: Starting the NestJS Development Server\nDESCRIPTION: Command to start the NestJS application in development mode with hot-reloading enabled.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/22-graphql-prisma/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start:dev\n```\n\n----------------------------------------\n\nTITLE: Querying Combined Data in GraphQL Federation\nDESCRIPTION: Example GraphQL query that retrieves a user with their associated posts, demonstrating how the gateway combines data from multiple services. It requires a userId parameter and returns the user's id, name and their posts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/README.md#2025-04-23_snippet_3\n\nLANGUAGE: gql\nCODE:\n```\nquery getUserWithPosts($userId: ID!) {\n  getUser(id: $userId) {\n    id\n    name\n    posts {\n      authorId\n      id\n      title\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating TypeScript Type Definitions from GraphQL Schema\nDESCRIPTION: Command to generate TypeScript type definitions based on the GraphQL schema, enabling type safety in the NestJS application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/22-graphql-prisma/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run generate:typings\n```\n\n----------------------------------------\n\nTITLE: Configuring Fastify Server for Remote Access in NestJS\nDESCRIPTION: This code snippet shows how to configure the NestJS application to listen on all network interfaces (0.0.0.0) when running on a remote machine. This is necessary to allow external connections to reach the application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/17-mvc-fastify/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait app.listen(3000, '0.0.0.0')\n```\n\n----------------------------------------\n\nTITLE: Creating SQLite Database with Prisma Schema\nDESCRIPTION: Command to initialize the SQLite database and create tables according to the Prisma schema definition using Prisma's db push feature.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/22-graphql-prisma/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx prisma db push\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Modes\nDESCRIPTION: Commands for running a NestJS application in development, watch, and production modes. The different modes offer varying levels of optimization and development features.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/gateway/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Starting the GraphQL Federation Gateway in NestJS\nDESCRIPTION: Command to navigate to the gateway directory and start the federation gateway, which combines the schemas from the users and posts sub-graphs.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd gateway && npm run start\n```\n\n----------------------------------------\n\nTITLE: Starting NestJS Application with Sequelize Integration\nDESCRIPTION: Command to start the NestJS application that uses Sequelize for database operations.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/07-sequelize/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: These commands show how to run different types of tests in a NestJS project: unit tests, end-to-end (e2e) tests, and test coverage. Each command uses npm scripts defined in the project's package.json file.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/posts-application/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Configuring Fastify Server Listen Address in NestJS\nDESCRIPTION: Sets up a Fastify server to listen on all network interfaces (0.0.0.0) on port 3000. This configuration is necessary when running the NestJS application on a remote machine to allow external connections.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/10-fastify/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nawait app.listen(3000, '0.0.0.0')\n```\n\n----------------------------------------\n\nTITLE: Starting the Users Application in NestJS GraphQL Federation\nDESCRIPTION: Command to navigate to the users-application directory and start the users service, which serves as one of the sub-graphs in the federation.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd users-application && npm run start\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies in Bash\nDESCRIPTION: Command for installing all dependencies required for a NestJS project. This should be run after cloning the repository to download all necessary packages specified in package.json.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/26-queues/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for executing different types of tests in a NestJS application. Includes options for unit tests, end-to-end tests, and generating test coverage reports.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/gateway/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies\nDESCRIPTION: Command to install all required dependencies for a NestJS project using npm.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/users-application/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for executing different types of tests in a NestJS application. This includes unit tests, end-to-end tests, and generating test coverage reports to ensure code quality.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/25-dynamic-modules/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies\nDESCRIPTION: Command to install all required dependencies for a NestJS project using npm.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/28-sse/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for running unit tests, end-to-end tests, and generating test coverage reports using npm scripts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/users-application/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all required dependencies for a NestJS project. This is typically the first step after cloning a NestJS repository.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for a NestJS project using npm. It should be run in the project's root directory after cloning or setting up the initial project structure.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/posts-application/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Applications in Different Modes\nDESCRIPTION: Commands for running a NestJS application in development, watch, and production modes. Each command serves a different purpose in the development workflow, from basic development to production deployment.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/25-dynamic-modules/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Modes\nDESCRIPTION: Commands to run the NestJS application in development, watch, and production modes. These commands use npm scripts defined in the project's package.json.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/27-scheduling/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Applications in Different Modes\nDESCRIPTION: Commands to run a NestJS application in different environments: development mode, watch mode for auto-reloading during development, and production mode for deployment.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/users-application/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Managing Docker Container for MySQL Database\nDESCRIPTION: Commands for starting and stopping the Docker container using docker-compose\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/05-sql-typeorm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up\n```\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Starting NestJS Application with MongoDB and TypeORM\nDESCRIPTION: Command to start the NestJS application that uses MongoDB with TypeORM. This runs the sample project after all dependencies and the database are set up.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/13-mongo-typeorm/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Application Dependencies with npm\nDESCRIPTION: Command to install all necessary dependencies for a NestJS application using npm package manager. This should be run before attempting to start or test the application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/gateway/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands to run different types of tests in a NestJS project, including unit tests, end-to-end tests, and test coverage. These use npm scripts defined in the project's package.json.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/27-scheduling/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Container for MongoDB\nDESCRIPTION: Command to start the MongoDB container using docker-compose configuration.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/06-mongoose/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for executing different types of tests in a NestJS application: unit tests, end-to-end (e2e) tests, and test coverage reports.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/users-application/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Starting NestJS Application\nDESCRIPTION: Command to start the NestJS application in development mode\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/14-mongoose-base/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands to execute unit tests, end-to-end tests, and generate test coverage reports for a NestJS application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/posts-application/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS Mongoose Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/14-mongoose-base/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Container for NestJS Sequelize Example\nDESCRIPTION: Command to start the Docker container defined in docker-compose.yml for the NestJS Sequelize example.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/07-sequelize/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Common NestJS Development Scripts\nDESCRIPTION: Common NPM scripts used for building, testing, and linting NestJS packages.\nSOURCE: https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# build all packages and move to \"sample\" directories\n$ npm run build\n\n# run the full unit tests suite\n$ npm run test\n\n# run integration tests\n# docker is required(!)\n$ sh scripts/run-integration.sh\n\n# run linter\n$ npm run lint\n\n# build all packages and put them near to their source .ts files\n$ npm run build:prod\n```\n\n----------------------------------------\n\nTITLE: Stopping Docker Container for NestJS Sequelize Example\nDESCRIPTION: Command to stop and remove the Docker container after running the NestJS Sequelize example.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/07-sequelize/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Modes\nDESCRIPTION: Commands to run a NestJS application in development, watch, and production modes using npm scripts.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/posts-application/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Starting the Posts Application in NestJS GraphQL Federation\nDESCRIPTION: Command to navigate to the posts-application directory and start the posts service, which serves as another sub-graph in the federation.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd posts-application && npm run start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS GraphQL Project\nDESCRIPTION: Command to install all required npm dependencies for the NestJS GraphQL project\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/12-graphql-schema-first/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS Prisma GraphQL Project\nDESCRIPTION: Command to install the required npm dependencies for the NestJS Prisma GraphQL sample project.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/22-graphql-prisma/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Posts Application in GraphQL Federation\nDESCRIPTION: Command to start the posts sub-graph application, which should be executed before starting the gateway.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/README.md#2025-04-23_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd posts-application && npm run start\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install the necessary dependencies for a NestJS project using npm. This should be run in the project root directory.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/27-scheduling/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS TypeORM Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/05-sql-typeorm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS MongoDB TypeORM Sample\nDESCRIPTION: Command to install the necessary dependencies for the NestJS MongoDB TypeORM sample project.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/13-mongo-typeorm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS Mongoose Project\nDESCRIPTION: Command to install project dependencies via npm package manager.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/06-mongoose/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Users Application in GraphQL Federation\nDESCRIPTION: Command to start the users sub-graph application, which should be executed first before starting the gateway.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/README.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd users-application && npm run start\n```\n\n----------------------------------------\n\nTITLE: Querying Combined User and Posts Data with GraphQL Federation\nDESCRIPTION: Example GraphQL query that demonstrates how to fetch a user by ID along with their associated posts across the federated graph. This showcases the key benefit of federation - querying related data across multiple services in a single request.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/31-graphql-federation-code-first/README.md#2025-04-23_snippet_3\n\nLANGUAGE: gql\nCODE:\n```\nquery getUserWithPosts($userId: ID!) {\n  getUser(id: $userId) {\n    id\n    name\n    posts {\n      authorId\n      id\n      title\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Starting NestJS Application\nDESCRIPTION: Command to start the NestJS application in development mode\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/05-sql-typeorm/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS Swagger Project\nDESCRIPTION: Command to install the required dependencies for the NestJS Swagger sample project using npm.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/11-swagger/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Modes\nDESCRIPTION: Commands for starting a NestJS application in development, watch mode, and production environments. These commands execute the corresponding npm scripts defined in the project's package.json file.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/26-queues/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all necessary dependencies for a NestJS application using npm package manager.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/posts-application/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: NestJS Development Environment Setup\nDESCRIPTION: Commands for setting up the NestJS development environment, including package installation and preparation script.\nSOURCE: https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ npm ci --legacy-peer-deps # (or yarn install)\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ sh scripts/prepare.sh\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all required dependencies for a NestJS project. This should be run after cloning the NestJS starter repository to set up the development environment.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/25-dynamic-modules/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests in NestJS Application\nDESCRIPTION: Commands for running different types of tests in a NestJS application, including unit tests, end-to-end tests, and generating test coverage reports.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/gateway/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Starting GraphQL Federation Gateway\nDESCRIPTION: Command to start the gateway application after both sub-graphs are running. The gateway fetches and combines schemas from the sub-graphs.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/README.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd gateway && npm run start\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Container for MongoDB in NestJS Sample\nDESCRIPTION: Command to start the Docker container for MongoDB using docker-compose. This sets up the required MongoDB instance for the NestJS application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/13-mongo-typeorm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: NestJS with Fastify Platform Performance Metrics\nDESCRIPTION: Benchmark results for NestJS with @nestjs/platform-fastify showing latency averaging 34.41ms and handling 295k requests in 10.17s with 45.1 MB read.\nSOURCE: https://github.com/nestjs/nest/blob/master/benchmarks/all_output.txt#2025-04-23_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning 10s test @ http://localhost:3000\n1024 connections\n\nLatency: Avg 34.41 ms, Max 245 ms\nReq/Sec: Avg 29470.4, Min 24907\nBytes/Sec: Avg 4.51 MB, Min 3.81 MB\n\n295k requests in 10.17s, 45.1 MB read\n```\n\n----------------------------------------\n\nTITLE: Express Performance Metrics\nDESCRIPTION: Benchmark results for Express showing latency averaging 61.88ms and handling 165k requests in 10.17s with 35.4 MB read.\nSOURCE: https://github.com/nestjs/nest/blob/master/benchmarks/all_output.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning 10s test @ http://localhost:3000\n1024 connections\n\nLatency: Avg 61.88 ms, Max 747 ms\nReq/Sec: Avg 16454.41, Min 8402\nBytes/Sec: Avg 3.54 MB, Min 1.81 MB\n\n165k requests in 10.17s, 35.4 MB read\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all dependencies required for a NestJS project using npm package manager.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/32-graphql-federation-schema-first/users-application/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: NestJS with Express Platform Performance Metrics\nDESCRIPTION: Benchmark results for NestJS with @nestjs/platform-express showing latency averaging 65.44ms and handling 156k requests in 10.24s with 33.8 MB read.\nSOURCE: https://github.com/nestjs/nest/blob/master/benchmarks/all_output.txt#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning 10s test @ http://localhost:3000\n1024 connections\n\nLatency: Avg 65.44 ms, Max 325 ms\nReq/Sec: Avg 15640, Min 14182\nBytes/Sec: Avg 3.38 MB, Min 3.06 MB\n\n156k requests in 10.24s, 33.8 MB read\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for NestJS Sequelize Project\nDESCRIPTION: Command to install the necessary dependencies for the NestJS project with Sequelize integration.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/07-sequelize/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fastify Performance Metrics\nDESCRIPTION: Benchmark results for Fastify showing latency averaging 31.62ms and handling 320k requests in 10.18s with 48.7 MB read.\nSOURCE: https://github.com/nestjs/nest/blob/master/benchmarks/all_output.txt#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nRunning 10s test @ http://localhost:3000\n1024 connections\n\nLatency: Avg 31.62 ms, Max 1232 ms\nReq/Sec: Avg 32030.4, Min 19931\nBytes/Sec: Avg 4.87 MB, Min 3.03 MB\n\n320k requests in 10.18s, 48.7 MB read\n```\n\n----------------------------------------\n\nTITLE: Git Commit and Push Commands\nDESCRIPTION: Commands for committing changes and pushing the branch to GitHub for NestJS contribution.\nSOURCE: https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -a\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin my-fix-branch\n```\n\n----------------------------------------\n\nTITLE: Creating Git Branch for NestJS Contribution\nDESCRIPTION: Command to create a new git branch for implementing fixes or features in NestJS.\nSOURCE: https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b my-fix-branch master\n```\n\n----------------------------------------\n\nTITLE: Displaying Sponsor Logos in HTML Table\nDESCRIPTION: This HTML snippet creates a table to display logos and links for NestJS project sponsors. It uses inline styles for alignment and sizing of sponsor images.\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/common/Readme.md#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.swingdev.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/swingdev-logo.svg#1\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.novologic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/novologic.png\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://mantro.net/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/mantro-logo.svg\" width=\"95\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://triplebyte.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/triplebyte.png\" width=\"107\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://nearpod.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/nearpod-logo.svg\" width=\"100\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://genuinebee.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/genuinebee.svg\" width=\"97\" valign=\"middle\" /></a></td>\n</tr>\n<!-- Additional rows omitted for brevity -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Displaying Sponsor Logos in HTML Table\nDESCRIPTION: This HTML snippet creates a table to display sponsor logos with links to their respective websites. It organizes the logos in a grid format, providing visual representation of NestJS project sponsors.\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/platform-socket.io/Readme.md#2025-04-23_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.swingdev.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/swingdev-logo.svg#1\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.novologic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/novologic.png\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://mantro.net/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/mantro-logo.svg\" width=\"95\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://triplebyte.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/triplebyte.png\" width=\"107\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://nearpod.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/nearpod-logo.svg\" width=\"100\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://genuinebee.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/genuinebee.svg\" width=\"97\" valign=\"middle\" /></a></td>\n</tr>\n<!-- Additional rows omitted for brevity -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Displaying Backers Using OpenCollective Image in HTML\nDESCRIPTION: This HTML snippet embeds an image from OpenCollective showing the backers of the NestJS project. It uses an anchor tag to link to the OpenCollective page.\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/common/Readme.md#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://opencollective.com/nest\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers.svg?width=1000\"></a>\n```\n\n----------------------------------------\n\nTITLE: Stopping Docker Container for MongoDB in NestJS Sample\nDESCRIPTION: Command to stop and remove the Docker container for MongoDB after running the sample application.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/13-mongo-typeorm/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Stopping Docker Container\nDESCRIPTION: Command to stop and remove the MongoDB Docker container.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/06-mongoose/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Starting NestJS Application\nDESCRIPTION: Command to start the NestJS application in development mode.\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/06-mongoose/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Container for MongoDB\nDESCRIPTION: Command to start the MongoDB container using Docker Compose\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/14-mongoose-base/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Stopping Docker Container\nDESCRIPTION: Command to stop and remove the Docker container\nSOURCE: https://github.com/nestjs/nest/blob/master/sample/14-mongoose-base/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Post-Merge Branch Cleanup Commands\nDESCRIPTION: Series of git commands to clean up after a pull request is merged, including deleting branches and updating master.\nSOURCE: https://github.com/nestjs/nest/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin --delete my-fix-branch\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout master -f\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit branch -D my-fix-branch\n```\n\nLANGUAGE: shell\nCODE:\n```\ngit pull --ff upstream master\n```\n\n----------------------------------------\n\nTITLE: Rendering Sponsors Table in HTML/Markdown\nDESCRIPTION: HTML table structure displaying sponsor logos and links in a grid format with centered alignment and consistent image sizing\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/testing/Readme.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<table>\n<tr>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.swingdev.io\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/swingdev-logo.svg#1\" width=\"110\" valign=\"middle\" /></a></td>\n<td align=\"center\" valign=\"middle\"><a href=\"https://www.novologic.com/\" target=\"_blank\"><img src=\"https://nestjs.com/img/logos/novologic.png\" width=\"110\" valign=\"middle\" /></a></td>\n<!-- ... additional table cells ... -->\n</tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Rendering OpenCollective Backers in Markdown\nDESCRIPTION: Markdown link with embedded backers image from OpenCollective\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/testing/Readme.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a href=\"https://opencollective.com/nest\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers.svg?width=1000\"></a>\n```\n\n----------------------------------------\n\nTITLE: Displaying Backer Information with OpenCollective\nDESCRIPTION: This HTML snippet embeds an image from OpenCollective showing the backers of the NestJS project. It provides a visual representation of individual supporters.\nSOURCE: https://github.com/nestjs/nest/blob/master/packages/platform-socket.io/Readme.md#2025-04-23_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"https://opencollective.com/nest\" target=\"_blank\"><img src=\"https://opencollective.com/nest/backers.svg?width=1000\"></a>\n```"
  }
]
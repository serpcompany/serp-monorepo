[
  {
    "owner": "googleapis",
    "repo": "google-cloud-node",
    "content": "TITLE: Analyzing Entity Sentiment with Google Cloud Language API in Node.js\nDESCRIPTION: This code snippet shows how to perform entity sentiment analysis on a given text using Google Cloud's Language API. It requires the 'google-cloud-language' library. The function analyzes text for both entities and their associated sentiment, outputting results for each entity's sentiment score and magnitude.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function analyzeEntitySentiment(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.analyzeEntitySentiment({document});\n  const entities = result.entities;\n  console.log('Entity Sentiment:');\n  entities.forEach(entity => {\n    console.log(`\tName: ${entity.name}, Sentiment Score: ${entity.sentiment.score}, Sentiment Magnitude: ${entity.sentiment.magnitude}`);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet updates the IAM policy for a resource in the Google Cloud Security Center, necessary for managing access and permissions effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Google Cloud AutoML API Sample Methods\nDESCRIPTION: A collection of Node.js methods for interacting with Google Cloud AutoML API. These samples demonstrate various operations including creating/deleting datasets and models, importing/exporting data, managing model evaluations, and handling specifications for tables and columns.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_22\n\n\n\n----------------------------------------\n\nTITLE: Checking a URI against the Web Risk API using Node.js\nDESCRIPTION: This snippet demonstrates how to use the Web Risk API client library to check a URI for potential threats like malware, social engineering, and unwanted software. It creates a client, builds a request with the URI and threat types to check, and calls the searchUris API method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * Check a URI against the WebRisk API.\n * @param {string} uri A URI to pass to the Web Risk API.\n */\nasync function quickstart(uri) {\n  // Create the WebRisk client library.\n  const {WebRiskServiceClient, protos} = require('@google-cloud/web-risk');\n  const client = new WebRiskServiceClient();\n\n  // Create an API request to check for malware, social engineering,\n  // and unwanted software.\n  const request = {\n    uri: uri,\n    threatTypes: [\n      protos.google.cloud.webrisk.v1.ThreatType.MALWARE,\n      protos.google.cloud.webrisk.v1.ThreatType.SOCIAL_ENGINEERING,\n      protos.google.cloud.webrisk.v1.ThreatType.UNWANTED_SOFTWARE,\n    ],\n  };\n\n  // call the WebRisk searchUris API.\n  const {threat} = (await client.searchUris(request))[0];\n  if (threat) {\n    console.info(threat);\n  } else {\n    console.info('no threats found');\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Notebooks API\nDESCRIPTION: This code sample provides a quickstart guide for using the Google Cloud Notebooks API. It demonstrates basic usage of the API and is intended as an entry point for developers. The script is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Annotating Text with Google Cloud Natural Language API (v2)\nDESCRIPTION: This snippet demonstrates how to use the annotate_text method of the Language Service API (v2) to perform multiple types of analysis on a text in a single request. It requires the google-cloud-language package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v2/language_service.annotate_text.js\n```\n\n----------------------------------------\n\nTITLE: Making Predictions with Prediction Service using Node.js\nDESCRIPTION: This snippet shows how to use the predict method of the PredictionService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/prediction_service.predict.js\n```\n\n----------------------------------------\n\nTITLE: Using the Generative Language API Client (Node.js)\nDESCRIPTION: This snippet demonstrates how to use the Generative Language API client in Node.js. It includes comments that outline required variables, such as model name, prompt, temperature, and output parameters. The code initializes a client and calls the generateText method with a constructed request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The model name to use with the format name=models/{model}.\n */\n// const model = 'abc123'\n/**\n *  Required. The free-form input text given to the model as a prompt.\n *  Given a prompt, the model will generate a TextCompletion response it\n *  predicts as the completion of the input text.\n */\n// const prompt = {\n//  text: 'abc123'\n// }\n/**\n *  Controls the randomness of the output.\n *  Note: The default value varies by model, see the `Model.temperature`\n *  attribute of the `Model` returned the `getModel` function.\n *  Values can range from 0.0,1.0,\n *  inclusive. A value closer to 1.0 will produce responses that are more\n *  varied and creative, while a value closer to 0.0 will typically result in\n *  more straightforward responses from the model.\n */\n// const temperature = 1234\n/**\n *  Number of generated responses to return.\n *  This value must be between 1, 8, inclusive. If unset, this will default\n *  to 1.\n */\n// const candidateCount = 1234\n/**\n *  The maximum number of tokens to include in a candidate.\n *  If unset, this will default to 64.\n */\n// const maxOutputTokens = 1234\n/**\n *  The maximum cumulative probability of tokens to consider when sampling.\n *  The model uses combined Top-k and nucleus sampling.\n *  Tokens are sorted based on their assigned probabilities so that only the\n *  most liekly tokens are considered. Top-k sampling directly limits the\n *  maximum number of tokens to consider, while Nucleus sampling limits number\n *  of tokens based on the cumulative probability.\n *  Note: The default value varies by model, see the `Model.top_p`\n *  attribute of the `Model` returned the `getModel` function.\n */\n// const topP = 1234\n/**\n *  The maximum number of tokens to consider when sampling.\n *  The model uses combined Top-k and nucleus sampling.\n *  Top-k sampling considers the set of `top_k` most probable tokens.\n *  Defaults to 40.\n *  Note: The default value varies by model, see the `Model.top_k`\n *  attribute of the `Model` returned the `getModel` function.\n */\n// const topK = 1234\n/**\n *  The set of character sequences (up to 5) that will stop output generation.\n *  If specified, the API will stop at the first appearance of a stop\n *  sequence. The stop sequence will not be included as part of the response.\n */\n// const stopSequences = 'abc123'\n\n// Imports the Generativelanguage library\nconst {TextServiceClient} = require('@google-ai/generativelanguage').v1beta2;\n\n// Instantiates a client\nconst generativelanguageClient = new TextServiceClient();\n\nasync function callGenerateText() {\n  // Construct request\n  const request = {\n    model,\n    prompt,\n  };\n\n  // Run request\n  const response = await generativelanguageClient.generateText(request);\n  console.log(response);\n}\n\ncallGenerateText();\n```\n\n----------------------------------------\n\nTITLE: Dialogflow Samples Overview\nDESCRIPTION: Collection of sample scripts demonstrating different Dialogflow API operations in Node.js, including agent management, context manipulation, and dataset interactions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## Samples\\n\\nSamples are in the [`samples/`](https://github.com/googleapis/google-cloud-node/tree/main/packages/google-cloud-dialogflow/samples) directory. Each sample's `README.md` has instructions for running its sample.\n```\n\n----------------------------------------\n\nTITLE: Running Model Service Sample - JavaScript\nDESCRIPTION: Command to execute the model service sample for listing models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1/model_service.list_models.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up Entry with Node.js\nDESCRIPTION: This JavaScript script demonstrates how to look up an entry in Google Cloud Data Catalog by its unique identifier, using the `@google-cloud/datacatalog` package. Command-line executable, this operation is vital for targeted data retrieval tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.lookup_entry.js\n```\n\n----------------------------------------\n\nTITLE: Image Annotation Operations in Google Cloud Vision\nDESCRIPTION: Samples demonstrating batch and async image annotation methods for processing multiple images and files using the Google Cloud Vision API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimage_annotator.async_batch_annotate_files\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimage_annotator.async_batch_annotate_images\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimage_annotator.batch_annotate_files\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimage_annotator.batch_annotate_images\n```\n\n----------------------------------------\n\nTITLE: Interacting with Google Cloud Node.js Generative Services\nDESCRIPTION: This snippet showcases the use of Google Cloud generative services in Node.js to generate content, embed contents, and count tokens. Configuration of Google Cloud SDK and node environment is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.batch_embed_contents.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.bidi_generate_content.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.count_tokens.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.embed_content.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.generate_answer.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.generate_content.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/generative_service.stream_generate_content.js\n```\n\n----------------------------------------\n\nTITLE: AutoML Export Data in Node.js\nDESCRIPTION: This sample demonstrates how to export data using the AutoML API in Node.js. The `exportData` function is called. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.export_data\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Generator in Node.js\nDESCRIPTION: This snippet retrieves specific details about a generator within a Dialogflow environment, enabling developers to inspect its properties and configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_96\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Get generator\nconst {GeneratorsClient} = require('@google-cloud/dialogflow');\nconst client = new GeneratorsClient();\n\nasync function getGenerator() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.getGenerator(request);\n  console.log(response);\n}\ngetGenerator();\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Quickstart Sample\nDESCRIPTION: Provides a quickstart example for using Cloud Tasks with the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Authentication in Node.js\nDESCRIPTION: Example configuration object for setting up Google Cloud authentication. Demonstrates how to specify project ID and keyfile location for service account authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/docs/authentication.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar config = {\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n};\n```\n\n----------------------------------------\n\nTITLE: Using Google BigQuery Connection Node.js Client Library\nDESCRIPTION: This code snippet demonstrates how to use the Google BigQuery Connection client library in Node.js. It imports the library, creates a client, and lists connections for a specified project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {\n  ConnectionServiceClient,\n} = require('@google-cloud/bigquery-connection');\n\n// Creates a client\nconst client = new ConnectionServiceClient();\n\n// project = 'my-project' // Project to list connections for.\n\nconst parent = `projects/${project}/locations/US`;\n\nasync function listConnections() {\n  const [connections] = await client.listConnections({\n    parent: parent,\n  });\n\n  console.info(`found ${connections.length} connections:`);\n  console.info(connections);\n}\nconst listConnectionsResponse = listConnections();\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.getProduct method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to retrieve product information from Google Cloud Vision's product search catalog. This fetches the metadata for a specific product by its name.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.get_product.js\n```\n\n----------------------------------------\n\nTITLE: Executing Security Center API Commands in Node.js\nDESCRIPTION: Collection of command line usage examples for various Security Center API endpoints including deleting notification configs, managing resource values, handling BigQuery exports, and managing IAM policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.delete_notification_config.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.delete_resource_value_config.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_big_query_export.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_iam_policy.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_mute_config.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_notification_config.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_resource_value_config.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_simulation.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_source.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.get_valued_resource.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.group_findings.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.list_attack_paths.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.list_big_query_exports.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.list_findings.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.list_mute_configs.js\n```\n\n----------------------------------------\n\nTITLE: Executing Text Service Methods with Node.js\nDESCRIPTION: Collection of Node.js commands to interact with text service endpoints including batch_embed_text, count_text_tokens, embed_text, and generate_text operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/text_service.batch_embed_text.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/text_service.count_text_tokens.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/text_service.embed_text.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/text_service.generate_text.js\n```\n\n----------------------------------------\n\nTITLE: Handling Conversational Service Requests in Node.js\nDESCRIPTION: This set of code snippets allows developers to create, delete, list, get, and update sessions and conversations using the Google Discovery Engine. Each snippet corresponds to a specific service method and demonstrates how to integrate the Google Cloud Node.js client library for these operations. Developers must have the Google Cloud SDK and appropriate credentials set up beforehand for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.converse_conversation\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.converse_conversation.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.create_conversation\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.create_conversation.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.create_session\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.create_session.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.delete_conversation\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.delete_conversation.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.delete_session\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.delete_session.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.get_answer\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.get_answer.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.get_conversation\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.get_conversation.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.get_session\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.get_session.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.list_conversations\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.list_conversations.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.list_sessions\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.list_sessions.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.update_conversation\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.update_conversation.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Conversational_search_service.update_session\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/conversational_search_service.update_session.js\n```\n\n----------------------------------------\n\nTITLE: Prediction Service: Predict Sample\nDESCRIPTION: Sample code for performing predictions using the Google Cloud AI Generative Language Prediction Service in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nPrediction Service Predict Sample\n```\n\n----------------------------------------\n\nTITLE: Bidirectional Content Generation with Generative Service in Javascript\nDESCRIPTION: This sample shows how to use the `bidiGenerateContent` method in the Generative Service to enable bidirectional content generation. It leverages the google-ai-generativelanguage package to interact with the generative AI model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Dialogflow CX - JavaScript\nDESCRIPTION: This snippet provides a quickstart example for using Dialogflow CX, which showcases initializing the client and executing a basic operation. It leverages the Dialogflow CX API to illustrate how to set up and use the services. Dependencies include the Dialogflow CX library. The function does not take parameters and is meant to demonstrate initial setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_155\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {SessionsClient} = require('@google-cloud/dialogflow-cx');\nconst client = new SessionsClient();\n\nasync function quickstart() {\n  // Sample initialization code here\n  console.log('Dialogflow CX client initialized');\n}\n\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Exporting Assets - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This snippet illustrates how to export assets using the Google Cloud Asset API. It requires Node.js and Google Cloud SDK for successful execution. Expected outputs include the exported asset data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for exporting assets\n```\n\n----------------------------------------\n\nTITLE: Google Analytics Data Quickstart\nDESCRIPTION: Introductory sample script demonstrating basic setup and usage of the Google Analytics Data API. Provides a starting point for developers new to the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nQuickstart\n```\n\n----------------------------------------\n\nTITLE: Validating an Address with the Google Maps Address Validation API in Node.js\nDESCRIPTION: Example of using the Address Validation API client to validate a US address. This snippet initializes the client, constructs a request with address information, and logs the validation response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-addressvalidation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The address being validated. Unformatted addresses should be\n *  submitted via `address_lines` google.type.PostalAddress.address_lines.\n *  The total length of the fields in this input must not exceed 300\n *  characters.\n *  Supported regions can be found in the\n *  FAQ (https://developers.google.com/maps/documentation/address-validation/faq#which_regions_are_currently_supported).\n *  The language_code google.type.PostalAddress.language_code  value in the\n *  input address is reserved for future uses and is ignored today. The\n *  validated address result will be populated based on the preferred language\n *  for the given address, as identified by the system.\n *  The Address Validation API ignores the values in\n *  recipients google.type.PostalAddress.recipients  and\n *  organization google.type.PostalAddress.organization. Any values in those\n *  fields will be discarded and not returned. Please do not set them.\n */\n// const address = {}\n/**\n *  This field must be empty for the first address validation request. If\n *  more requests are necessary to fully validate a single address (for\n *  example if the changes the user makes after the initial validation need to\n *  be re-validated), then each followup request must populate this field with\n *  the\n *  response_id google.maps.addressvalidation.v1.ValidateAddressResponse.response_id\n *  from the very first response in the validation sequence.\n */\n// const previousResponseId = 'abc123'\n/**\n *  Enables USPS CASS compatible mode. This affects _only_ the\n *  google.maps.addressvalidation.v1.ValidationResult.usps_data  field of\n *  google.maps.addressvalidation.v1.ValidationResult. Note: for USPS CASS\n *  enabled requests for addresses in Puerto Rico, a\n *  google.type.PostalAddress.region_code  of the `address` must be provided\n *  as \"PR\", or an google.type.PostalAddress.administrative_area  of the\n *  `address` must be provided as \"Puerto Rico\" (case-insensitive) or \"PR\".\n *  It's recommended to use a componentized `address`, or alternatively specify\n *  at least two google.type.PostalAddress.address_lines  where the first line\n *  contains the street number and name and the second line contains the city,\n *  state, and zip code.\n */\n// const enableUspsCass = true\n\n// Imports the Addressvalidation library\n// eslint-disable-next-line node/no-missing-require\nconst {AddressValidationClient} = require('@googlemaps/addressvalidation').v1;\n\n// Instantiates a client\nconst addressvalidationClient = new AddressValidationClient();\n\nasync function callValidateAddress() {\n  // Construct request\n  const request = {\n    address: {\n      regionCode: 'US',\n      addressLines: ['1600 Amphitheatre Pkwy', 'Mountain View CA 94040'],\n    },\n  };\n\n  // Run request\n  const response = await addressvalidationClient.validateAddress(request);\n  console.log(response);\n}\n\ncallValidateAddress();\n```\n\n----------------------------------------\n\nTITLE: Processing Documents with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to process a document using the Google Cloud DocumentAI API. It uses the document_processor_service to analyze and extract information from a document.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.process_document.js\n```\n\n----------------------------------------\n\nTITLE: Detecting Intent using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to detect intent using the Dialogflow API. It uses the sessions.detect_intent method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_77\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/sessions.detect_intent.js\n```\n\n----------------------------------------\n\nTITLE: Using DocumentAI Processor Service Methods\nDESCRIPTION: Collection of Node.js usage examples for Google Cloud DocumentAI processor service operations. Each command demonstrates how to execute different processor-related functions like enabling/disabling processors, evaluating versions, and processing documents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Disable processor\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.disable_processor.js\n\n// Enable processor\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.enable_processor.js\n\n// Evaluate processor version\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.evaluate_processor_version.js\n\n// Fetch processor types\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.fetch_processor_types.js\n\n// Get evaluation\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.get_evaluation.js\n\n// Get processor\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.get_processor.js\n\n// Get processor type\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.get_processor_type.js\n\n// Get processor version\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.get_processor_version.js\n\n// List evaluations\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.list_evaluations.js\n\n// List processor types\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.list_processor_types.js\n\n// List processor versions\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.list_processor_versions.js\n\n// List processors\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.list_processors.js\n\n// Process document\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.process_document.js\n\n// Review document\nnode packages/google-cloud-documentai/samples/generated/v1/document_processor_service.review_document.js\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.updateProduct method with Google Cloud Vision API in JavaScript\nDESCRIPTION: Sample code demonstrating how to update an existing product in Google Cloud Vision's product search catalog. This updates product metadata using the ProductSearch client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.update_product.js\n```\n\n----------------------------------------\n\nTITLE: Batch Translating Text using Google Cloud Translation API - JavaScript\nDESCRIPTION: Handles batch translation of text strings. The service facilitates translating multiple pieces of text at once and requires specification of source and target languages.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Batch translate text\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function batchTranslateText() {\n  // Your code here to batch translate text\n}\nbatchTranslateText();\n```\n\n----------------------------------------\n\nTITLE: Creating a Job with Google Cloud Batch Service in Node.js\nDESCRIPTION: This example script shows how to create a new job in the Google Cloud Batch service using Node.js. Prerequisites include having Google Cloud credentials set up and customizing the job configuration as required by the workload.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.create_job.js\"\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1alpha/batch_service.create_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Computing Routes with Google Maps Routing API in Node.js\nDESCRIPTION: Example demonstrating how to compute routes between origin and destination points using the Google Maps Routing API client. This code initializes a RoutesClient and makes a computeRoutes request with specified parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Origin waypoint.\n */\n// const origin = {}\n/**\n *  Required. Destination waypoint.\n */\n// const destination = {}\n/**\n *  Optional. A set of waypoints along the route (excluding terminal points),\n *  for either stopping at or passing by. Up to 25 intermediate waypoints are\n *  supported.\n */\n// const intermediates = 1234\n/**\n *  Optional. Specifies the mode of transportation.\n */\n// const travelMode = {}\n/**\n *  Optional. Specifies how to compute the route. The server\n *  attempts to use the selected routing preference to compute the route. If\n *   the routing preference results in an error or an extra long latency, then\n *  an error is returned. In the future, we might implement a fallback\n *  mechanism to use a different option when the preferred option does not give\n *  a valid result. You can specify this option only when the `travel_mode` is\n *  `DRIVE` or `TWO_WHEELER`, otherwise the request fails.\n */\n// const routingPreference = {}\n/**\n *  Optional. Specifies your preference for the quality of the polyline.\n */\n// const polylineQuality = {}\n/**\n *  Optional. Specifies the preferred encoding for the polyline.\n */\n// const polylineEncoding = {}\n/**\n *  Optional. The departure time. If you don't set this value, then this value\n *  defaults to the time that you made the request. If you set this value to a\n *  time that has already occurred, then the request fails.\n */\n// const departureTime = {}\n/**\n *  Optional. Specifies whether to calculate alternate routes in addition to the route.\n */\n// const computeAlternativeRoutes = true\n/**\n *  Optional. A set of conditions to satisfy that affect the way routes are\n *  calculated.\n */\n// const routeModifiers = {}\n/**\n *  Optional. The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\n *  information, see\n *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier. See\n *  Language Support (https://developers.google.com/maps/faq#languagesupport)\n *  for the list of supported languages. When you don't provide this value, the\n *  display language is inferred from the location of the route request.\n */\n// const languageCode = 'abc123'\n/**\n *  Optional. Specifies the units of measure for the display fields. This\n *  includes the `instruction` field in `NavigationInstruction`. The units of\n *  measure used for the route, leg, step distance, and duration are not\n *  affected by this value. If you don't provide this value, then the display\n *  units are inferred from the location of the request.\n */\n// const units = {}\n\n// Imports the Routing library\nconst {RoutesClient} = require('@googlemaps/routing').v2;\n\n// Instantiates a client\nconst routingClient = new RoutesClient();\n\nasync function callComputeRoutes() {\n  // Construct request\n  const request = {\n    origin,\n    destination,\n  };\n\n  // Run request\n  const response = await routingClient.computeRoutes(request);\n  console.log(response);\n}\n\ncallComputeRoutes();\n```\n\n----------------------------------------\n\nTITLE: Creating Entry with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code example demonstrates how to create an entry using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.create_entry.js\n```\n\n----------------------------------------\n\nTITLE: Counting Tokens with Generative Service in Javascript\nDESCRIPTION: This example demonstrates how to use the `countTokens` method of the Generative Service to determine the number of tokens in a given input. It relies on the google-ai-generativelanguage package for token counting functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Listing Recommendations Using Google Cloud Recommender API\nDESCRIPTION: Example demonstrating how to initialize the Recommender client and fetch recommendations for a specific project and recommender ID. The code shows the basic pattern for authenticating and making API calls to list recommendations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function listRecommendations() {\n  const {RecommenderClient} = require('@google-cloud/recommender');\n  const recommender = new RecommenderClient();\n\n  // parent = 'projects/my-project'; // Project to fetch recommendations for.\n  // recommenderId = 'google.compute.instance.MachineTypeRecommender';\n\n  const [recommendations] = await recommender.listRecommendations({\n    parent: recommender.projectLocationRecommenderPath(\n      project,\n      'global',\n      recommenderId\n    ),\n  });\n  console.info(`recommendations for ${recommenderId}:`);\n  for (const recommendation of recommendations) {\n    console.info(recommendation);\n  }\n  return recommendations;\n}\nconst recommendations = await listRecommendations();\n\n```\n\n----------------------------------------\n\nTITLE: Classifying Text with Google Cloud Language API in Node.js\nDESCRIPTION: This snippet demonstrates how to classify text into categories using the Google Cloud Language API. It requires the 'google-cloud-language' library as a prerequisite. The function analyzes the input text and outputs the classification categories with their confidence scores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function classifyText(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.classifyText({document});\n  const categories = result.categories;\n  console.log('Classification:');\n  categories.forEach(category => {\n    console.log(`\tCategory: ${category.name}, Confidence: ${category.confidence}`);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Secrets with Google Cloud Node.js\nDESCRIPTION: This snippet illustrates how to list all accessible secrets in a project using Node.js with Google Cloud Secret Manager API. It depends on the `@google-cloud/secret-manager` library. The primary parameter is the Google Cloud project ID. It outputs a list of secrets available within the specified project, aiding in secret management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.list_secrets.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Task in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to get information about a specific task in Google Cloud Run. It uses the Tasks.get_task method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/tasks.get_task.js\n```\n\n----------------------------------------\n\nTITLE: Installing and Testing Dependencies in Node.js\nDESCRIPTION: This snippet provides shell commands for setting up a Node.js environment, installing dependencies, running various tests, and fixing linting issues for the Google Cloud Node.js project. These commands are essential for any contributor to validate their code before submitting a pull request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Streaming Content Analysis using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to perform streaming analysis of content using the Dialogflow API. It utilizes the participants.streaming_analyze_content method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_66\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.streaming_analyze_content.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Query Corpus Example in Node.js\nDESCRIPTION: Outlines the execution of a JavaScript file to query a corpus with the Retriever service, dependent on Node.js installation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.query_corpus.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Data Labeling Node.js Client Library\nDESCRIPTION: This code snippet demonstrates how to use the Google Cloud Data Labeling client library in Node.js. It initializes the client, lists datasets for a given project, and logs the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {DataLabelingServiceClient} = require('@google-cloud/datalabeling');\nconst client = new DataLabelingServiceClient();\n\nasync function quickstart() {\n  const parent = client.projectPath(projectId);\n  const [result] = await client.listDatasets({parent});\n  console.log('Datasets:');\n  console.log(result);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Using AlloyDB Node.js Client Library\nDESCRIPTION: Example demonstrating how to initialize the AlloyDB client and list supported database flags. The code shows request construction and asynchronous iteration over results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The name of the parent resource. The required format is:\n *   * projects/{project}/locations/{location}\n *  Regardless of the parent specified here, as long it is contains a valid\n *  project and location, the service will return a static list of supported\n *  flags resources. Note that we do not yet support region-specific\n *  flags.\n */\n// const parent = 'abc123'\n/**\n *  Requested page size. Server may return fewer items than requested.\n *  If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n\n// Imports the Alloydb library\nconst {AlloyDBAdminClient} = require('@google-cloud/alloydb').v1alpha;\n\n// Instantiates a client\nconst alloydbClient = new AlloyDBAdminClient();\n\nasync function callListSupportedDatabaseFlags() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await alloydbClient.listSupportedDatabaseFlagsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListSupportedDatabaseFlags();\n```\n\n----------------------------------------\n\nTITLE: Creating an Instance in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet demonstrates how to create a new AlloyDB instance within a specified cluster, which is critical for application deployment. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function createInstance() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Managing Conversations in Dialogflow\nDESCRIPTION: Comprehensive set of sample codes demonstrating various conversation management operations like creating, completing, generating suggestions, and retrieving conversation details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.complete_conversation\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.create_conversation\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.generate_stateless_suggestion\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.generate_stateless_summary\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.generate_suggestions\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.get_conversation\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.ingest_context_references\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.list_conversations\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.list_messages\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.search_knowledge\n```\n\nLANGUAGE: javascript\nCODE:\n```\nConversations.suggest_conversation_summary\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.addProductToProductSet method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to add a product to a product set in Google Cloud Vision API. This associates an existing product with a product set for visual search capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.add_product_to_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Delete Chunk Example in Node.js\nDESCRIPTION: This code snippet illustrates executing a JavaScript file to delete a chunk using the Retriever service. Requires Node.js to be set up on your system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.delete_chunk.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Data Catalog Client Library\nDESCRIPTION: Example demonstrating how to create and manage tag templates and tags using the Data Catalog API. Shows initialization of the client, creation of tag templates with custom fields, lookup of catalog entries, and attaching tags to entries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Import the Google Cloud client library and create a client.\nconst {DataCatalogClient} = require('@google-cloud/datacatalog').v1;\nconst datacatalog = new DataCatalogClient();\n\nasync function quickstart() {\n  // Common fields.\n  let request;\n  let responses;\n\n  /**\n   * TODO(developer): Uncomment the following lines before running the sample.\n   */\n  // const projectId = 'my_project'; // Google Cloud Platform project\n  // const datasetId = 'demo_dataset';\n  // const tableId = 'trips';\n\n  // Currently, Data Catalog stores metadata in the\n  // us-central1 region.\n  const location = 'us-central1';\n\n  // Create Fields.\n  const fieldSource = {\n    displayName: 'Source of data asset',\n    type: {\n      primitiveType: 'STRING',\n    },\n  };\n\n  const fieldNumRows = {\n    displayName: 'Number of rows in data asset',\n    type: {\n      primitiveType: 'DOUBLE',\n    },\n  };\n\n  const fieldHasPII = {\n    displayName: 'Has PII',\n    type: {\n      primitiveType: 'BOOL',\n    },\n  };\n\n  const fieldPIIType = {\n    displayName: 'PII type',\n    type: {\n      enumType: {\n        allowedValues: [\n          {\n            displayName: 'EMAIL',\n          },\n          {\n            displayName: 'SOCIAL SECURITY NUMBER',\n          },\n          {\n            displayName: 'NONE',\n          },\n        ],\n      },\n    },\n  };\n\n  // Create Tag Template.\n  const tagTemplateId = 'demo_tag_template';\n\n  const tagTemplate = {\n    displayName: 'Demo Tag Template',\n    fields: {\n      source: fieldSource,\n      num_rows: fieldNumRows,\n      has_pii: fieldHasPII,\n      pii_type: fieldPIIType,\n    },\n  };\n\n  const tagTemplatePath = datacatalog.tagTemplatePath(\n    projectId,\n    location,\n    tagTemplateId\n  );\n\n  // Delete any pre-existing Template with the same name.\n  try {\n    request = {\n      name: tagTemplatePath,\n      force: true,\n    };\n    await datacatalog.deleteTagTemplate(request);\n    console.log(`Deleted template: ${tagTemplatePath}`);\n  } catch (error) {\n    console.log(`Cannot delete template: ${tagTemplatePath}`);\n  }\n\n  // Create the Tag Template request.\n  const locationPath = datacatalog.locationPath(projectId, location);\n\n  request = {\n    parent: locationPath,\n    tagTemplateId: tagTemplateId,\n    tagTemplate: tagTemplate,\n  };\n\n  // Execute the request.\n  responses = await datacatalog.createTagTemplate(request);\n  const createdTagTemplate = responses[0];\n  console.log(`Created template: ${createdTagTemplate.name}`);\n\n  // Lookup Data Catalog's Entry referring to the table.\n  responses = await datacatalog.lookupEntry({\n    linkedResource:\n      '//bigquery.googleapis.com/projects/' +\n      `${projectId}/datasets/${datasetId}/tables/${tableId}`,\n  });\n  const entry = responses[0];\n  console.log(`Entry name: ${entry.name}`);\n  console.log(`Entry type: ${entry.type}`);\n  console.log(`Linked resource: ${entry.linkedResource}`);\n\n  // Attach a Tag to the table.\n  const tag = {\n    name: entry.name,\n    template: createdTagTemplate.name,\n    fields: {\n      source: {\n        stringValue: 'copied from tlc_yellow_trips_2017',\n      },\n      num_rows: {\n        doubleValue: 113496874,\n      },\n      has_pii: {\n        boolValue: false,\n      },\n      pii_type: {\n        enumValue: {\n          displayName: 'NONE',\n        },\n      },\n    },\n  };\n\n  request = {\n    parent: entry.name,\n    tag: tag,\n  };\n\n  // Create the Tag.\n  await datacatalog.createTag(request);\n  console.log(`Tag created for entry: ${entry.name}`);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Generating Content with Generative Service in Javascript\nDESCRIPTION: This shows the usage of the `generateContent` method of the Generative Service within the google-ai-generativelanguage package. It gives an example of how to generate content based on a prompt or input using a generative AI model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Creating Intent in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Creates a new intent in Dialogflow V2beta1 using the Node.js client library. The `intents.create_intent.js` sample demonstrates how to use the `createIntent` method to create a new intent with specified parameters, such as display name, training phrases, and message texts. The sample should also handle API responses and potential errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Removing a Product from a Product Set with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to remove a product from a product set using the Google Cloud Vision API. It utilizes the product_search.remove_product_from_product_set method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.remove_product_from_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tuned Models with Model Service in Javascript\nDESCRIPTION: This sample shows how to list all tuned models using the `listTunedModels` method from the Model Service within the google-ai-generativelanguage package. It allows you to retrieve a list of your fine-tuned models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Creating Webhook in Dialogflow CX - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a new webhook for a Dialogflow CX agent. The process involves sending a request to the Dialogflow CX API with the required webhook details. Dependencies include the Dialogflow CX library. The function requires webhook configuration and returns the information about the created webhook.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_150\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WebhooksClient} = require('@google-cloud/dialogflow-cx');\nconst client = new WebhooksClient();\n\nasync function createWebhook(webhookData) {\n  const request = {\n    parent: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT`,\n    webhook: webhookData\n  };\n  const response = await client.createWebhook(request);\n  console.log('Created webhook:', response);\n}\n\ncreateWebhook({displayName: 'New Webhook', url: 'https://example.com/webhook'});\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy on Secrets in Node.js\nDESCRIPTION: This Node.js snippet sets the IAM policy for a secret in Google Cloud Secret Manager. It requires the `@google-cloud/secret-manager` library and proper authentication setup. Key inputs include the secret ID, the policy to apply, and project ID. It allows configuring who can access certain secrets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Job Service Search Jobs For Alert\nDESCRIPTION: Demonstrates how to search jobs for alert using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs_for_alert.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Google Cloud Function - Node.js\nDESCRIPTION: This snippet illustrates how to delete an existing Google Cloud Function via the cloud_functions_service. Useful for managing the lifecycle of serverless functions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.delete_function.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Rollout Sample in Node.js\nDESCRIPTION: The purpose of this snippet is to execute the rollout creation script using Node.js. It requires Node.js installed and the Google Cloud Deploy samples cloned or available locally. Running the script initiates a rollout creation process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_rollout.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node.js Library\nDESCRIPTION: This code snippet shows how to execute the unit tests for the Google Cloud Node.js library using npm. Running unit tests helps ensure the correctness of individual components of the library before further testing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Batch Translating a Document using Google Cloud Translation API - JavaScript\nDESCRIPTION: Performs batch translation of documents. The functionality includes initializing the translation service and calling the batch translate method with necessary parameters such as source and target languages as well as document paths.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Batch translate a document\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function batchTranslateDocument() {\n  // Your code here to batch translate document\n}\nbatchTranslateDocument();\n```\n\n----------------------------------------\n\nTITLE: Using Anthos Multi-Cloud API to List AWS Clusters with Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Anthos Multi-Cloud API client library for Node.js to list AWS clusters. It includes initializing the client, constructing the request, and iterating through the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent location which owns this collection of\n *  AwsCluster google.cloud.gkemulticloud.v1.AwsCluster  resources.\n *  Location names are formatted as `projects/<project-id>/locations/<region>`.\n *  See Resource Names (https://cloud.google.com/apis/design/resource_names)\n *  for more details on GCP resource names.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of items to return.\n *  If not specified, a default value of 50 will be used by the service.\n *  Regardless of the pageSize value, the response can include a partial list\n *  and a caller should only rely on response's\n *  nextPageToken google.cloud.gkemulticloud.v1.ListAwsClustersResponse.next_page_token  to determine if\n *  there are more instances left to be queried.\n */\n// const pageSize = 1234\n/**\n *  The `nextPageToken` value returned from a previous\n *  awsClusters.list google.cloud.gkemulticloud.v1.AwsClusters.ListAwsClusters  request, if any.\n */\n// const pageToken = 'abc123'\n\n// Imports the Gkemulticloud library\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud').v1;\n\n// Instantiates a client\nconst gkemulticloudClient = new AwsClustersClient({\n  // API endpoint must be set:\n  apiEndpoint: 'us-west1-gkemulticloud.googleapis.com',\n});\n\nasync function callListAwsClusters() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await gkemulticloudClient.listAwsClustersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAwsClusters();\n```\n\n----------------------------------------\n\nTITLE: Edge Network Quickstart in Node.js\nDESCRIPTION: Introductory sample code demonstrating basic usage and setup of the Google Cloud Edge Network API in Node.js. Provides a starting point for developers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nQuickstart\n```\n\n----------------------------------------\n\nTITLE: Replacing Taxonomy in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet illustrates how to replace a taxonomy in Google Cloud's Data Catalog service using the Node.js client library. It requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerSerializationClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerSerializationClient();\n\nasync function replaceTaxonomy() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n    taxonomy: {/* your taxonomy details */},\n  };\n  const [response] = await client.replaceTaxonomy(request);\n  console.log('Taxonomy replaced:', response);\n}\nreplaceTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Listing Asset Feeds using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list asset feeds using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.list_feeds.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Security Health Analytics Custom Module in Google Cloud Security Center - JavaScript\nDESCRIPTION: This code snippet illustrates how to create a custom module for security health analytics in Google Cloud Security Center using Node.js. This customization allows for tailored health checks related to security posture. Ensure the health analytics are aligned with organizational policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a security health analytics custom module\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createSecurityHealthAnalyticsCustomModule() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID', // Required\n    // Additional parameters for the custom module\n  };\n  const [response] = await client.createSecurityHealthAnalyticsCustomModule(request);\n  console.log(response);\n}\n\ncreateSecurityHealthAnalyticsCustomModule();\n```\n\n----------------------------------------\n\nTITLE: Getting Engine Config with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code example demonstrates how to retrieve an engine configuration using the A_m_l.get_engine_config method of the Google Cloud Financial Services API. The necessary Node.js package and proper credentials are required for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_engine_config.js\n```\n\n----------------------------------------\n\nTITLE: Get Fulfillment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to retrieve a fulfillment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `getFulfillment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/fulfillments.get_fulfillment.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Create Task Sample Usage\nDESCRIPTION: This sample demonstrates how to create a task using the Cloud Tasks API in Node.js. The script `cloud_tasks.create_task.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.create_task.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Template with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet demonstrates how to create a tag template using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.create_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Listing Permissions using Permission Service with Node.js\nDESCRIPTION: This code sample shows how to use the listPermissions method of the PermissionService. It utilizes the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/permission_service.list_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Using ImageAnnotator.asyncBatchAnnotateFiles method with Google Cloud Vision API v1p2beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to asynchronously annotate files using Google Cloud Vision API. This allows processing multiple files with a long-running operation that completes asynchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p2beta1/image_annotator.async_batch_annotate_files.js\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Batch File Annotation with Google Cloud Vision API in Node.js\nDESCRIPTION: This example demonstrates how to perform asynchronous batch file annotation using the Google Cloud Vision API. It uses the image_annotator.async_batch_annotate_files method for processing multiple files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/image_annotator.async_batch_annotate_files.js\n```\n\n----------------------------------------\n\nTITLE: Creating Job with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a job using the Job Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.create_job.js.  It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.create_job.js`\n```\n\n----------------------------------------\n\nTITLE: Analyzing Organization Policy Governed Assets with Node.js\nDESCRIPTION: This sample focuses on analyzing the assets governed by organization policies within Google Cloud. It allows users to assess their resources according to existing organization policies using the Google Cloud Asset API. Users need appropriate permissions to access resource data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_org_policy_governed_assets.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeOrgPolicyGovernedAssets() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeOrgPolicyGovernedAssets();\n```\n\n----------------------------------------\n\nTITLE: Creating Tuned Model with Model Service in Javascript\nDESCRIPTION: This sample illustrates the use of the `createTunedModel` method of the Model Service. It demonstrates how to create a tuned model using the google-ai-generativelanguage package, allowing for customization of the AI model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Webhook in Dialogflow CX - JavaScript\nDESCRIPTION: This snippet updates an existing webhook in a Dialogflow CX agent. It interacts with the Dialogflow CX API to change webhook properties based on the provided webhook ID. Dependencies include the Dialogflow CX library. The function accepts updated webhook information and confirms the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_154\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WebhooksClient} = require('@google-cloud/dialogflow-cx');\nconst client = new WebhooksClient();\n\nasync function updateWebhook(webhookId, updateData) {\n  const request = {\n    webhook: {\n      ...updateData,\n      name: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT/webhooks/${webhookId}`\n    }\n  };\n  const response = await client.updateWebhook(request);\n  console.log('Updated webhook:', response);\n}\n\nupdateWebhook('WEBHOOK_ID', {displayName: 'Updated Webhook'});\n```\n\n----------------------------------------\n\nTITLE: Listing Models with Model Service in Javascript\nDESCRIPTION: This sample illustrates how to list available models using the `listModels` method from the Model Service in the google-ai-generativelanguage package. It provides an example of how to retrieve a list of available AI models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Cloud Redis Setup Instructions - Node.js\nDESCRIPTION: Installation and setup instructions for running the Cloud Redis Node.js samples. Includes steps for installing dependencies and navigating to the correct directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Deleting an Entity Type with Dialogflow V2beta1\nDESCRIPTION: This sample demonstrates the process of deleting an existing entity type using Dialogflow V2beta1 in Node.js. It employs the `Entity_types.delete_entity_type` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.delete_entity_type\"\n```\n\n----------------------------------------\n\nTITLE: Removing Local Inventories - Google Cloud Retail - JavaScript\nDESCRIPTION: Here, the snippet shows how to remove local inventories associated with a product. Dependencies are Node.js and Google Cloud SDK. The input consists of inventory details, and the expected output is a confirmation of the removal.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for removing local inventories\n```\n\n----------------------------------------\n\nTITLE: Creating Session Entity Type - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet allows for the creation of a session entity type in Dialogflow, enabling the customization of entities that can be referenced within a specific session context.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_116\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Creates a session entity type.\nconst {SessionEntityTypesClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionEntityTypesClient();\n\nasync function createSessionEntityType() {\n  // Implementation logic here\n}\n\ncreateSessionEntityType();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Restore Plan Information for GKE - Node.js\nDESCRIPTION: This snippet illustrates how to retrieve details of a restore plan in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and the restore plan ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Restore Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getRestorePlan(request)\n  .then(response => {\n    console.log('Restore plan details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving restore plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Dataproc Metastore - Node.js\nDESCRIPTION: This is a quickstart snippet for the Dataproc Metastore service that illustrates the basic setup and first steps for users. It requires Node.js and demonstrates essential configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Quickstart code\nnode packages/google-cloud-metastore/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using the Google Ad Manager API to List Ad Unit Sizes in Node.js\nDESCRIPTION: Example code demonstrating how to use the Google Ad Manager API client to list ad unit sizes. This snippet shows the initialization of the client and making a request to the ListAdUnitSizes endpoint with pagination support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of AdUnitSizes.\n *  Format: `networks/{network_code}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of AdUnitSizes to return. The service may\n *  return fewer than this value. If unspecified, at most 50 ad unit sizes will\n *  be returned. The maximum value is 1000; values above 1000 will be coerced\n *  to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListAdUnitSizes` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListAdUnitSizes` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Expression to filter the response.\n *  See syntax details at\n *  https://developers.google.com/ad-manager/api/beta/filters\n */\n// const filter = 'abc123'\n/**\n *  Optional. Expression to specify sorting order.\n *  See syntax details at\n *  https://developers.google.com/ad-manager/api/beta/filters#order\n */\n// const orderBy = 'abc123'\n/**\n *  Optional. Number of individual resources to skip while paginating.\n */\n// const skip = 1234\n\n// Imports the Admanager library\nconst {AdUnitServiceClient} = require('@google-ads/admanager').v1;\n\n// Instantiates a client\nconst admanagerClient = new AdUnitServiceClient();\n\nasync function callListAdUnitSizes() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = admanagerClient.listAdUnitSizesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAdUnitSizes();\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet tests IAM permissions for a user or service account against a specified resource, critical for ensuring proper access management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Using Parameter Manager API Node.js Client Library\nDESCRIPTION: Example of using the Parameter Manager API client library to list parameters. It demonstrates client initialization and making an asynchronous request to list parameters with optional filtering and pagination.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListParametersRequest in the format\n *  `projects/PROJECT/locations/LOCATION`.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results\n */\n// const orderBy = 'abc123'\n\n// Imports the Parametermanager library\nconst {ParameterManagerClient} = require('@google-cloud/parametermanager').v1;\n\n// Instantiates a client\nconst parametermanagerClient = new ParameterManagerClient();\n\nasync function callListParameters() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = parametermanagerClient.listParametersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListParameters();\n```\n\n----------------------------------------\n\nTITLE: Getting Environment History in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Retrieves the history of a specific environment in Dialogflow V2beta1.  The code uses the `get_environment_history` function, which interacts with the Dialogflow client library to retrieve the history or audit log of changes made to the specified environment.  The sample demonstrates how to handle pagination of history entries if the history is long.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Executing Entity Type Update in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to update an entity type in Dialogflow CX using Node.js. This sample code provides a command that can be executed from the command line to perform this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/entity_types.update_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Conversation Model in Dialogflow v2\nDESCRIPTION: Demonstrates how to delete a conversation model in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and removes an existing conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.delete_conversation_model.js`\n```\n\n----------------------------------------\n\nTITLE: Creating an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This snippet illustrates the process of creating a new experiment in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_87\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.create_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Retail API Quickstart (Node.js)\nDESCRIPTION: A quickstart sample demonstrating basic usage of the Google Cloud Retail API with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_80\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Knowledge Base in Dialogflow using Node.js\nDESCRIPTION: This code sample executes a Node.js script written in JavaScript to create a new knowledge base in Google Cloud Dialogflow. Pre-requirements include the Google Cloud Node.js client library and an enabled Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/knowledge_bases.create_knowledge_base.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Dialogflow Intent in Node.js\nDESCRIPTION: Sample code demonstrating how to update an existing intent in Dialogflow using Node.js client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_105\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/intents.update_intent.js\n```\n\n----------------------------------------\n\nTITLE: Generating Upload URL for Google Cloud Function - Node.js\nDESCRIPTION: This snippet shows how to generate an upload URL for a Google Cloud Function, enabling the user to upload function code or artifacts to Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.generate_upload_url.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Queue with Google Cloud Tasks in Node.js\nDESCRIPTION: This snippet illustrates the process for deleting an existing queue in Google Cloud Tasks using Node.js. Users must ensure they have necessary permissions to perform deletions. Upon invoking this function with the correct queue ID, the specified queue will be removed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nLink to the code: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.delete_queue.js\n```\n\n----------------------------------------\n\nTITLE: Using the Certificate Manager Client Library to List Certificates\nDESCRIPTION: Example code showing how to instantiate the Certificate Manager client and list certificates. This demonstrates setting up the client, constructing a request with optional parameters, and processing the results asynchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The project and location from which the certificate should be listed,\n *  specified in the format `projects/* /locations/*`.\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of certificates to return per call.\n */\n// const pageSize = 1234\n/**\n *  The value returned by the last `ListCertificatesResponse`. Indicates that\n *  this is a continuation of a prior `ListCertificates` call, and that the\n *  system should return the next page of data.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter expression to restrict the Certificates returned.\n */\n// const filter = 'abc123'\n/**\n *  A list of Certificate field names used to specify the order of the returned\n *  results. The default sorting order is ascending. To specify descending\n *  order for a field, add a suffix \" desc\".\n */\n// const orderBy = 'abc123'\n\n// Imports the Certificatemanager library\nconst {CertificateManagerClient} =\n  require('@google-cloud/certificate-manager').v1;\n\n// Instantiates a client\nconst certificatemanagerClient = new CertificateManagerClient();\n\nasync function callListCertificates() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await certificatemanagerClient.listCertificatesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListCertificates();\n```\n\n----------------------------------------\n\nTITLE: Completion Complete Query\nDESCRIPTION: Demonstrates how to complete a query using the Completion service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/completion.complete_query.js\"\n```\n\n----------------------------------------\n\nTITLE: Get Effective Security Health Analytics Custom Module\nDESCRIPTION: Retrieves an effective security health analytics custom module from Google Cloud Security Center using the Node.js client library. The sample demonstrates how to fetch configurations related to security health analytics. It requires the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_effective_security_health_analytics_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Collecting User Events in Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code demonstrating how to collect user events using the Google Cloud Retail API. Used for gathering user interaction data in retail applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_74\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.collect_user_event.js\n```\n\n----------------------------------------\n\nTITLE: Importing APT Artifacts to Artifact Registry using Node.js\nDESCRIPTION: This snippet demonstrates how to import APT artifacts into Google Cloud Artifact Registry. It uses the import_apt_artifacts method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.import_apt_artifacts.js\n```\n\n----------------------------------------\n\nTITLE: Installing Natural Language client library with npm\nDESCRIPTION: This command installs the Google Cloud Natural Language API client library for Node.js using npm. This is a prerequisite for using the library in your Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/language\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Template Field with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code example shows how to create a tag template field using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.create_tag_template_field.js\n```\n\n----------------------------------------\n\nTITLE: Listing Redis Instances with Node.js Client\nDESCRIPTION: Demonstrates how to use the Cloud Redis client to list Redis instances in a specified location. The function takes project ID and location as parameters and returns instance information using the listInstances API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * List instances in a given location.\n * @param {string} project.\n * @param {string} location, e.g., us-east-1.\n */\nasync function main(projectId, location) {\n  const {CloudRedisClient} = require('@google-cloud/redis');\n  const client = new CloudRedisClient();\n  const formattedParent = client.locationPath(projectId, location);\n  const request = {\n    parent: formattedParent,\n  };\n  const resp = (await client.listInstances(request))[0];\n  console.info(resp);\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Dialogflow Conversations in Node.js\nDESCRIPTION: Commands for managing Dialogflow conversations, including batch message creation, conversation completion, and conversation creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_82\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.batch_create_messages.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.complete_conversation.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.create_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Generating Access Tokens with IAM Credentials API in Node.js\nDESCRIPTION: This code demonstrates how to use the IAM Credentials client to generate access tokens for a service account. The service account must be granted the roles/iam.serviceAccountTokenCreator role to perform this operation. The snippet initializes the client and calls the generateAccessToken method with the service account name and required scopes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam-credentials/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {IAMCredentialsClient} = require('@google-cloud/iam-credentials');\n\n// TODO(developer): replace with your prefered project values.\n// The service account must be granted the roles/iam.serviceAccountTokenCreator role\n// const serviceAccount = 'ACCOUNT_EMAIL_OR_UNIQUEID'\n// const scopes = 'my-scopes', e.g., 'https://www.googleapis.com/auth/iam'\n\n// Creates a client\nconst client = new IAMCredentialsClient();\n\nasync function generateAccessToken() {\n  const [token] = await client.generateAccessToken({\n    name: `projects/-/serviceAccounts/${serviceAccount}`,\n    scope: [scopes],\n  });\n  console.info(token);\n}\ngenerateAccessToken();\n```\n\n----------------------------------------\n\nTITLE: Executing SQL Query in AlloyDB using Node.js\nDESCRIPTION: This code snippet illustrates how to execute an SQL query in AlloyDB using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.execute_sql.js\n```\n\n----------------------------------------\n\nTITLE: Listing projects using Resource Manager API\nDESCRIPTION: This snippet demonstrates how to use the Google Cloud Resource Manager API client library to list projects. It imports the necessary client, creates an instance, and then iterates through the projects asynchronously, printing each project's information to the console.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {ProjectsClient} = require('@google-cloud/resource-manager');\n\n// Creates a client\nconst client = new ProjectsClient();\n\nasync function quickstart() {\n  // Lists current projects\n  const projects = client.searchProjectsAsync();\n  console.log('Projects:');\n  for await (const project of projects) {\n    console.info(project);\n  }\n}\nquickstart();\n\n```\n\n----------------------------------------\n\nTITLE: Embedding Content with Generative Service in Javascript\nDESCRIPTION: This snippet illustrates how to use the `embedContent` method of the Generative Service. This operation leverages the google-ai-generativelanguage package to create embeddings for single pieces of content, providing a vector representation of the input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Prediction Service Predict Retail API\nDESCRIPTION: This sample demonstrates how to make a prediction using the Retail API Prediction Service using Node.js. It involves setting up the necessary authentication and calling the `predict` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/prediction_service.predict.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Notebook Instance with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to create a notebook instance using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.create_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Product - Google Cloud Retail - JavaScript\nDESCRIPTION: Here, the snippet illustrates how to create a new product in Google Cloud Retail. Dependencies include Node.js and the Google Cloud libraries. The input is product details such as name and description, and the output confirms the creation of the product.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for creating a product\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Google Cloud SQL Admin API Client\nDESCRIPTION: Example showing how to initialize the SQL Admin client, create an instances client with HTTP fallback, and list SQL instances for a project. The code demonstrates basic setup and API interaction.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Sql library\nconst sqladmin = require('@google-cloud/sql').v1;\n\n// Instantiates a client. Use HTTP/1.1 fallback mode instead of gRPC.\nconst instancesClient = new sqladmin.SqlInstancesServiceClient({\n  fallback: 'rest',\n});\n\nasync function callList() {\n  // Get project ID\n  const project = await instancesClient.getProjectId();\n\n  // Construct request\n  const request = {\n    project: project,\n  };\n\n  // Run request\n  const response = await instancesClient.list(request);\n  console.log(response);\n}\n\ncallList();\n```\n\n----------------------------------------\n\nTITLE: Listing Findings in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet lists all findings in the Google Cloud Security Center, helping users manage security risks effectively. The necessary setup includes the Google Cloud SDK and required authentication credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_findings.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Server Configuration - Google Cloud Node\nDESCRIPTION: This snippet retrieves the server configuration for AWS clusters. It is crucial for understanding the backend server settings and configurations that govern the AWS cluster's behavior. The GKE Multi-Cloud client setup is necessary for proper execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.getAwsServerConfig({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Get Resource Value Config in Security Center\nDESCRIPTION: Retrieves a resource value configuration from Google Cloud Security Center using the Node.js client library. This sample fetches configurations that define resource values in Security Center. This code snippet depends on the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_resource_value_config\"\n```\n\n----------------------------------------\n\nTITLE: Asymmetric Signing with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to perform asymmetric signing using the google-cloud-kms library in a Node.js environment. It uses the provided command to run the sample which performs asymmetric signing with a key.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.asymmetric_sign.js`\n```\n\n----------------------------------------\n\nTITLE: Managing Models with Google Cloud Node.js Services\nDESCRIPTION: The code snippet illustrates model management operations including creating, deleting, and retrieving models using Node.js. It is essential to ensure that model names and configurations are correctly defined in the Google Cloud environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.create_tuned_model.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.delete_tuned_model.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.get_model.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.get_tuned_model.js\n```\n\n----------------------------------------\n\nTITLE: Inspect Content with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code demonstrates how to inspect content for sensitive information using the Google Cloud DLP service. It calls the inspectContent method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.inspect_content.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Vision API Node.js Client Library\nDESCRIPTION: This command installs the Google Cloud Vision API client library for Node.js using npm. It adds the @google-cloud/vision package to your project dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/vision\n```\n\n----------------------------------------\n\nTITLE: Romanizing Text with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code example illustrates how to romanize text using the Translation Service. It employs the romanize_text method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.romanize_text.js\n```\n\n----------------------------------------\n\nTITLE: Instantiating Inline Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This code snippet demonstrates how to instantiate an inline workflow template using Google Cloud Dataproc. It requires a valid configuration and outputs the result of the instantiation process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function instantiateInlineWorkflowTemplate(template) {\n  const request = {\n    inlineWorkflowTemplate: template,\n  };\n  const [response] = await client.instantiateInlineWorkflowTemplate(request);\n  console.log('Instantiated inline workflow template:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: AutoML Update Model in Node.js\nDESCRIPTION: This sample demonstrates how to update a model using the AutoML API in Node.js. The `updateModel` function is called to update the model. It uses the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.update_model\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Login Profile Using the OS Login API in Node.js\nDESCRIPTION: Sample code demonstrating how to instantiate the OS Login client and retrieve a user's login profile. The example includes parameter placeholders that developers should replace with their own values.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The unique ID for the user in format `users/{user}`.\n */\n// const name = 'abc123'\n/**\n *  The project ID of the Google Cloud Platform project.\n */\n// const projectId = 'abc123'\n/**\n *  A system ID for filtering the results of the request.\n */\n// const systemId = 'abc123'\n\n// Imports the Oslogin library\nconst {OsLoginServiceClient} = require('@google-cloud/os-login').v1;\n\n// Instantiates a client\nconst osloginClient = new OsLoginServiceClient();\n\nasync function callGetLoginProfile() {\n  // Construct request\n  const request = {\n    name,\n  };\n\n  // Run request\n  const response = await osloginClient.getLoginProfile(request);\n  console.log(response[0]);\n}\n\ncallGetLoginProfile();\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Environments using Node.js\nDESCRIPTION: Sample code for environment management operations in Dialogflow, including creating, deleting, and retrieving environment information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_88\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/environments.create_environment.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/environments.delete_environment.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/environments.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Connections with Developer Connect in Node.js\nDESCRIPTION: This snippet demonstrates how to update connections using the Developer Connect API in Node.js.  It assumes that the necessary Google Cloud libraries are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-developerconnect/samples/generated/v1/developer_connect.update_connection.js`\n```\n\n----------------------------------------\n\nTITLE: SSL Certificate Management in Node.js\nDESCRIPTION: Methods for managing SSL certificates including creation, deletion, retrieval, and listing of certificates for Cloud SQL instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_9\n\n\n\n----------------------------------------\n\nTITLE: Executing Google Cloud Node.js File Service Operations\nDESCRIPTION: This snippet demonstrates how to use Node.js to execute basic file operations such as creating, deleting, getting, and listing files using the Google Cloud AI services. Ensure you have the necessary permissions and configurations set in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/file_service.create_file.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/file_service.delete_file.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/file_service.get_file.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/file_service.list_files.js\n```\n\n----------------------------------------\n\nTITLE: Listing Cloud Run Services\nDESCRIPTION: This code snippet demonstrates how to list Cloud Run services using the Node.js client library. It imports the `ServicesClient` from the `@google-cloud/run` package, instantiates a client, constructs a request with the parent project and location, and then iterates through the responses to print each service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The location and project to list resources on.\n *  Location must be a valid GCP region, and may not be the \"-\" wildcard.\n *  Format: projects/{projectnumber}/locations/{location}\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of Services to return in this call.\n */\n// const pageSize = 1234\n/**\n *  A page token received from a previous call to ListServices.\n *  All other parameters must match.\n */\n// const pageToken = 'abc123'\n\n/**\n *  If true, returns deleted (but unexpired) resources along with active ones.\n */\n// const showDeleted = true\n// Imports the Run library\nconst {ServicesClient} = require('@google-cloud/run').v2;\n\n// Instantiates a client\nconst runClient = new ServicesClient();\n\nasync function callListServices() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await runClient.listServicesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListServices();\n\n```\n\n----------------------------------------\n\nTITLE: Batch Run Reports in Analytics Data API (Beta) with Node.js\nDESCRIPTION: This sample demonstrates how to batch run reports using the Beta version of the Google Analytics Data API with Node.js. It utilizes the `beta_analytics_data.batch_run_reports` method. Refer to the README.md file for instructions on how to run this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Promoting Replica with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to promote a replica to a primary instance in Google Cloud SQL using the `promote_replica` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.promote_replica.js`\n```\n\n----------------------------------------\n\nTITLE: Using Binary Authorization Client Library to List Attestors\nDESCRIPTION: Example showing how to initialize the Binary Authorization client and list attestors using the API. The code imports the client, creates a client instance, and defines an async function to retrieve and log attestors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// eslint-disable-next-line node/no-missing-require\nconst {\n  BinauthzManagementServiceV1Client,\n} = require('@google-cloud/binary-authorization');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new BinauthzManagementServiceV1Client();\n\nasync function listAttestors() {\n  const attestors = await client.listAttestors({parent});\n  console.info(attestors);\n}\nlistAttestors();\n```\n\n----------------------------------------\n\nTITLE: Google Ad Manager API Service Samples\nDESCRIPTION: Collection of Node.js code samples demonstrating various Google Ad Manager API service operations. Includes samples for network, order, placement, report, role, taxonomy category, and user services with both get and list operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// No direct code snippets provided in the content, only links to source code files\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Documents in Node.js\nDESCRIPTION: Collection of Node.js scripts for managing Dialogflow documents including creating, deleting, updating, and listing documents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_84\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.create_document.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.delete_document.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.get_document.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.import_documents.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.list_documents.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.reload_document.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/documents.update_document.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dialogflow CX API client\nDESCRIPTION: This command installs the Dialogflow CX API client library for Node.js using npm. It allows you to interact with the Dialogflow CX API from your Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dialogflow-cx\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud Dataplex API using Node.js\nDESCRIPTION: This quickstart sample provides a basic introduction to using the Google Cloud Dataplex API with Node.js. It demonstrates essential setup and usage patterns for the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_79\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Processing a Document - Google Cloud Node.js\nDESCRIPTION: This snippet describes how to process a single document using Document Understanding service. It requires the document input configurations. The expected output is the processing results of the document.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to process a document\nconst {DocumentUnderstandingServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentUnderstandingServiceClient();\nconst request = { name: processorName, rawDocument: rawDocument };  \nconst [response] = await client.processDocument(request);\n```\n\n----------------------------------------\n\nTITLE: Updating a Version in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to update an existing version in Dialogflow CX. It uses the versions.update_version method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_73\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/versions.update_version.js\n```\n\n----------------------------------------\n\nTITLE: Using the Last Mile Fleet Solution Delivery API in Node.js\nDESCRIPTION: Example of using the Fleet Engine Delivery API to list delivery vehicles. The code instantiates a client and makes an asynchronous request to retrieve delivery vehicles based on specified parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Optional. The standard Delivery API request header.\n */\n// const header = {}\n/**\n *  Required. Must be in the format `providers/{provider}`.\n *  The `provider` must be the Google Cloud Project ID.\n *  For example, `sample-cloud-project`.\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of vehicles to return. The service may return\n *  fewer than this number. If you don't specify this number, then the server\n *  determines the number of results to return.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListDeliveryVehicles`\n *  call. You must provide this in order to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListDeliveryVehicles`\n *  must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. A filter query to apply when listing delivery vehicles. See\n *  http://aip.dev/160 for examples of the filter syntax. If you don't specify\n *  a value, or if you specify an empty string for the filter, then all\n *  delivery vehicles are returned.\n *  Note that the only queries supported for `ListDeliveryVehicles` are\n *  on vehicle attributes (for example, `attributes.<key> = <value>` or\n *  `attributes.<key1> = <value1> AND attributes.<key2> = <value2>`). Also, all\n *  attributes are stored as strings, so the only supported comparisons against\n *  attributes are string comparisons. In order to compare against number or\n *  boolean values, the values must be explicitly quoted to be treated as\n *  strings (for example, `attributes.<key> = \"10\"` or\n *  `attributes.<key> = \"true\"`).\n *  The maximum number of restrictions allowed in a filter query is 50. A\n *  restriction is a part of the query of the form\n *  `attribute.<KEY> <COMPARATOR> <VALUE>`, for example `attributes.foo = bar`\n *  is 1 restriction.\n */\n// const filter = 'abc123'\n/**\n *  Optional. A filter that limits the vehicles returned to those whose last\n *  known location was in the rectangular area defined by the viewport.\n */\n// const viewport = {}\n\n// Imports the Delivery library\nconst {DeliveryServiceClient} =\n  require('@googlemaps/fleetengine-delivery').v1;\n\n// Instantiates a client\nconst deliveryClient = new DeliveryServiceClient();\n\nasync function callListDeliveryVehicles() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = deliveryClient.listDeliveryVehiclesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDeliveryVehicles();\n```\n\n----------------------------------------\n\nTITLE: AutoML Create Model in Node.js\nDESCRIPTION: This sample demonstrates creating a model using the AutoML API in Node.js. The `createModel` function is called. It uses the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.create_model\"\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Execute SQL in Node.js\nDESCRIPTION: Details how to execute SQL queries against an AlloyDB instance using the Node.js client library. The process initializes the AlloyDBAdmin client and utilizes the `executeSql` method. This requires proper project configuration and authentication for a successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.execute_sql | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.execute_sql.js)\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Tag in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates how to update a specific tag in Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js.  It utilizes the `updateTag` method, passing in the updated Tag object to modify. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(tag) {\n  // [START datacatalog_update_tag]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const tag = {};\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function updateTag() {\n    const [response] = await datacatalog.updateTag({\n      tag: tag,\n    });\n    console.log(`Tag updated: ${response.name}`);\n  }\n  updateTag();\n  // [END datacatalog_update_tag]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Getting Compilation Result - Google Cloud Node.js\nDESCRIPTION: This snippet allows users to retrieve the compilation results of a Dataform project using the Google Cloud Node.js library. It should be executed in a Node.js environment for effective results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.get_compilation_result.js\n```\n\n----------------------------------------\n\nTITLE: List GenerativeQuestionConfigs Retail API\nDESCRIPTION: This sample demonstrates how to list GenerativeQuestionConfigs from the Retail API using Node.js. It involves setting up the necessary authentication and calling the `listGenerativeQuestionConfigs` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/generative_question_service.list_generative_question_configs.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Attached Clusters with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to update an attached Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows the usage pattern for modifying attached cluster configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/attached_clusters.update_attached_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Using Generative Question Service Operations in Node.js\nDESCRIPTION: Functions for managing generative question configurations and features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/generative_question_service.batch_update_generative_question_configs.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/generative_question_service.get_generative_questions_feature_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Services in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to list all services in Google Cloud Run. It uses the Services.list_services method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.list_services.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Create Queue Sample Usage\nDESCRIPTION: This sample demonstrates how to create a queue using the Cloud Tasks API in Node.js. The script `cloud_tasks.create_queue.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.create_queue.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Supported Languages with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve supported languages using the Translation Service. It utilizes the get_supported_languages method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.get_supported_languages.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This is a quickstart guide for using the Google Cloud Certificate Authority Service API in Node.js. It provides a basic example to get started with the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Generator in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet retrieves a generator from Dialogflow CX using the Node.js client library. It uses the `Generators.get_generator` method, which takes the generator's name as input.  Before using this, make sure that the Dialogflow CX client is initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Generators_GetGenerator_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callGetGenerator() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'generators/my-generator',\n  };\n\n  // Make the request\n  const [response] = await client.getGenerator(request);\n  console.log(response);\n}\n\ncallGetGenerator();\n// [END dialogflow_cx_v3_generated_Generators_GetGenerator_async]\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Monitoring API with Node.js\nDESCRIPTION: A complete example demonstrating how to use the Monitoring API to create a time series data point. It shows creating a client, preparing a data point, creating a request, and writing time series data to the Monitoring API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst monitoring = require('@google-cloud/monitoring');\n\nasync function quickstart() {\n  // Creates a client\n  const client = new monitoring.MetricServiceClient();\n\n  // TODO(developer): Uncomment and set the following variables\n  // const projectId = \"PROJECT_ID\"\n\n  // Prepares an individual data point\n  const dataPoint = {\n    interval: {\n      endTime: {\n        seconds: Date.now() / 1000,\n      },\n    },\n    value: {\n      // The amount of sales\n      doubleValue: 123.45,\n    },\n  };\n\n  // Prepares the time series request\n  const request = {\n    name: client.projectPath(projectId),\n    timeSeries: [\n      {\n        // Ties the data point to a custom metric\n        metric: {\n          type: 'custom.googleapis.com/stores/daily_sales',\n          labels: {\n            store_id: 'Pittsburgh',\n          },\n        },\n        resource: {\n          type: 'global',\n          labels: {\n            project_id: projectId,\n          },\n        },\n        points: [dataPoint],\n      },\n    ],\n  };\n\n  // Writes time series data\n  const [result] = await client.createTimeSeries(request);\n  console.log('Done writing time series data.', result);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Batch Verifying Target Sites in Node.js\nDESCRIPTION: This sample demonstrates how to batch verify target sites using the DiscoveryEngine API in Node.js. It uses `Site_search_engine_service.batch_verify_target_sites` to verify multiple target sites. Proper client initialization and authentication are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchVerifyTargetSites_async]\"\n```\n\n----------------------------------------\n\nTITLE: Creating Evaluation Job with Data Labeling Service\nDESCRIPTION: Sample demonstrates creating an evaluation job using the Google Cloud Data Labeling Service in Node.js. It shows how to set up a job for assessing the quality and performance of machine learning model annotations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndata_labeling_service.create_evaluation_job.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests - Node.js\nDESCRIPTION: This snippet details the steps for installing necessary dependencies and running various tests, including unit tests, sample integration tests, and system tests, for the Google Cloud Node.js project. Make sure Node.js is installed and properly set up before executing these commands.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\n        npm test\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\n        npm run samples-test\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\n        npm run system-test\n```\n\nLANGUAGE: bash\nCODE:\n```\n# Lint (and maybe fix) any changes:\n        npm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating AWS Clusters with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to create an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample illustrates the creation of a new managed AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.create_aws_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Creating Event Threat Detection Custom Module in Google Cloud Security Center - JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a custom module for event threat detection in Google Cloud Security Center using Node.js. This allows for tailoring the detection criteria specific to the user’s environment. Make sure to follow security best practices when creating custom modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating an event threat detection custom module\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createEventThreatDetectionCustomModule() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID', // Required\n    // Additional parameters for the custom module\n  };\n  const [response] = await client.createEventThreatDetectionCustomModule(request);\n  console.log(response);\n}\n\ncreateEventThreatDetectionCustomModule();\n```\n\n----------------------------------------\n\nTITLE: Get AlloyDB Connection Information using Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve connection information for an AlloyDB instance using the AlloyDB Admin API in Node.js. It uses the get_connection_info method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.get_connection_info.js\n```\n\n----------------------------------------\n\nTITLE: Listing App Connectors - Node.js\nDESCRIPTION: This code snippet demonstrates how to list App Connectors using the BeyondCorp API client in Node.js. It establishes a client, constructs a request, and iterates through the results to log them. Make sure to provide the resource name and other optional parameters as needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Appconnectors library\nconst {AppConnectorsServiceClient} =\n  require('@google-cloud/appconnectors').v1;\n\n// Instantiates a client\nconst appconnectorsClient = new AppConnectorsServiceClient();\n\nasync function callListAppConnectors() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await appconnectorsClient.listAppConnectorsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAppConnectors();\n```\n\n----------------------------------------\n\nTITLE: Creating Managed Kafka Connector in Node.js\nDESCRIPTION: This snippet shows how to create a connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.create_connector.js\n```\n\n----------------------------------------\n\nTITLE: Adding Initial Samples and Tests for Google Cloud Channel API Node.js Client\nDESCRIPTION: This commit adds initial samples and tests for the Google Cloud Channel API Node.js client library. It refers to issue #3 in the project repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* initial samples and tests ([#3](https://www.github.com/googleapis/nodejs-channel/issues/3)) ([8b62dff](https://www.github.com/googleapis/nodejs-channel/commit/8b62dff1ef30649bcecadde8e862dce85446a2de))\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Target in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to rollback a target using the Cloud Deploy API. It uses the rollback_target method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.rollback_target.js\n```\n\n----------------------------------------\n\nTITLE: Workflow Management in Google Cloud Node.js\nDESCRIPTION: Sample scripts demonstrating workflow lifecycle management, including creating, deleting, retrieving, listing, and updating workflows using Google Cloud Node.js library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample operations for Workflow Management\n```\n\n----------------------------------------\n\nTITLE: Company Service Update Company\nDESCRIPTION: Demonstrates how to update a company using the Company Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/company_service.update_company.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Products in a Product Set with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to list products within a specific product set using the Google Cloud Vision API. It utilizes the product_search.list_products_in_product_set method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.list_products_in_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating Notification Config in Google Cloud Security Center - JavaScript\nDESCRIPTION: This snippet shows how to create a notification configuration in Google Cloud Security Center using Node.js. It enables users to set up notifications based on specific findings, ensuring timely alerts of security issues. Adjust the notification parameters as per the organizational requirements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a notification configuration\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createNotificationConfig() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID', // Required\n    notificationConfig: {\n      // Notification configuration properties go here\n    },\n  };\n  const [response] = await client.createNotificationConfig(request);\n  console.log(response);\n}\n\ncreateNotificationConfig();\n```\n\n----------------------------------------\n\nTITLE: Getting URI Pattern Document Data in Node.js\nDESCRIPTION: This sample demonstrates how to get URI pattern document data using the DiscoveryEngine API in Node.js.  It utilizes the `Site_search_engine_service.get_uri_pattern_document_data` to retrieve the document data based on a URI pattern.  The DiscoveryEngine client should be initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_GetURIPatternDocumentData_async]\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Template - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet allows you to retrieve details of a specific template in Google Cloud Dataflow, beneficial for understanding template structure and usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {TemplatesServiceClient} = require('@google-cloud/dataflow');\nconst client = new TemplatesServiceClient();\n// Functionality to get a template goes here.\n```\n\n----------------------------------------\n\nTITLE: Listing Examples with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to list examples using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the list_examples method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.list_examples.js\n```\n\n----------------------------------------\n\nTITLE: Updating Reservations with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to update reservations using the BigQuery Reservation Service API in Node.js. This allows you to modify existing reservation properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.update_reservation.js\n```\n\n----------------------------------------\n\nTITLE: Running AutoML Prediction Service Sample in Node.js\nDESCRIPTION: Command to execute the AutoML prediction service sample script. This sample demonstrates how to use the prediction functionality of Google Cloud AutoML.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-automl/samples/generated/v1beta1/prediction_service.predict.js\n```\n\n----------------------------------------\n\nTITLE: Creating Conversation Model Evaluation in Dialogflow v2\nDESCRIPTION: Demonstrates how to create a conversation model evaluation in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and creates a new evaluation for a conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.create_conversation_model_evaluation.js`\n```\n\n----------------------------------------\n\nTITLE: Importing Data to SQL Instance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to import data into a Google Cloud SQL instance using the `import` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.import.js`\n```\n\n----------------------------------------\n\nTITLE: Analyzing Governed Assets - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates the analysis of org policy-governed assets using the Google Cloud Asset API. Prerequisites include Node.js and the Google Cloud SDK. Outputs include details regarding governed assets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for analyzing governed assets\n```\n\n----------------------------------------\n\nTITLE: Listing Billing Accounts with Node.js\nDESCRIPTION: Example demonstrating how to use the Cloud Billing client library to list billing accounts for a project. The code initializes the client, makes an API call to fetch billing accounts, and displays account details including display name, open status, and parent billing account.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {CloudBillingClient} = require('@google-cloud/billing');\n\n// Creates a client\nconst client = new CloudBillingClient();\n\n// name = 'my-project' // Project name to list billing accounts for.\n\nasync function listBillingAccounts() {\n  const [accounts] = await client.listBillingAccounts({\n    name,\n  });\n  console.info(`found ${accounts.length} billing accounts:`);\n  for (const account of accounts) {\n    console.info(`${account.displayName}:`);\n    console.info(`\\topen: ${account.open}`);\n    console.info(`\\tparentBillingAccount: ${account.masterBillingAccount}`);\n  }\n}\nlistBillingAccounts();\n```\n\n----------------------------------------\n\nTITLE: Creating Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to create a model using the Google Cloud Retail API. It uses the createModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.create_model.js\n```\n\n----------------------------------------\n\nTITLE: Retriever Service: Resource Retrieval Samples\nDESCRIPTION: Sample code for retrieving information about chunks, corpora, and documents using the Google Cloud AI Generative Language Retriever Service in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Get Chunk Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Get Corpus Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Get Document Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service List Chunks Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service List Corpora Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service List Documents Sample\n```\n\n----------------------------------------\n\nTITLE: Running AutoML Quickstart Sample in Node.js\nDESCRIPTION: Command to execute the AutoML quickstart sample script. This provides a basic introduction to using Google Cloud AutoML with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-automl/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dialogflow API Client Library\nDESCRIPTION: This command installs the Dialogflow API client library for Node.js using npm (Node Package Manager). This allows you to use Dialogflow services in your Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dialogflow\n```\n\n----------------------------------------\n\nTITLE: Starting Manual Transfer Runs with BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This example demonstrates how to initiate manual transfer runs using the BigQuery Data Transfer Service client for Node.js. Usage instructions are provided for running the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/generated/v1/data_transfer_service.start_manual_transfer_runs.js\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.createProductSet method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to create a new product set in Google Cloud Vision API. This creates a collection that can contain multiple products for visual search.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.create_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to create a new service in Google Cloud Run. It uses the Services.create_service method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.create_service.js\n```\n\n----------------------------------------\n\nTITLE: Listing Essential Contacts with Node.js Client\nDESCRIPTION: Demonstrates how to import the Essential Contacts client library, initialize the client, and list contacts for a specified project. Dependencies include the '@google-cloud/essential-contacts' package and a valid Google Cloud project ID. The function outputs contact details to the console.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// eslint-disable-next-line node/no-missing-require\nconst {\n  EssentialContactsServiceClient,\n} = require('@google-cloud/essential-contacts');\n\n// TODO(developer): replace with your prefered project ID and serviceName.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new EssentialContactsServiceClient();\n\nasync function listContacts() {\n  const [response] = await client.listContacts({\n    parent: `projects/${projectId}`,\n  });\n  console.info(response);\n}\nlistContacts();\n```\n\n----------------------------------------\n\nTITLE: Batch Getting Effective IAM Policies with Node.js\nDESCRIPTION: This sample shows how to batch get effective IAM policies for assets using the Google Cloud Asset API. It helps users understand which permissions are effectively granted, requiring the right credentials and access. Proper setup and permissions are crucial.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: batch_get_effective_iam_policies.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function batchGetEffectiveIAMPolicies() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nbatchGetEffectiveIAMPolicies();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file in the project directory to determine the required packages and their versions, then downloads and installs them into the `node_modules` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Security Center Quickstart Sample in Node.js\nDESCRIPTION: This command executes the Security Center quickstart script, which requires an organization parameter. The quickstart demonstrates basic functionality of the Google Cloud Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: Bash\nCODE:\n```\nnode quickstart.js [organization]\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Delete User in Node.js\nDESCRIPTION: Describes how to delete an AlloyDB user using the Node.js client library. This includes setting up the AlloyDBAdmin client and utilizing the `deleteUser` method. Proper configuration and authentication of the Google Cloud project are essential.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.delete_user | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_user.js)\"\n```\n\n----------------------------------------\n\nTITLE: Using the Infrastructure Manager API Client to List Deployments\nDESCRIPTION: Example Node.js code demonstrating how to use the Infrastructure Manager API client to list deployments. The snippet initializes the client, sets up request parameters, and iterates through the response using async/await.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent in whose context the Deployments are listed. The\n *  parent value is in the format:\n *  'projects/{project_id}/locations/{location}'.\n */\n// const parent = 'abc123'\n/**\n *  When requesting a page of resources, 'page_size' specifies number of\n *  resources to return. If unspecified or set to 0, all resources will be\n *  returned.\n */\n// const pageSize = 1234\n/**\n *  Token returned by previous call to 'ListDeployments' which specifies the\n *  position in the list from where to continue listing the resources.\n */\n// const pageToken = 'abc123'\n/**\n *  Lists the Deployments that match the filter expression. A filter\n *  expression filters the resources listed in the response. The expression\n *  must be of the form '{field} {operator} {value}' where operators: '<', '>',\n *  '<=', '>=', '!=', '=', ':' are supported (colon ':' represents a HAS\n *  operator which is roughly synonymous with equality). {field} can refer to a\n *  proto or JSON field, or a synthetic field. Field names can be camelCase or\n *  snake_case.\n *  Examples:\n *  - Filter by name:\n *    name = \"projects/foo/locations/us-central1/deployments/bar\n *  - Filter by labels:\n *    - Resources that have a key called 'foo'\n *      labels.foo:*\n *    - Resources that have a key called 'foo' whose value is 'bar'\n *      labels.foo = bar\n *  - Filter by state:\n *    - Deployments in CREATING state.\n *      state=CREATING\n */\n// const filter = 'abc123'\n/**\n *  Field to use to sort the list.\n */\n// const orderBy = 'abc123'\n\n// Imports the Config library\nconst {ConfigClient} = require('@google-cloud/config').v1;\n\n// Instantiates a client\nconst configClient = new ConfigClient();\n\nasync function callListDeployments() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await configClient.listDeploymentsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDeployments();\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB Cluster using Node.js\nDESCRIPTION: This JavaScript code snippet demonstrates how to create a new AlloyDB cluster using the Google Cloud Node.js client library. It requires the appropriate project and authorization to run. This snippet takes no parameters and is expected to instantiate a new cluster within the specified project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Streaming Content Generation with Generative Service in Javascript\nDESCRIPTION: This sample utilizes the `streamGenerateContent` method of the Generative Service for streaming content generation. It uses the google-ai-generativelanguage package to demonstrate how to process and generate content in a streaming fashion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Predicting with Prediction Service in JavaScript\nDESCRIPTION: This sample demonstrates how to make predictions using the PredictionService in the google-ai-generativelanguage package. Executing the given command runs the sample, which sends a prediction request and displays the result.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/prediction_service.predict.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Permissions with Permission Service in JavaScript\nDESCRIPTION: This sample demonstrates listing permissions using the PermissionService within the google-ai-generativelanguage package. Running the command executes the sample which displays a list of permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.list_permissions.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Crypto Key with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a crypto key using the google-cloud-kms library in a Node.js environment.  It utilizes the given command to create a new crypto key.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.create_crypto_key.js`\n```\n\n----------------------------------------\n\nTITLE: Completing Query with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet demonstrates how to complete a query using the Google Cloud Retail API. It utilizes the CompletionService client to retrieve completion suggestions for a given query.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/completion_service.complete_query.js\n```\n\n----------------------------------------\n\nTITLE: Listing Namespaces with Service Directory\nDESCRIPTION: This JavaScript code snippet demonstrates how to list namespaces using the Google Cloud Service Directory client library. It initializes the client, constructs the location path, and then calls the listNamespaces method to retrieve a list of namespaces associated with the specified project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"//\n// TODO(developer): Uncomment these variables before running the sample.\n//\n// const projectId = 'my-project';\n// const locationId = 'us-central1';\n\n// Imports the Google Cloud client library\nconst {\n  RegistrationServiceClient,\n} = require('@google-cloud/service-directory');\n\n// Creates a client\nconst registrationServiceClient = new RegistrationServiceClient();\n\n// Build the location name\nconst locationName = registrationServiceClient.locationPath(\n  projectId,\n  locationId\n);\n\nasync function listNamespaces() {\n  const [namespaces] = await registrationServiceClient.listNamespaces({\n    parent: locationName,\n  });\n\n  console.log('Namespaces: ');\n  for (const n of namespaces) {\n    console.log(`${n.name}`);\n  }\n  return namespaces;\n}\n\nreturn listNamespaces();\n\"\n```\n\n----------------------------------------\n\nTITLE: Listing Environments in Node.js\nDESCRIPTION: This snippet lists all environments available in a Dialogflow project. It allows developers to see what environments are currently set up and interact with them as needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_90\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - List environments\nconst {EnvironmentsClient} = require('@google-cloud/dialogflow');\nconst client = new EnvironmentsClient();\n\nasync function listEnvironments() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.listEnvironments(request);\n  console.log(response);\n}\nlistEnvironments();\n```\n\n----------------------------------------\n\nTITLE: Executing Product Set Creation Node.js Script\nDESCRIPTION: This command runs a Node.js script to create a product set via the Google Cloud Vision API. Prerequisites include having Node.js installed and configured. The operation takes product set details as input and confirms the creation as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.create_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Update Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to update a worker pool using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Updating a Tag Template Field in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This sample demonstrates how to update a specific field within a Tag Template in Google Cloud Data Catalog using the google-cloud-datacatalog library with Node.js. The `updateTagTemplateField` method is called, passing the necessary parameters to modify the specified field. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(name, tagTemplateField) {\n  // [START datacatalog_update_tag_template_field]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const name = 'projects/my-project/locations/us-central1/tagTemplates/my_template/fields/my_field';\n  // const tagTemplateField = {};\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function updateTagTemplateField() {\n    const [response] = await datacatalog.updateTagTemplateField({\n      name: name,\n      tagTemplateField: tagTemplateField,\n    });\n    console.log(`Tag Template Field updated: ${response.name}`);\n  }\n  updateTagTemplateField();\n  // [END datacatalog_update_tag_template_field]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: SQL Connectivity Management in Google Cloud SQL Node.js\nDESCRIPTION: Sample code for managing database connectivity including generating ephemeral certificates and retrieving connection settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Tenant Service Create Tenant\nDESCRIPTION: Demonstrates how to create a tenant using the Tenant Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/tenant_service.create_tenant.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Document AI Warehouse Client Library in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Document AI Warehouse client library in Node.js. It shows the process of instantiating a client and making a request to list rule sets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of document.\n *  Format: projects/{project_number}/locations/{location}.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of rule sets to return. The service may return\n *  fewer than this value.\n *  If unspecified, at most 50 rule sets will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListRuleSets` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListRuleSets`\n *  must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Contentwarehouse library\nconst {RuleSetServiceClient} = require('@google-cloud/contentwarehouse').v1;\n\n// Instantiates a client\nconst contentwarehouseClient = new RuleSetServiceClient();\n\nasync function callListRuleSets() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await contentwarehouseClient.listRuleSetsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListRuleSets();\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to update connection profiles in Node.js\nDESCRIPTION: Example showing how to update connection profiles using the Google Cloud Datastream API. This sample demonstrates the update_connection_profile method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.update_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js library. They include unit tests, sample integration tests, and system tests. Each command should be run separately in the project's root directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Tuning QA Scorecard Revision in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to tune a QA scorecard revision using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.tune_qa_scorecard_revision method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.tune_qa_scorecard_revision.js\n```\n\n----------------------------------------\n\nTITLE: List Conference Participants using Google Meet API\nDESCRIPTION: Sample code demonstrating how to list participants in a conference using the Conference Records Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.list_participants.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Product using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to delete a product using the Google Cloud Vision API. It utilizes the ProductSearch.deleteProduct method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.delete_product.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Client Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Device Registry in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet provides functionality to update device registries in Google Cloud IoT. It helps manage groups of devices efficiently. Dependencies include the Google Cloud IoT library, with inputs being the registry ID and updated properties, outputs include a confirmation of the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.update_device_registry.js).\n```\n\n----------------------------------------\n\nTITLE: Listing SQL Instances with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to list Google Cloud SQL instances using the `list` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.list.js`\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Conversation Profiles in Node.js\nDESCRIPTION: Commands for handling conversation profiles in Dialogflow, including creation, deletion, configuration, and management operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_81\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.clear_suggestion_feature_config.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.create_conversation_profile.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.delete_conversation_profile.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.get_conversation_profile.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.list_conversation_profiles.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.set_suggestion_feature_config.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversation_profiles.update_conversation_profile.js\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Tasks with Delivery Service API in Node.js\nDESCRIPTION: This snippet demonstrates how to batch create tasks using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.batch_create_tasks.js\n```\n\n----------------------------------------\n\nTITLE: Listing Entry Groups with Node.js\nDESCRIPTION: Shows how to list entry groups in Google Cloud Data Catalog using Node.js, requiring the `@google-cloud/datacatalog` package for execution. This command-line tool aids in catalog entry group overviews and audits.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.list_entry_groups.js\n```\n\n----------------------------------------\n\nTITLE: Sample Code for Quickstart in Cloud IDS\nDESCRIPTION: This is a sample quickstart implementation showing how to use the Cloud IDS client library. It typically includes the basic steps to set up and initiate a request successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst {IDSClient} = require('@google-cloud/ids');\n\nconst client = new IDSClient();\n\nasync function quickstart() {\n  // Quickstart code logic goes here\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Group in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet shows how to create an entry group in Google Cloud's Data Catalog service. The implementation requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst {DataCatalogClient} = require('@google-cloud/datacatalog');\nconst client = new DataCatalogClient();\n\nasync function createEntryGroup() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n    entryGroup: {\n      displayName: 'YOUR_ENTRY_GROUP_NAME',\n      description: 'Your entry group description',\n    },\n  };\n  const [response] = await client.createEntryGroup(request);\n  console.log('Entry Group created:', response);\n}\ncreateEntryGroup();\n```\n\n----------------------------------------\n\nTITLE: List Certificate Templates using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to list Certificate Templates using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.list_certificate_templates.js\n```\n\n----------------------------------------\n\nTITLE: Get Notification Config for Security Center\nDESCRIPTION: Retrieves a notification configuration from Google Cloud Security Center using the Node.js client library. This demonstrates fetching configurations related to notifications in Security Center. This sample requires the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_notification_config\"\n```\n\n----------------------------------------\n\nTITLE: Managing Notebook Instance Operations - JavaScript/Node.js\nDESCRIPTION: Collection of Node.js code samples for managing Google Cloud Notebooks instances, including rollback, start/stop, upgrade, and configuration operations. Each sample demonstrates a specific instance management operation through the Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.rollback_instance.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.start_instance.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.stop_instance.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.upgrade_instance.js\n```\n\n----------------------------------------\n\nTITLE: Serializing Taxonomies with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line scripts for exporting and importing taxonomies using the Policy Tag Manager Serialization API. Enables transfer and backup of taxonomy configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager_serialization.export_taxonomies.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager_serialization.import_taxonomies.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud SQL API in Node.js. It demonstrates basic usage of the client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Streaming Intent Detection using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to perform streaming intent detection using the Dialogflow API. It utilizes the sessions.streaming_detect_intent method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_78\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/sessions.streaming_detect_intent.js\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Speech Adaptation Classes in Node.js\nDESCRIPTION: Sample script for creating custom classes in Google Cloud Speech API's adaptation feature. Enables fine-tuning of speech recognition with domain-specific vocabulary and context.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-speech/samples/generated/v1p1beta1/adaptation.create_custom_class.js\n```\n\n----------------------------------------\n\nTITLE: Creating Environment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Creates a new environment in Dialogflow V2beta1. The code uses the `create_environment` function, likely using the Dialogflow client library. This function is responsible for sending a request to the Dialogflow API to create the new environment, including specifying necessary parameters like the environment's display name and description.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Project using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet demonstrates how to update a project using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/projects.update_project.js\n```\n\n----------------------------------------\n\nTITLE: Creating Restore for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to create a restore operation in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and involves specifying the restore parameters such as the backup ID and resource settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Create Restore\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.createRestore(request)\n  .then(response => {\n    console.log('Restore created:', response);\n  })\n  .catch(err => {\n    console.error('Error creating restore:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Listing Products - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet retrieves and lists products from Google Cloud Retail. It needs Node.js and proper setup with Google Cloud libraries. The expected output is a list of all products available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for listing products\n```\n\n----------------------------------------\n\nTITLE: Installing Document AI Client with npm\nDESCRIPTION: This command installs the Document AI client library as a dependency for your Node.js project using npm. This allows you to use the Document AI API within your application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/documentai\"\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments using ApiHubClient in Node.js\nDESCRIPTION: This code snippet demonstrates how to list deployments using the ApiHubClient. It initializes the client, constructs a request with the parent resource, and then iterates through the responses from the listDeploymentsAsync method, printing each response to the console.  The code requires the `@google-cloud/apihub` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of deployment resources.\n *  Format: `projects/{project}/locations/{location}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. An expression that filters the list of Deployments.\n *  A filter expression consists of a field name, a comparison\n *  operator, and a value for filtering. The value must be a string. The\n *  comparison operator must be one of: `<`, `>` or\n *  `=`. Filters are not case sensitive.\n *  The following fields in the `Deployments` are eligible for filtering:\n *    * `display_name` - The display name of the Deployment. Allowed\n *    comparison operators: `=`.\n *    * `create_time` - The time at which the Deployment was created. The\n *    value should be in the (RFC3339)https://tools.ietf.org/html/rfc3339\n *    format. Allowed comparison operators: `>` and `<`.\n *    * `resource_uri` - A URI to the deployment resource. Allowed\n *    comparison operators: `=`.\n *    * `api_versions` - The API versions linked to this deployment. Allowed\n *    comparison operators: `:`.\n *    * `deployment_type.enum_values.values.id` - The allowed value id of the\n *    deployment_type attribute associated with the Deployment. Allowed\n *    comparison operators: `:`.\n *    * `deployment_type.enum_values.values.display_name` - The allowed value\n *    display name of the deployment_type attribute associated with the\n *    Deployment. Allowed comparison operators: `:`.\n *    * `slo.string_values.values` -The allowed string value of the slo\n *    attribute associated with the deployment. Allowed comparison\n *    operators: `:`.\n *    * `environment.enum_values.values.id` - The allowed value id of the\n *    environment attribute associated with the deployment. Allowed\n *    comparison operators: `:`.\n *    * `environment.enum_values.values.display_name` - The allowed value\n *    display name of the environment attribute associated with the deployment.\n *    Allowed comparison operators: `:`.\n *  Expressions are combined with either `AND` logic operator or `OR` logical\n *  operator but not both of them together i.e. only one of the `AND` or `OR`\n *  operator can be used throughout the filter string and both the operators\n *  cannot be used together. No other logical operators are supported. At most\n *  three filter fields are allowed in the filter string and if provided\n *  more than that then `INVALID_ARGUMENT` error is returned by the API.\n *  Here are a few examples:\n *    * `environment.enum_values.values.id: staging-id` - The allowed value id\n *    of the environment attribute associated with the Deployment is\n *    _staging-id_.\n *    * `environment.enum_values.values.display_name: \\\"Staging Deployment\\\"` -\n *    The allowed value display name of the environment attribute associated\n *    with the Deployment is `Staging Deployment`.\n *    * `environment.enum_values.values.id: production-id AND create_time <\n *    \\\"2021-08-15T14:50:00Z\\\" AND create_time > \\\"2021-08-10T12:00:00Z\\\"` -\n *    The allowed value id of the environment attribute associated with the\n *    Deployment is _production-id_ and Deployment was created before\n *    _2021-08-15 14:50:00 UTC_ and after _2021-08-10 12:00:00 UTC_.\n *    * `environment.enum_values.values.id: production-id OR\n *    slo.string_values.values: \\\"99.99%\\\"`\n *    - The allowed value id of the environment attribute Deployment is\n *    _production-id_ or string value of the slo attribute is _99.99%_.\n */\n// const filter = 'abc123'\n/**\n *  Optional. The maximum number of deployment resources to return. The service\n *  may return fewer than this value. If unspecified, at most 50 deployments\n *  will be returned. The maximum value is 1000; values above 1000 will be\n *  coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListDeployments` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters (except page_size) provided to\n *  `ListDeployments` must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Apihub library\nconst {ApiHubClient} = require('@google-cloud/apihub').v1;\n\n// Instantiates a client\nconst apihubClient = new ApiHubClient({fallback: 'rest'});\n\nasync function callListDeployments() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = apihubClient.listDeploymentsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDeployments();\n\n```\n\n----------------------------------------\n\nTITLE: Creating Issue Model with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the create_issue_model method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_issue_model.js\n```\n\n----------------------------------------\n\nTITLE: Creating Control with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet illustrates how to create a control using the Google Cloud Retail API. It utilizes the ControlService client to create a new control within a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/control_service.create_control.js\n```\n\n----------------------------------------\n\nTITLE: Listing Workflow Templates - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This code snippet retrieves a list of all workflow templates available in a Google Cloud Dataproc project. It outputs the details of each template found.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function listWorkflowTemplates() {\n  const request = {\n    parent: 'projects/your-project/regions/global',\n  };\n  const [response] = await client.listWorkflowTemplates(request);\n  console.log('Workflow templates:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Saved Query - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates the creation of a saved query within the Google Cloud Asset API. Prerequisites include the Google Cloud SDK and Node.js. Expected outputs detail the saved query results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for creating a saved query\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Delete Instance in Node.js\nDESCRIPTION: Explains how to delete an AlloyDB instance using the Node.js client library. It involves setting up the AlloyDBAdmin client and calling the `deleteInstance` method. Correct configuration and authentication of the Google Cloud project are prerequisites.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.delete_instance | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_instance.js)\"\n```\n\n----------------------------------------\n\nTITLE: Getting User Feedback in Data QnA with Node.js\nDESCRIPTION: This sample demonstrates how to get user feedback using the Question Service in Data QnA. It requires the google-cloud-dataqna package and proper GCP setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/question_service.get_user_feedback.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Plan Associations with BackupDR in Node.js\nDESCRIPTION: This snippet provides an example of how to list backup plan associations using the BackupDR service in Node.js. It showcases the command-line usage for executing the sample, using the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_backup_plan_associations.js`\n```\n\n----------------------------------------\n\nTITLE: Creating LB Route Extension with Network Services API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a load balancer route extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.create_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Generator in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet shows how to create a generator in Dialogflow CX using the Node.js client library. The `Generators.create_generator` method is used. Ensure the Dialogflow CX client is correctly initialized with authentication before executing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Generators_CreateGenerator_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callCreateGenerator() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [result] = await client.createGenerator(request);\n  console.log(result);\n}\n\ncallCreateGenerator();\n// [END dialogflow_cx_v3_generated_Generators_CreateGenerator_async]\n```\n\n----------------------------------------\n\nTITLE: Insert SQL User\nDESCRIPTION: Inserts a SQL user using the google-cloud-sql Node.js library. The sample demonstrates how to call the `insert` method from the `Sql_users_service` to add a new user.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nSql_users_service.insert\n```\n\n----------------------------------------\n\nTITLE: Exporting a Dialogflow Agent using Node.js\nDESCRIPTION: This code snippet is used for exporting a Dialogflow agent. It requires the Google Cloud Dialogflow client library. You will need the agent ID to perform the export operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n'node packages/google-cloud-dialogflow/samples/generated/v2/agents.export_agent.js'\n```\n\n----------------------------------------\n\nTITLE: Running Taxonomy Creation Script in Node.js\nDESCRIPTION: This script creates a new taxonomy in the Google Cloud Data Catalog using Node.js. It requires appropriate Google Cloud IAM permissions to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.create_taxonomy.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud DNS Client in Node.js\nDESCRIPTION: This code demonstrates how to initialize the Cloud DNS client and list all DNS zones in the current project. It imports the DNS class from the @google-cloud/dns package, creates a client instance, and queries for all zones.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {DNS} = require('@google-cloud/dns');\n\n// Creates a client\nconst dns = new DNS();\n\nasync function quickstart() {\n  // Lists all zones in the current project\n  const [zones] = await dns.getZones();\n  console.log('Zones:');\n  zones.forEach(zone => console.log(zone.name));\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Using Google Chat API to List Spaces\nDESCRIPTION: Example code demonstrating how to use the Google Chat API client to list spaces. Shows initialization of the ChatServiceClient and making an async request to list spaces with optional parameters for pagination and filtering.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Optional. The maximum number of spaces to return. The service might return\n *  fewer than this value.\n *  If unspecified, at most 100 spaces are returned.\n *  The maximum value is 1,000. If you use a value more than 1,000, it's\n *  automatically changed to 1,000.\n *  Negative values return an `INVALID_ARGUMENT` error.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous list spaces call.\n *  Provide this parameter to retrieve the subsequent page.\n *  When paginating, the filter value should match the call that provided the\n *  page token. Passing a different value may lead to unexpected results.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. A query filter.\n *  You can filter spaces by the space type\n *  (`space_type` (https://developers.google.com/chat/api/reference/rest/v1/spaces#spacetype)).\n *  To filter by space type, you must specify valid enum value, such as\n *  `SPACE` or `GROUP_CHAT` (the `space_type` can't be\n *  `SPACE_TYPE_UNSPECIFIED`). To query for multiple space types, use the `OR`\n *  operator.\n *  For example, the following queries are valid:\n *  ```\n *  space_type = \"SPACE\"\n *  spaceType = \"GROUP_CHAT\" OR spaceType = \"DIRECT_MESSAGE\"\n *  ```\n *  Invalid queries are rejected by the server with an `INVALID_ARGUMENT`\n *  error.\n */\n// const filter = 'abc123'\n\n// Imports the Chat library\nconst {ChatServiceClient} = require('@google-apps/chat').v1;\n\n// Instantiates a client\nconst chatClient = new ChatServiceClient();\n\nasync function callListSpaces() {\n  // Construct request\n  const request = {};\n\n  // Run request\n  const iterable = chatClient.listSpacesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListSpaces();\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Space with Google Chat API in Node.js\nDESCRIPTION: This snippet describes how to set up a chat space using the Google Chat API. It provides functionality for creating a new space and includes necessary setup and parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to set up a space\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function setUpSpace(spaceData) {\n  const res = await client.setUpSpace(spaceData);\n  console.log(res);\n}\nsetUpSpace({name: 'New Space', type: 'PUBLIC'});\n```\n\n----------------------------------------\n\nTITLE: AutoML Undeploy Model in Node.js\nDESCRIPTION: This sample demonstrates how to undeploy a model using the AutoML API with Node.js. The `undeployModel` function is used. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.undeploy_model\"\n```\n\n----------------------------------------\n\nTITLE: BackupDR createBackupVault Sample\nDESCRIPTION: This sample demonstrates how to create a backup vault using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Dataform Repository File and Directory Management\nDESCRIPTION: Collection of sample scripts for managing files and directories in Dataform repositories, including reading contents, searching files, and performing directory operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Quickstart - Google Cloud Connectors\nDESCRIPTION: Basic quickstart script demonstrating initial setup and usage of the Google Cloud Connectors Node.js SDK\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-connectors/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex List Lakes\nDESCRIPTION: Lists all lakes using a Node.js script in Google Cloud Dataplex. Requires Node.js and Google Cloud setup. Script 'dataplex_service.list_lakes.js' fetches and outputs lake information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_lakes.js\n```\n\n----------------------------------------\n\nTITLE: Job Service Search Jobs\nDESCRIPTION: Demonstrates how to search jobs using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating DLP Job in Node.js\nDESCRIPTION: Sample implementation for creating a DLP job. Located at /google-privacy-dlp/samples/generated/v2/dlp_service.create_dlp_job.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.create_dlp_job.js\n```\n\n----------------------------------------\n\nTITLE: Create Workload in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to create a workload within the Assured Workloads service using the google-cloud-node library. It uses the AssuredWorkloadsService client to create a new workload with the specified configurations. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Client Gateway Quickstart: Node.js\nDESCRIPTION: This snippet serves as a quickstart guide to interact with the BeyondCorp API for client gateways. It requires the Node.js environment and appropriate libraries. The example demonstrates basic operations and expected outputs for user interaction.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-clientgateways/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Intent Matching\nDESCRIPTION: Executes the script to match user inputs to known intents within a Dialogflow CX session. Requires Node.js and relevant Dialogflow CX credentials. Matches and returns the most relevant intent based on user input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.match_intent.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Profiles using Cloud Profiler API - Node.js\nDESCRIPTION: This code snippet lists all profiles available via the Cloud Profiler API using Node.js. It demonstrates how to establish a connection to the API and retrieve profile data, essential for performance monitoring.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-cloudprofiler/samples/generated/v2/export_service.list_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Using the Merchant API Node.js Client Library\nDESCRIPTION: Example of using the Merchant API client library to list LFP stores. This snippet demonstrates initializing the client, constructing a request, and iterating through the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The LFP partner.\n *  Format: `accounts/{account}`\n */\n// const parent = 'abc123'\n/**\n *  Required. The Merchant Center id of the merchant to list stores for.\n */\n// const targetAccount = 1234\n/**\n *  Optional. The maximum number of `LfpStore` resources for the given account\n *  to return. The service returns fewer than this value if the number of\n *  stores for the given account is less than the `pageSize`. The default value\n *  is 250. The maximum value is 1000; If a value higher than the maximum is\n *  specified, then the `pageSize` will default to the maximum.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListLfpStoresRequest`\n *  call. Provide the page token to retrieve the subsequent page. When\n *  paginating, all other parameters provided to `ListLfpStoresRequest` must\n *  match the call that provided the page token. The token returned as\n *  nextPageToken google.shopping.merchant.lfp.v1beta.ListLfpStoresResponse.next_page_token\n *  in the response to the previous request.\n */\n// const pageToken = 'abc123'\n\n// Imports the Lfp library\nconst {LfpStoreServiceClient} = require('@google-shopping/lfp').v1beta;\n\n// Instantiates a client\nconst lfpClient = new LfpStoreServiceClient();\n\nasync function callListLfpStores() {\n  // Construct request\n  const request = {\n    parent,\n    targetAccount,\n  };\n\n  // Run request\n  const iterable = lfpClient.listLfpStoresAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListLfpStores();\n```\n\n----------------------------------------\n\nTITLE: Getting Permission with Permission Service in Javascript\nDESCRIPTION: This sample code demonstrates the usage of `getPermission` method from Permission Service. It uses google-ai-generativelanguage package to retrieve a permission entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Firewall Rule Management in Google App Engine using Node.js\nDESCRIPTION: Sample code demonstrating firewall ingress rule operations in Google App Engine. Includes batch updates, creating, reading, updating, deleting and listing ingress rules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.batch_update_ingress_rules.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.create_ingress_rule.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.delete_ingress_rule.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.get_ingress_rule.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.list_ingress_rules.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/firewall.update_ingress_rule.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Shopping Merchant Accounts API with Node.js. It demonstrates basic usage and setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Managing Tuned AI Models\nDESCRIPTION: Collection of samples demonstrating CRUD operations for tuned AI models including creation, deletion, updating and listing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/model_service.create_tuned_model.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/model_service.delete_tuned_model.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/model_service.update_tuned_model.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/model_service.list_tuned_models.js\n```\n\n----------------------------------------\n\nTITLE: Listing Assets using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list assets using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.list_assets.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Conversation with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet illustrates how to delete a conversation using the Contact Center Insights API. It employs the delete_conversation method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Managing Data Store Services in Node.js\nDESCRIPTION: These snippets demonstrate creating, deleting, listing, getting, and updating data stores using the Google Discovery Engine in Node.js. Each operation has a dedicated script that shows how to use the Google Cloud Node.js client library efficiently. Users must have the Google Cloud SDK set up and configured before running these scripts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Data_store_service.create_data_store\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/data_store_service.create_data_store.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Data_store_service.delete_data_store\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/data_store_service.delete_data_store.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Data_store_service.get_data_store\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/data_store_service.get_data_store.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Data_store_service.list_data_stores\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/data_store_service.list_data_stores.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Data_store_service.update_data_store\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/samples/generated/v1beta/data_store_service.update_data_store.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart with Google Cloud Secret Manager in Node.js\nDESCRIPTION: This quickstart code initializes and executes basic secret management operations using the Google Cloud Secret Manager API in Node.js. Dependencies include the `@google-cloud/secret-manager` package. The input is typically an environment with adequate Google Cloud permissions. This provides a foundational understanding of secret management functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Rollout Sample\nDESCRIPTION: This sample demonstrates how to create a rollout using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_rollout.js\"\n```\n\n----------------------------------------\n\nTITLE: Google Chat Quickstart - JavaScript\nDESCRIPTION: This quickstart snippet provides a simplified method to interact with the Google Chat API. It serves as a template for new users to begin using Google Chat functionality. It assumes a minimal setup of Node.js and Google Cloud Credentials. Inputs include basic configurations, and outputs show initial interactions with the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n```javascript\n// Quickstart code for Google Chat\nconst { ChatServiceClient } = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function quickstart() {\n  const [spaces] = await client.listSpaces();\n  console.log('Spaces:', spaces);\n}\nquickstart();\n```\n```\n\n----------------------------------------\n\nTITLE: Retrieving Notebook Environment Details\nDESCRIPTION: Sample script for fetching details of a specific Google Cloud Notebook environment using the Notebook Service API in Node.js. Provides information about existing notebook environments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-notebooks\\/samples\\/generated\\/v1beta1\\/notebook_service.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Mapping Rule with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code example demonstrates how to delete a mapping rule using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.delete_mapping_rule.js\n```\n\n----------------------------------------\n\nTITLE: Searching Assignments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to search for assignments using the BigQuery Reservation Service API in Node.js. This allows you to find assignments based on specific criteria within a project or location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.search_assignments.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create Cluster in Node.js\nDESCRIPTION: Shows how to create an AlloyDB cluster using the Node.js client library. It involves initializing the AlloyDBAdmin client and invoking the `createCluster` method. The sample assumes that the necessary project setup and authentication are already configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_cluster | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_cluster.js)\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Model in AutoML with Node.js\nDESCRIPTION: This snippet shows how to delete a model in AutoML using Node.js. The model ID must be specified, and feedback is provided after the deletion operation completes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function deleteModel(projectId, computeRegion, modelId) {\n  const request = {\n    name: client.modelPath(projectId, computeRegion, modelId),\n  };\n  const [operation] = await client.deleteModel(request);\n  await operation.promise();\n  console.log(`Model deleted: ${modelId}`);\n}\n\ndeleteModel('your-project-id', 'us-central1', 'your-model-id');\n```\n\n----------------------------------------\n\nTITLE: Quickstart for BeyondCorp API using Node.js\nDESCRIPTION: This snippet provides a quickstart example for the BeyondCorp API using Node.js. It offers a simple command to run the quickstart sample application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Validating Event Threat Detection Custom Module in Javascript\nDESCRIPTION: This snippet demonstrates how to validate an Event Threat Detection Custom Module using the google-cloud-securitycentermanagement library. The code can be found in the linked GitHub repository and executed in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.validate_event_threat_detection_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: List De-identify Templates with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code snippet shows how to list de-identify templates using the Google Cloud DLP service. It uses the listDeidentifyTemplates method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_deidentify_templates.js\n```\n\n----------------------------------------\n\nTITLE: Implementing Streaming Speech Recognition in Node.js\nDESCRIPTION: Sample script demonstrating streaming speech recognition using Google Cloud Speech API. Supports real-time audio processing and continuous speech-to-text conversion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-speech/samples/generated/v1/speech.streaming_recognize.js\n```\n\n----------------------------------------\n\nTITLE: Batch Processing Documents - Google Cloud Node.js (v1beta3)\nDESCRIPTION: This snippet demonstrates batch document processing using the Document Processor service in v1beta3. Input includes configuration for the documents to be processed, with outputs detailing the batch processing operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code for batch processing documents\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { requests: batchRequest };\nconst [operation] = await client.batchProcessDocuments(request);\n```\n\n----------------------------------------\n\nTITLE: Moderating Text with Google Cloud Natural Language API (v2)\nDESCRIPTION: This snippet demonstrates how to use the moderate_text method of the Language Service API (v2) to analyze text for potentially sensitive or inappropriate content. It requires the google-cloud-language package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v2/language_service.moderate_text.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Deploy Policy Sample\nDESCRIPTION: This sample demonstrates how to create a deploy policy using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_deploy_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: List Supported Database Flags for AlloyDB using Node.js\nDESCRIPTION: This code snippet demonstrates how to list supported database flags for AlloyDB using the AlloyDB Admin API in Node.js. It uses the list_supported_database_flags method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_supported_database_flags.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Entities with Google Cloud Natural Language API (v2)\nDESCRIPTION: This snippet demonstrates how to use the analyze_entities method of the Language Service API (v2) to identify and extract information about entities mentioned in text. It requires the google-cloud-language package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v2/language_service.analyze_entities.js\n```\n\n----------------------------------------\n\nTITLE: Ingesting Context References in Dialogflow (JavaScript)\nDESCRIPTION: This snippet shows how to ingest context references for a conversation in Dialogflow. It uses the ingest_context_references method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.ingest_context_references.js\n```\n\n----------------------------------------\n\nTITLE: Using the Google Cloud Speech Client Library\nDESCRIPTION: This JavaScript snippet shows how to use the Google Cloud Speech client library to transcribe audio files. It includes importing the library, initializing a client, and configuring request parameters such as audio file location and encoding. Make sure you have authenticated your service account before invoking this function.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst speech = require('@google-cloud/speech');\n\n// Creates a client\nconst client = new speech.SpeechClient();\n\nasync function quickstart() {\n  // The path to the remote LINEAR16 file\n  const gcsUri = 'gs://cloud-samples-data/speech/brooklyn_bridge.raw';\n\n  // The audio file's encoding, sample rate in hertz, and BCP-47 language code\n  const audio = {\n    uri: gcsUri,\n  };\n  const config = {\n    encoding: 'LINEAR16',\n    sampleRateHertz: 16000,\n    languageCode: 'en-US',\n  };\n  const request = {\n    audio: audio,\n    config: config,\n  };\n\n  // Detects speech in the audio file\n  const [response] = await client.recognize(request);\n  const transcription = response.results\n    .map(result => result.alternatives[0].transcript)\n    .join('\\n');\n  console.log(`Transcription: ${transcription}`);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Creating a Partition with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample shows how to create a partition using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.create_partition.js\n```\n\n----------------------------------------\n\nTITLE: Updating SQL Database Configurations in Google Cloud\nDESCRIPTION: Sample scripts for modifying database configurations in Google Cloud SQL using the Node.js client library. Demonstrates patch and update operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.patch.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.update.js\n```\n\n----------------------------------------\n\nTITLE: Executing Long-Running Speech Recognition in Node.js\nDESCRIPTION: Sample script demonstrating long-running speech recognition using Google Cloud Speech API. Allows processing of longer audio files asynchronously with advanced recognition capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-speech/samples/generated/v1/speech.long_running_recognize.js\n```\n\n----------------------------------------\n\nTITLE: Inserting SQL Users with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet demonstrates how to insert new SQL users using the Google Cloud SQL API. It uses the sql_users_service.insert method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_users_service.insert.js\n```\n\n----------------------------------------\n\nTITLE: Listing Secrets with Google Cloud Secret Manager in Node.js\nDESCRIPTION: This snippet illustrates how to list all secrets in a project using the Google Cloud Secret Manager service. It employs the list_secrets method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.list_secrets.js\n```\n\n----------------------------------------\n\nTITLE: Get Job Execution Details with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve job execution details using the Dataflow API in Node.js. The command executes the `get_job_execution_details.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/metrics_v1_beta3.get_job_execution_details.js`\n```\n\n----------------------------------------\n\nTITLE: Fetching Static IPs with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet demonstrates how to fetch static IPs using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.fetch_static_ips.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Policy Tags and Taxonomies with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line scripts for retrieving policy tags and taxonomies using the Policy Tag Manager API. Includes operations to get specific tags and taxonomies and list available resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.get_policy_tag.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.get_taxonomy.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.list_policy_tags.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.list_taxonomies.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Connected Site Tag - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a connected site tag using Google Analytics Admin Service through Node.js. To use this snippet, the Google Cloud Node.js client library is needed. Users must provide the identifier of the site tag they wish to delete. Successful execution results in the deletion of the target site tag.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteConnectedSiteTag(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Get Organization Settings in Security Center\nDESCRIPTION: Retrieves organization settings from Google Cloud Security Center using the Node.js client library. It shows how to fetch configurations related to organization-level settings within Security Center. It depends on the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_organization_settings\"\n```\n\n----------------------------------------\n\nTITLE: Creating Transition Route Group in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to create a new transition route group in a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_138\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/transition_route_groups.create_transition_route_group.js\n```\n\n----------------------------------------\n\nTITLE: Creating Sessions with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for creating sessions using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionController.createSession method to create a new interactive session for data processing tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_controller.create_session.js\n```\n\n----------------------------------------\n\nTITLE: Add Fulfillment Places Product Retail API\nDESCRIPTION: This sample demonstrates how to add fulfillment places to a product using the Retail API using Node.js. It involves setting up the necessary authentication and calling the `addFulfillmentPlaces` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/product_service.add_fulfillment_places.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Workflows using Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to update a workflow using the Google Cloud Workflows Executions Node.js Client. It establishes the necessary settings and calls the appropriate method to perform the update operation, intended for developers working with Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for updating a workflow\nasync function updateWorkflow() {\n  const { WorkflowsServiceClient } = require('@google-cloud/workflows');\n  const client = new WorkflowsServiceClient();\n\n  const request = {\n    // Specify the workflow here\n  };\n\n  const response = await client.updateWorkflow(request);\n  console.log(`Updated workflow: ${response.name}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running Batch Test Case Deletion\nDESCRIPTION: Executes the script to delete multiple test cases in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Accepts a list of test case IDs, confirming each deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_65\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/test_cases.batch_delete_test_cases.js\n```\n\n----------------------------------------\n\nTITLE: Listing Entry Groups in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet provides functionality to list all entry groups in the Google Cloud Dataplex service, requiring appropriate configuration with the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for listing entry groups\n\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace - Google Cloud Node.js\nDESCRIPTION: This JavaScript code creates a namespace in Google Cloud Service Directory. It uses the `@google-cloud/service-directory` library and requires namespace metadata as input. Outputs include the namespace details after creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_namespace.js>\n```\n\n----------------------------------------\n\nTITLE: Creating Model - Node.js\nDESCRIPTION: This snippet shows how to create a model using the Financial Services API in Node.js. The implementation requires the Google Cloud client library and proper authentication. It prepares the request with the model parameters and logs the result after execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Create model\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createModel() {\n    const request = { /* parameters for model */ };\n    const response = await client.createModel(request);\n    console.log(response);\n}\ncreateModel();\n```\n\n----------------------------------------\n\nTITLE: Updating AWS Node Pool - Google Cloud Node\nDESCRIPTION: This snippet is used to update a specified AWS node pool's properties. The update parameters must be provided accurately, and authentication is necessary to modify the node pool settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.updateAwsNodePool({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster/awsNodePools/my-node-pool', update: {/* update details */}});\n```\n\n----------------------------------------\n\nTITLE: Listing Policy Tags in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet showcases how to list Policy Tags within a given Taxonomy in Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js. It uses the `listPolicyTags` method to retrieve the policy tags. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(parent) {\n  // [START datacatalog_list_policy_tags]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const parent = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function listPolicyTags() {\n    const [policyTags] = await policyTagManagerClient.listPolicyTags({\n      parent: parent,\n    });\n    console.log('Policy Tags:');\n    policyTags.forEach(policyTag => console.log(policyTag));\n  }\n  listPolicyTags();\n  // [END datacatalog_list_policy_tags]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Listing Prediction Results in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to list prediction results using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_prediction_results.js`\n```\n\n----------------------------------------\n\nTITLE: BigQuery Connection Service Quickstart (Node.js)\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud BigQuery Connection Service in Node.js. It demonstrates basic usage of the service and requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Attribute Bindings - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet lists all data attribute bindings associated with a certain data taxonomy in Google Cloud Dataplex. It helps in understanding the bindings and their relationships.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to list data attribute bindings\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function listDataAttributeBindings() {\n  const request = {parent: 'parent_id'};\n  const [response] = await client.listDataAttributeBindings(request);\n  console.log(response);\n}\nlistDataAttributeBindings();\n```\n\n----------------------------------------\n\nTITLE: Listing Intents in Node.js\nDESCRIPTION: This snippet demonstrates how to list all intents associated with a Dialogflow agent, providing developers with an overview of all defined intents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_104\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - List intents\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function listIntents() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.listIntents(request);\n  console.log(response);\n}\nlistIntents();\n```\n\n----------------------------------------\n\nTITLE: Creating Environment in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to create a new environment in Dialogflow CX using Node.js. The sample provides a command-line execution example for the environment creation operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.create_environment.js\n```\n\n----------------------------------------\n\nTITLE: Installing Secret Manager Node.js Client Library\nDESCRIPTION: This command installs the Secret Manager client library for Node.js using npm. It adds the @google-cloud/secret-manager package to your project's dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/secret-manager\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Participants\nDESCRIPTION: Sample codes for participant management including creation, listing, and content analysis using Dialogflow API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_107\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/participants.create_participant.js\n```\n\n----------------------------------------\n\nTITLE: Detect Intent with Audio Input in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Dialogflow CX API's Node.js client library to detect intent from audio input. It sets up a session, reads an audio file, constructs a request with the audio and configuration, and then sends the request to the Dialogflow CX API. Finally, it parses the response and prints the user query, agent response, matched intent (if any), and the current page.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\n// const location = 'global';\n// const agentId = 'my-agent';\n// const audioFileName = '/path/to/audio.raw';\n// const encoding = 'AUDIO_ENCODING_LINEAR_16';\n// const sampleRateHertz = 16000;\n// const languageCode = 'en'\n\n// Imports the Google Cloud Some API library\nconst {SessionsClient} = require('@google-cloud/dialogflow-cx');\n/**\n * Example for regional endpoint:\n *   const location = 'us-central1'\n *   const client = new SessionsClient({apiEndpoint: 'us-central1-dialogflow.googleapis.com'})\n */\nconst client = new SessionsClient();\n\nconst fs = require('fs');\nconst util = require('util');\n// Assumes uuid module has been installed from npm,\n// npm i uuid:\nconst {v4} = require('uuid');\n\nasync function detectIntentAudio() {\n  const sessionId = v4();\n  const sessionPath = client.projectLocationAgentSessionPath(\n    projectId,\n    location,\n    agentId,\n    sessionId\n  );\n\n  // Read the content of the audio file and send it as part of the request.\n  const readFile = util.promisify(fs.readFile);\n  const inputAudio = await readFile(audioFileName);\n\n  const request = {\n    session: sessionPath,\n    queryInput: {\n      audio: {\n        config: {\n          audioEncoding: encoding,\n          sampleRateHertz: sampleRateHertz,\n        },\n        audio: inputAudio,\n      },\n      languageCode,\n    },\n  };\n  const [response] = await client.detectIntent(request);\n  console.log(`User Query: ${response.queryResult.transcript}`);\n  for (const message of response.queryResult.responseMessages) {\n    if (message.text) {\n      console.log(`Agent Response: ${message.text.text}`);\n    }\n  }\n  if (response.queryResult.match.intent) {\n    console.log(\n      `Matched Intent: ${response.queryResult.match.intent.displayName}`\n    );\n  }\n  console.log(\n    `Current Page: ${response.queryResult.currentPage.displayName}`\n  );\n}\n\ndetectIntentAudio();\n\n```\n\n----------------------------------------\n\nTITLE: Updating a Knowledge Base in Dialogflow using Node.js\nDESCRIPTION: This JavaScript script is executed in Node.js to update a knowledge base within Google Cloud Dialogflow. Required environment includes installation of the Google Cloud Node.js client library and an operational Node.js setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/knowledge_bases.update_knowledge_base.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating Security Settings in Dialogflow CX using Node.js\nDESCRIPTION: The Node.js script creates security settings in Dialogflow CX, employing the client library and requiring authentication. Outputs details of the created security settings upon success.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_130\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/security_settings_service.create_security_settings.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Delivery Pipeline Sample\nDESCRIPTION: This sample demonstrates how to create a delivery pipeline using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_delivery_pipeline.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Reference Image using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a reference image using the Google Cloud Vision API. It uses the ProductSearch.getReferenceImage method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.get_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Using Retail API Client Library with Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Retail API client library in a Node.js application. It initializes a client, then calls the listCatalogs method to retrieve a list of catalogs from the Retail API. Note that you have to set projectId and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"// Imports the Google Cloud client library\nconst {CatalogServiceClient} = require('@google-cloud/retail');\n\n// TODO(developer): uncomment these variables with your information\n// const projectId = 'my-project'\n// const location = 'global'\n\n// Creates a client\nconst client = new CatalogServiceClient();\n\nasync function listCatalogs() {\n  const catalogs = await client.listCatalogs({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(catalogs);\n}\nlistCatalogs();\n\"\n```\n\n----------------------------------------\n\nTITLE: Getting Backup Index Download URL for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to get a download URL for the backup index in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and the parameters include the backup ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Backup Index Download URL\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getBackupIndexDownloadUrl(request)\n  .then(response => {\n    console.log('Download URL:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving download URL:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Quickstart for BigQuery Migration API in Node.js\nDESCRIPTION: A quickstart guide showing basic usage of the BigQuery Migration API with Node.js. This sample shows the command to execute the Node.js quickstart script for the BigQuery Migration service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-migration/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using the Cloud Media Translation Client Library - JavaScript\nDESCRIPTION: This JavaScript snippet shows how to use the Cloud Media Translation client library to translate audio streams. It illustrates how to create a client and set up a streaming request for translation using audio content, including handling and processing the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst fs = require('fs');\n\n// Imports the CLoud Media Translation client library\nconst {\n  SpeechTranslationServiceClient,\n} = require('@google-cloud/media-translation');\n\n// Creates a client\nconst client = new SpeechTranslationServiceClient();\n\nasync function quickstart() {\n  /**\n   * TODO(developer): Uncomment the following lines before running the sample.\n   */\n  // const filename = 'Local path to audio file, e.g. /path/to/audio.raw';\n  // const encoding = 'Encoding of the audio file, e.g. LINEAR16';\n  // const sourceLanguage = 'BCP-47 source language code, e.g. en-US';\n  // const targetLanguage = 'BCP-47 target language code, e.g. es-ES';\n\n  const config = {\n    audioConfig: {\n      audioEncoding: encoding,\n      sourceLanguageCode: sourceLanguage,\n      targetLanguageCode: targetLanguage,\n    },\n  };\n\n  // First request needs to have only a streaming config, no data.\n  const initialRequest = {\n    streamingConfig: config,\n    audioContent: null,\n  };\n\n  const readStream = fs.createReadStream(filename, {\n    highWaterMark: 4096,\n    encoding: 'base64',\n  });\n\n  const chunks = [];\n  readStream\n    .on('data', chunk => {\n      const request = {\n        streamingConfig: config,\n        audioContent: chunk.toString(),\n      };\n      chunks.push(request);\n    })\n    .on('close', () => {\n      // Config-only request should be first in stream of requests\n      stream.write(initialRequest);\n      for (let i = 0; i < chunks.length; i++) {\n        stream.write(chunks[i]);\n      }\n      stream.end();\n    });\n\n  const stream = client.streamingTranslateSpeech().on('data', response => {\n    const {result} = response;\n    if (result.textTranslationResult.isFinal) {\n      console.log(\n        `\\nFinal translation: ${result.textTranslationResult.translation}`\n      );\n      console.log(`Final recognition result: ${result.recognitionResult}`);\n    } else {\n      console.log(\n        `\\nPartial translation: ${result.textTranslationResult.translation}`\n      );\n      console.log(`Partial recognition result: ${result.recognitionResult}`);\n    }\n  });\n}\n\n```\n\n----------------------------------------\n\nTITLE: Get Entity Type - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to retrieve an entity type using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `getEntityType` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/entity_types.get_entity_type.js`\n```\n\n----------------------------------------\n\nTITLE: Setting URI Pattern Document Data in Node.js\nDESCRIPTION: This sample demonstrates how to set URI pattern document data using the DiscoveryEngine API in Node.js. The `Site_search_engine_service.set_uri_pattern_document_data` method is used to set the document data for a given URI pattern. Requires a properly initialized and authenticated DiscoveryEngine client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_SetURIPatternDocumentData_async]\"\n```\n\n----------------------------------------\n\nTITLE: Get Membership - Chat Service - Node.js\nDESCRIPTION: This sample shows how to get information about a specific membership in a Google Chat space using Node.js. The code utilizes the `get_membership` method of the `Chat_service` to retrieve the details of a membership in a space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Creating Listing - Node.js\nDESCRIPTION: This snippet demonstrates how to create a listing in a data exchange using the Analytics Hub API in Node.js. Ensure to authenticate before running the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to create a listing\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function createListing() {\n  const request = {\n    // Define your Listing parameters here\n  };\n  const [response] = await client.createListing(request);\n  console.log('Listing created:', response);\n}\n\ncreateListing();\n```\n\n----------------------------------------\n\nTITLE: Creating GKE Hub Membership - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a membership in GKE Hub using the create_membership method. It requires the GKE Hub client library for JavaScript. The main parameters are the membership details, which will be specified in the code, and the output is the response from the API indicating the success of the creation operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.create_membership.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.create_membership.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Reference Image using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates the creation of a reference image using the Google Cloud Vision API. It uses the ProductSearch.createReferenceImage method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.create_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Get Queue Sample Usage\nDESCRIPTION: This sample demonstrates how to retrieve a queue using the Cloud Tasks API in Node.js. The script `cloud_tasks.get_queue.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.get_queue.js`\n```\n\n----------------------------------------\n\nTITLE: Validating a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet validates a flow in Dialogflow CX using the Node.js client library. The `Flows.validate_flow` method is used to check the flow for any errors or inconsistencies. Ensure that the Dialogflow CX client is properly initialized and authenticated before running this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_ValidateFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callValidateFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow',\n  };\n\n  // Make the request\n  const [operation] = await client.validateFlow(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallValidateFlow();\n// [END dialogflow_cx_v3_generated_Flows_ValidateFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Database Migration Service Node.js Client\nDESCRIPTION: This snippet demonstrates how to use the Cloud Database Migration Service client library to list migration jobs. It imports the library, creates a client, and iterates through migration jobs, printing their names and states.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {DataMigrationServiceClient} = require('@google-cloud/dms');\n\n// const parent = 'projects/my-project', // Project to list service usage for.\n\n// Creates a client\nconst client = new DataMigrationServiceClient();\nasync function listMigrationJobs() {\n  for await (const migration of client.listMigrationJobsAsync({\n    parent: `projects/${projectId}/locations/${location}`,\n  })) {\n    console.info(`${migration.name} ${migration.state}`);\n  }\n}\nlistMigrationJobs();\n```\n\n----------------------------------------\n\nTITLE: Getting Generative Settings in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve the generative settings for an agent in Dialogflow CX. It uses the agents.get_generative_settings method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_84\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.get_generative_settings.js\n```\n\n----------------------------------------\n\nTITLE: Managing Authorization Policies in Google Cloud Network Security - Node.js\nDESCRIPTION: Collection of samples for creating, reading, updating, deleting, and listing authorization policies in Google Cloud Network Security API. Available in both v1 and v1beta1 versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/README.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Uploading Conversation - Google Cloud Contact Center Insights - JavaScript\nDESCRIPTION: This snippet demonstrates how to upload a conversation to the Contact Center Insights API using Node.js. It utilizes the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n\"const {ContactCenterInsightsClient} = require('@google-cloud/contact-center-insights');\\nconst client = new ContactCenterInsightsClient();\\n\\nasync function uploadConversation() {\\n  const request = {\\n    parent: 'projects/your-project-id/',\\n    conversation: {\\n      data: 'your-conversation-data'\\n    }\\n  };\\n\\n  const result = await client.uploadConversation(request);\\n  console.log('Uploaded Conversation:', result);\\n}\\n\\nuploadConversation();\"\n```\n\n----------------------------------------\n\nTITLE: Listing Security Settings Dialogflow CX with Node.js\nDESCRIPTION: This snippet lists security settings using the Dialogflow CX API in Node.js. It requires the `@google-cloud/dialogflow-cx` package.  The script is executed from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/security_settings_service.list_security_settings.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Endpoint - Google Cloud Node.js\nDESCRIPTION: This Node.js script retrieves information about a specified endpoint within Google's Service Directory. It leverages the `@google-cloud/service-directory` library. The script requires the endpoint's name and returns its detailed information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_endpoint.js>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Revision in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a revision in Google Cloud Run. It uses the Revisions.delete_revision method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/revisions.delete_revision.js\n```\n\n----------------------------------------\n\nTITLE: Creating View with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates the usage of the create_view method from the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_view.js\n```\n\n----------------------------------------\n\nTITLE: Batch Processing Documents - Google Cloud Node.js (v1beta1)\nDESCRIPTION: This snippet shows how to perform batch processing of documents using Document Understanding service in v1beta1. You need to provide the input documents and processing configurations. The output includes details about the processing job initiated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code for batch processing documents\nconst {DocumentUnderstandingServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentUnderstandingServiceClient();\nconst request = { requests: batchRequest };\nconst [operation] = await client.batchProcessDocuments(request);\n```\n\n----------------------------------------\n\nTITLE: Creating a Webhook in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to create a new webhook in Dialogflow CX. It uses the webhooks.create_webhook method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_74\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/webhooks.create_webhook.js\n```\n\n----------------------------------------\n\nTITLE: Listing Datastream Connection Profiles in Node.js\nDESCRIPTION: This code snippet provides an example of how to list all connection profiles in Google Cloud Datastream using Node.js, enabling bulk data management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.list_connection_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex List Assets\nDESCRIPTION: This Node.js command lists assets within a specified Dataplex service. Requires Node.js with a Google Cloud project setup. Invokes the script 'dataplex_service.list_assets.js' to retrieve and display a list of available assets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_assets.js\n```\n\n----------------------------------------\n\nTITLE: Getting Google Cloud Function Details - Node.js\nDESCRIPTION: This code snippet allows users to retrieve details about a specific Google Cloud Function using the cloud_functions_service. It is useful for querying function configurations and status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.get_function.js\n```\n\n----------------------------------------\n\nTITLE: Permission Service: Update Permission Sample\nDESCRIPTION: Sample code for updating permissions in the Google Cloud AI Generative Language Permission Service using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nPermission Service Update Permission Sample\n```\n\n----------------------------------------\n\nTITLE: Stopping an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This code shows how to stop a running experiment in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and assumes proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_92\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.stop_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Get Workload V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a specific workload from the Assured Workloads service (v1beta1) using the google-cloud-node library. It uses the AssuredWorkloadsService client to fetch a workload by its name or identifier. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Service in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet updates a service in the Dataproc Metastore. Users need to have Node.js installed to utilize this functionality. The input parameters should specify the service details which are then utilized to perform the update action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update service\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.update_service.js\n```\n\n----------------------------------------\n\nTITLE: Getting Organization Settings with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve organization settings using the Google Cloud Security Center API. Organization settings control security center behavior at the organization level.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_organization_settings.js\n```\n\n----------------------------------------\n\nTITLE: Batch Getting Assets History with Node.js\nDESCRIPTION: This sample demonstrates how to batch get the history of assets in Google Cloud. Using the Google Cloud Asset API, it enables users to track historical changes across assets. Proper authentication and permissions are required to access the records.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: batch_get_assets_history.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function batchGetAssetsHistory() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nbatchGetAssetsHistory();\n```\n\n----------------------------------------\n\nTITLE: Create Generator - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to create a generator using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `createGenerator` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/generators.create_generator.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Dialogflow CX Version - JavaScript\nDESCRIPTION: This snippet updates an existing version of a Dialogflow CX agent. It interacts with the Dialogflow CX API to modify version properties based on the provided version ID. Dependencies include the Dialogflow CX library. The function accepts updated details along with the version ID and confirms the update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_149\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {VersionsClient} = require('@google-cloud/dialogflow-cx');\nconst client = new VersionsClient();\n\nasync function updateVersion(versionId, updateData) {\n  const request = {\n    version: {\n      ...updateData,\n      name: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT/versions/${versionId}`\n    }\n  };\n  const response = await client.updateVersion(request);\n  console.log('Updated version:', response);\n}\n\nupdateVersion('VERSION_ID', {displayName: 'Updated Version'});\n```\n\n----------------------------------------\n\nTITLE: Listing Conversation Model Evaluations in Dialogflow v2\nDESCRIPTION: Demonstrates how to list conversation model evaluations in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and retrieves a list of conversation model evaluations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.list_conversation_model_evaluations.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Views in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to list views using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.list_views method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.list_views.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Group with Node.js\nDESCRIPTION: Illustrates the deletion of an entry group from Google Cloud Data Catalog using Node.js and the `@google-cloud/datacatalog` package. The script is run from the command line and is useful for managing and cleaning up entry groups.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.delete_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.list_streams in Node.js\nDESCRIPTION: Sample code for listing streams using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve all streams within a project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.list_streams.js\n```\n\n----------------------------------------\n\nTITLE: Running Intent Fulfillment\nDESCRIPTION: Executes the script to fulfill detected intents in a Dialogflow CX session. Requires Node.js and relevant Dialogflow CX credentials. Processes intent to provide a suitable response or action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.fulfill_intent.js\n```\n\n----------------------------------------\n\nTITLE: Listing SQL Databases in Google Cloud\nDESCRIPTION: Sample script for listing available databases in Google Cloud SQL using the Node.js client library. Shows how to retrieve a collection of database instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up Stream Objects in Node.js\nDESCRIPTION: This Node.js script showcases how to look up specific stream objects using the Google Cloud Datastream API. It validates and retrieves specified stream data, requiring proper authentication and API configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.lookup_stream_object.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Template with Node.js\nDESCRIPTION: This JavaScript code snippet demonstrates how to create a tag template in Google Cloud Data Catalog using Node.js. Requires the `@google-cloud/datacatalog` package. The script executes from the command line, showcasing how to define and register a new tag template.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.create_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs integration tests for the samples provided in the project. It uses npm to execute the `samples-test` script defined in the `package.json` file. This verifies that the samples are functioning correctly and integrated with the necessary services or APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Listing Clusters - JavaScript\nDESCRIPTION: This snippet lists all clusters available in the project using the Cluster Manager API. It requires proper setup with the Google Cloud Node.js client library to authenticate the request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function listClusters() {\n  const response = await client.listClusters();\n  console.log(`Clusters: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Create Document Example in Node.js\nDESCRIPTION: This code snippet demonstrates how to run the JavaScript sample to create a document using the Retriever service in Google's AI Generative Language. It requires Node.js installed in the environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.create_document.js\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Knowledge Base in Dialogflow using Node.js\nDESCRIPTION: This JavaScript sample runs via Node.js to fetch details of a Dialogflow knowledge base. It requires installation of the Google Cloud Node.js client library and an enabled Node.js runtime.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/knowledge_bases.get_knowledge_base.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Create Certificate in Node.js\nDESCRIPTION: This sample demonstrates how to create a certificate using Google Cloud Certificate Authority Service. The code can be executed directly to interact with the Certificate Authority Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.create_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Dataproc - JavaScript\nDESCRIPTION: This snippet provides a quickstart example of using Google Cloud Dataproc with Node.js, demonstrating basic functionality for initializing and using the service. It sets up the environment and executes an example workflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function quickstart() {\n  // Example workflow initialization\n  console.log('Quickstart executed');\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Asset Feed (v1p2beta1) using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create an asset feed using the Google Cloud Asset Service v1p2beta1 in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1p2beta1/asset_service.create_feed.js`\n```\n\n----------------------------------------\n\nTITLE: Table of Contents for Google Cloud Node.js API Services\nDESCRIPTION: A markdown table of contents listing all available service methods across different Google Cloud API categories including generative, model, cache, discuss, file, permission, prediction, retriever and text services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* [Before you begin](#before-you-begin)\n* [Samples](#samples)\n  * [Generative_service.batch_embed_contents](#generative_service.batch_embed_contents)\n  * [Generative_service.count_tokens](#generative_service.count_tokens)\n  * [Generative_service.embed_content](#generative_service.embed_content)\n  [...]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Evaluation Results with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to get evaluation results for a document processor using the Google Cloud DocumentAI API. It uses the document_processor_service to fetch evaluation data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.get_evaluation.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service Project Attachment - JavaScript\nDESCRIPTION: This snippet explains how to remove an attachment between a service and a project in the Google Cloud App Hub. It requires the attachment ID and returns a success status upon deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst detachServiceFromProject = async (attachmentId) => {\n  await client.deleteServiceProjectAttachment({\n    id: attachmentId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.start_backfill_job in Node.js\nDESCRIPTION: Sample code for starting a backfill job using the Google Cloud Datastream API in Node.js. This script demonstrates how to initiate a backfill operation for a stream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.start_backfill_job.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Dataform with Node.js\nDESCRIPTION: A quickstart example script for initializing and using Google Cloud Dataform with Node.js. Execute it to quickly understand basic Dataform operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Restore for GKE - Node.js\nDESCRIPTION: This snippet shows how to delete a restore operation in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and needs the restore ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Restore\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.deleteRestore(request)\n  .then(response => {\n    console.log('Restore deleted:', response);\n  })\n  .catch(err => {\n    console.error('Error deleting restore:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Datastream in Node.js\nDESCRIPTION: A quickstart example for setting up and using the Google Cloud Datastream client in Node.js. This sample demonstrates basic initialization and usage of the Datastream service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting LUN Details from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This code snippet fetches details for a specific LUN from the API. It requires a Node.js setup to run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_lun.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_lun.js\n```\n\n----------------------------------------\n\nTITLE: List Attack Paths in Security Center\nDESCRIPTION: Lists attack paths in Google Cloud Security Center using the Node.js client library. This sample demonstrates how to retrieve a list of attack paths. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.list_attack_paths\"\n```\n\n----------------------------------------\n\nTITLE: Listing APIs with API Hub using Node.js\nDESCRIPTION: Run this Node.js script to list APIs registered in the Google Cloud API Hub. This tool is essential for maintaining an overview of accessible APIs, making it easier to manage and integrate them during development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_apis.js\n```\n\n----------------------------------------\n\nTITLE: Using Model Service Operations in Google Cloud Retail\nDESCRIPTION: Collection of sample code demonstrating how to perform model operations like delete, get, list, pause, resume, tune and update models using the Cloud Retail API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.delete_model.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.get_model.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.list_models.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.pause_model.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.resume_model.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.tune_model.js\nnode packages/google-cloud-retail/samples/generated/v2beta/model_service.update_model.js\n```\n\n----------------------------------------\n\nTITLE: Updating AWS Cluster - Google Cloud Node\nDESCRIPTION: This snippet updates the configuration of an existing AWS cluster as specified. Ensure that the necessary parameters reflect the desired changes in cluster settings. The GKE Multi-Cloud client should be initialized correctly prior to execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.updateAwsCluster({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster', update: {/* your update details */}});\n```\n\n----------------------------------------\n\nTITLE: Getting Tuned Model with Model Service in Javascript\nDESCRIPTION: This example shows how to get a specific tuned model using the `getTunedModel` method from the Model Service, using the google-ai-generativelanguage package. It helps retrieve information about fine-tuned AI models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Job Service Delete Job\nDESCRIPTION: Demonstrates how to delete a job using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.delete_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Job Service Batch Delete Jobs\nDESCRIPTION: Demonstrates how to batch delete jobs using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.batch_delete_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Get Attachment - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to retrieve an attachment from a message within a Google Chat space using Node.js. It utilizes the `get_attachment` method of the `Chat_service` to fetch an attachment associated with a specific message.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Creating Application Gateway with BeyondCorp API - Node.js\nDESCRIPTION: This snippet demonstrates how to create an application gateway using the BeyondCorp API in Node.js. It should be executed after the required setup steps are completed, including the installation of necessary dependencies. The primary input is the configuration for the application gateway being created, and the expected output is a confirmation of the gateway's successful creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appgateways/samples/generated/v1/app_gateways_service.create_app_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Delete Entity Type - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to delete an entity type using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `deleteEntityType` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/entity_types.delete_entity_type.js`\n```\n\n----------------------------------------\n\nTITLE: Update CA Pool using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to update a Certificate Authority Pool using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.update_ca_pool.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Automation Run Retrieval Sample in Node.js\nDESCRIPTION: This snippet demonstrates executing the retrieval of automation run details using Node.js. Required prior setup includes Node.js and local availability of the Cloud Deploy samples. The script retrieves details of a specific automation run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_automation_run.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Playbook in Dialogflow CX using Node.js\nDESCRIPTION: This Node.js script updates an existing playbook's metadata in Dialogflow CX. Requires authentication and the existing playbook ID. Outputs confirmation of the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_129\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.update_playbook.js\n```\n\n----------------------------------------\n\nTITLE: Creating Endpoint - Google Cloud Node.js\nDESCRIPTION: This script demonstrates creating a new endpoint for a service in the Google Cloud Service Directory using Node.js. It utilizes the `@google-cloud/service-directory` library. Key parameters include service details and endpoint configuration. It outputs the newly created endpoint information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_endpoint.js>\n```\n\n----------------------------------------\n\nTITLE: Importing Conversation Data in Dialogflow v2\nDESCRIPTION: Demonstrates how to import conversation data into Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and imports data into conversation datasets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_datasets.import_conversation_data.js`\n```\n\n----------------------------------------\n\nTITLE: AutoML Batch Predict in Node.js\nDESCRIPTION: This sample demonstrates making batch predictions using the AutoML API with Node.js. The `batchPredict` function of the `Prediction_service` is called. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"Prediction_service.batch_predict\"\n```\n\n----------------------------------------\n\nTITLE: Purging Products - Google Cloud Retail - JavaScript\nDESCRIPTION: This sample demonstrates purging products from Google Cloud Retail. It requires the Node.js environment and relevant libraries. Input is the product ID, and the output confirms the product has been purged.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for purging products\n```\n\n----------------------------------------\n\nTITLE: AutoML Update Dataset in Node.js\nDESCRIPTION: This sample shows how to update a dataset using the AutoML API in Node.js. The `updateDataset` function is called. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.update_dataset\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Webhook in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to update an existing webhook in Dialogflow CX. It uses the webhooks.update_webhook method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_78\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/webhooks.update_webhook.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Filestore Quickstart\nDESCRIPTION: Introductory sample script showing basic usage and initialization of Google Cloud Filestore in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-filestore/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Generating Text using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to generate text using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `generate_text` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_73\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/text_service.generate_text.js`\n```\n\n----------------------------------------\n\nTITLE: Get AlloyDB Backup Information using Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve information about an AlloyDB backup using the AlloyDB Admin API in Node.js. It uses the get_backup method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.get_backup.js\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to get a load balancer traffic extension in Node.js\nDESCRIPTION: Example for retrieving a load balancer traffic extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the get_lb_traffic_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.get_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Listing Live Ad Tag Details in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to list live ad tag details using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.list_live_ad_tag_details.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tasks in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet lists all tasks for a specified job in the batch service. It aids in monitoring the progress and status of tasks. Ensure that proper authentication and Google Cloud Client library setup are in place.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to list tasks\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function listTasks(jobId) {\\n  const response = await client.listTasks(jobId);\\n  console.log(response);\\n}\\nlistTasks('YOUR_JOB_ID');\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Data from AutoML with Node.js\nDESCRIPTION: This snippet shows how to export data from an AutoML dataset using Node.js. The export process is initiated for a specified dataset ID and includes confirmation upon completion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function exportData(projectId, computeRegion, datasetId) {\n  const request = {\n    name: client.datasetPath(projectId, computeRegion, datasetId),\n  };\n  const [operation] = await client.exportData(request);\n  await operation.promise();\n  console.log(`Data exported from dataset: ${datasetId}`);\n}\n\nexportData('your-project-id', 'us-central1', 'your-dataset-id');\n```\n\n----------------------------------------\n\nTITLE: Package Version Comparison Snippets\nDESCRIPTION: Git comparison URLs showing changes between different package versions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[npm history][1]\n\n[1]: https://www.npmjs.com/package/@google-cloud/recaptcha-enterprise?activeTab=versions\n```\n\n----------------------------------------\n\nTITLE: Update Airflow Environment with Node.js\nDESCRIPTION: Example demonstrating how to update an existing Cloud Composer Airflow environment using the Google Cloud API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.update_environment.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Node Pool Details with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to retrieve details about a node pool in an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows how to get information about worker nodes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.get_aws_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Executing Google Cloud Data Plex Data Scan Service Scripts\nDESCRIPTION: These scripts serve as examples to show how to manage data scans using Google Cloud services through Node.js scripts. The scripts use the Google Cloud Node.js library to interface with data scanning capabilities such as creating, deleting, and updating data scans, as well as managing data scan jobs. Execution is through Node.js, requiring proper Google Cloud authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.create_data_scan.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.delete_data_scan.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.generate_data_quality_rules.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.get_data_scan.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.get_data_scan_job.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.list_data_scan_jobs.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.list_data_scans.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.run_data_scan.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_scan_service.update_data_scan.js\n```\n\n----------------------------------------\n\nTITLE: Getting Resource Value Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve a resource value configuration using the Google Cloud Security Center API. Resource value configs help prioritize security findings based on resource importance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_resource_value_config.js\n```\n\n----------------------------------------\n\nTITLE: Resetting Replica Size with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to reset the replica size of a Google Cloud SQL instance using the `reset_replica_size` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.reset_replica_size.js`\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy - Node.js\nDESCRIPTION: This snippet illustrates how to retrieve the IAM policy for a specific resource using the Analytics Hub API in Node.js. Proper authentication is needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to get IAM policy\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function getIamPolicy() {\n  const request = {\n    resource: 'projects/your-project-id',\n  };\n  const [response] = await client.getIamPolicy(request);\n  console.log('IAM Policy retrieved:', response);\n}\n\ngetIamPolicy();\n```\n\n----------------------------------------\n\nTITLE: Listing Scan Runs with Web Security Scanner in Node.js\nDESCRIPTION: This script lists all scan runs for a given scan configuration using Google Cloud Web Security Scanner. It requires the Node.js environment and appropriate Google Cloud credentials. It outputs a list of scan runs associated with the specified configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.list_scan_runs.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Asset Feed Details with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample shows how to retrieve details of a specific feed in the Google Cloud Asset Inventory service using the v1p2beta1 API version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p2beta1/asset_service.get_feed.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a service in Google Cloud Run. It uses the Services.delete_service method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.delete_service.js\n```\n\n----------------------------------------\n\nTITLE: Creating Route in Google Cloud Datastream - Node.js\nDESCRIPTION: Creates a new route in Google Cloud Datastream. The snippet needs the Google Cloud Datastream client library and appropriate permissions for route creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function createRoute() {\n  const request = {\n    // Route parameters\n  };\n\n  const [operation] = await client.createRoute(request);\n  const [response] = await operation.promise();\n  console.log('Route created:', response);\n}\n\ncreateRoute();\n```\n\n----------------------------------------\n\nTITLE: Listing Glossary Entries with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code sample demonstrates how to list glossary entries using the Translation Service. It utilizes the list_glossary_entries method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_glossary_entries.js\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to get a load balancer route extension in Node.js\nDESCRIPTION: Example for retrieving a load balancer route extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the get_lb_route_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.get_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Using the Google Cloud Security Command Center client library in Node.js\nDESCRIPTION: A quickstart example demonstrating how to create a SecurityCenterClient, connect to the API, and list security sources from a Google Cloud project. It imports the library, initializes the client, and uses async/await to fetch and display sources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst sc = require('@google-cloud/security-center');\n\n// Create a client\nconst client = new sc.SecurityCenterClient();\n\nasync function quickstart() {\n  // TODO(developer): choose the project to use\n  // const project = 'your-project';\n\n  if (!project) {\n    project = await client.getProjectId();\n  }\n\n  let counter = 0;\n  for await (const source of client.listSourcesAsync({\n    parent: `projects/${project}`,\n  })) {\n    ++counter;\n    console.log(source);\n  }\n  console.log(`${counter} sources listed.`);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Document Processor Service Methods - Node.js\nDESCRIPTION: Collection of DocumentAI processor service methods including processor management, evaluation, and document processing capabilities. These methods are part of the v1beta3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// No direct code snippets shown in content, only links to source files:\n// - document_processor_service.get_evaluation.js\n// - document_processor_service.get_processor.js \n// - document_processor_service.get_processor_type.js\n// - document_processor_service.get_processor_version.js\n// - document_processor_service.import_processor_version.js\n// - document_processor_service.list_evaluations.js\n// And more...\n```\n\n----------------------------------------\n\nTITLE: Listing Rollouts in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to list rollouts in Cloud Deploy. It utilizes the list_rollouts method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_rollouts.js\n```\n\n----------------------------------------\n\nTITLE: Initializing Vision API v1p4beta1 Client in JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize the v1p4beta1 version of the Vision API client using the @google-cloud/vision library. It requires the @google-cloud/vision package as a dependency. This specific version includes online PDF and async batch image annotation functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst vision = require('@google-cloud/vision');\nconst client = new vision.v1p4beta1.ImageAnnotatorClient();\n```\n\n----------------------------------------\n\nTITLE: Creating a Dataset in AutoML with Node.js\nDESCRIPTION: This code snippet demonstrates how to create a dataset in AutoML using Node.js. The script utilizes the Google Cloud AutoML client library, and it requires the setup of the environment as indicated in the project documentation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function createDataset(projectId, computeRegion, datasetName) {\n  const dataset = {\n    displayName: datasetName,\n    textClassification: {\n      classificationType: 'MULTICLASS',\n    },\n  };\n  const request = {\n    parent: client.locationPath(projectId, computeRegion),\n    dataset: dataset,\n  };\n  const [operation] = await client.createDataset(request);\n  const [response] = await operation.promise();\n  console.log(`Dataset created: ${response.name}`);\n}\n\ncreateDataset('your-project-id', 'us-central1', 'My Dataset');\n```\n\n----------------------------------------\n\nTITLE: Querying Assets - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates how to query assets using the Google Cloud Asset API. It requires a Node.js environment and the Google Cloud SDK. Expected outputs will be the result of the asset query.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Asset querying code\n```\n\n----------------------------------------\n\nTITLE: Using Product Service Operations in Google Cloud Retail\nDESCRIPTION: Collection of sample code demonstrating product management operations like adding fulfillment places, managing inventory, creating/deleting products, and import/export functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_73\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.add_fulfillment_places.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.add_local_inventories.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.create_product.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.delete_product.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.export_products.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.get_product.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.import_products.js\nnode packages/google-cloud-retail/samples/generated/v2beta/product_service.list_products.js\n```\n\n----------------------------------------\n\nTITLE: Searching Knowledge in a Conversation with Dialogflow V2beta1\nDESCRIPTION: This code sample shows how to search for relevant knowledge within a conversation using the Dialogflow V2beta1 API in Node.js. It utilizes the `Conversations.search_knowledge` method to query knowledge connectors for answers.  The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Conversations.search_knowledge\"\n```\n\n----------------------------------------\n\nTITLE: Getting Job with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to get a job using the Job Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.get_job.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.get_job.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Notebook Instance (v2)\nDESCRIPTION: This code sample illustrates how to retrieve information about a specific Notebook instance using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting Annotation Specification in AutoML with Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve an annotation specification for a dataset in AutoML using Node.js. It requires the dataset ID and returns the relevant annotation specification.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function getAnnotationSpec(projectId, computeRegion, datasetId) {\n  const request = {\n    parent: client.datasetPath(projectId, computeRegion, datasetId),\n  };\n  const [response] = await client.getAnnotationSpec(request);\n  console.log(`Annotation Spec: ${JSON.stringify(response)}`);\n}\n\ngetAnnotationSpec('your-project-id', 'us-central1', 'your-dataset-id');\n```\n\n----------------------------------------\n\nTITLE: Using Access Approval Client Library in Node.js\nDESCRIPTION: Example showing how to initialize the Access Approval client and list approval requests for a project. Demonstrates basic usage of the client library including imports, client instantiation, and making API calls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {AccessApprovalClient} = require('@google-cloud/access-approval');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new AccessApprovalClient();\n\nasync function listRequests() {\n  const requests = await client.listApprovalRequests({\n    parent: `projects/${projectId}`,\n  });\n  console.info(requests);\n}\nlistRequests();\n```\n\n----------------------------------------\n\nTITLE: Snapshot Job with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to snapshot a job using the Dataflow API in Node.js. The command executes the `snapshot_job.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.snapshot_job.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Streams in Node.js\nDESCRIPTION: Demonstrates updating stream configurations using Google Cloud Datastream API in Node.js. The script requires access permissions and existing stream identifiers for updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.update_stream.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Updating Tool in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to update an existing tool in a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_137\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/tools.update_tool.js\n```\n\n----------------------------------------\n\nTITLE: Getting GKE Hub Membership - JavaScript\nDESCRIPTION: This snippet shows how to retrieve a specific membership from GKE Hub using the get_membership method. It requires the GKE Hub client library for JavaScript. The parameter needed is the membership ID, and the output is the membership details retrieved from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.get_membership.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.get_membership.js\n```\n\n----------------------------------------\n\nTITLE: Listing Entities with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample demonstrates how to list entities using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_76\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.list_entities.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Sentiment with Google Cloud Language API in Node.js\nDESCRIPTION: This snippet demonstrates how to analyze the overall sentiment of a text using Google Cloud's Language API. It requires the 'google-cloud-language' Node.js client library. The function takes in a text string and outputs the sentiment score and magnitude.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function analyzeSentiment(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.analyzeSentiment({document});\n  const sentiment = result.documentSentiment;\n  console.log(`Sentiment Score: ${sentiment.score}, Sentiment Magnitude: ${sentiment.magnitude}`);\n}\n```\n\n----------------------------------------\n\nTITLE: Data Fusion Instance Management Sample (v1)\nDESCRIPTION: Sample code demonstrating how to create, read, update, delete and manage Data Fusion instances using the v1 API. Includes operations like creating instances, listing available versions, and restarting instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample usage commands:\nnode packages/google-cloud-datafusion/samples/generated/v1/data_fusion.create_instance.js\nnode packages/google-cloud-datafusion/samples/generated/v1/data_fusion.delete_instance.js\nnode packages/google-cloud-datafusion/samples/generated/v1/data_fusion.get_instance.js\nnode packages/google-cloud-datafusion/samples/generated/v1/data_fusion.list_instances.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check for code style issues and potentially automatically fix them using npm. This helps maintain code consistency and quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates how to test IAM permissions for a Data Catalog resource using the google-cloud-datacatalog library in Node.js. It utilizes the `testIamPermissions` method to check if a principal has specific permissions on the resource. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(resource, permissions) {\n  // [START datacatalog_test_iam_permissions]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const resource = 'PROJECT_ID'; // Resource path.\n  // const permissions = ['datacatalog.entries.get'];\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function testIamPermissions() {\n    const [policy] = await datacatalog.testIamPermissions({\n      resource: resource,\n      permissions: permissions,\n    });\n\n    console.log('Tested permissions for resource: %s', resource);\n    console.log(policy);\n  }\n  testIamPermissions();\n  // [END datacatalog_test_iam_permissions]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Analyzing Governed Containers - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample illustrates how to analyze org policy-governed containers using the Google Cloud Asset API. Node.js and the Google Cloud SDK are required. The result includes analysis insights for governed containers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for analyzing governed containers\n```\n\n----------------------------------------\n\nTITLE: Listing Data Exchanges - Node.js\nDESCRIPTION: This snippet demonstrates how to list all data exchanges accessible to the user using the Analytics Hub API in Node.js. Proper authentication is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to list data exchanges\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function listDataExchanges() {\n  const request = {\n    parent: 'projects/your-project-id',\n  };\n  const [response] = await client.listDataExchanges(request);\n  response.forEach(dataExchange => {\n    console.log(dataExchange);\n  });\n}\n\nlistDataExchanges();\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Intents in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Deletes a batch of intents in Dialogflow V2beta1. The `intents.batch_delete_intents.js` sample demonstrates the usage of `batchDeleteIntents` method from the Dialogflow API to delete multiple intents in a single request. This function likely constructs a request containing a list of intent names or IDs to be deleted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Getting Entry Group with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet illustrates how to get an entry group using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.get_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.get_connection_profile in Node.js\nDESCRIPTION: Sample code for retrieving a connection profile using the Google Cloud Datastream API in Node.js. This script demonstrates how to get details about a specific connection profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.get_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Import SSH Public Key using Google Cloud OS Login API\nDESCRIPTION: Example demonstrating how to import an SSH public key using the OS Login service. The code is executed via Node.js and uses the google-cloud-oslogin package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-oslogin/samples/generated/v1beta/os_login_service.import_ssh_public_key.js\n```\n\n----------------------------------------\n\nTITLE: Managing Apigee Registry Artifacts in Node.js\nDESCRIPTION: Sample code demonstrating artifact retrieval, listing, and replacement operations in the Apigee Registry using the Google Cloud Node.js library. Enables programmatic management of API-related artifacts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.get_artifact\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.list_artifacts\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.replace_artifact\n```\n\n----------------------------------------\n\nTITLE: Managing Google Cloud Notebook Instances and Environments\nDESCRIPTION: Collection of API methods for managing Google Cloud Notebook instances and environments, including creation, deletion, updating, and configuration management. These methods are part of the google-cloud-notebooks package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Listing Processor Types with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to list available processor types using the Google Cloud DocumentAI API. It uses the document_processor_service to fetch a list of processor types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.list_processor_types.js\n```\n\n----------------------------------------\n\nTITLE: Getting Serving Config via DiscoveryEngine in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a serving configuration using the DiscoveryEngine API in a Node.js environment.  It utilizes the `Serving_config_service.get_serving_config` method to fetch the serving configuration details. The sample assumes that the DiscoveryEngine client is properly initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_ServingConfigService_GetServingConfig_async]\"\n```\n\n----------------------------------------\n\nTITLE: AutoML Get Annotation Spec in Node.js\nDESCRIPTION: This sample shows how to retrieve an annotation spec using the AutoML API in Node.js. The `getAnnotationSpec` function is called. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.get_annotation_spec\"\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Methods with Node.js\nDESCRIPTION: Collection of Node.js commands to interact with various retriever service endpoints including get_corpus, get_document, list_chunks, list_corpora, list_documents, query_corpus, query_document, and update operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.get_corpus.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.get_document.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.list_chunks.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.list_corpora.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.list_documents.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.query_corpus.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.query_document.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.update_chunk.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.update_corpus.js\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.update_document.js\n```\n\n----------------------------------------\n\nTITLE: Listing Orders with Cloud Commerce Consumer Procurement API\nDESCRIPTION: Example code demonstrating how to use the ConsumerProcurementServiceClient to list orders. The code shows initialization of the client and making a request to list orders with optional parameters like pageSize, pageToken and filter. Results are processed using an async iterator.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent resource to query for orders.\n *  This field has the form `billingAccounts/{billing-account-id}`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of entries requested.\n *  The default page size is 25 and the maximum page size is 200.\n */\n// const pageSize = 1234\n/**\n *  The token for fetching the next page.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter that you can use to limit the list request.\n *  A query string that can match a selected set of attributes\n *  with string values. For example, `display_name=abc`.\n *  Supported query attributes are\n *  * `display_name`\n *  If the query contains special characters other than letters,\n *  underscore, or digits, the phrase must be quoted with double quotes. For\n *  example, `display_name=\"foo:bar\"`, where the display name needs to be\n *  quoted because it contains special character colon.\n *  Queries can be combined with `OR`, and `NOT` to form more complex queries.\n *  You can also group them to force a desired evaluation order.\n *  For example, `display_name=abc OR display_name=def`.\n */\n// const filter = 'abc123'\n\n// Imports the Procurement library\nconst {ConsumerProcurementServiceClient} =\n  require('@google-cloud/procurement').v1alpha1;\n\n// Instantiates a client\nconst procurementClient = new ConsumerProcurementServiceClient();\n\nasync function callListOrders() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await procurementClient.listOrdersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListOrders();\n```\n\n----------------------------------------\n\nTITLE: Listing Generators in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to list all generators in a Dialogflow CX agent. It uses the generators.list_generators method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/generators.list_generators.js\n```\n\n----------------------------------------\n\nTITLE: Update Input Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to update an input using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.update_input.js\n```\n\n----------------------------------------\n\nTITLE: Updating External API with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to update an external API using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_external_api.js\n```\n\n----------------------------------------\n\nTITLE: Reverting Instance with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to revert an instance using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to revert an instance to a previous state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.revert_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Node.js\nDESCRIPTION: Instructions for setting up the environment, installing dependencies, and running different types of tests for the project. This ensures that all code changes are validated against existing code standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating a Page in Dialogflow CX using Node.js\nDESCRIPTION: The script updates an existing page in Dialogflow CX using the Node.js client library. It requires proper authentication and the page ID to be updated. Upon execution, it provides the update status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_120\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/pages.update_page.js\n```\n\n----------------------------------------\n\nTITLE: Creating Data Attribute Binding with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This snippet demonstrates how to create a data attribute binding using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the create_data_attribute_binding method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.create_data_attribute_binding.js\n```\n\n----------------------------------------\n\nTITLE: Create Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to create an audience list using the Alpha version of the Google Analytics Data API with Node.js. It leverages the `alpha_analytics_data.create_audience_list` method, and further details are available in the sample's README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Restarting SQL Instance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to restart a Google Cloud SQL instance using the `restart` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.restart.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Datastream Stream in Node.js\nDESCRIPTION: This code snippet shows how to create a stream in Google Cloud Datastream using Node.js, covering the essential steps to initiate streaming data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.create_stream.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backups with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to list backups using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API and retrieve a list of existing backups.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.list_backups.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet details how to delete an entry type in the Google Cloud Dataplex service, requiring the Google Cloud client library and specific parameters to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for deleting an entry type\n\n```\n\n----------------------------------------\n\nTITLE: Updating a Certificate Revocation List using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This code sample demonstrates how to update a certificate revocation list using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.update_certificate_revocation_list.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Certificate using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This code example demonstrates how to update a certificate using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.update_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Listing Volume Restores using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing volume restores using the GKE Backup API. Used to enumerate all persistent volume restore operations created for a specific restore in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_volume_restores.js\n```\n\n----------------------------------------\n\nTITLE: Creating Restore Plan for GKE - Node.js\nDESCRIPTION: This snippet illustrates how to create a restore plan for Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package, with parameters including the configuration details for the restore plan.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Create Restore Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.createRestorePlan(request)\n  .then(response => {\n    console.log('Restore plan created:', response);\n  })\n  .catch(err => {\n    console.error('Error creating restore plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Using CMEK Service Operations in Node.js\nDESCRIPTION: Methods for managing Customer Managed Encryption Keys (CMEK) configurations in Google Cloud Dataplex. These operations include creating, deleting, getting, listing, and updating encryption configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/cmek_service.create_encryption_config.js\nnode packages/google-cloud-dataplex/samples/generated/v1/cmek_service.delete_encryption_config.js\nnode packages/google-cloud-dataplex/samples/generated/v1/cmek_service.get_encryption_config.js\nnode packages/google-cloud-dataplex/samples/generated/v1/cmek_service.list_encryption_configs.js\nnode packages/google-cloud-dataplex/samples/generated/v1/cmek_service.update_encryption_config.js\n```\n\n----------------------------------------\n\nTITLE: Injecting a Fault in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet demonstrates how to inject a fault into an AlloyDB instance, which can be useful for testing resilience and recovery. It requires the Google Cloud AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function injectFault() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting Job with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a job using the Job Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.delete_job.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.delete_job.js`\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud App Hub - Node.js\nDESCRIPTION: This quickstart snippet demonstrates how to initialize and access basic functionalities of Google Cloud App Hub using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/quickstart.js\nnode packages/google-cloud-apphub/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Querying Listings with Analytics Hub API Client in Node.js\nDESCRIPTION: This JavaScript snippet demonstrates how to use the Analytics Hub API client to list data exchange listings asynchronously. It requires a parent resource path and may need modifications for specific values such as 'parent', 'pageSize', and 'pageToken'.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent resource path of the listing.\n *  e.g. `projects/myproject/locations/US/dataExchanges/123`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of results to return in a single response page. Leverage\n *  the page tokens to iterate through the entire collection.\n */\n// const pageSize = 1234\n/**\n *  Page token, returned by a previous call, to request the next page of\n *  results.\n */\n// const pageToken = 'abc123'\n\n// Imports the Analyticshub library\nconst {AnalyticsHubServiceClient} =\n  require('@google-cloud/bigquery-analyticshub').v1;\n\n// Instantiates a client\nconst analyticshubClient = new AnalyticsHubServiceClient();\n\nasync function callListListings() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await analyticshubClient.listListingsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListListings();\n```\n\n----------------------------------------\n\nTITLE: Creating Engine Config - Node.js\nDESCRIPTION: This snippet illustrates how to create an engine configuration using the Financial Services API in Node.js. The proper Google Cloud client library and authentication setup are required. The input consists of engine config parameters, and the output will be the result of the engine configuration creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Create engine config\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createEngineConfig() {\n    const request = { /* parameters for engine config */ };\n    const response = await client.createEngineConfig(request);\n    console.log(response);\n}\ncreateEngineConfig();\n```\n\n----------------------------------------\n\nTITLE: Updating Report Config with Storage Insights API - Node.js\nDESCRIPTION: This script updates a report configuration within Google Cloud Storage Insights API using Node.js. Proper setup of the client library is required, and the script is executed within a specific directory as mentioned in usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.update_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Event Edit Rule - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This JavaScript snippet explains how to delete an event edit rule using the Analytics Admin Service. Dependency needed is Google Cloud's Node.js client library. The ID of the event edit rule must be provided to execute the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteEventEditRule(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Starting Backfill Job in Node.js\nDESCRIPTION: This Node.js solution shows how to initiate a backfill job for stream objects using the Google Cloud Datastream API. It's essential for processing historical data with setup procedures needing API client and credential configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.start_backfill_job.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Listing Security Health Analytics Custom Modules in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet allows users to list custom modules in security health analytics, supporting custom security solutions tailored to organizational needs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_security_health_analytics_custom_modules.js\n```\n\n----------------------------------------\n\nTITLE: Asymmetric Decrypt using Key Management Service JavaScript\nDESCRIPTION: A script to perform asymmetric decryption with Google Cloud KMS using Node.js. Ensure the presence of all cryptographic keys and their identifiers. Outputs decrypted data based on asymmetric cryptographic inputs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Insight Type Configuration with Node.js\nDESCRIPTION: Sample code showing how to retrieve the configuration for a specific insight type. Requires proper setup of Google Cloud project and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.get_insight_type_config.js\n```\n\n----------------------------------------\n\nTITLE: Product Search Management in Google Cloud Vision\nDESCRIPTION: Samples for managing product sets, products, and reference images in the Google Cloud Vision Product Search API, including create, delete, list, and import operations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.add_product_to_product_set\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.create_product\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.create_product_set\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.create_reference_image\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.delete_product\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.delete_product_set\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.delete_reference_image\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.get_product\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.get_product_set\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.get_reference_image\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.import_product_sets\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.list_product_sets\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.list_products\n```\n\nLANGUAGE: javascript\nCODE:\n```\nproduct_search.list_products_in_product_set\n```\n\n----------------------------------------\n\nTITLE: Update GenerativeQuestionConfig Retail API\nDESCRIPTION: This sample demonstrates how to update a GenerativeQuestionConfig in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `updateGenerativeQuestionConfig` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/generative_question_service.update_generative_question_config.js`\n```\n\n----------------------------------------\n\nTITLE: Getting HCX Activation Key with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get an HCX activation key using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_hcx_activation_key\"\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to update a load balancer traffic extension in Node.js\nDESCRIPTION: Example for updating a load balancer traffic extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the update_lb_traffic_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.update_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Performing Synchronous Speech Recognition in Node.js\nDESCRIPTION: Sample script for synchronous speech recognition using Google Cloud Speech API. Enables immediate processing of short audio files with real-time transcription results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-speech/samples/generated/v1/speech.recognize.js\n```\n\n----------------------------------------\n\nTITLE: Listing Targets in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to list targets using the Cloud Deploy API. It uses the list_targets method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_targets.js\n```\n\n----------------------------------------\n\nTITLE: Updating SQL Users with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet illustrates how to update existing SQL users using the Google Cloud SQL API. It employs the sql_users_service.update method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_users_service.update.js\n```\n\n----------------------------------------\n\nTITLE: Listing Insight Types in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to list all available insight types using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the list_insight_types method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.list_insight_types.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create User in Node.js\nDESCRIPTION: Describes how to create an AlloyDB user through the Node.js client library. This includes initializing the AlloyDBAdmin client and calling the `createUser` method. It assumes the Google Cloud project has been appropriately set up and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_user | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_user.js)\"\n```\n\n----------------------------------------\n\nTITLE: Job Service Batch Update Jobs\nDESCRIPTION: Demonstrates how to batch update jobs using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.batch_update_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Restricting Allowed Resources with Assured Workloads in Node.js\nDESCRIPTION: This sample demonstrates how to restrict allowed resources using the Assured Workloads service in Node.js. The sample depends on the `@google-cloud/assuredworkloads` package.  The command is used to execute the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.restrict_allowed_resources.js`\n```\n\n----------------------------------------\n\nTITLE: Batch Processing Documents - Google Cloud Node.js (v1beta2)\nDESCRIPTION: Similar to the v1beta1 snippet, this snippet demonstrates batch processing capabilities using Document Understanding service in v1beta2. It requires similar input of documents and configurations, with outputs pertaining to the batch processing job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code for batch processing documents\nconst {DocumentUnderstandingServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentUnderstandingServiceClient();\nconst request = { requests: batchRequest };\nconst [operation] = await client.batchProcessDocuments(request);\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Billing Budgets Node.js client library\nDESCRIPTION: Command to install the Google Cloud Billing Budgets client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/billing-budgets\n```\n\n----------------------------------------\n\nTITLE: Deleting a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet illustrates how to delete a flow in Dialogflow CX using the Node.js client library. It uses the `Flows.delete_flow` method to remove a flow based on its resource name. Ensure the Dialogflow CX client and authentication are properly set up before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_DeleteFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callDeleteFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow',\n  };\n\n  // Make the request\n  await client.deleteFlow(request);\n  console.log('Delete request succeeded');\n}\n\ncallDeleteFlow();\n// [END dialogflow_cx_v3_generated_Flows_DeleteFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Getting a Task in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a task within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_task.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter for the project, which checks the code for style and formatting issues. The `fix` argument automatically attempts to correct any linting errors it finds, improving code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Entities with Dialogflow V2beta1\nDESCRIPTION: This sample shows how to update multiple entities within a batch using Dialogflow V2beta1 in Node.js. It utilizes the `Entity_types.batch_update_entities` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.batch_update_entities\"\n```\n\n----------------------------------------\n\nTITLE: Installing Network Security API Node.js Client Library\nDESCRIPTION: This command installs the Node.js client library for the Network Security API using npm. It's a prerequisite for using the library in your Node.js projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/network-security\n```\n\n----------------------------------------\n\nTITLE: Restrict Allowed Services V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to restrict allowed services within the Assured Workloads service (v1beta1) using the google-cloud-node library. It leverages the AssuredWorkloadsService client to configure service restrictions for a specific workload. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Security Center IAM Permission Tests in Node.js\nDESCRIPTION: Sample code for testing IAM permissions in Google Cloud Security Center. The code demonstrates how to verify access rights for specific permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1p1beta1/security_center.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Starting Experiment in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to start an experiment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the start experiment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.start_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for a Google Cloud Function - Node.js\nDESCRIPTION: This snippet retrieves the IAM policy for a specific Google Cloud Function, helping users understand permissions and access controls in place for that function.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating Datastream Connection Profile in Node.js\nDESCRIPTION: This snippet demonstrates how to create a connection profile in Google Cloud Datastream using Node.js. It includes all necessary dependencies and shows the process of establishing the connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.create_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Event Service Create Client Event\nDESCRIPTION: Demonstrates how to create a client event using the Event Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/event_service.create_client_event.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Participant using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to update a participant using the Dialogflow API. It uses the participants.update_participant method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.update_participant.js\n```\n\n----------------------------------------\n\nTITLE: Listing Resource Value Configurations in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet provides functionality to list resource value configurations, essential for auditing and managing resources in Google Cloud Security Center.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_resource_value_configs.js\n```\n\n----------------------------------------\n\nTITLE: Counting Message Tokens\nDESCRIPTION: Sample showing how to count tokens in messages using the Discussion Service API in beta3 version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/discuss_service.count_message_tokens.js\n```\n\n----------------------------------------\n\nTITLE: Listing Participants using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to list participants using the Dialogflow API. It uses the participants.list_participants method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_65\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.list_participants.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Backup Plan for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to delete a backup plan in Google Kubernetes Engine using the Google Cloud Node.js client library. It relies on the `@google-cloud/gkebackup` package and requires the backup plan ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Backup Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.deleteBackupPlan(request)\n  .then(response => {\n    console.log('Backup plan deleted:', response);\n  })\n  .catch(err => {\n    console.error('Error deleting backup plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Executing Product Creation Node.js Script\nDESCRIPTION: This snippet provides the command to execute a Node.js script that creates a product using the Google Cloud Vision API. Ensure Node.js is installed and properly configured to run this command from the terminal. Input parameters may include product details such as name and category, and output is confirmation of product creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.create_product.js\n```\n\n----------------------------------------\n\nTITLE: Updating Recommender Configuration with Google Cloud Recommender API in Node.js\nDESCRIPTION: This snippet demonstrates how to update a recommender configuration using the Google Cloud Recommender API. It uses the v1beta1 version of the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.update_recommender_config.js\n```\n\n----------------------------------------\n\nTITLE: List Oracle Autonomous Database Backups Command\nDESCRIPTION: Node.js command to list backups of autonomous databases in Google Cloud Oracle Database.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.list_autonomous_database_backups.js\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Create Audience Export\nDESCRIPTION: Sample script demonstrating how to create an audience export using the Google Analytics Data Beta API. Provides functionality for exporting specific audience segments for analysis.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.create_audience_export\n```\n\n----------------------------------------\n\nTITLE: Product Service Operations - Node.js Google Cloud Retail\nDESCRIPTION: Collection of sample files for managing products in Google Cloud Retail, including operations for adding, creating, deleting, exporting, importing, listing, and updating products.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nProduct_service.add_local_inventories\nProduct_service.create_product\nProduct_service.delete_product\nProduct_service.export_products\nProduct_service.get_product\nProduct_service.import_products\nProduct_service.list_products\nProduct_service.purge_products\nProduct_service.remove_fulfillment_places\nProduct_service.remove_local_inventories\nProduct_service.set_inventory\nProduct_service.update_product\n```\n\n----------------------------------------\n\nTITLE: Updating Google Analytics Admin API Settings (Various Methods)\nDESCRIPTION: Collection of administrative methods for Google Analytics including updating signals settings, data streams, events, protocols and properties. These methods are part of the v1alpha version of the Analytics Admin API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_36\n\n\n\n----------------------------------------\n\nTITLE: Installing a Legacy Version of a Library with npm dist-tag\nDESCRIPTION: This code snippet demonstrates how to install a client library compatible with a legacy version of Node.js using npm's dist-tag feature. The dist-tag follows the naming convention `legacy-(version)`. For example, to install the gke-hub library compatible with Node.js 8, you would use the provided command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/gke-hub@legacy-8\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Webhook in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve information about a specific webhook in Dialogflow CX. It uses the webhooks.get_webhook method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_76\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/webhooks.get_webhook.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Generate Client Certificate in Node.js\nDESCRIPTION: Illustrates how to generate a client certificate for AlloyDB using the Node.js client library. The process includes setting up the AlloyDBAdmin client and calling the `generateClientCertificate` method. Proper project setup and authentication are necessary for this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.generate_client_certificate | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.generate_client_certificate.js)\"\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.list_stream_objects in Node.js\nDESCRIPTION: Sample code for listing stream objects using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve all objects within a stream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.list_stream_objects.js\n```\n\n----------------------------------------\n\nTITLE: Create Hub\nDESCRIPTION: Command line usage example for creating a new hub in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.create_hub.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests - JavaScript\nDESCRIPTION: This snippet executes the unit tests for the Google Cloud Node.js library using npm. It is crucial to pass all unit tests to ensure that the code is functioning correctly. This command should be run after installing the dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Getting a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet retrieves a specific flow from Dialogflow CX using the Node.js client library. It utilizes the `Flows.get_flow` method, requiring the flow's resource name as input.  Ensure the Dialogflow CX client is properly initialized and authenticated before using this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_GetFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callGetFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow',\n  };\n\n  // Make the request\n  const [response] = await client.getFlow(request);\n  console.log(response);\n}\n\ncallGetFlow();\n// [END dialogflow_cx_v3_generated_Flows_GetFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Listing Triggers with Eventarc API in Node.js\nDESCRIPTION: This snippet shows how to list triggers using the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.list_triggers.js\n```\n\n----------------------------------------\n\nTITLE: Creating Instance with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet illustrates how to create an instance using the Cloud Filestore Manager in Javascript. It leverages the google-cloud-node library to interact with the Cloud Filestore API to create a new instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.create_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Removing Fulfillment Places - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet illustrates how to remove fulfillment places of a product in Google Cloud Retail. It needs Node.js and Google Cloud libraries set up. The input is the product's fulfillment details, and the output confirms the removal.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for removing fulfillment places\n```\n\n----------------------------------------\n\nTITLE: Listing Controls with Google Cloud Retail API in Node.js\nDESCRIPTION: This code example demonstrates how to list controls using the Google Cloud Retail API. It uses the ControlService client to retrieve a list of controls associated with a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/control_service.list_controls.js\n```\n\n----------------------------------------\n\nTITLE: Creating App Connector in Node.js\nDESCRIPTION: Sample script for creating a BeyondCorp App Connector using the Google Cloud Node.js client library. Demonstrates programmatic app connector creation with command-line execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.create_app_connector.js\n```\n\n----------------------------------------\n\nTITLE: Bulk Downloading Feedback Labels with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates how to use the bulk_download_feedback_labels method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.bulk_download_feedback_labels.js\n```\n\n----------------------------------------\n\nTITLE: Managing Load Balancer Extensions (Beta)\nDESCRIPTION: Example showing how to create load balancer route and traffic extensions using the Network Services Beta API. Demonstrates usage of create_lb_route_extension and create_lb_traffic_extension endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.create_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Setting Default Processor Version with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to set the default version for a processor using the Google Cloud DocumentAI API. It uses the document_processor_service to update the default processor version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.set_default_processor_version.js\n```\n\n----------------------------------------\n\nTITLE: Create Product Retail API\nDESCRIPTION: This sample demonstrates how to create a product in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `createProduct` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/product_service.create_product.js`\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to set IAM policy for a data policy resource\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Enable Certificate Authority in Node.js\nDESCRIPTION: This sample shows how to enable a previously disabled certificate authority using Google Cloud Certificate Authority Service. The code can be executed directly to enable a CA in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.enable_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Backup and DR using JavaScript\nDESCRIPTION: A basic quickstart example to get started with Google Cloud Backup and DR in Node.js. It simplifies initial setup and offers a first-touch experience with `@google-cloud/backupdr`. Run with Node.js to validate functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Network Hubs using Network Connectivity Center Node.js Client\nDESCRIPTION: This code snippet demonstrates how to use the Network Connectivity Center client library to list network hubs. It imports the HubServiceClient, creates a client instance, and uses it to fetch and log the list of hubs for a specified project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// eslint-disable-next-line node/no-missing-require\nconst {HubServiceClient} = require('@google-cloud/network-connectivity');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n// const location = 'my-location'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new HubServiceClient();\n\nasync function listNetworkHubs() {\n  const [hubs] = await client.listHubs({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(hubs);\n}\nlistNetworkHubs();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Spec with API Hub using Node.js\nDESCRIPTION: This Node.js script removes a specified API specification from the Google Cloud API Hub. Ensure Node.js is set up and run the script using the command provided to delete an API spec, facilitating version management and cleanup of unused specs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_spec.js\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey_admin.show_effective_autokey_config Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `show_effective_autokey_config` function within the Autokey Admin service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey_admin.show_effective_autokey_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Starting a Google Cloud TPU Node in Node.js\nDESCRIPTION: This code snippet shows how to start a Google Cloud TPU node using the Node.js client library. It requires the google-cloud-tpu package to be installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.start_node.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up a Discovered Workload - Node.js\nDESCRIPTION: This snippet retrieves details for a specific discovered workload in App Hub, facilitating detailed analysis post-discovery.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_discovered_workload.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_discovered_workload.js\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Node Pool - Google Cloud Node\nDESCRIPTION: This snippet adds a new node pool to an existing Azure cluster based on user-defined configurations. Proper parameters and configurations must be supplied for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.createAzureNodePool({parent: 'projects/my-project/locations/my-location/azureClusters/my-cluster', azureNodePool: {/* node pool details */}});\n```\n\n----------------------------------------\n\nTITLE: Querying Compilation Result Actions\nDESCRIPTION: Sample script for querying compilation result actions in Dataform. Allows retrieving detailed information about compilation process and actions performed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Listing All Batch Jobs using Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to list all batch jobs associated with a Google Cloud project using the Batch Service. It outputs an array of job details. The `@google-cloud/batch` package must be installed for this to work.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function listJobs() {\n  const [jobs] = await client.listJobs({});\n  console.log('Jobs:', jobs);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Synonym Sets using Synonym Set Service in Node.js\nDESCRIPTION: This code sample shows how to use the listSynonymSets method of the Synonym Set Service in the Google Cloud Content Warehouse API. It includes a command to execute the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/synonym_set_service.list_synonym_sets.js\n```\n\n----------------------------------------\n\nTITLE: List Dataproc Metastore Services\nDESCRIPTION: Example demonstrating how to list all Dataproc Metastore services in a specified project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1alpha/dataproc_metastore.list_services.js\n```\n\n----------------------------------------\n\nTITLE: Listing Endpoints - Google Cloud Node.js\nDESCRIPTION: This script lists all endpoints for a given service in Google Cloud Service Directory using Node.js. Prerequisite: installing `@google-cloud/service-directory`. It takes the service’s name as input and outputs a list of endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_endpoints.js>\n```\n\n----------------------------------------\n\nTITLE: Getting Target Site in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a target site using the DiscoveryEngine API in Node.js. It uses `Site_search_engine_service.get_target_site` to get the target site information. Proper DiscoveryEngine client initialization and authentication are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_GetTargetSite_async]\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup Index Download URL using Backup for GKE API in Node.js\nDESCRIPTION: This sample shows how to get a download URL for a backup index using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_backup_index_download_url.js\n```\n\n----------------------------------------\n\nTITLE: Modify Cloud to Device Config - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to modify the cloud-to-device configuration of a device using Google Cloud IoT Device Manager in Node.js. It uses the google-cloud-node library. Running the sample requires proper authentication and project configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Instantiating Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This snippet illustrates how to instantiate a pre-existing workflow template in Google Cloud Dataproc. It requires the workflow template's name and outputs the result of the instantiation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function instantiateWorkflowTemplate(templateName) {\n  const request = {\n    name: templateName,\n  };\n  const [response] = await client.instantiateWorkflowTemplate(request);\n  console.log('Instantiated workflow template:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping a Google Cloud TPU Node in Node.js\nDESCRIPTION: This code snippet demonstrates how to stop a Google Cloud TPU node using the Node.js client library. It requires the google-cloud-tpu package to be installed and properly set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.stop_node.js\n```\n\n----------------------------------------\n\nTITLE: Exporting a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to export an existing flow from Dialogflow CX. It utilizes the flows.export_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.export_flow.js\n```\n\n----------------------------------------\n\nTITLE: Getting Network - Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve network details in the Google Cloud Bare Metal Solution using Node.js. Proper authentication and permissions are required for the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function getNetwork() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/networks/YOUR_NETWORK_ID',\n  };\n  const response = await client.getNetwork(request);\n  console.log('Network details:', response);\n}\ngetNetwork();\n```\n\n----------------------------------------\n\nTITLE: Creating Company with Company Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a company using the Company Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4beta1/company_service.create_company.js.  It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4beta1/company_service.create_company.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Redis Cluster Client\nDESCRIPTION: Command to install the Google Cloud Redis Cluster client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/redis-cluster\n```\n\n----------------------------------------\n\nTITLE: Using Migration Center API to List Sources in Node.js\nDESCRIPTION: This code demonstrates how to use the Migration Center API client library in Node.js to list sources. It includes importing the library, instantiating a client, constructing a request, and iterating through the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for `ListSourcesRequest`.\n */\n// const parent = 'abc123'\n/**\n *  Requested page size. The server may return fewer items than requested.\n *  If unspecified, the server will pick an appropriate default value.\n */\n// const pageSize = 1234\n/**\n *  A token identifying a page of results that the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Field to sort by. See https://google.aip.dev/132#ordering for more details.\n */\n// const orderBy = 'abc123'\n\n// Imports the Migrationcenter library\nconst {MigrationCenterClient} = require('@google-cloud/migrationcenter').v1;\n\n// Instantiates a client\nconst migrationcenterClient = new MigrationCenterClient();\n\nasync function callListSources() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await migrationcenterClient.listSourcesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListSources();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm. This is a prerequisite step before running tests or developing features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Streams in Node.js\nDESCRIPTION: An example script to initiate stream processing using Datastream API in Node.js. The script demonstrates starting streams and handling their execution within an authorized Google Cloud environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.run_stream.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Submitting Provisioning Config for Bare Metal Solution in Node.js\nDESCRIPTION: This snippet demonstrates how to submit a provisioning configuration for Google Cloud Bare Metal Solution using Node.js. It requires the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.submit_provisioning_config.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Connection with Connectors API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a new connection using the Connectors API. It uses the createConnection method of the Connectors client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.create_connection.js\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting IAM Policy v3beta\nDESCRIPTION: Sample code for troubleshooting IAM policies using v3beta of the Policy Troubleshooter API. Located in the google-cloud-policytroubleshooter-iam package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policytroubleshooter-iam/samples/generated/v3beta/policy_troubleshooter.troubleshoot_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Policy Troubleshooter API Quickstart\nDESCRIPTION: Quickstart sample demonstrating basic usage of the Policy Troubleshooter API. Located in the google-cloud-policytroubleshooter-iam package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policytroubleshooter-iam/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Searching Evaluations with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to search evaluations using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the search_evaluations method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.search_evaluations.js\n```\n\n----------------------------------------\n\nTITLE: Exporting AlloyDB Cluster in Node.js\nDESCRIPTION: This code snippet demonstrates how to export an AlloyDB cluster using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.export_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Diagnosing a Notebook Instance (v2)\nDESCRIPTION: This snippet shows how to diagnose issues with a Notebook instance using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.diagnose_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for BigQuery Connection (Node.js)\nDESCRIPTION: This snippet demonstrates how to retrieve the IAM policy for a BigQuery connection using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Updating Certificates with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This code sample shows how to update certificates using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.update_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Listing Dialogflow CX Agents\nDESCRIPTION: Sample script for retrieving a list of Dialogflow CX agents within a project. Provides programmatic access to agent management and discovery.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nagents.list_agents.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Volume Backup Information for GKE - Node.js\nDESCRIPTION: This snippet shows how to retrieve volume backup details in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and involves specifying the volume backup ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Volume Backup\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getVolumeBackup(request)\n  .then(response => {\n    console.log('Volume backup details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving volume backup:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Getting Datastream Stream in Node.js\nDESCRIPTION: This snippet illustrates how to get a specific stream in Google Cloud Datastream using Node.js, detailing stream-specific configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.get_stream.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Custom Target Type Sample\nDESCRIPTION: This sample demonstrates how to create a custom target type using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_custom_target_type.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Resource Allowance in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet updates the resource allowance settings in the batch service. It is important for adjusting the limits of resources available for batch jobs. The snippet depends on Google Cloud Client library and requires appropriate permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to update resource allowance\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function updateResourceAllowance(allowanceId, allowanceDetails) {\\n  const response = await client.updateResourceAllowance(allowanceId, allowanceDetails);\\n  console.log(response);\\n}\\nupdateResourceAllowance('YOUR_ALLOWANCE_ID', {max: 100});\"\n```\n\n----------------------------------------\n\nTITLE: NetApp API Usage Examples - Node.js\nDESCRIPTION: Collection of command examples for executing various NetApp operations. These samples demonstrate how to use the Google Cloud NetApp API for managing storage, backups, replication and other storage-related tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.reverse_replication_direction.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.revert_volume.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.stop_replication.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.switch_active_replica_zone.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.sync_replication.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_active_directory.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_backup.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_backup_policy.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_backup_vault.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_kms_config.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_quota_rule.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_replication.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_snapshot.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_storage_pool.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.update_volume.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.validate_directory_service.js\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.verify_kms_config.js\n```\n\n----------------------------------------\n\nTITLE: SQL User Management Operations in Google Cloud SQL Node.js\nDESCRIPTION: Sample code for listing and updating SQL users through the Cloud SQL API. These endpoints allow managing database user accounts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Getting a Dialogflow Agent using Node.js\nDESCRIPTION: This snippet retrieves details of a specific Dialogflow agent. The required agent ID should be provided to get accurate results. The Google Cloud Dialogflow client library is necessary for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n'node packages/google-cloud-dialogflow/samples/generated/v2/agents.get_agent.js'\n```\n\n----------------------------------------\n\nTITLE: Creating a Zone - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet creates a new zone within Google Cloud Dataplex, essential for segmenting data resources and applying different policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to create a zone\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function createZone() {\n  const request = {zone: {name: 'name_of_the_zone', ...}};\n  const [response] = await client.createZone(request);\n  console.log(response);\n}\ncreateZone();\n```\n\n----------------------------------------\n\nTITLE: Updating Taxonomy in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet illustrates how to update an existing taxonomy in Google Cloud's Data Catalog service. It utilizes the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function updateTaxonomy() {\n  const request = {\n    taxonomy: {\n      name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/taxonomies/YOUR_TAXONOMY_ID',\n      displayName: 'UPDATED_TAXONOMY_NAME',\n    },\n  };\n  const [response] = await client.updateTaxonomy(request);\n  console.log(`Taxonomy updated: ${response.name}`);\n}\nupdateTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Getting a Product - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet fetches the details of a specified product using the Google Cloud Retail API. It requires a proper Node.js environment and Google Cloud setup. The input is the product ID, and the expected output is the product's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for getting a product\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Identity-Aware Proxy\nDESCRIPTION: This quickstart snippet provides a simple example to get started with the Identity-Aware Proxy API. It is intended for developers looking to quickly engage with the service. Dependencies include the '@google-cloud/iap' package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyOAuthServiceClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyOAuthServiceClient();\n\nasync function quickstart() {\n  console.log('Quickstart executed');\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Listing Tools in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to list all tools available in a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_135\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/tools.list_tools.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Agent in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to delete an agent in Dialogflow CX. It uses the agents.delete_agent method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_80\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.delete_agent.js\n```\n\n----------------------------------------\n\nTITLE: Data Fusion Instance Management Sample (v1beta1)\nDESCRIPTION: Sample code demonstrating how to manage Data Fusion instances using the v1beta1 API. Includes additional beta features like DNS peering management and namespace operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample usage commands:\nnode packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.add_dns_peering.js\nnode packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.create_instance.js\nnode packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.list_dns_peerings.js\nnode packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.list_namespaces.js\n```\n\n----------------------------------------\n\nTITLE: Updating Workflow Configuration with Google Cloud Dataform in Node.js\nDESCRIPTION: This script updates workflow configurations in a Dataform workspace using Node.js. Execute it from the command line with the specified configurations to apply.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.update_workflow_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting Disk Shrink Configuration with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to get the disk shrink configuration of a Google Cloud SQL instance using the `get_disk_shrink_config` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.get_disk_shrink_config.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting GKE Hub Membership - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a membership in GKE Hub using the delete_membership method. It requires the GKE Hub client library for JavaScript. The parameters include the membership ID to be deleted, and the output is the confirmation of deletion from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.delete_membership.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.delete_membership.js\n```\n\n----------------------------------------\n\nTITLE: Batch Create AlloyDB Instances\nDESCRIPTION: Sample code demonstrating how to create multiple AlloyDB instances in batch using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// View source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.batch_create_instances.js\n```\n\n----------------------------------------\n\nTITLE: Get Hardware Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve hardware information using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.get_hardware.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Migration Job with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet shows how to delete a migration job using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.delete_migration_job.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Product - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet allows the deletion of a specified product using the Google Cloud Retail API. It requires the Node.js environment and Google Cloud SDK. The input is the product ID, and the expected output is a confirmation message for the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for deleting a product\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Translation Client Library for Node.js\nDESCRIPTION: Command to install the Google Cloud Translation client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/translate\n```\n\n----------------------------------------\n\nTITLE: Using Catalog Service Operations in Node.js\nDESCRIPTION: Collection of functions for managing catalog operations like removing/replacing catalog attributes, setting default branch, and updating catalog configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.remove_catalog_attribute.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.replace_catalog_attribute.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.set_default_branch.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.update_attributes_config.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.update_catalog.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/catalog_service.update_completion_config.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Get Backup in Node.js\nDESCRIPTION: Shows how to retrieve information about an AlloyDB backup using the Node.js client library. This sample initializes the AlloyDBAdmin client and calls the `getBackup` method. Project setup and authentication are expected to be pre-configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.get_backup | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_backup.js)\"\n```\n\n----------------------------------------\n\nTITLE: Create Synonym Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to create a synonym set using the SynonymSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/synonym_set_service.create_synonym_set.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Latest Terms of Service with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet shows how to retrieve the latest terms of service using the Google Shopping Merchant Accounts API. It uses the terms_of_service_service.retrieve_latest_terms_of_service method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/terms_of_service_service.retrieve_latest_terms_of_service.js\n```\n\n----------------------------------------\n\nTITLE: Sample Code for Deleting an Endpoint in Cloud IDS\nDESCRIPTION: This code snippet illustrates how to delete an endpoint in the Cloud IDS service using the client library. Make sure you specify the required parameters for identification of the endpoint to be deleted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst {IDSClient} = require('@google-cloud/ids');\n\nconst client = new IDSClient();\n\nasync function deleteEndpoint() {\n  const request = {\n    name: 'projects/my-project/locations/us-central1/endpoints/my-endpoint',\n  };\n  const [operation] = await client.deleteEndpoint(request);\n  await operation.promise();\n  console.log('Endpoint deleted.');\n}\ndeleteEndpoint();\n```\n\n----------------------------------------\n\nTITLE: Listing Artifacts using Registry service in Node.js\nDESCRIPTION: This snippet shows how to use the list_artifacts method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.list_artifacts.js\n```\n\n----------------------------------------\n\nTITLE: Updating Policy Tags and Taxonomies with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line scripts for updating existing policy tags and taxonomies using the Policy Tag Manager API. Allows modifying properties and configurations of tags and taxonomies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.update_policy_tag.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.update_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Listing Processes with Data Lineage API\nDESCRIPTION: Example demonstrating how to use the Data Lineage API client to list processes. The code initializes the client and makes an async request to fetch process listings with pagination support. Requires proper authentication and project setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The name of the project and its location that owns this\n *  collection of processes.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of processes to return. The service may return\n *  fewer than this value. If unspecified, at most 50 processes are\n *  returned. The maximum value is 100; values greater than 100 are cut to\n *  100.\n */\n// const pageSize = 1234\n/**\n *  The page token received from a previous `ListProcesses` call. Specify\n *  it to get the next page.\n *  When paginating, all other parameters specified in this call must\n *  match the parameters of the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Lineage library\nconst {LineageClient} = require('@google-cloud/lineage').v1;\n\n// Instantiates a client\nconst lineageClient = new LineageClient();\n\nasync function callListProcesses() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await lineageClient.listProcessesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListProcesses();\n```\n\n----------------------------------------\n\nTITLE: Creating Workflow Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for creating workflow templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the WorkflowTemplateService.createWorkflowTemplate method to define a reusable workflow for Dataproc jobs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/workflow_template_service.create_workflow_template.js\n```\n\n----------------------------------------\n\nTITLE: Getting Alert Config - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet retrieves alert configuration settings for a Google Cloud project. It requires Node.js and related Google Cloud SDK. The input consists of project identifiers, and the output provides the current alert configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for getting alert config\n```\n\n----------------------------------------\n\nTITLE: Running the Service Health API Quickstart in Node.js\nDESCRIPTION: This snippet shows how to execute the quickstart sample for the Service Health API using Node.js. It provides the command to run the quickstart script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-servicehealth/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Get Certificate Authority in Node.js\nDESCRIPTION: This sample shows how to retrieve details of a specific certificate authority using Google Cloud Certificate Authority Service. The code can be executed directly to get information about a CA in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.get_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Using Config.get_preview in Node.js\nDESCRIPTION: Shows how to retrieve preview information using the Infrastructure Manager API Config client in Node.js. This sample demonstrates the usage of the get_preview method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.get_preview.js\n```\n\n----------------------------------------\n\nTITLE: Batch Image Annotation with Vision API\nDESCRIPTION: Sample code for performing batch image annotation using Google Cloud Vision API across multiple API versions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nImage_annotator.batch_annotate_images\n```\n\n----------------------------------------\n\nTITLE: Quickstart with Cloud Build API in Node.js\nDESCRIPTION: This async function triggers a build in Google Cloud Build using the Cloud Build API. It requires a project ID, trigger ID, and branch name as parameters. The function makes use of the CloudBuildClient class from the @google-cloud/cloudbuild library, which must be installed prior to usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function quickstart(\n  projectId = 'YOUR_PROJECT_ID', // Your Google Cloud Platform project ID\n  triggerId = 'YOUR_TRIGGER_ID', // UUID for build trigger.\n  branchName = 'BRANCH_TO_BUILD' // Branch to run build against.\n) {\n  // Imports the Google Cloud client library\n  const {CloudBuildClient} = require('@google-cloud/cloudbuild');\n\n  // Creates a client\n  const cb = new CloudBuildClient();\n\n  // Note: for Private Pools, you'll have to specify an API endpoint value\n  // For example:\n  // const cb = new CloudBuildClient({ apiEndpoint: '<YOUR_POOL_REGION>-cloudbuild.googleapis.com' });\n\n  // Starts a build against the branch provided.\n  const [resp] = await cb.runBuildTrigger({\n    projectId,\n    triggerId,\n    source: {\n      projectId,\n      dir: './',\n      branchName,\n    },\n  });\n  console.info(`triggered build for ${triggerId}`);\n  const [build] = await resp.promise();\n\n  const STATUS_LOOKUP = [\n    'UNKNOWN',\n    'Queued',\n    'Working',\n    'Success',\n    'Failure',\n    'Error',\n    'Timeout',\n    'Cancelled',\n  ];\n  for (const step of build.steps) {\n    console.info(\n      `step:\\n\\tname: ${step.name}\\n\\tstatus: ${STATUS_LOOKUP[build.status]}`\n    );\n  }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a DLP Connection in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a connection in the Google Cloud DLP service. It uses the deleteConnection method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_preference_set script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_preference_set sample script. This script demonstrates how to delete a preference set using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_preference_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a tag key using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.create_tag_key.js\n```\n\n----------------------------------------\n\nTITLE: Getting Tenant with Tenant Service in Node.js\nDESCRIPTION: This snippet demonstrates how to get a tenant using the Tenant Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4/tenant_service.get_tenant.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/tenant_service.get_tenant.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Target Information with Cloud Deploy API in Node.js\nDESCRIPTION: This snippet demonstrates how to get information about a target using the Cloud Deploy API. It uses the get_target method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_target.js\n```\n\n----------------------------------------\n\nTITLE: Canceling Batch Job using Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates how to cancel a batch job in Google Cloud using the Batch Service. It requires the `@google-cloud/batch` package to be installed and configured with service account credentials. The expected input is the job ID of the batch job to cancel, and the output is a confirmation of the cancellation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function cancelJob(jobId) {\n  await client.cancelJob({ jobId });\n  console.log('Job cancelled successfully');\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Pipeline with Eventarc in Node.js\nDESCRIPTION: This command creates a pipeline in Eventarc within a Node.js environment. Ensure dependencies like Node.js are installed and configured. Execution through command-line generates output related to the pipeline status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Listing SQL Tiers with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet demonstrates how to list SQL tiers using the Google Cloud SQL API. It uses the sql_tiers_service.list method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_tiers_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Deleting AWS Clusters with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to delete an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows the deletion process for an existing AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.delete_aws_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Getting Node with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a node using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_node\"\n```\n\n----------------------------------------\n\nTITLE: Updating Job with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to update a job using the Job Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.update_job.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.update_job.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Lake in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a lake within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_lake.js\"\n```\n\n----------------------------------------\n\nTITLE: Suggesting Smart Replies - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to suggest smart replies for a participant using the Dialogflow API. The code focuses on generating relevant responses based on the context of the conversation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_110\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Suggests smart replies for a participant.\nconst {ParticipantsClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new ParticipantsClient();\n\nasync function suggestSmartReplies() {\n  // Implementation logic here\n}\n\nsuggestSmartReplies();\n```\n\n----------------------------------------\n\nTITLE: Restoring Instance with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet shows how to restore an instance using the Cloud Filestore Manager in Javascript. It leverages the google-cloud-node library to interact with the Cloud Filestore API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.restore_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Service - Google Cloud Node.js\nDESCRIPTION: Script for removing a service in Google Cloud Service Directory via Node.js using the `@google-cloud/service-directory` library. The service name is required as input, and the deletion is confirmed upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_service.js>\n```\n\n----------------------------------------\n\nTITLE: Getting VOD Ad Tag Detail in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to retrieve details of a VOD ad tag using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_vod_ad_tag_detail.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Document with Dialogflow V2beta1\nDESCRIPTION: This code sample shows how to delete a specific document using the Dialogflow V2beta1 API in Node.js. It uses the `Documents.delete_document` method to remove a document from a knowledge base given the document's ID. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.delete_document\"\n```\n\n----------------------------------------\n\nTITLE: Performing MAC Verify Operation in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to perform a MAC verify operation using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.mac_verify.js\n```\n\n----------------------------------------\n\nTITLE: List Report Tasks in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to list report tasks using the Alpha version of the Google Analytics Data API with Node.js. The `alpha_analytics_data.list_report_tasks` method is employed. Refer to the README.md file for execution instructions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Getting Permission with Permission Service in JavaScript\nDESCRIPTION: This sample shows how to retrieve permission details using the PermissionService in the google-ai-generativelanguage package. The given command runs the sample to fetch and display permission information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.get_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Trust Configs with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This snippet demonstrates how to list trust configurations using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.list_trust_configs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Task - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet enables the deletion of a task in Google Cloud Dataplex, essential for managing task lifecycle and ensuring only relevant tasks exist.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to delete a task\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function deleteTask() {\n  const request = {name: 'name_of_the_task'};\n  const [response] = await client.deleteTask(request);\n  console.log(response);\n}\ndeleteTask();\n```\n\n----------------------------------------\n\nTITLE: Creating a Task with Google Cloud Tasks in Node.js\nDESCRIPTION: This example provides a guide to creating a task under a specific queue using Google Cloud Tasks and Node.js. Users must ensure the queue exists and that correct IAM permissions are set. The code accepts task attributes as input and provides the task details upon successful creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nLink to the code: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.create_task.js\n```\n\n----------------------------------------\n\nTITLE: Discovering Connection Profiles in Node.js\nDESCRIPTION: This script allows discovery of connection profiles using Google Cloud Datastream API in Node.js, requiring prior setup of the necessary API client and credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.discover_connection_profile.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Stopping a Notebook Instance (v2)\nDESCRIPTION: This snippet shows how to stop a running Notebook instance using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.stop_instance.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Azure Node Pool\nDESCRIPTION: This Node.js script updates settings for a specific Azure node pool using the Google Cloud GKE Multi-Cloud API. It requires the Google Cloud client library and outputs the updated node pool information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.update_azure_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Creating Annotation Spec Set with Data Labeling Service\nDESCRIPTION: Sample demonstrates how to create an annotation specification set using the Google Cloud Data Labeling Service in Node.js. It shows the process of defining annotation specifications for data labeling tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndata_labeling_service.create_annotation_spec_set.js\n```\n\n----------------------------------------\n\nTITLE: Updating Tenant with Tenant Service in Node.js\nDESCRIPTION: This snippet demonstrates how to update a tenant using the Tenant Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/tenant_service.update_tenant.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/tenant_service.update_tenant.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Mute Configurations in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet retrieves all mute configurations in the Google Cloud Security Center, aiding in the management of alerting noise. Users should ensure appropriate permissions and environment setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_mute_configs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Group with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet shows how to delete an entry group using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.delete_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs the sample integration tests for the project using npm. These tests verify the integration of different components within the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy of Identity-Aware Proxy\nDESCRIPTION: This code snippet retrieves the IAM policy for the Identity-Aware Proxy service. It is useful for managing access control and permissions related to the resource. It requires the '@google-cloud/iap' package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyAdminClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyAdminClient();\n\nasync function getIamPolicy() {\n  const [policy] = await client.getIamPolicy();\n  console.log('IAM Policy:', policy);\n}\ngetIamPolicy();\n```\n\n----------------------------------------\n\nTITLE: Update Deployment in Telco Automation API - JavaScript\nDESCRIPTION: Updates an existing deployment using the Telco Automation API v1. This sample demonstrates how to execute the update_deployment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.update_deployment.js\n```\n\n----------------------------------------\n\nTITLE: List Memberships - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates listing the memberships within a Google Chat space using Node.js. It uses the `list_memberships` method of the `Chat_service` to retrieve a list of members in a specified space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions - Node.js\nDESCRIPTION: Sample code demonstrating how to test IAM permissions for Analytics Hub resources using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Delete Hub\nDESCRIPTION: Command line usage example for deleting a hub in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.delete_hub.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet provides a quickstart implementation for using Google Cloud Video Stitcher. It demonstrates the basic setup to get started with video stitching.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\n\nasync function quickstart() {\n  console.log('Quickstart for Video Stitcher');\n  // Add further implementation to initialize and use the service\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Listing Endpoint Policies in Google Cloud Network Services\nDESCRIPTION: Node.js code sample demonstrating how to list endpoint policies using the Network Services API. Accessible via command line or Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_endpoint_policies.js\n```\n\n----------------------------------------\n\nTITLE: List Subscribers using Cloud Channel Service\nDESCRIPTION: Sample code for listing subscribers using the Cloud Channel Service API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_subscribers.js\n```\n\n----------------------------------------\n\nTITLE: Failover AlloyDB Instance using Node.js\nDESCRIPTION: This code snippet demonstrates how to failover an AlloyDB instance using the AlloyDB Admin API in Node.js. It uses the failover_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.failover_instance.js\n```\n\n----------------------------------------\n\nTITLE: Listing Runtimes (v2beta)\nDESCRIPTION: Example showing how to list available runtimes for Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.list_runtimes.js\n```\n\n----------------------------------------\n\nTITLE: Trigger Backup in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: This snippet illustrates how to trigger a backup operation in Google Cloud Backup and DR with Node.js. Pre-requisite is having the `@google-cloud/backupdr` library installed. Execution outputs the backup operation status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.trigger_backup.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to delete an existing flow in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_95\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.delete_flow.js\n```\n\n----------------------------------------\n\nTITLE: Listing Products in a Product Set using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to list products in a product set using the Google Cloud Vision API. It uses the ProductSearch.listProductsInProductSet method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.list_products_in_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Product using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a product using the Google Cloud Vision API. It uses the ProductSearch.getProduct method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.get_product.js\n```\n\n----------------------------------------\n\nTITLE: Managing Recommendation Status with Node.js\nDESCRIPTION: Sample code showing how to mark recommendations as claimed, dismissed, failed or succeeded. Demonstrates recommendation lifecycle management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.mark_recommendation_claimed.js\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.mark_recommendation_dismissed.js\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.mark_recommendation_failed.js\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.mark_recommendation_succeeded.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet provides functionality for creating a new entry in the Google Cloud Dataplex catalog service. The code requires the Google Cloud client library and accepts parameters related to the entry's properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for creating an entry\n\n```\n\n----------------------------------------\n\nTITLE: Web Risk Quickstart Command\nDESCRIPTION: Command to run the quickstart sample for Web Risk API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-webrisk/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Executing Product Retrieval Node.js Script\nDESCRIPTION: Run this command to execute a script that retrieves product details using Google Cloud Vision API. Requires Node.js setup and valid product ID as input. Returns detailed product information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.get_product.js\n```\n\n----------------------------------------\n\nTITLE: Executing Dialogflow Conversation Operations in Node.js\nDESCRIPTION: Collection of Node.js scripts for interacting with Dialogflow's conversation APIs including generating suggestions, summaries, and managing conversation data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_83\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.generate_stateless_suggestion.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.generate_stateless_summary.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.generate_suggestions.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.get_conversation.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.list_conversations.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.list_messages.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.search_knowledge.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/conversations.suggest_conversation_summary.js\n```\n\n----------------------------------------\n\nTITLE: Listing Models with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet shows how to list models using the Translation Service. It uses the list_models method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_models.js\n```\n\n----------------------------------------\n\nTITLE: Listing Versions in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to list all versions of a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_147\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/versions.list_versions.js\n```\n\n----------------------------------------\n\nTITLE: Update SSH Public Key using Google Cloud OS Login API\nDESCRIPTION: Example demonstrating how to update an existing SSH public key using the OS Login service. The code is executed via Node.js and uses the google-cloud-oslogin package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-oslogin/samples/generated/v1beta/os_login_service.update_ssh_public_key.js\n```\n\n----------------------------------------\n\nTITLE: Listing Files in Artifact Registry using Node.js\nDESCRIPTION: This snippet illustrates how to list files in Google Cloud Artifact Registry. It uses the list_files method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.list_files.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Setup\nDESCRIPTION: This snippet provides the command to install necessary dependencies for the Node.js environment, crucial for running the project properly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Launch Flex Template with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to launch a flex template using the Dataflow API in Node.js. The command executes the `launch_flex_template.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/flex_templates_service.launch_flex_template.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Deployment Revisions with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list deployment revisions using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of revisions for a specific deployment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_deployment_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Listing Connections with Connectors API in Node.js\nDESCRIPTION: This snippet shows how to list all connections using the Connectors API. It uses the listConnections method of the Connectors client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.list_connections.js\n```\n\n----------------------------------------\n\nTITLE: Place Order using Consumer Procurement Service API\nDESCRIPTION: Node.js example showing how to place an order using the Google Cloud Commerce Consumer Procurement API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1alpha1/consumer_procurement_service.place_order.js\n```\n\n----------------------------------------\n\nTITLE: Updating Analysis Rules in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update analysis rules using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_analysis_rule method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_analysis_rule.js\n```\n\n----------------------------------------\n\nTITLE: Updating Network Connectivity Hub\nDESCRIPTION: Node.js code sample for updating an existing hub in the Google Cloud Network Connectivity service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.update_hub.js\n```\n\n----------------------------------------\n\nTITLE: Listing Snapshots in Cloud Filestore\nDESCRIPTION: This sample shows how to list all snapshots associated with a specific Filestore instance. It's essential for backup management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function listSnapshots() {\n    const response = await client.listSnapshots(...);\n    console.log(response);\n}\nlistSnapshots();\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Cluster - Google Cloud Node\nDESCRIPTION: This snippet creates a new Azure cluster using the specified configurations. Required parameters must be provided to ensure the cluster is set up correctly and efficiently. Ensure all necessary dependencies are met before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.createAzureCluster({parent: 'projects/my-project/locations/my-location', azureCluster: {/* cluster config */}});\n```\n\n----------------------------------------\n\nTITLE: Listing Scan Configs with Web Security Scanner in Node.js\nDESCRIPTION: This script lists all scan configurations available in the Google Cloud Web Security Scanner. Node.js and access permissions are necessary. The output is a list of available scan configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.list_scan_configs.js\"\n```\n\n----------------------------------------\n\nTITLE: SQL Database Management Operations in Google Cloud SQL Node.js\nDESCRIPTION: Sample code for managing databases including creating, updating, listing, getting and deleting databases through the Cloud SQL API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Creating Managed Kafka Connect Cluster in Node.js\nDESCRIPTION: This code sample demonstrates how to create a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.create_connect_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve IAM policy for a resource using the Google Cloud Security Center API. IAM policies control access to Security Center resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Evaluating Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet describes how to evaluate a specific processor version to review its performance. It requires the processor version name and evaluation configurations as input, and outputs the evaluation results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to evaluate processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorVersionName, evaluationInput: evaluationInput };\nconst [operation] = await client.evaluateProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Start Oracle Autonomous Database Command\nDESCRIPTION: Node.js command to start an autonomous database instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.start_autonomous_database.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Knowledge Base in Dialogflow using Node.js\nDESCRIPTION: This snippet demonstrates the execution of a JavaScript command for deleting a knowledge base from Google Cloud Dialogflow using Node.js. Required setup includes the Google Cloud Node.js client library and Node configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/knowledge_bases.delete_knowledge_base.js\"\n```\n\n----------------------------------------\n\nTITLE: Importing Customer Data - Node.js Cloud Channel API\nDESCRIPTION: Example showing how to import customer data using Cloud Channel Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.import_customer.js\n```\n\n----------------------------------------\n\nTITLE: Performing Raw Decrypt Operation in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample shows how to perform a raw decrypt operation using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.raw_decrypt.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet details the process of creating an entry type in the Google Cloud Dataplex service. It requires the Node.js Google Cloud client library for functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for creating an entry type\n\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Identity-Aware Proxy\nDESCRIPTION: This snippet tests the IAM permissions for a specific Identity-Aware Proxy resource. It aids in verifying if the caller has certain permissions on the resource. The '@google-cloud/iap' library is required to run this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyAdminClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyAdminClient();\n\nasync function testIamPermissions(permissions) {\n  const [response] = await client.testIamPermissions({ permissions });\n  console.log('Test IAM Permissions Response:', response);\n}\ntestIamPermissions(['iap.versions.get']);\n```\n\n----------------------------------------\n\nTITLE: Creating Provisioning Config - Google Cloud Node.js\nDESCRIPTION: This snippet shows how to create a provisioning configuration using the Google Cloud Bare Metal Solution API in Node.js. Make sure you have valid credentials and required dependencies to execute this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function createProvisioningConfig() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION',\n    provisioningConfigId: 'YOUR_PROVISIONING_CONFIG_ID',\n    provisioningConfig: {\n      // Provisioning config details here\n    },\n  };\n  const [operation] = await client.createProvisioningConfig(request);\n  const [response] = await operation.promise();\n  console.log('Provisioning Config created:', response);\n}\ncreateProvisioningConfig();\n```\n\n----------------------------------------\n\nTITLE: Getting Supported Languages using Google Cloud Translation API - JavaScript\nDESCRIPTION: Fetches a list of languages supported by the Google Cloud Translation service. This functionality can help users understand what languages are available for translation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Get supported languages\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function getSupportedLanguages() {\n  // Your code here to get supported languages\n}\ngetSupportedLanguages();\n```\n\n----------------------------------------\n\nTITLE: Listing Sites in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to list sites using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which retrieves a list of sites.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_sites.js`\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB Instance using Node.js\nDESCRIPTION: This JavaScript code snippet shows how to create a new instance in an AlloyDB cluster using the Google Cloud Node.js SDK. Ensure you have set up the proper IAM roles and have initialized the client library. The function will result in a new instance being added to the specified cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_instance.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag with Node.js\nDESCRIPTION: This JavaScript snippet focuses on deleting a tag in Google Cloud Data Catalog. It leverages the `@google-cloud/datacatalog` package and demonstrates tag management operations via the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.delete_tag.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Version from Artifact Registry using Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a version from Google Cloud Artifact Registry. It utilizes the get_version method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_version.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Environment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Deletes an existing environment in Dialogflow V2beta1. The code utilizes the `delete_environment` function, which presumably calls the Dialogflow client library to send a request to delete the specified environment by its ID or name.  The sample demonstrates how to construct the delete request and handle any potential errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Network Connectivity Spoke Information\nDESCRIPTION: Node.js code sample for getting information about a specific spoke in the Google Cloud Network Connectivity service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.get_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Listing Recommenders in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to list available recommenders using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the list_recommenders method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.list_recommenders.js\n```\n\n----------------------------------------\n\nTITLE: Update Backup in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: This example shows how to update a backup entry in the Google Cloud Backup and DR system using Node.js. Ensure `@google-cloud/backupdr` is set up in your environment before running this Node.js script to apply the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.update_backup.js\n```\n\n----------------------------------------\n\nTITLE: Using Catalog Service Operations in Node.js\nDESCRIPTION: A collection of methods for managing catalog entries, entry groups, entry types, metadata jobs, aspects and search functionality in Google Cloud Dataplex. These operations allow listing, updating, and searching catalog entries and related resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.list_entry_groups.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.list_entry_types.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.list_metadata_jobs.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.lookup_entry.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.search_entries.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.update_aspect_type.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.update_entry.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.update_entry_group.js\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.update_entry_type.js\n```\n\n----------------------------------------\n\nTITLE: Modifying Cloud to Device Configuration in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet demonstrates how to modify the cloud configuration of a device in Google Cloud IoT. It allows for updating device settings remotely. Required dependencies include the Google Cloud IoT library for Node.js. The expected input is the device ID and the new configuration settings. The output is a confirmation of the updated configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.modify_cloud_to_device_config.js).\n```\n\n----------------------------------------\n\nTITLE: Calculating Issue Model Stats with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet demonstrates the usage of the calculate_issue_model_stats method from the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.calculate_issue_model_stats.js\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Batch File Annotation\nDESCRIPTION: Sample code for performing asynchronous batch file annotation using Google Cloud Vision API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nImage_annotator.async_batch_annotate_files\n```\n\n----------------------------------------\n\nTITLE: QuickStart Guide for Google Cloud ParallelStore Node.js Client\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud ParallelStore Node.js client library. It demonstrates basic usage and setup for getting started with the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-parallelstore/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Get Report Task in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a report task using the Alpha version of the Google Analytics Data API with Node.js. The `alpha_analytics_data.get_report_task` method is used. Refer to the README.md file for instructions on running the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: List Certificate Maps using Node.js\nDESCRIPTION: Example showing how to list certificate maps using the Google Cloud Certificate Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.list_certificate_maps.js\n```\n\n----------------------------------------\n\nTITLE: Using the Merchant API Client Library\nDESCRIPTION: Example code demonstrating how to initialize the client and list promotions using the Merchant API. Shows pagination handling and async iteration over results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The account to list processed promotions for.\n *  Format: `accounts/{account}`\n */\n// const parent = 'abc123'\n/**\n *  Output only. The maximum number of promotions to return. The service may\n *  return fewer than this value. The maximum value is 1000; values above 1000\n *  will be coerced to 1000. If unspecified, the maximum number of promotions\n *  will be returned.\n */\n// const pageSize = 1234\n/**\n *  Output only. A page token, received from a previous `ListPromotions` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListPromotions` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Promotions library\nconst {PromotionsServiceClient} =\n  require('@google-shopping/promotionsonsonsonsonsons').v1beta;\n\n// Instantiates a client\nconst promotionsClient = new PromotionsServiceClient();\n\nasync function callListPromotions() {\n  // Construct request\n  const request = {\n    parent,\n    pageSize,\n    pageToken,\n  };\n\n  // Run request\n  const iterable = promotionsClient.listPromotionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListPromotions();\n```\n\n----------------------------------------\n\nTITLE: Updating Spec with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet illustrates how to update a spec using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_spec.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions with Node.js\nDESCRIPTION: This Node.js script tests IAM permissions for a resource in Google Cloud's Policy Tag Manager. It checks permissions to determine access levels.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.test_iam_permissions.js\"\n```\n\n----------------------------------------\n\nTITLE: Marking a Recommendation as Succeeded in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to mark a recommendation as succeeded using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the mark_recommendation_succeeded method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.mark_recommendation_succeeded.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Sentiment with Natural Language API in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Google Cloud Natural Language API client library to analyze the sentiment of a given text. It initializes a client, constructs a document object with the text, and then calls the `analyzeSentiment` method to get the sentiment score and magnitude.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function quickstart() {\n  // Imports the Google Cloud client library\n  const language = require('@google-cloud/language');\n\n  // Instantiates a client\n  const client = new language.LanguageServiceClient();\n\n  // The text to analyze\n  const text = 'Hello, world!';\n\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  // Detects the sentiment of the text\n  const [result] = await client.analyzeSentiment({document: document});\n  const sentiment = result.documentSentiment;\n\n  console.log(`Text: ${text}`);\n  console.log(`Sentiment score: ${sentiment.score}`);\n  console.log(`Sentiment magnitude: ${sentiment.magnitude}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Moving Assignments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to move assignments between reservations using the BigQuery Reservation Service API in Node.js. This allows you to reassign resources to different reservations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.move_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Secret Manager in Node.js\nDESCRIPTION: This snippet demonstrates a quickstart example for using the Google Cloud Secret Manager service with Node.js. It likely includes basic operations like creating a client, accessing secrets, or performing simple secret management tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// No actual code snippet provided in the input text\n```\n\n----------------------------------------\n\nTITLE: Batch Image Annotation with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to perform batch image annotation using the Google Cloud Vision API. It utilizes the image_annotator.batch_annotate_images method for processing multiple images synchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/image_annotator.batch_annotate_images.js\n```\n\n----------------------------------------\n\nTITLE: Executing Secret Version Retrieval in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a specific version of a secret using the Google Cloud Secret Manager API in Node.js. It requires the `@google-cloud/secret-manager` library and Node.js environment. Key parameters include secret version ID and the project ID. This is typically used to access secure information stored in Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.get_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: SQL Instance Management Operations in Google Cloud SQL Node.js\nDESCRIPTION: Sample code for managing SQL instances including creating, cloning, deleting and managing SSL certificates through the Cloud SQL API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_6\n\n\n\n----------------------------------------\n\nTITLE: Adding a Product to a Product Set with Google Cloud Vision API in Node.js\nDESCRIPTION: This example demonstrates how to add a product to a product set using the Google Cloud Vision API. It uses the product_search.add_product_to_product_set method to associate a product with a set.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.add_product_to_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Feed with Node.js\nDESCRIPTION: This sample demonstrates how to create a feed in the Google Cloud Asset API, allowing users to receive updates on changes to specified assets. Setting up the feed requires appropriate permissions and credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: create_feed.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function createFeed() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\ncreateFeed();\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Cloud Scheduler Job in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve details of a specific job from Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.get_job.js\n```\n\n----------------------------------------\n\nTITLE: Documenting Miscellaneous Changes in Markdown\nDESCRIPTION: Markdown syntax for documenting miscellaneous changes and chores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Creating Cloud Functions (v2beta)\nDESCRIPTION: Example showing how to create new Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.create_function.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Taxonomy in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates how to retrieve a specific Taxonomy from Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js. It calls the `getTaxonomy` method, specifying the name of the desired taxonomy. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(name) {\n  // [START datacatalog_get_taxonomy]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const name = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function getTaxonomy() {\n    const [taxonomy] = await policyTagManagerClient.getTaxonomy({\n      name: name,\n    });\n    console.log(`Taxonomy : ${taxonomy.name}`);\n  }\n  getTaxonomy();\n  // [END datacatalog_get_taxonomy]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Listing API Operations in Google Cloud API Hub\nDESCRIPTION: JavaScript sample showcasing how to retrieve a list of available API operations using the API Hub client library. Enables developers to explore and inspect API capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub.list_api_operations\n```\n\n----------------------------------------\n\nTITLE: Bulk Uploading Feedback Labels with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to use the bulk_upload_feedback_labels method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.bulk_upload_feedback_labels.js\n```\n\n----------------------------------------\n\nTITLE: Importing Completion Data in Google Cloud Retail API\nDESCRIPTION: Example showing how to import completion data using the Google Cloud Retail API. Handles bulk import of completion suggestions data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_69\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/completion_service.import_completion_data.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Workflows Node.js\nDESCRIPTION: This snippet provides a quickstart example for utilizing the Google Cloud Workflows Node.js Client. It outlines the basic setup and configurations needed to initiate workflow management tasks through Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for quickstart\nconst { WorkflowsServiceClient } = require('@google-cloud/workflows');\n\nconst client = new WorkflowsServiceClient();\nasync function quickstart() {\n  // Your quickstart logic here\n}\nquickstart();\n\n```\n\n----------------------------------------\n\nTITLE: SQL Backup Operations in Google Cloud SQL Node.js\nDESCRIPTION: Sample code for managing backup operations including creating, listing, getting and deleting backups through the Cloud SQL API v1beta4.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Listing Report Configs with Storage Insights API - Node.js\nDESCRIPTION: Illustrated here is the method to list all report configurations using Node.js for the Google Cloud Storage Insights API. The user must be familiar with the environment setup as per the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.list_report_configs.js\n```\n\n----------------------------------------\n\nTITLE: Updating Issues in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update issues using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_issue method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_issue.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Content in Dialogflow\nDESCRIPTION: Samples demonstrating content analysis capabilities including streaming analysis and suggestion compilation\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_108\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/participants.analyze_content.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Secret Manager in Node.js\nDESCRIPTION: This code example demonstrates how to set IAM policy for a secret or secret version using the Google Cloud Secret Manager service. It uses the set_iam_policy method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Deleting HTTP Route in Google Cloud Network Services\nDESCRIPTION: Node.js code sample showing how to delete an HTTP route using the Network Services API. Access through command line or Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.delete_http_route.js\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Handling with Async Library for Pub/Sub Operations\nDESCRIPTION: Implementation using the async library to throttle API requests when deleting multiple Pub/Sub subscriptions. This approach limits parallel operations to avoid hitting rate limits.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/docs/troubleshooting.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar async = require('async');\nvar PARALLEL_LIMIT = 10;\n\nfunction deleteSubscription(subscription, callback) {\n  subscription.delete(callback);\n}\n\nasync.eachLimit(subscriptions, PARALLEL_LIMIT, deleteSubscription, function(err) {\n  if (!err) {\n    // Subscriptions deleted.\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Getting a Job in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a job within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud OS Login API\nDESCRIPTION: A quickstart example showing basic usage of the OS Login service. The code is executed via Node.js and uses the google-cloud-oslogin package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-oslogin/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Generating Connect Manifest - JavaScript\nDESCRIPTION: This snippet shows how to generate a connect manifest for a GKE Hub membership using the generate_connect_manifest method. It requires the GKE Hub client library for JavaScript. The main parameters include the membership details necessary for the generation, and the output is the connect manifest needed for integration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.generate_connect_manifest.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.generate_connect_manifest.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Fetch Certificate Authority CSR in Node.js\nDESCRIPTION: This sample demonstrates how to fetch the Certificate Signing Request (CSR) for a certificate authority using Google Cloud Certificate Authority Service. The code can be executed directly to retrieve the CSR for a CA.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.fetch_certificate_authority_csr.js\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB Backup - Node.js\nDESCRIPTION: Sample code demonstrating how to update an existing backup in AlloyDB.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.update_backup.js\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Client - Google Cloud Node\nDESCRIPTION: This snippet retrieves information about a specific Azure client based on its name and project context. Proper authentication is required for accessing the details of Azure clients.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.getAzureClient({name: 'projects/my-project/locations/my-location/azureClients/my-client'});\n```\n\n----------------------------------------\n\nTITLE: Listing Policy Tags with Node.js\nDESCRIPTION: This script lists all policy tags for a given taxonomy in Google Cloud's Policy Tag Manager using Node.js. Ensure access to the relevant Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.list_policy_tags.js\"\n```\n\n----------------------------------------\n\nTITLE: Querying Entitlements with Privileged Access Manager in Node.js\nDESCRIPTION: This JavaScript snippet demonstrates how to use the Privileged Access Manager API to list entitlements for a specified project in Google Cloud. Dependencies include @google-cloud/privilegedaccessmanager, with required parameters such as 'parent' to specify the ownership context. Inputs include optional parameters for pagination and filtering, and the expected output is an asynchronous list of entitlement resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent which owns the entitlement resources.\n */\n// const parent = 'projects/${projectId}/locations/global'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, the server picks an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Privilegedaccessmanager library\nconst {PrivilegedAccessManagerClient} =\n  require('@google-cloud/privilegedaccessmanager').v1;\n\n// Instantiates a client\nconst privilegedaccessmanagerClient = new PrivilegedAccessManagerClient();\n\nasync function callListEntitlements() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    privilegedaccessmanagerClient.listEntitlementsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListEntitlements();\n\n```\n\n----------------------------------------\n\nTITLE: Starting a Scan Run with Web Security Scanner in Node.js (V1alpha)\nDESCRIPTION: This script starts a scan run for a configuration in Web Security Scanner using the alpha API version. It requires Node.js and correct authentication. Upon execution, the scan run commences, providing its details as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.start_scan_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Phone Number - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to update an existing phone number in the Dialogflow system, ensuring correct participant contact information is maintained.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_115\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Updates a phone number for a participant.\nconst {PhoneNumbersClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new PhoneNumbersClient();\n\nasync function updatePhoneNumber() {\n  // Implementation logic here\n}\n\nupdatePhoneNumber();\n```\n\n----------------------------------------\n\nTITLE: Analyzing Organization Policies - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates the analysis of organization policies within the Google Cloud Asset API. Node.js and the Google Cloud SDK are prerequisites. The expected output includes the analysis results of organization policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Analysis code for organization policies\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Ring in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample shows how to get a key ring using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.get_key_ring.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Endpoint - Google Cloud Node.js\nDESCRIPTION: This script illustrates how to delete an endpoint from the Google Cloud Service Directory using the Node.js `@google-cloud/service-directory` library. Necessary input includes the endpoint's name. The operation doesn’t have any expected output besides confirmation of deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_endpoint.js>\n```\n\n----------------------------------------\n\nTITLE: Exporting User Events from Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code showing how to export user events from Google Cloud Retail API. Allows extraction of user interaction data for analysis or backup purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_75\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.export_user_events.js\n```\n\n----------------------------------------\n\nTITLE: Listing Pipelines with Eventarc API in Node.js\nDESCRIPTION: This code sample shows how to list pipelines using the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.list_pipelines.js\n```\n\n----------------------------------------\n\nTITLE: Updating Connectivity Test in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to update an existing connectivity test using the Google Cloud Network Management API v1beta1. This modifies the configuration of a previously created test.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.update_connectivity_test.js\n```\n\n----------------------------------------\n\nTITLE: Restoring a Certificate Authority using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This snippet demonstrates how to restore a certificate authority using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.restore_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Commit References\nDESCRIPTION: Git commit hashes and references for specific changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[f91c71f](https://github.com/googleapis/google-cloud-node/commit/f91c71f71c7a08ac17a15b7bb2233cbc041ee69b)\n```\n\n----------------------------------------\n\nTITLE: Getting an Intent in Node.js\nDESCRIPTION: This snippet retrieves details of a specific intent from a Dialogflow agent, allowing developers to inspect the configurations and settings defined within that intent.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_103\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Get intent\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function getIntent() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.getIntent(request);\n  console.log(response);\n}\ngetIntent();\n```\n\n----------------------------------------\n\nTITLE: Managing Security Center Notification Configs in Node.js\nDESCRIPTION: Sample code for updating notification configurations in Google Cloud Security Center. Demonstrates how to modify notification settings and delivery mechanisms.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1p1beta1/security_center.update_notification_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting Entry Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to get an entry type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.get_entry_type.js\n```\n\n----------------------------------------\n\nTITLE: Get External Access Rule in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_external_access_rule sample for the VMware Engine API. This retrieves details about an external access rule for a VMware Engine resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_external_access_rule.js\n```\n\n----------------------------------------\n\nTITLE: Updating Lineage Process with Node.js\nDESCRIPTION: Sample code for updating lineage process information using the Google Cloud Datacatalog Lineage API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog-lineage/samples/generated/v1/lineage.update_process.js\n```\n\n----------------------------------------\n\nTITLE: Translating Document with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to translate a document using the Translation Service. It utilizes the translate_document method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.translate_document.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Workflows - JavaScript\nDESCRIPTION: This quickstart sample provides a basic setup to interact with Google Cloud Workflows using Node.js. It requires Node.js and access to the necessary Google Cloud services. The expected output is a demonstration of the necessary setup and an initial interaction with workflows.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function quickstart() {\n  const client = new WorkflowsClient();\n  // Additional quickstart code goes here\n  console.log('Quickstart completed.');\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Deleting Engine Config - Node.js\nDESCRIPTION: This snippet illustrates how to delete an engine configuration in the Financial Services API using Node.js. Proper setup with Google Cloud client library and authentication is required. The function prepares the request with the config identifier and logs the response after deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete engine config\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function deleteEngineConfig() {\n    const request = { /* parameters for deletion */ };\n    const response = await client.deleteEngineConfig(request);\n    console.log(response);\n}\ndeleteEngineConfig();\n```\n\n----------------------------------------\n\nTITLE: Updating a Google Cloud TPU Node in Node.js\nDESCRIPTION: This code snippet shows how to update the configuration of a Google Cloud TPU node using the Node.js client library. It requires the google-cloud-tpu package to be installed and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.update_node.js\n```\n\n----------------------------------------\n\nTITLE: Listing Products with Google Cloud Vision API in Node.js\nDESCRIPTION: This code example demonstrates how to list products using the Google Cloud Vision API. It uses the product_search.list_products method to retrieve all products in a project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.list_products.js\n```\n\n----------------------------------------\n\nTITLE: Listing Federations in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet lists all federations in the Dataproc Metastore. It allows the user to view existing federations and their details. This is useful for maintaining an overview of the federated setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to list federations\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore_federation.list_federations.js\n```\n\n----------------------------------------\n\nTITLE: Setting Inventory - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet demonstrates how to set inventory for products in Google Cloud Retail. It requires Node.js and the appropriate Google Cloud libraries. Input includes inventory details, and the output confirms the inventory setting.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for setting inventory\n```\n\n----------------------------------------\n\nTITLE: Get Input Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to retrieve an input using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.get_input.js\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a user using the Google Shopping Merchant Accounts API. It uses the user_service.create_user method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/user_service.create_user.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Metadata Import from Dataproc Metastore with Node.js\nDESCRIPTION: This snippet shows how to retrieve a metadata import from Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.get_metadata_import.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Purge Queue Sample\nDESCRIPTION: Illustrates how to purge all tasks from a Cloud Tasks queue using the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.purge_queue.js\n```\n\n----------------------------------------\n\nTITLE: Starting an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates the process of starting an experiment in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_91\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.start_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `testIamPermissions` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for testing IAM permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.test_iam_permissions.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Google API Source with Eventarc in Node.js\nDESCRIPTION: Provides mechanisms for deleting a Google API source in Eventarc using Node.js. The setup includes installing Node.js and configuring authentication. Command-line execution verifies source deletion status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.delete_google_api_source.js\n```\n\n----------------------------------------\n\nTITLE: Suggesting Smart Replies using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to suggest smart replies using the Dialogflow API. It utilizes the participants.suggest_smart_replies method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_70\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.suggest_smart_replies.js\n```\n\n----------------------------------------\n\nTITLE: Getting Logging Server with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a logging server using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_logging_server\"\n```\n\n----------------------------------------\n\nTITLE: Dataform Configuration Update Utilities\nDESCRIPTION: Sample scripts demonstrating how to update various configuration types in Dataform, including repository, release, and workflow configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Creating Database Cluster in AlloyDB\nDESCRIPTION: Node.js sample script for creating a new database cluster in Google Cloud AlloyDB using the v1alpha administrative API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.create_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Access Context Manager\nDESCRIPTION: A quickstart example demonstrating basic usage of the Access Context Manager API. The code is executed via Node.js CLI.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving SQL User Information with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet illustrates how to get information about a SQL user using the Google Cloud SQL API. It employs the sql_users_service.get method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_users_service.get.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Participant in Dialogflow using Node.js\nDESCRIPTION: Illustrates the execution of a JavaScript command in Node.js to create a participant in Google Cloud Dialogflow. This requires the setup of the Google Cloud Node.js client library along with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/participants.create_participant.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Assignments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to list assignments using the BigQuery Reservation Service API in Node.js. This allows you to view all assignments for a particular resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.list_assignments.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Release Retrieval Sample in Node.js\nDESCRIPTION: This snippet's purpose is to execute Node.js script for retrieving release details. Make sure Node.js is configured and samples are present locally. The script fetches and prints release-related information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_release.js\n```\n\n----------------------------------------\n\nTITLE: Querying Apigee Registry API Spec Contents in Node.js\nDESCRIPTION: Sample code for retrieving the contents of an API specification from the Apigee Registry using the Google Cloud Node.js library. Demonstrates how to fetch detailed specification information programmatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.get_api_spec_contents\n```\n\n----------------------------------------\n\nTITLE: Creating a Lake - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet creates a new lake within Google Cloud Dataplex, enabling the organizational structure to manage large datasets effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to create a lake\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function createLake() {\n  const request = {lake: {name: 'name_of_the_lake', ...}};\n  const [response] = await client.createLake(request);\n  console.log(response);\n}\ncreateLake();\n```\n\n----------------------------------------\n\nTITLE: List Models Retail API\nDESCRIPTION: This sample demonstrates how to list models from the Retail API using Node.js. It involves setting up the necessary authentication and calling the `listModels` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.list_models.js`\n```\n\n----------------------------------------\n\nTITLE: AutoML Import Data in Node.js\nDESCRIPTION: This sample illustrates how to import data using the AutoML API with Node.js. The `importData` function is used. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.import_data\"\n```\n\n----------------------------------------\n\nTITLE: Getting Mute Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve a mute configuration using the Google Cloud Security Center API. Mute configs define which findings should be suppressed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_mute_config.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart with Google Cloud Translation API - JavaScript\nDESCRIPTION: Initializes a basic setup for using the Google Cloud Translation API. This script acts as a starting point for developing applications that require translation capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Quickstart example\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function quickstart() {\n  // Your code here for quickstart setup\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Getting a Document with Dialogflow V2beta1\nDESCRIPTION: This code sample demonstrates how to retrieve a specific document's details using the Dialogflow V2beta1 API in Node.js. It utilizes the `Documents.get_document` method to fetch the document's information, requiring the document's ID as input. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.get_document\"\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB Backup in Node.js\nDESCRIPTION: This code snippet shows how to create an AlloyDB backup using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_backup.js\n```\n\n----------------------------------------\n\nTITLE: Updating Model in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update a model using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_model.js`\n```\n\n----------------------------------------\n\nTITLE: Updating AWS Cluster in Google Cloud Multi-Cloud\nDESCRIPTION: Node.js sample script for updating an existing AWS Kubernetes cluster using Google Cloud Multi-Cloud API. Demonstrates cluster modification and management capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-gkemulticloud\\/samples\\/generated\\/v1\\/aws_clusters.update_aws_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Route with Datastream API in Node.js\nDESCRIPTION: This sample demonstrates how to delete a route using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.delete_route.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Syntax with Google Cloud Language API in Node.js\nDESCRIPTION: This example shows how to analyze the syntax of a given text using the Google Cloud Language API in Node.js. The code requires the 'google-cloud-language' package. It processes the text to return information about tokens, such as part of speech and lemma.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function analyzeSyntax(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.analyzeSyntax({document});\n  const tokens = result.tokens;\n  console.log('Syntax Analysis:');\n  tokens.forEach(token => {\n    console.log(`\tWord: ${token.text.content}, Part of Speech: ${token.partOfSpeech.tag}`);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Zone in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to create a zone within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.create_zone.js\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Organization Policy Governed Containers with Node.js\nDESCRIPTION: This sample provides a method to analyze containers that are governed by organization policies using the Google Cloud Asset API. This helps organizations understand compliance across their containerized resources, necessitating proper setup and permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_org_policy_governed_containers.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeOrgPolicyGovernedContainers() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeOrgPolicyGovernedContainers();\n```\n\n----------------------------------------\n\nTITLE: Using Network_services to delete an endpoint policy in Node.js\nDESCRIPTION: Example for deleting an endpoint policy using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the delete_endpoint_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/network_services.delete_endpoint_policy.js\n```\n\n----------------------------------------\n\nTITLE: Getting Crypto Key with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a crypto key using the google-cloud-kms library in a Node.js environment. It uses the provided command to execute the sample to retrieve a specific crypto key.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.get_crypto_key.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Job Runs in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to list job runs in Cloud Deploy. It utilizes the list_job_runs method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_job_runs.js\n```\n\n----------------------------------------\n\nTITLE: Updating Catalog with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet illustrates how to update a catalog using the Google Cloud Retail API. It utilizes the CatalogService client to modify the properties of an existing catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.update_catalog.js\n```\n\n----------------------------------------\n\nTITLE: Accepting Terms - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet demonstrates the acceptance of terms for a project in Google Cloud. It requires Node.js and the necessary Google Cloud SDK. Input may include user authentication details, and the expected output is confirmation of terms acceptance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for accepting terms\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Functions Node.js Client Library\nDESCRIPTION: This code snippet demonstrates how to use the Google Cloud Functions client library in Node.js. It imports the library, creates a client, and lists functions for a specified project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {CloudFunctionsServiceClient} = require('@google-cloud/functions');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new CloudFunctionsServiceClient();\n\n// project = 'my-project/*/locations/*' // Get the functions for a project.\nasync function listFunctions() {\n  const [functions] = await client.listFunctions({\n    parent: `projects/${projectId}/locations/-`,\n  });\n  console.info(functions);\n}\nlistFunctions();\n```\n\n----------------------------------------\n\nTITLE: Updating External Access Rule in VMware Engine (Node.js)\nDESCRIPTION: Example showing how to update external access rules in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_external_access_rule.js\n```\n\n----------------------------------------\n\nTITLE: Running Streaming Intent Detection\nDESCRIPTION: Executes the script to perform streaming intent detection using Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Streamlines real-time input processing for dynamic intent recognition.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.streaming_detect_intent.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Project Attachment - JavaScript\nDESCRIPTION: This snippet demonstrates how to create an attachment between a service and a project in Google Cloud App Hub using Node.js. It requires binding IDs as parameters. The expected output is the attachment object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst attachServiceToProject = async () => {\n  const response = await client.createServiceProjectAttachment({\n    serviceId: 'my-service-id',\n    projectId: 'my-project-id',\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Manage SSL Certificates - Google Cloud SQL Node.js\nDESCRIPTION: Examples for managing SSL certificates including delete, get, insert and list operations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1/sql_ssl_certs_service.delete.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_ssl_certs_service.get.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_ssl_certs_service.insert.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_ssl_certs_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Workflow - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet shows how to update an existing workflow in Google Cloud Workflows. It requires Node.js, access to Google Cloud Workflows API, and the updated workflow definition. The key parameters include the workflow ID and the new definition. The output will confirm the update of the workflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function updateWorkflow() {\n  const client = new WorkflowsClient();\n  const workflowId = 'YOUR_WORKFLOW_ID';\n  const request = {\n    workflow: {\n      name: `projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID/workflows/${workflowId}`,\n      definition: 'NEW_WORKFLOW_DEFINITION'\n    }\n  };\n  const [response] = await client.updateWorkflow(request);\n  console.log(`Updated workflow: ${response.name}`);\n}\nupdateWorkflow();\n```\n\n----------------------------------------\n\nTITLE: Listing Volumes using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet shows how to list volumes using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_volumes.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Runtime Project Attachment using Node.js\nDESCRIPTION: Sample code demonstrating how to delete a runtime project attachment using the delete_runtime_project_attachment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/runtime_project_attachment_service.delete_runtime_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Completing a Conversation in Dialogflow (JavaScript)\nDESCRIPTION: This snippet shows how to mark a conversation as completed in Dialogflow. It uses the complete_conversation method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.complete_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Service Project Attachment in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet fetches details about a specific service project attachment in the Google Cloud App Hub using its ID. It returns the attachment details as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getServiceProjectAttachment = async (attachmentId) => {\n  const response = await client.getServiceProjectAttachment({\n    id: attachmentId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Saved Query with Node.js\nDESCRIPTION: This sample demonstrates how to create a saved query using the Google Cloud Asset API. Saved queries allow users to easily reuse their search parameters. This requires proper authentication and setup of the Google Cloud environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: create_saved_query.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function createSavedQuery() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\ncreateSavedQuery();\n```\n\n----------------------------------------\n\nTITLE: Generating Upload URLs (v2beta)\nDESCRIPTION: Example demonstrating how to generate upload URLs for Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.generate_upload_url.js\n```\n\n----------------------------------------\n\nTITLE: Getting Generator in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Retrieves details of a specific generator in Dialogflow V2beta1. This sample uses the `get_generator` function, which interacts with the Dialogflow client library to send a request to retrieve generator information by its unique identifier. The sample demonstrates how to structure the request and handle the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating QA Scorecard with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates how to use the create_qa_scorecard method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_qa_scorecard.js\n```\n\n----------------------------------------\n\nTITLE: Updating Dialogflow CX Generator\nDESCRIPTION: Command to update a Dialogflow CX generator using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_108\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/generators.update_generator.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Data Attribute Binding with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This snippet demonstrates how to delete a data attribute binding using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the delete_data_attribute_binding method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.delete_data_attribute_binding.js\n```\n\n----------------------------------------\n\nTITLE: Listing Redis Clusters with Node.js\nDESCRIPTION: This snippet demonstrates how to list Redis clusters using the Google Cloud Redis Cluster client library for Node.js. It requires the google-cloud-redis-cluster package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1beta1/cloud_redis_cluster.list_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Generating Stateless Summary in Dialogflow (JavaScript)\nDESCRIPTION: This code sample shows how to generate a stateless summary for a conversation in Dialogflow. It utilizes the generate_stateless_summary method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.generate_stateless_summary.js\n```\n\n----------------------------------------\n\nTITLE: List AlloyDB Databases using Node.js\nDESCRIPTION: This code snippet demonstrates how to list AlloyDB databases using the AlloyDB Admin API in Node.js. It uses the list_databases method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_databases.js\n```\n\n----------------------------------------\n\nTITLE: Get Clip Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to retrieve a clip using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.get_clip.js\n```\n\n----------------------------------------\n\nTITLE: Creating Microsoft AD Domain with Node.js\nDESCRIPTION: This snippet shows how to create a Microsoft AD Domain using Node.js with the Managed Identities API. It requires access to Google Cloud credentials and the 'google-cloud-managedidentities' package. The script executes a domain creation which is fundamental for setting up new domain environments in the cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.create_microsoft_ad_domain.js\n```\n\n----------------------------------------\n\nTITLE: Transferring Ownership with Permission Service in JavaScript\nDESCRIPTION: This sample explains how to transfer ownership using the PermissionService in the google-ai-generativelanguage package. The provided command executes the sample to transfer ownership of a resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.transfer_ownership.js`\n```\n\n----------------------------------------\n\nTITLE: Listing VOD Configurations in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet lists the video on-demand (VOD) configurations for the Google Cloud Video Stitcher service. It is intended for users needing to fetch and display the available VOD configurations in their project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function listVodConfigs() {\n  const [vodConfigs] = await client.listVodConfigs();\n  console.log('VOD Configurations:');\n  vodConfigs.forEach(vodConfig => console.log(vodConfig));\n}\nlistVodConfigs();\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Connection with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a private connection using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.create_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Resource Value Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to delete a resource value configuration using the Google Cloud Security Center API. Resource value configs help prioritize security findings based on resource importance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.delete_resource_value_config.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Get IAM Policy Sample Usage\nDESCRIPTION: This sample demonstrates how to retrieve the IAM policy for a queue using the Cloud Tasks API in Node.js. The script `cloud_tasks.get_iam_policy.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.get_iam_policy.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Product Information with Google Cloud Vision API in Node.js\nDESCRIPTION: This code example demonstrates how to update product information using the Google Cloud Vision API. It uses the product_search.update_product method to modify existing product details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.update_product.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up Effective Guest Policy - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet looks up the effective guest policy for instances in the OS Config service, providing critical configuration information. Utilize the Node.js client library for Google Cloud to implement.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for looking up effective guest policy\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function lookupEffectiveGuestPolicy(instanceId) {\n    const [policy] = await client.lookupEffectiveGuestPolicy({instance: instanceId});\n    console.log(policy);\n}\nlookupEffectiveGuestPolicy('INSTANCE_ID');\n```\n\n----------------------------------------\n\nTITLE: Listing Instance OS Policies Compliances with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code example demonstrates listing instance OS policies compliances using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_instance_o_s_policies_compliances.js\n```\n\n----------------------------------------\n\nTITLE: Installing Retail API Client Library using npm\nDESCRIPTION: This command installs the Retail API client library for Node.js using npm, the Node.js package manager. It allows you to use the Retail API in your Node.js projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/retail\"\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy in Data Catalog\nDESCRIPTION: Sample code demonstrating how to retrieve IAM policy from Google Cloud Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Querying Metrics in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to query metrics using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.query_metrics method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.query_metrics.js\n```\n\n----------------------------------------\n\nTITLE: Get Node in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_node sample for the VMware Engine API. This retrieves detailed information about a specific VMware Engine node in a cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_node.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Datasets with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to list datasets using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the list_datasets method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.list_datasets.js\n```\n\n----------------------------------------\n\nTITLE: Updating Generator in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Updates an existing generator in Dialogflow V2beta1. This snippet uses the `update_generator` function and likely uses the Dialogflow client library to update an existing generator by sending a request to the Dialogflow API. It should include the updated generator parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Notebook Instance (v2)\nDESCRIPTION: This snippet illustrates how to create a new Notebook instance using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.create_instance.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Deps: Update dependency yargs to v16 - Node.js\nDESCRIPTION: This code snippet updates the `yargs` dependency to version 16. `yargs` is a command-line argument parser. The update ensures compatibility with the latest version of `yargs` and potentially includes bug fixes and new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"d069082f8e5630a80e3b064525dd51f011f8c0dd\"\n```\n\n----------------------------------------\n\nTITLE: Updating Conversations in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update conversations using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_conversation method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Executing Azure Server Configuration Retrieval\nDESCRIPTION: This script retrieves the Azure server configuration using the Google Cloud API for GKE Multi-Cloud. It requires Node.js and the Google Cloud Node.js client library. The script should be executed with Node.js and outputs the server configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.get_azure_server_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Connection Profile with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code example demonstrates how to get a connection profile using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.get_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Starting Notebook Instances in Node.js\nDESCRIPTION: This snippet demonstrates how to start a notebook instance using the Google Cloud Notebooks Node.js client. It requires the Google Cloud library for Node.js to be installed and properly authenticated. The primary parameter is the instance ID, which identifies the notebook to be started. The output is a confirmation of the instance's running state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to start a notebook instance\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\n\nconst client = new NotebookServiceClient();\n\nasync function startInstance(instanceId) {\n    const request = {\n        name: `projects/my-project/locations/us-central1-a/instances/${instanceId}`,\n    };\n    const [operation] = await client.startInstance(request);\n    await operation.promise();\n    console.log(`Instance ${instanceId} started.`);\n}\nstartInstance('my-notebook-instance');\n```\n\n----------------------------------------\n\nTITLE: Getting External Address with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get an external address using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_external_address\"\n```\n\n----------------------------------------\n\nTITLE: Getting Aspect Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to get an aspect type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.get_aspect_type.js\n```\n\n----------------------------------------\n\nTITLE: Batch Run Pivot Reports - Google Analytics Data API v1beta\nDESCRIPTION: Sample code for running multiple pivot reports in batch using the Google Analytics Data API beta version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-analytics-data/samples/generated/v1beta/beta_analytics_data.batch_run_pivot_reports.js\n```\n\n----------------------------------------\n\nTITLE: Purging Products using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to purge products using the Google Cloud Vision API. It uses the ProductSearch.purgeProducts method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.purge_products.js\n```\n\n----------------------------------------\n\nTITLE: Get Logging Server in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_logging_server sample for the VMware Engine API. This retrieves logging server configuration for a VMware Engine private cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_logging_server.js\n```\n\n----------------------------------------\n\nTITLE: Batch Embedding Contents with Generative Service in Javascript\nDESCRIPTION: This sample demonstrates how to use the `batchEmbedContents` method of the Generative Service in the google-ai-generativelanguage package. It provides a basic example of embedding multiple pieces of content at once using the generative AI service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key Handle with Autokey JavaScript\nDESCRIPTION: Using the Autokey feature in Google Cloud KMS, this snippet retrieves an existing key handle. Prerequisites include setting up Google Cloud credentials and installing the necessary Node.js client library. It takes the key handle identifier as input and outputs the key handle's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Uploading Attachments in Google Chat - JavaScript\nDESCRIPTION: This snippet shows how to upload an attachment to a space in Google Chat. It requires Node.js, the Google Chat API, and the attachment data. The expected inputs are the space ID and the attachment file details, and the output is the attachment confirmation response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n```javascript\n// Code to upload attachment\nconst { ChatServiceClient } = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function uploadAttachment(spaceId, attachment) {\n  const request = {\n    spaceId: spaceId,\n    attachment: attachment\n  };\n  const [response] = await client.uploadAttachment(request);\n  console.log(`Uploaded Attachment: ${response.name}`);\n}\n```\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Batch Create Instances in Node.js\nDESCRIPTION: Demonstrates how to batch create AlloyDB instances using the Node.js client library. This sample shows the basic setup and call to the `batchCreateInstances` method of the AlloyDBAdmin client, requiring necessary project setup and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.batch_create_instances | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.batch_create_instances.js)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Network Peering with Node.js\nDESCRIPTION: This code snippet shows how to establish network peering in VMware Engine with Node.js. Be sure to have Google Cloud dependencies available. To run, utilize the given Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_network_peering.js\n```\n\n----------------------------------------\n\nTITLE: Listing Namespaces - Google Cloud Node.js\nDESCRIPTION: A JavaScript script that lists all namespaces within a specified Google Cloud Service Directory project. Dependencies include the `@google-cloud/service-directory` library. It doesn’t require additional parameters aside from the project setup and outputs the namespaces list.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_namespaces.js>\n```\n\n----------------------------------------\n\nTITLE: Removing a Directory with Google Cloud Dataform in Node.js\nDESCRIPTION: This Node.js script removes a specified directory from a Dataform workspace. It does not specify dependencies but must be run with the directory path provided as input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.remove_directory.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Cluster in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet provides functionality to create a new cluster in AlloyDB, essential for deploying applications. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function createCluster() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Metadata Imports in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet shows how to list metadata imports in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.list_metadata_imports.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Generator in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to delete an existing generator in Dialogflow CX. It uses the generators.delete_generator method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/generators.delete_generator.js\n```\n\n----------------------------------------\n\nTITLE: Listing All Glossaries using Google Cloud Translation API - JavaScript\nDESCRIPTION: Lists all glossaries within the Google Cloud Translation service. This function will provide a comprehensive overview of available glossaries and their details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n// List all glossaries\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function listGlossaries() {\n  // Your code here to list glossaries\n}\nlistGlossaries();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Folder Information with Resource Manager V3\nDESCRIPTION: Sample showing how to retrieve details of a specific folder using Google Cloud Resource Manager API in Node.js. Allows querying folder metadata and properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample: Folders.get_folder\n```\n\n----------------------------------------\n\nTITLE: Video Intelligence Annotate Video v1\nDESCRIPTION: Sample for video annotation using Google Cloud Video Intelligence API v1. Demonstrates how to analyze video content for labels, objects, and other metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-videointelligence/samples/generated/v1/video_intelligence_service.annotate_video.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.run_stream in Node.js\nDESCRIPTION: Sample code for running a stream using the Google Cloud Datastream API in Node.js. This script demonstrates how to start or resume a stream operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.run_stream.js\n```\n\n----------------------------------------\n\nTITLE: Listing Workloads with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to list workloads using the Assured Workloads service in Node.js. The sample uses the `@google-cloud/assuredworkloads` package and is run from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.list_workloads.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Partitions with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample shows how to list partitions using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_77\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.list_partitions.js\n```\n\n----------------------------------------\n\nTITLE: Executing Batch Instance Creation in AlloyDB Admin\nDESCRIPTION: Node.js script demonstrating how to batch create multiple instances in Google Cloud AlloyDB using the v1alpha administrative API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.batch_create_instances.js\n```\n\n----------------------------------------\n\nTITLE: Updating OS Policy Assignment with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code example demonstrates updating an OS policy assignment using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1/os_config_zonal_service.update_o_s_policy_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Messages in a Conversation with Dialogflow V2beta1\nDESCRIPTION: This code sample shows how to list messages within a specific conversation using the Dialogflow V2beta1 API in Node.js. It utilizes the `Conversations.list_messages` method to retrieve messages associated with a given conversation ID. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Conversations.list_messages\"\n```\n\n----------------------------------------\n\nTITLE: Creating Tenant with Tenant Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a tenant using the Tenant Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4/tenant_service.create_tenant.js.  It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/tenant_service.create_tenant.js`\n```\n\n----------------------------------------\n\nTITLE: Initializing AutoML Client and Listing Datasets in JavaScript\nDESCRIPTION: Demonstrates how to create an AutoML client, construct a request to list datasets, and iterate through dataset metadata. Shows handling of different dataset types like translation, text classification, and image processing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AutoMlClient} = require('@google-cloud/automl').v1;\n\nconst client = new AutoMlClient();\n\nasync function listDatasets() {\n  const request = {\n    parent: client.locationPath(projectId, location),\n    filter: 'translation_dataset_metadata:*',\n  };\n\n  const [response] = await client.listDatasets(request);\n\n  console.log('List of datasets:');\n  for (const dataset of response) {\n    console.log(`Dataset name: ${dataset.name}`);\n    // Additional dataset metadata logging\n  }\n}\n\nlistDatasets();\n```\n\n----------------------------------------\n\nTITLE: Creating Job from Template - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet illustrates how to create a job based on a pre-existing template within Google Cloud Dataflow, ensuring consistency and efficiency in job definitions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {TemplatesServiceClient} = require('@google-cloud/dataflow');\nconst client = new TemplatesServiceClient();\n// Functionality to create a job from a template goes here.\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup Vault with BackupDR in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a backup vault using the BackupDR service in Node.js.  It includes the command-line usage for running the sample, utilizing the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_backup_vault.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to get a model using the Google Cloud Retail API. It uses the getModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.get_model.js\n```\n\n----------------------------------------\n\nTITLE: Creating SIP Trunk - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a SIP Trunk in Dialogflow, enabling telecommunication capabilities within the component, which can be useful for voice interaction scenarios.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_123\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Creates a SIP trunk.\nconst {SIPTrunksClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SIPTrunksClient();\n\nasync function createSIPTrunk() {\n  // Implementation logic here\n}\n\ncreateSIPTrunk();\n```\n\n----------------------------------------\n\nTITLE: Listing Pages in Dialogflow CX using Node.js\nDESCRIPTION: This example lists all pages available in a specific Dialogflow CX agent. It leverages the Dialogflow CX client library for Node.js. No parameters are required, but proper authentication configuration is necessary. The script outputs a list of pages.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_119\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/pages.list_pages.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Talent Client Library\nDESCRIPTION: NPM command to install the Google Cloud Talent Solution client library for Node.js. Required for initializing and using the Talent Solution API in Node.js projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/talent\n```\n\n----------------------------------------\n\nTITLE: Fetching Processor Details with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific processor using the Google Cloud DocumentAI API. It uses the document_processor_service to get processor information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.get_processor.js\n```\n\n----------------------------------------\n\nTITLE: Updating Insight Type Configuration in Google Cloud Recommender API v1\nDESCRIPTION: Example demonstrating how to update an insight type configuration using the Google Cloud Recommender API v1. This sample shows the command to execute the update_insight_type_config method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.update_insight_type_config.js\n```\n\n----------------------------------------\n\nTITLE: Using Prediction Service in Google Cloud Retail\nDESCRIPTION: Sample code showing how to use the prediction service to get recommendations using the Cloud Retail API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/prediction_service.predict.js\n```\n\n----------------------------------------\n\nTITLE: Installing Access Approval Client Library using npm\nDESCRIPTION: Command to install the Google Cloud Access Approval client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/access-approval\n```\n\n----------------------------------------\n\nTITLE: Network Connectivity Quickstart Guide\nDESCRIPTION: Quickstart sample demonstrating basic usage of the Google Cloud Network Connectivity service with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Companies with Company Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list companies using the Company Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4beta1/company_service.list_companies.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4beta1/company_service.list_companies.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Assessment with reCAPTCHA Enterprise\nDESCRIPTION: Code sample demonstrating how to create an assessment using the reCAPTCHA Enterprise service to analyze user interactions for potential abuse.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recaptchaenterprise/samples/generated/v1/recaptcha_enterprise_service.create_assessment.js\n```\n\n----------------------------------------\n\nTITLE: Delete Edge SLM in Telco Automation API - JavaScript\nDESCRIPTION: Deletes an edge SLM using the Telco Automation API v1alpha1. This sample shows how to remove an edge SLM.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.delete_edge_slm.js\n```\n\n----------------------------------------\n\nTITLE: Update Fulfillment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to update a fulfillment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `updateFulfillment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/fulfillments.update_fulfillment.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Entries with Node.js\nDESCRIPTION: This snippet lists entries from Google Cloud Data Catalog using Node.js. It employs the `@google-cloud/datacatalog` package and facilitates catalog overview operations, providing a comprehensive view of available entries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.list_entries.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Company with Company Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a company using the Company Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4beta1/company_service.delete_company.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4beta1/company_service.delete_company.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Discovery Engine API Client Library - Node.js\nDESCRIPTION: This snippet details the command required to install the Discovery Engine API client library using npm. It ensures that the necessary library is available for use in your Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/discoveryengine\n```\n\n----------------------------------------\n\nTITLE: Create Guest Policy in GCP OS Config Service\nDESCRIPTION: Shows how to create a new guest policy using the OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1beta/os_config_service.create_guest_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Conversation in Dialogflow (JavaScript)\nDESCRIPTION: This code sample illustrates how to create a new conversation using the Dialogflow API. It utilizes the create_conversation method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.create_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Performing MAC Sign Operation in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample illustrates how to perform a MAC sign operation using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.mac_sign.js\n```\n\n----------------------------------------\n\nTITLE: Encrypting with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to encrypt data using the google-cloud-kms library in a Node.js environment. The provided command executes the sample code to encrypt the plaintext.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.encrypt.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Products Purge Node.js Script\nDESCRIPTION: Execute this command to run a Node.js script that purges (removes) all products from Google Cloud Vision API. It requires a Node.js environment and the output confirms the purging of products.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.purge_products.js\n```\n\n----------------------------------------\n\nTITLE: Canceling Job with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This example illustrates how to cancel a job using the Google Cloud Dataplex Service API. It requires the google-cloud-dataplex package and executes the cancel_job method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.cancel_job.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Version with API Hub using Node.js\nDESCRIPTION: This script obtains specific version details from the Google Cloud API Hub with Node.js. It aids in managing API versions and gathering insightful version-specific data for development processes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Queue with Google Cloud Tasks in Node.js\nDESCRIPTION: This snippet demonstrates how to create a new queue in Google Cloud Tasks using Node.js. It requires the Google Cloud client library for Node.js and appropriate IAM permissions to create queues. The input includes necessary configurations for the queue, and the output confirms the creation with relevant details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nLink to the code: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.create_queue.js\n```\n\n----------------------------------------\n\nTITLE: AutoML Delete Model in Node.js\nDESCRIPTION: This sample demonstrates deleting a model using the AutoML API in Node.js. It calls the `deleteModel` function. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.delete_model\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Workflow Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for deleting workflow templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the WorkflowTemplateService.deleteWorkflowTemplate method to remove an existing workflow template.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/workflow_template_service.delete_workflow_template.js\n```\n\n----------------------------------------\n\nTITLE: Running Session Entity Type Creation\nDESCRIPTION: Executes the script to create a new session entity type in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Accepts parameters related to the session entity type such as its name and entities. Outputs a confirmation of the creation or an error message if unsuccessful.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/session_entity_types.create_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Listing Dataplex Zones\nDESCRIPTION: Executes a command to list zones in Google Cloud Dataplex using a Node.js script. Requires Node.js and project configuration. Invokes 'dataplex_service.list_zones.js' to get zone listings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_zones.js\n```\n\n----------------------------------------\n\nTITLE: Get AlloyDB Instance Information using Node.js\nDESCRIPTION: This code snippet shows how to get information about an AlloyDB instance using the AlloyDB Admin API in Node.js. It uses the get_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Zone - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet allows for the deletion of a zone in Google Cloud Dataplex, crucial for managing data segmentation and associated policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to delete a zone\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function deleteZone() {\n  const request = {name: 'name_of_the_zone'};\n  const [response] = await client.deleteZone(request);\n  console.log(response);\n}\ndeleteZone();\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Natural Language API\nDESCRIPTION: This code sample provides a quickstart guide for using the Google Cloud Natural Language API. It demonstrates basic usage of the API and is intended as an entry point for developers new to the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR deleteBackupVault Sample\nDESCRIPTION: This sample demonstrates how to delete a backup vault using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry with Node.js\nDESCRIPTION: This script deletes an entry from Google Cloud Data Catalog using Node.js. It requires the `@google-cloud/datacatalog` package and provides command-line execution. Demonstrates how to safely remove entities from the catalog entries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.delete_entry.js\n```\n\n----------------------------------------\n\nTITLE: Managing Load Balancer Extensions with Node.js\nDESCRIPTION: Samples showing how to work with load balancer route and traffic extensions using the Network Services API. Includes operations for getting, listing and updating extensions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Deleting a Connection Profile with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code sample shows how to delete a connection profile using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.delete_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Updating Scan Config with Web Security Scanner in Node.js\nDESCRIPTION: This script updates an existing scan configuration in Web Security Scanner. It requires Node.js and access permissions to the relevant Google Cloud Project. It outputs the updated configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.update_scan_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Dialogflow Intents in Node.js\nDESCRIPTION: This code execution in JavaScript demonstrates how to batch delete intents in Google Cloud Dialogflow by executing the script using Node.js. Ensure that the Google Cloud Node.js client library is available, and Node.js is properly set up before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.batch_delete_intents.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Google Channel Config with Eventarc API in Node.js\nDESCRIPTION: This code sample demonstrates how to update a Google Channel Config using the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_google_channel_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting Network - Google Cloud Node.js\nDESCRIPTION: This script retrieves network information by its ID using the Google Cloud Node.js library. It requires credentials to access Google Cloud services and parameters for the network ID. Outputs the details of the specified network.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.get_network.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Fetch the network\nasync function getNetwork(id) {\n  const request = {network: id};\n  const [response] = await client.getNetwork(request);\n  console.log(response);\n}\n\ngetNetwork('your-network-id');\n```\n\n----------------------------------------\n\nTITLE: Listing AppGateways using BeyondCorp API Client in Node.js\nDESCRIPTION: This JavaScript snippet shows the usage of the BeyondCorp AppGatewaysServiceClient to list AppGateways. It demonstrates the instantiation of the client, the construction of the request, and the processing of the response to output the list of AppGateways.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the AppGateway location using the form:\n *  `projects/{project_id}/locations/{location_id}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of items to return.\n *  If not specified, a default value of 50 will be used by the service.\n *  Regardless of the page_size value, the response may include a partial list\n *  and a caller should only rely on response's\n *  next_page_token BeyondCorp.ListAppGatewaysResponse.next_page_token  to\n *  determine if there are more instances left to be queried.\n */\n// const pageSize = 1234\n/**\n *  Optional. The next_page_token value returned from a previous\n *  ListAppGatewaysRequest, if any.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. A filter specifying constraints of a list operation.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Specifies the ordering of results. See\n *  Sorting\n *  order (https://cloud.google.com/apis/design/design_patterns#sorting_order)\n *  for more information.\n */\n// const orderBy = 'abc123'\n\n// Imports the Appgateways library\nconst {AppGatewaysServiceClient} = require('@google-cloud/appgateways').v1;\n\n// Instantiates a client\nconst appgatewaysClient = new AppGatewaysServiceClient();\n\nasync function callListAppGateways() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await appgatewaysClient.listAppGatewaysAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAppGateways();\n```\n\n----------------------------------------\n\nTITLE: Listing Import Jobs in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to list import jobs using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.list_import_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Update Certificate Template using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to update a Certificate Template using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.update_certificate_template.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving External API Details with API Hub using Node.js\nDESCRIPTION: Execute this Node.js script to gather information on external APIs within the Google Cloud API Hub. Used in scenarios requiring detailed external API data retrieval for analysis or integration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_external_api.js\n```\n\n----------------------------------------\n\nTITLE: Getting Snapshot Details from Cloud Filestore\nDESCRIPTION: This code retrieves detailed information about a specific snapshot in Google Cloud Filestore, relying on the snapshot’s unique ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function getSnapshot() {\n    const response = await client.getSnapshot(...);\n    console.log(response);\n}\ngetSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deleting Workload with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to delete a workload using the Assured Workloads service in Node.js. It uses the `@google-cloud/assuredworkloads` package. The provided command shows how to execute the sample directly with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.delete_workload.js`\n```\n\n----------------------------------------\n\nTITLE: Running Intent Detection\nDESCRIPTION: Executes the script to detect user intent using Dialogflow CX sessions. Requires Node.js and relevant Dialogflow CX credentials. Accepts session details and user query to determine intent, returning the detected intent and confidence levels.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.detect_intent.js\n```\n\n----------------------------------------\n\nTITLE: Insert Product Input using Merchant API\nDESCRIPTION: Sample code showing how to insert a new product input using the Google Merchant API product inputs service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/generated/v1beta/product_inputs_service.insert_product_input.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Environment in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to delete an environment within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.delete_environment.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Domains with Node.js\nDESCRIPTION: This snippet lists all domains using Node.js for managing Google Cloud Managed Identities. The 'google-cloud-managedidentities' package is required. It enumerates each domain and is critical for domain administration and inventory management across cloud resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.list_domains.js\n```\n\n----------------------------------------\n\nTITLE: Updating Crypto Key in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample shows how to update a crypto key using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.update_crypto_key.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.list_device_config_versions in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `list_device_config_versions` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.list_device_config_versions.js\"\n```\n\n----------------------------------------\n\nTITLE: Update Device - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to update a device using the Google Cloud IoT Device Manager in Node.js. The google-cloud-node library is used to interact with the IoT service. To run the sample, proper authentication and project configuration are necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Data Fusion with Node.js\nDESCRIPTION: This script lists all instances available on Google Cloud Data Fusion using Node.js. It requires the Google Cloud Node.js library to interact with the Data Fusion API. No parameters are required, and the output includes a list of instances and their details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.list_instances.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Dialogflow Intents using Node.js\nDESCRIPTION: Illustrates running a JavaScript command to list all Dialogflow intents using Node.js. The example is dependent on having the Google Cloud Node.js client library and Node.js installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.list_intents.js\"\n```\n\n----------------------------------------\n\nTITLE: Executing a Question in Data QnA with Node.js\nDESCRIPTION: This sample demonstrates how to execute a question using the Question Service in Data QnA. It requires the google-cloud-dataqna package and proper GCP setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/question_service.execute_question.js\n```\n\n----------------------------------------\n\nTITLE: Terminating Sessions with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for terminating active sessions using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionController.terminateSession method to end a running session without deleting its metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_controller.terminate_session.js\n```\n\n----------------------------------------\n\nTITLE: Getting an Environment in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve an environment within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_environment.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating API Spec - Node.js\nDESCRIPTION: This snippet provides the functionality to create a new API specification within the Apigee Registry. It summarizes the parameters and options that need to be supplied during creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.create_api_spec.js\n```\n\n----------------------------------------\n\nTITLE: Searching Jobs with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search jobs using the Job Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs.js`\n```\n\n----------------------------------------\n\nTITLE: Using Network_services to update an endpoint policy in Node.js\nDESCRIPTION: Example for updating an endpoint policy using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the update_endpoint_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/network_services.update_endpoint_policy.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Attribute Bindings with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This example illustrates how to list data attribute bindings using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the list_data_attribute_bindings method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.list_data_attribute_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Items with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to list data items using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the list_data_items method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.list_data_items.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Consumer Procurement Service\nDESCRIPTION: A quickstart example demonstrating basic usage of the Google Cloud Commerce Consumer Procurement API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-commerce-consumer-procurement/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample\nDESCRIPTION: Allows users to quickly execute a sample Node.js script demonstrating the basic setup and usage of the Cloud Media Translation API. Useful for users who want to get started quickly and see immediate results of how translations are processed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-mediatranslation/samples/quickstart.js\"\n```\n\n----------------------------------------\n\nTITLE: Fetching IAP OAuth Client in JavaScript\nDESCRIPTION: Use this sample to retrieve client details from the Identity-Aware Proxy OAuth service. Requires a Node.js runtime to execute the script using the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.get_identity_aware_proxy_client.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Get Cluster in Node.js\nDESCRIPTION: Explains how to retrieve details of an AlloyDB cluster using the Node.js client library. This sample uses the AlloyDBAdmin client and calls the `getCluster` method. The Google Cloud project needs to be correctly configured and authenticated for the sample to run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.get_cluster | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_cluster.js)\"\n```\n\n----------------------------------------\n\nTITLE: Listing Secret Versions with Google Cloud Secret Manager in Node.js\nDESCRIPTION: This code sample shows how to list all versions of a secret using the Google Cloud Secret Manager service. It utilizes the list_secret_versions method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.list_secret_versions.js\n```\n\n----------------------------------------\n\nTITLE: Add Local Inventories Product Retail API\nDESCRIPTION: This sample demonstrates how to add local inventories to a product using the Retail API using Node.js. It involves setting up the necessary authentication and calling the `addLocalInventories` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/product_service.add_local_inventories.js`\n```\n\n----------------------------------------\n\nTITLE: Creating a Task - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet creates a new task in Google Cloud Dataplex, which can be used for various processing operations on data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to create a task\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function createTask() {\n  const request = {task: {name: 'name_of_the_task', ...}};\n  const [response] = await client.createTask(request);\n  console.log(response);\n}\ncreateTask();\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Domains Node.js\nDESCRIPTION: Introductory sample script showing basic setup and initialization for working with Google Cloud Domains in Node.js. Provides a starting point for developers to understand library usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-domains/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Managing Security Center Organization Settings in Node.js\nDESCRIPTION: Sample code for updating organization-level settings in Google Cloud Security Center. Shows how to modify organization-wide security configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1p1beta1/security_center.update_organization_settings.js\n```\n\n----------------------------------------\n\nTITLE: Creating Snapshot for Cloud Filestore\nDESCRIPTION: This sample illustrates how to create a snapshot of a Filestore instance. The Node.js client library simplifies calling the createSnapshot method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function createSnapshot() {\n    const response = await client.createSnapshot(...);\n    console.log(response);\n}\ncreateSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Resuming Evaluation Jobs with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to resume a paused evaluation job using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the resume_evaluation_job method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.resume_evaluation_job.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to test IAM permissions for a service in Google Cloud Run. It uses the Services.test_iam_permissions method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Snapshots in Google Cloud Filestore - JavaScript\nDESCRIPTION: This function illustrates the process of deleting a snapshot in Google Cloud Filestore with the Cloud Filestore Manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Snapshot Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function deleteSnapshot(projectId, snapshotId) {\n  // Implementation for deleting a snapshot\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Conversation Profiles in Dialogflow (JavaScript)\nDESCRIPTION: This code sample shows how to list conversation profiles using the Dialogflow API. It utilizes the list_conversation_profiles method of the conversation_profiles service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.list_conversation_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet shows how to create an entry using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.create_entry.js\n```\n\n----------------------------------------\n\nTITLE: Rerunning Connectivity Test in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to rerun an existing connectivity test using the Google Cloud Network Management API v1beta1. This executes the test again with the latest network configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.rerun_connectivity_test.js\n```\n\n----------------------------------------\n\nTITLE: Getting Instance - Node.js\nDESCRIPTION: This snippet allows for the retrieval of an existing instance's information from the Apigee Registry. It outlines the parameters needed to specify which instance to retrieve.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/provisioning.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting DNS Bind Permission with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a DNS bind permission using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_dns_bind_permission\"\n```\n\n----------------------------------------\n\nTITLE: Creating Dialogflow CX Generator\nDESCRIPTION: Command to create a new Dialogflow CX generator using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_104\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/generators.create_generator.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Taxonomy in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet illustrates how to delete a taxonomy from the Google Cloud Data Catalog. It utilizes the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function deleteTaxonomy() {\n  const request = {\n    name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/taxonomies/YOUR_TAXONOMY_ID',\n  };\n  await client.deleteTaxonomy(request);\n  console.log('Taxonomy deleted.');\n}\ndeleteTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Removing a File with Google Cloud Dataform in Node.js\nDESCRIPTION: Executing this Node.js script removes a specified file from a Dataform workspace. It requires the file path as input and confirms the file removal upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.remove_file.js\n```\n\n----------------------------------------\n\nTITLE: Recrawling URIs in Node.js\nDESCRIPTION: This sample demonstrates how to recrawl URIs using the DiscoveryEngine API in Node.js. It uses `Site_search_engine_service.recrawl_uris` to trigger a recrawl of specified URIs. The sample requires that the DiscoveryEngine client is properly initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_RecrawlURIs_async]\"\n```\n\n----------------------------------------\n\nTITLE: Creating Notebook Environment with Google Cloud Node.js Client\nDESCRIPTION: Sample code for creating a notebook environment using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.create_environment.js\n```\n\n----------------------------------------\n\nTITLE: Using Config.get_revision in Node.js\nDESCRIPTION: Demonstrates retrieving revision information using the Infrastructure Manager API Config client in Node.js. This sample shows the usage of the get_revision method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.get_revision.js\n```\n\n----------------------------------------\n\nTITLE: Setting Default Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to set the default processor version for a specific Document Processor using the Google Cloud Document AI API. The snippet requires the Google Cloud Node.js client library and appropriate authentication. The expected input is the processor ID and a version ID, and the output is the confirmation of the operation's success.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to set default processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { processor: processorName, version: versionName };\nawait client.setDefaultProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Revision in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to get information about a specific revision in Google Cloud Run. It uses the Revisions.get_revision method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/revisions.get_revision.js\n```\n\n----------------------------------------\n\nTITLE: Executing resolve_app_connections Sample Code\nDESCRIPTION: This sample code demonstrates resolving app connections using the BeyondCorp API with Node.js. Prerequisites include proper setup of Node.js and Google Cloud SDK libraries. The script resolves connections based on specific inputs and authentication credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.resolve_app_connections.js\n```\n\n----------------------------------------\n\nTITLE: Resetting Admin Password with Node.js\nDESCRIPTION: This script resets the admin password of a domain using Node.js and the Managed Identities API. It demands appropriate API configuration and the 'google-cloud-managedidentities' package. The operation secures domains by providing a fresh administrative credential.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.reset_admin_password.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart - Google Cloud Contact Center Insights - JavaScript\nDESCRIPTION: This snippet is a quickstart sample that showcases basic usage of the Contact Center Insights API using Node.js. It sets up the necessary client and calls the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n\"const {ContactCenterInsightsClient} = require('@google-cloud/contact-center-insights');\\nconst client = new ContactCenterInsightsClient();\\n\\nasync function quickstart() {\\n  // Your quickstart code here\\n}\\n\\nquickstart();\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Tenant with Tenant Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a tenant using the Tenant Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/tenant_service.delete_tenant.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/tenant_service.delete_tenant.js`\n```\n\n----------------------------------------\n\nTITLE: Searching Resources (v1p1beta1) using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search all resources using the Google Cloud Asset Service v1p1beta1 in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1p1beta1/asset_service.search_all_resources.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting VPC Flow Logs Configuration in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to delete a VPC flow logs configuration using the Google Cloud Network Management API v1beta1. This removes flow logging for the specified VPC.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/vpc_flow_logs_service.delete_vpc_flow_logs_config.js\n```\n\n----------------------------------------\n\nTITLE: Upgrading Notebook Instance Internal (v1beta1)\nDESCRIPTION: This snippet demonstrates how to upgrade a Notebook instance internally using the v1beta1 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1beta1/notebook_service.upgrade_instance_internal.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Google API Source with Eventarc API in Node.js\nDESCRIPTION: This snippet illustrates how to update a Google API source using the Eventarc API. It is included in the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_google_api_source.js\n```\n\n----------------------------------------\n\nTITLE: Searching Lineage Links with Node.js\nDESCRIPTION: Sample code for searching lineage links using the Google Cloud Datacatalog Lineage API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog-lineage/samples/generated/v1/lineage.search_links.js\n```\n\n----------------------------------------\n\nTITLE: Running Dialogflow Generator Update Script in Node.js\nDESCRIPTION: This JavaScript snippet runs the script to update a Dialogflow generator using Node.js. To execute it, the user needs the Google Cloud Node.js client library and Node.js installed. The script is executed via the command line using the 'node' command, and no input parameters are needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/generators.update_generator.js\"\n```\n\n----------------------------------------\n\nTITLE: List Security Center Assets\nDESCRIPTION: Lists security assets using the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_assets.js\n```\n\n----------------------------------------\n\nTITLE: Listing Target Projects with VM Migration API\nDESCRIPTION: Example demonstrating how to initialize the VM Migration client and list target projects. Shows pagination handling and optional filter parameters. Requires proper GCP authentication and API enablement.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of targets.\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of targets to return. The service may return\n *  fewer than this value. If unspecified, at most 500 targets will be\n *  returned. The maximum value is 1000; values above 1000 will be coerced to\n *  1000.\n */\n// const pageSize = 1234\n/**\n *  Required. A page token, received from a previous `ListTargets` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListTargets` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. The filter request.\n */\n// const filter = 'abc123'\n/**\n *  Optional. the order by fields for the result.\n */\n// const orderBy = 'abc123'\n\n// Imports the Vmmigration library\nconst {VmMigrationClient} = require('@google-cloud/vmmigration').v1;\n\n// Instantiates a client\nconst vmmigrationClient = new VmMigrationClient();\n\nasync function callListTargetProjects() {\n  // Construct request\n  const request = {\n    parent,\n    pageToken,\n  };\n\n  // Run request\n  const iterable = await vmmigrationClient.listTargetProjectsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListTargetProjects();\n```\n\n----------------------------------------\n\nTITLE: Managing TCP Routes in Network Services\nDESCRIPTION: Example showing how to list and update TCP routes using the Network Services API. Demonstrates usage of list_tcp_routes and update_tcp_route endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_tcp_routes.js\n```\n\n----------------------------------------\n\nTITLE: Listing Models in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to list models using the Google Cloud Retail API. It utilizes the listModels method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.list_models.js\n```\n\n----------------------------------------\n\nTITLE: Creating Crypto Key Version with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a crypto key version using the google-cloud-kms library in a Node.js environment. The command executes the sample code to create a new version of an existing crypto key.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.create_crypto_key_version.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Dialogflow CX Intent\nDESCRIPTION: Command to create a new Dialogflow CX intent using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_109\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.create_intent.js\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Run Pivot Report\nDESCRIPTION: Sample script for generating pivot reports using the Google Analytics Data Beta API. Enables multi-dimensional data analysis and cross-tabulation of analytics data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.run_pivot_report\n```\n\n----------------------------------------\n\nTITLE: Upgrading a Notebook Instance (v2)\nDESCRIPTION: This snippet demonstrates how to upgrade a Notebook instance to a newer version using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.upgrade_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating Source in Google Cloud Security Center - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a source in Google Cloud Security Center using Node.js. Sources are used to categorize different types of findings and alerts, helping in organized tracking. Verify that the source type aligns with existing configurations before creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a source\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createSource() {\n  const request = {\n    parent: 'organizations/YOUR_ORG_ID', // Required\n    source: {\n      // Source properties go here\n    },\n  };\n  const [response] = await client.createSource(request);\n  console.log(response);\n}\n\ncreateSource();\n```\n\n----------------------------------------\n\nTITLE: Listing Blueprint Revisions with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list blueprint revisions using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of revisions for a specific blueprint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_blueprint_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Revoking Analytics Hub Subscription\nDESCRIPTION: Example showing how to revoke an Analytics Hub subscription\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.revoke_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Life Sciences Node.js Quickstart\nDESCRIPTION: Introductory example for initializing and using the Google Cloud Life Sciences client library in a Node.js application. Provides a basic entry point for developers getting started with the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-lifesciences/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Artifact Registry Client Library - Node.js\nDESCRIPTION: This snippet provides the command to install the Google Cloud Artifact Registry client library using npm. It is essential for developers who want to interact with the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/artifact-registry\n```\n\n----------------------------------------\n\nTITLE: Create Repository in Google Cloud Dataform\nDESCRIPTION: Sample code demonstrating how to create a new repository in Google Cloud Dataform using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.create_repository.js\n```\n\n----------------------------------------\n\nTITLE: Training Processor Version with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to train a new version of a processor using the Google Cloud DocumentAI API. It uses the document_processor_service to initiate the training process for a processor version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.train_processor_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating Analysis with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the create_analysis method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_analysis.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Automation in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to update an automation using the Cloud Deploy API. It uses the update_automation method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.update_automation.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks List Tasks Sample\nDESCRIPTION: Demonstrates listing tasks in a specific Cloud Tasks queue using the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.list_tasks.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Long-Running IAM Policy - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample illustrates the process of analyzing IAM policies that take a longer duration to process. It utilizes the Google Cloud Asset API and requires Node.js for execution. It returns a long-running operation on IAM policy analysis upon completion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Long-running IAM policy analysis functionality\n```\n\n----------------------------------------\n\nTITLE: Deleting Managed Kafka Connect Cluster in Node.js\nDESCRIPTION: This code sample illustrates how to delete a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.delete_connect_cluster.js\n```\n\n----------------------------------------\n\nTITLE: VMware Engine Quickstart Example (Node.js)\nDESCRIPTION: Quickstart example showing basic usage of Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Organization Policy Node.js Dependencies\nDESCRIPTION: Commands to install the required dependencies before running the samples. Requires navigating to the samples directory and installing npm packages.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Validating Exclusivity - JavaScript\nDESCRIPTION: This snippet demonstrates how to validate exclusivity of a membership in GKE Hub using the validate_exclusivity method. It requires the GKE Hub client library for JavaScript. The parameters include the membership details for exclusivity check, and the output is the validation result.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.validate_exclusivity.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.validate_exclusivity.js\n```\n\n----------------------------------------\n\nTITLE: Initiating a Backup with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to initiate a backup using the BackupDR service in Node.js. It shows the command-line usage to run the sample using the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.initiate_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Enabling a Processor - Google Cloud Node.js\nDESCRIPTION: This snippet shows how to enable a processor that has been disabled. The input parameter is the processor name, and the operation outputs the confirmation of the enablement.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to enable a processor\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorName };\nawait client.enableProcessor(request);\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Target Sites in Node.js\nDESCRIPTION: This sample demonstrates how to batch create target sites using the DiscoveryEngine API in Node.js. It uses the `Site_search_engine_service.batch_create_target_sites` method to create multiple target sites in a single request. The DiscoveryEngine client needs to be properly initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_BatchCreateTargetSites_async]\"\n```\n\n----------------------------------------\n\nTITLE: Listing Tag Bindings using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet shows how to list tag bindings using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_bindings.list_tag_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Updating Instances in Google Cloud Filestore - JavaScript\nDESCRIPTION: This code demonstrates how to update an instance in Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n// Update Instance Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function updateInstance(projectId, instanceId) {\n  // Implementation for updating an instance\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Private Cloud with Node.js\nDESCRIPTION: Set up a private cloud in VMware Engine using a Node.js script. Ensure you have requisite Google Cloud modules installed. Use the given Node.js command to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_private_cloud.js\n```\n\n----------------------------------------\n\nTITLE: List Certificate Authorities using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to list Certificate Authorities using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.list_certificate_authorities.js\n```\n\n----------------------------------------\n\nTITLE: Sign SSH Public Key using Google Cloud OS Login API\nDESCRIPTION: Example showing how to sign an SSH public key using the OS Login service. The code is executed via Node.js and uses the google-cloud-oslogin package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-oslogin/samples/generated/v1beta/os_login_service.sign_ssh_public_key.js\n```\n\n----------------------------------------\n\nTITLE: Creating Prediction Result - Node.js\nDESCRIPTION: This code demonstrates how to create a prediction result using the Financial Services API in Node.js. Required dependencies include the Google Cloud client library and appropriate authentication. The function sets up the request with necessary parameters and logs the response for the prediction result creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Create prediction result\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createPredictionResult() {\n    const request = { /* parameters for prediction result */ };\n    const response = await client.createPredictionResult(request);\n    console.log(response);\n}\ncreatePredictionResult();\n```\n\n----------------------------------------\n\nTITLE: Running Session Entity Type Deletion\nDESCRIPTION: Executes the script to delete an existing session entity type in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Accepts the session entity type ID as a parameter. Outputs a confirmation of the deletion or an error message if unsuccessful.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/session_entity_types.delete_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Get External Address in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_external_address sample for the VMware Engine API. This retrieves details about an external IP address allocated to a VMware Engine resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_external_address.js\n```\n\n----------------------------------------\n\nTITLE: Getting Metadata Job in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a metadata job's details in Dataplex. It utilizes the Google Cloud client library and requires the job identifier as a parameter.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for getting a metadata job\n\n```\n\n----------------------------------------\n\nTITLE: Importing User Events to Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code demonstrating how to import user events into Google Cloud Retail API. Used for bulk loading historical user interaction data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_76\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.import_user_events.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Route with Datastream API in Node.js\nDESCRIPTION: This sample demonstrates how to create a route using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.create_route.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backups using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing backups using the GKE Backup API. Used to enumerate all backups created under a specific backup plan in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_backups.js\n```\n\n----------------------------------------\n\nTITLE: Update SQL User\nDESCRIPTION: Updates a SQL user using the google-cloud-sql Node.js library. The sample demonstrates how to call the `update` method from the `Sql_users_service` to modify existing user data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nSql_users_service.update\n```\n\n----------------------------------------\n\nTITLE: Creating a New Support Case with Google Cloud\nDESCRIPTION: Sample script illustrating the process of creating a new support case using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.create_case.js\n```\n\n----------------------------------------\n\nTITLE: Resetting SSL Config with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to reset the SSL configuration of a Google Cloud SQL instance using the `reset_ssl_config` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.reset_ssl_config.js`\n```\n\n----------------------------------------\n\nTITLE: Getting an Entity with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample demonstrates how to retrieve an entity using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_74\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.get_entity.js\n```\n\n----------------------------------------\n\nTITLE: List Job Messages with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to list job messages using the Dataflow API in Node.js. The command executes the `list_job_messages.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/messages_v1_beta3.list_job_messages.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Runtime Project Attachment Details using Node.js\nDESCRIPTION: Sample code showing how to retrieve information about a runtime project attachment using the get_runtime_project_attachment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/runtime_project_attachment_service.get_runtime_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Get DNS Forwarding in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_dns_forwarding sample for the VMware Engine API. This retrieves DNS forwarding configuration for a VMware Engine private cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_dns_forwarding.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google App Engine Admin Client Library with NPM\nDESCRIPTION: Command to install the Google App Engine Admin API client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/appengine-admin\n```\n\n----------------------------------------\n\nTITLE: Get Property Quotas Snapshot in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to get a property quotas snapshot using the Alpha version of the Google Analytics Data API with Node.js. It leverages the `alpha_analytics_data.get_property_quotas_snapshot` method, and execution details are available in the sample's README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Undeploying QA Scorecard Revision in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to undeploy a QA scorecard revision using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.undeploy_qa_scorecard_revision method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.undeploy_qa_scorecard_revision.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js project using npm. This must be run before testing or development can begin.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Workspace - Google Cloud Node.js\nDESCRIPTION: This snippet illustrates the process of creating a workspace within Dataform using the Google Cloud Node.js library. To utilize this snippet, the user must execute the provided Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.create_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Entry Star/Unstar Sample\nDESCRIPTION: Node.js scripts to star and unstar entries in Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.star_entry.js\n```\n\n----------------------------------------\n\nTITLE: Update OS Policy Assignment in GCP OS Config Service\nDESCRIPTION: Shows how to update an existing OS policy assignment using the zonal OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.update_o_s_policy_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Stream with Datastream API in Node.js\nDESCRIPTION: This sample shows how to create a stream using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.create_stream.js\n```\n\n----------------------------------------\n\nTITLE: Listing Adaptive MT Files with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet shows how to list adaptive MT files using the Translation Service. It uses the list_adaptive_mt_files method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_adaptive_mt_files.js\n```\n\n----------------------------------------\n\nTITLE: Uploading an Attachment with Google Chat API in Node.js\nDESCRIPTION: This snippet covers how to upload an attachment to a chat message. It includes details on the necessary API calls and parameters required for the upload.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to upload an attachment\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function uploadAttachment(filePath) {\n  const res = await client.uploadAttachment(filePath);\n  console.log(res);\n}\nuploadAttachment('path/to/your/file');\n```\n\n----------------------------------------\n\nTITLE: Listing Flows in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates how to list all flows in a given Dialogflow CX agent using the Node.js client library. It uses the `Flows.list_flows` method, which retrieves a list of flows associated with the specified agent.  Prior client initialization and authentication are required for correct execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_ListFlows_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callListFlows() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [response] = await client.listFlows(request);\n  for (const item of response) {\n    console.log(item);\n  }\n}\n\ncallListFlows();\n// [END dialogflow_cx_v3_generated_Flows_ListFlows_async]\n```\n\n----------------------------------------\n\nTITLE: Store Management Operations with Node.js\nDESCRIPTION: Collection of samples for managing LFP stores including creation, deletion, retrieval and listing of stores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_store_service.delete_lfp_store.js\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_store_service.get_lfp_store.js\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_store_service.insert_lfp_store.js\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_store_service.list_lfp_stores.js\n```\n\n----------------------------------------\n\nTITLE: Getting SQL Instance details with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to retrieve details of a Google Cloud SQL instance using the `get` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.get.js`\n```\n\n----------------------------------------\n\nTITLE: Get Environment Details - Node.js\nDESCRIPTION: Script to retrieve details of a specific Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Repository - Google Cloud Node.js\nDESCRIPTION: This snippet allows users to delete a specific repository in Dataform utilizing the Google Cloud Node.js library. The command should be run in Node.js to perform the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.delete_repository.js\n```\n\n----------------------------------------\n\nTITLE: Creating Control in Google Cloud Retail API\nDESCRIPTION: Example demonstrating control creation using the Google Cloud Retail API. Shows how to set up new controls for retail services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_70\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/control_service.create_control.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Resource Manager client library\nDESCRIPTION: This command installs the Google Cloud Resource Manager client library for Node.js using npm, allowing you to interact with the Resource Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/resource-manager\n```\n\n----------------------------------------\n\nTITLE: Disabling a Secret Version with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This code example demonstrates how to disable a secret version using the Google Cloud Secret Manager service (v1beta2). It uses the disable_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.disable_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Accept Spoke Update\nDESCRIPTION: Command line usage example for accepting a spoke update in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.accept_spoke_update.js\n```\n\n----------------------------------------\n\nTITLE: Deploying Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to deploy a specific processor version. Input includes the processor version name, and the output confirms successful deployment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to deploy processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorVersionName };\nawait client.deployProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Updating Dialogflow CX Flow\nDESCRIPTION: Command to update an existing Dialogflow CX flow using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_102\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.update_flow.js\n```\n\n----------------------------------------\n\nTITLE: Listing Services using Service Management API\nDESCRIPTION: Example demonstrating how to initialize the Service Management client and list services for a given project. Uses the ServiceManagerClient to make API calls and retrieve service information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {ServiceManagerClient} = require('@google-cloud/service-management');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new ServiceManagerClient();\n\nasync function listServices() {\n  const [services] = await client.listServices({\n    producerProjectId: projectId,\n  });\n  console.info(services);\n}\nlistServices();\n```\n\n----------------------------------------\n\nTITLE: Updating Page Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to update a page using the Dialogflow CX API in a Node.js environment.  The `@google-cloud/dialogflow-cx` package is needed.  The script is invoked by running it from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/pages.update_page.js`\n```\n\n----------------------------------------\n\nTITLE: Upgrading Cluster - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet is used to upgrade the version of a specified cluster in Google Cloud Edge Container, requiring the proper setup of Google Cloud libraries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to upgrade a cluster\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function upgradeCluster(clusterId, version) {\n    const [operation] = await client.upgradeCluster(clusterId, version);\n    console.log('Upgrade Operation:', operation);\n}\n\n```\n\n----------------------------------------\n\nTITLE: List AlloyDB Users using Node.js\nDESCRIPTION: This code snippet shows how to list AlloyDB users using the AlloyDB Admin API in Node.js. It uses the list_users method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_users.js\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Clients\nDESCRIPTION: This Node.js sample lists all Azure clients within a Google Cloud project using the GKE Multi-Cloud API. It's intended for use with the Node.js environment and the Google Cloud client library, displaying a list of clients in the output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.list_azure_clients.js\n```\n\n----------------------------------------\n\nTITLE: Getting Service - Google Cloud Node.js\nDESCRIPTION: This script fetches service details within the Google Cloud Service Directory using Node.js and the `@google-cloud/service-directory` library. It requires the service name parameter and returns comprehensive service information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_service.js>\n```\n\n----------------------------------------\n\nTITLE: Listing IAP OAuth Clients in JavaScript\nDESCRIPTION: Executes a script to list Identity-Aware Proxy clients under OAuth services. This sample is intended for an environment with Node.js installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.list_identity_aware_proxy_clients.js\n```\n\n----------------------------------------\n\nTITLE: Searching Knowledge in Dialogflow (JavaScript)\nDESCRIPTION: This code sample shows how to search knowledge bases for relevant information in Dialogflow. It utilizes the search_knowledge method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.search_knowledge.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file and downloads all listed modules into the `node_modules` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deploying a Model in AutoML with Node.js\nDESCRIPTION: This snippet demonstrates the process of deploying a model in AutoML. It requires the model ID and provides confirmation after deployment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function deployModel(projectId, computeRegion, modelId) {\n  const request = {\n    name: client.modelPath(projectId, computeRegion, modelId),\n    updateMask: { paths: ['deploymentState'] },\n    model: { name: client.modelPath(projectId, computeRegion, modelId), deployState: 'DEPLOYED' },\n  };\n  const [operation] = await client.deployModel(request);\n  await operation.promise();\n  console.log(`Model deployed: ${modelId}`);\n}\n\ndeployModel('your-project-id', 'us-central1', 'your-model-id');\n```\n\n----------------------------------------\n\nTITLE: Setup Commands for API Gateway Samples\nDESCRIPTION: Initial setup commands for running the API Gateway samples. These commands install the necessary dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Using Rapid Migration Assessment Client Library\nDESCRIPTION: Example code demonstrating how to initialize the client and use it to list supported locations and collectors. The code first gets the project ID, then retrieves supported locations, and finally lists collectors for each location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Rapidmigrationassessment library\nconst {RapidMigrationAssessmentClient} =\n  require('@google-cloud/rapidmigrationassessment').v1;\n\n// Instantiates a client\nconst rapidMigrationAssessmentClient = new RapidMigrationAssessmentClient();\n\nasync function quickstart() {\n  const project = await rapidMigrationAssessmentClient.getProjectId();\n\n  // List supported locations\n  const locationsIterable =\n    await rapidMigrationAssessmentClient.listLocationsAsync({\n      name: `projects/${project}`,\n    });\n\n  const locations = [];\n  for await (const response of locationsIterable) {\n    console.log(`Supported location: ${response.name}`);\n    locations.push(response.name);\n  }\n\n  for (const location of locations) {\n    // Construct request\n    const request = {\n      parent: location,\n    };\n\n    // Run request\n    const iterable =\n      await rapidMigrationAssessmentClient.listCollectorsAsync(request);\n    console.log(`Listing collectors for location ${location}:`);\n    let count = 0;\n    for await (const response of iterable) {\n      console.log(response);\n      ++count;\n    }\n    console.log(`${count} collectors found.`);\n  }\n}\n\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Fetching Remote Branches - Google Cloud Node.js\nDESCRIPTION: This snippet retrieves all remote branches within a Dataform Git repository using the Google Cloud Node.js library. Users can execute the command to get the list of remote branches.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.fetch_remote_branches.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Policies with the BigQuery DataPolicies Node.js Client\nDESCRIPTION: Sample code demonstrating how to use the BigQuery DataPolicies client to list data policies for a specified project. The sample initializes the client, constructs a request with the parent resource, and iterates through the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Resource name of the project for which to list data policies. Format is\n *  `projects/{project_number}/locations/{location_id}`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of data policies to return. Must be a value between 1\n *  and 1000.\n *  If not set, defaults to 50.\n */\n// const pageSize = 1234\n/**\n *  The `nextPageToken` value returned from a previous list request, if any. If\n *  not set, defaults to an empty string.\n */\n// const pageToken = 'abc123'\n\n// Imports the Datapolicies library\nconst {DataPolicyServiceClient} =\n  require('@google-cloud/bigquery-datapolicies').v1beta1;\n\n// Instantiates a client\nconst datapoliciesClient = new DataPolicyServiceClient();\n\nasync function callListDataPolicies() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await datapoliciesClient.listDataPoliciesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDataPolicies();\n```\n\n----------------------------------------\n\nTITLE: Getting Namespaced Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code example demonstrates how to get a namespaced tag key using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.get_namespaced_tag_key.js\n```\n\n----------------------------------------\n\nTITLE: Counting Text Tokens using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to count text tokens using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `count_text_tokens` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_71\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/text_service.count_text_tokens.js`\n```\n\n----------------------------------------\n\nTITLE: Reconfiguring Trust with Node.js\nDESCRIPTION: This Node.js snippet demonstrates reconfiguring trust settings for domains using Google Cloud Managed Identities API. Proper setup and access to relevant APIs are necessary. This script handles updates to trust configurations for improved domain interactions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.reconfigure_trust.js\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Intents in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Updates multiple intents in Dialogflow V2beta1 in a single batch operation. The `intents.batch_update_intents.js` file showcases the use of the `batchUpdateIntents` method of the Dialogflow API. The function constructs a request containing a list of intents with updated properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Listing Instances with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet shows how to list instances using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API and retrieve a list of existing instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.list_instances.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.list_devices in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `list_devices` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.list_devices.js\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Quota Management - JavaScript\nDESCRIPTION: This quickstart sample provides a basic setup for managing quotas in Google Cloud using Node.js. It aims to help users quickly get started with the Google Cloud APIs for quota management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code for quickstart sample\n// file: quickstart.js\n\nconst {QuotasClient} = require('@google-cloud/quotas');\n\nasync function quickstart() {\n  const client = new QuotasClient();\n  // Example operation here\n}\nquickstart();\n\n```\n\n----------------------------------------\n\nTITLE: Analyzing Long-running IAM Policy with Node.js\nDESCRIPTION: This sample shows the usage of the long-running IAM policy analysis to assess permissions over time. The function leverages the Google Cloud Asset API and helps in understanding the evolution of policy changes. The proper setup of credentials and access to the required resources is necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_iam_policy_longrunning.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeLongRunningIAMPolicy() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeLongRunningIAMPolicy();\n```\n\n----------------------------------------\n\nTITLE: Updating Cloud Functions (v2alpha)\nDESCRIPTION: Example demonstrating how to update existing Cloud Functions using the v2alpha API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2alpha/function_service.update_function.js\n```\n\n----------------------------------------\n\nTITLE: Decrypting with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to decrypt data using the google-cloud-kms library in a Node.js environment.  The provided command executes the sample which decrypts the ciphertext.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.decrypt.js`\n```\n\n----------------------------------------\n\nTITLE: Performing Raw Encrypt Operation in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample illustrates how to perform a raw encrypt operation using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.raw_encrypt.js\n```\n\n----------------------------------------\n\nTITLE: Using Dataproc Autoscaling Policy Service in Node.js\nDESCRIPTION: Example showing how to create, delete, get, list and update autoscaling policies using the client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/autoscaling_policy_service.create_autoscaling_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating Phrase Matcher with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates the usage of the create_phrase_matcher method from the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_phrase_matcher.js\n```\n\n----------------------------------------\n\nTITLE: Deleting TPU Node in Node.js\nDESCRIPTION: Sample code for deleting a TPU node using the Google Cloud TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.delete_node.js\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Notebook Instance (v2)\nDESCRIPTION: This snippet illustrates how to rollback a Notebook instance to a previous state using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.rollback_instance.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Cancel Rollout Sample\nDESCRIPTION: This sample demonstrates how to cancel a rollout using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.cancel_rollout.js\"\n```\n\n----------------------------------------\n\nTITLE: AutoML Create Dataset in Node.js\nDESCRIPTION: This sample shows how to create a dataset using the AutoML API in Node.js. The `createDataset` function is called to create a new dataset. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.create_dataset\"\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions with IAP Admin in JavaScript\nDESCRIPTION: Use this JavaScript sample to test IAM permissions through the Identity-Aware Proxy admin service. Requires Node.js; execute the script in the command line environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1beta1/identity_aware_proxy_admin_v1_beta1.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart\nDESCRIPTION: Provides a quickstart example for the Google Cloud SQL Admin API using the Node.js client library.  This is a minimal example to get started with google-cloud-sql.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nQuickstart\n```\n\n----------------------------------------\n\nTITLE: Getting an Application in Google Cloud App Hub - JavaScript\nDESCRIPTION: This code snippet retrieves details of a specific application from Google Cloud App Hub. It takes the application ID as input and returns the application details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getApplication = async (appId) => {\n  const response = await client.getApplication({\n    id: appId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Unbind Device From Gateway - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to unbind a device from a gateway using the Google Cloud IoT Device Manager in Node.js. The google-cloud-node library is employed for interacting with the IoT service. The sample requires authentication and a correctly set up project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Listing Processors with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to list available processors using the Google Cloud DocumentAI API. It uses the document_processor_service to fetch a list of processors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.list_processors.js\n```\n\n----------------------------------------\n\nTITLE: Listing Valued Resources in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet retrieves and lists valued resources within the Security Center, providing insight into resources that are significant for security assessments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_valued_resources.js\n```\n\n----------------------------------------\n\nTITLE: Updating Session Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for updating session templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionTemplateController.updateSessionTemplate method to modify an existing session template configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_template_controller.update_session_template.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Cloud Filestore\nDESCRIPTION: This example lists all the instances available in a Google Cloud Filestore project. This is helpful for inventory and management purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function listInstances() {\n    const response = await client.listInstances(...);\n    console.log(response);\n}\nlistInstances();\n```\n\n----------------------------------------\n\nTITLE: Listing Entity Types in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Lists available entity types in Dialogflow V2beta1.  The code snippet uses `list_entity_types` function, which presumably utilizes the Dialogflow client library to send a request to the Dialogflow API, retrieves the list of entity types, and handles pagination if the list is extensive.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Batch Get Effective IAM Policies - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample shows how to retrieve effective IAM policies in batch for specific resources using the Google Cloud Asset API. Node.js with the Google Cloud SDK is necessary. It outputs effective IAM policies after successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for batch getting effective IAM policies\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Chunks with Retriever Service in JavaScript\nDESCRIPTION: This sample demonstrates batch updating of chunks using the RetrieverService in the google-ai-generativelanguage package. Running the provided command executes the sample to update multiple chunks at once.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.batch_update_chunks.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Zone in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to update a zone using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which updates the specified zone.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.update_zone.js`\n```\n\n----------------------------------------\n\nTITLE: Creating a Restore using Backup for GKE API in Node.js\nDESCRIPTION: This sample illustrates how to create a restore operation using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.create_restore.js\n```\n\n----------------------------------------\n\nTITLE: Listing Examples with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code example shows how to list examples using the Translation Service. It uses the list_examples method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_examples.js\n```\n\n----------------------------------------\n\nTITLE: Fixing google-gax Dependency (v2.17.0 with mTLS)\nDESCRIPTION: This commit updates the google-gax dependency to version 2.17.0, which includes mTLS (mutual TLS) support. This ensures compatibility and adds security enhancements through mTLS for the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** google-gax v2.17.0 with mTLS ([#63](https://www.github.com/googleapis/nodejs-managed-identities/issues/63)) ([14f7983](https://www.github.com/googleapis/nodejs-managed-identities/commit/14f79832681230295b64ebe9fc036a8d38dd50a7))\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Get Workload in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a specific workload from the Assured Workloads service using the google-cloud-node library. It uses the AssuredWorkloadsService client to fetch a workload by its name or identifier. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Creating Dataproc Metastore Service\nDESCRIPTION: Sample code for creating a new Dataproc Metastore service instance using the API in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.create_service.js\n```\n\n----------------------------------------\n\nTITLE: Listing Edge Container Clusters using Node.js Client\nDESCRIPTION: Example demonstrating how to use the Edge Container client library to list clusters. The code initializes the client and makes an async request to list clusters with optional parameters for pagination, filtering, and ordering.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent location, which owns this collection of clusters.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of resources to list.\n */\n// const pageSize = 1234\n/**\n *  A page token received from previous list request.\n *  A page token received from previous list request.\n */\n// const pageToken = 'abc123'\n/**\n *  Only resources matching this filter will be listed.\n */\n// const filter = 'abc123'\n/**\n *  Specifies the order in which resources will be listed.\n */\n// const orderBy = 'abc123'\n\n// Imports the Edgecontainer library\nconst {EdgeContainerClient} = require('@google-cloud/edgecontainer').v1;\n\n// Instantiates a client\nconst edgecontainerClient = new EdgeContainerClient();\n\nasync function callListClusters() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await edgecontainerClient.listClustersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClusters();\n```\n\n----------------------------------------\n\nTITLE: Updating Instance in Cloud Filestore\nDESCRIPTION: This example demonstrates how to update an existing Filestore instance using Node.js. Permissions and instance state must be checked prior to updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function updateInstance() {\n    const response = await client.updateInstance(...);\n    console.log(response);\n}\nupdateInstance();\n```\n\n----------------------------------------\n\nTITLE: Switching Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code showing how to switch between notebook runtimes using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.switch_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Installing Filestore Client Library in Node.js\nDESCRIPTION: This Bash command installs the Google Cloud Filestore client library for Node.js using npm. Ensure you have Node.js installed and a package.json file in your project directory to manage dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/filestore\n```\n\n----------------------------------------\n\nTITLE: Retrieving Version in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to get a specific version of a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_146\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/versions.get_version.js\n```\n\n----------------------------------------\n\nTITLE: Disabling Plugin with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to disable a plugin using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_plugin.disable_plugin.js\n```\n\n----------------------------------------\n\nTITLE: Updating Cluster - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet demonstrates how to update a specific cluster in Google Cloud Edge Container, requiring access to the appropriate libraries for functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to update a cluster\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function updateCluster(clusterId, updateData) {\n    const [operation] = await client.updateCluster(clusterId, updateData);\n    console.log('Update Operation:', operation);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Exporting a Model in AutoML with Node.js\nDESCRIPTION: This snippet illustrates how to export a model in AutoML using Node.js. The model must be identified by its ID, and successful execution leads to feedback indicating the export completion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function exportModel(projectId, computeRegion, modelId) {\n  const request = {\n    name: client.modelPath(projectId, computeRegion, modelId),\n  };\n  const [operation] = await client.exportModel(request);\n  await operation.promise();\n  console.log(`Model exported: ${modelId}`);\n}\n\nexportModel('your-project-id', 'us-central1', 'your-model-id');\n```\n\n----------------------------------------\n\nTITLE: Getting Style Guide from Linting Service using Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve a style guide using the get_style_guide method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/linting_service.get_style_guide.js\n```\n\n----------------------------------------\n\nTITLE: Installing Eventarc Publishing API client library\nDESCRIPTION: This command installs the Eventarc Publishing API client library for Node.js using npm. This library provides the necessary tools and functions to interact with the Eventarc Publishing API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc-publishing/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/eventarc-publishing\"\n```\n\n----------------------------------------\n\nTITLE: VPC Access Quickstart Sample for Node.js\nDESCRIPTION: A quickstart sample demonstrating basic usage of the VPC Access service with Node.js. Found in quickstart.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vpcaccess/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting Federation Details in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet fetches details of a specific federation in the Dataproc Metastore. Users need the federation's identifiers to retrieve accurate details. This operation is essential for monitoring and management of federations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to get federation details\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore_federation.get_federation.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving VOD Stitch Detail in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to get VOD stitch details using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_vod_stitch_detail.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Data Fusion using Node.js\nDESCRIPTION: A quickstart script to initiate basic operations in Google Cloud Data Fusion with Node.js. Utilizes the Google Cloud library for API interactions with no specific dependencies or inputs required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/quickstart.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Services in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet illustrates how to list services in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.list_services.js\n```\n\n----------------------------------------\n\nTITLE: Updating Data Attribute with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This snippet illustrates how to update a data attribute using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the update_data_attribute method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.update_data_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cluster Information from AlloyDB using Node.js\nDESCRIPTION: This JavaScript code snippet allows the retrieval of information about a particular AlloyDB cluster. Proper permissions and setup are required, and it outputs cluster details upon completion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Listing Glossaries with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet illustrates how to list glossaries using the Translation Service. It employs the list_glossaries method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_glossaries.js\n```\n\n----------------------------------------\n\nTITLE: Updating Tuned Model with Model Service in Javascript\nDESCRIPTION: This sample demonstrates how to update a tuned model using the `updateTunedModel` method from the Model Service, making use of the google-ai-generativelanguage package. It covers the process of modifying an existing tuned AI model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Fetching Static IPs in Google Cloud Datastream - Node.js\nDESCRIPTION: Fetches the static IPs used by Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to access static IPs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function fetchStaticIps() {\n  const request = {\n    // Parameters to fetch static IP addresses\n  };\n\n  const response = await client.fetchStaticIps(request);\n  console.log('Fetched static IPs:', response);\n}\n\nfetchStaticIps();\n```\n\n----------------------------------------\n\nTITLE: Creating Session Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for creating session templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionTemplateController.createSessionTemplate method to define reusable configurations for sessions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_template_controller.create_session_template.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tasks with Delivery Service API in Node.js\nDESCRIPTION: This code sample shows how to list tasks using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.list_tasks.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving CDN Key in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to get a CDN (Content Delivery Network) key using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_cdn_key.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Saved Query using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a saved query using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.delete_saved_query.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Security Health Analytics Custom Module with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to delete a security health analytics custom module using the Google Cloud Security Center API. Custom modules allow for specialized security checks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.delete_security_health_analytics_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Feature: Trusted Private Cloud Support\nDESCRIPTION: This feature adds support for Trusted Private Cloud, allowing users to specify the `universeDomain` parameter. This enables the library to be used in environments where access to the public internet is restricted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: Text\nCODE:\n```\nTrusted Private Cloud support, use the universeDomain parameter  ([#5028](https://github.com/googleapis/google-cloud-node/issues/5028)) ([852f3eb](https://github.com/googleapis/google-cloud-node/commit/852f3ebf065ee24e910580b9a1fc365acb3a744a))\n```\n\n----------------------------------------\n\nTITLE: Create Workflow Configuration\nDESCRIPTION: Sample code showing how to create a workflow configuration for Dataform using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.create_workflow_config.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Repository with Google Cloud Dataform in Node.js\nDESCRIPTION: Using Node.js, this sample script updates the repository settings in a Dataform project. It must be run from the command line with the necessary repository details provided.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.update_repository.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Users in AlloyDB Admin using Node.js\nDESCRIPTION: This code snippet lists all users associated with AlloyDB instances, crucial for user management and access control. It uses the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listUsers() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Entry Group with Node.js\nDESCRIPTION: This snippet showcases how to retrieve an entry group using Node.js and the `@google-cloud/datacatalog` package. Run from the command line, it highlights how to access and query entry group information in the data catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.get_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build List Builds Sample\nDESCRIPTION: This sample demonstrates how to list builds using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Get Certificate Information using Node.js\nDESCRIPTION: Example showing how to retrieve certificate information using the Google Cloud Certificate Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.get_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Notebook Instance (v2)\nDESCRIPTION: This code sample demonstrates how to delete a Notebook instance using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy with IAP Admin in JavaScript\nDESCRIPTION: A sample that retrieves IAM policy using the Identity-Aware Proxy admin service. Intended for use in a Node.js environment, this script should be run in a terminal.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1beta1/identity_aware_proxy_admin_v1_beta1.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating Knowledge Base in Dialogflow\nDESCRIPTION: Sample code showing knowledge base creation in Dialogflow using Node.js client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_106\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/knowledge_bases.create_knowledge_base.js\n```\n\n----------------------------------------\n\nTITLE: Listing Capacity Commitments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to list capacity commitments using the BigQuery Reservation Service API in Node.js. This allows you to view all capacity commitments for a project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.list_capacity_commitments.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag Template Field with Node.js\nDESCRIPTION: This Node.js script uses the `@google-cloud/datacatalog` package to delete a field from a tag template. It is executed from the command line, supporting tag template customization and field management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.delete_tag_template_field.js\n```\n\n----------------------------------------\n\nTITLE: Listing APIs using Registry service in Node.js\nDESCRIPTION: This snippet demonstrates how to use the list_apis method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.list_apis.js\n```\n\n----------------------------------------\n\nTITLE: Running Google Cloud Billing Quickstart Sample in Node.js\nDESCRIPTION: This command executes the quickstart sample for Google Cloud Billing using Node.js. The sample demonstrates basic usage of the Google Cloud Billing API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-billing/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Job in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet allows updating the details of an existing job in the batch service. Useful for changing job parameters while it is still in the system. Requires Google Cloud Client library and correct job identifiers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to update job\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function updateJob(jobId, jobDetails) {\\n  const response = await client.updateJob(jobId, jobDetails);\\n  console.log(response);\\n}\\nupdateJob('YOUR_JOB_ID', {name: 'Updated Job'});\"\n```\n\n----------------------------------------\n\nTITLE: Updating an Instance in Data Fusion with Node.js\nDESCRIPTION: This Node.js script updates an instance configuration in Google Cloud Data Fusion using the Google Cloud Node.js library. Specific configurations can be changed based on given parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.update_instance.js\"\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Delete Cluster in Node.js\nDESCRIPTION: Shows how to delete an AlloyDB cluster using the Node.js client library. The process involves setting up the AlloyDBAdmin client and invoking the `deleteCluster` method. The sample requires correct project setup and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.delete_cluster | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_cluster.js)\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Folders with Resource Manager V3\nDESCRIPTION: Sample illustrating the process of deleting a folder using Google Cloud Resource Manager API in Node.js. Enables programmatic removal of folder resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample: Folders.delete_folder\n```\n\n----------------------------------------\n\nTITLE: Listing Patch Job Instance Details - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet lists details of patch job instances using the OS Config service in Google Cloud. It requires the Google Cloud Node.js client library. The output includes details like instance status and patch job ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for listing patch job instance details\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function listPatchJobInstanceDetails(patchJobId) {\n    const [response] = await client.listPatchJobInstanceDetails({patchJob: patchJobId});\n    console.log(response);\n}\nlistPatchJobInstanceDetails('PATCH_JOB_ID');\n```\n\n----------------------------------------\n\nTITLE: Creating Streams in Node.js\nDESCRIPTION: Shows how to create a new stream instance via the Datastream API with Node.js scripts. Requires configuration of API services and valid credential usage for stream initialization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.create_stream.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Get Simulation in Security Center\nDESCRIPTION: Retrieves a simulation from Google Cloud Security Center using the Node.js client library. This sample shows how to fetch simulation configurations within Security Center. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_simulation\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud DNS Samples\nDESCRIPTION: Shell commands to install the required Node.js dependencies for running the samples. Must be executed from the samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Updating an Azure Cluster\nDESCRIPTION: Designed for Node.js, this sample script updates an Azure cluster configuration via the GKE Multi-Cloud API. The Google Cloud client library is a prerequisite, and the script modifies cluster settings as specified.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.update_azure_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Listing Web Security Scanner Crawled URLs with Node.js\nDESCRIPTION: This Node.js script lists URLs that were crawled during a scan run using the Web Security Scanner API. Ensure Google Cloud SDK access and setup before executing with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.list_crawled_urls.js\n```\n\n----------------------------------------\n\nTITLE: Writing a File with Google Cloud Dataform in Node.js\nDESCRIPTION: This Node.js script writes or updates a file within a Dataform workspace. Provide the file path and content as input to ensure the file is correctly written.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.write_file.js\n```\n\n----------------------------------------\n\nTITLE: Listing Jobs with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list jobs using the Job Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.list_jobs.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.list_jobs.js`\n```\n\n----------------------------------------\n\nTITLE: Search Service Operations - Node.js Google Cloud Retail\nDESCRIPTION: Sample implementation for search functionality in Google Cloud Retail.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nSearch_service.search\n```\n\n----------------------------------------\n\nTITLE: Using Parallelstore Client Library to List Instances\nDESCRIPTION: Example demonstrating how to initialize the Parallelstore client and list instances using the API. The code includes parameter definitions for parent, pageSize, pageToken, filter, and orderBy options. It shows how to construct and execute an async request to list instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The project and location for which to retrieve instance\n *  information, in the format `projects/{project_id}/locations/{location}`.\n *  For Parallelstore locations map to Google Cloud zones, for example\n *  **us-central1-a**.\n *  To retrieve instance information for all locations, use \"-\" for the\n *  `{location}` value.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results\n */\n// const orderBy = 'abc123'\n\n// Imports the Parallelstore library\nconst {ParallelstoreClient} = require('@google-cloud/parallelstore').v1beta;\n\n// Instantiates a client\nconst parallelstoreClient = new ParallelstoreClient();\n\nasync function callListInstances() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = parallelstoreClient.listInstancesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListInstances();\n```\n\n----------------------------------------\n\nTITLE: Create Report Task in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to create a report task using the Alpha version of the Google Analytics Data API with Node.js. It employs the `alpha_analytics_data.create_report_task` method, and the README.md file contains instructions for running this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Dataset in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update a dataset using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_dataset.js`\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - JSON Proto Loading\nDESCRIPTION: Updated code to use require() instead of dynamic imports when loading JSON protocol buffer definitions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Before:\nconst proto = await import('./proto.json');\n\n// After:\nconst proto = require('./proto.json');\n```\n\n----------------------------------------\n\nTITLE: Creating an Intent in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to create a new intent in Dialogflow CX. It uses the intents.create_intent method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.create_intent.js\n```\n\n----------------------------------------\n\nTITLE: Getting Network Connectivity Hub Details\nDESCRIPTION: Node.js code sample for retrieving details of a specific hub using the Google Cloud Network Connectivity Hub Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.get_hub.js\n```\n\n----------------------------------------\n\nTITLE: Executing Reference Images Listing Node.js Script\nDESCRIPTION: This snippet provides the command to run a Node.js script for listing all reference images via Google Cloud Vision API. Node.js is required with no additional input for generating a list of reference images.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.list_reference_images.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Question in Data QnA with Node.js\nDESCRIPTION: This sample shows how to create a question using the Question Service in Data QnA. It uses the google-cloud-dataqna package and requires proper GCP configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/question_service.create_question.js\n```\n\n----------------------------------------\n\nTITLE: Listing Crypto Keys with KMS Inventory API in Node.js\nDESCRIPTION: Demonstrates how to use the KMS Inventory API client library to list cryptographic keys. Requires setting the 'parent' parameter to specify the Google Cloud project and optionally 'pageSize' and 'pageToken' for pagination. Outputs the list of cryptographic keys to the console. The client is instantiated from the KeyDashboardServiceClient class.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The Google Cloud project for which to retrieve key metadata, in\n *  the format `projects/*`\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of keys to return. The service may return\n *  fewer than this value. If unspecified, at most 1000 keys will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. Pass this into a subsequent request in order to receive the next\n *  page of results.\n */\n// const pageToken = 'abc123'\n\n// Imports the Inventory library\nconst {KeyDashboardServiceClient} = require('@google-cloud/kms-inventory').v1;\n\n// Instantiates a client\nconst inventoryClient = new KeyDashboardServiceClient();\n\nasync function callListCryptoKeys() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const [response] = await inventoryClient.listCryptoKeys(request, {\n    maxResults: 1,\n    autoPaginate: false,\n  });\n  console.log(response);\n}\n\ncallListCryptoKeys();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Experiment Details in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to retrieve details about a specific experiment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the get experiment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.get_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Document with Retriever Service using Node.js\nDESCRIPTION: This code sample demonstrates the usage of the deleteDocument method from the RetrieverService. It utilizes the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.delete_document.js\n```\n\n----------------------------------------\n\nTITLE: Generate Client Certificate for AlloyDB using Node.js\nDESCRIPTION: This code snippet shows how to generate a client certificate for AlloyDB using the AlloyDB Admin API in Node.js. It uses the generate_client_certificate method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.generate_client_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Attribute with API Hub using Node.js\nDESCRIPTION: Use this script to obtain attribute data from an API in Google Cloud's API Hub with Node.js. The script facilitates attribute retrieval operations, essential for API data management and development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Listing Models in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to list models using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_models.js`\n```\n\n----------------------------------------\n\nTITLE: Installing API Hub Client Library with npm\nDESCRIPTION: This command installs the API Hub Client Library as a dependency to the node project, which is required to use the functionalities provided by this library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apihub\n```\n\n----------------------------------------\n\nTITLE: Listing Knowledge Bases in Dialogflow using Node.js\nDESCRIPTION: This code snippet in JavaScript shows how to list all knowledge bases in Google Cloud Dialogflow using Node.js. The setup requires the Google Cloud Node.js client library and a configured Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/knowledge_bases.list_knowledge_bases.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Google Cloud DNS Quickstart Sample\nDESCRIPTION: Command to execute the quickstart sample that demonstrates fetching a list of all available DNS zones.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode quickstart\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks List Queues Sample\nDESCRIPTION: Illustrates how to list all Cloud Tasks queues in a project using the Node.js client library. The sample code is available in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.list_queues.js\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Entity Types with Dialogflow V2beta1\nDESCRIPTION: This sample showcases the process of updating multiple entity types in a batch operation using Dialogflow V2beta1 in Node.js. It employs the `Entity_types.batch_update_entity_types` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.batch_update_entity_types\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Text-to-Speech Client Library - Node.js\nDESCRIPTION: This snippet guides users on installing the Google Cloud Text-to-Speech client library using npm. Ensure that Node.js and npm are installed on your machine before executing the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/text-to-speech\n```\n\n----------------------------------------\n\nTITLE: SQL Operations Service Methods in Node.js\nDESCRIPTION: Methods for managing SQL operations including canceling operations, retrieving operation details, and listing all operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_8\n\n\n\n----------------------------------------\n\nTITLE: List BigQuery Exports\nDESCRIPTION: Lists BigQuery export configurations from the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_big_query_exports.js\n```\n\n----------------------------------------\n\nTITLE: Using ImageAnnotator.batchAnnotateImages method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to batch annotate multiple images using Google Cloud Vision API v1p3beta1. This allows efficient processing of multiple images in a single request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/image_annotator.batch_annotate_images.js\n```\n\n----------------------------------------\n\nTITLE: Creating VPC Flow Logs Configuration in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to create a new VPC flow logs configuration using the Google Cloud Network Management API v1beta1. VPC flow logs enable logging of network traffic in your VPC.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/vpc_flow_logs_service.create_vpc_flow_logs_config.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Delete Queue Sample Usage\nDESCRIPTION: This sample demonstrates how to delete a queue using the Cloud Tasks API in Node.js. The script `cloud_tasks.delete_queue.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.delete_queue.js`\n```\n\n----------------------------------------\n\nTITLE: Managing Migration Jobs - Google Cloud DMS JavaScript\nDESCRIPTION: Collection of Node.js code samples for managing database migration jobs including starting, stopping, promoting and restarting migrations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.start_migration_job.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.stop_migration_job.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.promote_migration_job.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.restart_migration_job.js\n```\n\n----------------------------------------\n\nTITLE: Importing Product Sets using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to import product sets using the Google Cloud Vision API. It utilizes the ProductSearch.importProductSets method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.import_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Creating an Environment - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet is used for creating a new environment within Google Cloud Dataplex, which is essential for managing and organizing data processes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to create an environment\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function createEnvironment() {\n  const request = {environment: {name: 'name_of_the_environment', ...}};\n  const [response] = await client.createEnvironment(request);\n  console.log(response);\n}\ncreateEnvironment();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet shows how to delete a service in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.delete_service.js\n```\n\n----------------------------------------\n\nTITLE: Pausing Evaluation Jobs with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to pause an evaluation job using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the pause_evaluation_job method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.pause_evaluation_job.js\n```\n\n----------------------------------------\n\nTITLE: Updating Space Read State with Google Chat API in Node.js\nDESCRIPTION: This snippet explains how to update the read state for a chat space. It includes the requirements for the function parameters and demonstrates the update process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update space read state\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateSpaceReadState(spaceId, readState) {\n  const res = await client.updateSpaceReadState(spaceId, readState);\n  console.log(res);\n}\nupdateSpaceReadState('SPACE_ID', {state: 'READ'});\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Node.js on Azure Clusters\nDESCRIPTION: The quickstart script serves as an introductory example for using the Google Cloud client library to manage Azure clusters via Node.js. It demonstrates basic operations and is meant for quick setup and execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Job Service Update Job\nDESCRIPTION: Demonstrates how to update a job using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.update_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Channel Service - JavaScript\nDESCRIPTION: This snippet serves as a quickstart tutorial to get familiar with the Google Cloud Channel API. It typically involves authentication setup and initial API calls to check connectivity and permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Quickstart code for Google Cloud Channel\n// Visit the link for full implementation\nconst {CloudChannelServiceClient} = require('@google-cloud/channel');\nconst client = new CloudChannelServiceClient();\n\nasync function quickstart() {\n    // Implementation here...\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Reference Image Retrieval Node.js Script\nDESCRIPTION: Execute this command in a Node.js environment to retrieve a reference image's details using Google Cloud Vision API, expecting the reference image ID as input and an image description as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.get_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Get Security Health Analytics Custom Module\nDESCRIPTION: Executes the Security Center API method to retrieve a security health analytics custom module.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_security_health_analytics_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Create Policy Based Route with Node.js\nDESCRIPTION: Creates a new policy based route in the Network Connectivity service using the v1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/policy_based_routing_service.create_policy_based_route.js\n```\n\n----------------------------------------\n\nTITLE: Update Security Center Service\nDESCRIPTION: Shows how to update settings and configurations of a Security Center service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.update_security_center_service.js\n```\n\n----------------------------------------\n\nTITLE: Listing Services with Service Management API (Node.js)\nDESCRIPTION: Sample code demonstrating how to list services using the Google Cloud Service Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-servicemanagement/samples/generated/v1/service_manager.list_services.js\n```\n\n----------------------------------------\n\nTITLE: Getting Cloud Function Details (v2beta)\nDESCRIPTION: Example showing how to retrieve details of a specific Cloud Function using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.get_function.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Redis Instance Management - Node.js\nDESCRIPTION: Command line usage examples for managing Cloud Redis instances through the Node.js client library. Each command demonstrates a specific Redis instance operation like creation, deletion, updating, and maintenance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.create_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.delete_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.export_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.failover_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.get_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.get_instance_auth_string.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.import_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.list_instances.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.reschedule_maintenance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.update_instance.js\nnode packages/google-cloud-redis/samples/generated/v1/cloud_redis.upgrade_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup Plan Association with BackupDR in Node.js\nDESCRIPTION: This snippet shows how to retrieve a backup plan association using the BackupDR service in Node.js. It utilizes the google-cloud-node library and demonstrates the command-line usage to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_backup_plan_association.js`\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample for Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet demonstrates how to run the quickstart sample for the Google Cloud Vision API using Node.js. It provides the command to execute the Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-vision/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Restarting Managed Kafka Connector in Node.js\nDESCRIPTION: This snippet demonstrates how to restart a connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.restart_connector.js\n```\n\n----------------------------------------\n\nTITLE: Sending Commands to Device in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet shows how to send commands to a device managed by Google Cloud IoT. It facilitates remotely controlling devices by sending specific commands. Prerequisites include the Google Cloud IoT library. Inputs include the device ID and the command to be sent, with a confirmation response as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.send_command_to_device.js).\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to get information about a specific service in Google Cloud Run. It uses the Services.get_service method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.get_service.js\n```\n\n----------------------------------------\n\nTITLE: Create Release Configuration\nDESCRIPTION: Sample code demonstrating release configuration creation in Dataform API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.create_release_config.js\n```\n\n----------------------------------------\n\nTITLE: Exporting a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet shows how to export a flow in Dialogflow CX using the Node.js client library.  The `Flows.export_flow` method is used to export the flow to a Google Cloud Storage bucket or inline.  Before running, ensure you have configured the Dialogflow CX client and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_ExportFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callExportFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow',\n  };\n\n  // Make the request\n  const [operation] = await client.exportFlow(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallExportFlow();\n// [END dialogflow_cx_v3_generated_Flows_ExportFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Using NotebookService.diagnoseInstance in Node.js\nDESCRIPTION: Example showing how to diagnose a notebook instance using the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.diagnose_instance.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Live Config in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to get a live configuration using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_live_config.js\n```\n\n----------------------------------------\n\nTITLE: Bulk Muting Findings in Google Cloud Security Center - JavaScript\nDESCRIPTION: This code snippet illustrates how to bulk mute findings in Google Cloud Security Center using Node.js. It provides an option to mute multiple findings at once based on specified criteria. Before execution, ensure that proper permissions are granted for the muting operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for bulk muting findings\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function bulkMuteFindings() {\n  const request = {\n    // Specify the parameters relevant for muting the findings\n  };\n  const [response] = await client.bulkMuteFindings(request);\n  console.log(response);\n}\n\nbulkMuteFindings();\n```\n\n----------------------------------------\n\nTITLE: Lock Document Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to lock a document using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.lock_document.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.get_route in Node.js\nDESCRIPTION: Sample code for retrieving a route using the Google Cloud Datastream API in Node.js. This script demonstrates how to get details about a specific route within a private connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.get_route.js\n```\n\n----------------------------------------\n\nTITLE: Running Set Legacy ABAC Script in Node.js\nDESCRIPTION: This Node.js script sets legacy ABAC permissions for a cluster. Requires Node.js, Google Cloud SDK, and permission settings. Provides permission configuration confirmation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.set_legacy_abac.js\n```\n\n----------------------------------------\n\nTITLE: Re-encrypting SQL Instance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to re-encrypt a Google Cloud SQL instance using the `reencrypt` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.reencrypt.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Data Taxonomy with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This code snippet shows how to create a data taxonomy using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the create_data_taxonomy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.create_data_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Profile with Cloud Profiler API in Node.js\nDESCRIPTION: This JavaScript snippet shows how to create a profile in the Cloud Profiler API using the ProfilerServiceClient class. It requires setting up the parent project details, deployment information, and supported profile types before executing the API call to create the profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Parent project to create the profile in.\n */\n// const parent = 'abc123'\n/**\n *  Deployment details.\n */\n// const deployment = {}\n/**\n *  One or more profile types that the agent is capable of providing.\n */\n// const profileType = [1,2,3,4]\n\n// Imports the Cloudprofiler library\nconst {ProfilerServiceClient} = require('@google-cloud/cloudprofiler').v2;\n// Instantiates a client\nconst cloudprofilerClient = new ProfilerServiceClient();\n\nasync function callCreateProfile() {\n  // Construct request\n  const request = {\n    project,\n    deployment: {projectId, target},\n    profileType: [profileType],\n  };\n\n  // Run request\n  const response = await cloudprofilerClient.createProfile(request);\n  console.log(response);\n}\n\ncallCreateProfile();\n\n```\n\n----------------------------------------\n\nTITLE: AutoML List Datasets in Node.js\nDESCRIPTION: This sample demonstrates how to list datasets using the AutoML API in Node.js. The `listDatasets` function is called. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.list_datasets\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Delivery Vehicle with Delivery Service API in Node.js\nDESCRIPTION: This code sample demonstrates how to retrieve a delivery vehicle using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.get_delivery_vehicle.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and automatically fixes any issues it can. It's important to run this before submitting a pull request to ensure code style consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Snapshots with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to list snapshots using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API and retrieve a list of existing snapshots.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.list_snapshots.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Service Project Attachments in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet illustrates how to list all service project attachments in the Google Cloud App Hub. No parameters are needed, and it returns a list of attachment objects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst listServiceProjectAttachments = async () => {\n  const response = await client.listServiceProjectAttachments();\n};\n```\n\n----------------------------------------\n\nTITLE: Using Document Schema Service to Create Document Schema in Node.js\nDESCRIPTION: This snippet illustrates how to use the Document Schema Service to create a document schema using the Document AI Warehouse API in Node.js. It references the source code file for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_schema_service.create_document_schema.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet lists all instances associated with the Google Cloud Bare Metal Solution. It requires Node.js for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_instances.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_instances.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Dataset - Node.js\nDESCRIPTION: This code snippet shows how to delete a dataset using the Financial Services API in Node.js. The implementation requires the Google Cloud client library and a valid authentication setup. It takes the dataset identifier as input and logs the deletion confirmation result.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete dataset\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function deleteDataset() {\n    const request = { /* parameters for deletion */ };\n    const response = await client.deleteDataset(request);\n    console.log(response);\n}\ndeleteDataset();\n```\n\n----------------------------------------\n\nTITLE: Quickstart - ApiGatewayService\nDESCRIPTION: This JavaScript code snippet demonstrates the quickstart usage of the Google Cloud API Gateway service. The snippet shows how to execute the sample from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apigateway/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Create Blueprint in Telco Automation API - JavaScript\nDESCRIPTION: Creates a new blueprint using the Telco Automation API v1alpha1. This sample demonstrates blueprint creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.create_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Getting an Asset in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve an asset within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_asset.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Operation Details - JavaScript\nDESCRIPTION: This snippet retrieves details about a specific operation in the Cluster Manager API. The use of the Google Cloud Node.js client library is essential for executing this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function getOperation(operationId) {\n  const request = {operationId};\n  const response = await client.getOperation(request);\n  console.log(`Operation details: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Executing Product Set Retrieval Node.js Script\nDESCRIPTION: This snippet provides the command to execute a Node.js script for retrieving a product set's details via Google Cloud Vision API. Must have Node.js installed and should supply a product set ID to receive the corresponding information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.get_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Processor Types with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to fetch processor types using the Google Cloud DocumentAI API. It uses the document_processor_service to retrieve available processor types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.fetch_processor_types.js\n```\n\n----------------------------------------\n\nTITLE: Creating Finding in Google Cloud Security Center - JavaScript\nDESCRIPTION: This snippet illustrates how to create a finding in Google Cloud Security Center using Node.js. It allows users to register security findings within their environment for tracking and remediation purposes. Ensure that necessary fields are filled out accurately according to the security context.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a finding\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createFinding() {\n  const request = {\n    parent: 'organizations/YOUR_ORG_ID', // Required\n    finding: {\n      // Finding properties go here\n    },\n  };\n  const [response] = await client.createFinding(request);\n  console.log(response);\n}\n\ncreateFinding();\n```\n\n----------------------------------------\n\nTITLE: Retrieving API Resources using Registry API\nDESCRIPTION: Node.js scripts for fetching various API resources like specs, deployments, versions, and artifacts from the Apigee Registry. These utilities enable developers to programmatically access and inspect API metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.get_api.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.get_api_deployment.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.get_api_spec.js\n```\n\n----------------------------------------\n\nTITLE: Listing Databases in AlloyDB Admin using Node.js\nDESCRIPTION: This code snippet retrieves a list of databases in a specific AlloyDB cluster for management purposes. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listDatabases() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Create Membership - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates creating a new membership within a Google Chat space using Node.js.  The code uses the `create_membership` method of the `Chat_service` to add a member to a specific space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Evicting Volume - Google Cloud Node.js\nDESCRIPTION: This snippet provides functionality to evict a volume from the Google Cloud Bare Metal Solution using Node.js. Ensure appropriate permissions are granted to perform this operation without issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function evictVolume() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/volumes/YOUR_VOLUME_ID',\n  };\n  const [operation] = await client.evictVolume(request);\n  await operation.promise();\n  console.log('Volume evicted.');\n}\nevictVolume();\n```\n\n----------------------------------------\n\nTITLE: Getting AWS OpenID Configuration with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to retrieve OpenID Connect configuration for an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This configuration is used for identity federation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.get_aws_open_id_config.js\n```\n\n----------------------------------------\n\nTITLE: Revoke Certificate using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to revoke a Certificate using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.revoke_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Creating Conversation with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet demonstrates the usage of the create_conversation method from the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Discovery Config with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a discovery configuration using the Google Cloud DLP service. It uses the deleteDiscoveryConfig method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_discovery_config.js\n```\n\n----------------------------------------\n\nTITLE: Git Commit References\nDESCRIPTION: Git commit hashes and pull request references documenting specific changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Get Stage Execution Details with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve stage execution details using the Dataflow API in Node.js. The command executes the `get_stage_execution_details.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/metrics_v1_beta3.get_stage_execution_details.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Target Sites in Node.js\nDESCRIPTION: This sample demonstrates how to list target sites using the DiscoveryEngine API in Node.js.  It uses the `Site_search_engine_service.list_target_sites` method to list target sites. The DiscoveryEngine client is expected to be initialized and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_ListTargetSites_async]\"\n```\n\n----------------------------------------\n\nTITLE: Purging Products from Product Search\nDESCRIPTION: Sample code demonstrating how to remove multiple products from a Google Cloud Vision Product Search dataset\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nProduct_search.purge_products\n```\n\n----------------------------------------\n\nTITLE: Running Simulator.get_replay Sample\nDESCRIPTION: Sample code demonstrating how to retrieve replay information using the Policy Simulator API. Located in simulator.get_replay.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policysimulator/samples/generated/v1/simulator.get_replay.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tool Versions in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to list all versions of a tool using the Dialogflow CX API. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_134\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/tools.list_tool_versions.js\n```\n\n----------------------------------------\n\nTITLE: Create Job From Template Dataflow API v1beta3\nDESCRIPTION: Demonstrates how to create a job from a template using the Dataflow API v1beta3 in Node.js. It shows the command to execute the sample code, which would typically involve setting up authentication and any necessary environment variables before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/templates_service.create_job_from_template.js`\n```\n\n----------------------------------------\n\nTITLE: Using Contact Center AI Insights Client Library\nDESCRIPTION: Example demonstrating how to initialize the Contact Center AI Insights client and list conversations using the API. Shows basic setup and API call pattern.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {\n  ContactCenterInsightsClient,\n} = require('@google-cloud/contact-center-insights');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\nconst client = new ContactCenterInsightsClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function listConversations() {\n  const conversations = await client.listConversations({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(conversations);\n}\nlistConversations();\n```\n\n----------------------------------------\n\nTITLE: Getting Certificate Authority with Google Cloud Private CA in Node.js\nDESCRIPTION: This code sample illustrates how to retrieve a Certificate Authority using the Google Cloud Private CA Service API. It utilizes the CertificateAuthorityService client to call the getCertificateAuthority method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.get_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Generator in Node.js\nDESCRIPTION: This snippet deletes an existing generator from a Dialogflow agent. This is useful for cleaning up or removing obsolete generators.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_95\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Delete generator\nconst {GeneratorsClient} = require('@google-cloud/dialogflow');\nconst client = new GeneratorsClient();\n\nasync function deleteGenerator() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.deleteGenerator(request);\n  console.log(response);\n}\ndeleteGenerator();\n```\n\n----------------------------------------\n\nTITLE: Getting a Secret Version with Google Cloud Secret Manager in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a specific version of a secret using the Google Cloud Secret Manager service. It uses the get_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.get_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Querying Directory Contents with Google Cloud Dataform in Node.js\nDESCRIPTION: This snippet demonstrates how to query the contents of a directory within a Dataform workspace using Node.js. No specific dependencies are noted, but Node.js must be installed. It accepts directory paths as input and outputs the listed contents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.query_directory_contents.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Cloud Scheduler Job in Node.js\nDESCRIPTION: This snippet demonstrates how to create a new job in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.create_job.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Service in Google Cloud App Hub - JavaScript\nDESCRIPTION: This code snippet illustrates how to create a service associated with an application in the Google Cloud App Hub. It requires parameters like service name and configuration. The output will be the created service object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst createService = async () => {\n  const response = await client.createService({\n    serviceName: 'my-service',\n    ...\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Connection Info in AlloyDB using Node.js\nDESCRIPTION: This snippet retrieves the connection information for a specified AlloyDB instance using JavaScript. Suitable client configuration and authorization are prerequisites. This returns connection settings in JSON format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_connection_info.js\n```\n\n----------------------------------------\n\nTITLE: Getting Connectivity Test in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to retrieve a specific connectivity test using the Google Cloud Network Management API v1beta1. This returns the details of an existing connectivity test.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.get_connectivity_test.js\n```\n\n----------------------------------------\n\nTITLE: Issue References in Markdown\nDESCRIPTION: GitHub issue reference links used throughout the changelog\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6184](https://github.com/googleapis/google-cloud-node/issues/6184)\n[#6096](https://github.com/googleapis/google-cloud-node/issues/6096)\n[#5736](https://github.com/googleapis/google-cloud-node/issues/5736)\n```\n\n----------------------------------------\n\nTITLE: Creating Big Query Export in Google Cloud Security Center - JavaScript\nDESCRIPTION: This snippet shows how to create a BigQuery export configuration in Google Cloud Security Center using Node.js. It allows users to export security findings to a BigQuery dataset for analysis. Ensure your Google Cloud project is linked and that you have sufficient permissions to create exports.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a big query export\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createBigQueryExport() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID', // Required\n    // Other parameters for export\n  };\n  const [response] = await client.createBigQueryExport(request);\n  console.log(response);\n}\n\ncreateBigQueryExport();\n```\n\n----------------------------------------\n\nTITLE: Installing Data Lineage API Client Library\nDESCRIPTION: Command to install the Google Cloud Data Lineage API client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/lineage\n```\n\n----------------------------------------\n\nTITLE: List Violations in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to list violations within the Assured Workloads service using the google-cloud-node library. It utilizes the AssuredWorkloadsService client to retrieve a list of violations. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Listing Jobs in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet lists all jobs managed by the batch service. It is helpful for users to view the status of existing batch jobs. Ensure to have the appropriate setup of the Google Cloud Client library and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to list jobs\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function listJobs() {\\n  const response = await client.listJobs();\\n  console.log(response);\\n}\\nlistJobs();\"\n```\n\n----------------------------------------\n\nTITLE: Executing SQL on AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet runs an SQL command against an AlloyDB database using Node.js. It relies on set user credentials and initialized libraries, executing the provided SQL commands.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.execute_sql.js\n```\n\n----------------------------------------\n\nTITLE: Using ImageAnnotator.asyncBatchAnnotateFiles method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to asynchronously annotate files using Google Cloud Vision API v1p3beta1. This performs asynchronous batch annotation on multiple files with a long-running operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/image_annotator.async_batch_annotate_files.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Sentiment with Google Cloud Natural Language API (v2)\nDESCRIPTION: This code sample shows how to use the analyze_sentiment method of the Language Service API (v2) to determine the overall sentiment of a piece of text. It requires the google-cloud-language package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v2/language_service.analyze_sentiment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Jobs Using Google Cloud Batch Service in Node.js\nDESCRIPTION: This example provides a script to list jobs within the Google Cloud Batch service through the Google Cloud Node.js library. The snippet helps display all active and past batch jobs accessible by the authorized user.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.list_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart for Google Cloud Video Livestream in Node.js\nDESCRIPTION: This snippet illustrates how to execute the quickstart script for the Google Cloud Video Livestream API in Node.js. It assumes that the necessary Google Cloud SDK and appropriate authentication are set up beforehand. The command to run the script is provided, which will initiate the sample application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve the IAM policy for a specific policy tag in Google Cloud's Data Catalog. The google-cloud-datacatalog package is necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function getIamPolicy() {\n  const request = {\n    resource: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n  };\n  const [policy] = await client.getIamPolicy(request);\n  console.log('IAM Policy:', policy);\n}\ngetIamPolicy();\n```\n\n----------------------------------------\n\nTITLE: Create Member using Google Meet API\nDESCRIPTION: Sample code demonstrating member creation in a space using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.create_member.js\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey_admin.update_autokey_config Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `update_autokey_config` function within the Autokey Admin service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey_admin.update_autokey_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating QA Questions in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update QA questions using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_qa_question method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_qa_question.js\n```\n\n----------------------------------------\n\nTITLE: Executing Data Migration Service Update Migration Job Sample in Node.js\nDESCRIPTION: This snippet illustrates how to run a sample script that updates a migration job using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and executes a pre-defined script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.update_migration_job.js\n```\n\n----------------------------------------\n\nTITLE: Generating Azure Cluster Agent Token - Google Cloud Node\nDESCRIPTION: This snippet is used to generate a token for the Azure cluster agent. This is necessary for managing connectivity and operations between Google Cloud and Azure clusters, ensuring smooth interaction.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.generateAzureClusterAgentToken({name: 'projects/my-project/locations/my-location/azureClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Listing Interconnect Attachments - Google Cloud Node.js\nDESCRIPTION: This script lists all interconnect attachments available in the Google Cloud Edge Network. It does not require any additional parameters and outputs the details of all interconnect attachments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_interconnect_attachments.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all interconnect attachments\nasync function listInterconnectAttachments() {\n  const [attachments] = await client.listInterconnectAttachments({});\n  console.log('Interconnect Attachments:', attachments);\n}\n\nlistInterconnectAttachments();\n```\n\n----------------------------------------\n\nTITLE: Listing Effective Tags using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code example demonstrates how to list effective tags using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_bindings.list_effective_tags.js\n```\n\n----------------------------------------\n\nTITLE: Using API Gateway Service - Node.js Command Samples\nDESCRIPTION: A collection of command-line usage examples for interacting with the Google Cloud API Gateway service using Node.js. Each command demonstrates how to execute different API Gateway operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.create_api.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.create_api_config.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.create_gateway.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.delete_api.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.delete_api_config.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.delete_gateway.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.get_api.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.get_api_config.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.get_gateway.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.list_api_configs.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.list_apis.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.list_gateways.js\nnode packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.update_api.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Insight Type Configuration in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to get an insight type configuration using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the get_insight_type_config method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.get_insight_type_config.js\n```\n\n----------------------------------------\n\nTITLE: Updating Network in Bare Metal Solution with Node.js\nDESCRIPTION: This example illustrates updating a network in Google Cloud Bare Metal Solution using Node.js. It requires the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.update_network.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up Environment History in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to retrieve the deployment history of an environment in Dialogflow CX using Node.js. The sample provides the command-line execution example for looking up environment history.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.lookup_environment_history.js\n```\n\n----------------------------------------\n\nTITLE: Scheduling Transfer Runs with BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This code sample shows how to schedule transfer runs using the BigQuery Data Transfer Service in Node.js. It includes instructions on how to run the sample script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/generated/v1/data_transfer_service.schedule_transfer_runs.js\n```\n\n----------------------------------------\n\nTITLE: Managing Security Marks in Node.js\nDESCRIPTION: Sample code for updating security marks in Google Cloud Security Center. Demonstrates how to modify security marks associated with resources or findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1p1beta1/security_center.update_security_marks.js\n```\n\n----------------------------------------\n\nTITLE: Approving Blueprint with Telco Automation API in Node.js\nDESCRIPTION: This sample illustrates how to approve a blueprint within the Telco Automation API. It requires that the builder environment is properly configured and dependencies are in place. The approval process will output the confirmation of the blueprint's status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { TelcoAutomationClient } = require('@google-cloud/telcoautomation');\n\nconst client = new TelcoAutomationClient();\n\nasync function approveBlueprint() {\n  const request = {/* request parameters */};\n  const [operation] = await client.approveBlueprint(request);\n  const [response] = await operation.promise();\n  console.log('Blueprint Approved:', response);\n}\n\napproveBlueprint();\n```\n\n----------------------------------------\n\nTITLE: Create Import Job with JavaScript\nDESCRIPTION: Creates an import job allowing external data to be imported into Google Cloud KMS as a cryptographic key with a Node.js script. Requires information about the external data and import configurations. Outputs the import job details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to set the IAM policy for a service in Google Cloud Run. It uses the Services.set_iam_policy method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Delete Document Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to delete a document using the Document Service in Content Warehouse API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.delete_document.js\n```\n\n----------------------------------------\n\nTITLE: Check Active Jobs with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to check active jobs using the Dataflow API in Node.js. The command executes the `check_active_jobs.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.check_active_jobs.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Web Security Scanner Finding with Node.js\nDESCRIPTION: This Node.js script retrieves a specific finding from the Web Security Scanner database. Make sure the Google Cloud SDK is configured and authenticated before executing this script using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.get_finding.js\n```\n\n----------------------------------------\n\nTITLE: Performing Dataplex Task Listing\nDESCRIPTION: Runs a Node.js script to list tasks in Dataplex. Requires Google Cloud authentication and Node.js. Script 'dataplex_service.list_tasks.js' is executed to fetch task listings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_tasks.js\n```\n\n----------------------------------------\n\nTITLE: List Recordings from Conference Records Service\nDESCRIPTION: Node.js sample for listing recordings using the conference_records_service API endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2/conference_records_service.list_recordings.js\n```\n\n----------------------------------------\n\nTITLE: Restarting an Instance in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet handles restarting an AlloyDB instance, which is often necessary for configuration changes. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function restartInstance() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Detecting Intent - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet detects user intent based on input from a session, allowing Dialogflow to respond appropriately based on learned data and conversation context.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_121\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Detects user intent in a session.\nconst {SessionsClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionsClient();\n\nasync function detectIntent() {\n  // Implementation logic here\n}\n\ndetectIntent();\n```\n\n----------------------------------------\n\nTITLE: Creating a Processor - Google Cloud Node.js\nDESCRIPTION: This snippet illustrates how to create a new processor within the Document Processor service. It requires specifications of processor configurations, and outputs the created processor details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to create a processor\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { parent: parentName, processor: processorConfig };\nconst [operation] = await client.createProcessor(request);\n```\n\n----------------------------------------\n\nTITLE: Listing VPC Connectors using Node.js\nDESCRIPTION: Sample code demonstrating how to list all VPC connectors in a project using the VPC Access service API. Found in vpc_access_service.list_connectors.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vpcaccess/samples/generated/v1/vpc_access_service.list_connectors.js\n```\n\n----------------------------------------\n\nTITLE: Creating API - Node.js\nDESCRIPTION: This snippet illustrates how to create a new API in the Apigee Registry. It covers the necessary input parameters and details about the created API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.create_api.js\n```\n\n----------------------------------------\n\nTITLE: Updating Company with Company Service in Node.js\nDESCRIPTION: This snippet demonstrates how to update a company using the Company Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4beta1/company_service.update_company.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4beta1/company_service.update_company.js`\n```\n\n----------------------------------------\n\nTITLE: Company Service Delete Company\nDESCRIPTION: Demonstrates how to delete a company using the Company Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/company_service.delete_company.js\"\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.createReferenceImage method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to create a reference image for a product in Google Cloud Vision API. This adds a visual example of a product that will be used for matching during visual search.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.create_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Script for Google Cloud Edge Container - JavaScript\nDESCRIPTION: This quickstart script provides a foundational example for using the Google Cloud Edge Container API with Node.js, requiring the correct packages for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample quickstart code\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function quickstart() {\n    // Your code for quick start\n    console.log('Quickstart executed.');\n}\n\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.stop_backfill_job in Node.js\nDESCRIPTION: Sample code for stopping a backfill job using the Google Cloud Datastream API in Node.js. This script demonstrates how to terminate an ongoing backfill operation for a stream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.stop_backfill_job.js\n```\n\n----------------------------------------\n\nTITLE: Listing Restore Plans using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing restore plans using the GKE Backup API. Used to enumerate all restore plans configured for a Google Kubernetes Engine project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_restore_plans.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Model Evaluation in AutoML with Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a model evaluation in AutoML. It requires the evaluation ID and fetches the corresponding evaluation details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function getModelEvaluation(projectId, computeRegion, modelId, evaluationId) {\n  const request = {\n    name: client.modelEvaluationPath(projectId, computeRegion, modelId, evaluationId),\n  };\n  const [response] = await client.getModelEvaluation(request);\n  console.log(`Model Evaluation: ${JSON.stringify(response)}`);\n}\n\ngetModelEvaluation('your-project-id', 'us-central1', 'your-model-id', 'your-evaluation-id');\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Get Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to get a build trigger using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a Taxonomy in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates the deletion of a Taxonomy within Google Cloud Data Catalog, utilizing the google-cloud-datacatalog library in Node.js. It invokes the `deleteTaxonomy` method, providing the name of the Taxonomy to be removed. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(name) {\n  // [START datacatalog_delete_taxonomy]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const name = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function deleteTaxonomy() {\n    await policyTagManagerClient.deleteTaxonomy({\n      name: name,\n    });\n    console.log('Deleted taxonomy');\n  }\n  deleteTaxonomy();\n  // [END datacatalog_delete_taxonomy]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: List Effective Event Threat Detection Custom Modules\nDESCRIPTION: Demonstrates listing effective Event Threat Detection custom modules for an organization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.list_effective_event_threat_detection_custom_modules.js\n```\n\n----------------------------------------\n\nTITLE: Updating Instance with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet shows how to update an instance using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to modify an existing instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.update_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Network Services quickstart example in Node.js\nDESCRIPTION: A quickstart example for using the Google Cloud Network Services API with Node.js. This sample provides a basic introduction to using the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using Catalog Service Update Operation in Google Cloud Retail API\nDESCRIPTION: Example showing how to update a catalog using the Google Cloud Retail API. Demonstrates catalog management functionality in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_66\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/catalog_service.update_catalog.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests for Google Cloud Node.js Project\nDESCRIPTION: This command executes all system tests for the Google Cloud Node.js project. System tests are comprehensive tests that verify the entire system's functionality in a real-world scenario.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Quick Start Guide for Network Services API\nDESCRIPTION: Basic sample demonstrating initial setup and usage of the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: BackupDR fetchUsableBackupVaults Sample\nDESCRIPTION: This sample demonstrates how to fetch usable backup vaults using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Get Automation Sample\nDESCRIPTION: This sample demonstrates how to get an automation using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_automation.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Connection in Google Cloud Datastream - Node.js\nDESCRIPTION: Deletes a private connection in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to delete private connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function deletePrivateConnection() {\n  const request = {\n    // Parameters to identify the private connection to delete\n  };\n\n  const [operation] = await client.deletePrivateConnection(request);\n  await operation.promise();\n  console.log('Private connection deleted');\n}\n\ndeletePrivateConnection();\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Identity-Aware Proxy\nDESCRIPTION: This snippet sets the IAM policy for an Identity-Aware Proxy resource. It demonstrates how to apply permission changes for managing access to the resource. Dependencies include the '@google-cloud/iap' library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyAdminClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyAdminClient();\n\nasync function setIamPolicy(policy) {\n  const response = await client.setIamPolicy({ policy });\n  console.log('Set IAM Policy Response:', response);\n}\nsetIamPolicy({ /* IAM Policy Object */ });\n```\n\n----------------------------------------\n\nTITLE: Listing Products using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to list products using the Google Cloud Vision API. It utilizes the ProductSearch.listProducts method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.list_products.js\n```\n\n----------------------------------------\n\nTITLE: Find Direct Message - Chat Service - Node.js\nDESCRIPTION: This sample showcases how to find a direct message (DM) in Google Chat using Node.js. The `find_direct_message` method of the `Chat_service` is used to locate a DM between two users.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Listing Connection Profiles - Google Cloud DMS JavaScript\nDESCRIPTION: Node.js code sample that demonstrates how to list all connection profiles configured in Database Migration Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.list_connection_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing IAM Policies with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample demonstrates how to analyze IAM policies using the Google Cloud Asset Inventory service v1p4beta1 API, which helps in understanding effective permissions across resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p4beta1/asset_service.analyze_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet demonstrates the process of deleting an entry from the Dataplex catalog service. It requires proper initialization of the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for deleting an entry\n\n```\n\n----------------------------------------\n\nTITLE: Installing Apigee Registry Node.js Client Library\nDESCRIPTION: This snippet shows how to install the Apigee Registry API client library for Node.js using npm. It must be run in a terminal with Node.js and npm installed. This step is required to utilize the Apigee Registry API functionalities in a Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apigee-registry\n```\n\n----------------------------------------\n\nTITLE: Listing Reference Images with Google Cloud Vision API in Node.js\nDESCRIPTION: This example demonstrates how to list reference images for a product using the Google Cloud Vision API. It uses the product_search.list_reference_images method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.list_reference_images.js\n```\n\n----------------------------------------\n\nTITLE: Running Streaming Translate Speech Sample\nDESCRIPTION: Demonstrates how to execute a Node.js script to perform real-time speech translation using Cloud Media Translation services. This requires the Google Cloud Node.js client library and network connectivity to the Google Cloud services. The script reads streaming audio input and provides translations in real-time.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-mediatranslation/samples/generated/v1beta1/speech_translation_service.streaming_translate_speech.js\"\n```\n\n----------------------------------------\n\nTITLE: Importing Taxonomies with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code sample shows how to import taxonomies using the Google Cloud Data Catalog API. It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager_serialization.import_taxonomies.js\n```\n\n----------------------------------------\n\nTITLE: Getting Flow Validation Result in Dialogflow CX with Node.js\nDESCRIPTION: This code demonstrates how to retrieve the validation results for a specific flow in Dialogflow CX using the Node.js client library. The `Flows.get_flow_validation_result` method is called with the flow's name. The Dialogflow CX client must be properly configured and authenticated before running this snippet.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_GetFlowValidationResult_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callGetFlowValidationResult() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow/validationResult',\n  };\n\n  // Make the request\n  const [response] = await client.getFlowValidationResult(request);\n  console.log(response);\n}\n\ncallGetFlowValidationResult();\n// [END dialogflow_cx_v3_generated_Flows_GetFlowValidationResult_async]\n```\n\n----------------------------------------\n\nTITLE: Installing API Gateway Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud API Gateway client library using NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/api-gateway\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Get Task Sample Usage\nDESCRIPTION: This sample demonstrates how to retrieve a task using the Cloud Tasks API in Node.js. The script `cloud_tasks.get_task.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.get_task.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Data Attribute with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This example illustrates how to delete a data attribute using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the delete_data_attribute method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.delete_data_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Installing IAP Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud Identity-Aware Proxy client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/iap\n```\n\n----------------------------------------\n\nTITLE: Deleting a Federation in Dataproc Metastore - Node.js\nDESCRIPTION: This code snippet provides functionality to delete a federation from the Dataproc Metastore. Users must provide specific identifiers for the federation to be deleted. This action is critical for cleanup in the federated Metastore environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to delete a federation\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore_federation.delete_federation.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Tag Hold using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code sample demonstrates how to create a tag hold using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_holds.create_tag_hold.js\n```\n\n----------------------------------------\n\nTITLE: Creating API Deployment - Node.js\nDESCRIPTION: This snippet shows how to create a deployment for an API in the Apigee Registry. It specifies the required parameters to configure the deployment correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.create_api_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Discovered Workload in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet retrieves details of a discovered workload in the Google Cloud App Hub. It takes the workload ID as input and returns the workload details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getDiscoveredWorkload = async (workloadId) => {\n  const response = await client.getDiscoveredWorkload({\n    id: workloadId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving IAM Policy via Node.js Script\nDESCRIPTION: This script retrieves the IAM policy for a resource managed by Google Cloud's Policy Tag Manager using Node.js. It requires access to the relevant Google Cloud resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.get_iam_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: List Devices - Cloud IoT - Node.js\nDESCRIPTION: This sample showcases how to list devices using the Google Cloud IoT Device Manager in Node.js. It relies on the google-cloud-node library for interacting with the IoT service. Execution of this sample requires authentication and a correctly set up project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Classifying Text with Google Cloud Natural Language API (v1beta2)\nDESCRIPTION: This snippet demonstrates how to use the classify_text method of the Language Service API (v1beta2) to categorize text content. It requires the google-cloud-language package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v1beta2/language_service.classify_text.js\n```\n\n----------------------------------------\n\nTITLE: Executing Ekm_service.get_ekm_connection Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `get_ekm_connection` function within the EKM Service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/ekm_service.get_ekm_connection.js\"\n```\n\n----------------------------------------\n\nTITLE: Executing Discuss Service Methods with Node.js\nDESCRIPTION: Node.js command to interact with the discuss service endpoint for counting message tokens.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/discuss_service.count_message_tokens.js\n```\n\n----------------------------------------\n\nTITLE: Listing Evaluation Jobs with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to list evaluation jobs using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the list_evaluation_jobs method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.list_evaluation_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Getting Dataset with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet shows how to retrieve a dataset using the A_m_l.get_dataset method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and authentication to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_dataset.js\n```\n\n----------------------------------------\n\nTITLE: Updating API Deployment using Registry service in Node.js\nDESCRIPTION: This snippet illustrates how to use the update_api_deployment method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.update_api_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Get Security Center Service\nDESCRIPTION: Demonstrates how to retrieve details of a Security Center service using the management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.get_security_center_service.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Discovered Workloads in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet fetches a list of all discovered workloads from the Google Cloud App Hub. It does not take any parameters and returns a list of workload objects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst listDiscoveredWorkloads = async () => {\n  const response = await client.listDiscoveredWorkloads();\n};\n```\n\n----------------------------------------\n\nTITLE: Listing Public Blueprints with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list public blueprints using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available public blueprints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_public_blueprints.js\n```\n\n----------------------------------------\n\nTITLE: Running Model Armor API Quickstart in Node.js\nDESCRIPTION: This snippet shows how to execute the quickstart script for the Model Armor API. It demonstrates the command to run the quickstart sample from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-modelarmor/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Web Security Scanner Findings in Node.js\nDESCRIPTION: Sample illustrating how to retrieve security findings from a scan configuration using the Web Security Scanner API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nWeb_security_scanner.get_finding\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB Instance in Node.js\nDESCRIPTION: This code snippet demonstrates how to update an AlloyDB instance using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.update_instance.js\n```\n\n----------------------------------------\n\nTITLE: Managing Notebook Instance Deletion\nDESCRIPTION: Sample script for deleting a Google Cloud Notebook instance using the Notebook Service API in Node.js. Demonstrates how to remove an existing notebook instance from a project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-notebooks\\/samples\\/generated\\/v1beta1\\/notebook_service.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Tenant Service Delete Tenant\nDESCRIPTION: Demonstrates how to delete a tenant using the Tenant Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/tenant_service.delete_tenant.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Changes for Google Cloud Node\nDESCRIPTION: This snippet includes the command to lint code changes and automatically fix any issues in the Google Cloud Node environment. It's an important step to maintain code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Execution Details - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet retrieves details of a specific execution based on its execution ID. It requires Node.js and access to Google Cloud Workflows API. The key parameter is the execution ID passed to the method. The expected output is the execution details in JSON format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ExecutionsClient} = require('@google-cloud/workflows-executions');\n\nasync function getExecution() {\n  const client = new ExecutionsClient();\n  const executionId = 'YOUR_EXECUTION_ID';\n  const request = {name: `projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID/executions/${executionId}`};\n  const [response] = await client.getExecution(request);\n  console.log(response);\n}\ngetExecution();\n```\n\n----------------------------------------\n\nTITLE: Listing Reference Images with Product Search API\nDESCRIPTION: Sample code for retrieving reference images associated with a product using Google Cloud Vision Product Search API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nProduct_search.list_reference_images\n```\n\n----------------------------------------\n\nTITLE: Deleting Event Threat Detection Custom Module with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to delete an event threat detection custom module using the Google Cloud Security Center API. It requires the full path to the custom module to be deleted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.delete_event_threat_detection_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Updating Authorization Policy with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet demonstrates how to update an authorization policy using the Google Cloud Network Security API. It uses the update_authorization_policy method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.update_authorization_policy.js\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Node 18 in Google Cloud Node\nDESCRIPTION: This code snippet shows a breaking change where the project is upgraded to Node 18. It also includes features for adding request/response debug logging to gapics and updating templates to gax 5.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* Add request/response debug logging to gapics, update templates to gax 5 and node 18 ([#1671](https://github.com/googleapis/google-cloud-node/issues/1671)) ([eed00f4](https://github.com/googleapis/google-cloud-node/commit/eed00f4e4de22392db3a440a20486c3eeb9d33a6))\n```\n\n----------------------------------------\n\nTITLE: Canceling a Job - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet allows for the cancellation of a running job in Google Cloud Dataplex, providing functionality to manage long-running operations effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to cancel a job\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function cancelJob() {\n  const request = {jobName: 'job_id'};\n  const [response] = await client.cancelJob(request);\n  console.log(response);\n}\ncancelJob();\n```\n\n----------------------------------------\n\nTITLE: Listing Orchestration Clusters with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list orchestration clusters using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available orchestration clusters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_orchestration_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Node Pool Details - Google Cloud Node\nDESCRIPTION: This snippet retrieves the details of a specified AWS node pool using the GKE Multi-Cloud library. It requires the 'google-cloud-gkemulticloud' package to be installed and authenticates with the necessary credentials to access the AWS resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.getAwsNodePool({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster/awsNodePools/my-node-pool'});\n```\n\n----------------------------------------\n\nTITLE: Updating a Dialogflow Intent using Node.js\nDESCRIPTION: This execution example shows how to update an existing Dialogflow intent via a JavaScript script using Node.js. Ensure the Google Cloud Node.js client library is installed and Node.js is configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.update_intent.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Phishing Protection Quickstart\nDESCRIPTION: Command to execute the quickstart sample that demonstrates basic usage of the Phishing Protection API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-phishingprotection/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating Permission with Permission Service in JavaScript\nDESCRIPTION: This sample showcases the creation of a permission using the PermissionService in the google-ai-generativelanguage package. The command provided executes the sample, creating a new permission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.create_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Access Approval Sample Commands\nDESCRIPTION: Commands for running different Access Approval samples from the command line. Requires Node.js and proper Google Cloud setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.approve_approval_request.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.delete_access_approval_settings.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.dismiss_approval_request.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.get_access_approval_service_account.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.get_access_approval_settings.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.get_approval_request.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.invalidate_approval_request.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.list_approval_requests.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/generated/v1/access_approval.update_access_approval_settings.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-accessapproval/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Get Network Peering in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_network_peering sample for the VMware Engine API. This retrieves details about a network peering connection for a VMware Engine network.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_network_peering.js\n```\n\n----------------------------------------\n\nTITLE: Searching Products in Private Catalog with Node.js\nDESCRIPTION: This sample demonstrates how to search products using the Private Catalog API in Node.js. It provides the command to execute the sample and links to the source code for detailed implementation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-privatecatalog/samples/generated/v1beta1/private_catalog.search_products.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Playbook Version from Dialogflow CX using Node.js\nDESCRIPTION: Node.js script to obtain specific version details of a playbook in Dialogflow CX. It involves API client setup and authentication. Outputs details for the specified version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_126\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.get_playbook_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating VMware Engine Network with Node.js\nDESCRIPTION: This script allows for the creation of a VMware Engine network using Node.js. Ensure all necessary Google Cloud dependencies are ready. Execute using the specified Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_vmware_engine_network.js\n```\n\n----------------------------------------\n\nTITLE: Enabling Interactive Serial Console - Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates how to enable the interactive serial console for an instance in the Google Cloud Bare Metal Solution using Node.js. Ensure you have the correct permissions set in the API to execute this snippet successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function enableInteractiveSerialConsole() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/instances/YOUR_INSTANCE_ID',\n  };\n  const [operation] = await client.enableInteractiveSerialConsole(request);\n  await operation.promise();\n  console.log('Interactive Serial Console enabled.');\n}\nenableInteractiveSerialConsole();\n```\n\n----------------------------------------\n\nTITLE: Listing Assets with Google Cloud Asset Inventory v1p5beta1 in Node.js\nDESCRIPTION: This sample shows how to list assets using the Google Cloud Asset Inventory service v1p5beta1 API, which provides enhanced asset discovery and inventory capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p5beta1/asset_service.list_assets.js\n```\n\n----------------------------------------\n\nTITLE: Moderating Text with Google Cloud Natural Language API (v1beta2)\nDESCRIPTION: This code sample shows how to use the moderate_text method of the Language Service API (v1beta2) to analyze text for potentially sensitive or inappropriate content. It requires the google-cloud-language package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v1beta2/language_service.moderate_text.js\n```\n\n----------------------------------------\n\nTITLE: Listing Server TLS Policies with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet shows how to list server TLS policies using the Google Cloud Network Security API. It uses the list_server_tls_policies method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.list_server_tls_policies.js\n```\n\n----------------------------------------\n\nTITLE: Delete Site Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to delete a site using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.delete_site.js\n```\n\n----------------------------------------\n\nTITLE: Updating Data Policy - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to update an existing data policy\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.update_data_policy.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_asset script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_asset sample script. This script demonstrates how to delete an asset using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_asset.js\n```\n\n----------------------------------------\n\nTITLE: Getting Datastream Connection Profile in Node.js\nDESCRIPTION: This code snippet provides an example of how to retrieve a specific connection profile from Google Cloud Datastream using Node.js, focusing on fetching profile details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.get_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Listing Network Usage in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This code snippet fetches and lists the current network usage statistics for bare metal instances via the API. Node.js is required for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_network_usage.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_network_usage.js\n```\n\n----------------------------------------\n\nTITLE: Getting Snapshots in Google Cloud Filestore - JavaScript\nDESCRIPTION: This code demonstrates how to retrieve snapshot information in Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Snapshot Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function getSnapshot(projectId, snapshotId) {\n  // Implementation for getting a snapshot\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific flow in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_97\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.get_flow.js\n```\n\n----------------------------------------\n\nTITLE: Updating QA Scorecards in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update QA scorecards using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_qa_scorecard method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_qa_scorecard.js\n```\n\n----------------------------------------\n\nTITLE: List Descendant Event Threat Detection Custom Modules\nDESCRIPTION: Demonstrates listing all Event Threat Detection custom modules for descendant organizations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.list_descendant_event_threat_detection_custom_modules.js\n```\n\n----------------------------------------\n\nTITLE: Listing Engine Versions in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to list engine versions using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_engine_versions.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Node Pools\nDESCRIPTION: This script is used to list all node pools within an Azure cluster using Google Cloud's API. It operates within a Node.js environment, requiring the Google Cloud client library, and returns a list of node pools.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.list_azure_node_pools.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Tag Template in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates updating a Tag Template in Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js. It invokes the `updateTagTemplate` method with the modified TagTemplate object as a parameter to update the template. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(tagTemplate) {\n  // [START datacatalog_update_tag_template]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const tagTemplate = {};\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function updateTagTemplate() {\n    const [response] = await datacatalog.updateTagTemplate({\n      tagTemplate: tagTemplate,\n    });\n    console.log(`Tag Template updated: ${response.name}`);\n  }\n  updateTagTemplate();\n  // [END datacatalog_update_tag_template]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Getting Finding with Web Security Scanner in Node.js\nDESCRIPTION: This script retrieves details about a specific finding from a security scan using Google Cloud Web Security Scanner. Node.js is required, along with proper authentication. The output is detailed information about the finding.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.get_finding.js\"\n```\n\n----------------------------------------\n\nTITLE: Batch Create Occurrences with Grafeas in Node.js\nDESCRIPTION: This sample demonstrates how to create multiple occurrences in batch using the Grafeas API in Node.js. The sample relies on the google-devtools-containeranalysis package and is invoked through a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/grafeas.batch_create_occurrences.js`\n```\n\n----------------------------------------\n\nTITLE: Get EKM Connections using Cloud Controls Partner Core API (v1beta)\nDESCRIPTION: Sample code demonstrating how to retrieve EKM connection details using the Cloud Controls Partner Core API v1beta endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/generated/v1beta/cloud_controls_partner_core.get_ekm_connections.js\n```\n\n----------------------------------------\n\nTITLE: Performing Disk Shrink with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to perform disk shrink on a Google Cloud SQL instance using the `perform_disk_shrink` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.perform_disk_shrink.js`\n```\n\n----------------------------------------\n\nTITLE: Updating GKE Hub Membership - JavaScript\nDESCRIPTION: This snippet shows how to update an existing membership in GKE Hub using the update_membership method. It requires the GKE Hub client library for JavaScript. The parameters include the updated membership details, and the output confirms the updated details from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.update_membership.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.update_membership.js\n```\n\n----------------------------------------\n\nTITLE: Applying Hydrated Deployment with Telco Automation API in Node.js\nDESCRIPTION: This script applies a hydrated deployment configuration via the Telco Automation API. Prerequisites include the proper environment and dependencies set for using the client library. The output confirms the success of the hydration and deployment process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { TelcoAutomationClient } = require('@google-cloud/telcoautomation');\n\nconst client = new TelcoAutomationClient();\n\nasync function applyHydratedDeployment() {\n  const request = {/* request parameters */};\n  const [operation] = await client.applyHydratedDeployment(request);\n  const [response] = await operation.promise();\n  console.log('Hydrated Deployment Applied:', response);\n}\n\napplyHydratedDeployment();\n```\n\n----------------------------------------\n\nTITLE: Sheet Export Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to export an audience list to a sheet using the Alpha version of the Google Analytics Data API with Node.js. The `alpha_analytics_data.sheet_export_audience_list` method is used. The README.md file contains instructions for running this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: AutoML Predict in Node.js\nDESCRIPTION: This sample demonstrates making a prediction using the AutoML API in Node.js. The `predict` function of the `Prediction_service` is called. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n\"Prediction_service.predict\"\n```\n\n----------------------------------------\n\nTITLE: Updating Data Attribute Binding - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet updates a specific data attribute binding for a data taxonomy, allowing for changes to how attributes are bound in the context of taxonomies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to update a data attribute binding\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function updateDataAttributeBinding() {\n  const request = {dataAttributeBinding: {name: 'name_of_the_binding', ...}};\n  const [response] = await client.updateDataAttributeBinding(request);\n  console.log(response);\n}\nupdateDataAttributeBinding();\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Get User in Node.js\nDESCRIPTION: Explains how to retrieve details of an AlloyDB user through the Node.js client library. This includes setting up the AlloyDBAdmin client and calling the `getUser` method. It assumes that the Google Cloud project has been properly set up and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.get_user | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_user.js)\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Node Pool - Google Cloud Node\nDESCRIPTION: This snippet deletes a specified node pool from an Azure cluster. The correct details regarding the node pool must be provided, and proper client configuration is essential for the operation to succeed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.deleteAzureNodePool({name: 'projects/my-project/locations/my-location/azureClusters/my-cluster/azureNodePools/my-node-pool'});\n```\n\n----------------------------------------\n\nTITLE: Listing Client Connector Services - JavaScript\nDESCRIPTION: This code snippet shows how to use the BeyondCorp API client to list client connector services. It requires setting a parent value for the request and handles asynchronous fetching of results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Clientconnectorservices library\nconst {ClientConnectorServicesServiceClient} =\n  require('@google-cloud/clientconnectorservices').v1;\n\n// Instantiates a client\nconst clientconnectorservicesClient =\n  new ClientConnectorServicesServiceClient();\n\nasync function callListClientConnectorServices() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await clientconnectorservicesClient.listClientConnectorServicesAsync(\n      request\n    );\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClientConnectorServices();\n```\n\n----------------------------------------\n\nTITLE: Using Completion Service Operations in Node.js\nDESCRIPTION: Functions for handling completion-related operations like querying completions and importing completion data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/completion_service.complete_query.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/completion_service.import_completion_data.js\n```\n\n----------------------------------------\n\nTITLE: Executing Products in Product Set Listing Node.js Script\nDESCRIPTION: Run this command to execute a Node.js script that lists products contained within a specified product set using Google Cloud Vision API. Requires Node.js and a valid product set ID, outputting a list of products within that set.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.list_products_in_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service List Chunks Example in Node.js\nDESCRIPTION: Provides a command to execute the JavaScript file for listing chunks using the Retriever service, assuming Node.js is available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.list_chunks.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating External Account Key with Public Certificate Authority Service (v1beta1)\nDESCRIPTION: This sample demonstrates how to create an external account key using the v1beta1 API of the Public Certificate Authority Service. The code is located in the google-cloud-security-publicca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-publicca/samples/generated/v1beta1/public_certificate_authority_service.create_external_account_key.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Life Sciences Client Library for Node.js\nDESCRIPTION: This snippet provides the npm install command for adding the Google Cloud Life Sciences client library to a Node.js project. Ensuring npm is available is a prerequisite. This command will download the library and its dependencies into the node_modules directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/life-sciences\n```\n\n----------------------------------------\n\nTITLE: Importing Product Sets with Google Cloud Vision API in Node.js\nDESCRIPTION: This example demonstrates how to import product sets using the Google Cloud Vision API. It uses the product_search.import_product_sets method to bulk import product set data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.import_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Listing Restores using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing restores using the GKE Backup API. Used to enumerate all restore operations created under a specific restore plan in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_restores.js\n```\n\n----------------------------------------\n\nTITLE: Using the Merchant API Client Library in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Merchant API client and make a request to list regional inventories. It includes setting up required parameters and handling the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The `name` of the parent product to list `RegionalInventory`\n *  resources for. Format: `accounts/{account}/products/{product}`\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of `RegionalInventory` resources for the given product\n *  to return. The service returns fewer than this value if the number of\n *  inventories for the given product is less that than the `pageSize`. The\n *  default value is 25000. The maximum value is 100000; If a value higher than\n *  the maximum is specified, then the `pageSize` will default to the maximum.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListRegionalInventories` call.\n *  Provide the page token to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListRegionalInventories`\n *  must match the call that provided the page token. The token returned as\n *  nextPageToken google.shopping.merchant.inventories.v1beta.ListRegionalInventoriesResponse.next_page_token\n *  in the response to the previous request.\n */\n// const pageToken = 'abc123'\n\n// Imports the Inventories library\nconst {RegionalInventoryServiceClient} =\n  require('@google-cloud/inventories').v1beta;\n\n// Instantiates a client\nconst inventoriesClient = new RegionalInventoryServiceClient();\n\nasync function callListRegionalInventories() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await inventoriesClient.listRegionalInventoriesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListRegionalInventories();\n```\n\n----------------------------------------\n\nTITLE: List Endpoints using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `listEndpoints` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for listing endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.list_endpoints.js`\n```\n\n----------------------------------------\n\nTITLE: Using ImageAnnotator.batchAnnotateImages method with Google Cloud Vision API v1p1beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to annotate multiple images in a single batch request using Google Cloud Vision API. This performs operations like label detection, face detection, and text detection on multiple images simultaneously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p1beta1/image_annotator.batch_annotate_images.js\n```\n\n----------------------------------------\n\nTITLE: Create AlloyDB Backup\nDESCRIPTION: Sample code demonstrating how to create a backup of an AlloyDB database using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// View source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_backup.js\n```\n\n----------------------------------------\n\nTITLE: Using the Service Usage Client to List Enabled Services\nDESCRIPTION: Example demonstrating how to initialize the Service Usage client and list services for a Google Cloud project. The code creates a client instance and uses the listServicesAsync method with optional parent and filter parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {ServiceUsageClient} = require('@google-cloud/service-usage');\n\n// const parent = 'projects/my-project', // Project to list service usage for.\n// filter = 'state:ENABLED' // Filter when listing services.\n\n// Creates a client\nconst client = new ServiceUsageClient();\nasync function listServices() {\n  for await (const service of client.listServicesAsync({\n    parent,\n    filter,\n  })) {\n    console.info(service.name);\n  }\n}\nlistServices();\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Delete Document Example in Node.js\nDESCRIPTION: Shows how to run the JavaScript example to delete a document via the Retriever service. Ensure Node.js is installed beforehand.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.delete_document.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Backups for GKE - Node.js\nDESCRIPTION: This snippet illustrates how to list all backups in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and may have parameters for filtering by criteria.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// List Backups\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.listBackups(request)\n  .then(response => {\n    console.log('Backups:', response);\n  })\n  .catch(err => {\n    console.error('Error listing backups:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Getting Backup Details with BackupDR in Node.js\nDESCRIPTION: This snippet shows how to retrieve backup details using the BackupDR service in Node.js.  It utilizes the google-cloud-node library and shows the command-line usage for executing the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloud IDS Endpoint Deletion Sample Usage\nDESCRIPTION: Command to execute the endpoint deletion sample code for Cloud IDS.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-ids/samples/generated/v1/i_d_s.delete_endpoint.js\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Tag Reconciliation Sample\nDESCRIPTION: Node.js script to reconcile tags in Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.reconcile_tags.js\n```\n\n----------------------------------------\n\nTITLE: Reidentifying Content with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to reidentify previously de-identified content using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.reidentify_content.js\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Chunks with Retriever Service using Node.js\nDESCRIPTION: This code sample demonstrates the usage of the batchCreateChunks method from the RetrieverService. It utilizes the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.batch_create_chunks.js\n```\n\n----------------------------------------\n\nTITLE: Get Quota Rule - Google Cloud NetApp Node.js\nDESCRIPTION: Example usage of the NetApp API to retrieve quota rule details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.get_quota_rule.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tag Binding using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet illustrates how to delete a tag binding using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_bindings.delete_tag_binding.js\n```\n\n----------------------------------------\n\nTITLE: Managing Network Routes with Node.js\nDESCRIPTION: Examples for creating and managing different types of network routes including gRPC, HTTP, TCP, and TLS routes using the Network Services API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_grpc_route.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_http_route.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_tcp_route.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_tls_route.js\n```\n\n----------------------------------------\n\nTITLE: Updating Serving Config via DiscoveryEngine in Node.js\nDESCRIPTION: This sample demonstrates how to update a serving configuration using the DiscoveryEngine API in a Node.js environment. It calls the `Serving_config_service.update_serving_config` to modify an existing serving configuration. The sample requires an initialized and authenticated DiscoveryEngine client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_ServingConfigService_UpdateServingConfig_async]\"\n```\n\n----------------------------------------\n\nTITLE: Listing Clusters in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet allows users to list all clusters within an AlloyDB instance, enabling better management of resources. It utilizes the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listClusters() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating an Entry in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet illustrates how to update an existing entry in the Data Catalog using the google-cloud-datacatalog library in Node.js.  It calls the `updateEntry` method with the updated entry object to modify the existing entry's metadata. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(entry) {\n  // [START datacatalog_update_entry]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const entry = {};\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function updateEntry() {\n    const [response] = await datacatalog.updateEntry({\n      entry: entry,\n    });\n    console.log(`Entry updated: ${response.name}`);\n  }\n  updateEntry();\n  // [END datacatalog_update_entry]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Rolling back API Deployment using Registry service in Node.js\nDESCRIPTION: This snippet demonstrates how to use the rollback_api_deployment method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.rollback_api_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Listing VPC Flow Logs Configurations in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to list all VPC flow logs configurations using the Google Cloud Network Management API v1beta1. This returns multiple configurations with pagination support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/vpc_flow_logs_service.list_vpc_flow_logs_configs.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Workload in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet illustrates creating a workload in the Google Cloud App Hub using Node.js. It requires workload specifications as input and outputs the newly created workload object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst createWorkload = async () => {\n  const response = await client.createWorkload({\n    workloadName: 'my-workload',\n    ...\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Migration Center API Quickstart Example\nDESCRIPTION: Basic quickstart example showing initial setup and usage of the Migration Center API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Simulating Maintenance Event for Google Cloud TPU Node in Node.js\nDESCRIPTION: This code snippet demonstrates how to simulate a maintenance event for a Google Cloud TPU node using the Node.js client library. It requires the google-cloud-tpu package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.simulate_maintenance_event.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code sample shows how to delete a tag key using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.delete_tag_key.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Create Contact\nDESCRIPTION: Sample code for creating a new contact in the Essential Contacts API using Node.js. Shows how to add a new contact through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.create_contact.js\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Stub for Google Cloud Channel API Node.js Client Library\nDESCRIPTION: This commit establishes the initial stub of the Google Cloud Channel API Node.js client library, setting up the basic structure for further development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n* initial stub of library ([ed34624](https://www.github.com/googleapis/nodejs-channel/commit/ed34624b07494fcab099b621d5e60a8c5e107a1d))\n```\n\n----------------------------------------\n\nTITLE: Creating Folders with Resource Manager V3\nDESCRIPTION: Sample demonstrating how to create a new folder using Google Cloud Resource Manager API in Node.js. Provides functionality for organizing and managing cloud resources hierarchically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample: Folders.create_folder\n```\n\n----------------------------------------\n\nTITLE: Manage SQL Users - Google Cloud SQL Node.js\nDESCRIPTION: Examples for managing SQL users including delete, get, insert, list and update operations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1/sql_users_service.delete.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_users_service.get.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_users_service.insert.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_users_service.list.js\nnode packages/google-cloud-sql/samples/generated/v1/sql_users_service.update.js\n```\n\n----------------------------------------\n\nTITLE: Data Labeling Service Sample Commands\nDESCRIPTION: Example command to run a specific data labeling service sample. Shows how to execute individual sample files from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.create_annotation_spec_set.js\n```\n\n----------------------------------------\n\nTITLE: Update Gateway - ApiGatewayService\nDESCRIPTION: This JavaScript code snippet demonstrates how to update a gateway using the Google Cloud API Gateway service. The snippet shows how to execute the sample from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.update_gateway.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary AlloyDB Cluster in Node.js\nDESCRIPTION: This code snippet shows how to create a secondary AlloyDB cluster using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_secondary_cluster.js\n```\n\n----------------------------------------\n\nTITLE: AutoML List Model Evaluations in Node.js\nDESCRIPTION: This sample demonstrates how to list model evaluations using the AutoML API in Node.js. The `listModelEvaluations` function is called. It uses the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.list_model_evaluations\"\n```\n\n----------------------------------------\n\nTITLE: Getting Fulfillment in Node.js\nDESCRIPTION: This snippet retrieves a specific fulfillment for a Dialogflow agent, allowing developers to access fulfillment details that trigger responses to intents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_92\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Get fulfillment\nconst {FulfillmentsClient} = require('@google-cloud/dialogflow');\nconst client = new FulfillmentsClient();\n\nasync function getFulfillment() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.getFulfillment(request);\n  console.log(response);\n}\ngetFulfillment();\n```\n\n----------------------------------------\n\nTITLE: Get Group\nDESCRIPTION: Command line usage example for retrieving a group in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.get_group.js\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Entities with Dialogflow V2beta1\nDESCRIPTION: This sample showcases how to create multiple entities in a batch operation using Dialogflow V2beta1 in Node.js. It uses the `Entity_types.batch_create_entities` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.batch_create_entities\"\n```\n\n----------------------------------------\n\nTITLE: Executing Migration Center Get Import Job\nDESCRIPTION: Command to execute the get import job sample code for Migration Center API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet illustrates how to test IAM permissions for a policy tag in Google Cloud's Data Catalog service. The implementation requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function testIamPermissions() {\n  const request = {\n    resource: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n    permissions: ['YOUR_PERMISSION_1', 'YOUR_PERMISSION_2'],\n  };\n  const [response] = await client.testIamPermissions(request);\n  console.log('Tested permissions:', response.permissions);\n}\ntestIamPermissions();\n```\n\n----------------------------------------\n\nTITLE: Create Device Registry - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to create a device registry using the Google Cloud IoT Device Manager in Node.js. It utilizes the google-cloud-node library to interact with the IoT service. The sample needs appropriate authentication and project configurations to run correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Unbinding Device from Gateway in Google Cloud IoT - JavaScript\nDESCRIPTION: This script demonstrates how to unbind a device from its associated gateway in Google Cloud IoT, facilitating changes in device configurations. Required dependencies include the Google Cloud IoT library. Inputs consist of the device and gateway IDs, with confirmation as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.unbind_device_from_gateway.js).\n```\n\n----------------------------------------\n\nTITLE: Update Namespace using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `updateNamespace` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for updating a namespace.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.update_namespace.js`\n```\n\n----------------------------------------\n\nTITLE: Remove Unused File, Fix Synth in Node.js\nDESCRIPTION: This commit removes an unused file and fixes the synth.py script in the Google Cloud IoT Node.js library. These changes likely aim to clean up the codebase and improve the build process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"* remove unused file, fix synth ([#309](https://www.github.com/googleapis/nodejs-iot/issues/309)) ([17b2ddc](https://www.github.com/googleapis/nodejs-iot/commit/17b2ddccc72a91023a348a0dbf13705670e0c0ca))\"\n```\n\n----------------------------------------\n\nTITLE: List Advisory Notifications using Node.js\nDESCRIPTION: Sample code demonstrating how to list all advisory notifications using the Advisory Notifications API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-advisorynotifications/samples/generated/v1/advisory_notifications_service.list_notifications.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving an API with API Hub using Node.js\nDESCRIPTION: This script in Node.js showcases how to retrieve API information from the Google Cloud API Hub. It runs via Node.js and provides detailed API metadata when executed, supporting data retrieval and API analysis tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_api.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Cancel Automation Run Sample\nDESCRIPTION: This sample demonstrates how to cancel an automation run using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.cancel_automation_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Event Threat Detection Custom Module in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet updates a custom module for event threat detection, allowing users to enhance their security posture by modifying detection rules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.update_event_threat_detection_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Marking a Recommendation as Claimed in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to mark a recommendation as claimed using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the mark_recommendation_claimed method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.mark_recommendation_claimed.js\n```\n\n----------------------------------------\n\nTITLE: Getting Network Policy with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a network policy using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_network_policy\"\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet lists all instances in an AlloyDB environment, providing an overview of resources in use. Requires the Google Cloud AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listInstances() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Importing Mapping Rules - Google Cloud DMS JavaScript\nDESCRIPTION: Node.js code sample for importing database schema mapping rules in Database Migration Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.import_mapping_rules.js\n```\n\n----------------------------------------\n\nTITLE: Getting NFS Share - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to obtain the details of an NFS share in Google Cloud's Bare Metal Solution using Node.js. Ensure proper permissions are configured for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function getNfsShare() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/nfsShares/YOUR_NFS_SHARE_ID',\n  };\n  const response = await client.getNfsShare(request);\n  console.log('NFS Share details:', response);\n}\ngetNfsShare();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Playbook in Dialogflow CX using Node.js\nDESCRIPTION: This script demonstrates deletion of a playbook from Dialogflow CX using the Node.js API client. It requires authentication and playbook ID to delete. The deletion status is logged upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_123\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.delete_playbook.js\n```\n\n----------------------------------------\n\nTITLE: Rescheduling Redis Cluster Maintenance with Node.js\nDESCRIPTION: This snippet shows how to reschedule maintenance for a Redis cluster using the Google Cloud Redis Cluster client library for Node.js. It requires the google-cloud-redis-cluster package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1beta1/cloud_redis_cluster.reschedule_cluster_maintenance.js\n```\n\n----------------------------------------\n\nTITLE: Update Channel Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to update a channel using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.update_channel.js\n```\n\n----------------------------------------\n\nTITLE: Updating External Address in VMware Engine (Node.js)\nDESCRIPTION: Example demonstrating how to update external addresses in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_external_address.js\n```\n\n----------------------------------------\n\nTITLE: Getting Workload with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a workload using the Assured Workloads service in Node.js. It depends on the `@google-cloud/assuredworkloads` package. The given command is used to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.get_workload.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Releases in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to list releases using the Cloud Deploy API. It uses the list_releases method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_releases.js\n```\n\n----------------------------------------\n\nTITLE: Getting Route in Google Cloud Datastream - Node.js\nDESCRIPTION: Retrieves details of a specific route in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to get routes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function getRoute() {\n  const request = {\n    // Parameters to identify the route\n  };\n\n  const response = await client.getRoute(request);\n  console.log('Retrieved route:', response);\n}\n\ngetRoute();\n```\n\n----------------------------------------\n\nTITLE: List Airflow Image Versions\nDESCRIPTION: Example showing how to retrieve available Airflow image versions from Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/image_versions.list_image_versions.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet illustrates how to get the IAM policy for a tag key using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions on Secrets using Node.js\nDESCRIPTION: This code tests IAM permissions for a secret within Google Cloud Secret Manager using Node.js. It relies on the `@google-cloud/secret-manager` package. It requires a secret ID, project ID, and the permissions to test. The snippet's output determines whether the permissions grant the requested rights, useful for verifying IAM configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Updating Service Perimeter with Access Context Manager\nDESCRIPTION: Sample code demonstrating how to update service perimeters using the Access Context Manager API. The code is executed via Node.js CLI.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.update_service_perimeter.js\n```\n\n----------------------------------------\n\nTITLE: Update Space using Google Meet API\nDESCRIPTION: Sample code showing how to update space information using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.update_space.js\n```\n\n----------------------------------------\n\nTITLE: Inserting SQL Instance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to insert a new Google Cloud SQL instance using the `insert` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.insert.js`\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Set IAM Policy Sample\nDESCRIPTION: Illustrates setting IAM policy for a Cloud Tasks resource using the Node.js client library. The sample code is located in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Running Import Jobs in Migration Center\nDESCRIPTION: Node.js example showing how to execute import jobs in Migration Center\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.run_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Get Spoke\nDESCRIPTION: Command line usage example for retrieving a spoke in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.get_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Listing Connectivity Tests in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to list all connectivity tests in a project using the Google Cloud Network Management API v1beta1. This returns multiple connectivity tests with pagination support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.list_connectivity_tests.js\n```\n\n----------------------------------------\n\nTITLE: Using Control Service Operations in Node.js\nDESCRIPTION: Functions for managing control operations including creating, deleting, getting, listing and updating controls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/control_service.create_control.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/control_service.delete_control.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/control_service.get_control.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/control_service.list_controls.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/control_service.update_control.js\n```\n\n----------------------------------------\n\nTITLE: Searching IAM Policies (v1p1beta1) using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search all IAM policies using the Google Cloud Asset Service v1p1beta1 in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1p1beta1/asset_service.search_all_iam_policies.js`\n```\n\n----------------------------------------\n\nTITLE: Updating a Notebook Instance (v2)\nDESCRIPTION: This code sample illustrates how to update the properties of a Notebook instance using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.update_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating an Entity Type with Dialogflow V2beta1\nDESCRIPTION: This sample showcases how to create a new entity type using Dialogflow V2beta1 in Node.js. It utilizes the `Entity_types.create_entity_type` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.create_entity_type\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Route in Google Cloud Datastream - Node.js\nDESCRIPTION: Deletes a route in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions for deleting routes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function deleteRoute() {\n  const request = {\n    // Parameters to identify the route to delete\n  };\n\n  const [operation] = await client.deleteRoute(request);\n  await operation.promise();\n  console.log('Route deleted');\n}\n\ndeleteRoute();\n```\n\n----------------------------------------\n\nTITLE: Executing Consumer Procurement Service - Node.js CLI Usage Examples\nDESCRIPTION: Command line usage examples for various Consumer Procurement Service operations including cancel_order, get_order, list_orders, modify_order, and place_order. Each command demonstrates how to run the corresponding sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/consumer_procurement_service.cancel_order.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/consumer_procurement_service.get_order.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/consumer_procurement_service.list_orders.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/consumer_procurement_service.modify_order.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/consumer_procurement_service.place_order.js\n```\n\n----------------------------------------\n\nTITLE: List Generators - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to list generators using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `listGenerators` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/generators.list_generators.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Connection Profile in Google Cloud Datastream - Node.js\nDESCRIPTION: Retrieves details of a specific connection profile in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to get connection profiles.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function getConnectionProfile() {\n  const request = {\n    // Parameters to identify the connection profile\n  };\n\n  const response = await client.getConnectionProfile(request);\n  console.log('Retrieved connection profile:', response);\n}\n\ngetConnectionProfile();\n```\n\n----------------------------------------\n\nTITLE: Listing Brands with Identity-Aware Proxy\nDESCRIPTION: This snippet retrieves a list of brands using the Identity-Aware Proxy API. It serves as an example of how to interact with the API to fetch data related to brands defined in the Google Identity-Aware Proxy service. Dependencies include the '@google-cloud/iap' library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyOAuthServiceClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyOAuthServiceClient();\n\nasync function listBrands() {\n  const [brands] = await client.listBrands();\n  console.log('Brands:', brands);\n}\nlistBrands();\n```\n\n----------------------------------------\n\nTITLE: Listing Workspaces\nDESCRIPTION: Example showing how to list all available Area120 workspaces\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.list_workspaces.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Dialogflow Intent using Node.js\nDESCRIPTION: This sample runs a JavaScript command in Node.js to create an intent in Google Cloud Dialogflow. It requires the Google Cloud Node.js client library and proper environment setup to execute the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.create_intent.js\"\n```\n\n----------------------------------------\n\nTITLE: Importing Google Cloud Resource Manager (New Method)\nDESCRIPTION: The new method for importing and initializing the Google Cloud Resource Manager library in v0.9.0 and later. This approach uses destructuring with CommonJS require to support ES modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst {Resource} = require('@google-cloud/resource-manager');\nconst resource = Resource({...});\n```\n\n----------------------------------------\n\nTITLE: Update Advisory Settings using Node.js\nDESCRIPTION: Sample code showing how to update advisory notification settings using the Advisory Notifications API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-advisorynotifications/samples/generated/v1/advisory_notifications_service.update_settings.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Trigger with Eventarc API in Node.js\nDESCRIPTION: This code sample demonstrates how to update a trigger using the Eventarc API. It is included in the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Using Agents.get_agent method in Google Cloud Dialogflow CX with Node.js\nDESCRIPTION: Example showing how to use the get_agent method from the Agents class in Google Cloud Dialogflow CX. This requires proper setup and authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/agents.get_agent.js\n```\n\n----------------------------------------\n\nTITLE: Move TS Target to ES2018 in Node.js\nDESCRIPTION: Moves the TypeScript compilation target from ES2016 to ES2018 in the Google Cloud IoT Node.js library. This change allows the library to utilize newer JavaScript features available in ES2018, potentially improving performance or code readability.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"* move ts target to es2018 from es2016 ([#348](https://www.github.com/googleapis/nodejs-iot/issues/348)) ([e876504](https://www.github.com/googleapis/nodejs-iot/commit/e876504a2670481c9263ef56261469463dacad47))\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart - Google Cloud Node.js\nDESCRIPTION: This quickstart script demonstrates how to quickly set up and use the Google Cloud Edge Network services using a simple example. It showcases minimal configurations and outputs the basic service details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// quickstart.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Basic setup for quickstart\nasync function quickstart() {\n  const response = await client.projectLocationList();\n  console.log('Quickstart response:', response);\n}\n\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Creating Dataset with Data Labeling Service\nDESCRIPTION: Sample illustrates creating a dataset using the Google Cloud Data Labeling Service in Node.js. It provides an example of initializing and configuring a new dataset for machine learning annotation tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndata_labeling_service.create_dataset.js\n```\n\n----------------------------------------\n\nTITLE: Using VM Migration API - Create Source\nDESCRIPTION: Example code showing how to create a migration source using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.create_source.js\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Composer API with Node.js\nDESCRIPTION: Example showing how to initialize the ImageVersionsClient and list image versions using the Cloud Composer API. Demonstrates basic client setup and API call pattern.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {ImageVersionsClient} = require('@google-cloud/orchestration-airflow');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new ImageVersionsClient();\n\nasync function listImageVersions() {\n  const [versions] = await client.listImageVersions({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(versions);\n}\nlistImageVersions();\n```\n\n----------------------------------------\n\nTITLE: Creating Instance for Cloud Filestore\nDESCRIPTION: This sample shows how to create a new instance in Google Cloud Filestore using Node.js. Ensure appropriate IAM permissions are granted before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function createInstance() {\n    const response = await client.createInstance(...);\n    console.log(response);\n}\ncreateInstance();\n```\n\n----------------------------------------\n\nTITLE: Getting the Validation Result of a Dialogflow Agent using Node.js\nDESCRIPTION: This code snippet fetches the validation results for a Dialogflow agent. The agent ID must be supplied. The Google Cloud Dialogflow client library is a prerequisite for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n'node packages/google-cloud-dialogflow/samples/generated/v2/agents.get_validation_result.js'\n```\n\n----------------------------------------\n\nTITLE: Get Mute Config in Security Center\nDESCRIPTION: Retrieves a mute configuration from Google Cloud Security Center using the Node.js client library. This sample code shows how to fetch mute configurations used to suppress findings. It utilizes the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_mute_config\"\n```\n\n----------------------------------------\n\nTITLE: Getting Entry in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet provides functionality for retrieving an entry from the Google Cloud Dataplex catalog, requiring proper initialization with the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for getting an entry\n\n```\n\n----------------------------------------\n\nTITLE: Creating Runtime Project Attachment using Node.js\nDESCRIPTION: Sample code showing how to create a runtime project attachment using the create_runtime_project_attachment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/runtime_project_attachment_service.create_runtime_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Create Device - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to create a device using the Google Cloud IoT Device Manager in Node.js. It makes use of the google-cloud-node library to interact with the IoT service. Proper authentication and project setup are necessary for the sample to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Listing Data Policies - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to list data policies in a project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.list_data_policies.js\n```\n\n----------------------------------------\n\nTITLE: List Members using Google Meet API\nDESCRIPTION: Sample code demonstrating how to list members in a space using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.list_members.js\n```\n\n----------------------------------------\n\nTITLE: Executing Migration Center List Assets\nDESCRIPTION: Command to execute the list assets sample code for Migration Center API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.list_assets.js\n```\n\n----------------------------------------\n\nTITLE: Querying API Hub Version Information in Node.js\nDESCRIPTION: Sample method for retrieving version details from Google Cloud API Hub using the Node.js client library. Demonstrates how to get specific version information for APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub.get_version\n```\n\n----------------------------------------\n\nTITLE: Generating SSH Script with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code sample illustrates the process of generating an SSH script using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.generate_ssh_script.js\n```\n\n----------------------------------------\n\nTITLE: Creating External Account Key with Public Certificate Authority Service (v1alpha1)\nDESCRIPTION: This sample demonstrates how to create an external account key using the v1alpha1 API of the Public Certificate Authority Service. The code is located in the google-cloud-security-publicca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-publicca/samples/generated/v1alpha1/public_certificate_authority_service.create_external_account_key.js\n```\n\n----------------------------------------\n\nTITLE: Resetting Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to reset a notebook runtime using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.reset_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Installing Financial Services API client library with npm\nDESCRIPTION: This command installs the Financial Services API client library for Node.js using npm. It adds the @google-cloud/financialservices package to your project's dependencies, allowing you to interact with the Financial Services API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/financialservices\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Entity with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample demonstrates how to create an entity using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_70\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.create_entity.js\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies for Google Cloud Node project\nDESCRIPTION: Command to install all the required dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-transcoder/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Scan Config with Web Security Scanner in Node.js\nDESCRIPTION: This script fetches details of a scan configuration from Google Cloud Web Security Scanner, requiring Node.js and access permissions. The response includes configuration specifics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.get_scan_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Vulnerability Report with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet shows how to retrieve a vulnerability report using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.get_vulnerability_report.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Custom Target Type Retrieval Sample in Node.js\nDESCRIPTION: This snippet illustrates executing a script to retrieve a custom target type using Node.js. Ensure Node.js is available and the samples are cloned locally. This command fetches the details for specified custom target types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_custom_target_type.js\n```\n\n----------------------------------------\n\nTITLE: Resuming a Cloud Scheduler Job with Node.js\nDESCRIPTION: This snippet demonstrates how to resume a Cloud Scheduler job using the Google Cloud Node.js client library. It requires the google-cloud-scheduler package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1beta1/cloud_scheduler.resume_job.js\n```\n\n----------------------------------------\n\nTITLE: Update Certificate Authority using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to update a Certificate Authority using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.update_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex List Environments\nDESCRIPTION: Executes a Node.js script to list all environments in Dataplex. Pre-requisites include Node.js setup and Google Cloud authentication. Runs the script 'dataplex_service.list_environments.js' to fetch environment details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_environments.js\n```\n\n----------------------------------------\n\nTITLE: Query Report Task in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to query a report task using the Alpha version of the Google Analytics Data API with Node.js. It uses the `alpha_analytics_data.query_report_task` method. Check the README.md file for instructions on how to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB User in Node.js\nDESCRIPTION: This code snippet demonstrates how to create an AlloyDB user using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_user.js\n```\n\n----------------------------------------\n\nTITLE: Listing Documents using Discovery Engine API - Node.js\nDESCRIPTION: This snippet provides a code template for using the Discovery Engine API to list documents. It includes comments to guide users on modifying parameters such as the parent resource name and pagination options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent branch resource name, such as\n *  `projects/{project}/locations/{location}/dataStores/{data_store}/branches/{branch}`.\n *  Use `default_branch` as the branch ID, to list documents under the default\n *  branch.\n *  If the caller does not have permission to list Documents  s under this\n *  branch, regardless of whether or not this branch exists, a\n *  PERMISSION_DENIED error is returned.\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of Document google.cloud.discoveryengine.v1beta.Document s\n *  to return. If unspecified, defaults to 100. The maximum allowed value is\n *  1000. Values above 1000 will be coerced to 1000.\n *  If this field is negative, an INVALID_ARGUMENT error is returned.\n */\n// const pageSize = 1234\n/**\n *  A page token\n *  ListDocumentsResponse.next_page_token google.cloud.discoveryengine.v1beta.ListDocumentsResponse.next_page_token,\n *  received from a previous\n *  DocumentService.ListDocuments google.cloud.discoveryengine.v1beta.DocumentService.ListDocuments\n *  call. Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to\n *  DocumentService.ListDocuments google.cloud.discoveryengine.v1beta.DocumentService.ListDocuments\n *  must match the call that provided the page token. Otherwise, an\n *  INVALID_ARGUMENT error is returned.\n */\n// const pageToken = 'abc123'\n\n// Imports the Discoveryengine library\nconst {DocumentServiceClient} =\n  require('@google-cloud/discoveryengine').v1beta;\n\n// Instantiates a client\nconst discoveryengineClient = new DocumentServiceClient();\n\nasync function callListDocuments() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await discoveryengineClient.listDocumentsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDocuments();\n\n```\n\n----------------------------------------\n\nTITLE: Executing Product Set Deletion Node.js Script\nDESCRIPTION: Execute this command to run a Node.js script that deletes a product set via Google Cloud Vision API. Ensure Node.js is set up, providing the product set ID as input to receive confirmation of deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.delete_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Listing Security Center Services in Javascript\nDESCRIPTION: This snippet demonstrates how to list Security Center Services using the google-cloud-securitycentermanagement library. The code is available in the specified GitHub repository and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.list_security_center_services\"\n```\n\n----------------------------------------\n\nTITLE: Validating Dialogflow CX Flow\nDESCRIPTION: Command to validate a Dialogflow CX flow configuration using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_103\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.validate_flow.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Discovered Service with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script provides the ability to retrieve a discovered service from Google Cloud App Hub using Node.js. Ensure that the environment is correctly configured with the necessary libraries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_discovered_service.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Backup for GKE - Node.js\nDESCRIPTION: This snippet shows how to delete a backup in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package as a dependency, and the relevant parameters include the backup ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Backup\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.deleteBackup(request)\n  .then(response => {\n    console.log('Backup deleted:', response);\n  })\n  .catch(err => {\n    console.error('Error deleting backup:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Listing Generative Question Configs in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to list generative question configurations using the Google Cloud Retail API. It uses the listGenerativeQuestionConfigs method of the GenerativeQuestionService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/generative_question_service.list_generative_question_configs.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Merchant API\nDESCRIPTION: Getting started guide and basic usage examples for the Google Merchant API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Pausing Managed Kafka Connector in Node.js\nDESCRIPTION: This code sample illustrates how to pause a connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.pause_connector.js\n```\n\n----------------------------------------\n\nTITLE: Batch Creating AlloyDB Instances in Node.js\nDESCRIPTION: This code snippet demonstrates how to batch create AlloyDB instances using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.batch_create_instances.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Chunk with Retriever Service using Node.js\nDESCRIPTION: This snippet demonstrates the usage of the createChunk method from the RetrieverService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.create_chunk.js\n```\n\n----------------------------------------\n\nTITLE: Creating Instance - Node.js\nDESCRIPTION: This snippet demonstrates how to create an instance using the Apigee Registry API. It showcases the required permissions and parameters for successfully creating an instance in the registry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/provisioning.create_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting Task Information in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet fetches details about a specific task within the batch service. It is useful for monitoring or debugging tasks. The snippet requires the Google Cloud Client library and correct permissions to access task details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to get task\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function getTask(taskId) {\\n  const response = await client.getTask(taskId);\\n  console.log(response);\\n}\\ngetTask('YOUR_TASK_ID');\"\n```\n\n----------------------------------------\n\nTITLE: Getting Session Entity Type using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to get a session entity type using the Dialogflow API. It utilizes the session_entity_types.get_session_entity_type method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_74\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/session_entity_types.get_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Refresh Connection Schema Metadata - Google Cloud Connectors\nDESCRIPTION: Node.js script to refresh connection schema metadata using the Google Cloud Connectors API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.refresh_connection_schema_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Listing App Connections using BeyondCorp API Client\nDESCRIPTION: This JavaScript code demonstrates how to list app connections using the BeyondCorp API Client. It requires a valid resource name and optionally allows pagination and filtering of results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the AppConnection location using the form:\n *  `projects/{project_id}/locations/{location_id}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of items to return.\n *  If not specified, a default value of 50 will be used by the service.\n *  Regardless of the page_size value, the response may include a partial list\n *  and a caller should only rely on response's\n *  next_page_token BeyondCorp.ListAppConnectionsResponse.next_page_token  to\n *  determine if there are more instances left to be queried.\n */\n// const pageSize = 1234\n/**\n *  Optional. The next_page_token value returned from a previous\n *  ListAppConnectionsRequest, if any.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. A filter specifying constraints of a list operation.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Specifies the ordering of results. See\n *  Sorting\n *  order (https://cloud.google.com/apis/design/design_patterns#sorting_order)\n *  for more information.\n */\n// const orderBy = 'abc123'\n\n// Imports the Appconnections library\nconst {AppConnectionsServiceClient} =\n  require('@google-cloud/appconnections').v1;\n\n// Instantiates a client\nconst appconnectionsClient = new AppConnectionsServiceClient();\n\nasync function callListAppConnections() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await appconnectionsClient.listAppConnectionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAppConnections();\n```\n\n----------------------------------------\n\nTITLE: List OS Policy Assignment Revisions in GCP OS Config Service\nDESCRIPTION: Demonstrates how to list revisions of OS policy assignments using the zonal OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_o_s_policy_assignment_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Revoking a Certificate using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This code sample shows how to revoke a certificate using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.revoke_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Developer Connect in Node.js\nDESCRIPTION: This snippet demonstrates a quickstart example using the Developer Connect API in Node.js. It provides a basic usage example to get started with the API and assumes that the necessary Google Cloud libraries are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-developerconnect/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Pause Queue Sample\nDESCRIPTION: Shows how to pause a Cloud Tasks queue using the Node.js client library. The sample code is located in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.pause_queue.js\n```\n\n----------------------------------------\n\nTITLE: Update GenerativeQuestionsFeatureConfig Retail API\nDESCRIPTION: This sample demonstrates how to update a GenerativeQuestionsFeatureConfig in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `updateGenerativeQuestionsFeatureConfig` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/generative_question_service.update_generative_questions_feature_config.js`\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex List Sessions\nDESCRIPTION: Executes a Node.js script to list sessions in Dataplex. Before execution, ensure necessary environment is configured. Uses 'dataplex_service.list_sessions.js' to retrieve session data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_sessions.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Domain Transfer Parameters (v1alpha2)\nDESCRIPTION: Demonstrates how to retrieve transfer parameters for a domain using the Cloud Domains API v1alpha2.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1alpha2/domains.retrieve_transfer_parameters.js\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Key in Bare Metal Solution\nDESCRIPTION: Sample script for creating an SSH key in Google Cloud Bare Metal Solution. Allows secure access and authentication for bare metal instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.create_s_s_h_key.js\n```\n\n----------------------------------------\n\nTITLE: Listing AWS Node Pools - Google Cloud Node\nDESCRIPTION: This snippet provides the functionality to list all node pools within a specified AWS cluster. It requires the 'google-cloud-gkemulticloud' library and valid project and cluster information for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nconst [nodePools] = await client.listAwsNodePools({parent: 'projects/my-project/locations/my-location/awsClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Updating AWS Node Pool in Google Cloud Multi-Cloud\nDESCRIPTION: Node.js sample script for updating an existing AWS Kubernetes node pool using Google Cloud Multi-Cloud API. Enables configuration changes and scaling of node pools.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-gkemulticloud\\/samples\\/generated\\/v1\\/aws_clusters.update_aws_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Searching Jobs for Alert with Job Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search jobs for alert using the Job Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs_for_alert.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/job_service.search_jobs_for_alert.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Fulfillment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Retrieves the fulfillment configuration for a Dialogflow agent in V2beta1 using Node.js. This function uses the `get_fulfillment` method of the Dialogflow client to fetch the details of a fulfillment, specified by its resource name, and handles the response from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Updating Environment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Updates an existing environment in Dialogflow V2beta1. This snippet uses the `update_environment` function and likely uses the Dialogflow client library to update an existing environment by sending a request to the Dialogflow API.  It should include the updated environment parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Executing Service Health API Samples in Node.js\nDESCRIPTION: This snippet demonstrates how to run the Service Health API samples using Node.js. It includes steps for setting up the environment and executing individual sample files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\nnode packages/google-cloud-servicehealth/samples/generated/v1/service_health.get_event.js\n```\n\n----------------------------------------\n\nTITLE: Listing Findings with Web Security Scanner in Node.js\nDESCRIPTION: This script lists all findings from a scan conducted by the Google Cloud Web Security Scanner. It requires Node.js and appropriate authentication credentials. The outcome is a comprehensive list of findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.list_findings.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Batch Delete Versions - Node.js\nDESCRIPTION: This JavaScript snippet is meant to run a batch delete operation on versions in the Artifact Registry using Node.js. It requires Node.js and the necessary NPM packages defined in package.json. The script is structured to delete multiple versions in a repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.batch_delete_versions.js`\n```\n\n----------------------------------------\n\nTITLE: Analyzing Move of Resources with Node.js\nDESCRIPTION: This sample code demonstrates how to analyze the move of resources within Google Cloud. It requires a proper setup of the Google Cloud Asset API and the necessary roles and permissions. This will help users assess the implications of moving resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_move.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeMove() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeMove();\n```\n\n----------------------------------------\n\nTITLE: Running Server Streaming Intent Detection\nDESCRIPTION: Executes the script to perform server streaming intent detection using Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Continuously processes input to detect intents in real-time scenarios.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.server_streaming_detect_intent.js\n```\n\n----------------------------------------\n\nTITLE: List Workloads V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to list workloads within the Assured Workloads service (v1beta1) using the google-cloud-node library. It uses the AssuredWorkloadsService client to retrieve a list of workloads. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Query Audience Export\nDESCRIPTION: Sample script for querying an audience export in the Google Analytics Data Beta API. Allows complex data retrieval and filtering of exported audience segments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.query_audience_export\n```\n\n----------------------------------------\n\nTITLE: Using Web Security Scanner Client: JavaScript\nDESCRIPTION: This snippet shows how to create a client instance of the Web Security Scanner in Node.js and lists available scan configurations. It requires the '@google-cloud/web-security-scanner' package and a configured Google Cloud project with the Web Security Scanner API enabled. Replace 'projectId' with your actual project ID to execute the function.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {\n  WebSecurityScannerClient,\n} = require('@google-cloud/web-security-scanner');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new WebSecurityScannerClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function listConfigs() {\n  const stats = await client.listScanConfigs({\n    parent: `projects/${projectId}`,\n  });\n  console.info(stats);\n}\nlistConfigs();\n\n```\n\n----------------------------------------\n\nTITLE: Listing Saved Queries - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample illustrates how to list saved queries in the Google Cloud Asset API. It requires Node.js with the Google Cloud SDK. The outputs will detail the existing saved queries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for listing saved queries\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Sessions in Node.js\nDESCRIPTION: Methods for handling Dialogflow sessions including intent detection and streaming intent detection for real-time conversation processing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_47\n\n\n\n----------------------------------------\n\nTITLE: Fetch ACL Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to fetch access control lists (ACL) for a document using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.fetch_acl.js\n```\n\n----------------------------------------\n\nTITLE: Creating Merchant Center Account Link in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to create a Merchant Center account link using the Google Cloud Retail API. It utilizes the createMerchantCenterAccountLink method of the MerchantCenterAccountLinkService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/merchant_center_account_link_service.create_merchant_center_account_link.js\n```\n\n----------------------------------------\n\nTITLE: Executing Dialogflow Context Operations in Node.js\nDESCRIPTION: Collection of Node.js commands for managing Dialogflow contexts, including deletion, retrieval, listing, and updating operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_80\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/contexts.delete_all_contexts.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/contexts.delete_context.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/contexts.get_context.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/contexts.list_contexts.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/contexts.update_context.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Cluster Details with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to retrieve details about an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows how to get information about an existing AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.get_aws_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Set IAM Policy using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `setIamPolicy` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for setting the IAM policy.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.set_iam_policy.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Entries with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to list entries using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.list_entries.js\n```\n\n----------------------------------------\n\nTITLE: Pause Model Retail API\nDESCRIPTION: This sample demonstrates how to pause a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `pauseModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.pause_model.js`\n```\n\n----------------------------------------\n\nTITLE: Using Private Catalog Client Library in Node.js\nDESCRIPTION: Example of initializing the Private Catalog client and searching catalogs using the Node.js client library. Demonstrates basic usage including client instantiation and making API calls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {PrivateCatalogClient} = require('@google-cloud/private-catalog');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new PrivateCatalogClient();\n\nasync function searchCatalogs() {\n  const catalogues = await client.searchCatalogs({\n    resource: `projects/${projectId}`,\n  });\n  console.info(catalogues);\n}\nsearchCatalogs();\n```\n\n----------------------------------------\n\nTITLE: Creating Certificate Template with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet demonstrates how to create a certificate template using the Google Cloud Private CA Service API. It uses the CertificateAuthorityService client to call the createCertificateTemplate method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.create_certificate_template.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a View with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to delete a view using the Contact Center Insights API. It uses the delete_view method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_view.js\n```\n\n----------------------------------------\n\nTITLE: Listing APIs using API Gateway Client\nDESCRIPTION: Example code demonstrating how to initialize the API Gateway client and list available APIs for a given project. Uses the ApiGatewayServiceClient to make requests to the API Gateway service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\nconst {ApiGatewayServiceClient} = require('@google-cloud/api-gateway');\nconst client = new ApiGatewayServiceClient();\nasync function listApis() {\n  const [apis] = await client.listApis({\n    parent: `projects/${projectId}/locations/global`,\n  });\n  for (const api of apis) {\n    console.info(`name: ${api.name}`);\n  }\n}\nlistApis();\n```\n\n----------------------------------------\n\nTITLE: Creating Backup for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to create a backup for Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package as a dependency. Key parameters typically include the backup configuration details, such as resource identifiers and backup settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Create Backup\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.createBackup(request)\n  .then(response => {\n    console.log('Backup created:', response);\n  })\n  .catch(err => {\n    console.error('Error creating backup:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Retrieving Processor Type Information with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to get information about a specific processor type using the Google Cloud DocumentAI API. It uses the document_processor_service to fetch processor type details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.get_processor_type.js\n```\n\n----------------------------------------\n\nTITLE: Updating Security Settings Dialogflow CX with Node.js\nDESCRIPTION: This snippet shows how to update security settings using the Dialogflow CX API with Node.js. The `@google-cloud/dialogflow-cx` package is a prerequisite. This script will be run from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/security_settings_service.update_security_settings.js`\n```\n\n----------------------------------------\n\nTITLE: Exporting Assets with Google Cloud Asset Inventory v1p7beta1 in Node.js\nDESCRIPTION: This sample demonstrates how to export assets to a specified destination using the Google Cloud Asset Inventory service v1p7beta1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p7beta1/asset_service.export_assets.js\n```\n\n----------------------------------------\n\nTITLE: Reading a Repository File with Google Cloud Dataform in Node.js\nDESCRIPTION: Using Node.js, this script reads a file from a Dataform repository. It is executed from the command line, requiring a file path to output the file's content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.read_repository_file.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Session Template Information with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for retrieving session template information using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionTemplateController.getSessionTemplate method to get details about a specific template.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_template_controller.get_session_template.js\n```\n\n----------------------------------------\n\nTITLE: Updating Certificate Map Entries with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This code example demonstrates updating certificate map entries using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.update_certificate_map_entry.js\n```\n\n----------------------------------------\n\nTITLE: Update Workload in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to update a workload within the Assured Workloads service using the google-cloud-node library. It uses the AssuredWorkloadsService client to modify an existing workload with new configurations. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Groups in Migration Center\nDESCRIPTION: Node.js example showing how to update group configurations in Migration Center\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_group.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet shows how to delete a service from the Google Cloud App Hub. It requires the service ID as an input parameter. No output is expected other than a confirmation of the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst deleteService = async (serviceId) => {\n  await client.deleteService({\n    id: serviceId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Event Threat Detection Custom Module in Javascript\nDESCRIPTION: This snippet demonstrates how to update an Event Threat Detection Custom Module using the google-cloud-securitycentermanagement library. The code can be found in the linked GitHub repository and executed in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.update_event_threat_detection_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex Lake Actions\nDESCRIPTION: Node.js command for listing lake actions in Dataplex. Requires Google Cloud SDK setup for execution. Runs the script 'dataplex_service.list_lake_actions.js' to return lake action details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_lake_actions.js\n```\n\n----------------------------------------\n\nTITLE: Translating Text using Google Cloud Translation API - JavaScript\nDESCRIPTION: Translates a single text string. This functionality indicates the source and target languages and outputs the translated text.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Translate text\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function translateText() {\n  // Your code here to translate text\n}\ntranslateText();\n```\n\n----------------------------------------\n\nTITLE: Version History Entry - Redis v5.0.0\nDESCRIPTION: Changelog entry documenting breaking changes for Node 18 upgrade and new features for debug logging.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [5.0.0](https://github.com/googleapis/google-cloud-node/compare/redis-v4.3.1...redis-v5.0.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096])\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics\n```\n\n----------------------------------------\n\nTITLE: Installing VMware Engine API Node.js Client Library\nDESCRIPTION: Command to install the VMware Engine API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/vmwareengine\n```\n\n----------------------------------------\n\nTITLE: Searching Example Comparisons with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to search example comparisons using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the search_example_comparisons method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.search_example_comparisons.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Datastream Stream in Node.js\nDESCRIPTION: This snippet illustrates how to delete a stream in Google Cloud Datastream using Node.js, helping to free resources and manage streaming endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.delete_stream.js\n```\n\n----------------------------------------\n\nTITLE: Stopping a Scan Run with Web Security Scanner in Node.js\nDESCRIPTION: This script stops an ongoing scan run in Google Cloud Web Security Scanner. Node.js and authentication credentials are required. It outputs the status of the stopped scan run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.stop_scan_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.get_stream_object in Node.js\nDESCRIPTION: Sample code for retrieving a stream object using the Google Cloud Datastream API in Node.js. This script demonstrates how to get details about a specific object within a stream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.get_stream_object.js\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex List Jobs\nDESCRIPTION: This command runs a Node.js script to list jobs within Dataplex. Ensure Node.js is installed and authenticated with Google Cloud. Executes 'dataplex_service.list_jobs.js' to display the list of jobs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Snapshot Job - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a snapshot of a job in Google Cloud Dataflow, allowing for job state preservation and recovery options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to create a snapshot of the job goes here.\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Workspace Add-ons Client Library with npm\nDESCRIPTION: Command to install the Google Workspace Add-ons API client library in a Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gsuiteaddons\n```\n\n----------------------------------------\n\nTITLE: Updating Attributes Config with Google Cloud Retail API in Node.js\nDESCRIPTION: This code example demonstrates how to update the attributes configuration using the Google Cloud Retail API. It uses the CatalogService client to modify the attributes settings for a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.update_attributes_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Discovery Config with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to retrieve a discovery configuration using the Google Cloud DLP service. It utilizes the getDiscoveryConfig method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_discovery_config.js\n```\n\n----------------------------------------\n\nTITLE: Training Dialogflow CX Flow\nDESCRIPTION: Command to train a Dialogflow CX flow using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_101\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.train_flow.js\n```\n\n----------------------------------------\n\nTITLE: Updating Generative Question Config in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to update a generative question configuration using the Google Cloud Retail API. It utilizes the updateGenerativeQuestionConfig method of the GenerativeQuestionService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/generative_question_service.update_generative_question_config.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This code demonstrates how to test IAM permissions for a tag value using the Google Cloud Resource Manager API in Node.js. It utilizes the tag_values.test_iam_permissions method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Test IAM Permissions Sample\nDESCRIPTION: Demonstrates testing IAM permissions for a Cloud Tasks resource using the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Running NetApp Sample Code\nDESCRIPTION: Command to execute the NetApp quickstart sample code from the packages directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-netapp/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Evicting LUN - Google Cloud Node.js\nDESCRIPTION: This snippet shows how to evict a Logical Unit Number (LUN) from the Google Cloud Bare Metal Solution. Proper permissions and configurations must be in place to execute this code successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function evictLun() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/luns/YOUR_LUN_ID',\n  };\n  const [operation] = await client.evictLun(request);\n  await operation.promise();\n  console.log('LUN evicted.');\n}\nevictLun();\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud VPC Access Client Library\nDESCRIPTION: Command to install the Google Cloud VPC Access Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/vpc-access\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet shows how to delete a tag using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.delete_tag.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Local Inventory with Merchant API in Node.js\nDESCRIPTION: This snippet demonstrates how to delete local inventory using the Local Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/local_inventory_service.delete_local_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Backup in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet provides functionality to update attributes of an existing backup in the AlloyDB environment. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function updateBackup() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Set IAM Policy with Container Analysis in Node.js\nDESCRIPTION: This sample showcases how to set the IAM policy for a resource using the Container Analysis API in Node.js. The sample depends on the google-devtools-containeranalysis package and is invoked using a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/container_analysis.set_iam_policy.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Tag Keys using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code sample demonstrates how to list tag keys using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.list_tag_keys.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Application Gateway with BeyondCorp API - Node.js\nDESCRIPTION: This code snippet illustrates how to retrieve details of a specific application gateway using the BeyondCorp API in Node.js. Prerequisites include setting up the client library and the necessary environment. The input consists of the application's gateway ID, and the output provides the corresponding details of the application gateway.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appgateways/samples/generated/v1/app_gateways_service.get_app_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Listing gRPC Routes in Google Cloud Network Services\nDESCRIPTION: Example showing how to list gRPC routes using the Network Services API. Demonstrates usage of the list_grpc_routes endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_grpc_routes.js\n```\n\n----------------------------------------\n\nTITLE: List Environments - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to list environments using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `listEnvironments` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.list_environments.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Web Security Scanner Scan Config with Node.js\nDESCRIPTION: This script retrieves details of a specified scan configuration using the Web Security Scanner API. Ensure prerequisites like the Google Cloud SDK are in place. Execute using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.get_scan_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing VPN Connections - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet lists all VPN connections defined in the Google Cloud Edge Container project. It needs the Google Cloud libraries configured correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to list VPN connections\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function listVpnConnections() {\n    const [vpnConnections] = await client.listVpnConnections();\n    console.log('VPN Connections:', vpnConnections);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Dataplex Lake\nDESCRIPTION: Runs a Node.js script to update a lake in Dataplex. Make sure Google Cloud environment and Node.js are configured. Executes 'dataplex_service.update_lake.js' for the update process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_67\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.update_lake.js\n```\n\n----------------------------------------\n\nTITLE: Getting Zone - Google Cloud Node.js\nDESCRIPTION: This script retrieves zone information from the Google Cloud Edge Network using its ID. The script expects the zone ID as input and outputs the details of the specified zone.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.get_zone.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Fetch the zone\nasync function getZone(id) {\n  const request = {zone: id};\n  const [response] = await client.getZone(request);\n  console.log(response);\n}\n\ngetZone('your-zone-id');\n```\n\n----------------------------------------\n\nTITLE: Exporting Dialogflow CX Intents\nDESCRIPTION: Command to export Dialogflow CX intents using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_111\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.export_intents.js\n```\n\n----------------------------------------\n\nTITLE: Managing Workflow Executions in Google Cloud Node.js\nDESCRIPTION: Sample code for performing various operations on workflow executions, including creating, canceling, retrieving, and listing executions using Google Cloud Node.js library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample operations for Workflow Executions\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the project code and attempts to fix any issues it finds. It should be run before submitting changes to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Config Retrieval Sample in Node.js\nDESCRIPTION: The purpose of this snippet is to execute a configuration retrieval script with Node.js. Before running, ensure Node.js and the relevant samples are installed. The script outputs configuration details of the deployment system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_config.js\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet shows how to create a new tag value using the Google Cloud Resource Manager API in Node.js. It utilizes the tag_values.create_tag_value method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.create_tag_value.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Cluster in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet allows the user to update the configuration of an existing AlloyDB cluster. It uses the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function updateCluster() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Entity Types with Dialogflow V2beta1\nDESCRIPTION: This sample demonstrates how to delete multiple entity types in a batch using Dialogflow V2beta1 in Node.js. It uses the `Entity_types.batch_delete_entity_types` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.batch_delete_entity_types\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup from Dataproc Metastore with Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a backup from Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.get_backup.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Errors in Google Cloud Datastream - Node.js\nDESCRIPTION: Fetches errors related to Datastream operations. This snippet requires the Google Cloud Datastream client library and appropriate permissions to fetch errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function fetchErrors() {\n  const request = {\n    // Parameters to fetch error logs\n  };\n\n  const response = await client.fetchErrors(request);\n  console.log('Fetched errors:', response);\n}\n\nfetchErrors();\n```\n\n----------------------------------------\n\nTITLE: Prediction Service Operations in Google Cloud Retail API\nDESCRIPTION: Sample implementation for prediction operations using the Google Cloud Retail API prediction service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Undeleting Phone Number - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet allows for the recovery of a deleted phone number, ensuring that participants who may need to reinstate their numbers can do so within the Dialogflow system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_114\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Undeletes a previously deleted phone number.\nconst {PhoneNumbersClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new PhoneNumbersClient();\n\nasync function undeletePhoneNumber() {\n  // Implementation logic here\n}\n\nundeletePhoneNumber();\n```\n\n----------------------------------------\n\nTITLE: Listing AWS Clusters - Google Cloud Node\nDESCRIPTION: This snippet lists all AWS clusters available under a specified project and location. The operation requires proper authentication and setup of the GKE Multi-Cloud client to access resources accordingly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nconst [clusters] = await client.listAwsClusters({parent: 'projects/my-project/locations/my-location'});\n```\n\n----------------------------------------\n\nTITLE: Get Environment History - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to retrieve the history of an environment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `getEnvironmentHistory` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.get_environment_history.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Deployment with Config.update_deployment in Node.js\nDESCRIPTION: This code sample shows how to update a deployment using the Config API. It's part of the google-cloud-config package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.update_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Plans using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing backup plans using the GKE Backup API. Used to enumerate all backup plans configured for a Google Kubernetes Engine project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_backup_plans.js\n```\n\n----------------------------------------\n\nTITLE: Simulating Security Health Analytics Custom Module in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet simulates a custom module in security health analytics, allowing for testing and validation of custom security rules and modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.simulate_security_health_analytics_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Delivery Pipeline Retrieval Sample in Node.js\nDESCRIPTION: This snippet provides the command to execute a script that retrieves details of a delivery pipeline using Node.js. Node.js installation and sample scripts are needed. The script fetches pipeline configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_delivery_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Using Document Link Service to Create Document Link in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Document Link Service to create a document link using the Document AI Warehouse API in Node.js. It references the source code file for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_link_service.create_document_link.js\n```\n\n----------------------------------------\n\nTITLE: Configuring Notebook Instance Settings - JavaScript/Node.js\nDESCRIPTION: Node.js code samples for configuring various notebook instance settings including accelerator, labels, machine type, and metadata. These samples demonstrate how to modify instance configurations through the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.set_instance_accelerator.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.set_instance_labels.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.set_instance_machine_type.js\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.update_instance_metadata_items.js\n```\n\n----------------------------------------\n\nTITLE: Transferring Domains with Google Cloud Domains Node.js\nDESCRIPTION: Sample script for transferring domain registrations using the Google Cloud Domains API in Node.js. Shows how to initiate a domain transfer in the V1beta1 version of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1beta1/domains.transfer_domain.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Streams in Node.js\nDESCRIPTION: A script illustrating stream deletion process in Node.js through Datastream API. Needs authorization credentials and the specific stream identification for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.delete_stream.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.deleteProductSet method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to delete a product set from Google Cloud Vision API. This removes a collection of products but doesn't delete the individual products themselves.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.delete_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Update Analytics Hub Listing - Node.js\nDESCRIPTION: Sample code demonstrating how to update an existing listing in Analytics Hub using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.update_listing.js\n```\n\n----------------------------------------\n\nTITLE: Listing Registry Resources\nDESCRIPTION: Node.js commands for listing various resources within the Apigee Registry, including API deployments, specs, versions, and revision histories. These scripts help in exploring and managing API metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.list_api_deployments.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.list_api_specs.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.list_api_versions.js\n```\n\n----------------------------------------\n\nTITLE: Creating Backup with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet showcases how to create a backup using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to create a new backup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.create_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Permissions with Permission Service in Javascript\nDESCRIPTION: This sample code demonstrates the usage of `listPermissions` method from Permission Service. It uses google-ai-generativelanguage package to list permission entries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Getting Network Details from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet retrieves network details associated with a bare metal instance through the API. It must be executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_network.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_network.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup Plan with BackupDR in Node.js\nDESCRIPTION: This snippet provides an example of how to get a specific backup plan using the BackupDR service in Node.js. It includes the command-line usage to execute the sample, utilizing the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_backup_plan.js`\n```\n\n----------------------------------------\n\nTITLE: Operating IAP Services with Google Cloud Node.js\nDESCRIPTION: A collection of Node.js samples for interacting with Google Cloud Identity-Aware Proxy services. Includes functionality for managing tunnel groups, IAP settings, IAM policies, OAuth brands and clients. All samples are accessible through Cloud Shell and include full source code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_attribute sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.create_attribute sample using Node.js.  It provides the command to run the sample, which creates a new attribute within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_attribute.js`\n```\n\n----------------------------------------\n\nTITLE: Hub Service Operations v1\nDESCRIPTION: Collection of endpoints for managing network connectivity hubs and spokes in v1 API. Includes operations for listing routes, managing spokes, querying hub status, and updating configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Upgrading AlloyDB Cluster in Node.js\nDESCRIPTION: This code snippet illustrates how to upgrade an AlloyDB cluster using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.upgrade_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Validating Event Threat Detection Custom Module in Security Center Management\nDESCRIPTION: This sample demonstrates how to validate an event threat detection custom module using the Security Center Management API in Node.js. It requires the `@google-cloud/securitycentermanagement` package. The script is executed directly using `node`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.validate_event_threat_detection_custom_module.js`\n```\n\n----------------------------------------\n\nTITLE: Creating a Playbook in Dialogflow CX using Node.js\nDESCRIPTION: This script creates a new playbook in Dialogflow CX. It utilizes the Dialogflow CX Node.js client library and requires authentication. The script outputs the details of the created playbook.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_121\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.create_playbook.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_group script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_group sample script. This script demonstrates how to delete a group using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_group.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Product Set using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to create a product set using the Google Cloud Vision API. It utilizes the ProductSearch.createProductSet method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.create_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Cloud Scheduler Job with Node.js\nDESCRIPTION: This sample demonstrates how to update an existing Cloud Scheduler job using the Google Cloud Node.js client library. It requires the google-cloud-scheduler package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1beta1/cloud_scheduler.update_job.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet shows how to delete a policy tag from Google Cloud's Data Catalog service. The google-cloud-datacatalog package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function deletePolicyTag() {\n  const request = {\n    name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n  };\n  await client.deletePolicyTag(request);\n  console.log('Policy tag deleted.');\n}\ndeletePolicyTag();\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.list_routes in Node.js\nDESCRIPTION: Sample code for listing routes using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve all routes within a private connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.list_routes.js\n```\n\n----------------------------------------\n\nTITLE: Creating Queued TPU Resource in Node.js\nDESCRIPTION: Sample code for creating a queued TPU resource using the Google Cloud TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.create_queued_resource.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.delete_device_registry in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `delete_device_registry` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.delete_device_registry.js\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Repricing Config - Node.js Cloud Channel API\nDESCRIPTION: Example showing how to get customer repricing configuration using Cloud Channel Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.get_customer_repricing_config.js\n```\n\n----------------------------------------\n\nTITLE: Pausing Patch Deployment - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet pauses an ongoing patch deployment in the OS Config service. It requires a patch deployment ID and makes use of the Node.js client library for Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for pausing patch deployment\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function pausePatchDeployment(deploymentId) {\n    const request = {name: deploymentId};\n    await client.pausePatchDeployment(request);\n    console.log(`Paused patch deployment: ${deploymentId}`);\n}\npausePatchDeployment('PATCH_DEPLOYMENT_ID');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Recommender Configuration in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to get a recommender configuration using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the get_recommender_config method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.get_recommender_config.js\n```\n\n----------------------------------------\n\nTITLE: Managing Dataproc Batches in Node.js\nDESCRIPTION: Example showing how to create, delete and get batch jobs using the Batch Controller.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/batch_controller.create_batch.js\n```\n\n----------------------------------------\n\nTITLE: Listing AI Platform Notebook Instances\nDESCRIPTION: Example code demonstrating how to initialize the Notebook Service client and list all notebook instances in a specified project and location. Requires project ID and location to be configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\n// const location = 'global';\n\n// Imports the Google Cloud Some API library\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\nconst client = new NotebookServiceClient();\nasync function listInstances() {\n  const [instances] = await client.listInstances({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  for (const instance of instances) {\n    console.info(`instance: ${instance.name}`);\n  }\n}\nlistInstances();\n```\n\n----------------------------------------\n\nTITLE: Listing IAP OAuth Brands in JavaScript\nDESCRIPTION: Lists all brands available in the Identity-Aware Proxy OAuth service using this JavaScript script. Execute in a Node.js environment using the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.list_brands.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Zone in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a zone within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.delete_zone.js\"\n```\n\n----------------------------------------\n\nTITLE: Using Migration Service to List Migration Subtasks in BigQuery Migration API\nDESCRIPTION: Demonstrates how to list migration subtasks using the BigQuery Migration API v2alpha. This sample shows the command to execute the Node.js script that lists migration subtasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-migration/samples/generated/v2alpha/migration_service.list_migration_subtasks.js\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey.create_key_handle Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `create_key_handle` function within the Autokey service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey.create_key_handle.js\"\n```\n\n----------------------------------------\n\nTITLE: Tagging API Spec Revision using Registry service in Node.js\nDESCRIPTION: This snippet demonstrates how to use the tag_api_spec_revision method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.tag_api_spec_revision.js\n```\n\n----------------------------------------\n\nTITLE: Listing CDN Keys in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to list CDN keys using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.list_cdn_keys.js\n```\n\n----------------------------------------\n\nTITLE: Listing Security Health Analytics Custom Modules in Javascript\nDESCRIPTION: This snippet showcases how to list Security Health Analytics Custom Modules using the google-cloud-securitycentermanagement library. The code resides in the linked GitHub repository and is runnable in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.list_security_health_analytics_custom_modules\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Breaking Changes in Markdown\nDESCRIPTION: This snippet shows how breaking changes are highlighted in the changelog using Markdown. It uses a warning symbol and links to the related GitHub issue.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Querying Repository Directory Contents with Google Cloud Dataform in Node.js\nDESCRIPTION: This script queries the contents of a repository directory in a Dataform workspace using Node.js. It is executed from the command line and outputs the directory contents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.query_repository_directory_contents.js\n```\n\n----------------------------------------\n\nTITLE: Managing IP Overrides\nDESCRIPTION: Code sample showing how to add and remove IP override rules in reCAPTCHA Enterprise.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recaptchaenterprise/samples/generated/v1/recaptcha_enterprise_service.add_ip_override.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Support Case in Google Cloud\nDESCRIPTION: Sample script illustrating how to update an existing support case using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.update_case.js\n```\n\n----------------------------------------\n\nTITLE: Using Network_services to get an endpoint policy in Node.js\nDESCRIPTION: Example for retrieving an endpoint policy using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the get_endpoint_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/network_services.get_endpoint_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating Notebook Schedule with Google Cloud Node.js Client\nDESCRIPTION: Sample code for creating a notebook schedule using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.create_schedule.js\n```\n\n----------------------------------------\n\nTITLE: Using Auto Suggestion Service in Data QnA with Node.js\nDESCRIPTION: This sample demonstrates how to use the Auto Suggestion Service to suggest queries in Data QnA. It requires the google-cloud-dataqna package and proper GCP setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/auto_suggestion_service.suggest_queries.js\n```\n\n----------------------------------------\n\nTITLE: Updating Backup with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet illustrates how to update a backup using the Cloud Filestore Manager in Javascript. It leverages the google-cloud-node library to interact with the Cloud Filestore API and modify an existing backup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.update_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Session Entity Type using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a session entity type using the Dialogflow API. It uses the session_entity_types.delete_session_entity_type method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_73\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/session_entity_types.delete_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Listing Subnets - Google Cloud Node.js\nDESCRIPTION: This script lists all subnets in the Google Cloud Edge Network. It does not require parameters and outputs details for all subnets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_subnets.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all subnets\nasync function listSubnets() {\n  const [subnets] = await client.listSubnets({});\n  console.log('Subnets:', subnets);\n}\n\nlistSubnets();\n```\n\n----------------------------------------\n\nTITLE: Importing Processor Version with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to import a processor version using the Google Cloud DocumentAI API. It uses the document_processor_service to import a new version of a processor.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.import_processor_version.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service List Documents Example in Node.js\nDESCRIPTION: Facilitates launching a JavaScript example to list documents through the Retriever service, requiring Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.list_documents.js\"\n```\n\n----------------------------------------\n\nTITLE: Get Event Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to retrieve an event using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.get_event.js\n```\n\n----------------------------------------\n\nTITLE: Restoring Instance in Cloud Filestore\nDESCRIPTION: This sample demonstrates the process of restoring a Filestore instance from a backup. Ensure that the backup is valid and accessible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function restoreInstance() {\n    const response = await client.restoreInstance(...);\n    console.log(response);\n}\nrestoreInstance();\n```\n\n----------------------------------------\n\nTITLE: Creating a Document with Dialogflow V2beta1\nDESCRIPTION: This code sample shows how to create a new document using the Dialogflow V2beta1 API in Node.js. It uses the `Documents.create_document` method to create a document within a knowledge base. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.create_document\"\n```\n\n----------------------------------------\n\nTITLE: Private Catalog Quickstart with Node.js\nDESCRIPTION: This sample provides a quickstart example for using the Private Catalog API in Node.js. It includes the command to run the quickstart and links to the source code for further exploration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-privatecatalog/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: AutoML Delete Dataset in Node.js\nDESCRIPTION: This sample illustrates how to delete a dataset using the AutoML API with Node.js. The `deleteDataset` function is invoked. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.delete_dataset\"\n```\n\n----------------------------------------\n\nTITLE: Translating Text with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code sample shows how to translate text using the Translation Service. It uses the translate_text method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.translate_text.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Receive Trigger Webhook Sample\nDESCRIPTION: This sample demonstrates how to receive a trigger webhook using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Updating Client Connector Service in BeyondCorp API using Node.js\nDESCRIPTION: This snippet showcases updating a Client Connector Service using the BeyondCorp API in Node.js. The command provided executes the sample code responsible for updating a client connector service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/generated/v1/client_connector_services_service.update_client_connector_service.js`\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Delete Backup in Node.js\nDESCRIPTION: Details how to delete an AlloyDB backup using the Node.js client library. This sample initializes the AlloyDBAdmin client and calls the `deleteBackup` method. Prior setup and authentication of the project is needed for the sample to execute correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.delete_backup | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_backup.js)\"\n```\n\n----------------------------------------\n\nTITLE: Create Job with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to create a job using the Dataflow API in Node.js. The command executes the `create_job.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.create_job.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks List Queues Sample Usage\nDESCRIPTION: This sample demonstrates how to list queues using the Cloud Tasks API in Node.js. The script `cloud_tasks.list_queues.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.list_queues.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting an Analysis with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates how to delete an analysis using the Contact Center Insights API. It utilizes the delete_analysis method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_analysis.js\n```\n\n----------------------------------------\n\nTITLE: Listing Google Cloud Functions - Node.js\nDESCRIPTION: This snippet lists all the Google Cloud Functions deployed in the project using the cloud_functions_service, providing a way to view existing functions and their configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.list_functions.js\n```\n\n----------------------------------------\n\nTITLE: Running Product Search Update Product Set Sample in Node.js\nDESCRIPTION: This snippet illustrates how to run the sample code for updating a product set using the Google Cloud Vision API. It provides the command to execute the Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_63\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.update_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating Mute Configuration in Google Cloud Security Center - JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a mute configuration in Google Cloud Security Center using Node.js. It allows users to specify conditions for muting specific types of findings, preventing unnecessary alerts. Proper understanding of security policies is needed before setting up mute configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for creating a mute configuration\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function createMuteConfig() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID', // Required\n    muteConfig: {\n      // Mute configuration properties go here\n    },\n  };\n  const [response] = await client.createMuteConfig(request);\n  console.log(response);\n}\n\ncreateMuteConfig();\n```\n\n----------------------------------------\n\nTITLE: Listing Snapshots - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet lists all snapshots associated with the given project in Google Cloud Dataflow, facilitating easier management of processing states.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {SnapshotsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new SnapshotsV1Beta3Client();\n// Functionality to list snapshots goes here.\n```\n\n----------------------------------------\n\nTITLE: Get Security Health Analytics Custom Module\nDESCRIPTION: Retrieves a security health analytics custom module from Google Cloud Security Center using the Node.js client library. This sample fetches configurations related to security health analytics. It requires the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_security_health_analytics_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Updating Assignments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to update assignments using the BigQuery Reservation Service API in Node.js. This allows you to modify existing assignment properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.update_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Getting Job Metrics - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve metrics related to a job in Google Cloud Dataflow, essential for analyzing job performance and resource usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {MetricsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new MetricsV1Beta3Client();\n// Functionality to get job metrics goes here.\n```\n\n----------------------------------------\n\nTITLE: Using BigQuery Reservation Client Library in Node.js\nDESCRIPTION: Example demonstrating how to initialize the BigQuery Reservation client and list reservations and capacity commitments. Shows basic usage including client instantiation and making API calls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {\n  ReservationServiceClient,\n} = require('@google-cloud/bigquery-reservation');\n\n// Creates a client\nconst client = new ReservationServiceClient();\n\n// project = 'my-project' // Project to list reservations for.\n// location = 'US' // BigQuery location.\n\nasync function listReservations() {\n  const [reservations] = await client.listReservations({\n    parent: `projects/${project}/locations/${location}`,\n  });\n\n  console.info(`found ${reservations.length} reservations`);\n  console.info(reservations);\n}\n\nasync function listCapacityCommitments() {\n  const [commitments] = await client.listCapacityCommitments({\n    parent: `projects/${project}/locations/${location}`,\n  });\n\n  console.info(`found ${commitments.length} commitments`);\n  console.info(commitments);\n}\n\nlistReservations();\nlistCapacityCommitments();\n```\n\n----------------------------------------\n\nTITLE: Drop Node.js v8 Support in Node.js\nDESCRIPTION: This commit removes support for Node.js v8 in the Google Cloud IoT Node.js library.  The library now supports Node.js v10+. The last version to support Node.js v8 is tagged legacy-8 on NPM.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n\"* drop node8 support, support for async iterators ([#297](https://www.github.com/googleapis/nodejs-iot/issues/297)) ([1cf607e](https://www.github.com/googleapis/nodejs-iot/commit/1cf607edcecfe2053596096efaa1cabe0d11de1e))\"\n```\n\n----------------------------------------\n\nTITLE: Executing Migration Center Get Preference Set\nDESCRIPTION: Command to execute the get preference set sample code for Migration Center API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_preference_set.js\n```\n\n----------------------------------------\n\nTITLE: Delete Environment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to delete an environment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `deleteEnvironment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.delete_environment.js`\n```\n\n----------------------------------------\n\nTITLE: Stop Channel Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to stop a channel using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.stop_channel.js\n```\n\n----------------------------------------\n\nTITLE: Version Reference Links\nDESCRIPTION: Markdown links comparing different versions of the BigQuery Data Policies package\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[2.0.1](https://github.com/googleapis/google-cloud-node/compare/bigquery-datapolicies-v2.0.0...bigquery-datapolicies-v2.0.1)\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Config API in Node.js\nDESCRIPTION: This quickstart example demonstrates basic usage of the Google Cloud Config API. It is included in the google-cloud-config package and executes as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This is a quickstart guide for using the Google Cloud Resource Manager API in Node.js. It provides a basic example to get started with the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Federation in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet illustrates how to create a federation in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore_federation.create_federation.js\n```\n\n----------------------------------------\n\nTITLE: Deleting External Access Rule with Node.js\nDESCRIPTION: Execute this JavaScript to delete an external access rule in VMware Engine, requiring Google Cloud libraries. The script is run using the Node.js command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_external_access_rule.js\n```\n\n----------------------------------------\n\nTITLE: Updating Profiles using Cloud Profiler API - Node.js\nDESCRIPTION: The snippet shows how to update existing profiles via the Cloud Profiler API using Node.js. This is important for maintaining accurate performance data and adapting to application changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-cloudprofiler/samples/generated/v2/profiler_service.update_profile.js\n```\n\n----------------------------------------\n\nTITLE: Installing Network Management API Client in Node.js\nDESCRIPTION: Command to install the Google Cloud Network Management API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/network-management\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code example shows how to test IAM permissions for a tag key using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Retrying a Job in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to retry a job in Cloud Deploy. It utilizes the retry_job method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.retry_job.js\n```\n\n----------------------------------------\n\nTITLE: Running Routes.compute_routes Sample in Node.js\nDESCRIPTION: This command runs the sample code for computing routes using the Google Maps Routing API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-routing/samples/generated/v2/routes.compute_routes.js\n```\n\n----------------------------------------\n\nTITLE: Video Intelligence Streaming Analysis v1p3beta1\nDESCRIPTION: Sample demonstrating streaming video analysis capabilities using Video Intelligence API v1p3beta1. Shows how to process video streams in real-time.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-videointelligence/samples/generated/v1p3beta1/streaming_video_intelligence_service.streaming_annotate_video.js\n```\n\n----------------------------------------\n\nTITLE: Restoring a Volume Snapshot using Bare Metal Solution API in Node.js\nDESCRIPTION: This code shows how to restore a volume snapshot using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.restore_volume_snapshot.js\n```\n\n----------------------------------------\n\nTITLE: Project Service Operations in Google Cloud Retail API\nDESCRIPTION: Sample implementations for project-level operations including terms acceptance and solution enrollment using Google Cloud Retail API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Fetching CA Certificates with Google Cloud Private CA in Node.js\nDESCRIPTION: This code sample shows how to fetch Certificate Authority certificates using the Google Cloud Private CA Service API. It uses the CertificateAuthorityService client to call the fetchCaCerts method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.fetch_ca_certs.js\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to delete a load balancer route extension in Node.js\nDESCRIPTION: Example for deleting a load balancer route extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the delete_lb_route_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.delete_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Logging Server with Node.js\nDESCRIPTION: This Node.js script deletes a logging server in Google Cloud VMware Engine. Require Google Cloud dependencies set up before usage. Run using the provided Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_logging_server.js\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary Instance in AlloyDB using Node.js\nDESCRIPTION: This snippet demonstrates the creation of a secondary instance within an AlloyDB cluster using Node.js. Proper configuration and API access are necessary. After execution, a secondary instance is deployed under a specified cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_secondary_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating Notebook Execution with Google Cloud Node.js Client\nDESCRIPTION: Sample code showing how to create a notebook execution using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.create_execution.js\n```\n\n----------------------------------------\n\nTITLE: Importing Crypto Key Version in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to import a crypto key version using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.import_crypto_key_version.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve details of a specific experiment in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_89\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.get_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Resetting Workspace Changes in Google Cloud Dataform with Node.js\nDESCRIPTION: This script resets changes within a Dataform workspace using Node.js. It should be executed via command line to revert to the workspace's original state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.reset_workspace_changes.js\n```\n\n----------------------------------------\n\nTITLE: Creating Aspect Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to create an aspect type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.create_aspect_type.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Dependency with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet illustrates how to delete a dependency using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_dependencies.delete_dependency.js\n```\n\n----------------------------------------\n\nTITLE: Generating Download URLs (v2beta)\nDESCRIPTION: Example showing how to generate download URLs for Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.generate_download_url.js\n```\n\n----------------------------------------\n\nTITLE: Creating Connection Profile in Node.js\nDESCRIPTION: Utilize this Node.js script to create a new connection profile with the Google Cloud Datastream API. Proper API setup and authentication are required to enable connection configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.create_connection_profile.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Deleting User from AlloyDB using Node.js\nDESCRIPTION: Using Node.js, this script snippet implements user deletion from an AlloyDB database. Ensure adequate access configuration is in place for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_user.js\n```\n\n----------------------------------------\n\nTITLE: Listing Resources with Config.list_resources in Node.js\nDESCRIPTION: This code example demonstrates listing resources using the Config API. It is included in the google-cloud-config package and executes as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.list_resources.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project. It should be run before attempting to run tests or contribute to the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Executing create_app_connection Sample Code\nDESCRIPTION: This Node.js script demonstrates how to create an app connection using the BeyondCorp API. To execute this example, ensure you have the required dependencies installed and then run the provided command in your terminal. The script requires Node.js and the Google Cloud client library to function properly and expects valid inputs for authentication and API specifics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.create_app_connection.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Monitoring Dashboards Client Library in Node.js\nDESCRIPTION: Command to install the Google Cloud Monitoring Dashboards client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/monitoring-dashboards\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_version sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.create_version sample using Node.js. It provides the command to run the sample, which creates a new version within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_version.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service Project Attachment with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script shows how to delete a service project attachment in the Google Cloud App Hub using Node.js. You must have the appropriate permissions and environment ready to run the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.delete_service_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Updating Version with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to update a version using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_version.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Delete Custom Target Type Sample\nDESCRIPTION: This sample demonstrates how to delete a custom target type using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_custom_target_type.js\"\n```\n\n----------------------------------------\n\nTITLE: List Descendant Security Health Analytics Custom Modules\nDESCRIPTION: Shows how to list all Security Health Analytics custom modules for descendant organizations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.list_descendant_security_health_analytics_custom_modules.js\n```\n\n----------------------------------------\n\nTITLE: Updating Instance in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update an instance using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Aspect Types in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet illustrates how to list all aspect types in the Dataplex catalog service. It requires the Google Cloud client library and handles pagination.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for listing aspect types\n\n```\n\n----------------------------------------\n\nTITLE: Security Center Management Quickstart in Javascript\nDESCRIPTION: This snippet showcases a quickstart example using the google-cloud-securitycentermanagement library. The code resides in the linked GitHub repository and is runnable in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Quickstart\"\n```\n\n----------------------------------------\n\nTITLE: Escalating a Support Case in Google Cloud\nDESCRIPTION: Sample script demonstrating how to escalate an existing support case using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.escalate_case.js\n```\n\n----------------------------------------\n\nTITLE: Getting Management DNS Zone Binding with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a management DNS zone binding using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_management_dns_zone_binding\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Target Site in Node.js\nDESCRIPTION: This sample demonstrates how to delete a target site using the DiscoveryEngine API in Node.js. The sample uses `Site_search_engine_service.delete_target_site` to delete a target site. Requires an initialized and authenticated DiscoveryEngine client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_DeleteTargetSite_async]\"\n```\n\n----------------------------------------\n\nTITLE: Getting Effective Security Health Analytics Custom Module with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve an effective security health analytics custom module using the Google Cloud Security Center API. This reflects the actual module in effect after inheritance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_effective_security_health_analytics_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tasks Using Google Cloud Batch Service in Node.js\nDESCRIPTION: The sample demonstrates listing tasks associated with a job in the Google Cloud Batch service using Node.js functionality. Before running this code, all required batch job identifiers must be set and cloud credentials authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.list_tasks.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Reference Image using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to delete a reference image using the Google Cloud Vision API. It utilizes the ProductSearch.deleteReferenceImage method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.delete_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Creating Enrollment with Eventarc in Node.js\nDESCRIPTION: Creates an enrollment for Google Cloud Eventarc utilizing Node.js. Dependencies and environment setup are prerequisites before running. The command-line execution shows the enrollment's success status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_enrollment.js\n```\n\n----------------------------------------\n\nTITLE: Cloud IDS Endpoint Retrieval Sample Usage\nDESCRIPTION: Command to execute the endpoint retrieval sample code for Cloud IDS.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-ids/samples/generated/v1/i_d_s.get_endpoint.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Deploy Policy Deletion Sample in Node.js\nDESCRIPTION: The purpose of this snippet is to execute a deploy policy deletion script using Node.js. Ensure pre-installed Node.js and availability of the Cloud Deploy samples. The script deletes a deploy policy within the system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_deploy_policy.js\n```\n\n----------------------------------------\n\nTITLE: Getting Scan Run with Web Security Scanner in Node.js\nDESCRIPTION: This script retrieves the details of a specific scan run using Web Security Scanner on Google Cloud. Node.js and credentials are prerequisites. The output provides the scan run specifics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.get_scan_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Fleet Engine API Quickstart Example\nDESCRIPTION: Basic quickstart example for getting started with the Google Maps Fleet Engine service in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-fleetengine/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing OS Policy Assignments with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code sample shows how to list OS policy assignments using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1/os_config_zonal_service.list_o_s_policy_assignments.js\n```\n\n----------------------------------------\n\nTITLE: Get Channel Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to retrieve a channel using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.get_channel.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Saved Query - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This snippet shows how to retrieve a saved query using the Google Cloud Asset API. It requires Node.js and Google Cloud SDK. The output includes the details of the saved query.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for getting a saved query\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Details via Google Cloud Batch Service in Node.js\nDESCRIPTION: This sample demonstrates fetching specific job information from Google Cloud's Batch service using Node.js. Ensure you have the necessary job ID and that your environment is configured to authenticate requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.get_job.js\"\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1alpha/batch_service.get_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting BigQuery Export with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve a BigQuery export configuration using the Google Cloud Security Center API. BigQuery exports allow sending security findings to BigQuery for analysis.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_big_query_export.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Model in AutoML with Node.js\nDESCRIPTION: This snippet demonstrates retrieving information about a model in AutoML. The model ID needs to be supplied, and the corresponding model details will be fetched and returned.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function getModel(projectId, computeRegion, modelId) {\n  const request = {\n    name: client.modelPath(projectId, computeRegion, modelId),\n  };\n  const [response] = await client.getModel(request);\n  console.log(`Model: ${JSON.stringify(response)}`);\n}\n\ngetModel('your-project-id', 'us-central1', 'your-model-id');\n```\n\n----------------------------------------\n\nTITLE: Getting Environment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Retrieves details of a specific environment in Dialogflow V2beta1. This sample uses the `get_environment` function, which interacts with the Dialogflow client library to send a request to retrieve environment information by its unique identifier. The sample demonstrates how to structure the request and handle the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Getting Instance OS Policies Compliance with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet illustrates how to get instance OS policies compliance using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.get_instance_o_s_policies_compliance.js\n```\n\n----------------------------------------\n\nTITLE: Getting Instance - Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve an instance's details in the Google Cloud Bare Metal Solution using Node.js. Required permissions must be present for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function getInstance() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/instances/YOUR_INSTANCE_ID',\n  };\n  const response = await client.getInstance(request);\n  console.log('Instance details:', response);\n}\ngetInstance();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Lake in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a lake within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.delete_lake.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Get Queue Sample\nDESCRIPTION: Demonstrates how to retrieve details of a specific Cloud Tasks queue using the Node.js client library. The sample code is located in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.get_queue.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Attributes with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This snippet demonstrates how to list data attributes using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the list_data_attributes method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.list_data_attributes.js\n```\n\n----------------------------------------\n\nTITLE: Running VM Migration Datacenter Connector Deletion Sample\nDESCRIPTION: Node.js script demonstrating how to delete a datacenter connector using the VM Migration API. Usage requires the google-cloud-vmmigration package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.delete_datacenter_connector.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Task Tracking Info with Delivery Service API in Node.js\nDESCRIPTION: This code example shows how to retrieve task tracking information using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.get_task_tracking_info.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Restore Plan for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to delete a restore plan in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and the restore plan ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Restore Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.deleteRestorePlan(request)\n  .then(response => {\n    console.log('Restore plan deleted:', response);\n  })\n  .catch(err => {\n    console.error('Error deleting restore plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Searching Blueprint Revisions with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to search blueprint revisions using the Google Telco Automation API. It provides the command to execute the sample code that searches for specific blueprint revisions based on criteria.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.search_blueprint_revisions.js\n```\n\n----------------------------------------\n\nTITLE: List Entity Types - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to list entity types using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `listEntityTypes` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/entity_types.list_entity_types.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Get Build Sample\nDESCRIPTION: This sample demonstrates how to get a build using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: BackupDR createBackupPlanAssociation Sample\nDESCRIPTION: This sample demonstrates how to create a backup plan association using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Installing GKE Hub Node.js Client\nDESCRIPTION: Command to install the GKE Hub client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gke-hub\n```\n\n----------------------------------------\n\nTITLE: Update Typescript Generator version in Node.js\nDESCRIPTION: Updates the WORKSPACE files to utilize the newest version of the Typescript generator. This ensures that the generated Typescript code is up-to-date and leverages the latest features and improvements of the generator.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"* Updating WORKSPACE files to use the newest version of the Typescript generator. ([#499](https://www.github.com/googleapis/nodejs-iot/issues/499)) ([0e5967f](https://www.github.com/googleapis/nodejs-iot/commit/0e5967f873ff7db59f400ac651f2b0590650e42f))\"\n```\n\n----------------------------------------\n\nTITLE: Running Redis Cluster Sample - Delete Backup\nDESCRIPTION: Command to execute the delete backup sample code that demonstrates how to delete a Redis cluster backup\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1/cloud_redis_cluster.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Update Router in Google Cloud Edge Network\nDESCRIPTION: Sample code for updating a router configuration using the Edge Network API in Node.js. Supports dynamic router management and configuration changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.update_router\n```\n\n----------------------------------------\n\nTITLE: Generating Download URL for Google Cloud Function - Node.js\nDESCRIPTION: This code demonstrates how to generate a download URL for a Google Cloud Function, allowing users to retrieve function code or deployment artifacts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.generate_download_url.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Processor - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to delete a specified processor using the Document Processor service. The input is the name of the processor, and the output confirms the deletion operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to delete a processor\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorName };\nawait client.deleteProcessor(request);\n```\n\n----------------------------------------\n\nTITLE: Create Space using Spaces Service\nDESCRIPTION: Node.js sample for creating a new space using the spaces_service API endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2/spaces_service.create_space.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Cloud with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete a private cloud using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.delete_private_cloud\"\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey.get_key_handle Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `get_key_handle` function within the Autokey service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey.get_key_handle.js\"\n```\n\n----------------------------------------\n\nTITLE: Replacing Catalog Attribute with Google Cloud Retail API in Node.js\nDESCRIPTION: This example demonstrates how to replace a catalog attribute using the Google Cloud Retail API. It uses the CatalogService client to update an existing attribute in a catalog with new values.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.replace_catalog_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Property - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This code demonstrates how to delete a property in Google Analytics using the Admin Service API via Node.js. Dependencies include the necessary Google Cloud Node.js client library. The property ID is a required input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteProperty(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Running Simulator.list_replay_results Sample\nDESCRIPTION: Sample code demonstrating how to list replay results using the Policy Simulator API. Located in simulator.list_replay_results.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policysimulator/samples/generated/v1/simulator.list_replay_results.js\n```\n\n----------------------------------------\n\nTITLE: Creating Policy Tag with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line script to create a new policy tag in the Google Cloud Datacatalog using the Policy Tag Manager API. Requires Node.js and Google Cloud SDK setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.create_policy_tag.js\n```\n\n----------------------------------------\n\nTITLE: Resolve Service using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `resolveService` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for resolving a service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1beta1/lookup_service.resolve_service.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Router - Google Cloud Node.js\nDESCRIPTION: This script updates an existing router in the Google Cloud Edge Network using its ID and specified updates. It requires the router's ID and the update parameters as input and outputs the status of the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.update_router.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Update the router\nasync function updateRouter(id, updateParams) {\n  const request = {router: id, update: updateParams};\n  const [operation] = await client.updateRouter(request);\n  console.log('Router updated:', operation);\n}\n\nupdateRouter('your-router-id', {name: 'updated-router-name'});\n```\n\n----------------------------------------\n\nTITLE: List Metadata Imports in Dataproc Metastore\nDESCRIPTION: Example showing how to list metadata imports using the Dataproc Metastore API. This operation retrieves all metadata imports for a specified service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1alpha/dataproc_metastore.list_metadata_imports.js\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary AlloyDB Instance in Node.js\nDESCRIPTION: This code snippet illustrates how to create a secondary AlloyDB instance using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_secondary_instance.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet allows users to set IAM policies for device management in Google Cloud IoT. It controls access to device configurations and commands. Dependencies include the Google Cloud IAM library. Inputs are the device ID and the IAM policy details, outputting the result of the set operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.set_iam_policy.js).\n```\n\n----------------------------------------\n\nTITLE: Getting Inventory with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code example shows how to retrieve inventory information using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.get_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Updating Completion Config with Google Cloud Retail API in Node.js\nDESCRIPTION: This code sample shows how to update the completion configuration using the Google Cloud Retail API. It uses the CatalogService client to modify the completion settings for a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.update_completion_config.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Report Config with Storage Insights API - Node.js\nDESCRIPTION: This script retrieves an existing report configuration using the Google Cloud Storage Insights API. Make sure the environment is prepared as per the client library documentation. Execution is done within a command line environment with Node.js support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.get_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Task in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to create a task within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.create_task.js\"\n```\n\n----------------------------------------\n\nTITLE: Importing Products - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet shows how to import products into Google Cloud Retail. It requires Node.js and the Google Cloud SDK. Input involves product details structured according to the API's requirements, and the output confirms the import status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for importing products\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB Cluster using Node.js\nDESCRIPTION: This snippet demonstrates cluster deletion in AlloyDB using Node.js script. Requiring appropriate access rights and API setup, this script aims to remove unwanted clusters from the platform.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Hub Service Operations v1alpha1\nDESCRIPTION: Alpha version endpoints for managing network connectivity hubs and spokes. Includes basic CRUD operations for hubs and spokes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Listing Automations in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to list automations in Cloud Deploy. It utilizes the list_automations method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_automations.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Stream with Datastream API in Node.js\nDESCRIPTION: This sample shows how to delete a stream using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.delete_stream.js\n```\n\n----------------------------------------\n\nTITLE: Linting and fixing code for Google Cloud Node project\nDESCRIPTION: Command to run the linter which can also automatically fix some common issues in the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-transcoder/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This snippet retrieves a workflow template's details from Google Cloud Dataproc by name. It requires the name of the workflow template and returns the template configuration if found.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function getWorkflowTemplate(templateName) {\n  const request = {\n    name: templateName,\n  };\n  const [response] = await client.getWorkflowTemplate(request);\n  console.log('Retrieved workflow template:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Data Loss Prevention Node.js Client Library\nDESCRIPTION: This command installs the Google Cloud Data Loss Prevention client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dlp\n```\n\n----------------------------------------\n\nTITLE: Getting VPC Connector Details using Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve details of a specific VPC connector using the VPC Access service API. Found in vpc_access_service.get_connector.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vpcaccess/samples/generated/v1/vpc_access_service.get_connector.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Taxonomies with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet demonstrates how to export taxonomies using the Google Cloud Data Catalog API. It requires the google-cloud-datacatalog package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager_serialization.export_taxonomies.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Insight in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to get detailed information about a specific insight using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the get_insight method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.get_insight.js\n```\n\n----------------------------------------\n\nTITLE: Using the Places Insights API Client Library in Node.js\nDESCRIPTION: Example code demonstrating how to initialize the AreaInsightsClient and call the computeInsights method. The snippet includes commented placeholders for required parameters and shows the basic pattern for making API requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-areainsights/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Insights to compute. Currently only INSIGHT_COUNT and\n *  INSIGHT_PLACES are supported.\n */\n// const insights = [1,2,3,4]\n/**\n *  Required. Insight filter.\n */\n// const filter = {}\n\n// Imports the Areainsights library\nconst {AreaInsightsClient} = require('@googlemaps/areainsights').v1;\n\n// Instantiates a client\nconst areainsightsClient = new AreaInsightsClient();\n\nasync function callComputeInsights() {\n  // Construct request\n  const request = {\n    insights,\n    filter,\n  };\n\n  // Run request\n  const response = await areainsightsClient.computeInsights(request);\n  console.log(response);\n}\n\ncallComputeInsights();\n```\n\n----------------------------------------\n\nTITLE: Using Config.get_resource in Node.js\nDESCRIPTION: Illustrates retrieving resource information using the Infrastructure Manager API Config client in Node.js. This sample shows how to use the get_resource method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.get_resource.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Secret with Google Cloud Secret Manager in Node.js\nDESCRIPTION: This code sample demonstrates how to update metadata of an existing secret using the Google Cloud Secret Manager service. It employs the update_secret method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.update_secret.js\n```\n\n----------------------------------------\n\nTITLE: Updating Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This snippet updates an existing workflow template in Google Cloud Dataproc. It requires the template's configuration and the name, outputting the updated template details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function updateWorkflowTemplate(template) {\n  const request = {\n    workflowTemplate: template,\n  };\n  const [response] = await client.updateWorkflowTemplate(request);\n  console.log('Updated workflow template:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Service Perimeter with Access Context Manager API in Node.js\nDESCRIPTION: This code example demonstrates retrieving a service perimeter using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.get_service_perimeter.js\n```\n\n----------------------------------------\n\nTITLE: Feat: Add MULAW and ALAW audio encoding support - Node.js\nDESCRIPTION: This code snippet adds support for MULAW and ALAW audio encoding formats. This enhancement expands the library's ability to handle different audio formats, providing greater flexibility for users. It requires updates to audio encoding logic.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"cf7cb74655a5bd1cfc13b670a4b620ac8dd78138\"\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Projects\nDESCRIPTION: Commands for running different types of tests in Google Cloud Node.js projects. Includes unit tests, sample integration tests, and system tests to verify code functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Get Space Event - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a specific space event from Google Chat using Node.js. It uses the `get_space_event` method of the `Chat_service` to fetch details about a particular event that occurred within a space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Listing Patch Jobs - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet retrieves a list of patch jobs created in the OS Config service. It utilizes Google Cloud's client library for Node.js to fetch and display the jobs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for listing patch jobs\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function listPatchJobs() {\n    const [response] = await client.listPatchJobs();\n    console.log(response);\n}\nlistPatchJobs();\n```\n\n----------------------------------------\n\nTITLE: Searching Available Domains (v1alpha2)\nDESCRIPTION: Shows how to search for available domains using the Cloud Domains API v1alpha2.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1alpha2/domains.search_domains.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Taxonomy Details via Node.js\nDESCRIPTION: This Node.js script provides detailed information about a specific taxonomy in Google Cloud Data Catalog. Ensure appropriate IAM permissions are configured before running.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.get_taxonomy.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating Database Backup in AlloyDB\nDESCRIPTION: Node.js sample script for creating a backup of an AlloyDB database using the v1alpha administrative API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.create_backup.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center create_report script in Node.js\nDESCRIPTION: Example command to execute the Migration Center create_report sample script. This script demonstrates how to create a report using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.create_report.js\n```\n\n----------------------------------------\n\nTITLE: Creating Web Security Scanner Scan Config with Node.js\nDESCRIPTION: This Node.js script demonstrates how to create a new scan configuration using the Web Security Scanner API. Before running the script, ensure that the necessary Google Cloud SDK is installed and configured. The script should be executed from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.create_scan_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Permissions using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to list permissions using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `listPermissions` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_67\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.list_permissions.js`\n```\n\n----------------------------------------\n\nTITLE: Suggesting Knowledge Assist using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to suggest knowledge assist using the Dialogflow API. It uses the participants.suggest_knowledge_assist method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_69\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.suggest_knowledge_assist.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Notebook Environment with Google Cloud Node.js Client\nDESCRIPTION: Sample code showing how to delete a notebook environment using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.delete_environment.js\n```\n\n----------------------------------------\n\nTITLE: Get Pool Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to retrieve a pool using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.get_pool.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Listing - Node.js\nDESCRIPTION: This snippet demonstrates how to delete a listing in a data exchange using the Analytics Hub API in Node.js. Ensure proper authentication is set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to delete a listing\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function deleteListing() {\n  const request = {\n    name: 'projects/your-project-id/listings/your-listing-id',\n  };\n  const [response] = await client.deleteListing(request);\n  console.log('Listing deleted:', response);\n}\n\ndeleteListing();\n```\n\n----------------------------------------\n\nTITLE: Update Model Retail API\nDESCRIPTION: This sample demonstrates how to update a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `updateModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.update_model.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Evaluation Jobs with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to update an evaluation job using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the update_evaluation_job method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.update_evaluation_job.js\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey_admin.get_autokey_config Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `get_autokey_config` function within the Autokey Admin service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey_admin.get_autokey_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Registered Parties with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet illustrates how to export registered parties using the A_m_l.export_registered_parties method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and proper authentication to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.export_registered_parties.js\n```\n\n----------------------------------------\n\nTITLE: Listing Volume Backups using GKE Backup API in Node.js\nDESCRIPTION: Sample code for listing volume backups using the GKE Backup API. Used to enumerate all persistent volume backups created for a specific backup in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.list_volume_backups.js\n```\n\n----------------------------------------\n\nTITLE: Terminating a Job Run in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to terminate a job run in Cloud Deploy. It utilizes the terminate_job_run method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.terminate_job_run.js\n```\n\n----------------------------------------\n\nTITLE: Suggesting Conversation Summary with Dialogflow V2beta1\nDESCRIPTION: This code sample demonstrates how to get a suggested summary of a conversation using the Dialogflow V2beta1 API in Node.js. It leverages the `Conversations.suggest_conversation_summary` method to request a summary for the conversation. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Conversations.suggest_conversation_summary\"\n```\n\n----------------------------------------\n\nTITLE: Tune Model Retail API\nDESCRIPTION: This sample demonstrates how to tune a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `tuneModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.tune_model.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Terraform Versions with Config.list_terraform_versions in Node.js\nDESCRIPTION: This code demonstrates how to list Terraform versions using the Config API. It is included in the google-cloud-config package and executes as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.list_terraform_versions.js\n```\n\n----------------------------------------\n\nTITLE: Undeploying Conversation Model in Dialogflow v2\nDESCRIPTION: Demonstrates how to undeploy a conversation model in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and undeploys a deployed conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.undeploy_conversation_model.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet illustrates how to delete an entry type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.delete_entry_type.js\n```\n\n----------------------------------------\n\nTITLE: Creating Private Connection in Google Cloud Datastream - Node.js\nDESCRIPTION: Creates a private connection in Google Cloud Datastream. This requires the Google Cloud Datastream client library and proper permissions to create private connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function createPrivateConnection() {\n  const request = {\n    // Private connection specifications\n  };\n\n  const [operation] = await client.createPrivateConnection(request);\n  const [response] = await operation.promise();\n  console.log('Private connection created:', response);\n}\n\ncreatePrivateConnection();\n```\n\n----------------------------------------\n\nTITLE: Running Oracle Database Quickstart Sample\nDESCRIPTION: Command to execute the Oracle Database quickstart sample Node.js script from the packages directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Google Cloud VM Migration API Sample Collection\nDESCRIPTION: Collection of Node.js code samples for interacting with Google Cloud VM Migration API. Includes operations for managing migrations, clones, datacenter connectors, sources, targets, and utilization reports.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Updating a Generator in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet updates a generator in Dialogflow CX using the Node.js client library. It uses the `Generators.update_generator` method to modify an existing generator. Make sure to initialize and authenticate the Dialogflow CX client before using this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Generators_UpdateGenerator_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callUpdateGenerator() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const generator = {}\n\n  const request = {\n    generator: generator,\n    updateMask: {paths: ['field_mask']},\n  };\n\n  // Make the request\n  const [response] = await client.updateGenerator(request);\n  console.log(response);\n}\n\ncallUpdateGenerator();\n// [END dialogflow_cx_v3_generated_Generators_UpdateGenerator_async]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Crypto Keys with Google Cloud KMS Inventory API - Node.js\nDESCRIPTION: This sample script demonstrates how to list crypto keys using the Key Dashboard Service from the KMS Inventory API. Before running the script, ensure that necessary client libraries are installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms-inventory/samples/generated/v1/key_dashboard_service.list_crypto_keys.js\n```\n\n----------------------------------------\n\nTITLE: Querying Workflow Invocation Actions with Google Cloud Dataform in Node.js\nDESCRIPTION: This Node.js sample script queries workflow invocation actions in a Dataform project. It is run via the command line and returns a list of invocation actions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.query_workflow_invocation_actions.js\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample\nDESCRIPTION: Basic quickstart sample demonstrating core functionality of the Policy Simulator API. Located in quickstart.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policysimulator/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Sources in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet lists all sources within the Google Cloud Security Center, essential for understanding where security findings originate.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_sources.js\n```\n\n----------------------------------------\n\nTITLE: Create Orchestration Cluster in Telco Automation API - JavaScript\nDESCRIPTION: Creates an orchestration cluster using the Telco Automation API v1alpha1. This sample shows cluster creation process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.create_orchestration_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Executing Product Sets Import Node.js Script\nDESCRIPTION: Run this command to execute a Node.js script that imports multiple product sets into Google Cloud Vision API. Requires Node.js setup, and input of product set data file, with output confirming the import completion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.import_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Volume Restore Information for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve volume restore details in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and involves the volume restore ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Volume Restore\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getVolumeRestore(request)\n  .then(response => {\n    console.log('Volume restore details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving volume restore:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Advance Rollout Sample\nDESCRIPTION: This sample demonstrates how to advance a rollout using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.advance_rollout.js\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading an Instance in Data Fusion with Node.js\nDESCRIPTION: Handles the upgrading of a Data Fusion instance to a newer version using Node.js, requiring the appropriate Google Cloud library. The upgrade modifies the instance to the latest stable version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.upgrade_instance.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Insight Type Configuration in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to update an insight type configuration using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the update_insight_type_config method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.update_insight_type_config.js\n```\n\n----------------------------------------\n\nTITLE: Creating Chunk with Retriever Service in JavaScript\nDESCRIPTION: This sample shows how to create a single chunk utilizing the RetrieverService of the google-ai-generativelanguage package. The command executes the sample for creating a chunk.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.create_chunk.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Dataplex Asset\nDESCRIPTION: Updates an asset in Dataplex using Node.js. Requires properly configured Google Cloud SDK. Runs 'dataplex_service.update_asset.js' to perform the update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_65\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.update_asset.js\n```\n\n----------------------------------------\n\nTITLE: Unlocking Deployment with Config.unlock_deployment in Node.js\nDESCRIPTION: This example demonstrates how to unlock a deployment using the Config API. It is included in the google-cloud-config package and executes as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.unlock_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Organization Data Exchanges\nDESCRIPTION: Example showing how to list organization-level data exchanges\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.list_org_data_exchanges.js\n```\n\n----------------------------------------\n\nTITLE: Updating Security Health Analytics Custom Module in Javascript\nDESCRIPTION: This snippet illustrates how to update a Security Health Analytics Custom Module using the google-cloud-securitycentermanagement library. The sample code is located in the referenced GitHub repository and is runnable in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.update_security_health_analytics_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Searching Domains with Google Cloud Domains Node.js\nDESCRIPTION: Sample script for searching available domain names using the Google Cloud Domains API in Node.js. Demonstrates domain search functionality in the V1beta1 version of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1beta1/domains.search_domains.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Enrollment with Eventarc API in Node.js\nDESCRIPTION: This example shows how to update an enrollment using the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_enrollment.js\n```\n\n----------------------------------------\n\nTITLE: Update Airflow Environment - Node.js\nDESCRIPTION: Updates the configuration of an existing Airflow environment including its resources and settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.update_environment.js\n```\n\n----------------------------------------\n\nTITLE: List EKM Connections JavaScript\nDESCRIPTION: Lists all established EKM connections within Google Cloud KMS through a Node.js script. Prerequisite setup includes the Google Cloud Node.js client library. The script outputs a list of connections with relevant details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Getting Encryption Spec with Dialogflow V2beta1\nDESCRIPTION: This code sample retrieves the encryption configuration details using Dialogflow V2beta1 API in Node.js. It utilizes `Encryption_spec_service.get_encryption_spec` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"Encryption_spec_service.get_encryption_spec\"\n```\n\n----------------------------------------\n\nTITLE: Get Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to retrieve an audience list using the Alpha version of the Google Analytics Data API with Node.js. It uses the `alpha_analytics_data.get_audience_list` method, and the sample's README.md file contains execution instructions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: BackupDR getBackupPlanAssociation Sample\nDESCRIPTION: This sample demonstrates how to get a backup plan association using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet explains how to install the necessary dependencies for a Node.js project before running tests. Ensure that you have Node.js installed and configured properly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloud Shell Sample Usage Commands\nDESCRIPTION: Example commands for running various Cloud Shell service samples\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/generated/v1/cloud_shell_service.add_public_key.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/generated/v1/cloud_shell_service.authorize_environment.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/generated/v1/cloud_shell_service.get_environment.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/generated/v1/cloud_shell_service.remove_public_key.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/generated/v1/cloud_shell_service.start_environment.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-shell/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating Snapshot in Cloud Filestore\nDESCRIPTION: This code updates the specifications of an existing snapshot in Google Cloud Filestore, which may be essential for adjustment purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function updateSnapshot() {\n    const response = await client.updateSnapshot(...);\n    console.log(response);\n}\nupdateSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Document Management in Dialogflow\nDESCRIPTION: Sample codes covering various document-related operations in Dialogflow, including creating, deleting, exporting, importing, and listing documents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.create_document\n```\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.delete_document\n```\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.export_document\n```\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.get_document\n```\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.import_documents\n```\n\nLANGUAGE: javascript\nCODE:\n```\nDocuments.list_documents\n```\n\n----------------------------------------\n\nTITLE: Listing Custom Target Types in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to list custom target types using the Cloud Deploy API. It uses the list_custom_target_types method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_custom_target_types.js\n```\n\n----------------------------------------\n\nTITLE: Getting Entry with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code sample shows how to get an entry using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.get_entry.js\n```\n\n----------------------------------------\n\nTITLE: Create Key Ring with Key Management Service JavaScript\nDESCRIPTION: Utilizes Node.js to create a key ring within Google Cloud KMS, used for organizing crypto keys. Prerequisite includes necessary access permissions. Outputs the key ring identifier on successful creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Updating Assets in Migration Center\nDESCRIPTION: Node.js example demonstrating how to update asset information using the Migration Center API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_asset.js\n```\n\n----------------------------------------\n\nTITLE: Checking Autopilot Compatibility - JavaScript\nDESCRIPTION: This snippet checks if a cluster is compatible with Autopilot using the Cluster Manager API. It necessitates the Google Cloud Node.js client library setup for proper authentication and operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function checkAutopilotCompatibility(clusterId) {\n  const request = {clusterId};\n  const response = await client.checkAutopilotCompatibility(request);\n  console.log(`Autopilot compatibility: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Removing Product from Product Set\nDESCRIPTION: Sample code for removing a specific product from a product set in Google Cloud Vision Product Search\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nProduct_search.remove_product_from_product_set\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Instances in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet demonstrates how to create multiple instances in an AlloyDB project, which is essential for resource management. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function batchCreateInstances() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Quickstart example for Security Center Management\nDESCRIPTION: This is a quickstart sample demonstrating basic usage of the Security Center Management API with Node.js. It uses the `@google-cloud/securitycentermanagement` package and is meant to provide a simple entry point for using the API.  It is executed directly using `node`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-securitycentermanagement/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Enabling Self-Signed JWT Feature Flag\nDESCRIPTION: Turns on the self-signed JWT feature flag in the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nturns on self-signed JWT feature flag ([#417](https://www.github.com/googleapis/nodejs-security-center/issues/417)) ([ec4b179](https://www.github.com/googleapis/nodejs-security-center/commit/ec4b17916d42f9ff006b9c9d0c1a6c2dd0743fa7))\n```\n\n----------------------------------------\n\nTITLE: Updating Transfer Config with BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This code sample demonstrates how to update a transfer configuration using the BigQuery Data Transfer Service client library for Node.js. Usage instructions are provided for running the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/generated/v1/data_transfer_service.update_transfer_config.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving API Operation Details with API Hub using Node.js\nDESCRIPTION: The Node.js script fetches detailed data on a specific API operation from Google Cloud's API Hub. This allows developers to gain insights into the operational aspects of an API, executed through the command line with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_api_operation.js\n```\n\n----------------------------------------\n\nTITLE: Creating Taxonomy in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a taxonomy in Google Cloud's Data Catalog service using the Node.js client library. It requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function createTaxonomy() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n    taxonomy: {\n      displayName: 'YOUR_TAXONOMY_NAME',\n      description: 'Your taxonomy description',\n    },\n  };\n  const [response] = await client.createTaxonomy(request);\n  console.log(`Taxonomy created: ${response.name}`);\n}\ncreateTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Listing Slates in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to list slates using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.list_slates.js\n```\n\n----------------------------------------\n\nTITLE: Listing API Operations with API Hub using Node.js\nDESCRIPTION: This Node.js script lists available API operations within the Google Cloud API Hub. Enhances understanding of operational capabilities and helps in planning API utilization by providing a comprehensive list of operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_api_operations.js\n```\n\n----------------------------------------\n\nTITLE: Update Data Exchange - Node.js\nDESCRIPTION: Example showing how to update an existing data exchange in Analytics Hub using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.update_data_exchange.js\n```\n\n----------------------------------------\n\nTITLE: Running Delete Node Pool Script in Node.js\nDESCRIPTION: This Node.js script deletes a node pool from a cluster. It requires Node.js, the Google Cloud SDK, and node pool identification parameters. Output confirms the node pool deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.delete_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Backup Information from AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet fetches details regarding a specific AlloyDB backup. Proper authentication must be configured before execution. The script outputs the backup's data in a readable format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_backup.js\n```\n\n----------------------------------------\n\nTITLE: Delete Certificate Map Entry using Node.js\nDESCRIPTION: Example showing how to delete a certificate map entry using the Google Cloud Certificate Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.delete_certificate_map_entry.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instances using Financial Services API client in Node.js\nDESCRIPTION: This code snippet demonstrates how to list instances using the Financial Services API client in Node.js. It initializes an AMLClient, constructs a request, and iterates through the response to print each instance. Note that the snippet requires modification to work since the variables are not defined in the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent of the Instance is the location for that Instance.\n *  Every location has exactly one instance.\n */\n// const parent = 'abc123'\n/**\n *  The number of resources to be included in the response. The response\n *  contains a next_page_token, which can be used to retrieve the next page of\n *  resources.\n */\n// const pageSize = 1234\n/**\n *  In case of paginated results, this is the token that was returned in the\n *  previous ListInstancesResponse. It should be copied here to retrieve the\n *  next page of resources. This will be empty for the first instance of\n *  ListInstancesRequest.\n */\n// const pageToken = 'abc123'\n/**\n *  Specify a filter to narrow search results.\n */\n// const filter = 'abc123'\n/**\n *  Specify a field to use for ordering.\n */\n// const orderBy = 'abc123'\n\n// Imports the Financialservices library\nconst {AMLClient} = require('@google-cloud/financialservices').v1;\n\n// Instantiates a client\nconst financialservicesClient = new AMLClient();\n\nasync function callListInstances() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = financialservicesClient.listInstancesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListInstances();\n\"\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library\nDESCRIPTION: Example of installing Google Cloud GSuite Addons client library for legacy Node.js version 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gsuiteaddons@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Listing Services - Google Cloud Node.js\nDESCRIPTION: This Node.js code lists all services within a specified namespace in the Google Cloud Service Directory. Functionality relies on `@google-cloud/service-directory` and requires the namespace’s name. Returns a list of service identifiers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_services.js>\n```\n\n----------------------------------------\n\nTITLE: Listing Web Security Scanner Finding Type Stats with Node.js\nDESCRIPTION: Utilize this Node.js script to list statistics for different finding types discovered during scans. Ensure proper setup of the Google Cloud SDK to run this script using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.list_finding_type_stats.js\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference Format\nDESCRIPTION: Format used to reference specific Git commits and their associated changes in the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n([#6182](https://github.com/googleapis/google-cloud-node/issues/6182)) ([c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf))\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Speech Dependencies\nDESCRIPTION: Instructions for installing the required Node.js dependencies before running the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Delete Order Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to delete an order using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.delete_order.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.bind_device_to_gateway in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `bind_device_to_gateway` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.bind_device_to_gateway.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Prediction Result with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code example shows how to retrieve a prediction result using the A_m_l.get_prediction_result method of the Google Cloud Financial Services API. The necessary Node.js package and proper credentials are required for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_prediction_result.js\n```\n\n----------------------------------------\n\nTITLE: Managing Quota Information with Cloud Quotas API in Node.js (v1beta)\nDESCRIPTION: Beta version samples for retrieving quota information using the Cloud Quotas API v1beta, including getting individual quota info and listing all quota infos.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.get_quota_info.js\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.list_quota_infos.js\n```\n\n----------------------------------------\n\nTITLE: Using Config.delete_statefile in Node.js\nDESCRIPTION: Shows how to delete a statefile using the Infrastructure Manager API Config client in Node.js. This sample demonstrates the usage of the delete_statefile method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.delete_statefile.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Preserve default values in x-goog-request-params header - Node.js\nDESCRIPTION: This code snippet addresses a bug fix that ensures default values are preserved in the `x-goog-request-params` header. This ensures that the correct parameters are sent to the Google Cloud Text-to-Speech service. It relies on proper handling of HTTP headers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"26a4f8456c713272c8f3d0aab45ecbb4392e0fa1\"\n```\n\n----------------------------------------\n\nTITLE: Getting Private Cloud with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a private cloud using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_private_cloud\"\n```\n\n----------------------------------------\n\nTITLE: Delete Reaction - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to delete a reaction from a message in a Google Chat space with Node.js. The `delete_reaction` method from `Chat_service` is used to remove a specific reaction from a message.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.delete_device in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `delete_device` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.delete_device.js\"\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.createProduct method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to create a new product in Google Cloud Vision's product search catalog. This establishes a new product entity that can be used for visual product search.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.create_product.js\n```\n\n----------------------------------------\n\nTITLE: Delete Generator - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to delete a generator using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `deleteGenerator` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/generators.delete_generator.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Abandon Release Sample\nDESCRIPTION: This sample demonstrates how to abandon a release using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.abandon_release.js\"\n```\n\n----------------------------------------\n\nTITLE: Exporting Products - Google Cloud Retail - JavaScript\nDESCRIPTION: This sample demonstrates how to export products from Google Cloud Retail. Dependencies include Node.js and relevant Google Cloud libraries. The output of this operation is the exported product data in the desired format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for exporting products\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_source script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_source sample script. This script demonstrates how to delete a source using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_source.js\n```\n\n----------------------------------------\n\nTITLE: Deleting SQL Databases in Google Cloud\nDESCRIPTION: Sample script for deleting databases in Google Cloud SQL using the Node.js client library. Demonstrates the database deletion process for Cloud SQL.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.delete.js\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex Asset Actions\nDESCRIPTION: This Node.js command is used to list asset actions in the Google Cloud Dataplex service. Before running, ensure Node.js environment is set up and the Google Cloud SDK is authenticated correctly. Executes the script located at 'dataplex_service.list_asset_actions.js' which outputs a list of asset actions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_asset_actions.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Exporting an Agent in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to export an agent from Dialogflow CX. It uses the agents.export_agent method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_81\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.export_agent.js\n```\n\n----------------------------------------\n\nTITLE: Start Channel Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to start a channel using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.start_channel.js\n```\n\n----------------------------------------\n\nTITLE: Listing Jobs - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet lists all the jobs associated with the current project within the Google Cloud Dataflow service, making it easier to manage and monitor job executions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to list all jobs goes here.\n```\n\n----------------------------------------\n\nTITLE: Upgrading AlloyDB Cluster - Node.js\nDESCRIPTION: Sample code demonstrating how to upgrade an AlloyDB cluster version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.upgrade_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Creating Channel Connection with Eventarc in Node.js\nDESCRIPTION: This snippet allows the creation of a new channel connection utilizing Google Cloud Eventarc via Node.js. Dependencies include Node.js and proper authentication. Executable through command line, it provides feedback on the connection creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_channel_connection.js\n```\n\n----------------------------------------\n\nTITLE: Importing Completion Data with Google Cloud Retail API in Node.js\nDESCRIPTION: This code example shows how to import completion data using the Google Cloud Retail API. It uses the CompletionService client to upload completion data to a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/completion_service.import_completion_data.js\n```\n\n----------------------------------------\n\nTITLE: Stopping Backfill Job in Node.js\nDESCRIPTION: In this script, stop a backfill job for a specific stream using the Datastream API in a Node.js application. It requires valid credentials and stream identification.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.stop_backfill_job.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Deleting an Issue Model with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet illustrates the deletion of an issue model using the Contact Center Insights API. It employs the delete_issue_model method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_issue_model.js\n```\n\n----------------------------------------\n\nTITLE: Get Security Center Simulation\nDESCRIPTION: Retrieves a security simulation from the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_simulation.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Delete Delivery Pipeline Sample\nDESCRIPTION: This sample demonstrates how to delete a delivery pipeline using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_delivery_pipeline.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Connections - Google Cloud Apigee Connect API - JavaScript\nDESCRIPTION: This code snippet demonstrates how to list connections using the Connection_service API in Node.js. It requires the Google Cloud Node.js client library to be installed. The expected input is the authentication credentials configured for Google Cloud, and it outputs a list of connections in the connected account.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-apigeeconnect/samples/generated/v1/connection_service.list_connections.js\n```\n\n----------------------------------------\n\nTITLE: Starting a Notebook Instance (v2)\nDESCRIPTION: This code sample demonstrates how to start a Notebook instance using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.start_instance.js\n```\n\n----------------------------------------\n\nTITLE: Listing Saved Queries using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list saved queries using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.list_saved_queries.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Hardware Groups in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to list hardware groups using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which retrieves a list of hardware groups.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_hardware_groups.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Generative Questions Feature Config in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates updating the generative questions feature configuration using the Google Cloud Retail API. It uses the updateGenerativeQuestionsFeatureConfig method of the GenerativeQuestionService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/generative_question_service.update_generative_questions_feature_config.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Participant Content in Dialogflow using Node.js\nDESCRIPTION: This sample executes a JavaScript command in Node.js to analyze content from participants in Dialogflow. The Google Cloud Node.js client library and Node.js must be installed and configured for the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/participants.analyze_content.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Document with Dialogflow V2beta1\nDESCRIPTION: This code sample shows how to update an existing document using the Dialogflow V2beta1 API in Node.js. It employs the `Documents.update_document` method to modify the document's content or metadata. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.update_document\"\n```\n\n----------------------------------------\n\nTITLE: Getting Entry Group with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet illustrates how to get an entry group using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.get_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: List File Store Data Profiles with Google Cloud DLP Service in Node.js\nDESCRIPTION: This snippet shows how to list file store data profiles using the Google Cloud DLP service. It calls the listFileStoreDataProfiles method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_file_store_data_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Task in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a task within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.delete_task.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificate Template with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet illustrates how to delete a certificate template using the Google Cloud Private CA Service API. It uses the CertificateAuthorityService client to invoke the deleteCertificateTemplate method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.delete_certificate_template.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter and attempts to fix any style issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Generative Service Sample - JavaScript\nDESCRIPTION: Command to execute the generative service batch embed contents sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1/generative_service.batch_embed_contents.js\n```\n\n----------------------------------------\n\nTITLE: Managing Connections and Connectors in Google Cloud\nDESCRIPTION: Collection of samples demonstrating core functionality of the Google Cloud Connectors API, including creating, reading, updating and deleting connections, retrieving connector information, and managing runtime configurations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// No direct code snippets provided in the text, only links to external samples\n```\n\n----------------------------------------\n\nTITLE: Listing Phone Numbers - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to list all phone numbers associated with a participant in Dialogflow, providing a way to retrieve current contact numbers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_113\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Lists all phone numbers of a participant.\nconst {PhoneNumbersClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new PhoneNumbersClient();\n\nasync function listPhoneNumbers() {\n  // Implementation logic here\n}\n\nlistPhoneNumbers();\n```\n\n----------------------------------------\n\nTITLE: Get Network Policy in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_network_policy sample for the VMware Engine API. This retrieves network policy details for a VMware Engine private cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_network_policy.js\n```\n\n----------------------------------------\n\nTITLE: Updating File Share in Cloud Filestore\nDESCRIPTION: Sample script demonstrating how to update a file share using the Cloud Filestore Manager API in Node.js beta version\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.update_share.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests for the project using npm. It is crucial for verifying the correctness of code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Getting External Access Rule with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get an external access rule using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_external_access_rule\"\n```\n\n----------------------------------------\n\nTITLE: Running Product Search Update Product Sample in Node.js\nDESCRIPTION: This snippet shows how to run the sample code for updating a product using the Google Cloud Vision API. It provides the command to execute the Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.update_product.js\n```\n\n----------------------------------------\n\nTITLE: Discovering Connection Profile in Google Cloud Datastream - Node.js\nDESCRIPTION: Discovers properties of a connection profile in Google Cloud Datastream. The snippet requires the Google Cloud Datastream client library and appropriate permissions to discover connection profiles.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function discoverConnectionProfile() {\n  const request = {\n    // Parameters to identify the connection profile to discover\n  };\n\n  const response = await client.discoverConnectionProfile(request);\n  console.log('Discovered connection profile:', response);\n}\n\ndiscoverConnectionProfile();\n```\n\n----------------------------------------\n\nTITLE: Listing Discovered Services using App Hub Client in Node.js\nDESCRIPTION: This snippet provides an example of how to list discovered services using the App Hub client. It includes necessary variable comments, initialization of the client, and structure for making asynchronous calls to the API. Modify the 'parent' variable according to your project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Project and location to list Discovered Services on.\n *  Expected format: `projects/{project}/locations/{location}`.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Apphub library\nconst {AppHubClient} = require('@google-cloud/apphub').v1;\n\n// Instantiates a client\nconst apphubClient = new AppHubClient();\n\nasync function callListDiscoveredServices() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = apphubClient.listDiscoveredServicesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDiscoveredServices();\n```\n\n----------------------------------------\n\nTITLE: Alternative Contact Information in Markdown\nDESCRIPTION: Alternative email contact for uncomfortable situations regarding code of conduct violations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CODE_OF_CONDUCT.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nopensource@google.com\n```\n\n----------------------------------------\n\nTITLE: Creating Datastream Private Connection in Node.js\nDESCRIPTION: This snippet illustrates how to create a private connection in Google Cloud Datastream using Node.js. It handles authorization and setup for private connectivity.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.create_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Listing Workstations using Node.js Client\nDESCRIPTION: Example code demonstrating how to use the Cloud Workstations client library to list workstations. The code initializes the client and makes an asynchronous request to fetch workstation listings with pagination support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workstations/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent resource name.\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of items to return.\n */\n// const pageSize = 1234\n/**\n *  next_page_token value returned from a previous List request, if any.\n */\n// const pageToken = 'abc123'\n\n// Imports the Workstations library\nconst {WorkstationsClient} = require('@google-cloud/workstations').v1beta;\n\n// Instantiates a client\nconst workstationsClient = new WorkstationsClient();\n\nasync function callListWorkstations() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await workstationsClient.listWorkstationsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListWorkstations();\n```\n\n----------------------------------------\n\nTITLE: Using NotebookService.deleteSchedule in Node.js\nDESCRIPTION: Example demonstrating deletion of a notebook schedule using the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.delete_schedule.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Video Intelligence Node.js Client\nDESCRIPTION: Command to install the Google Cloud Video Intelligence client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/video-intelligence\n```\n\n----------------------------------------\n\nTITLE: Creating External Account Key with Public Certificate Authority API in Node.js\nDESCRIPTION: This snippet demonstrates how to create an external account key using the Google Cloud Public Certificate Authority service. It initializes the client, builds a request with the required parent resource and external account key parameters, and then makes the API call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent resource where this external_account_key will be created.\n *  Format: projects/[project_quickstart].\n *  At present only the \"global\" location is supported.\n */\n// const parent = 'abc123'\n/**\n *  Required. The external account key to create. This field only exists to future-proof\n *  the API. At present, all fields in ExternalAccountKey are output only and\n *  all values are ignored. For the purpose of the\n *  CreateExternalAccountKeyRequest, set it to a default/empty value.\n */\n// const externalAccountKey = {}\n\n// Imports the Publicca library\nconst {PublicCertificateAuthorityServiceClient} =\n  require('@google-cloud/publicca').v1beta1;\n\n// Instantiates a client\nconst publiccaClient = new PublicCertificateAuthorityServiceClient();\n\nasync function callCreateExternalAccountKey() {\n  // Construct request\n  const request = {\n    parent,\n    externalAccountKey,\n  };\n\n  // Run request\n  const response = await publiccaClient.createExternalAccountKey(request);\n  console.log(response);\n}\n\ncallCreateExternalAccountKey();\n```\n\n----------------------------------------\n\nTITLE: Executing Ekm_service.get_ekm_config Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `get_ekm_config` function within the EKM Service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/ekm_service.get_ekm_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Live Session in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to retrieve a live session using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_live_session.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Handle fallback option properly - Node.js\nDESCRIPTION: This code snippet fixes an issue in handling the fallback option. It makes sure that the fallback mechanism works as expected when the primary connection fails. It addresses fallback logic.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"9ca230ea459b5c385ab259af943ba7efdc8437ec\"\n```\n\n----------------------------------------\n\nTITLE: Getting Cluster with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a cluster using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_cluster\"\n```\n\n----------------------------------------\n\nTITLE: Removing DNS Peering in Data Fusion with Node.js\nDESCRIPTION: Facilitates removal of DNS peering from a Data Fusion instance via the Node.js script. It depends on Google Cloud libraries and conveys a successful removal with no specific input parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.remove_dns_peering.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Managed Kafka Topic in Node.js\nDESCRIPTION: This snippet illustrates how to update a topic in a Managed Kafka cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka.update_topic.js\n```\n\n----------------------------------------\n\nTITLE: Listing Evaluations with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to list evaluations for a document processor using the Google Cloud DocumentAI API. It uses the document_processor_service to retrieve a list of evaluations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.list_evaluations.js\n```\n\n----------------------------------------\n\nTITLE: Create Endpoint using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `createEndpoint` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for creating an endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_endpoint.js`\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Get Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to retrieve a build trigger using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.get_build_trigger.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Get Document Example in Node.js\nDESCRIPTION: Presents running a JavaScript example for retrieving a document with the Retriever service via Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.get_document.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: Command for executing sample integration tests to validate integrations and interactions between components.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Report Configurations using Storage Insights API\nDESCRIPTION: This code snippet demonstrates how to list report configurations using the Storage Insights API client in Node.js.  It initializes the client, constructs a request with a parent resource, and then iterates through the response to log each report configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListReportConfigsRequest\n */\n// const parent = 'abc123'\n/**\n *  Requested page size. Server may return fewer items than requested.\n *  If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Filtering results\n */\n// const filter = 'abc123'\n/**\n *  Hint for how to order the results\n */\n// const orderBy = 'abc123'\n\n// Imports the Storageinsights library\nconst {StorageInsightsClient} = require('@google-cloud/storageinsights').v1;\n\n// Instantiates a client\nconst storageinsightsClient = new StorageInsightsClient();\n\nasync function callListReportConfigs() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await storageinsightsClient.listReportConfigsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListReportConfigs();\n\n```\n\n----------------------------------------\n\nTITLE: Stopping Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to stop a notebook runtime using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.stop_runtime.js\n```\n\n----------------------------------------\n\nTITLE: JSON files addition in tsconfig templates\nDESCRIPTION: Fix to add JSON files to TypeScript configuration templates\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\"files\": [\n  \"*.json\"\n]}\n```\n\n----------------------------------------\n\nTITLE: Listing SSH Keys using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet shows how to list SSH keys using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_s_s_h_keys.js\n```\n\n----------------------------------------\n\nTITLE: List Events Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to list events using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.list_events.js\n```\n\n----------------------------------------\n\nTITLE: Listing Conversation Datasets in Dialogflow v2\nDESCRIPTION: Demonstrates how to list conversation datasets in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and retrieves a list of available conversation datasets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_datasets.list_conversation_datasets.js`\n```\n\n----------------------------------------\n\nTITLE: Managing Table Rows - Batch Create\nDESCRIPTION: Example showing how to batch create multiple rows in an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.batch_create_rows.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Disabling Advanced Site Search in Node.js\nDESCRIPTION: This sample demonstrates how to disable advanced site search using the DiscoveryEngine API in Node.js. It utilizes `Site_search_engine_service.disable_advanced_site_search`. Proper client initialization and authentication are assumed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_DisableAdvancedSiteSearch_async]\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Measurement Protocol Secret - Google Analytics Admin Service - JavaScript\nDESCRIPTION: Illustrating how to delete a measurement protocol secret, this JavaScript snippet uses Google Analytics Admin Service. The Google Cloud Node.js client library is needed, and the secret ID must be provided to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteMeasurementProtocolSecret(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Listing Azure Clusters\nDESCRIPTION: This JavaScript sample lists Azure clusters available in a specific project by leveraging the Google Cloud client library. Users need Node.js to execute this script, which outputs information about each Azure cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/azure_clusters.list_azure_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Getting Gateway Information in Google Cloud Network Services\nDESCRIPTION: Node.js code sample showing how to retrieve gateway details using the Network Services API. Can be run through command line or Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.get_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart with Cloud Profiler API - Node.js\nDESCRIPTION: This quickstart code snippet provides a basic introduction to using the Cloud Profiler API in a Node.js environment, helping developers get started with profiling their applications quickly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-cloudprofiler/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Update Queue Sample\nDESCRIPTION: Shows how to update a Cloud Tasks queue using the Node.js client library. The sample code is available in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.update_queue.js\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud VPC Access Client Library\nDESCRIPTION: Example demonstrating how to initialize the VPC Access client and list VPC connectors. The code shows basic usage including importing the library, creating a client instance, and making an API call to list connectors for a specific project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {VpcAccessServiceClient} = require('@google-cloud/vpc-access');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new VpcAccessServiceClient();\n\nasync function listConnectors() {\n  const connectors = await client.listConnectors({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(connectors);\n}\nlistConnectors();\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Delete Target Sample\nDESCRIPTION: This sample demonstrates how to delete a target using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_target.js\"\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Delete Corpus Example in Node.js\nDESCRIPTION: Demonstrates how to execute the JavaScript file responsible for deleting a corpus with the Retriever service, presupposing the presence of Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.delete_corpus.js\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Instance Information in AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet retrieves detailed information for a given AlloyDB instance. Proper setup and access rights are needed. Outputs contain specifications and current status of the instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Setting Mute Configurations in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet adjusts the mute settings for alerts in Security Center, aiding in reducing alert noise that may hinder effective monitoring.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.set_mute.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Generator in Node.js\nDESCRIPTION: This snippet creates a new generator in a Dialogflow agent. Generators can be used to manage dynamic responses or contexts within the agent.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_94\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Create generator\nconst {GeneratorsClient} = require('@google-cloud/dialogflow');\nconst client = new GeneratorsClient();\n\nasync function createGenerator() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.createGenerator(request);\n  console.log(response);\n}\ncreateGenerator();\n```\n\n----------------------------------------\n\nTITLE: Listing Networks in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet lists all networks associated with bare metal instances using the Google Cloud Bare Metal Solution API. It should be executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_networks.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_networks.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Workload with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script shows how to create a workload within the Google Cloud App Hub API using Node.js. Ensure that Node.js is setup and the necessary libraries are installed before running the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.create_workload.js\n```\n\n----------------------------------------\n\nTITLE: Using Apigee Connect Client Library - Node.js\nDESCRIPTION: In this JavaScript snippet, the Apigee Connect API Client is imported, and a function to list connections is defined. It illustrates how to create a client instance and fetch connections from a specified project endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {ConnectionServiceClient} = require('@google-cloud/apigee-connect');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new ConnectionServiceClient();\n\nasync function listConnections() {\n  const connections = await client.listConnections({\n    parent: `projects/${projectId}/endpoints/${endpoint}`,\n  });\n  console.info(connections);\n}\nlistConnections();\n```\n\n----------------------------------------\n\nTITLE: Listing Apigee Registry API Versions in Node.js\nDESCRIPTION: Sample code for retrieving and listing API versions from the Apigee Registry using the Google Cloud Node.js library. Provides a method to explore different versions of registered APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.list_api_versions\n```\n\n----------------------------------------\n\nTITLE: Creating LB Traffic Extension with Network Services API in Node.js\nDESCRIPTION: This snippet shows how to create a load balancer traffic extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.create_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Removing IAM Policy in Data Fusion with Node.js\nDESCRIPTION: Executes the removal of an IAM policy from a Google Cloud Data Fusion instance using Node.js. The Google Cloud library is a prerequisite, and the script performs deletion without external inputs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.remove_iam_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Message Buses with Eventarc API in Node.js\nDESCRIPTION: This snippet demonstrates how to list message buses using the Eventarc API. It requires the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.list_message_buses.js\n```\n\n----------------------------------------\n\nTITLE: Simulating Security Health Analytics Custom Module in Javascript\nDESCRIPTION: This snippet illustrates how to simulate Security Health Analytics Custom Modules using the google-cloud-securitycentermanagement library. The sample code is located in the referenced GitHub repository and is executable in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.simulate_security_health_analytics_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB Backup using Node.js\nDESCRIPTION: This JavaScript code snippet illustrates the removal of a specified backup from an AlloyDB database using Node.js. Ensure the correct permissions are in place before running. The snippet does not return an output but removes the selected backup entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Executing Product Deletion Node.js Script\nDESCRIPTION: This snippet shows the command to execute a script that deletes a product using Google Cloud Vision API. Requires Node.js environment and product ID as input. Outputs confirmation of product deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.delete_product.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to update an existing flow in Dialogflow CX using the Node.js client library. It employs the `Flows.update_flow` method to modify the flow's properties. Prior initialization and authentication of the Dialogflow CX client is required before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_UpdateFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callUpdateFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const flow = {}\n\n  const request = {\n    flow: flow,\n    updateMask: {paths: ['field_mask']},\n  };\n\n  // Make the request\n  const [response] = await client.updateFlow(request);\n  console.log(response);\n}\n\ncallUpdateFlow();\n// [END dialogflow_cx_v3_generated_Flows_UpdateFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Question in Data QnA with Node.js\nDESCRIPTION: This sample shows how to retrieve a question using the Question Service in Data QnA. It uses the google-cloud-dataqna package and requires proper GCP configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/question_service.get_question.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Backup using Backup for GKE API in Node.js\nDESCRIPTION: This sample shows how to delete a backup using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Partition with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample shows how to retrieve a partition using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_75\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.get_partition.js\n```\n\n----------------------------------------\n\nTITLE: Listing Provisioning Quotas using Bare Metal Solution API in Node.js\nDESCRIPTION: This code snippet demonstrates listing provisioning quotas using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_provisioning_quotas.js\n```\n\n----------------------------------------\n\nTITLE: Create Model Retail API\nDESCRIPTION: This sample demonstrates how to create a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `createModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.create_model.js`\n```\n\n----------------------------------------\n\nTITLE: Creating a Backup Plan using Backup for GKE API in Node.js\nDESCRIPTION: This sample shows how to create a backup plan using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.create_backup_plan.js\n```\n\n----------------------------------------\n\nTITLE: List Vulnerability Reports in GCP OS Config Service\nDESCRIPTION: Demonstrates how to retrieve vulnerability reports using the zonal OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_vulnerability_reports.js\n```\n\n----------------------------------------\n\nTITLE: Running Privileged Access Manager API Samples\nDESCRIPTION: Examples of how to execute the sample code files for various Privileged Access Manager operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-privilegedaccessmanager/samples/generated/v1/privileged_access_manager.approve_grant.js\n```\n\n----------------------------------------\n\nTITLE: Export Audience List to Sheets - Google Analytics Data API v1alpha\nDESCRIPTION: Implementation for exporting audience list data to Google Sheets using the Google Analytics Data API alpha version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-analytics-data/samples/generated/v1alpha/alpha_analytics_data.sheet_export_audience_list.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Attribute with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This snippet illustrates how to retrieve a data attribute using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the get_data_attribute method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.get_data_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Running the Quickstart for Notebook Instances in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud Notebooks Node.js client. It showcases basic use, ideal for new users who want to quickly understand how to use the library. The output is the successful execution of the initial setup steps for instance management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code for quickstart\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\n\nconst client = new NotebookServiceClient();\n\nasync function quickstart() {\n    // instance creation logic here\n    console.log('Quickstart executed successfully.');\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Update Workloads Secret in Airflow\nDESCRIPTION: Demonstrates updating user workload secrets in a Cloud Composer Airflow environment securely.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.update_user_workloads_secret.js\n```\n\n----------------------------------------\n\nTITLE: Listing Available AI Models\nDESCRIPTION: Sample demonstrating how to list all available AI models using the Model Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/model_service.list_models.js\n```\n\n----------------------------------------\n\nTITLE: Managing Network Services Endpoint Policies with Node.js\nDESCRIPTION: Collection of samples demonstrating CRUD operations for endpoint policies using the Network Services API. Includes creating, reading, updating, deleting and listing endpoint policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Deleting Web Security Scanner Scan Config with Node.js\nDESCRIPTION: This Node.js script provides functionality to delete an existing scan configuration in the Web Security Scanner API. Ensure that the Google Cloud SDK is set up properly before running the script. Execute the script using Node.js in the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.delete_scan_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Machines - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet retrieves a list of machines from a Google Cloud Edge Container project. It utilizes the Google Cloud libraries for proper access and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to list machines\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function listMachines() {\n    const [machines] = await client.listMachines();\n    console.log('Machines:', machines);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Searching Spaces with Google Chat API in Node.js\nDESCRIPTION: This snippet demonstrates how to search for spaces in Google Chat using the Node.js client. It outlines the required parameters for searching effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to search spaces\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function searchSpaces(query) {\n  const res = await client.searchSpaces({query});\n  console.log(res);\n}\nsearchSpaces('your search query');\n```\n\n----------------------------------------\n\nTITLE: Getting Router - Google Cloud Node.js\nDESCRIPTION: This script retrieves information about a specified router using its ID with the Google Cloud Node.js library. It expects the router ID as input and returns the router's details in the output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.get_router.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Fetch the router\nasync function getRouter(id) {\n  const request = {router: id};\n  const [response] = await client.getRouter(request);\n  console.log(response);\n}\n\ngetRouter('your-router-id');\n```\n\n----------------------------------------\n\nTITLE: Updating Tag Key in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet demonstrates how to update a tag key using the Google Cloud Resource Manager API in Node.js. It uses the tag_keys.update_tag_key method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.update_tag_key.js\n```\n\n----------------------------------------\n\nTITLE: Querying Places using Text Search with Node.js\nDESCRIPTION: Example of using the Places API client library to perform a text search. This snippet demonstrates how to instantiate the client, construct a request with a text query, and handle the response including specifying field masks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Places library\nconst {PlacesClient} = require('@googlemaps/places').v1;\n\n// Instantiates a client\nconst placesClient = new PlacesClient();\n\nasync function callSearchText() {\n  // Construct request\n  const request = {\n    textQuery,\n  };\n\n  // Run request\n  const response = await placesClient.searchText(request, {\n    otherArgs: {\n      headers: {\n        'X-Goog-FieldMask': 'places.displayName',\n      },\n    },\n  });\n  console.log(response);\n}\n\ncallSearchText();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Saved Query - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates how to delete a saved query using the Google Cloud Asset API. It requires Node.js and the Google Cloud SDK. Outputs will confirm the successful deletion of the saved query.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for deleting a saved query\n```\n\n----------------------------------------\n\nTITLE: Inserting Local Inventory with Merchant API in Node.js\nDESCRIPTION: This code sample shows how to insert local inventory using the Local Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/local_inventory_service.insert_local_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Listing Namespaces in Data Fusion with Node.js\nDESCRIPTION: This script retrieves all namespaces from a specified Data Fusion instance. Dependencies include the Google Cloud Node.js library for API access. The primary output is a list of namespaces contained within the instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.list_namespaces.js\"\n```\n\n----------------------------------------\n\nTITLE: Fetching Generative Settings for Dialogflow CX Agents\nDESCRIPTION: Sample script demonstrating how to retrieve generative settings for Dialogflow CX agents. Enables configuration inspection for AI-powered conversational experiences.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nagents.get_generative_settings.js\n```\n\n----------------------------------------\n\nTITLE: Listing Crypto Key Versions in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample shows how to list crypto key versions using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.list_crypto_key_versions.js\n```\n\n----------------------------------------\n\nTITLE: Promoting Replica in Cloud Filestore\nDESCRIPTION: This sample code illustrates how to promote a replica of a Filestore instance. It is an advanced operation typically used during failovers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function promoteReplica() {\n    const response = await client.promoteReplica(...);\n    console.log(response);\n}\npromoteReplica();\n```\n\n----------------------------------------\n\nTITLE: Canceling Metadata Job in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet demonstrates how to cancel a metadata job in the Google Cloud Dataplex catalog service. It requires the Google Cloud client library for Node.js. The function interacts with the Dataplex API to terminate a running metadata job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for cancelling a metadata job\n\n```\n\n----------------------------------------\n\nTITLE: Listing Flows in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to list all flows in a Dialogflow CX agent. It utilizes the flows.list_flows method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.list_flows.js\n```\n\n----------------------------------------\n\nTITLE: Stopping an Instance using Bare Metal Solution API in Node.js\nDESCRIPTION: This code shows how to stop an instance using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.stop_instance.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Security Settings in Dialogflow CX using Node.js\nDESCRIPTION: Node.js script to retrieve the details of specified security settings in Dialogflow CX. It involves API client interaction with necessary authentication and outputs the security settings details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_132\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/security_settings_service.get_security_settings.js\n```\n\n----------------------------------------\n\nTITLE: Create GKE Gateway Resource\nDESCRIPTION: Sample code demonstrating how to create a new resource in GKE Connect Gateway using POST method\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_service.post_resource.js\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Session Entity Types in Node.js\nDESCRIPTION: Complete set of operations for session entity type management including creation, deletion, retrieval, listing, and updating session entity types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_46\n\n\n\n----------------------------------------\n\nTITLE: Listing Crypto Keys in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample illustrates how to list crypto keys using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.list_crypto_keys.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Billing Client Library\nDESCRIPTION: Command to install the Google Cloud Billing client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/billing\n```\n\n----------------------------------------\n\nTITLE: Using NotebookService.deleteInstance in Node.js\nDESCRIPTION: Example showing how to delete a notebook instance using the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Suggesting Conversation Summary in Dialogflow (JavaScript)\nDESCRIPTION: This snippet illustrates how to generate a suggested summary for a conversation in Dialogflow. It uses the suggest_conversation_summary method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.suggest_conversation_summary.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Experiments in Dialogflow CX using Node.js\nDESCRIPTION: This code illustrates how to list all experiments in a Dialogflow CX agent. It uses the google-cloud-dialogflow-cx package and assumes proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_90\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.list_experiments.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Restore using GKE Backup API in Node.js\nDESCRIPTION: Sample code for retrieving a specific restore using the GKE Backup API. Used to get detailed information about a restore operation in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_restore.js\n```\n\n----------------------------------------\n\nTITLE: Executing API Spec Deletion Commands\nDESCRIPTION: Sample commands for deleting API specifications from the Apigee Registry using Node.js. These scripts provide command-line methods to remove specific API specs or spec revisions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.delete_api_spec.js\n```\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.delete_api_spec_revision.js\n```\n\n----------------------------------------\n\nTITLE: Command Usage Example - Node.js Package Execution\nDESCRIPTION: Examples of command line usage for executing the App Engine Admin API sample code. Shows how to run individual JavaScript files from the package directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\nnode packages/google-appengine/samples/generated/v1/applications.create_application.js\n```\n\n----------------------------------------\n\nTITLE: Executing Google Cloud Data Plex Data Taxonomy Service Script\nDESCRIPTION: This script provides functionality for managing data taxonomies within Google Cloud Data Plex using Node.js. It is specifically focused on the creation of data attributes, requiring an understanding of the Google Cloud Node.js SDK and appropriate permissions in the Cloud environment. The script is executed via Node.js, with expected outputs related to the management of data attributes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.create_data_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library\nDESCRIPTION: Example command for installing a legacy version of the Google Cloud Service Management client library compatible with Node.js 8.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/service-management@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which may automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Managing API Dependencies in Node.js\nDESCRIPTION: Comprehensive set of samples for creating, deleting, retrieving, listing, and updating API dependencies within the Google Cloud API Hub using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub_dependencies.create_dependency\n```\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub_dependencies.delete_dependency\n```\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub_dependencies.get_dependency\n```\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub_dependencies.list_dependencies\n```\n\nLANGUAGE: javascript\nCODE:\n```\nApi_hub_dependencies.update_dependency\n```\n\n----------------------------------------\n\nTITLE: Accessing a Secret Version with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This snippet illustrates how to access the payload of a secret version using the Google Cloud Secret Manager service (v1beta2). It uses the access_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.access_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Organization Policies with Node.js\nDESCRIPTION: This sample reveals how to analyze organization policies stored in Google Cloud. The script leverages the Google Cloud Asset API to fetch the organization policies, enabling users to understand policy controls in their organization. Access to the required Google Cloud services is essential.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_org_policies.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeOrgPolicies() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeOrgPolicies();\n```\n\n----------------------------------------\n\nTITLE: Fetching Processor Version Details with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific processor version using the Google Cloud DocumentAI API. It uses the document_processor_service to get processor version information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.get_processor_version.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tuned Models with Model Service in JavaScript\nDESCRIPTION: This sample demonstrates listing tuned models using the ModelService in the google-ai-generativelanguage package. The provided command executes the sample, which retrieves and displays a list of tuned models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.list_tuned_models.js`\n```\n\n----------------------------------------\n\nTITLE: Suggesting FAQ Answers using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to suggest FAQ answers using the Dialogflow API. It utilizes the participants.suggest_faq_answers method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_68\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.suggest_faq_answers.js\n```\n\n----------------------------------------\n\nTITLE: Updating Data Attribute Binding with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This example demonstrates how to update a data attribute binding using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the update_data_attribute_binding method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.update_data_attribute_binding.js\n```\n\n----------------------------------------\n\nTITLE: Updating Configuration with Google Cloud Dataform in Node.js\nDESCRIPTION: This Node.js script updates a configuration within a Dataform workspace. It requires configuration data as input and applies the changes upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.update_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list deployments using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available deployments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_deployments.js\n```\n\n----------------------------------------\n\nTITLE: Managing Network Service Bindings\nDESCRIPTION: Example showing how to list service bindings using the Network Services API. Demonstrates usage of the list_service_bindings endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_service_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Analytics Hub Quickstart - Node.js\nDESCRIPTION: Basic quickstart sample demonstrating core functionality of the Analytics Hub API using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: List Route Tables\nDESCRIPTION: Command line usage example for listing route tables in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_route_tables.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node Project\nDESCRIPTION: This command runs the linter and potentially fixes any issues in the codebase for the Google Cloud Node project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Channel Service API Method in Node.js\nDESCRIPTION: This code snippet demonstrates how to execute a specific Cloud Channel Service API method using Node.js. It provides the command to run the sample file, which interacts with the API to perform operations like changing parameters, creating customers, or managing entitlements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.<method_name>.js\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Digest for Node.js\nDESCRIPTION: This snippet updates the Docker digest for the Node.js version used in the project to enhance compatibility and security. Ensure the proper versioning of dependencies is maintained.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n- chore(deps): update node:10 docker digest to 1201e1 (#96)\n```\n\n----------------------------------------\n\nTITLE: Deleting Dataproc Metastore Service\nDESCRIPTION: Sample code showing how to delete an existing Dataproc Metastore service instance\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.delete_service.js\n```\n\n----------------------------------------\n\nTITLE: Clearing Suggestion Feature Config in Dialogflow v2\nDESCRIPTION: Demonstrates how to clear a suggestion feature configuration in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and removes the suggestion feature config from a conversation profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.clear_suggestion_feature_config.js`\n```\n\n----------------------------------------\n\nTITLE: Generating AWS Access Tokens with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to generate an access token for an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This token can be used for authenticating with the Kubernetes API server.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.generate_aws_access_token.js\n```\n\n----------------------------------------\n\nTITLE: Get Service using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `getService` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for retrieving a service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.get_service.js`\n```\n\n----------------------------------------\n\nTITLE: Initializing Encryption Spec using Dialogflow API in Node.js\nDESCRIPTION: Sample code showing how to initialize an encryption specification in Dialogflow. The code demonstrates initialization of encryption settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_86\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/encryption_spec_service.initialize_encryption_spec.js\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_spec sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.create_spec sample using Node.js. It provides the command to run the sample, which creates a new specification within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_spec.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Table Data Profiles with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to list all data profiles at the table level using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_table_data_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Running IAM Policy Troubleshooter Sample\nDESCRIPTION: Command to execute the IAM policy troubleshooter sample code that demonstrates how to analyze IAM policies and permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-policytroubleshooter/samples/generated/v1/iam_checker.troubleshoot_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Update Environment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to update an environment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `updateEnvironment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.update_environment.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Restore Plans for GKE - Node.js\nDESCRIPTION: This snippet shows how to list restore plans in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and may involve filtering options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// List Restore Plans\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.listRestorePlans(request)\n  .then(response => {\n    console.log('Restore plans:', response);\n  })\n  .catch(err => {\n    console.error('Error listing restore plans:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Getting Conversation Model Evaluation in Dialogflow v2\nDESCRIPTION: Demonstrates how to retrieve a conversation model evaluation in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and fetches details of a specific conversation model evaluation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.get_conversation_model_evaluation.js`\n```\n\n----------------------------------------\n\nTITLE: Importing Statefile with Config.import_statefile in Node.js\nDESCRIPTION: This code sample shows how to import a statefile using the Config API. It is part of the google-cloud-config package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.import_statefile.js\n```\n\n----------------------------------------\n\nTITLE: Executing get_app_connection Sample Code\nDESCRIPTION: This script retrieves details about a specific app connection using the BeyondCorp API with Node.js. Ensure all necessary packages are installed to execute this script successfully. The script outputs connection details and requires necessary authentication credentials and input parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.get_app_connection.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Participant in Dialogflow using Node.js\nDESCRIPTION: This example executes a JavaScript command to get details of a participant in Dialogflow using Node.js. Pre-requisites include the Google Cloud Node.js client library setup and a configured Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/participants.get_participant.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Subscription - Node.js\nDESCRIPTION: This snippet illustrates how to delete a subscription to a data exchange using the Analytics Hub API in Node.js. Authentication is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to delete a subscription\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function deleteSubscription() {\n  const request = {\n    name: 'projects/your-project-id/subscriptions/your-subscription-id',\n  };\n  const [response] = await client.deleteSubscription(request);\n  console.log('Subscription deleted:', response);\n}\n\ndeleteSubscription();\n```\n\n----------------------------------------\n\nTITLE: Listing GKE Hub Memberships - JavaScript\nDESCRIPTION: This snippet demonstrates how to list all memberships in GKE Hub using the list_memberships method. It requires the GKE Hub client library for JavaScript. No specific parameters are necessary, and the output is a list of all memberships associated with the user.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.list_memberships.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.list_memberships.js\n```\n\n----------------------------------------\n\nTITLE: Update Subnet in Google Cloud Edge Network\nDESCRIPTION: Sample code for updating a subnet configuration using the Edge Network API in Node.js. Enables flexible subnet management and reconfiguration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.update_subnet\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different test suites in the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Retrieving Table Information\nDESCRIPTION: Example showing how to get information about a specific Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.get_table.js\n```\n\n----------------------------------------\n\nTITLE: Installing BeyondCorp API Client Library - Bash\nDESCRIPTION: This snippet demonstrates how to install the BeyondCorp API client library for Node.js using npm. It is essential to have Node.js and npm installed on your system to use this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/clientconnectorservices\n```\n\n----------------------------------------\n\nTITLE: Google Shopping Autofeed Settings Samples\nDESCRIPTION: Endpoints for managing automatic feed settings including retrieval and updates of autofeed configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Listing Deploy Policies in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to list deploy policies using the Cloud Deploy API. It uses the list_deploy_policies method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_deploy_policies.js\n```\n\n----------------------------------------\n\nTITLE: Delete Member using Google Meet API\nDESCRIPTION: Sample code demonstrating member deletion from a space using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.delete_member.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Do not modify options object, use defaultScopes - Node.js\nDESCRIPTION: This code snippet fixes an issue where the options object was being modified directly. It updates the code to use `defaultScopes` instead. It ensures that the original options object remains unchanged.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"c3558d84568ed53f794f8e8136ddaf96e84630d6\"\n```\n\n----------------------------------------\n\nTITLE: Creating Data Exchange - Node.js\nDESCRIPTION: This snippet demonstrates how to create a data exchange using the Analytics Hub API in Node.js. It requires the Google Cloud SDK and authentication set up prior to execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to create a data exchange\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function createDataExchange() {\n  const request = {\n    // Define your Data Exchange parameters here\n  };\n  const [response] = await client.createDataExchange(request);\n  console.log('Data Exchange created:', response);\n}\n\ncreateDataExchange();\n```\n\n----------------------------------------\n\nTITLE: Feat: Consolidate task details into service API - Node.js\nDESCRIPTION: This code snippet introduces a feature to consolidate task details into the service API and add orchestration result details. This enhancement likely provides a more comprehensive and centralized view of task execution and outcomes, improving monitoring and debugging capabilities. It improves API functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"74f7cfb6947c0b9b35dcddb9ede343877b4938a6\"\n```\n\n----------------------------------------\n\nTITLE: Document Schema Management in Content Warehouse\nDESCRIPTION: Functions for handling document schemas including creation, deletion, retrieval, listing and updating schema definitions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Creating QA Question with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet shows how to use the create_qa_question method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_qa_question.js\n```\n\n----------------------------------------\n\nTITLE: List Networks in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of networks using the Edge Network API in Node.js. Enables exploration and management of network configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_networks\n```\n\n----------------------------------------\n\nTITLE: Deleting a Product Set using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to delete a product set using the Google Cloud Vision API. It uses the ProductSearch.deleteProductSet method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.delete_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Product Set Details with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet demonstrates how to get details of a product set using the Google Cloud Vision API. It uses the product_search.get_product_set method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.get_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Update EKM Configuration JavaScript\nDESCRIPTION: Updates an existing EKM configuration in Google Cloud KMS using Node.js. A complete setup includes the Google Cloud SDK and a configured environment. Outputs a confirmation of successful update to given parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Analyzing Entities with Google Cloud Language API in Node.js\nDESCRIPTION: This snippet demonstrates how to analyze entities in text using the Google Cloud Language API. It requires the 'google-cloud-language' package as a dependency. The input is the text to analyze, and the output is a list of recognized entities along with their types and salience scores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function analyzeEntities(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.analyzeEntities({document});\n  const entities = result.entities;\n  console.log('Entities:');\n  entities.forEach(entity => {\n    console.log(`\tName: ${entity.name}, Type: ${entity.type}, Salience: ${entity.salience}`);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Style Guide Contents using Node.js\nDESCRIPTION: Sample code showing how to retrieve the contents of a style guide using the get_style_guide_contents method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/linting_service.get_style_guide_contents.js\n```\n\n----------------------------------------\n\nTITLE: Merging Capacity Commitments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to merge capacity commitments using the BigQuery Reservation Service API in Node.js. This allows you to combine multiple capacity commitments into a single commitment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.merge_capacity_commitments.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues. It ensures that the code adheres to the project's coding standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Versions with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet illustrates how to list versions using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_versions.js\n```\n\n----------------------------------------\n\nTITLE: Listing Client TLS Policies with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list client TLS policies using the Google Cloud Network Security API. It uses the list_client_tls_policies method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.list_client_tls_policies.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Connection in Node.js\nDESCRIPTION: This Node.js script removes a private connection leveraging the Google Cloud Datastream API, contingent on valid credentials and existing connection parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.delete_private_connection.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Installing Binary Authorization Node.js Client Library with npm\nDESCRIPTION: Command for installing the Google Cloud Binary Authorization client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/binary-authorization\n```\n\n----------------------------------------\n\nTITLE: Installing Phishing Protection Dependencies\nDESCRIPTION: Instructions for installing required dependencies for running the sample code. This must be executed in the samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Executing Data Migration Service Update Conversion Workspace Sample in Node.js\nDESCRIPTION: This snippet shows how to run a sample script that updates a conversion workspace using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and executes a pre-defined script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.update_conversion_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Dialogflow CX Generator\nDESCRIPTION: Command to delete a Dialogflow CX generator using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_105\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/generators.delete_generator.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fetching Repository History - Google Cloud Node.js\nDESCRIPTION: This snippet provides functionality to fetch the history of a repository in Dataform using the Google Cloud Node.js library. Users should run the command in their Node.js environment to access the history.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.fetch_repository_history.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: Installs the necessary dependencies for the Node.js environment to be ready for testing and development. This step is crucial before running any tests to ensure all required packages are available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Server CAs with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to list Server CAs for Google Cloud SQL instances using the `list_server_cas` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.list_server_cas.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Service from Dataproc Metastore with Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a service from Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.get_service.js\n```\n\n----------------------------------------\n\nTITLE: Listing Datastream Routes in Node.js\nDESCRIPTION: This code snippet shows how to list all routes in Google Cloud Datastream using Node.js, crucial for optimizing data paths.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.list_routes.js\n```\n\n----------------------------------------\n\nTITLE: Fetching File Diff - Google Cloud Node.js\nDESCRIPTION: This snippet fetches the differences in files using the Google Cloud Node.js Dataform interface. Users need to run the Node.js script to get the file diff.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.fetch_file_diff.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Conversion Workspace with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet illustrates how to get a conversion workspace using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.get_conversion_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Control with Google Cloud Retail API in Node.js\nDESCRIPTION: This code sample demonstrates how to delete a control using the Google Cloud Retail API. It uses the ControlService client to remove an existing control from a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/control_service.delete_control.js\n```\n\n----------------------------------------\n\nTITLE: Reporting Asset Frames using Migration Center API\nDESCRIPTION: Node.js example demonstrating how to report asset frames using the Migration Center API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.report_asset_frames.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Taxonomies - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet enumerates all data taxonomies within the Google Cloud Dataplex, allowing for management and review of taxonomies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to list data taxonomies\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function listDataTaxonomies() {\n  const request = {parent: 'parent_id'};\n  const [response] = await client.listDataTaxonomies(request);\n  console.log(response);\n}\nlistDataTaxonomies();\n```\n\n----------------------------------------\n\nTITLE: Generating Azure Access Token - Google Cloud Node\nDESCRIPTION: This snippet generates an access token for Azure API operations, essential for authenticating requests made from Google Cloud services to Azure resources. The necessary permissions must be in place for the token to be generated successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.generateAzureAccessToken({name: 'projects/my-project/locations/my-location/azureClients/my-client'});\n```\n\n----------------------------------------\n\nTITLE: Deleting a Connection Profile with Datastream API in Node.js\nDESCRIPTION: This sample demonstrates how to delete a connection profile using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.delete_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Using NotebookService.getEnvironment in Node.js\nDESCRIPTION: Example demonstrating how to get environment details using the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: List Orders using Consumer Procurement Service API\nDESCRIPTION: Node.js example demonstrating how to list orders using the Google Cloud Commerce Consumer Procurement API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1alpha1/consumer_procurement_service.list_orders.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions\nDESCRIPTION: Example showing how to test IAM permissions for Analytics Hub resources\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Listing SKUs in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to list SKUs using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which retrieves a list of SKUs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_skus.js`\n```\n\n----------------------------------------\n\nTITLE: Create Measurement Protocol Secret in Analytics Admin with Node.js\nDESCRIPTION: This code snippet shows how to create a measurement protocol secret using the Google Analytics Admin API in Node.js. The `createMeasurementProtocolSecret` method of the `AnalyticsAdminServiceClient` is used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_measurement_protocol_secret.js)\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Dataplex Client Library\nDESCRIPTION: Example demonstrating how to initialize the Dataplex client and list lakes in a project. Requires proper Google Cloud authentication and enabled Dataplex API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// eslint-disable-next-line node/no-missing-require\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n// const location = 'my-location'\n\n// Creates a client1046198160504\n// eslint-disable-next-line no-unused-vars\nconst client = new DataplexServiceClient();\n\nasync function listLakes() {\n  const [lakes] = await client.listLakes({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(lakes);\n}\nlistLakes();\n```\n\n----------------------------------------\n\nTITLE: Listing Hydrated Deployments with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list hydrated deployments using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available hydrated deployments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_hydrated_deployments.js\n```\n\n----------------------------------------\n\nTITLE: Getting Company with Company Service in Node.js\nDESCRIPTION: This snippet demonstrates how to get a company using the Company Service in the Google Cloud Talent API with Node.js.  The sample code is located at packages/google-cloud-talent/samples/generated/v4beta1/company_service.get_company.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4beta1/company_service.get_company.js`\n```\n\n----------------------------------------\n\nTITLE: Dataform Git Operations: Pull Commits\nDESCRIPTION: Sample script demonstrating how to pull Git commits using the Dataform API in Node.js. Allows retrieving commit history and synchronizing repository state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: List Issue Models\nDESCRIPTION: Sample script for retrieving issue models from the Contact Center Insights API. Demonstrates how to fetch and display available issue models using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample script for listing issue models\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete an entry using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.delete_entry.js\n```\n\n----------------------------------------\n\nTITLE: Creating NFS Share - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to create an NFS share in Google Cloud's Bare Metal Solution using Node.js. It requires the Google Cloud client libraries and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function createNfsShare() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION',\n    nfsShareId: 'YOUR_NFS_SHARE_ID',\n    nfsShare: {\n      // NFS share configuration here\n    },\n  };\n  const [operation] = await client.createNfsShare(request);\n  const [response] = await operation.promise();\n  console.log('NFS Share created:', response);\n}\ncreateNfsShare();\n```\n\n----------------------------------------\n\nTITLE: List Certificates using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to list Certificates using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.list_certificates.js\n```\n\n----------------------------------------\n\nTITLE: Listing EndpointPolicies with Network Services API in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Network Services API client to list EndpointPolicies. It initializes the client, constructs a request with optional pagination parameters, and iterates through the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The project and location from which the EndpointPolicies should be\n *  listed, specified in the format `projects/* /locations/global`.\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of EndpointPolicies to return per call.\n */\n// const pageSize = 1234\n/**\n *  The value returned by the last `ListEndpointPoliciesResponse`\n *  Indicates that this is a continuation of a prior\n *  `ListEndpointPolicies` call, and that the system should return the\n *  next page of data.\n */\n// const pageToken = 'abc123'\n\n// Imports the Networkservices library\nconst {NetworkServicesClient} =\n  require('@google-cloud/networkservices').v1beta1;\n\n// Instantiates a client\nconst networkservicesClient = new NetworkServicesClient();\n\nasync function callListEndpointPolicies() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await networkservicesClient.listEndpointPoliciesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListEndpointPolicies();\n```\n\n----------------------------------------\n\nTITLE: Getting Project Settings for Artifact Registry using Node.js\nDESCRIPTION: This snippet illustrates how to get project settings for Google Cloud Artifact Registry. It uses the get_project_settings method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_project_settings.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Dashboard using Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a dashboard using the Monitoring Dashboards service. It requires the google-monitoring-dashboard package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/generated/v1/dashboards_service.create_dashboard.js\n```\n\n----------------------------------------\n\nTITLE: Listing Domain Registrations - JavaScript\nDESCRIPTION: This JavaScript snippet shows how to use the Google Cloud Domains client library to list domain registrations for a specified project and location. It initializes the DomainsClient, constructs the request, and logs the list of registrations retrieved from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {DomainsClient} = require('@google-cloud/domains');\n\n// TODO(developer): replace with your preferred values.\n// const projectId = 'my-project'\n// const location = 'my-location'\n\n// Creates a client\nconst client = new DomainsClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function listRegistrations() {\n  const [registrations] = await client.listRegistrations({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(registrations);\n}\nlistRegistrations();\n```\n\n----------------------------------------\n\nTITLE: Destroying a Secret Version with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This snippet illustrates how to destroy a secret version using the Google Cloud Secret Manager service (v1beta2). It employs the destroy_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.destroy_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating Trigger with Eventarc in Node.js\nDESCRIPTION: Facilitates the creation of a trigger using Eventarc within a Node.js framework. Prerequisites include authentication and Node.js environment setup. Command-line execution returns results of the trigger creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Merchant Center Account Link in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to delete a Merchant Center account link using the Google Cloud Retail API. It uses the deleteMerchantCenterAccountLink method of the MerchantCenterAccountLinkService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/merchant_center_account_link_service.delete_merchant_center_account_link.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.get_private_connection in Node.js\nDESCRIPTION: Sample code for retrieving a private connection using the Google Cloud Datastream API in Node.js. This script demonstrates how to get details about a specific private connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.get_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Listing Networks - Google Cloud Node.js\nDESCRIPTION: This script lists all networks available in the Google Cloud Edge Network without requiring any input parameters, outputting details of each network.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_networks.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all networks\nasync function listNetworks() {\n  const [networks] = await client.listNetworks({});\n  console.log('Networks:', networks);\n}\n\nlistNetworks();\n```\n\n----------------------------------------\n\nTITLE: Initializing Node.js Samples for Cloud Media Translation\nDESCRIPTION: This snippet provides the command sequence to set up a Node.js environment for running Cloud Media Translation samples. It includes navigating to the 'samples' directory and installing the required npm packages. This is crucial to ensure all dependencies are met before executing the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"cd samples\\n\\nnpm install\\n\\ncd ..\"\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Delete Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to delete a build trigger using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.delete_build_trigger.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Secret with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This code sample shows how to delete a secret and all of its versions using the Google Cloud Secret Manager service (v1beta2). It uses the delete_secret method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.delete_secret.js\n```\n\n----------------------------------------\n\nTITLE: Updating Issue Models in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update issue models using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_issue_model method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_issue_model.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Asset Feed using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete an asset feed using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.delete_feed.js`\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using LFP Inventory Service with Node.js\nDESCRIPTION: Code sample showing how to insert inventory data using the LFP Inventory Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_inventory_service.insert_lfp_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Model in AutoML with Node.js\nDESCRIPTION: This snippet illustrates how to create a model in AutoML using Node.js. It demonstrates the process of configuring and initiating the model creation, with necessary parameters and expected outcomes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function createModel(projectId, computeRegion, datasetId, modelName) {\n  const model = {\n    displayName: modelName,\n    datasetId: datasetId,\n    textClassification: {\n      annotationSpecId: 'your-annotation-spec-id',\n    },\n  };\n  const request = {\n    parent: client.locationPath(projectId, computeRegion),\n    model: model,\n  };\n  const [operation] = await client.createModel(request);\n  const [response] = await operation.promise();\n  console.log(`Model created: ${response.name}`);\n}\n\ncreateModel('your-project-id', 'us-central1', 'your-dataset-id', 'My Model');\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet provides the shell command to install all the dependencies for the Node.js setup using npm. It is critical for preparing the environment before running or testing code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Workflows Node.js Client\nDESCRIPTION: Command to install the Google Cloud Workflows client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/workflows\n```\n\n----------------------------------------\n\nTITLE: Removing Assets from Group using Migration Center API\nDESCRIPTION: Node.js example showing how to remove assets from a group in Migration Center\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.remove_assets_from_group.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Security Settings Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to delete security settings using the Dialogflow CX API in a Node.js environment. It requires the `@google-cloud/dialogflow-cx` package. The script is triggered from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/security_settings_service.delete_security_settings.js`\n```\n\n----------------------------------------\n\nTITLE: Tagging API Deployment Revision using Registry service in Node.js\nDESCRIPTION: This snippet illustrates how to use the tag_api_deployment_revision method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.tag_api_deployment_revision.js\n```\n\n----------------------------------------\n\nTITLE: Listing Comments on a Support Case in Google Cloud\nDESCRIPTION: Sample script demonstrating how to list comments for a specific support case using the Comment Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/comment_service.list_comments.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Entitlement Details - Node.js Cloud Channel API\nDESCRIPTION: Example showing how to get entitlement details using Cloud Channel Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.get_entitlement.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR getManagementServer Sample\nDESCRIPTION: This sample demonstrates how to get a management server using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Creating a Backup in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet illustrates how to create a backup for an AlloyDB instance, a crucial part of data management. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function createBackup() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Feedback Label with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to use the create_feedback_label method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_feedback_label.js\n```\n\n----------------------------------------\n\nTITLE: Document Operations in Content Warehouse\nDESCRIPTION: Core document management functions including create, read, update, delete operations as well as ACL management and document search capabilities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Listing Secret Versions in Google Cloud using Node.js\nDESCRIPTION: This code snippet lists all versions of a specified secret in the Google Cloud Secret Manager using Node.js. Dependencies include the `@google-cloud/secret-manager` package. Input parameters include the secret ID and the project ID. It returns a list of secret versions in the specified secret, useful for auditing or managing secret states.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.list_secret_versions.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to update an existing flow in Dialogflow CX. It utilizes the flows.update_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.update_flow.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Runtime with AI Platform Notebooks API in Node.js\nDESCRIPTION: This sample demonstrates how to create a new runtime using the AI Platform Notebooks Managed Notebook Service API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.create_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Intents in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates exporting intents from Dialogflow CX using the Node.js client library. The `Intents.export_intents` method is used. Ensure the Dialogflow CX client is properly initialized and authenticated before running.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Intents_ExportIntents_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callExportIntents() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [operation] = await client.exportIntents(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallExportIntents();\n// [END dialogflow_cx_v3_generated_Intents_ExportIntents_async]\n```\n\n----------------------------------------\n\nTITLE: Importing Intents in Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to import intents into Dialogflow CX using the Node.js client library. It uses the `Intents.import_intents` method to import intents from either a Google Cloud Storage bucket or from inline data. Ensure that the Dialogflow CX client is properly initialized and authenticated before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Intents_ImportIntents_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callImportIntents() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [operation] = await client.importIntents(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallImportIntents();\n// [END dialogflow_cx_v3_generated_Intents_ImportIntents_async]\n```\n\n----------------------------------------\n\nTITLE: Updating Patch Deployment - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet updates an existing patch deployment in the OS Config service. It requires a patch deployment ID and the updated details. Node.js client library for Google Cloud is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for updating patch deployment\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function updatePatchDeployment(deploymentId, deploymentDetails) {\n    const request = {patchDeployment: deploymentDetails};\n    await client.updatePatchDeployment(request);\n    console.log(`Updated patch deployment: ${deploymentId}`);\n}\nupdatePatchDeployment('PATCH_DEPLOYMENT_ID', { /* deployment details */ });\n```\n\n----------------------------------------\n\nTITLE: Updating Dataplex Environment\nDESCRIPTION: Executes a Node.js script to update an environment in Dataplex. Google Cloud setup and authentication are required. Script 'dataplex_service.update_environment.js' carries out the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_66\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.update_environment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Backup for Cloud Filestore\nDESCRIPTION: This example shows how to delete a backup in Google Cloud Filestore. Proper authorization is required to perform this action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function deleteBackup() {\n    const response = await client.deleteBackup(...);\n    console.log(response);\n}\ndeleteBackup();\n```\n\n----------------------------------------\n\nTITLE: Generating Stub of Library\nDESCRIPTION: This commit generates the initial stub of the Node.js Managed Identities library. This is an important first step in the development process, providing the foundational structure for the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: Markdown\nCODE:\n```\n* generate stub of library ([4bebad5](https://www.github.com/googleapis/nodejs-managed-identities/commit/4bebad598be8cf7280bfcd9a2e8a6142a6778e1a))\n```\n\n----------------------------------------\n\nTITLE: Commit References in Markdown\nDESCRIPTION: Git commit hash references used to track specific changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e)\n[e7409c8](https://github.com/googleapis/google-cloud-node/commit/e7409c87febcf33359a2d36ae4551f502b8a2f93)\n[8c61279](https://github.com/googleapis/google-cloud-node/commit/8c6127917d14c6d06c56f1061a5ac293d333f397)\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Plans with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to list backup plans using the BackupDR service in Node.js. It uses the google-cloud-node library and displays the command-line usage to execute the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_backup_plans.js`\n```\n\n----------------------------------------\n\nTITLE: Running Speech API Sample Files\nDESCRIPTION: Example command for running a sample file from the Google Cloud Speech Node.js samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-speech/samples/generated/v1/adaptation.create_custom_class.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Private Connection with Datastream API in Node.js\nDESCRIPTION: This sample shows how to create a private connection using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.create_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Version Client Libraries\nDESCRIPTION: Demonstrates how to install client libraries for legacy Node.js versions using npm dist-tags\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/datalabeling@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Get Management DNS Zone Binding in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_management_dns_zone_binding sample for the VMware Engine API. This retrieves DNS zone binding information for management components.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_management_dns_zone_binding.js\n```\n\n----------------------------------------\n\nTITLE: Send Command to Device - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to send a command to a device using Google Cloud IoT Device Manager in Node.js. It utilizes the google-cloud-node library. Proper authentication and project setup are required to execute the sample successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Installing Google BigQuery Connection Node.js Client Library\nDESCRIPTION: This command installs the Google BigQuery Connection client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-connection\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Redis Node.js Client\nDESCRIPTION: Command to install the Google Cloud Redis Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/redis\n```\n\n----------------------------------------\n\nTITLE: Installing Apigee Connect Client Library - Node.js\nDESCRIPTION: This snippet demonstrates how to install the Apigee Connect client library using npm. It is a prerequisite step to utilize the client in a Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apigee-connect\n```\n\n----------------------------------------\n\nTITLE: Code Changes - Optional Request Parameters\nDESCRIPTION: Made request parameter optional in all method calls to improve flexibility when making API requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Before fix: request was required\nfunction someMethod(request) { ... }\n\n// After fix: request is optional\nfunction someMethod(request?) { ... }\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Cloud with Node.js\nDESCRIPTION: Removes a private cloud in VMware Engine using JavaScript executed via Node.js. Ensure Google Cloud SDKs are available. Execute the script with the provided command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_private_cloud.js\n```\n\n----------------------------------------\n\nTITLE: Deferred Client Initialization in Node.js\nDESCRIPTION: Implements deferred client initialization in the Google Cloud IoT Node.js library. This optimization allows the client to be initialized only when it's actually needed, improving startup time and resource utilization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n\"* deferred client initialization ([#283](https://www.github.com/googleapis/nodejs-iot/issues/283)) ([b70a193](https://www.github.com/googleapis/nodejs-iot/commit/b70a1938f4254fff0f3839bca5871207b8d97c35))\"\n```\n\n----------------------------------------\n\nTITLE: Creating Secondary AlloyDB Cluster using Node.js\nDESCRIPTION: This code snippet in JavaScript illustrates the creation of a secondary AlloyDB cluster leveraging the Google Cloud Node.js client library. The snippet serves to facilitate the setup of a secondary cluster linked to a primary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_secondary_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Regenerate Unit Tests in Node.js\nDESCRIPTION: Regenerates the unit tests for the Google Cloud IoT Node.js library.  This ensures that the tests are up-to-date with the latest code changes and continue to provide accurate coverage and validation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n\"* regenerate unit tests ([#333](https://www.github.com/googleapis/nodejs-iot/issues/333)) ([f4a35b3](https://www.github.com/googleapis/nodejs-iot/commit/f4a35b369297d7ff91793f59a0451931d4abff94))\"\n```\n\n----------------------------------------\n\nTITLE: Reverting Instance in Cloud Filestore\nDESCRIPTION: This code snippet allows reverting a Filestore instance to a previous state by utilizing snapshots. It is critical for recovery operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function revertInstance() {\n    const response = await client.revertInstance(...);\n    console.log(response);\n}\nrevertInstance();\n```\n\n----------------------------------------\n\nTITLE: Renaming an NFS Share using Bare Metal Solution API in Node.js\nDESCRIPTION: This code shows how to rename an NFS share using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.rename_nfs_share.js\n```\n\n----------------------------------------\n\nTITLE: Web Risk Service Usage Commands\nDESCRIPTION: Command line usage instructions for running Web Risk service sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-webrisk/samples/generated/v1/web_risk_service.compute_threat_list_diff.js\nnode packages/google-cloud-webrisk/samples/generated/v1/web_risk_service.create_submission.js\nnode packages/google-cloud-webrisk/samples/generated/v1/web_risk_service.search_hashes.js\nnode packages/google-cloud-webrisk/samples/generated/v1/web_risk_service.search_uris.js\nnode packages/google-cloud-webrisk/samples/generated/v1/web_risk_service.submit_uri.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Approve Build Sample\nDESCRIPTION: This sample demonstrates how to approve a build using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Get Thread Read State - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to retrieve the read state of a specific thread within a Google Chat space using Node.js. The code uses the `get_thread_read_state` method of the `Chat_service` to check whether a user has read the latest messages in a particular thread.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to update streams in Node.js\nDESCRIPTION: Example showing how to update streams using the Google Cloud Datastream API. This sample demonstrates the update_stream method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.update_stream.js\n```\n\n----------------------------------------\n\nTITLE: Remove IAM Policy from Dataproc Metastore\nDESCRIPTION: Example showing how to remove an IAM policy from a Dataproc Metastore resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1alpha/dataproc_metastore.remove_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Searching Catalogs in Private Catalog with Node.js\nDESCRIPTION: This sample demonstrates how to search catalogs using the Private Catalog API in Node.js. It provides the command to execute the sample and links to the source code for detailed implementation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-privatecatalog/samples/generated/v1beta1/private_catalog.search_catalogs.js`\n```\n\n----------------------------------------\n\nTITLE: Update Entity Type - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to update an entity type using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `updateEntityType` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/entity_types.update_entity_type.js`\n```\n\n----------------------------------------\n\nTITLE: Installing AlloyDB Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud AlloyDB client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/alloydb\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Library\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Managing Domain Mappings in App Engine\nDESCRIPTION: Code samples for handling domain mapping operations including creating, deleting, getting, listing and updating domain mappings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js library. They include unit tests, sample integration tests, and system tests. Each command should be executed in the project's root directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Network Services API Methods - JavaScript\nDESCRIPTION: Collection of Network Services API methods for managing network infrastructure including gateways, routes, meshes and policies. Methods are divided into v1 and v1beta1 endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Fetching File Git Statuses - Google Cloud Node.js\nDESCRIPTION: This snippet retrieves the Git statuses of files from Dataform using the Google Cloud Node.js library. The associated command should be run to fetch the statuses.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.fetch_file_git_statuses.js\n```\n\n----------------------------------------\n\nTITLE: Creating Security Settings Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to create security settings using the Dialogflow CX API in Node.js. The `@google-cloud/dialogflow-cx` package is required. The script can be executed via the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/security_settings_service.create_security_settings.js`\n```\n\n----------------------------------------\n\nTITLE: Proposing a Blueprint with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to propose a blueprint using the Google Telco Automation API. It provides the command to execute the sample code that submits a blueprint proposal.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.propose_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Delete User Workloads Secret - Node.js\nDESCRIPTION: Script to delete user workload secrets in a Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.delete_user_workloads_secret.js\n```\n\n----------------------------------------\n\nTITLE: Getting Policy Binding - Node.js\nDESCRIPTION: This snippet retrieves a policy binding specified by its ID using the Google Cloud Node.js client library. It requires the `google-iam` package. Input is the binding ID, and the output is the binding details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.get_policy_binding.js\n```\n\n----------------------------------------\n\nTITLE: List Zones in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of zones using the Edge Network API in Node.js. Enables geographic zone discovery for distributed cloud infrastructure.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_zones\n```\n\n----------------------------------------\n\nTITLE: Updating a Conversation Profile in Dialogflow (JavaScript)\nDESCRIPTION: This code sample demonstrates updating an existing conversation profile using the Dialogflow API. It utilizes the update_conversation_profile method of the conversation_profiles service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.update_conversation_profile.js\n```\n\n----------------------------------------\n\nTITLE: Get GenerativeQuestionsFeatureConfig Retail API\nDESCRIPTION: This sample demonstrates how to retrieve a GenerativeQuestionsFeatureConfig from the Retail API using Node.js. It involves setting up the necessary authentication and calling the `getGenerativeQuestionsFeatureConfig` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/generative_question_service.get_generative_questions_feature_config.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Clusters - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet lists all clusters in a specified Google Cloud Edge Container project. It requires the Google Cloud libraries for authentication and access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to list clusters\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function listClusters() {\n    const [clusters] = await client.listClusters();\n    console.log('Clusters:', clusters);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Conversation Profile Suggestion Features in Dialogflow\nDESCRIPTION: Sample code for setting suggestion feature configurations for conversation profiles in Dialogflow. Demonstrates how to modify conversation profile settings for AI-driven suggestions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nConversation_profiles.set_suggestion_feature_config\n```\n\n----------------------------------------\n\nTITLE: Listing VOD Stitch Details in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet retrieves the details of video stitching for the Google Cloud Video Stitcher service. It facilitates the examination of stitching outcomes for specific VOD resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function listVodStitchDetails() {\n  const [vodStitchDetails] = await client.listVodStitchDetails();\n  console.log('VOD Stitch Details:');\n  vodStitchDetails.forEach(detail => console.log(detail));\n}\nlistVodStitchDetails();\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Delete Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to delete a worker pool using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Getting Repository - Google Cloud Node.js\nDESCRIPTION: This snippet allows users to fetch a specific repository's details in Dataform using Google Cloud Node.js library. To access this information, execute the provided command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.get_repository.js\n```\n\n----------------------------------------\n\nTITLE: List Routers in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of routers using the Edge Network API in Node.js. Supports network routing infrastructure discovery and management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_routers\n```\n\n----------------------------------------\n\nTITLE: Manage Airflow Snapshots - Node.js\nDESCRIPTION: Handles saving and loading snapshots of Airflow environments for backup and restoration purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.save_snapshot.js\n```\n\n----------------------------------------\n\nTITLE: Listing Previews with Config.list_previews in Node.js\nDESCRIPTION: This snippet shows how to list previews using the Config API. It's part of the google-cloud-config package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.list_previews.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Restore using GKE Backup API in Node.js\nDESCRIPTION: Sample code for updating a specific restore using the GKE Backup API. Used to modify details or settings of an existing restore operation in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.update_restore.js\n```\n\n----------------------------------------\n\nTITLE: Getting Provisioning Config - Google Cloud Node.js\nDESCRIPTION: This snippet shows how to retrieve the provisioning configuration details in the Google Cloud Bare Metal Solution using Node.js. Ensure you have the necessary permissions set for your API request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function getProvisioningConfig() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/provisioningConfigs/YOUR_PROVISIONING_CONFIG_ID',\n  };\n  const response = await client.getProvisioningConfig(request);\n  console.log('Provisioning Config details:', response);\n}\ngetProvisioningConfig();\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Managing Workflow Executions and Workflows - CLI Usage Commands\nDESCRIPTION: Command line usage instructions for executing the workflow samples. Shows how to install dependencies and run individual sample files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Updating Asset Feeds with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample demonstrates how to update an existing feed in the Google Cloud Asset Inventory service using the v1p2beta1 API version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p2beta1/asset_service.update_feed.js\n```\n\n----------------------------------------\n\nTITLE: Listing Support Cases in Google Cloud\nDESCRIPTION: Sample script demonstrating how to list support cases using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.list_cases.js\n```\n\n----------------------------------------\n\nTITLE: Replacing Access Levels with Access Context Manager API in Node.js\nDESCRIPTION: This snippet shows how to replace access levels using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.replace_access_levels.js\n```\n\n----------------------------------------\n\nTITLE: Executing Data Migration Service Update Connection Profile Sample in Node.js\nDESCRIPTION: This snippet demonstrates how to run a sample script that updates a connection profile using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and executes a pre-defined script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.update_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Create Search Ads 360 Link in Analytics Admin using Node.js\nDESCRIPTION: This code demonstrates creating a Search Ads 360 link within the Google Analytics Admin API using Node.js. It uses the `createSearchAds360Link` method of the `AnalyticsAdminServiceClient`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_search_ads360_link.js)\n```\n\n----------------------------------------\n\nTITLE: Reading a File with Google Cloud Dataform in Node.js\nDESCRIPTION: This script reads a file from a Dataform workspace using Node.js. To use it, execute the script via Node.js. It requires a file path as input and returns the file's content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.read_file.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file. It typically uses a testing framework like Mocha or Jest to run the tests and report the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating a Google Cloud Function - Node.js\nDESCRIPTION: This code snippet is used to create a new Google Cloud Function using the cloud_functions_service. It's essential for deploying serverless functions to handle events or HTTP requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.create_function.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Taxonomies with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This code example shows how to list data taxonomies using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the list_data_taxonomies method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.list_data_taxonomies.js\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_api sample\nDESCRIPTION: This snippet shows how to execute the Api_hub.create_api sample in Node.js. It provides the command to run the sample, which creates a new API within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_api.js`\n```\n\n----------------------------------------\n\nTITLE: Delete Spoke\nDESCRIPTION: Command line usage example for deleting a spoke in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.delete_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Listing Key Handles with Autokey JavaScript\nDESCRIPTION: Lists all key handles available under the Autokey configuration in Google Cloud KMS. This JavaScript code snippet requires authenticated access to the Google Cloud environment. It returns a list of key handles with their metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Updating Customer in Google Cloud Channel Service - JavaScript\nDESCRIPTION: This snippet updates customer information in the Google Cloud Channel service. It shows how to call the update_customer method to modify customer details. Ensure you have access to the Google Cloud APIs and have the necessary authorization set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for updating a customer\n// Visit the link for full implementation\nconst {CloudChannelServiceClient} = require('@google-cloud/channel');\nconst client = new CloudChannelServiceClient();\n\nasync function updateCustomer() {\n    // Implementation here...\n}\n```\n\n----------------------------------------\n\nTITLE: Get Advisory Notification using Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve a single advisory notification using the Advisory Notifications API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-advisorynotifications/samples/generated/v1/advisory_notifications_service.get_notification.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs integration tests for the samples in the project using npm. These tests verify the interaction between different parts of the sample applications, ensuring they work correctly together.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run sample integration tests.\\nnpm run samples-test\"\n```\n\n----------------------------------------\n\nTITLE: Delete Private Connection in VMware Engine using Node.js\nDESCRIPTION: Command to execute the delete_private_connection sample for the VMware Engine API. This allows deletion of private connections in Google Cloud VMware Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Translating Text using Google Cloud Translation API in Node.js\nDESCRIPTION: A quickstart example showing how to use the Google Cloud Translation API to translate text from English to Russian. It demonstrates client instantiation, translation request, and handling the translation response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment the following line before running the sample.\n */\n// const projectId = 'YOUR_PROJECT_ID';\n\n// Imports the Google Cloud client library\nconst {Translate} = require('@google-cloud/translate').v2;\n\n// Instantiates a client\nconst translate = new Translate({projectId});\n\nasync function quickStart() {\n  // The text to translate\n  const text = 'Hello, world!';\n\n  // The target language\n  const target = 'ru';\n\n  // Translates some text into Russian\n  const [translation] = await translate.translate(text, target);\n  console.log(`Text: ${text}`);\n  console.log(`Translation: ${translation}`);\n}\n\nquickStart();\n```\n\n----------------------------------------\n\nTITLE: Creating Message Bus with Eventarc in Node.js\nDESCRIPTION: Enables the creation of a message bus using Eventarc in a Node.js setup. Ensure Node.js is installed and authenticated. Execute the code via command-line to obtain the message bus creation results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_message_bus.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backups in Cloud Filestore\nDESCRIPTION: This sample code lists all backups associated with a specific project in Cloud Filestore. It is useful for monitoring backup status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function listBackups() {\n    const response = await client.listBackups(...);\n    console.log(response);\n}\nlistBackups();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This snippet demonstrates how to install the necessary dependencies for the project using npm (Node Package Manager). It is a crucial step to set up the development environment before running tests or contributing code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Using VM Migration API - Create Clone Job\nDESCRIPTION: Example code demonstrating how to create a clone job for VM migration using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.create_clone_job.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Model - Node.js\nDESCRIPTION: This snippet shows how to delete a model using the Financial Services API in Node.js. Required dependencies include the Google Cloud client library and appropriate setup for authentication. The function prepares the request with the model identifier and logs the deletion confirmation after execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete model\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function deleteModel() {\n    const request = { /* parameters for deletion */ };\n    const response = await client.deleteModel(request);\n    console.log(response);\n}\ndeleteModel();\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create Secondary Instance in Node.js\nDESCRIPTION: Explains how to create a secondary AlloyDB instance with the Node.js client library. It involves setting up the AlloyDBAdmin client and using the `createSecondaryInstance` method. This sample requires the project to be properly configured and authenticated.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_secondary_instance | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_secondary_instance.js)\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.3.0 Changes in Markdown\nDESCRIPTION: Documents the changes in version 0.3.0 of the Oracle Database service, including breaking changes, new features, and miscellaneous chores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/oracledatabase-v0.2.1...oracledatabase-v0.3.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([#6140](https://github.com/googleapis/google-cloud-node/issues/6140)) ([2f96b1f](https://github.com/googleapis/google-cloud-node/commit/2f96b1f95dd6b7cb89871b56e5ea5aadf5454292))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Certificate Manager Setup Instructions\nDESCRIPTION: Instructions for setting up the environment before running the samples. Requires installing dependencies in the samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Structured changelog entries documenting version updates, bug fixes, features, and breaking changes for the Google Cloud Node Connectors package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [0.4.1](https://github.com/googleapis/google-cloud-node/compare/connectors-v0.4.0...connectors-v0.4.1) (2025-03-19)\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n\n## [0.4.0](https://github.com/googleapis/google-cloud-node/compare/connectors-v0.3.0...connectors-v0.4.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([e7409c8](https://github.com/googleapis/google-cloud-node/commit/e7409c87febcf33359a2d36ae4551f502b8a2f93))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/connectors-v0.2.0...connectors-v0.3.0) (2024-05-21)\n\n\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/connectors-v0.1.0...connectors-v0.2.0) (2024-03-29)\n\n\n### Features\n\n* [Many APIs] add several fields to manage state of database encryption update ([#5187](https://github.com/googleapis/google-cloud-node/issues/5187)) ([1952fbe](https://github.com/googleapis/google-cloud-node/commit/1952fbe432b96115278d42e5c1dbdbc7de39036b))\n\n## 0.1.0 (2023-09-14)\n\n\n### Features\n\n* Add initial files for google.cloud.connectors.v1 ([#4641](https://github.com/googleapis/google-cloud-node/issues/4641)) ([6f5461a](https://github.com/googleapis/google-cloud-node/commit/6f5461ac147e39c7028cabe3a7943a2e48f06196))\n```\n\n----------------------------------------\n\nTITLE: Diagnosing a Runtime with AI Platform Notebooks API in Node.js\nDESCRIPTION: This sample demonstrates how to diagnose issues with a runtime using the AI Platform Notebooks Managed Notebook Service API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.diagnose_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Connection Profile with Datastream API in Node.js\nDESCRIPTION: This sample demonstrates how to create a connection profile using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.create_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Channel with Eventarc in Node.js\nDESCRIPTION: This script deletes a channel previously created in Google Cloud Eventarc using Node.js software environment. Ensure masking of removal action by having Node.js installed and authenticated, with execution showcasing deletion results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.delete_channel.js\n```\n\n----------------------------------------\n\nTITLE: Locking Deployment with Config.lock_deployment in Node.js\nDESCRIPTION: This snippet shows how to lock a deployment using the Config API. It's part of the google-cloud-config package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.lock_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Workflow Invocation - Google Cloud Node.js\nDESCRIPTION: This snippet allows users to delete a workflow invocation in Dataform using the Google Cloud Node.js library. The action can be executed by running the provided Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.delete_workflow_invocation.js\n```\n\n----------------------------------------\n\nTITLE: Getting Control with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet shows how to retrieve a control using the Google Cloud Retail API. It utilizes the ControlService client to fetch the details of a specific control from a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/control_service.get_control.js\n```\n\n----------------------------------------\n\nTITLE: Search Grants Usage Command - Node.js\nDESCRIPTION: Shell command to execute the search grants sample code for the Privileged Access Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-privilegedaccessmanager/samples/generated/v1/privileged_access_manager.search_grants.js\n```\n\n----------------------------------------\n\nTITLE: Delete Model Retail API\nDESCRIPTION: This sample demonstrates how to delete a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `deleteModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.delete_model.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Session Entity Type using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to create a session entity type using the Dialogflow API. It utilizes the session_entity_types.create_session_entity_type method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/session_entity_types.create_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Installing Policy Troubleshooter IAM Client Library\nDESCRIPTION: NPM installation command for the Google Cloud Policy Troubleshooter IAM client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/policy-troubleshooter-iam\n```\n\n----------------------------------------\n\nTITLE: Updating Connection Profile in Node.js\nDESCRIPTION: This Node.js script updates a connection profile using Google Cloud Datastream API, essential for modifying connection configurations. It requires existing profile details and authorization access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.update_connection_profile.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Get Job Metrics with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve job metrics using the Dataflow API in Node.js. The command executes the `get_job_metrics.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/metrics_v1_beta3.get_job_metrics.js`\n```\n\n----------------------------------------\n\nTITLE: Executing sample code for Google Kubernetes Engine operations in Node.js\nDESCRIPTION: A common format for running the sample files for Google Kubernetes Engine management operations using Node.js. Each sample demonstrates a specific operation like updating cluster settings or configuring node pools.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-container/samples/generated/v1beta1/cluster_manager.set_labels.js\n```\n\n----------------------------------------\n\nTITLE: Rolling Back AWS Node Pool Update - Google Cloud Node\nDESCRIPTION: This snippet provides the ability to rollback an update made to an AWS node pool. Having this functionality is essential for restoring previous states of node pools when updates do not behave as expected.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.rollbackAwsNodePoolUpdate({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster/awsNodePools/my-node-pool'});\n```\n\n----------------------------------------\n\nTITLE: Updating Glossary Entry using Google Cloud Translation API - JavaScript\nDESCRIPTION: Updates a glossary entry in the Google Cloud Translation service. The script requires the Google Cloud Translation client and proper authentication setup. It utilizes the glossary ID and entry details as parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Update a glossary entry\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function updateGlossaryEntry() {\n  // Your code here to update glossary entry\n}\nupdateGlossaryEntry();\n```\n\n----------------------------------------\n\nTITLE: List Aggregated Jobs with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to list aggregated jobs using the Dataflow API in Node.js. The command executes the `aggregated_list_jobs.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.aggregated_list_jobs.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Report Detail with Storage Insights API - Node.js\nDESCRIPTION: This code snippet retrieves details of a specific report using Google Cloud Storage Insights API. Ensure all dependencies are installed. It runs under Node.js with requisite environment configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.get_report_detail.js\n```\n\n----------------------------------------\n\nTITLE: Computing Deployment Status with Telco Automation API in Node.js\nDESCRIPTION: This sample computes the status of a given deployment using the Telco Automation API. The script prepares the request parameters necessary to retrieve deployment information and outputs the current deployment status once the request is executed successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { TelcoAutomationClient } = require('@google-cloud/telcoautomation');\n\nconst client = new TelcoAutomationClient();\n\nasync function computeDeploymentStatus() {\n  const request = {/* request parameters */};\n  const [response] = await client.computeDeploymentStatus(request);\n  console.log('Deployment Status:', response);\n}\n\ncomputeDeploymentStatus();\n```\n\n----------------------------------------\n\nTITLE: Query Hub Status with Node.js\nDESCRIPTION: Queries the current status of a Network Connectivity Hub using the v1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.query_hub_status.js\n```\n\n----------------------------------------\n\nTITLE: Setting Suggestion Feature Config in Dialogflow (JavaScript)\nDESCRIPTION: This snippet illustrates how to set the suggestion feature configuration for a conversation profile in Dialogflow. It uses the set_suggestion_feature_config method of the conversation_profiles service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.set_suggestion_feature_config.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Quickstart using Generative Language API in Node.js\nDESCRIPTION: Demonstrates a quickstart example using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `quickstart` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_74\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting an Environment - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet deletes an environment from Google Cloud Dataplex, helping to manage project resources efficiently by removing unneeded environments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to delete an environment\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function deleteEnvironment() {\n  const request = {name: 'name_of_the_environment'};\n  const [response] = await client.deleteEnvironment(request);\n  console.log(response);\n}\ndeleteEnvironment();\n```\n\n----------------------------------------\n\nTITLE: Deleting SQL Users with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet shows how to delete SQL users using the Google Cloud SQL API. It utilizes the sql_users_service.delete method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_users_service.delete.js\n```\n\n----------------------------------------\n\nTITLE: Running Policy Tag Creation Script in Node.js\nDESCRIPTION: Execute this Node.js script to create a policy tag in Google Cloud Data Catalog's Policy Tag Manager. The script requires Google Cloud SDK or appropriate API access to function correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.create_policy_tag.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Private Connection in VMware Engine (Node.js)\nDESCRIPTION: Example demonstrating how to update private connections in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm in Node.js\nDESCRIPTION: Command to install all dependencies specified in package.json for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Update Certificate using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to update a Certificate using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.update_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Getting Permission using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to get a permission using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `getPermission` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_66\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.get_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Managing GKE Hub Features (v1beta)\nDESCRIPTION: Examples for creating, deleting, getting, listing and updating features in GKE Hub using v1beta API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1beta/gke_hub.create_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1beta/gke_hub.delete_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1beta/gke_hub.get_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1beta/gke_hub.list_features.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1beta/gke_hub.update_feature.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: Commands for running different types of tests in the Google Cloud Node project, including unit tests, sample integration tests, and system tests. These commands validate code functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Policy Troubleshooter IAM Client Library\nDESCRIPTION: Example demonstrating how to initialize the Policy Troubleshooter client and make a troubleshoot IAM policy request. The code shows setting up the client, constructing a request with an access tuple, and executing the troubleshoot operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Iam library\nconst {PolicyTroubleshooterClient} =\n  require('@google-cloud/policy-troubleshooter-iam').v3beta;\n\n// Instantiates a client\nconst iamClient = new PolicyTroubleshooterClient();\n\nasync function callTroubleshootIamPolicy() {\n  const project = await iamClient.getProjectId();\n  const accessTuple = {\n    principal: 'alice@example.com',\n    fullResourceName: `//cloudresourcemanager.googleapis.com/projects/${project}`,\n  };\n\n  // Construct request\n  const request = {\n    accessTuple,\n  };\n\n  // Run request\n  const response = await iamClient.troubleshootIamPolicy(request);\n  console.log(response);\n}\n\ncallTroubleshootIamPolicy();\n```\n\n----------------------------------------\n\nTITLE: OS Login Service Code Samples\nDESCRIPTION: Collection of code samples demonstrating various OS Login service operations including SSH key management, POSIX account management, and login profile operations. Available in both v1 and v1beta versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Supported Operations\\n\\n- Create SSH Public Key\\n- Delete POSIX Account\\n- Delete SSH Public Key\\n- Get Login Profile\\n- Get SSH Public Key\\n- Import SSH Public Key\\n- Update SSH Public Key\\n- Sign SSH Public Key (v1beta only)\n```\n\n----------------------------------------\n\nTITLE: Marking an Insight as Accepted in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to mark an insight as accepted using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the mark_insight_accepted method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.mark_insight_accepted.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Quickstart - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js quickstart example for getting started with Google Cloud Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Product Sets with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to list product sets using the Google Cloud Vision API. It utilizes the product_search.list_product_sets method to retrieve all product sets in a project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.list_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Listing Taxonomies in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet details how to list Taxonomies available within a project and location in Google Cloud Data Catalog using the google-cloud-datacatalog library with Node.js. It makes use of the `listTaxonomies` method. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(parent) {\n  // [START datacatalog_list_taxonomies]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const parent = 'projects/{project}/locations/{location}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function listTaxonomies() {\n    const [taxonomies] = await policyTagManagerClient.listTaxonomies({\n      parent: parent,\n    });\n    console.log('Taxonomies:');\n    taxonomies.forEach(taxonomy => console.log(taxonomy));\n  }\n  listTaxonomies();\n  // [END datacatalog_list_taxonomies]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Updating Vehicle Location with Fleet Engine API\nDESCRIPTION: Example demonstrating how to update a vehicle's location using the Google Maps Fleet Engine service in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-fleetengine/samples/generated/v1/vehicle_service.update_vehicle_location.js\n```\n\n----------------------------------------\n\nTITLE: Get Template Dataflow API v1beta3\nDESCRIPTION: Demonstrates how to retrieve a template using the Dataflow API v1beta3 in Node.js. It shows the command to execute the sample code, which would typically involve setting up authentication and any necessary environment variables before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/templates_service.get_template.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Stream in Google Cloud Datastream - Node.js\nDESCRIPTION: Creates a new stream in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and suitable permissions for stream creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function createStream() {\n  const request = {\n    // Stream creation parameters\n  };\n\n  const [operation] = await client.createStream(request);\n  const [response] = await operation.promise();\n  console.log('Stream created:', response);\n}\n\ncreateStream();\n```\n\n----------------------------------------\n\nTITLE: Creating API Version - Node.js\nDESCRIPTION: This snippet demonstrates how to create a new version of an existing API in the Apigee Registry. It details the required parameters for versioning an API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.create_api_version.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Network Policy External Addresses with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to fetch network policy external addresses using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.fetch_network_policy_external_addresses\"\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting Page Dialogflow CX with Node.js\nDESCRIPTION: This snippet shows how to delete a page using the Dialogflow CX API in Node.js. The `@google-cloud/dialogflow-cx` package is necessary. The command line executes this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/pages.delete_page.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Phishing Protection Client Library\nDESCRIPTION: Command to install the Google Cloud Phishing Protection client library via npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/phishing-protection\n```\n\n----------------------------------------\n\nTITLE: Listing Data Attributes - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet fetches a list of data attributes that exist within a specific data taxonomy, allowing for the management and overview of data attributes in a taxonomy.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to list data attributes\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function listDataAttributes() {\n  const request = {parent: 'parent_id'};\n  const [response] = await client.listDataAttributes(request);\n  console.log(response);\n}\nlistDataAttributes();\n```\n\n----------------------------------------\n\nTITLE: Deploying Flow to Environment in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to deploy a flow to a specific environment in Dialogflow CX using Node.js. The sample provides the command-line execution example for deploying a flow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.deploy_flow.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet shows how to get a tag key using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.get_tag_key.js\n```\n\n----------------------------------------\n\nTITLE: Model Service Operations in Google Cloud Retail API\nDESCRIPTION: Sample code implementations for model management operations including resume, tune and update model functionalities in Google Cloud Retail API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Getting Workflow Details - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet retrieves information about a specific workflow using its workflow ID. It requires Node.js and access to Google Cloud Workflows API. The workflow ID is necessary for the request. The output will provide details of the specified workflow in JSON format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function getWorkflow() {\n  const client = new WorkflowsClient();\n  const workflowId = 'YOUR_WORKFLOW_ID';\n  const request = {\n    name: `projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID/workflows/${workflowId}`\n  };\n  const [response] = await client.getWorkflow(request);\n  console.log(response);\n}\ngetWorkflow();\n```\n\n----------------------------------------\n\nTITLE: Git Compare URL Version 6.0.0\nDESCRIPTION: GitHub URL comparing grafeas versions 5.5.0 to 6.0.0\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[6.0.0](https://github.com/googleapis/google-cloud-node/compare/grafeas-v5.5.0...grafeas-v6.0.0)\n```\n\n----------------------------------------\n\nTITLE: Getting Datastream Stream Object in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a stream object from Google Cloud Datastream using Node.js, focusing on specific object-level details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.get_stream_object.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests in the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests. These commands help ensure code quality before submission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Certificate Revocation List with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a Certificate Revocation List (CRL) using the Google Cloud Private CA Service API. It employs the CertificateAuthorityService client to invoke the getCertificateRevocationList method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.get_certificate_revocation_list.js\n```\n\n----------------------------------------\n\nTITLE: Create Edge SLM in Telco Automation API - JavaScript\nDESCRIPTION: Creates an edge SLM using the Telco Automation API v1alpha1. This sample demonstrates edge SLM creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.create_edge_slm.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Instance in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet is used to update the properties of an existing AlloyDB instance, allowing for adjustments to its configuration. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function updateInstance() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Application Gateways with BeyondCorp API - Node.js\nDESCRIPTION: This snippet demonstrates how to list all application gateways associated with a user’s account utilizing the BeyondCorp API in Node.js. It should be executed in an environment where dependencies are installed and configured. The output is a list of application gateways that are currently available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appgateways/samples/generated/v1/app_gateways_service.list_app_gateways.js\n```\n\n----------------------------------------\n\nTITLE: List Services using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `listServices` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for listing services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.list_services.js`\n```\n\n----------------------------------------\n\nTITLE: Group Security Center Assets\nDESCRIPTION: Groups security assets based on specified criteria using the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.group_assets.js\n```\n\n----------------------------------------\n\nTITLE: Getting Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet retrieves a specific policy tag's details from Google Cloud's Data Catalog service. The implementation requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function getPolicyTag() {\n  const request = {\n    name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n  };\n  const [policyTag] = await client.getPolicyTag(request);\n  console.log('Policy Tag:', policyTag);\n}\ngetPolicyTag();\n```\n\n----------------------------------------\n\nTITLE: Rolling Back Node Pool Upgrade - JavaScript\nDESCRIPTION: This snippet rolls back an upgrade for a specified node pool using the Cluster Manager API. It requires the Google Cloud Node.js client library for execution and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function rollbackNodePoolUpgrade(clusterId, nodePoolId) {\n  const request = {clusterId, nodePoolId};\n  const response = await client.rollbackNodePoolUpgrade(request);\n  console.log(`Node pool upgrade rolled back: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Initial File Addition for Google Cloud Service Health v1\nDESCRIPTION: This code snippet shows the addition of initial files for the google.cloud.servicehealth.v1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* Add initial files for google.cloud.servicehealth.v1 ([#4989](https://github.com/googleapis/google-cloud-node/issues/4989)) ([12cbef5](https://github.com/googleapis/google-cloud-node/commit/12cbef539df64e88bb7b00dd7e5983a766a8f688))\n```\n\n----------------------------------------\n\nTITLE: Proper Fallback Option Handling in Node.js\nDESCRIPTION: Improves the handling of fallback options within the Google Cloud IoT Node.js library. This fix ensures that default or alternative configuration values are correctly applied when specific options are not provided, leading to more robust and predictable behavior.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"* proper fallback option handling ([3a595f0](https://www.github.com/googleapis/nodejs-iot/commit/3a595f0636429914c5384f02b78f9ef21d9d08d6))\"\n```\n\n----------------------------------------\n\nTITLE: NPM Version Bump Command\nDESCRIPTION: Example Git version comparison syntax used throughout the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ngke-hub-v6.0.0...gke-hub-v6.0.1\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Page from Dialogflow CX using Node.js\nDESCRIPTION: This script retrieves details of an existing page in Dialogflow CX based on the given page ID. It uses the Dialogflow CX client library. The script outputs page details and requires authentication to interact with Dialogflow CX.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_118\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/pages.get_page.js\n```\n\n----------------------------------------\n\nTITLE: Resetting IAP OAuth Client Secret in JavaScript\nDESCRIPTION: The script resets the client secret for Identity-Aware Proxy under OAuth service. This Node.js script should be executed in a supported command-line interface.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.reset_identity_aware_proxy_client_secret.js\n```\n\n----------------------------------------\n\nTITLE: Verifying Connectivity with Ekm_service in Node.js\nDESCRIPTION: This snippet demonstrates how to verify connectivity using the google-cloud-kms library in a Node.js environment. The command provided executes the sample to verify the existing connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/ekm_service.verify_connectivity.js`\n```\n\n----------------------------------------\n\nTITLE: Listing SKUs using GDC Hardware Management API in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the GDC Hardware Management API client library to list SKUs. It includes initialization of the client, constructing a request, and iterating through the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The project and location to list SKUs in.\n *  Format: `projects/{project}/locations/{location}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering condition. See AIP-160 (https://google.aip.dev/160).\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Gdchardwaremanagement library\nconst {GDCHardwareManagementClient} =\n  require('@google-cloud/gdchardwaremanagement').v1alpha;\n\n// Instantiates a client\nconst gdchardwaremanagementClient = new GDCHardwareManagementClient();\n\nasync function callListSkus() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = gdchardwaremanagementClient.listSkusAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListSkus();\n```\n\n----------------------------------------\n\nTITLE: Getting Release Config - Google Cloud Node.js\nDESCRIPTION: This snippet retrieves the release configuration of a Dataform project using the Google Cloud Node.js library. Users need to run the associated command to obtain the release configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.get_release_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting Notification Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve a notification configuration using the Google Cloud Security Center API. Notification configs define how to send notifications for findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_notification_config.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving SQL Database Information in Google Cloud\nDESCRIPTION: Sample script for retrieving database details in Google Cloud SQL using the Node.js client library. Shows how to fetch information about specific databases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.get.js\n```\n\n----------------------------------------\n\nTITLE: Delete VMware Engine Network using Node.js\nDESCRIPTION: Command to execute the delete_vmware_engine_network sample for the VMware Engine API. This allows deletion of VMware Engine networks in Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_vmware_engine_network.js\n```\n\n----------------------------------------\n\nTITLE: Running the Bootstrap Library Command\nDESCRIPTION: Example command for running the bootstrap-library CLI tool with required parameters including API ID, destination folder, mono-repo name, and GitHub token.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/gapic-node-templating/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nbootstrap-library --api-id $API_ID --destination-folder $DEST_FOLDER --mono-repo-name $MONO_REPO_NAME --github-token $GITHUB_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Getting NFS Share from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet fetches details for a specific NFS share in the bare metal instance, requiring Node.js for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_nfs_share.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_nfs_share.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Workflow Config - Google Cloud Node.js\nDESCRIPTION: This snippet provides functionality to delete a workflow configuration in Dataform using the Google Cloud Node.js library. Users need to execute the command in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.delete_workflow_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Notebook Instances (v2)\nDESCRIPTION: This snippet demonstrates how to list all Notebook instances using the v2 API. It requires the google-cloud-notebooks package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.list_instances.js\n```\n\n----------------------------------------\n\nTITLE: Updating Lineage Run with Node.js\nDESCRIPTION: Sample code for updating lineage run information using the Google Cloud Datacatalog Lineage API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog-lineage/samples/generated/v1/lineage.update_run.js\n```\n\n----------------------------------------\n\nTITLE: Updating Logging Server in VMware Engine (Node.js)\nDESCRIPTION: Example showing how to update logging server configurations in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_logging_server.js\n```\n\n----------------------------------------\n\nTITLE: Running Product Search Remove Product from Product Set Sample in Node.js\nDESCRIPTION: This snippet demonstrates how to run the sample code for removing a product from a product set using the Google Cloud Vision API. It provides the command to execute the Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.remove_product_from_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Usage Instructions for Google Chat API Samples\nDESCRIPTION: Installation and setup instructions for running the Google Chat API samples. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Require google-gax v2.17.0 in Node.js\nDESCRIPTION: This commit updates the dependency of google-gax to version 2.17.0 in the Google Cloud IoT Node.js library. It ensures that the library uses a specific version of google-gax to maintain compatibility and access its functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** require google-gax v2.17.0 ([#493](https://www.github.com/googleapis/nodejs-iot/issues/493)) ([f61a834](https://www.github.com/googleapis/nodejs-iot/commit/f61a834d9d8e9564f73849821de351757589422a))\"\n```\n\n----------------------------------------\n\nTITLE: Listing App Engine Services using Node.js Client\nDESCRIPTION: Example shows how to initialize the App Engine Services client and list all services for a specified project. Uses the ServicesClient class from the appengine-admin package to make API calls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {ServicesClient} = require('@google-cloud/appengine-admin');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new ServicesClient();\n\nasync function listVersions() {\n  const [versions] = await client.listServices({\n    parent: `apps/${projectId}`,\n  });\n  console.info(versions);\n}\nlistVersions();\n```\n\n----------------------------------------\n\nTITLE: Resetting a Notebook Instance (v2)\nDESCRIPTION: This code sample shows how to reset a Notebook instance to its initial state using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.reset_instance.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Confidential Computing API in Node.js\nDESCRIPTION: This quickstart sample provides a basic introduction to using the Confidential Computing API with Node.js. It demonstrates essential setup and usage of the API for new users.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-confidentialcomputing/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Server Configuration with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to retrieve server configuration details for AWS GKE clusters using the Google Cloud GKE Multi-cloud API. This includes supported Kubernetes versions and machine types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.get_aws_server_config.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to create an entry type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.create_entry_type.js\n```\n\n----------------------------------------\n\nTITLE: Update Pool Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to update a pool using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.update_pool.js\n```\n\n----------------------------------------\n\nTITLE: Listing Workflows - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet lists all workflows in a specified Google Cloud project and location. It requires Node.js and access to Google Cloud Workflows API. The project ID and location are key parameters for the request. The output will include details of all workflows in a JSON format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function listWorkflows() {\n  const client = new WorkflowsClient();\n  const request = {parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID'};\n  const [response] = await client.listWorkflows(request);\n  console.log(response);\n}\nlistWorkflows();\n```\n\n----------------------------------------\n\nTITLE: Retrieving IAP OAuth Brand in JavaScript\nDESCRIPTION: Runs a script to get a brand from the Identity-Aware Proxy OAuth service. This requires Node.js; the script is executed using the terminal with the given command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.get_brand.js\n```\n\n----------------------------------------\n\nTITLE: Executing Data Migration Service Quickstart Sample in Node.js\nDESCRIPTION: This snippet shows how to run a quickstart sample script for the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and executes a pre-defined script to get started quickly with the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: AutoML Get Model in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a model using the AutoML API in Node.js. The `getModel` function is called. It uses the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.get_model\"\n```\n\n----------------------------------------\n\nTITLE: Listing Zones in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to list zones using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which retrieves a list of zones.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_zones.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Feedback Labels in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update feedback labels using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_feedback_label method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_feedback_label.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR getDataSource Sample\nDESCRIPTION: This sample demonstrates how to get a data source using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Searching Case Classifications in Google Cloud Support\nDESCRIPTION: Sample script showing how to search and retrieve case classifications using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.search_case_classifications.js\n```\n\n----------------------------------------\n\nTITLE: Executing Product Sets Listing Node.js Script\nDESCRIPTION: This snippet runs a Node.js script to list all product sets using the Google Cloud Vision API. Ensure Node.js is configured before running with no specific input requirement, and outputs a list of product sets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.list_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build List Build Triggers Sample\nDESCRIPTION: This sample demonstrates how to list build triggers using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Managing NetApp Resources in Google Cloud (Node.js)\nDESCRIPTION: A collection of Node.js samples for creating, deleting, and managing various NetApp resources in Google Cloud. Includes operations for active directories, backups, storage pools, volumes, snapshots, and KMS configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Configuring App Engine Firewall Rules\nDESCRIPTION: Examples showing firewall rule management including batch updates for ingress rules, creating new rules and deleting existing rules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Deleting Policy Tag with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line script to delete an existing policy tag in the Google Cloud Datacatalog using the Policy Tag Manager API. Requires Node.js and Google Cloud SDK setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.delete_policy_tag.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts API: Quickstart\nDESCRIPTION: Quickstart sample code for initializing and using the Essential Contacts API in Node.js. Provides a basic example of setting up and interacting with the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests.\nDESCRIPTION: This snippet executes the unit tests for the Node.js application using npm. It is crucial for verifying that the core functionalities work as expected after any changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Getting Project Settings in Google Cloud\nDESCRIPTION: This code retrieves the project settings from the Google Cloud Artifact Registry. The user must ensure proper authentication and the required Google Cloud SDK setup to execute this code in a Node.js context.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting project settings\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_project_settings.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_project_settings.js\n```\n\n----------------------------------------\n\nTITLE: Listing Catalogs with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet demonstrates how to list catalogs using the Google Cloud Retail API. It uses the CatalogService client to retrieve a list of catalogs associated with the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.list_catalogs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Display Video 360 Advertiser Link Proposal - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This code snippet illustrates deleting a Display Video 360 advertiser link proposal using Google Analytics Admin Service in Node.js. The snippet needs the Google Cloud Node.js client library. Users must provide the proposal ID to proceed with deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteDisplayVideo360AdvertiserLinkProposal(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating Conversation Profiles in Dialogflow\nDESCRIPTION: Sample code for updating existing conversation profiles with new configurations or parameters. Shows how to modify conversation profile settings programmatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nConversation_profiles.update_conversation_profile\n```\n\n----------------------------------------\n\nTITLE: Listing Tag Holds using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code example shows how to list tag holds using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_holds.list_tag_holds.js\n```\n\n----------------------------------------\n\nTITLE: Exporting a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This code illustrates how to export a flow from Dialogflow CX. It uses the google-cloud-dialogflow-cx package and assumes proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_96\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.export_flow.js\n```\n\n----------------------------------------\n\nTITLE: Creating Datastream Route in Node.js\nDESCRIPTION: This snippet provides an example of how to create a route in Google Cloud Datastream using Node.js, including necessary setup and parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.create_route.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Job using Google Cloud Batch Service in Node.js\nDESCRIPTION: This Node.js script details the process for deleting a designated job from the Google Cloud Batch service. Before execution, make sure that the job identifier exists and the Google Cloud credentials are correctly set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.delete_job.js\"\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1alpha/batch_service.delete_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Job Service List Jobs\nDESCRIPTION: Demonstrates how to list jobs using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.list_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Sources in Migration Center\nDESCRIPTION: Node.js example showing how to update source configurations in Migration Center\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_source.js\n```\n\n----------------------------------------\n\nTITLE: Discovering Datastream Connection Profile in Node.js\nDESCRIPTION: This snippet demonstrates how to discover available connection profiles in Google Cloud Datastream using Node.js, enhancing informational retrieval capabilities within the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.discover_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Running Redis Cluster Sample - Backup Cluster\nDESCRIPTION: Command to execute the backup cluster sample code that demonstrates how to create a backup of a Redis cluster\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1/cloud_redis_cluster.backup_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Metadata from Dataproc Metastore with Node.js\nDESCRIPTION: This snippet illustrates how to export metadata from Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.export_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Querying Assets using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to query assets using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.query_assets.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Commerce Consumer Procurement Client Library\nDESCRIPTION: Command to install the NPM package for the Google Cloud Commerce Consumer Procurement API client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/procurement\n```\n\n----------------------------------------\n\nTITLE: Running Node.js unit tests with npm\nDESCRIPTION: This snippet shows how to execute the unit tests for the Node.js project using npm. It uses the `npm test` command to trigger the test suite defined in the `package.json` file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n\"# Run unit tests.\\n        npm test\"\n```\n\n----------------------------------------\n\nTITLE: Using Config.export_lock_info in Node.js\nDESCRIPTION: Demonstrates exporting lock information using the Infrastructure Manager API Config client in Node.js. This sample shows the usage of the export_lock_info method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.export_lock_info.js\n```\n\n----------------------------------------\n\nTITLE: Listing AWS Clusters with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to list all AWS Kubernetes clusters in a project and location using the Google Cloud GKE Multi-cloud API. This sample shows how to enumerate available AWS clusters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.list_aws_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests.\nDESCRIPTION: This command runs the sample integration tests for the application. It's important for ensuring that the application behaves correctly with external dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Updating a Service in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet shows how to update a service in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.update_service.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to delete an instance using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to delete an existing instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.delete_instance.js`\n```\n\n----------------------------------------\n\nTITLE: Using the Cloud TPU Node.js Client to List TPU Nodes\nDESCRIPTION: Example demonstrating how to initialize the TPU client and list TPU nodes in a specific project location. The code shows the basic pattern for interacting with the TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {TpuClient} = require('@google-cloud/tpu');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new TpuClient();\n\nasync function listNodes() {\n  const nodes = await client.listNodes({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(nodes);\n}\nlistNodes();\n```\n\n----------------------------------------\n\nTITLE: Renaming a Network using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet demonstrates how to rename a network using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.rename_network.js\n```\n\n----------------------------------------\n\nTITLE: Getting Agent Validation Result in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to get the validation result for an agent in Dialogflow CX. It uses the agents.get_agent_validation_result method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_83\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.get_agent_validation_result.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Changes in Node.js\nDESCRIPTION: This snippet offers the command for linting the code and potentially fixing any issues found, which helps maintain code quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using Config.delete_preview in Node.js\nDESCRIPTION: Demonstrates deleting a preview using the Infrastructure Manager API Config client in Node.js. This sample shows how to use the delete_preview method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.delete_preview.js\n```\n\n----------------------------------------\n\nTITLE: Checking Notebook Instance Upgradability (v2)\nDESCRIPTION: This code sample shows how to check if a Notebook instance can be upgraded using the v2 API. It uses the google-cloud-notebooks package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v2/notebook_service.check_instance_upgradability.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Automation Sample\nDESCRIPTION: This sample demonstrates how to create an automation using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_automation.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating VMware Engine Network (Node.js)\nDESCRIPTION: Example demonstrating how to update VMware Engine network configurations using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_vmware_engine_network.js\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Intents in Node.js\nDESCRIPTION: This snippet demonstrates how to batch delete multiple intents in a Dialogflow agent, making it efficient to clean up or remove outdated intents in one call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_99\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Batch delete intents\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function batchDeleteIntents() {\n  const request = {\n    // Define request parameters\n  };\n  const response = await client.batchDeleteIntents(request);\n  console.log(response);\n}\nbatchDeleteIntents();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Testing - JavaScript\nDESCRIPTION: This snippet installs the necessary dependencies for running tests in the Google Cloud Node.js library. It uses npm as the package manager. Ensure that your Node.js environment is properly set up before executing this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Redis Clusters using Node.js Client\nDESCRIPTION: Example demonstrating how to initialize the Redis Cluster client and list clusters using async/await pattern. The code shows pagination handling and includes configurable parameters for parent resource name, page size, and pagination token.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the cluster location using the form:\n *      `projects/{project_id}/locations/{location_id}`\n *  where `location_id` refers to a GCP region.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of items to return.\n *  If not specified, a default value of 1000 will be used by the service.\n *  Regardless of the page_size value, the response may include a partial list\n *  and a caller should only rely on response's\n *  `next_page_token` google.cloud.redis.cluster.v1.ListClustersResponse.next_page_token\n *  to determine if there are more clusters left to be queried.\n */\n// const pageSize = 1234\n/**\n *  The `next_page_token` value returned from a previous\n *  ListClusters CloudRedis.ListClusters  request, if any.\n */\n// const pageToken = 'abc123'\n\n// Imports the Cluster library\nconst {CloudRedisClusterClient} = require('@google-cloud/redis-cluster').v1;\n\n// Instantiates a client\nconst clusterClient = new CloudRedisClusterClient();\n\nasync function callListClusters() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await clusterClient.listClustersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClusters();\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Tag Template Field Update Script in Node.js\nDESCRIPTION: This Node.js script updates a field within a tag template in Google Cloud Data Catalog. Use the command to execute the script and apply the specified updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.update_tag_template_field.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Federation in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet updates an existing federation in the Dataproc Metastore. Users need to provide the necessary federation details for the update. This operation ensures that federations can be kept up to date as requirements change.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update a federation\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore_federation.update_federation.js\n```\n\n----------------------------------------\n\nTITLE: Using Document Link Service to Delete Document Link in Node.js\nDESCRIPTION: This snippet shows how to use the Document Link Service to delete a document link using the Document AI Warehouse API in Node.js. It references the source code file for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_link_service.delete_document_link.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Network Policy with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete a network policy using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.delete_network_policy\"\n```\n\n----------------------------------------\n\nTITLE: Creating Profiles using Cloud Profiler API - Node.js\nDESCRIPTION: This code demonstrates how to create a new profile through the Cloud Profiler API in Node.js. This functionality is vital for developers to initiate profiling of their applications effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-cloudprofiler/samples/generated/v2/profiler_service.create_profile.js\n```\n\n----------------------------------------\n\nTITLE: Installing GDC Hardware Management API Client Library in Node.js\nDESCRIPTION: Command to install the GDC Hardware Management API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gdchardwaremanagement\n```\n\n----------------------------------------\n\nTITLE: Updating Connections with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update an existing connection using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_connection.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to retrieve IAM policy for a data policy resource\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Sample Code for Listing Endpoints in Cloud IDS\nDESCRIPTION: This snippet shows how to list all endpoints available in a specified location under a Google Cloud project. It's useful for monitoring existing resources and ensuring efficient management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst {IDSClient} = require('@google-cloud/ids');\n\nconst client = new IDSClient();\n\nasync function listEndpoints() {\n  const request = {\n    parent: 'projects/my-project/locations/us-central1',\n  };\n  const responses = await client.listEndpoints(request);\n  for await (const response of responses) {\n    console.log(response);\n  }\n}\nlistEndpoints();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies - Shell Commands\nDESCRIPTION: Commands to install and set up the sample code environment. Requires having followed the client library setup steps first.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Using GKE Hub Client Library in Node.js\nDESCRIPTION: Example demonstrating how to initialize the GKE Hub client and list memberships. Shows basic usage pattern including client instantiation and making an API request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {GkeHubClient} = require('@google-cloud/gke-hub');\n\n// TODO(developer): replace with your preferred values.\n// const projectId = 'my-project'\n// const location = 'global'\n\n// Creates a client\nconst client = new GkeHubClient();\n\nasync function listMemberships() {\n  const memberships = await client.listMemberships({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(memberships);\n}\nlistMemberships();\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Functions Node.js Client Library\nDESCRIPTION: This command installs the Google Cloud Functions client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/functions\n```\n\n----------------------------------------\n\nTITLE: Getting Datastream Private Connection in Node.js\nDESCRIPTION: This snippet demonstrates how to get details of a private connection in Google Cloud Datastream using Node.js, ensuring access to connection attributes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.get_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Updating Stream in Google Cloud Datastream - Node.js\nDESCRIPTION: Updates an existing stream in Google Cloud Datastream. The snippet requires the Google Cloud Datastream client library and appropriate permissions to update streams.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function updateStream() {\n  // Defining the stream update parameters\n  const request = {\n    // Update request parameters\n  };\n\n  const [operation] = await client.updateStream(request);\n  const [response] = await operation.promise();\n  console.log('Stream updated:', response);\n}\n\nupdateStream();\n```\n\n----------------------------------------\n\nTITLE: Getting OS Policy Assignment with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet demonstrates how to get an OS policy assignment using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.get_o_s_policy_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Installing Memorystore for Memcached Node.js Client\nDESCRIPTION: This snippet shows how to install the Memorystore for Memcached Node.js client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/memcache\n```\n\n----------------------------------------\n\nTITLE: Replacing Artifacts using Registry service in Node.js\nDESCRIPTION: This snippet illustrates how to use the replace_artifact method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.replace_artifact.js\n```\n\n----------------------------------------\n\nTITLE: Deleting API - Node.js\nDESCRIPTION: This snippet provides the process to delete an API from the Apigee Registry. It emphasizes the parameters needed to identify which API to remove.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.delete_api.js\n```\n\n----------------------------------------\n\nTITLE: Creating Dependency with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to create a dependency using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_dependencies.create_dependency.js\n```\n\n----------------------------------------\n\nTITLE: Installing Parameter Manager API Node.js Client Library\nDESCRIPTION: Command to install the Parameter Manager API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/parametermanager\n```\n\n----------------------------------------\n\nTITLE: Updating Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to update an existing policy tag in Google Cloud's Data Catalog using the Node.js client library. The google-cloud-datacatalog package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function updatePolicyTag() {\n  const request = {\n    policyTag: {\n      name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n      displayName: 'UPDATED_POLICY_TAG_NAME',\n    },\n  };\n  const [response] = await client.updatePolicyTag(request);\n  console.log(`Policy tag updated: ${response.name}`);\n}\nupdatePolicyTag();\n```\n\n----------------------------------------\n\nTITLE: Importing Registered Parties with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet illustrates how to import registered parties using the A_m_l.import_registered_parties method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and authentication to run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.import_registered_parties.js\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Client - Google Cloud Node\nDESCRIPTION: This snippet initializes an Azure client for managing Azure resources through Google Cloud. It requires using the right credentials and setting up client properties for successful interaction with Azure's API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests for the project using npm. It typically runs the test scripts defined in the project's package.json file, verifying the functionality of individual components.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run unit tests.\\nnpm test\"\n```\n\n----------------------------------------\n\nTITLE: Using the Model Armor API Node.js Client Library\nDESCRIPTION: Example of how to use the Model Armor API client library to list templates. This snippet demonstrates client initialization and making an API request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListTemplatesRequest\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results\n */\n// const orderBy = 'abc123'\n/**\n * Required. Regional endpoint.\n */\n// const apiEndpoint = modelarmor.us-central1.rep.googleapis.com\n\n// Imports the Modelarmor library\nconst {ModelArmorClient} = require('@google-cloud/modelarmor').v1;\n\n// Instantiates a client\nconst modelarmorClient = new ModelArmorClient({apiEndpoint});\n\nasync function callListTemplates() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = modelarmorClient.listTemplatesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListTemplates();\n```\n\n----------------------------------------\n\nTITLE: Listing Report Details with Storage Insights API - Node.js\nDESCRIPTION: This sample lists report details using Node.js and the Google Cloud Storage Insights API. The necessary environment and package installations must be verified according to the client library guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.list_report_details.js\n```\n\n----------------------------------------\n\nTITLE: Getting Namespaced Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This code demonstrates how to retrieve a namespaced tag value using the Google Cloud Resource Manager API in Node.js. It utilizes the tag_values.get_namespaced_tag_value method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.get_namespaced_tag_value.js\n```\n\n----------------------------------------\n\nTITLE: Getting DNS Forwarding with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get DNS forwarding settings using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_dns_forwarding\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Challenge with Confidential Computing API (v1alpha1) in Node.js\nDESCRIPTION: This snippet illustrates how to create a challenge using the alpha version (v1alpha1) of the Confidential Computing API. It requires the google-cloud-confidentialcomputing package and correct setup of Google Cloud credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-confidentialcomputing/samples/generated/v1alpha1/confidential_computing.create_challenge.js\n```\n\n----------------------------------------\n\nTITLE: Streaming Detect Intent - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet showcases how to detect intents using streaming, providing real-time feedback and responses to ongoing conversations for faster interactions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_122\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Streams intent detection in a session.\nconst {SessionsClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionsClient();\n\nasync function streamingDetectIntent() {\n  // Implementation logic here\n}\n\nstreamingDetectIntent();\n```\n\n----------------------------------------\n\nTITLE: Listing Revisions with Config.list_revisions in Node.js\nDESCRIPTION: This sample shows how to list revisions using the Config API. It's part of the google-cloud-config package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.list_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Listing Violations with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to list violations using the Assured Workloads service in Node.js. It requires the `@google-cloud/assuredworkloads` package and assumes proper environment setup. The command provided is the way to execute this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.list_violations.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Fulfillment in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Updates the fulfillment configuration for a Dialogflow agent in V2beta1 using Node.js. This involves calling the `update_fulfillment` method, part of the Dialogflow client library, to modify the existing fulfillment settings. The sample includes constructing the request with the updated fulfillment details and handling the API response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Using ImageAnnotator.batchAnnotateImages method with Google Cloud Vision API v1p2beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to synchronously annotate multiple images in a batch using Google Cloud Vision API v1p2beta1. This processes multiple images and returns results immediately in the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p2beta1/image_annotator.batch_annotate_images.js\n```\n\n----------------------------------------\n\nTITLE: Creating Experiment in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to create a new experiment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the experiment creation operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.create_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Validating Import Jobs in Migration Center\nDESCRIPTION: Node.js example demonstrating how to validate import jobs before execution\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.validate_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart with Certificate Authority Service - JavaScript\nDESCRIPTION: This quickstart guide provides a JavaScript code snippet to initiate interaction with the Certificate Authority Service using the Google Cloud Node.js library. Basic setup steps and example calls are included to get users started quickly. Dependencies include the appropriate version of the Node.js library alongside Google Cloud credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating API Spec using Registry service in Node.js\nDESCRIPTION: This snippet demonstrates how to use the update_api_spec method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.update_api_spec.js\n```\n\n----------------------------------------\n\nTITLE: Importing Data with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet illustrates how to import data using the Translation Service. It employs the import_data method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.import_data.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js project using npm. This is a prerequisite step before running tests or making contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: BigQuery Reservation Service Quickstart in JavaScript\nDESCRIPTION: A quickstart example demonstrating basic usage of the BigQuery Reservation Service API in Node.js. This provides a simple introduction to using the API for beginners.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.fetch_static_ips in Node.js\nDESCRIPTION: Sample code for fetching static IPs using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve static IP addresses that can be used with Datastream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.fetch_static_ips.js\n```\n\n----------------------------------------\n\nTITLE: Get Security Center Source\nDESCRIPTION: Retrieves a security source configuration from the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_source.js\n```\n\n----------------------------------------\n\nTITLE: Linting the Code\nDESCRIPTION: This command runs the linter for the application, which helps to identify and fix any code style issues. Running this before submission ensures adherence to coding standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.3.1\nDESCRIPTION: Documents the 0.3.1 release with bug fixes for promise handling and listOperationsAsync return type updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.3.1](https://github.com/googleapis/google-cloud-node/compare/privilegedaccessmanager-v0.3.0...privilegedaccessmanager-v0.3.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Moderating Text with Google Cloud Language API in Node.js\nDESCRIPTION: This snippet showcases how to moderate text using Google Cloud's Language API. It utilizes the 'google-cloud-language' Node.js library as a dependency. The function analyzes the text for moderation, returning likelihood of various types of content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function moderateText(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.moderateText({document});\n  console.log('Moderation Results:');\n  console.log(result);\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Generators in Node.js\nDESCRIPTION: This snippet lists all the available generators within a Dialogflow agent, providing developers with insights on the available generator configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_97\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - List generators\nconst {GeneratorsClient} = require('@google-cloud/dialogflow');\nconst client = new GeneratorsClient();\n\nasync function listGenerators() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.listGenerators(request);\n  console.log(response);\n}\nlistGenerators();\n```\n\n----------------------------------------\n\nTITLE: Running Binary Authorization Service Samples\nDESCRIPTION: Example commands showing how to run the various Binary Authorization sample files\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-binaryauthorization/samples/generated/v1/binauthz_management_service_v1.create_attestor.js\n```\n\n----------------------------------------\n\nTITLE: Get Violation in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a specific violation from the Assured Workloads service using the google-cloud-node library. It makes use of the AssuredWorkloadsService client to fetch a violation by its name or identifier. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.list_connection_profiles in Node.js\nDESCRIPTION: Sample code for listing connection profiles using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve all connection profiles within a project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.list_connection_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Deleting App Connector in Node.js\nDESCRIPTION: Sample script for deleting a BeyondCorp App Connector using the Google Cloud Node.js client library. Provides a command-line method to remove existing app connectors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.delete_app_connector.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Libraries\nDESCRIPTION: Command to run the linter on code changes, which can automatically fix some issues when possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Sessions with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for listing sessions using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionController.listSessions method to enumerate all available interactive sessions in a project or region.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_controller.list_sessions.js\n```\n\n----------------------------------------\n\nTITLE: Deleting IAP OAuth Client in JavaScript\nDESCRIPTION: This script facilitates the deletion of an Identity-Aware Proxy client using OAuth services in a Node.js environment. Execute the command in a command-line interface to perform the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.delete_identity_aware_proxy_client.js\n```\n\n----------------------------------------\n\nTITLE: Listing Snapshots in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet demonstrates how to list all snapshots available in Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n// List Snapshots Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function listSnapshots(projectId) {\n  // Implementation for listing snapshots\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Web Security Scanner Findings with Node.js\nDESCRIPTION: This Node.js script fetches all findings from scan runs using the Web Security Scanner API. Confirm Google Cloud SDK preparation before executing with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.list_findings.js\n```\n\n----------------------------------------\n\nTITLE: Creating Version using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a version using the Dialogflow API. It uses the versions.create_version method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_79\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/versions.create_version.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm. It fetches and installs all packages listed in the `package.json` file, allowing the project to run and be tested.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Config.export_preview_result in Node.js\nDESCRIPTION: Shows how to export preview results using the Infrastructure Manager API Config client in Node.js. This sample demonstrates the usage of the export_preview_result method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.export_preview_result.js\n```\n\n----------------------------------------\n\nTITLE: Listing Kafka Clusters using Node.js Client\nDESCRIPTION: This snippet demonstrates how to list Kafka clusters using the Managed Kafka client library in Node.js.  It initializes the client, constructs a request with a parent location, and then iterates through the response to print each cluster.  The code requires you to uncomment and provide values for variables such as `parent`, `pageSize`, `pageToken`, `filter`, and `orderBy` before running.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent location whose clusters are to be listed. Structured\n *  like `projects/{project}/locations/{location}`.\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of clusters to return. The service may return\n *  fewer than this value. If unspecified, server will pick an appropriate\n *  default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListClusters` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListClusters` must match\n *  the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filter expression for the result.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Order by fields for the result.\n */\n// const orderBy = 'abc123'\n\n// Imports the Managedkafka library\nconst {ManagedKafkaClient} = require('@google-cloud/managedkafka').v1;\n\n// Instantiates a client\nconst managedkafkaClient = new ManagedKafkaClient();\n\nasync function callListClusters() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = managedkafkaClient.listClustersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClusters();\n\n```\n\n----------------------------------------\n\nTITLE: Restoring a Cluster in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet restores a cluster from a specified backup in AlloyDB, essential for data recovery. It requires the Google Cloud AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function restoreCluster() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Volume Snapshot - Google Cloud Node.js\nDESCRIPTION: This code illustrates how to create a volume snapshot using the Google Cloud Bare Metal Solution API with Node.js. Proper setup of libraries and authentication is required to execute this snippet successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function createVolumeSnapshot() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION',\n    volumeSnapshotId: 'YOUR_VOLUME_SNAPSHOT_ID',\n    volumeSnapshot: {\n      // Volume snapshot configuration here\n    },\n  };\n  const [operation] = await client.createVolumeSnapshot(request);\n  const [response] = await operation.promise();\n  console.log('Volume Snapshot created:', response);\n}\ncreateVolumeSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Attaching Trust with Node.js\nDESCRIPTION: This snippet demonstrates how to attach a trust to a domain using Node.js for Google Cloud Managed Identities. It requires the 'google-cloud-managedidentities' package and assumes appropriate permissions are set. The main function to execute this script is invoked via a Node.js command, which establishes a trust relationship.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.attach_trust.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Chunk with Retriever Service using Node.js\nDESCRIPTION: This code example demonstrates how to use the deleteChunk method of the RetrieverService. It uses the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.delete_chunk.js\n```\n\n----------------------------------------\n\nTITLE: Update Service using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `updateService` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for updating a service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.update_service.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Policy Binding - Node.js\nDESCRIPTION: This snippet demonstrates creating a policy binding using the Google Cloud Node.js client library. It requires the `google-iam` package. Input consists of binding details, and the output is the newly created policy binding.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.create_policy_binding.js\n```\n\n----------------------------------------\n\nTITLE: Updating Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code for updating a notebook runtime using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.update_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Getting Event Threat Detection Custom Module with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve an event threat detection custom module using the Google Cloud Security Center API. Custom modules allow specialized threat detection logic.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_event_threat_detection_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: GKE Hub Quickstart - JavaScript\nDESCRIPTION: This snippet provides a quickstart example for working with GKE Hub using the quickstart script. It requires the GKE Hub client library for JavaScript. The output showcases how to set up and connect a GKE cluster to the hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/quickstart.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Workspace Information\nDESCRIPTION: Example showing how to get information about a specific Area120 workspace\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.get_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions - Google Cloud Node.js\nDESCRIPTION: A JavaScript sample hunting for IAM permissions on a resource within Google Cloud Service Directory, employing `@google-cloud/service-directory`. Inputs needed are the resource name and permission list, with results showing accessible permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.test_iam_permissions.js>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Webhook in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a webhook in Dialogflow CX. It uses the webhooks.delete_webhook method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_75\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/webhooks.delete_webhook.js\n```\n\n----------------------------------------\n\nTITLE: Running Redis Cluster Sample - Create Cluster\nDESCRIPTION: Command to execute the create cluster sample code that demonstrates how to create a new Redis cluster\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1/cloud_redis_cluster.create_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Page in Dialogflow CX using Node.js\nDESCRIPTION: This Node.js script demonstrates how to delete a page from Dialogflow CX. The script requires the Dialogflow CX API client library for Node.js. No specific parameters are required, but it assumes proper authentication setup. It outputs the status of the deletion operation upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_117\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/pages.delete_page.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Approve Build Sample\nDESCRIPTION: This sample demonstrates how to approve a build using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.approve_build.js`\n```\n\n----------------------------------------\n\nTITLE: Get Change Log Entry Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve a change log entry using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.get_change_log_entry.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup Plan using Backup for GKE API in Node.js\nDESCRIPTION: This sample illustrates how to retrieve information about a specific backup plan using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_backup_plan.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Node.js\nDESCRIPTION: This snippet demonstrates how to execute unit tests for the Node.js project. It is crucial for ensuring code quality and functionality before submitting any contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Using Config.create_preview in Node.js\nDESCRIPTION: Shows how to create a preview using the Infrastructure Manager API Config client in Node.js. This sample demonstrates the usage of the create_preview method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.create_preview.js\n```\n\n----------------------------------------\n\nTITLE: Using VMware Engine Node.js Client Samples\nDESCRIPTION: Instructions for setting up and running the VMware Engine API samples. Requires installation of dependencies and proper Google Cloud authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Deleting NFS Share - Google Cloud Node.js\nDESCRIPTION: This snippet provides functionality to delete an NFS share within the Google Cloud Bare Metal Solution using Node.js. Proper permissions and configurations are necessary to perform the operation successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function deleteNfsShare() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/nfsShares/YOUR_NFS_SHARE_ID',\n  };\n  const [operation] = await client.deleteNfsShare(request);\n  await operation.promise();\n  console.log('NFS Share deleted.');\n}\ndeleteNfsShare();\n```\n\n----------------------------------------\n\nTITLE: Executing Parameter Manager create_parameter sample\nDESCRIPTION: This command runs the Node.js sample for creating a parameter using the Parameter Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-parametermanager/samples/generated/v1/parameter_manager.create_parameter.js\n```\n\n----------------------------------------\n\nTITLE: Promoting a Cluster in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet promotes a specified cluster in AlloyDB, changing its role in the environment. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function promoteCluster() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Get Route Table\nDESCRIPTION: Command line usage example for retrieving a route table in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.get_route_table.js\n```\n\n----------------------------------------\n\nTITLE: Approve Blueprint in Telco Automation API - JavaScript\nDESCRIPTION: Approves a blueprint using the Telco Automation API v1alpha1. This sample demonstrates the blueprint approval process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.approve_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Linting Changes\nDESCRIPTION: This snippet provides the command to lint and potentially fix changes made in the codebase, ensuring that the contributed code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Upgrading Notebook Instances in Node.js\nDESCRIPTION: This snippet explains how to upgrade the environment of a notebook instance using the Google Cloud Notebooks Node.js client. It requires the instance ID as input, and it triggers the upgrade process, which results in notifications regarding the upgrade status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to upgrade a notebook instance\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\n\nconst client = new NotebookServiceClient();\n\nasync function upgradeInstance(instanceId) {\n    const request = {\n        name: `projects/my-project/locations/us-central1-a/instances/${instanceId}`,\n    };\n    const [operation] = await client.upgradeInstance(request);\n    await operation.promise();\n    console.log(`Instance ${instanceId} upgraded.`);\n}\nupgradeInstance('my-notebook-instance');\n```\n\n----------------------------------------\n\nTITLE: Getting Instances in Google Cloud Filestore - JavaScript\nDESCRIPTION: This code demonstrates how to retrieve instance information from Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Instance Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function getInstance(projectId, instanceId) {\n  // Implementation for getting an instance\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Snapshot with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet illustrates how to create a snapshot using the Cloud Filestore Manager in Javascript. It leverages the google-cloud-node library to interact with the Cloud Filestore API to create a new snapshot.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.create_snapshot.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in package.json\nDESCRIPTION: Updates the required version of google-gax to 2.12.0 in the package dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n\"**deps:** require google-gax v2.12.0 ([#270](https://www.github.com/googleapis/nodejs-datalabeling/issues/270)) ([9f1d2fa](https://www.github.com/googleapis/nodejs-datalabeling/commit/9f1d2faacdbb3e9503b450b6c8da4d70bcd4d66f))\"\n```\n\n----------------------------------------\n\nTITLE: Get Valued Resource in Security Center\nDESCRIPTION: Retrieves a valued resource from Google Cloud Security Center using the Node.js client library. This sample shows how to retrieve information about a valued resource. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_valued_resource\"\n```\n\n----------------------------------------\n\nTITLE: Getting Certificate with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet shows how to retrieve a certificate using the Google Cloud Private CA Service API. It uses the CertificateAuthorityService client to invoke the getCertificate method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.get_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Getting Entity Type in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Retrieves a specific entity type from Dialogflow V2beta1. This involves calling the `getEntity_type` method, likely part of a client library, to fetch the details of a particular entity type.  The sample likely demonstrates how to construct the request with the entity type name and handle the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Managing TLS Policies in Google Cloud Network Security - Node.js\nDESCRIPTION: Sample code for handling client and server TLS policies including creation, modification, retrieval, deletion and listing operations. Implements both client-side and server-side TLS policy management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Updating Policy Tag with Node.js Script\nDESCRIPTION: Execute this Node.js script to update an existing policy tag in Google Cloud. Ensure to have the necessary permissions and that the tag exists.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.update_policy_tag.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Agents.export_agent method in Google Cloud Dialogflow CX with Node.js\nDESCRIPTION: Example showing how to use the export_agent method from the Agents class in Google Cloud Dialogflow CX. This requires proper setup and authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/agents.export_agent.js\n```\n\n----------------------------------------\n\nTITLE: Resetting Identity-Aware Proxy Client Secret\nDESCRIPTION: This snippet resets the client secret for an existing identity-aware proxy client. It provides an example of how to perform a sensitive operation programmatically using the Google Identity-Aware Proxy API. The '@google-cloud/iap' library is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyOAuthServiceClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyOAuthServiceClient();\n\nasync function resetClientSecret(clientId) {\n  const response = await client.resetIdentityAwareProxyClientSecret({ clientId });\n  console.log('Reset Client Secret Response:', response);\n}\nresetClientSecret('your-client-id');\n```\n\n----------------------------------------\n\nTITLE: Resolving Service - Google Cloud Node.js\nDESCRIPTION: This code snippet resolves service endpoint information within the Google Cloud Service Directory using Node.js. The script requires the `@google-cloud/service-directory` library and the service details needed for resolution. The expected output is the resolved service's endpoint information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/lookup_service.resolve_service.js>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install project dependencies using npm package manager\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Process Document with Document AI in Node.js\nDESCRIPTION: This JavaScript code snippet demonstrates how to use the Document AI Node.js client library to process a document and extract text. It initializes the client, reads a file, encodes it, sends a processing request, and then extracts and prints paragraphs from the processed document.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'YOUR_PROJECT_ID';\n// const location = 'YOUR_PROJECT_LOCATION'; // Format is 'us' or 'eu'\n// const processorId = 'YOUR_PROCESSOR_ID'; // Create processor in Cloud Console\n// const filePath = '/path/to/local/pdf';\n\nconst {DocumentProcessorServiceClient} =\n  require('@google-cloud/documentai').v1;\n\n// Instantiates a client\n// apiEndpoint regions available: eu-documentai.googleapis.com, us-documentai.googleapis.com (Required if using eu based processor)\n// const client = new DocumentProcessorServiceClient({apiEndpoint: 'eu-documentai.googleapis.com'});\nconst client = new DocumentProcessorServiceClient();\n\nasync function quickstart() {\n  // The full resource name of the processor, e.g.:\n  // projects/project-id/locations/location/processor/processor-id\n  // You must create new processors in the Cloud Console first\n  const name = `projects/${projectId}/locations/${location}/processors/${processorId}`;\n\n  // Read the file into memory.\n  const fs = require('fs').promises;\n  const imageFile = await fs.readFile(filePath);\n\n  // Convert the image data to a Buffer and base64 encode it.\n  const encodedImage = Buffer.from(imageFile).toString('base64');\n\n  const request = {\n    name,\n    rawDocument: {\n      content: encodedImage,\n      mimeType: 'application/pdf',\n    },\n  };\n\n  // Recognizes text entities in the PDF document\n  const [result] = await client.processDocument(request);\n  const {document} = result;\n\n  // Get all of the document text as one big string\n  const {text} = document;\n\n  // Extract shards from the text field\n  const getText = textAnchor => {\n    if (!textAnchor.textSegments || textAnchor.textSegments.length === 0) {\n      return '';\n    }\n\n    // First shard in document doesn't have startIndex property\n    const startIndex = textAnchor.textSegments[0].startIndex || 0;\n    const endIndex = textAnchor.textSegments[0].endIndex;\n\n    return text.substring(startIndex, endIndex);\n  };\n\n  // Read the text recognition output from the processor\n  console.log('The document contains the following paragraphs:');\n  const [page1] = document.pages;\n  const {paragraphs} = page1;\n\n  for (const paragraph of paragraphs) {\n    const paragraphText = getText(paragraph.layout.textAnchor);\n    console.log(`Paragraph text:\\n${paragraphText}`);\n  }\n}\n\n\"\n```\n\n----------------------------------------\n\nTITLE: Listing Intents Dialogflow CX with Node.js\nDESCRIPTION: This snippet lists intents using the Dialogflow CX API in Node.js. It utilizes the `@google-cloud/dialogflow-cx` package. The script is executed via the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.list_intents.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Phrase Matcher with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a phrase matcher using the Contact Center Insights API. It utilizes the delete_phrase_matcher method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_phrase_matcher.js\n```\n\n----------------------------------------\n\nTITLE: Installing Web Security Scanner Client: Bash\nDESCRIPTION: This code snippet demonstrates how to install the Web Security Scanner client library for Node.js using npm. Ensure that Node.js and npm are installed on your system before running this command. The command installs the package globally.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/web-security-scanner\n```\n\n----------------------------------------\n\nTITLE: Listing Edge SLMs with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list edge SLMs (Service Level Managers) using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available edge SLMs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_edge_slms.js\n```\n\n----------------------------------------\n\nTITLE: Installing VM Migration Client Library with npm\nDESCRIPTION: Command to install the Google Cloud VM Migration client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/vmmigration\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different test suites in the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Crawled URLs with Web Security Scanner in Node.js\nDESCRIPTION: This script lists URLs that have been crawled during a web security scan using Google Cloud Web Security Scanner. It requires a Node.js environment and proper authentication. The output is a list of crawled URLs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.list_crawled_urls.js\"\n```\n\n----------------------------------------\n\nTITLE: Importing a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet illustrates the process of importing a flow into Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_99\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.import_flow.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: List Snapshots Dataflow API v1beta3\nDESCRIPTION: Demonstrates how to list snapshots using the Dataflow API v1beta3 in Node.js. It shows the command to execute the sample code, which would typically involve setting up authentication and any necessary environment variables before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/snapshots_v1_beta3.list_snapshots.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Phrase Matchers in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update phrase matchers using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_phrase_matcher method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_phrase_matcher.js\n```\n\n----------------------------------------\n\nTITLE: Create Crypto Key with JavaScript\nDESCRIPTION: Shows how to create a cryptographic key in Google Cloud KMS using Node.js. Dependencies include google-cloud-node library and proper authentication. Outputs the newly created crypto key object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a Workflow - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet shows how to delete a specific workflow given its workflow ID. It requires Node.js and access to Google Cloud Workflows API. The workflow ID is the key parameter needed. The output will confirm the deletion of the workflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function deleteWorkflow() {\n  const client = new WorkflowsClient();\n  const workflowId = 'YOUR_WORKFLOW_ID';\n  const request = {\n    name: `projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID/workflows/${workflowId}`\n  };\n  await client.deleteWorkflow(request);\n  console.log(`Deleted workflow: ${workflowId}`);\n}\ndeleteWorkflow();\n```\n\n----------------------------------------\n\nTITLE: Transferring Ownership using Permission Service with Node.js\nDESCRIPTION: This snippet illustrates the usage of the transferOwnership method from the PermissionService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/permission_service.transfer_ownership.js\n```\n\n----------------------------------------\n\nTITLE: Updating Listing\nDESCRIPTION: Example showing how to update an Analytics Hub listing\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.update_listing.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for BeyondCorp API in Node.js\nDESCRIPTION: This sample provides a quickstart implementation for leveraging the BeyondCorp API in Node.js applications. Before executing this snippet, ensure that the Node.js environment is properly set up. The primary input involves initial configurations, and upon execution, developers can expect a prompt to guide them through using BeyondCorp features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appgateways/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Messages in a Conversation in Dialogflow (JavaScript)\nDESCRIPTION: This snippet demonstrates how to list messages within a specific conversation using the Dialogflow API. It uses the list_messages method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.list_messages.js\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Cluster - Google Cloud Node\nDESCRIPTION: This snippet is designed to fetch the details of a specific Azure cluster. It efficiently provides information such as configurations and statuses by identifying the cluster using its unique name.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.getAzureCluster({name: 'projects/my-project/locations/my-location/azureClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Creating Provisioning Configuration in Bare Metal Solution\nDESCRIPTION: Sample script for creating a provisioning configuration in Google Cloud Bare Metal Solution. Enables automatic setup and configuration of bare metal infrastructure.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.create_provisioning_config.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Processor Versions with DocumentAI in Node.js\nDESCRIPTION: This snippet demonstrates how to list versions of a processor using the Google Cloud DocumentAI API. It uses the document_processor_service to retrieve a list of processor versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.list_processor_versions.js\n```\n\n----------------------------------------\n\nTITLE: Executing Config.get_terraform_version in Node.js\nDESCRIPTION: This snippet demonstrates how to get the Terraform version using the Config API. It requires the google-cloud-config package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.get_terraform_version.js\n```\n\n----------------------------------------\n\nTITLE: List Hardware Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to list hardware resources using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_hardware.js\n```\n\n----------------------------------------\n\nTITLE: Updating Device in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet illustrates how to update a device's properties in Google Cloud IoT. It enables changing device settings remotely. Dependencies include the Google Cloud IoT library, and it takes device ID and new properties as input, with a confirmation output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.update_device.js).\n```\n\n----------------------------------------\n\nTITLE: Listing Vulnerability Reports with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet illustrates how to list vulnerability reports using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1/os_config_zonal_service.list_vulnerability_reports.js\n```\n\n----------------------------------------\n\nTITLE: Updating Document AI v1beta3 Protos in Node.js\nDESCRIPTION: Update to the Document AI v1beta3 protos, referenced in a GitHub issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nUpdate documentai/v1beta3 protos (#152) (9e6b660)\n```\n\n----------------------------------------\n\nTITLE: Deleting Notebook Execution with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to delete a notebook execution using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.delete_execution.js\n```\n\n----------------------------------------\n\nTITLE: Updating API Deployments and Specifications in Node.js\nDESCRIPTION: Sample code for updating API deployments and specifications in the Apigee Registry using the Google Cloud Node.js library. Provides methods to modify and manage API metadata programmatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.update_api_deployment\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nRegistry.update_api_spec\n```\n\n----------------------------------------\n\nTITLE: Updating an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to update an existing experiment in Dialogflow CX. It uses the experiments.update_experiment method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.update_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Setting Default Branch with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet shows how to set the default branch for a catalog using the Google Cloud Retail API. It utilizes the CatalogService client to update the default branch setting for a specific catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.set_default_branch.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Package in Google Cloud\nDESCRIPTION: This snippet provides functionality for deleting a package from the Google Cloud Artifact Registry. Ensure that the necessary Google Cloud libraries are installed, and authentication is configured correctly before running this code in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a package\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_package.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_package.js\n```\n\n----------------------------------------\n\nTITLE: Updating Guest Policy - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet updates an existing guest policy in the OS Config service. You need to provide the necessary guest policy details and use the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for updating guest policy\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function updateGuestPolicy(policyId, policyDetails) {\n    const request = {guestPolicy: policyDetails};\n    await client.updateGuestPolicy(request);\n    console.log(`Updated guest policy: ${policyId}`);\n}\nupdateGuestPolicy('GUEST_POLICY_ID', { /* policy details */ });\n```\n\n----------------------------------------\n\nTITLE: Deleting a QA Scorecard with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet illustrates how to delete a QA scorecard using the Contact Center Insights API. It employs the delete_qa_scorecard method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_qa_scorecard.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Asset Feeds with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample demonstrates how to delete a feed in the Google Cloud Asset Inventory service using the v1p2beta1 API version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p2beta1/asset_service.delete_feed.js\n```\n\n----------------------------------------\n\nTITLE: Listing Versions in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to list all versions for a Dialogflow CX agent. It uses the versions.list_versions method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/versions.list_versions.js\n```\n\n----------------------------------------\n\nTITLE: Restore Backup in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: This snippet shows how to restore a backup using Google Cloud Backup and DR in Node.js. The script requires the `@google-cloud/backupdr` library. It should be executed with Node.js to perform the restore operation and report the outcome.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.restore_backup.js\n```\n\n----------------------------------------\n\nTITLE: Stop Oracle Autonomous Database Command\nDESCRIPTION: Node.js command to stop an autonomous database instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.stop_autonomous_database.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example demonstrating how to test IAM permissions in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Update Contact\nDESCRIPTION: Sample code for updating an existing contact in the Essential Contacts API using Node.js. Demonstrates how to modify contact information through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.update_contact.js\n```\n\n----------------------------------------\n\nTITLE: Updating Taxonomy Metadata via Node.js\nDESCRIPTION: This script updates metadata for a taxonomy in Google Cloud Data Catalog using Node.js. Verify that the taxonomy exists and permissions are in place.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.update_taxonomy.js\"\n```\n\n----------------------------------------\n\nTITLE: Generating Suggestions for a Conversation in Dialogflow (JavaScript)\nDESCRIPTION: This snippet illustrates how to generate suggestions for an ongoing conversation in Dialogflow. It uses the generate_suggestions method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.generate_suggestions.js\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting IAM Policy v3\nDESCRIPTION: Sample code for troubleshooting IAM policies using v3 of the Policy Troubleshooter API. Located in the google-cloud-policytroubleshooter-iam package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policytroubleshooter-iam/samples/generated/v3/policy_troubleshooter.troubleshoot_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Release Sample\nDESCRIPTION: This sample demonstrates how to create a release using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_release.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Management DNS Zone Binding with Node.js\nDESCRIPTION: This JavaScript snippet helps to remove a management DNS zone binding using Node.js in VMware Engine. Dependencies include Google Cloud libraries. Execute via the Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_management_dns_zone_binding.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Workload from App Hub - Node.js\nDESCRIPTION: This snippet fetches details of a specific workload from Google Cloud App Hub, providing insights into the workload management within the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.get_workload.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_workload.js\n```\n\n----------------------------------------\n\nTITLE: Initializing Key Management Service Client in Node.js\nDESCRIPTION: Set up a KeyManagementServiceClient to interact with Google Cloud KMS, list key rings in a specific project and location. Requires project and location configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {KeyManagementServiceClient} = require('@google-cloud/kms');\n\n// Instantiates a client\nconst client = new KeyManagementServiceClient();\n\n// Build the location name\nconst locationName = client.locationPath(projectId, locationId);\n\nasync function listKeyRings() {\n  const [keyRings] = await client.listKeyRings({\n    parent: locationName,\n  });\n\n  for (const keyRing of keyRings) {\n    console.log(keyRing.name);\n  }\n\n  return keyRings;\n}\n\nreturn listKeyRings();\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Administrative Operations List\nDESCRIPTION: Index of available AlloyDB administrative operations with links to their implementations in Node.js, including cluster management, instance operations, backup handling, and user administration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_40\n\nLANGUAGE: markdown\nCODE:\n```\n| Operation | Source | Cloud Shell |\n| --- | --- | --- |\n| Alloy_d_b_admin.create_secondary_cluster\n| Alloy_d_b_admin.create_secondary_instance\n| Alloy_d_b_admin.create_user\n| Alloy_d_b_admin.delete_backup\n| Alloy_d_b_admin.delete_cluster\n| Alloy_d_b_admin.delete_instance\n| Alloy_d_b_admin.delete_user\n| Alloy_d_b_admin.execute_sql\n| Alloy_d_b_admin.failover_instance\n| Alloy_d_b_admin.generate_client_certificate\n| Alloy_d_b_admin.get_backup\n| Alloy_d_b_admin.get_cluster\n| Alloy_d_b_admin.get_connection_info\n| Alloy_d_b_admin.get_instance\n| Alloy_d_b_admin.get_user\n| Alloy_d_b_admin.inject_fault\n| Alloy_d_b_admin.list_backups\n| Alloy_d_b_admin.list_clusters\n| Alloy_d_b_admin.list_databases\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests - Node.js\nDESCRIPTION: This snippet describes the command to execute unit tests for the codebase using npm. The 'npm test' command will run all the unit tests that have been defined in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: Command for executing unit tests in the project. Verifies code functionality and ensures test coverage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Workflows Service V2 Beta Pipeline Execution\nDESCRIPTION: Sample script for running a pipeline using the Google Cloud Life Sciences Workflows Service V2 Beta client library. Demonstrates how to execute workflows in a cloud environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-lifesciences/samples/generated/v2beta/workflows_service_v2_beta.run_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB Instance - Node.js\nDESCRIPTION: Sample code demonstrating how to update an AlloyDB instance configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.update_instance.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Experiment in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to delete an existing experiment in Dialogflow CX using Node.js. The sample provides the command-line execution example for the experiment deletion operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.delete_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_import_job script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_import_job sample script. This script demonstrates how to delete an import job using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB Instance in Node.js\nDESCRIPTION: This code snippet demonstrates how to create an AlloyDB instance using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating Connectivity Test in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to create a new connectivity test using the Google Cloud Network Management API v1beta1. Connectivity tests validate network paths between resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.create_connectivity_test.js\n```\n\n----------------------------------------\n\nTITLE: Acknowledge Violation in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to acknowledge a violation within the Assured Workloads service using the google-cloud-node library.  It utilizes the AssuredWorkloadsService client to send an acknowledgement for a specified violation. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Resume Replication - Google Cloud NetApp Node.js\nDESCRIPTION: Example usage of the NetApp API to resume a paused replication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.resume_replication.js\n```\n\n----------------------------------------\n\nTITLE: Get Cluster in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_cluster sample for the VMware Engine API. This retrieves detailed information about a specific VMware Engine cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_cluster.js\n```\n\n----------------------------------------\n\nTITLE: AutoML Get Dataset in Node.js\nDESCRIPTION: This sample demonstrates retrieving a dataset using the AutoML API in Node.js. The `getDataset` function is invoked. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.get_dataset\"\n```\n\n----------------------------------------\n\nTITLE: Usage Instructions - Domain API Samples\nDESCRIPTION: Code snippet showing the setup commands needed to run the domain API samples. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Installing Security Center Management API Node.js Client\nDESCRIPTION: This snippet shows how to install the Security Center Management API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/securitycentermanagement\n```\n\n----------------------------------------\n\nTITLE: Using the Google Cloud Billing Budgets client to list budgets\nDESCRIPTION: Example code that demonstrates how to initialize the BudgetServiceClient and list budgets for a billing account using the Google Cloud Billing Budgets API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// const billingAccount = 'billingAccounts/000000-000000-000000'\n\n// Imports the Google Cloud client library\nconst {BudgetServiceClient} = require('@google-cloud/billing-budgets');\n\n// Creates a client\nconst budget = new BudgetServiceClient();\n\nasync function quickstart() {\n  // List budgets for a billing account\n  const [result] = await budget.listBudgets({\n    parent: billingAccount,\n  });\n  console.info(result);\n}\n\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Listing Vehicles with the Fleet Engine API in Node.js\nDESCRIPTION: This code demonstrates how to use the Fleet Engine client library to list vehicles. It shows how to instantiate the VehicleServiceClient, construct a request with various filtering options, and process the response asynchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  The standard Fleet Engine request header.\n */\n// const header = {}\n/**\n *  Required. Must be in the format `providers/{provider}`.\n *  The provider must be the Project ID (for example, `sample-cloud-project`)\n *  of the Google Cloud Project of which the service account making\n *  this call is a member.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of vehicles to return.\n *  Default value: 100.\n */\n// const pageSize = 1234\n/**\n *  The value of the `next_page_token` provided by a previous call to\n *  `ListVehicles` so that you can paginate through groups of vehicles. The\n *  value is undefined if the filter criteria of the request is not the same as\n *  the filter criteria for the previous call to `ListVehicles`.\n */\n// const pageToken = 'abc123'\n/**\n *  Specifies the required minimum capacity of the vehicle. All vehicles\n *  returned will have a `maximum_capacity` greater than or equal to this\n *  value. If set, must be greater or equal to 0.\n */\n// const minimumCapacity = {}\n/**\n *  Restricts the response to vehicles that support at least one of the\n *  specified trip types.\n */\n// const tripTypes = [1,2,3,4]\n/**\n *  Restricts the response to vehicles that have sent location updates to Fleet\n *  Engine within the specified duration. Stationary vehicles still\n *  transmitting their locations are not considered stale. If present, must be\n *  a valid positive duration.\n */\n// const maximumStaleness = {}\n/**\n *  Required. Restricts the response to vehicles with one of the specified type\n *  categories. `UNKNOWN` is not allowed.\n */\n// const vehicleTypeCategories = [1,2,3,4]\n/**\n *  Callers can form complex logical operations using any combination of the\n *  `required_attributes`, `required_one_of_attributes`, and\n *  `required_one_of_attribute_sets` fields.\n *  `required_attributes` is a list; `required_one_of_attributes` uses a\n *  message which allows a list of lists. In combination, the two fields allow\n *  the composition of this expression:\n *  ```\n *  (required_attributes0  AND required_attributes1  AND ...)\n *  AND\n *  (required_one_of_attributes0 0  OR required_one_of_attributes0 1  OR\n *  ...)\n *  AND\n *  (required_one_of_attributes1 0  OR required_one_of_attributes1 1  OR\n *  ...)\n *  ```\n *  Restricts the response to vehicles with the specified attributes. This\n *  field is a conjunction/AND operation. A max of 50 required_attributes is\n *  allowed. This matches the maximum number of attributes allowed on a\n *  vehicle. Each repeated string should be of the format \"key:value\".\n */\n// const requiredAttributes = ['abc','def']\n/**\n *  Restricts the response to vehicles with at least one of the specified\n *  attributes in each `VehicleAttributeList`. Within each list, a vehicle must\n *  match at least one of the attributes. This field is an inclusive\n *  disjunction/OR operation in each `VehicleAttributeList` and a\n *  conjunction/AND operation across the collection of `VehicleAttributeList`.\n *  Each repeated string should be of the format\n *  \"key1:value1|key2:value2|key3:value3\".\n */\n// const requiredOneOfAttributes = ['abc','def']\n/**\n *  `required_one_of_attribute_sets` provides additional functionality.\n *  Similar to `required_one_of_attributes`, `required_one_of_attribute_sets`\n *  uses a message which allows a list of lists, allowing expressions such as\n *  this one:\n *  ```\n *  (required_attributes0  AND required_attributes1  AND ...)\n *  AND\n *  (\n *    (required_one_of_attribute_sets0 0  AND\n *    required_one_of_attribute_sets0 1  AND\n *    ...)\n *    OR\n *    (required_one_of_attribute_sets1 0  AND\n *    required_one_of_attribute_sets1 1  AND\n *    ...)\n *  )\n *  ```\n *  Restricts the response to vehicles that match all the attributes in a\n *  `VehicleAttributeList`. Within each list, a vehicle must match all of the\n *  attributes. This field is a conjunction/AND operation in each\n *  `VehicleAttributeList` and inclusive disjunction/OR operation across the\n *  collection of `VehicleAttributeList`. Each repeated string should be of the\n *  format \"key1:value1|key2:value2|key3:value3\".\n */\n// const requiredOneOfAttributeSets = ['abc','def']\n/**\n *  Restricts the response to vehicles that have this vehicle state.\n */\n// const vehicleState = {}\n/**\n *  Only return the vehicles with current trip(s).\n */\n// const onTripOnly = true\n/**\n *  Optional. A filter query to apply when listing vehicles. See\n *  http://aip.dev/160 for examples of the filter syntax.\n *  This field is designed to replace the `required_attributes`,\n *  `required_one_of_attributes`, and `required_one_of_attributes_sets` fields.\n *  If a non-empty value is specified here, the following fields must be empty:\n *  `required_attributes`, `required_one_of_attributes`, and\n *  `required_one_of_attributes_sets`.\n *  This filter functions as an AND clause with other constraints,\n *  such as `vehicle_state` or `on_trip_only`.\n *  Note that the only queries supported are on vehicle attributes (for\n *  example, `attributes.<key> = <value>` or `attributes.<key1> = <value1> AND\n *  attributes.<key2> = <value2>`). The maximum number of restrictions allowed\n *  in a filter query is 50.\n *  Also, all attributes are stored as strings, so the only supported\n *  comparisons against attributes are string comparisons. In order to compare\n *  against number or boolean values, the values must be explicitly quoted to\n *  be treated as strings (for example, `attributes.<key> = \"10\"` or\n *  `attributes.<key> = \"true\"`).\n */\n// const filter = 'abc123'\n/**\n *  Optional. A filter that limits the vehicles returned to those whose last\n *  known location was in the rectangular area defined by the viewport.\n */\n// const viewport = {}\n\n// Imports the Fleetengine library\nconst {VehicleServiceClient} = require('@googlemaps/fleetengine').v1;\n\n// Instantiates a client\nconst fleetengineClient = new VehicleServiceClient();\n\nasync function callListVehicles() {\n  // Construct request\n  const request = {\n    parent,\n    vehicleTypeCategories,\n  };\n\n  // Run request\n  const iterable = fleetengineClient.listVehiclesAsync(request);\n  for await (const response of iterable) {\n      console.log(response);\n  }\n}\n\ncallListVehicles();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Client Libraries\nDESCRIPTION: Command to install all necessary dependencies for the project using npm. This is a prerequisite step before running tests or making code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating AWS Node Pools with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to create a node pool for an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows how to add worker nodes to an existing AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.create_aws_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter and potentially fixes any code style issues in the Google Cloud Node.js library project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes the system tests for the project using npm. System tests validate the end-to-end functionality of the library, ensuring it interacts correctly with Google Cloud services in a real-world environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Delete Deploy Policy Sample\nDESCRIPTION: This sample demonstrates how to delete a deploy policy using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_deploy_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Entry Contact Modification Sample\nDESCRIPTION: Node.js script to modify contacts associated with a Data Catalog entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.modify_entry_contacts.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Development\nDESCRIPTION: Command to install all required npm dependencies before development or testing. This must be run after setting up the Node.js environment and before running any tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Create Note with Grafeas in Node.js\nDESCRIPTION: This sample shows how to create a single note using the Grafeas API in Node.js. It requires the google-devtools-containeranalysis package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/grafeas.create_note.js`\n```\n\n----------------------------------------\n\nTITLE: Exporting Prediction Result Metadata with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code example demonstrates how to export prediction result metadata using the A_m_l.export_prediction_result_metadata method of the Google Cloud Financial Services API. The necessary Node.js package and credentials are required for execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.export_prediction_result_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Sessions with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for deleting sessions using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionController.deleteSession method to remove an existing session and free up resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_controller.delete_session.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Library\nDESCRIPTION: Commands to run various test suites including unit tests, sample integration tests, and system tests for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Create Deployment in Telco Automation API - JavaScript\nDESCRIPTION: Creates a new deployment using the Telco Automation API v1alpha1. This sample shows the deployment creation process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.create_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Infrastructure Manager API Node.js Client Library\nDESCRIPTION: Command to install the Infrastructure Manager API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/config\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node Project\nDESCRIPTION: Command to run the linter which may automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Managing Quota Preferences with Cloud Quotas API in Node.js (v1beta)\nDESCRIPTION: Beta version samples for managing quota preferences including creating, getting, listing and updating quota preferences using the Cloud Quotas API v1beta.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.create_quota_preference.js\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.get_quota_preference.js\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.list_quota_preferences.js\nnode packages/google-api-cloudquotas/samples/generated/v1beta/cloud_quotas.update_quota_preference.js\n```\n\n----------------------------------------\n\nTITLE: Finalizing a Backup with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to finalize a backup using the BackupDR service in Node.js. It utilizes the google-cloud-node library and provides the command-line usage for running the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.finalize_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Getting LB Traffic Extension with Network Services API in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a load balancer traffic extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.get_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Subscribe to Analytics Hub Listing - Node.js\nDESCRIPTION: Example showing how to subscribe to a listing in Google Analytics Hub using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.subscribe_listing.js\n```\n\n----------------------------------------\n\nTITLE: Stopping Managed Kafka Connector in Node.js\nDESCRIPTION: This snippet illustrates how to stop a connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.stop_connector.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Update Corpus Example in Node.js\nDESCRIPTION: Executes a JavaScript script to update a corpus via the Retriever service, necessitating Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.update_corpus.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Runtime Project Attachment Lookup in Node.js\nDESCRIPTION: Command to execute the runtime project attachment lookup sample for Google Cloud API Hub. This script demonstrates how to lookup runtime project attachments using the API Hub service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/runtime_project_attachment_service.lookup_runtime_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Replace GKE Gateway Resource\nDESCRIPTION: Sample code showing how to replace an existing resource in GKE Connect Gateway using PUT method\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_service.put_resource.js\n```\n\n----------------------------------------\n\nTITLE: Updating Google Cloud IAP Tunnel Dest Group in JavaScript\nDESCRIPTION: Executes a sample script to update a tunnel destination group using Google Cloud Identity-Aware Proxy admin service. Requires Node.js environment to run. Input the command provided under usage in a terminal to perform the update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_admin_service.update_tunnel_dest_group.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Enrollment with Eventarc in Node.js\nDESCRIPTION: This code snippet handles the deletion of an enrollment in Eventarc, executed through a Node.js environment. Prerequisites involve setup of Node.js and authentication. Outputs relate to enrollment deletion status upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.delete_enrollment.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Node.js system tests with npm\nDESCRIPTION: This command executes the system tests for the project using npm. It runs the script defined under the `system-test` key in the `package.json` file, which typically involves end-to-end testing of the library against a real or emulated Google Cloud service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Get Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to get a worker pool using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Package Version Update Example (Node.js)\nDESCRIPTION: Example version reference in a Node.js package upgrade\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"@google-cloud/private-catalog\": \"^4.0.1\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Conversion Workspace with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet illustrates the process of deleting a conversion workspace using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.delete_conversion_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Instance Management in Google App Engine using Node.js\nDESCRIPTION: Sample code demonstrating instance operations in Google App Engine. Includes debugging, deleting, getting and listing instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/instances.debug_instance.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/instances.delete_instance.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/instances.get_instance.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/instances.list_instances.js\n```\n\n----------------------------------------\n\nTITLE: Deleting External Address with Node.js\nDESCRIPTION: Use this snippet to remove an external address in VMware Engine via Node.js. Ensure Google Cloud modules are installed. Run with the given Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_external_address.js\n```\n\n----------------------------------------\n\nTITLE: Running unit tests with npm\nDESCRIPTION: This command executes the unit tests for the project using npm.  It typically invokes a testing framework (e.g., Mocha, Jest) configured in the `package.json` file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run unit tests.\\nnpm test\"\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm. It retrieves and installs all packages listed in the project's package.json file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Create Spoke\nDESCRIPTION: Command line usage example for creating a new spoke in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.create_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Managing Backup Operations in Dataproc Metastore\nDESCRIPTION: Sample code demonstrating how to perform backup management operations including deletion in Dataproc Metastore\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Getting Dialogflow CX Generator\nDESCRIPTION: Command to retrieve a Dialogflow CX generator using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_106\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/generators.get_generator.js\n```\n\n----------------------------------------\n\nTITLE: Creating Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a workflow template in Google Cloud Dataproc using the API. It requires authentication with Google Cloud and proper configuration of the Dataproc service client. The function takes parameters for the workflow template configuration and outputs the created template details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function createWorkflowTemplate() {\n  // Define the workflow template\n  const template = {\n    // ...template properties\n  };\n  const request = {\n    parent: 'projects/your-project/regions/global',\n    workflowTemplate: template,\n  };\n\n  // Create the workflow template\n  const [response] = await client.createWorkflowTemplate(request);\n  console.log('Created workflow template:', response);\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Notification Configurations in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet lists notification configurations in the Google Cloud Security Center, which is critical for managing alerts and notifications effectively. Preparation includes proper configuration and permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_notification_configs.js\n```\n\n----------------------------------------\n\nTITLE: Adding DocumentAI Configuration Options\nDESCRIPTION: New configuration options for enabling LLM layout parsing in Document AI, expanding processing capabilities\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Example of new configuration option\nconst documentAiConfig = {\n  llmLayoutParsing: true\n}\n```\n\n----------------------------------------\n\nTITLE: Scheduling Deletion of a Certificate Authority using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This snippet illustrates how to schedule the deletion of a certificate authority using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.schedule_delete_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Getting LUN - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to get the details of a Logical Unit Number (LUN) in the Google Cloud Bare Metal Solution using Node.js. Ensure necessary permissions are set to execute the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function getLun() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/luns/YOUR_LUN_ID',\n  };\n  const response = await client.getLun(request);\n  console.log('LUN details:', response);\n}\ngetLun();\n```\n\n----------------------------------------\n\nTITLE: Get Namespace using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `getNamespace` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for retrieving a namespace.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.get_namespace.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Data QnA Node.js Client Library\nDESCRIPTION: Command to install the Data QnA client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @google-cloud/data-qna\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow SIP Trunks in Node.js\nDESCRIPTION: Comprehensive set of operations for SIP trunk management including creation, deletion, retrieval, listing, and updating SIP trunk configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_48\n\n\n\n----------------------------------------\n\nTITLE: Installing KMS Inventory API Client with npm\nDESCRIPTION: Installs the KMS Inventory API client library using npm, which is the Node.js package manager. This is essential for accessing the Key Management System Inventory API in Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/kms-inventory\n```\n\n----------------------------------------\n\nTITLE: Markdown Comment for Generated Content\nDESCRIPTION: A markdown comment indicating that the file is generated by synthtool and should not be edited manually.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Commands to install the required Node.js dependencies for running the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Validating Trust with Node.js\nDESCRIPTION: The code snippet validates existing domain trust relationships using Node.js and Managed Identities API. Prerequisites include installation of the 'google-cloud-managedidentities' and relevant authorization. This function ensures trust configurations are valid and operational.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.validate_trust.js\n```\n\n----------------------------------------\n\nTITLE: Using the Google Marketing Platform Admin API Client in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the client and make a request to list Analytics account links. It requires setting up authentication and enabling the API before use.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-marketingplatform-admin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent organization, which owns this collection of Analytics\n *  account links. Format: organizations/{org_id}\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of Analytics account links to return in one\n *  call. The service may return fewer than this value.\n *  If unspecified, at most 50 Analytics account links will be returned. The\n *  maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous ListAnalyticsAccountLinks\n *  call. Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to\n *  `ListAnalyticsAccountLinks` must match the call that provided the page\n *  token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Admin library\nconst {MarketingplatformAdminServiceClient} =\n  require('@google-ads/marketing-platform-admin').v1alpha;\n\n// Instantiates a client\nconst adminClient = new MarketingplatformAdminServiceClient({fallback: true});\n\nasync function callListAnalyticsAccountLinks() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = adminClient.listAnalyticsAccountLinksAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAnalyticsAccountLinks();\n```\n\n----------------------------------------\n\nTITLE: Switching Over AlloyDB Cluster - Node.js\nDESCRIPTION: Sample code showing how to perform a switchover operation on an AlloyDB cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.switchover_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js project before running tests or making contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Executing list_app_connections Sample Code\nDESCRIPTION: This Node.js code lists all app connections available via the BeyondCorp API. Ensure prior setup and installation of required libraries are completed. The script outputs a list of connections and requires proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.list_app_connections.js\n```\n\n----------------------------------------\n\nTITLE: Creating API Permissions\nDESCRIPTION: Sample showing how to create permissions for API access using the Permission Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.create_permission.js\n```\n\n----------------------------------------\n\nTITLE: Delete Customer using Cloud Controls Partner Core API (v1beta)\nDESCRIPTION: Sample code demonstrating how to delete an existing customer using the Cloud Controls Partner Core API v1beta endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/generated/v1beta/cloud_controls_partner_core.delete_customer.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Workflow Template - Google Cloud Dataproc - JavaScript\nDESCRIPTION: This code snippet shows how to delete a specific workflow template from Google Cloud Dataproc. The method requires the name of the workflow template to be deleted and expects the operation result upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import required libraries\nconst {WorkflowTemplateServiceClient} = require('@google-cloud/dataproc');\n\n// Create a client\nconst client = new WorkflowTemplateServiceClient();\n\nasync function deleteWorkflowTemplate(templateName) {\n  const request = {\n    name: templateName,\n  };\n  const [operation] = await client.deleteWorkflowTemplate(request);\n  console.log('Deleted workflow template:', operation);\n}\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format in Markdown\nDESCRIPTION: Standard format for documenting version changes including version number, comparison link, and categorized changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/confidentialcomputing-v2.0.0...confidentialcomputing-v2.0.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Updating Prediction Result in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update a prediction result using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_prediction_result.js`\n```\n\n----------------------------------------\n\nTITLE: Running Batch Test Case Execution\nDESCRIPTION: Executes the script to run multiple test cases in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Processes and runs each test case to validate intents and responses systematically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_66\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/test_cases.batch_run_test_cases.js\n```\n\n----------------------------------------\n\nTITLE: Listing Playbook Versions in Dialogflow CX using Node.js\nDESCRIPTION: The Node.js script lists all available versions of a specific playbook in Dialogflow CX, using the API client library. Requires authentication. Outputs version list.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_127\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.list_playbook_versions.js\n```\n\n----------------------------------------\n\nTITLE: Query Metadata in Dataproc Metastore\nDESCRIPTION: Example demonstrating how to query metadata stored in Dataproc Metastore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1alpha/dataproc_metastore.query_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Build Client Library in Node.js\nDESCRIPTION: This command installs the Google Cloud Build client library for Node.js using npm. It is required to execute any functionality provided by the Cloud Build API in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/cloudbuild\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes the system tests, which perform end-to-end testing of the entire system or a significant part of it. These tests validate the functionality and performance of the application in a production-like environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: List Oracle Autonomous Database Versions Command\nDESCRIPTION: Node.js command to list available versions for autonomous databases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.list_autonomous_db_versions.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This code demonstrates the process of creating a new flow in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and assumes proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_94\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.create_flow.js\n```\n\n----------------------------------------\n\nTITLE: Writing User Events to Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code showing how to write individual user events to Google Cloud Retail API. Used for recording real-time user interactions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_79\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.write_user_event.js\n```\n\n----------------------------------------\n\nTITLE: Updating Settings in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to update settings using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.update_settings method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.update_settings.js\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Chunks with Retriever Service in JavaScript\nDESCRIPTION: This sample shows how to batch delete chunks utilizing the RetrieverService within the google-ai-generativelanguage package. The provided command will execute the sample to remove multiple chunks simultaneously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.batch_delete_chunks.js`\n```\n\n----------------------------------------\n\nTITLE: Executing License Management Service - Node.js CLI Usage Examples\nDESCRIPTION: Command line usage examples for various License Management Service operations including assign, enumerate_licensed_users, get_license_pool, unassign, and update_license_pool. Each command demonstrates how to run the corresponding sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/license_management_service.assign.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/license_management_service.enumerate_licensed_users.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/license_management_service.get_license_pool.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/license_management_service.unassign.js\nnode packages/google-cloud-commerce-consumer-procurement/samples/generated/v1/license_management_service.update_license_pool.js\n```\n\n----------------------------------------\n\nTITLE: Running Cache Service Sample - JavaScript\nDESCRIPTION: Command to execute the cache service sample for managing cached content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1alpha/cache_service.create_cached_content.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Merchant API Node.js Client Library\nDESCRIPTION: Command to install the Merchant API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-conversions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/conversions\n```\n\n----------------------------------------\n\nTITLE: Listing Aspect Types with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet illustrates how to list aspect types using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.list_aspect_types.js\n```\n\n----------------------------------------\n\nTITLE: Generating AWS Cluster Agent Tokens with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to generate a cluster agent token for an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This token is used by the GKE Connect Agent.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.generate_aws_cluster_agent_token.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Connection Profile in Google Cloud Datastream - Node.js\nDESCRIPTION: Deletes a connection profile in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and proper permissions for deleting connection profiles.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function deleteConnectionProfile() {\n  const request = {\n    // Parameters to identify the connection profile to delete\n  };\n\n  const [operation] = await client.deleteConnectionProfile(request);\n  await operation.promise();\n  console.log('Connection profile deleted');\n}\n\ndeleteConnectionProfile();\n```\n\n----------------------------------------\n\nTITLE: Cloud IDS Endpoint Creation Sample Usage\nDESCRIPTION: Command to execute the endpoint creation sample code for Cloud IDS.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-ids/samples/generated/v1/i_d_s.create_endpoint.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Approve Rollout Sample\nDESCRIPTION: This sample demonstrates how to approve a rollout using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.approve_rollout.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Model with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a model using the A_m_l.get_model method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and authentication to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_model.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Run Task Sample\nDESCRIPTION: Shows how to forcibly run a task in Cloud Tasks using the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.run_task.js\n```\n\n----------------------------------------\n\nTITLE: Getting Latest Recovery Time with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to retrieve the latest recovery time of a Google Cloud SQL instance using the `get_latest_recovery_time` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.get_latest_recovery_time.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Web Security Scanner Scan Run with Node.js\nDESCRIPTION: A Node.js script to retrieve details of a specific scan run from the Web Security Scanner. Confirm the Google Cloud SDK setup before using Node.js to run this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.get_scan_run.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Channel with Eventarc API in Node.js\nDESCRIPTION: This code sample demonstrates how to update a channel using the Eventarc API. It is included in the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_channel.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Get Connection Info in Node.js\nDESCRIPTION: Demonstrates how to obtain connection information for an AlloyDB instance using the Node.js client library. It involves initializing the AlloyDBAdmin client and calling the `getConnectionInfo` method. This sample depends on having proper project setup and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.get_connection_info | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_connection_info.js)\"\n```\n\n----------------------------------------\n\nTITLE: Running Policy Tag Deletion Script in Node.js\nDESCRIPTION: This Node.js script deletes a specified policy tag in Google Cloud Data Catalog. The script must be run in a Node.js environment with permissions to remove tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.delete_policy_tag.js\"\n```\n\n----------------------------------------\n\nTITLE: Using the Policy Simulator API Node.js Client Library\nDESCRIPTION: Example of using the Policy Simulator API client library to list replay results. It demonstrates importing the library, instantiating a client, and making an API call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The Replay google.cloud.policysimulator.v1.Replay  whose\n *  results are listed, in the following format:\n *  `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`\n *  Example:\n *  `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of\n *  ReplayResult google.cloud.policysimulator.v1.ReplayResult  objects to\n *  return. Defaults to 5000.\n *  The maximum value is 5000; values above 5000 are rounded down to 5000.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous\n *  Simulator.ListReplayResults google.cloud.policysimulator.v1.Simulator.ListReplayResults\n *  call. Provide this token to retrieve the next page of results.\n *  When paginating, all other parameters provided to\n *  Simulator.ListReplayResults  must match the call that provided the page\n *  token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Policysimulator library\nconst {SimulatorClient} = require('@google-cloud/policysimulator').v1;\n\n// Instantiates a client\nconst policysimulatorClient = new SimulatorClient();\n\nasync function callListReplayResults() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await policysimulatorClient.listReplayResultsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListReplayResults();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting an NPM Package in Google Cloud\nDESCRIPTION: This snippet is used to retrieve an NPM package from the Google Cloud Artifact Registry. It requires necessary Google Cloud libraries and valid user permissions for successful execution in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting an NPM package\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_npm_package.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_npm_package.js\n```\n\n----------------------------------------\n\nTITLE: Marking a Recommendation as Failed in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to mark a recommendation as failed using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the mark_recommendation_failed method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.mark_recommendation_failed.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backtest Results with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code sample demonstrates how to list backtest results using the A_m_l.list_backtest_results method of the Google Cloud Financial Services API. The necessary Node.js package and credentials are required to execute this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_backtest_results.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deleting an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This code demonstrates how to delete an existing experiment in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and assumes proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_88\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.delete_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Adding missing Cloud Build RPCs to retry config\nDESCRIPTION: This snippet describes the addition of missing Cloud Build RPCs to the retry configuration and integrates Node 8 tests. Ensuring proper retry configurations enhances reliability and stability, especially during temporary network issues or service disruptions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * add missing cloudbuild RPCs to retry config, add Node 8 tests  ([#141](https://www.github.com/googleapis/nodejs-cloudbuild/issues/141)) ([e4b83e8](https://www.github.com/googleapis/nodejs-cloudbuild/commit/e4b83e8a63f6ddba2ea158ab0ed9b4a50fa536bf))\n */\n```\n\n----------------------------------------\n\nTITLE: Adding POSIX & Manifest samples in Node.js\nDESCRIPTION: This commit adds new samples for POSIX and Manifest functionality to the Storage Transfer Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* **samples:** Add POSIX & Manifest samples ([#67](https://github.com/googleapis/nodejs-storage-transfer/issues/67)) ([1056c9f](https://github.com/googleapis/nodejs-storage-transfer/commit/1056c9fde90c0c7b79a235d4c9f5f861efce3169))\n```\n\n----------------------------------------\n\nTITLE: Executing Node.js Samples\nDESCRIPTION: Basic commands to setup and run the Node.js samples for Google Cloud Talent Solution\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Libraries\nDESCRIPTION: Commands to run different test suites for the Google Cloud Node.js libraries, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting a Deployment with API Hub using Node.js\nDESCRIPTION: This script demonstrates how to delete a deployment using the Google Cloud API Hub with Node.js. It requires Node.js runtime to execute the script by running a specific command in the terminal. The script provides functionality for removing specified deployments from the system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Reporting App Connector Status in Node.js\nDESCRIPTION: Sample script for reporting the status of a BeyondCorp App Connector using the Google Cloud Node.js client library. Enables tracking and updating connector health status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.report_status.js\n```\n\n----------------------------------------\n\nTITLE: Listing Storage Pools with NetApp API in Node.js\nDESCRIPTION: Example demonstrating how to use the NetApp API client library to list storage pools asynchronously. The code initializes the client and sends a request to fetch storage pools for a specified parent resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of items to return.\n */\n// const pageSize = 1234\n/**\n *  The next_page_token value to use if there are additional\n *  results to retrieve for this list request.\n */\n// const pageToken = 'abc123'\n/**\n *  Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted).\n */\n// const orderBy = 'abc123'\n/**\n *  List filter.\n */\n// const filter = 'abc123'\n\n// Imports the Netapp library\nconst {NetAppClient} = require('@google-cloud/netapp').v1;\n\n// Instantiates a client\nconst netappClient = new NetAppClient();\n\nasync function callListStoragePools() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await netappClient.listStoragePoolsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListStoragePools();\n```\n\n----------------------------------------\n\nTITLE: Stopping Experiment in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to stop a running experiment in Dialogflow CX using Node.js. The sample provides the command-line execution example for the stop experiment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.stop_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Shares in Google Cloud Filestore - JavaScript\nDESCRIPTION: This code illustrates how to list all shares in a Google Cloud Filestore instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n// List Shares Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function listShares(projectId) {\n  // Implementation for listing shares\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Certificate Authority Service - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates updating a certificate authority using the Google Cloud Node.js library. It requires the library as a dependency and interacts with the Certificate Authority Service API to apply updates. Key inputs are the resource identifiers and updated configurations, with expected outputs being a confirmation of the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.update_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Product using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to create a product using the Google Cloud Vision API. It uses the ProductSearch.createProduct method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.create_product.js\n```\n\n----------------------------------------\n\nTITLE: Get Airflow Environment - Node.js\nDESCRIPTION: Retrieves details of a specific Airflow environment using the Google Cloud Orchestration Airflow Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for OS Config Service - Google Cloud - JavaScript\nDESCRIPTION: This snippet provides a quickstart example for utilizing the OS Config service in Google Cloud. It demonstrates the basic setup required to start managing patch jobs and guest policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for quickstart\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function quickstart() {\n    // Basic setup, demonstrate handling patch jobs or guest policies\n    console.log('Welcome to the OS Config quickstart!');\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Asymmetric Sign using Key Management Service JavaScript\nDESCRIPTION: Demonstrates performing an asymmetric signing operation using Google Cloud KMS in Node.js. It requires the presence of a cryptographic key and provides outputs as the digital signature for given inputs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Updating a User in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet updates the properties of a user in AlloyDB, which is crucial for managing access and roles. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function updateUser() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Host Project Registration Details using Node.js\nDESCRIPTION: Sample code demonstrating how to get information about a registered host project using the get_host_project_registration method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/host_project_registration_service.get_host_project_registration.js\n```\n\n----------------------------------------\n\nTITLE: Adding Local Inventories - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet shows how to add local inventories for a product in Google Cloud Retail. It requires Node.js and the Google Cloud SDK preconfigured. The input consists of inventory details for the product, and the output is the successful addition of local inventories.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for adding local inventories\n```\n\n----------------------------------------\n\nTITLE: Service Stub Exposure\nDESCRIPTION: Code changes to make the service stub publicly accessible for external usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_32\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport { ServiceStub } from './service_stub';\n```\n\n----------------------------------------\n\nTITLE: Documenting Bug Fixes in Markdown\nDESCRIPTION: Markdown syntax for documenting bug fixes, including issue number and commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm\nDESCRIPTION: Command for installing project dependencies using npm package manager. Required before running tests or working on the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Google Street View Publish Node.js Client\nDESCRIPTION: This code snippet demonstrates how to use the Google Street View Publish client library in Node.js. It includes importing the library, instantiating a client, and making an asynchronous API call to list photos.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Specifies if a download URL for the photos bytes should be\n *  returned in the Photos response.\n */\n// const view = {}\n/**\n *  Optional. The maximum number of photos to return.\n *  `pageSize` must be non-negative. If `pageSize` is zero or is not provided,\n *  the default page size of 100 is used.\n *  The number of photos returned in the response may be less than `pageSize`\n *  if the number of photos that belong to the user is less than `pageSize`.\n */\n// const pageSize = 1234\n/**\n *  Optional. The\n *  nextPageToken google.streetview.publish.v1.ListPhotosResponse.next_page_token\n *  value returned from a previous\n *  ListPhotos google.streetview.publish.v1.StreetViewPublishService.ListPhotos\n *  request, if any.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. The filter expression. For example:\n *  `placeId=ChIJj61dQgK6j4AR4GeTYWZsKWw`.\n *  The filters supported are: `placeId`, `min_latitude`, `max_latitude`,\n *  `min_longitude`, `max_longitude`. See https://google.aip.dev/160 for more\n *  information.\n */\n// const filter = 'abc123'\n/**\n *  Optional. The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\n *  information, see\n *  http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.\n *  If language_code is unspecified, the user's language preference for Google\n *  services is used.\n */\n// const languageCode = 'abc123'\n\n// Imports the Publish library\nconst {StreetViewPublishServiceClient} =\n  require('@googlemaps/streetview-publish').v1;\n\n// Instantiates a client\nconst publishClient = new StreetViewPublishServiceClient();\n\nasync function callListPhotos() {\n  // Construct request\n  const request = {\n    view,\n  };\n\n  // Run request\n  const iterable = publishClient.listPhotosAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListPhotos();\n```\n\n----------------------------------------\n\nTITLE: Updating Network Policy in VMware Engine (Node.js)\nDESCRIPTION: Example demonstrating how to update network policies in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_network_policy.js\n```\n\n----------------------------------------\n\nTITLE: List AlloyDB Clusters using Node.js\nDESCRIPTION: This code snippet shows how to list AlloyDB clusters using the AlloyDB Admin API in Node.js. It uses the list_clusters method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Listing Client Connector Services in BeyondCorp API using Node.js\nDESCRIPTION: This snippet illustrates how to list Client Connector Services using the BeyondCorp API in Node.js. The included command runs the sample that retrieves a list of client connector services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/generated/v1/client_connector_services_service.list_client_connector_services.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Workflow Invocation - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to create a workflow invocation using the Dataform interface in the Google Cloud Node.js library. The user needs to run the associated Node.js script to execute this functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.create_workflow_invocation.js\n```\n\n----------------------------------------\n\nTITLE: Creating Backtest Result - Node.js\nDESCRIPTION: This code snippet demonstrates how to create a backtest result using the Financial Services API in Node.js. It requires the installation of the Google Cloud client library and sets up appropriate authentication. The input is the relevant parameters needed to define the backtest result, and upon execution, it outputs the result of the backtest creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Create backtest result\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createBacktestResult() {\n    const request = { /* parameters for backtest result */ };\n    const response = await client.createBacktestResult(request);\n    console.log(response);\n}\ncreateBacktestResult();\n```\n\n----------------------------------------\n\nTITLE: Deleting Prediction Result with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a prediction result using the A_m_l.delete_prediction_result method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and credentials to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.delete_prediction_result.js\n```\n\n----------------------------------------\n\nTITLE: Importing long in TypeScript declaration file\nDESCRIPTION: Imports the long module in a TypeScript declaration file for protobufs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport long from 'long';\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Data QnA with Node.js\nDESCRIPTION: This sample provides a quickstart guide for using Data QnA with Node.js. It demonstrates basic usage of the Data QnA service and requires the google-cloud-dataqna package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Profiler API Client for Node.js\nDESCRIPTION: This snippet demonstrates how to install the Cloud Profiler API client library using npm, which is required for interacting with the Cloud Profiler API in Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/cloudprofiler\n```\n\n----------------------------------------\n\nTITLE: Running Node.js unit tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file, typically using a testing framework like Mocha or Jest. It verifies the functionality of individual components or modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: List Oracle Autonomous Databases Command\nDESCRIPTION: Node.js command to list all autonomous databases in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.list_autonomous_databases.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Delete Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to delete a build trigger using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Importing YUM Artifacts to Artifact Registry using Node.js\nDESCRIPTION: This snippet shows how to import YUM artifacts into Google Cloud Artifact Registry. It utilizes the import_yum_artifacts method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.import_yum_artifacts.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Dashboard using Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a dashboard using the Monitoring Dashboards service. It requires the google-monitoring-dashboard package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/generated/v1/dashboards_service.get_dashboard.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Send Test Message\nDESCRIPTION: Sample code for sending a test message in the Essential Contacts API using Node.js. Shows how to send a test communication through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.send_test_message.js\n```\n\n----------------------------------------\n\nTITLE: Deleting API Deployment - Node.js\nDESCRIPTION: This snippet outlines the steps to delete a specific API deployment from the Apigee Registry. Key parameters required for the operation are highlighted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.delete_api_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Aspect Type with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet illustrates how to delete an aspect type using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.delete_aspect_type.js\n```\n\n----------------------------------------\n\nTITLE: Cloud IDS Endpoints Listing Sample Usage\nDESCRIPTION: Command to execute the endpoints listing sample code for Cloud IDS.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-ids/samples/generated/v1/i_d_s.list_endpoints.js\n```\n\n----------------------------------------\n\nTITLE: Importing Dialogflow CX Intents\nDESCRIPTION: Command to import Dialogflow CX intents using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_113\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.import_intents.js\n```\n\n----------------------------------------\n\nTITLE: Updating Managed Kafka Cluster in Node.js\nDESCRIPTION: This snippet demonstrates how to update a Managed Kafka cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka.update_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Listing Datasets with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet shows how to list datasets using the A_m_l.list_datasets method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and proper authentication to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_datasets.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node Project\nDESCRIPTION: Command to run the linter and automatically fix any style issues in the code. This ensures code adheres to the project's style guidelines before submission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This snippet shows how to execute unit tests for the project using npm. Running unit tests ensures that the code changes are working as expected and helps maintain code quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run unit tests.\n        npm test\"\n```\n\n----------------------------------------\n\nTITLE: Searching Target Policy Bindings - Node.js\nDESCRIPTION: This snippet demonstrates how to search for target policy bindings using the Google Cloud Node.js client library. It requires the `google-iam` package. Input is the search criteria, and the output is the matching policy bindings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.search_target_policy_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This snippet shows how to run sample integration tests using npm. Integration tests verify the interaction between different components of the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run sample integration tests.\n        npm run samples-test\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Version in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a version in Dialogflow CX. It uses the versions.delete_version method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_69\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/versions.delete_version.js\n```\n\n----------------------------------------\n\nTITLE: Get Snapshot Dataflow API v1beta3\nDESCRIPTION: Demonstrates how to retrieve a snapshot using the Dataflow API v1beta3 in Node.js.  It shows the command to execute the sample code, which would typically involve setting up authentication and any necessary environment variables before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/snapshots_v1_beta3.get_snapshot.js`\n```\n\n----------------------------------------\n\nTITLE: List Routes\nDESCRIPTION: Command line usage example for listing routes in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_routes.js\n```\n\n----------------------------------------\n\nTITLE: Update google-gax dependency to v2.24.1 in Node.js\nDESCRIPTION: Updates the google-gax dependency to version 2.24.1 in the Google Cloud IoT Node.js library. This update likely incorporates bug fixes, performance improvements, or new features from the google-gax library, which provides core functionality for interacting with Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** google-gax v2.24.1 ([#507](https://www.github.com/googleapis/nodejs-iot/issues/507)) ([8fa3d71](https://www.github.com/googleapis/nodejs-iot/commit/8fa3d7180578cab4bc5b29d64a2f8a05a741cdff))\"\n```\n\n----------------------------------------\n\nTITLE: Fetching Git Ahead Behind - Google Cloud Node.js\nDESCRIPTION: This snippet allows users to fetch the ahead/behind status of the Git repository using the Google Cloud Node.js library. Executing the command in Node.js will provide the desired output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.fetch_git_ahead_behind.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all required dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library\nDESCRIPTION: Example command for installing Google Cloud Connectors client library for legacy Node.js version 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/connectors@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Creating a Federation in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet demonstrates how to create a federation in the Dataproc Metastore using Node.js. The user must input federation details to successfully create it. This functionality is crucial for managing federated setups in the Metastore service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to create a federation\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore_federation.create_federation.js\n```\n\n----------------------------------------\n\nTITLE: Update GKE Gateway Resource\nDESCRIPTION: Sample code showing how to update a resource in GKE Connect Gateway using PATCH method\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_service.patch_resource.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests for Node.js Application\nDESCRIPTION: This command runs all system tests for the Node.js application, validating the overall integration and performance of the application. It's crucial for maintaining a stable codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Get IAM Policy - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to fetch the IAM policy for a device registry using the Google Cloud IoT Device Manager in Node.js. It utilizes the google-cloud-node library to interact with the IoT service. Execution requires appropriate authentication and project configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Exporting Backtest Result Metadata with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code snippet shows how to export backtest result metadata using the A_m_l.export_backtest_result_metadata method of the Google Cloud Financial Services API. It requires the necessary Node.js package and proper authentication to run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.export_backtest_result_metadata.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create Instance in Node.js\nDESCRIPTION: Demonstrates how to create an AlloyDB instance using the Node.js client library. This includes instantiating the AlloyDBAdmin client and calling the `createInstance` method. The sample relies on the proper setup and authentication of the Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_instance | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_instance.js)\"\n```\n\n----------------------------------------\n\nTITLE: Getting AWS JSON Web Keys with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to retrieve JSON Web Keys for an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. These keys are used for token validation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.get_aws_json_web_keys.js\n```\n\n----------------------------------------\n\nTITLE: Listing Documents with Dialogflow V2beta1\nDESCRIPTION: This code sample demonstrates how to retrieve a list of documents within a knowledge base using the Dialogflow V2beta1 API in Node.js. It makes use of the `Documents.list_documents` method to fetch a list of documents. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.list_documents\"\n```\n\n----------------------------------------\n\nTITLE: Listing Memcached Instances with Node.js\nDESCRIPTION: This example demonstrates how to use the Memorystore for Memcached Node.js client to list Memcached instances. It includes importing the library, instantiating a client, constructing a request, and iterating through the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the instance location using the form:\n *      `projects/{project_id}/locations/{location_id}`\n *  where `location_id` refers to a GCP region\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of items to return.\n *  If not specified, a default value of 1000 will be used by the service.\n *  Regardless of the page_size value, the response may include a partial list\n *  and a caller should only rely on response's\n *  next_page_token CloudMemcache.ListInstancesResponse.next_page_token\n *  to determine if there are more instances left to be queried.\n */\n// const pageSize = 1234\n/**\n *  The next_page_token value returned from a previous List request,\n *  if any.\n */\n// const pageToken = 'abc123'\n/**\n *  List filter. For example, exclude all Memcached instances with name as\n *  my-instance by specifying \"name != my-instance\".\n */\n// const filter = 'abc123'\n/**\n *  Sort results. Supported values are \"name\", \"name desc\" or \"\" (unsorted).\n */\n// const orderBy = 'abc123'\n\n// Imports the Memcache library\nconst {CloudMemcacheClient} = require('@google-cloud/memcache').v1;\n\n// Instantiates a client\nconst memcacheClient = new CloudMemcacheClient();\n\nasync function callListInstances() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await memcacheClient.listInstancesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListInstances();\n```\n\n----------------------------------------\n\nTITLE: Version Markdown Block Example\nDESCRIPTION: Shows the markdown structure used for documenting version changes, including version number, comparison links, and categorized changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.20.1](https://github.com/googleapis/google-cloud-node/compare/sql-v0.20.0...sql-v0.20.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6188](https://github.com/googleapis/google-cloud-node/issues/6188)) ([a73cdbf](https://github.com/googleapis/google-cloud-node/commit/a73cdbfe33d5ba9952f0c87cb9d5d12ee8753dd2))\n```\n\n----------------------------------------\n\nTITLE: Installing Redis Cluster Client Dependencies\nDESCRIPTION: Commands to install and set up the Node.js client library dependencies for Google Cloud Memorystore Redis API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Sample Code for Creating an Endpoint in Cloud IDS\nDESCRIPTION: This code snippet demonstrates how to create an endpoint using the Cloud IDS client library. Ensure you have the necessary permissions and a valid project set up in Google Cloud Platform. The code can be found at the provided source link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {IDSClient} = require('@google-cloud/ids');\n\nconst client = new IDSClient();\n\nasync function createEndpoint() {\n  const request = {\n    // parameters for the endpoint creation\n  };\n  const [operation] = await client.createEndpoint(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\ncreateEndpoint();\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Google Cloud Node.js\nDESCRIPTION: This command executes sample integration tests for the Google Cloud Node.js library to verify the interactions of the library components.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Get Instance in Node.js\nDESCRIPTION: Shows how to fetch information about a specific AlloyDB instance using the Node.js client library. It utilizes the AlloyDBAdmin client and invokes the `getInstance` method. Pre-existing project configuration and authentication are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.get_instance | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_instance.js)\"\n```\n\n----------------------------------------\n\nTITLE: Listing Session Entity Types - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet lists all session entity types for a given session, allowing for inspection and operations on the entities defined for the context within Dialogflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_119\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Lists session entity types for a session.\nconst {SessionEntityTypesClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionEntityTypesClient();\n\nasync function listSessionEntityTypes() {\n  // Implementation logic here\n}\n\nlistSessionEntityTypes();\n```\n\n----------------------------------------\n\nTITLE: Running Rollback Node Pool Upgrade Script in Node.js\nDESCRIPTION: Use this Node.js script to rollback upgrades on a node pool. Ensure Node.js and Google Cloud SDK are configured. Requires node pool identifiers, and outputs rollback confirmation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.rollback_node_pool_upgrade.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js library project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Executing Data Migration Service Verify Migration Job Sample in Node.js\nDESCRIPTION: This snippet demonstrates how to run a sample script that verifies a migration job using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and executes a pre-defined script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.verify_migration_job.js\n```\n\n----------------------------------------\n\nTITLE: Creating External Account Key with Public Certificate Authority Service (v1)\nDESCRIPTION: This sample demonstrates how to create an external account key using the v1 API of the Public Certificate Authority Service. The code is located in the google-cloud-security-publicca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-publicca/samples/generated/v1/public_certificate_authority_service.create_external_account_key.js\n```\n\n----------------------------------------\n\nTITLE: Listing Transfer Runs with BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list transfer runs using the BigQuery Data Transfer Service client library for Node.js. It provides usage instructions for executing the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/generated/v1/data_transfer_service.list_transfer_runs.js\n```\n\n----------------------------------------\n\nTITLE: Executing Remove Product from Product Set Node.js Script\nDESCRIPTION: Run this command to execute a script to remove a specific product from a product set using Google Cloud Vision API. Requires Node.js and product along with the product set IDs, outputting removal confirmation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.remove_product_from_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Do not import the whole google-gax from proto JS - Node.js\nDESCRIPTION: This code snippet addresses a bug fix that prevents importing the entire `google-gax` library from the proto JS files. This reduces the bundle size and improves performance.  It relies on selective imports from `google-gax`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"655571f6322adc6fd75fc05b694eddc52b7eccbe\"\n```\n\n----------------------------------------\n\nTITLE: List Violations using Cloud Controls Partner Monitoring API (v1)\nDESCRIPTION: Sample code demonstrating how to list violations using the Cloud Controls Partner Monitoring API v1 endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/generated/v1/cloud_controls_partner_monitoring.list_violations.js\n```\n\n----------------------------------------\n\nTITLE: Listing Dialogflow CX Intents\nDESCRIPTION: Command to list all Dialogflow CX intents using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_114\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.list_intents.js\n```\n\n----------------------------------------\n\nTITLE: Installing BeyondCorp API Client Google Cloud Node.js\nDESCRIPTION: This snippet provides a shell command to install the BeyondCorp API client library using npm. The client library facilitates interacting with the BeyondCorp API from a Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/clientgateways\n```\n\n----------------------------------------\n\nTITLE: Running Node.js sample integration tests with npm\nDESCRIPTION: This command runs integration tests specifically designed for the sample applications within the project.  These tests verify the interaction between different parts of the sample application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which can automatically fix some code style issues in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-addressvalidation/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating a Backup using GKE Backup API in Node.js\nDESCRIPTION: Sample code for updating a specific backup using the GKE Backup API. Used to modify details or settings of an existing backup in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.update_backup.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Scan Config with Web Security Scanner in Node.js\nDESCRIPTION: This script deletes an existing scan configuration in Google Cloud Web Security Scanner. It requires Node.js and the necessary permissions. The expected outcome is the removal of the specified scan configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.delete_scan_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Client Library\nDESCRIPTION: This command runs the linter on the codebase and automatically fixes issues where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Bare Metal Solution API Client Library using npm\nDESCRIPTION: This snippet demonstrates the command to install the Bare Metal Solution API client library for Node.js using npm. It is required to have Node.js and npm installed on your machine to use this command. The expected output should be successful installation messages indicating that the package has been added to your project dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bare-metal-solution\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run before running tests or working on the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Inefficient Approach to Deleting Multiple Pub/Sub Subscriptions\nDESCRIPTION: Example of a problematic implementation that may trigger rate limits by sending too many simultaneous requests to delete Pub/Sub subscriptions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/docs/troubleshooting.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nsubscriptions.forEach(function(subscription) {\n  subscription.delete();\n});\n```\n\n----------------------------------------\n\nTITLE: Querying Merchant State with Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve merchant state information using the LFP Merchant State Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_merchant_state_service.get_lfp_merchant_state.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Generator in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates how to delete a generator in Dialogflow CX using the Node.js client library. It uses the `Generators.delete_generator` method. Proper Dialogflow CX client initialization and authentication are essential before using this snippet.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Generators_DeleteGenerator_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callDeleteGenerator() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'generators/my-generator',\n  };\n\n  // Make the request\n  await client.deleteGenerator(request);\n  console.log('Delete request succeeded');\n}\n\ncallDeleteGenerator();\n// [END dialogflow_cx_v3_generated_Generators_DeleteGenerator_async]\n```\n\n----------------------------------------\n\nTITLE: Installing Dataproc Metastore Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud Dataproc Metastore client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dataproc-metastore\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Libraries\nDESCRIPTION: Commands for running different types of tests in the Google Cloud Node.js libraries project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Rolling Back AWS Node Pool Updates with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to roll back a failed or in-progress update for an AWS node pool using the Google Cloud GKE Multi-cloud API. This sample shows how to revert changes to a node pool configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.rollback_aws_node_pool_update.js\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies in Node.js\nDESCRIPTION: Command to install project dependencies using npm package manager for the Google Cloud Node.js project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Applications from App Hub - Node.js\nDESCRIPTION: This snippet lists all applications available in Google Cloud App Hub, which aids in retrieving and displaying multiple applications at once.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_applications.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_applications.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Backup with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to delete a backup using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to delete an existing backup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.delete_backup.js`\n```\n\n----------------------------------------\n\nTITLE: Make Request Optional in Node.js\nDESCRIPTION: This change makes the 'request' parameter optional in all cases within the Google Cloud IoT Node.js library. This provides more flexibility when calling the API and can simplify certain use cases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"* make request optional in all cases ([#487](https://www.github.com/googleapis/nodejs-iot/issues/487)) ([72c258b](https://www.github.com/googleapis/nodejs-iot/commit/72c258b53e18add510c59f2756f9d8d628edefaa))\"\n```\n\n----------------------------------------\n\nTITLE: Increasing timeout from 20s to 60s\nDESCRIPTION: This snippet increases the default timeout from 20 seconds to 60 seconds. Increasing the timeout duration allows for more time to complete longer operations, preventing premature failures due to time constraints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * increase timeout from 20s to 60s ([#35](https://www.github.com/googleapis/nodejs-cloudbuild/issues/35)) ([b9d7f10](https://www.github.com/googleapis/nodejs-cloudbuild/commit/b9d7f1089bd3dc0f3d53f54015b12bd2bf036c62))\n */\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Resume Queue Sample\nDESCRIPTION: Demonstrates resuming a paused Cloud Tasks queue using the Node.js client library. The sample code is available in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.resume_queue.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Create Target Sample\nDESCRIPTION: This sample demonstrates how to create a target using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_target.js\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the project using npm. This is a prerequisite step before running tests or making contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Share with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet showcases how to create a share using the Cloud Filestore Manager in Javascript. It leverages the google-cloud-node library to interact with the Cloud Filestore API to create a new share.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.create_share.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Create Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to create a build trigger using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Creating a New Test Case\nDESCRIPTION: Executes the script to create new test cases in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Accepts parameters for test scenario setup and validation criteria, resulting in the addition of a new test case.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_68\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/test_cases.create_test_case.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Sample Code for Getting an Endpoint in Cloud IDS\nDESCRIPTION: In this snippet, we demonstrate how to retrieve details about a specified endpoint in the Cloud IDS. It's essential to have the correct endpoint name structure as specified in Google Cloud documentation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst {IDSClient} = require('@google-cloud/ids');\n\nconst client = new IDSClient();\n\nasync function getEndpoint() {\n  const request = {\n    name: 'projects/my-project/locations/us-central1/endpoints/my-endpoint',\n  };\n  const response = await client.getEndpoint(request);\n  console.log(response);\n}\ngetEndpoint();\n```\n\n----------------------------------------\n\nTITLE: List Interconnects in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of interconnects using the Edge Network API in Node.js. Provides functionality for exploring network connectivity options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_interconnects\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: List SQL Tiers - Google Cloud SQL Node.js\nDESCRIPTION: Sample code showing how to list available SQL service tiers using the API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1/sql_tiers_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Insights Data with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to export insights data using the Contact Center Insights API. It uses the export_insights_data method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.export_insights_data.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Shell Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud Shell client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/shell\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet demonstrates how to install project dependencies using npm, which is crucial for setting up the project environment before running tests or making modifications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Delete Zone Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to delete a zone using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.delete_zone.js\n```\n\n----------------------------------------\n\nTITLE: Highlighting Breaking Changes in Markdown\nDESCRIPTION: This snippet shows how breaking changes are emphasized in the changelog using a warning symbol and all caps text.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Updating a Pipeline with Eventarc API in Node.js\nDESCRIPTION: This snippet illustrates how to update a pipeline using the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Package in Google Cloud\nDESCRIPTION: This snippet retrieves a specific package from the Google Cloud Artifact Registry. Ensure that the setup is authenticated and has the needed dependencies. This code should be run in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting a package\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_package.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_package.js\n```\n\n----------------------------------------\n\nTITLE: Splitting Capacity Commitments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to split capacity commitments using the BigQuery Reservation Service API in Node.js. This allows you to divide a capacity commitment into two separate commitments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.split_capacity_commitment.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Library Version via NPM\nDESCRIPTION: Example command for installing the Privileged Access Manager client library version compatible with legacy Node.js 8 using NPM dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/privilegedaccessmanager@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Running API Hub Quickstart Sample in Node.js\nDESCRIPTION: Command to execute the quickstart sample for Google Cloud API Hub. This script provides a basic introduction to using the API Hub service with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Update Product Input using Merchant API\nDESCRIPTION: Sample code demonstrating how to update an existing product input using the Google Merchant API product inputs service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/generated/v1beta/product_inputs_service.update_product_input.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to list streams in Node.js\nDESCRIPTION: Example showing how to list streams using the Google Cloud Datastream API. This sample demonstrates the list_streams method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.list_streams.js\n```\n\n----------------------------------------\n\nTITLE: List AlloyDB Instances using Node.js\nDESCRIPTION: This code snippet shows how to list AlloyDB instances using the AlloyDB Admin API in Node.js. It uses the list_instances method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_instances.js\n```\n\n----------------------------------------\n\nTITLE: Updating Release Configuration with Google Cloud Dataform in Node.js\nDESCRIPTION: This script updates the release configuration of a Dataform workspace using Node.js. It is executed via command line and applies release-specific settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.update_release_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Authorization Policies with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet shows how to list authorization policies using the Google Cloud Network Security API. It uses the list_authorization_policies method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.list_authorization_policies.js\n```\n\n----------------------------------------\n\nTITLE: Lint and fix code using npm\nDESCRIPTION: This command runs the linter to check the code style and automatically fix any violations. It is usually configured in the `package.json` file to use a tool like ESLint. This helps maintain consistent code style across the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Instance Details from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet retrieves details of a specific instance from the Google Cloud Bare Metal Solution API. It can be executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_instance.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Using Config.export_deployment_statefile in Node.js\nDESCRIPTION: Illustrates exporting a deployment statefile using the Infrastructure Manager API Config client in Node.js. This sample shows how to use the export_deployment_statefile method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.export_deployment_statefile.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests in Node.js\nDESCRIPTION: This snippet describes the command for running sample integration tests, used to validate integration capabilities within the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Bare Metal Solution in Node.js\nDESCRIPTION: This quickstart guide demonstrates basic usage of the Google Cloud Bare Metal Solution API with Node.js. It provides a starting point for developers new to the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Node Pool - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet updates a node pool's configuration within a specific cluster on Google Cloud Edge Container, utilizing necessary Google Cloud libraries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to update a node pool\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function updateNodePool(nodePoolId, updateData) {\n    const [operation] = await client.updateNodePool(nodePoolId, updateData);\n    console.log('Update Operation:', operation);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command runs the system tests for the project using npm. System tests validate the library's functionality in a real-world environment or against a live service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Batch Embedding Text using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to batch embed text using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `batch_embed_text` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_70\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/text_service.batch_embed_text.js`\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests. They should be executed after installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Listing\nDESCRIPTION: Example showing how to subscribe to an Analytics Hub listing\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.subscribe_listing.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-addressvalidation/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting JSON Web Keys - JavaScript\nDESCRIPTION: This snippet retrieves the JSON web keys used for authentication from the Cluster Manager API, requiring prior setup with the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function getJsonWebKeys() {\n  const response = await client.getJsonWebKeys();\n  console.log(`JSON web keys: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Getting Namespace - Google Cloud Node.js\nDESCRIPTION: A JavaScript snippet that retrieves a namespace's details from Google Cloud Service Directory using Node.js. Utilize the `@google-cloud/service-directory` library, with namespace name as the input. The output is the namespace's metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_namespace.js>\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB User - Node.js\nDESCRIPTION: Sample code showing how to update user information in AlloyDB.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.update_user.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Stream in Google Cloud Datastream - Node.js\nDESCRIPTION: Deletes a stream in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to delete streams.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function deleteStream() {\n  const request = {\n    // Parameters to identify the stream to delete\n  };\n\n  const [operation] = await client.deleteStream(request);\n  await operation.promise();\n  console.log('Stream deleted');\n}\n\ndeleteStream();\n```\n\n----------------------------------------\n\nTITLE: Executing Security Center Update Source Sample in Node.js\nDESCRIPTION: This sample demonstrates how to run the security_center.update_source.js script which updates a source in Google Cloud Security Center. The script is located in the generated samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v2/security_center.update_source.js\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.deleteProduct method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to delete a product from Google Cloud Vision's product search catalog. This permanently removes a product and all its reference images.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.delete_product.js\n```\n\n----------------------------------------\n\nTITLE: Add fieldMask for getDevice/listDevices in Node.js\nDESCRIPTION: Adds support for `fieldMask` when calling `getDevice` and `listDevices` methods in the Google Cloud IoT Node.js library. This allows users to selectively retrieve specific fields from the device object, improving efficiency and reducing the amount of data transferred.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"* add fieldMask for getDevice and listDevices ([#436](https://www.github.com/googleapis/nodejs-iot/issues/436)) ([a97ed10](https://www.github.com/googleapis/nodejs-iot/commit/a97ed10e8ecc75aeba1fcb89637ef1298801150e))\"\n```\n\n----------------------------------------\n\nTITLE: Rejecting a Blueprint with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to reject a blueprint using the Google Telco Automation API. It provides the command to execute the sample code that rejects a proposed blueprint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.reject_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Managing Document Links in Google Cloud Content Warehouse\nDESCRIPTION: Collection of functions for managing document relationships through create, delete, and list operations for linked documents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/README.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting Changes for Node.js\nDESCRIPTION: This snippet describes the command used to lint the code changes and potentially fix any issues identified. It is an important step in maintaining the code's quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy in Google Cloud\nDESCRIPTION: This snippet allows users to retrieve the IAM policy associated with resources in the Google Cloud Artifact Registry. It requires correct authentication and rights to fetch the policy successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting IAM policy\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_iam_policy.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_import_data_file script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_import_data_file sample script. This script demonstrates how to delete an import data file using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_import_data_file.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Restore Plan using GKE Backup API in Node.js\nDESCRIPTION: Sample code for updating a specific restore plan using the GKE Backup API. Used to modify configuration and settings of an existing restore plan in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.update_restore_plan.js\n```\n\n----------------------------------------\n\nTITLE: Updating Google GAX Dependency in Node.js Cloud Shell Client\nDESCRIPTION: This code snippet shows a commit updating the google-gax dependency to version 2.17.1 in the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n**deps:** google-gax v2.17.1 ([#19](https://www.github.com/googleapis/nodejs-cloud-shell/issues/19)) ([f241f55](https://www.github.com/googleapis/nodejs-cloud-shell/commit/f241f55a0bd87224b297a7724c3db38593a3f94b))\n```\n\n----------------------------------------\n\nTITLE: Creating a Comment on a Support Case in Google Cloud\nDESCRIPTION: Sample script showing how to create a new comment for a support case using the Comment Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/comment_service.create_comment.js\n```\n\n----------------------------------------\n\nTITLE: Listing OS Images using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet shows how to list OS images using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_o_s_images.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node.js Project\nDESCRIPTION: This command executes the unit tests for the Google Cloud Node.js project. It's an essential step in the development process to ensure code quality and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.3.0\nDESCRIPTION: Documents the 0.3.0 release with breaking changes for Node 18 upgrade and features for debug logging.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/privilegedaccessmanager-v0.2.1...privilegedaccessmanager-v0.3.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([b99c5f8](https://github.com/googleapis/google-cloud-node/commit/b99c5f8269a8401c72e9c913971c7e90467209e2))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google Cloud Dataproc Metastore Client Library\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google Cloud Dataproc Metastore client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/dataproc-metastore@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests for Google Cloud Node.js\nDESCRIPTION: This command runs all system tests for the Google Cloud Node.js library to ensure comprehensive coverage and stability of the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Google API Source with Eventarc in Node.js\nDESCRIPTION: This operation sets up a new Google API source in Eventarc using a Node.js script. Necessary setup includes Google Cloud authentication. It runs in command-line to indicate the outcome of the source creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_google_api_source.js\n```\n\n----------------------------------------\n\nTITLE: Running System Tests for Google Cloud Node.js Library\nDESCRIPTION: Command to run all system tests for the Google Cloud Node.js library. This validates the functionality of the library against the actual Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run linting checks and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: List Attack Paths\nDESCRIPTION: Lists attack paths identified by the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.list_attack_paths.js\n```\n\n----------------------------------------\n\nTITLE: Getting Environment History in Node.js\nDESCRIPTION: This snippet retrieves the history of a Dialogflow environment, showcasing the ability to track changes over time. It utilizes the Dialogflow API and should be executed within a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_89\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Get environment history\nconst {EnvironmentsClient} = require('@google-cloud/dialogflow');\nconst client = new EnvironmentsClient();\n\nasync function getEnvironmentHistory() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.getEnvironmentHistory(request);\n  console.log(response);\n}\ngetEnvironmentHistory();\n```\n\n----------------------------------------\n\nTITLE: Deleting Version in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to delete a specific version of a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_145\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/versions.delete_version.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds. It should be run before submitting a pull request to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: List Hub Spokes\nDESCRIPTION: Command line usage example for listing hub spokes in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_hub_spokes.js\n```\n\n----------------------------------------\n\nTITLE: Using the Privileged Access Manager Client Library\nDESCRIPTION: Setup instructions for using the Google Cloud Privileged Access Manager client library in Node.js projects. Includes steps for installation and initialization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Exporting IAM Policy Analysis with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample demonstrates how to export IAM policy analysis results to a destination using the Google Cloud Asset Inventory service v1p4beta1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p4beta1/asset_service.export_iam_policy_analysis.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Browser: check for fetch on window - Node.js\nDESCRIPTION: This code snippet adds a check for the `fetch` API on the `window` object. This check likely ensures that the library functions correctly in browser environments where the `fetch` API may or may not be available. It requires browser environment checks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"a0925b35d4e39587388cfe05685891d523f1bc49\"\n```\n\n----------------------------------------\n\nTITLE: List Subnets in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of subnets using the Edge Network API in Node.js. Facilitates subnet configuration and exploration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_subnets\n```\n\n----------------------------------------\n\nTITLE: Updating User Feedback in Data QnA with Node.js\nDESCRIPTION: This sample shows how to update user feedback using the Question Service in Data QnA. It uses the google-cloud-dataqna package and requires proper GCP configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataqna/samples/generated/v1alpha/question_service.update_user_feedback.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests Using npm Scripts\nDESCRIPTION: These npm scripts run unit tests, integration tests, and system tests for the Node.js project. Each script targets different levels of testing, providing a comprehensive check of the application. All tests should pass to ensure the code quality before submission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Video Intelligence Annotate Video Beta v1beta2\nDESCRIPTION: Sample for video annotation using beta version v1beta2 of the Video Intelligence API. Shows implementation of video content analysis features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-videointelligence/samples/generated/v1beta2/video_intelligence_service.annotate_video.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Policy Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to set an IAM policy for a specified policy tag in Google Cloud's Data Catalog. The google-cloud-datacatalog package is necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function setIamPolicy() {\n  const request = {\n    resource: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/policyTags/YOUR_POLICY_TAG_ID',\n    policy: {/* your policy details */},\n  };\n  const [policy] = await client.setIamPolicy(request);\n  console.log('Policy set:', policy);\n}\nsetIamPolicy();\n```\n\n----------------------------------------\n\nTITLE: Installing the Policy Simulator API Node.js Client Library\nDESCRIPTION: Command to install the Policy Simulator API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/policysimulator\n```\n\n----------------------------------------\n\nTITLE: Starting Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code for starting a notebook runtime using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.start_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Apigee Registry API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud Apigee Registry API with Node.js. It demonstrates basic usage of the API and requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Linting and Auto-fixing for Google Cloud Node.js Code\nDESCRIPTION: Command to run the linting tool with auto-fix capabilities to ensure code follows style guidelines for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Formatting Bug Fixes in Markdown\nDESCRIPTION: This snippet demonstrates how bug fixes are documented in the changelog using Markdown. It includes a link to the related GitHub issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6185](https://github.com/googleapis/google-cloud-node/issues/6185)) ([ab30412](https://github.com/googleapis/google-cloud-node/commit/ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906))\n```\n\n----------------------------------------\n\nTITLE: Using the Service Health API Client Library in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize and use the Service Health API client library in Node.js. It shows how to create a client instance and call the listEvents method to retrieve service health events.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value using the form\n *  `projects/{project_id}/locations/{location}/events`.\n *  `project_id` - ID of the project for which to list service health\n *  events.\n *  `location` - The location to get the service health events from.\n *  To retrieve service health events of category = INCIDENT, use `location` =\n *  `global`.\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of events that should be returned.  Acceptable\n *  values are 1 to 100, inclusive. (The default value is 10.) If more results\n *  are available, the service returns a next_page_token that you can use to\n *  get the next page of results in subsequent list requests. The service may\n *  return fewer events than the requested page_size.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n *  Provide Page token returned by a previous `ListEvents` call to retrieve the\n *  next page of results. When paginating, all other parameters provided to\n *  `ListEvents` must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. A filter expression that filters resources listed in the\n *  response. The expression takes the following forms: <br>\n *  *   field=value for `category` and `state`<br>\n *  *   field &lt;, >, &lt;=, or >= value for `update_time` <br>\n *  Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`\n *  <br>\n *  Multiple filter queries are separated by spaces. Example:\n *  `category=INCIDENT state=ACTIVE`.\n *  By default, each expression is an AND expression. However, you can include\n *  AND and OR expressions explicitly.\n *  Filter is supported for the following fields: `category`, `state`,\n *  `update_time`\n */\n// const filter = 'abc123'\n/**\n *  Optional. Event fields to include in response.\n */\n// const view = {}\n\n// Imports the Servicehealth library\nconst {ServiceHealthClient} = require('@google-cloud/servicehealth').v1;\n\n// Instantiates a client\nconst servicehealthClient = new ServiceHealthClient();\n\nasync function callListEvents() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = servicehealthClient.listEventsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListEvents();\n```\n\n----------------------------------------\n\nTITLE: List Assets Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to list assets using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.list_assets.js\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Key - Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates creating an SSH key in the Google Cloud Bare Metal Solution. The script requires Node.js and the Google Cloud libraries for proper functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function createSshKey() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION',\n    sshKeyId: 'YOUR_SSH_KEY_ID',\n    key: 'YOUR_SSH_PUBLIC_KEY',\n  };\n  const [operation] = await client.createSshKey(request);\n  const [response] = await operation.promise();\n  console.log('SSH Key created:', response);\n}\ncreateSshKey();\n```\n\n----------------------------------------\n\nTITLE: Deleting Dialogflow CX Intent\nDESCRIPTION: Command to delete a Dialogflow CX intent using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_110\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.delete_intent.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing BeyondCorp API Client Library for Node.js\nDESCRIPTION: This code snippet shows the command to install the BeyondCorp API client library for Node.js via npm. Ensure you have Node.js installed on your system before running this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/appconnections\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy with IAP Admin in JavaScript\nDESCRIPTION: This script sets an IAM policy using the Identity-Aware Proxy admin service. It is used in a Node.js setup, and run via the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1beta1/identity_aware_proxy_admin_v1_beta1.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Calculating Test Coverage\nDESCRIPTION: Executes the script to calculate test coverage in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Returns coverage metrics for executed test cases, providing insights into testing completeness.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_67\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/test_cases.calculate_coverage.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests. These commands ensure code quality and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Passing x-goog-request-params header\nDESCRIPTION: This snippet ensures the x-goog-request-params header is passed for streaming calls. Proper header propagation is essential for routing and handling streaming requests within the Cloud Build API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * pass x-goog-request-params header for streaming calls ([365842b](https://www.github.com/googleapis/nodejs-cloudbuild/commit/365842beb7e0ceee9f5861d4172f5de076335902))\n */\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Conversation in Dialogflow (JavaScript)\nDESCRIPTION: This code sample demonstrates how to retrieve a specific conversation using the Dialogflow API. It utilizes the get_conversation method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.get_conversation.js\n```\n\n----------------------------------------\n\nTITLE: Getting Live Ad Tag Detail in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to retrieve details of a live ad tag using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_live_ad_tag_detail.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Dialogflow Intent using Node.js\nDESCRIPTION: This JavaScript example shows how to execute a command to delete an intent in Google Cloud Dialogflow using Node.js. Prerequisites include the Google Cloud Node.js client library and a configured Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.delete_intent.js\"\n```\n\n----------------------------------------\n\nTITLE: Add Style Enumeration in Node.js\nDESCRIPTION: Introduces a 'style' enumeration to the Google Cloud IoT Node.js library. This enhancement likely provides a predefined set of styling options or configurations, improving the consistency and ease of use of the library's styling features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"* adds style enumeration ([#426](https://www.github.com/googleapis/nodejs-iot/issues/426)) ([4daeff4](https://www.github.com/googleapis/nodejs-iot/commit/4daeff47d5cfc5fd826705f4da5b8dbed1784e44))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google Cloud Discovery Engine Client Library\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google Cloud Discovery Engine client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_20\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/discoveryengine@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Delete GKE Gateway Resource\nDESCRIPTION: Sample code showing how to delete a resource from GKE Connect Gateway\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_service.delete_resource.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any issues it finds. It's important to run this before submitting changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: List Namespaces using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `listNamespaces` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for listing namespaces.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.list_namespaces.js`\n```\n\n----------------------------------------\n\nTITLE: Feat: Promote CustomVoiceParams to v1 - Node.js\nDESCRIPTION: This code snippet promotes the `CustomVoiceParams` feature to version 1 (v1). This promotion typically indicates that the feature is now considered stable and ready for general use. It provides stable CustomVoiceParams.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"fe647dc8735792333e0203844279da6ada898e1a\"\n```\n\n----------------------------------------\n\nTITLE: AutoML List Models in Node.js\nDESCRIPTION: This sample shows how to list models using the AutoML API with Node.js. The `listModels` function is called to list available models. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.list_models\"\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Version 6.0.1 Release Notes\nDESCRIPTION: Bug fixes for awaiting/catching promises and updating listOperationsAsync return type across multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [6.0.1](https://github.com/googleapis/google-cloud-node/compare/billing-budgets-v6.0.0...billing-budgets-v6.0.1) (2025-03-19)\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6183](https://github.com/googleapis/google-cloud-node/issues/6183)) ([f91c71f](https://github.com/googleapis/google-cloud-node/commit/f91c71f71c7a08ac17a15b7bb2233cbc041ee69b))\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing the Stackdriver Monitoring client library with npm\nDESCRIPTION: Command to install the Google Cloud Monitoring client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/monitoring\n```\n\n----------------------------------------\n\nTITLE: Using Advisory Notifications API Client Library\nDESCRIPTION: Example demonstrating how to initialize and use the Advisory Notifications API client to list notifications. Shows configuration of parent, page size, page token and other parameters for the API request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of notifications.\n *  Must be of the form \"organizations/{organization}/locations/{location}\".\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of notifications to return. The service may return\n *  fewer than this value. If unspecified or equal to 0, at most 50\n *  notifications will be returned. The maximum value is 50; values above 50\n *  will be coerced to 50.\n */\n// const pageSize = 1234\n/**\n *  A page token returned from a previous request.\n *  When paginating, all other parameters provided in the request\n *  must match the call that returned the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Specifies which parts of the notification resource should be returned\n *  in the response.\n */\n// const view = {}\n/**\n *  ISO code for requested localization language.  If unset, will be\n *  interpereted as \"en\". If the requested language is valid, but not supported\n *  for this notification, English will be returned with an \"Not applicable\"\n *  LocalizationState. If the ISO code is invalid (i.e. not a real language),\n *  this RPC will throw an error.\n */\n// const languageCode = 'abc123'\n\n// Imports the Advisorynotifications library\nconst {AdvisoryNotificationsServiceClient} =\n  require('@google-cloud/advisorynotifications').v1;\n\n// Instantiates a client\nconst advisorynotificationsClient = new AdvisoryNotificationsServiceClient();\n\nasync function callListNotifications() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await advisorynotificationsClient.listNotificationsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListNotifications();\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js package dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.update_connection_profile in Node.js\nDESCRIPTION: Sample code for updating a connection profile using the Google Cloud Datastream API in Node.js. This script demonstrates how to modify the configuration of an existing connection profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.update_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Entry with Node.js\nDESCRIPTION: The JavaScript code snippet demonstrates how to retrieve an entry from Google Cloud Data Catalog using Node.js. It utilizes the `@google-cloud/datacatalog` package and is invoked through the command line, illustrating entry queries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.get_entry.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command for running the code linter to check and potentially fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Undeploying Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet showcases how to undeploy a processor version, making it unavailable for processing documents. The input parameters include the processor version name. The output confirms the undeployment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to undeploy processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorVersionName };\nawait client.undeployProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Using Agents.create_agent method in Google Cloud Dialogflow CX with Node.js\nDESCRIPTION: Example showing how to use the create_agent method from the Agents class in Google Cloud Dialogflow CX. This requires proper setup and authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/agents.create_agent.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Container Library\nDESCRIPTION: Command to install the @google-cloud/container npm package\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/container\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Project\nDESCRIPTION: Command to install all dependencies required for the google-cloud-node project. This must be run before testing or development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Set ACL Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to set access control lists (ACL) for a document using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.set_acl.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Google Cloud Filestore - JavaScript\nDESCRIPTION: This function demonstrates how to list all instances of Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n// List Instances Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function listInstances(projectId) {\n  // Implementation for listing instances\n}\n\n```\n\n----------------------------------------\n\nTITLE: Resuming Managed Kafka Connector in Node.js\nDESCRIPTION: This code sample shows how to resume a paused connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.resume_connector.js\n```\n\n----------------------------------------\n\nTITLE: Accept Hub Spoke\nDESCRIPTION: Command line usage example for accepting a hub spoke in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.accept_hub_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instances in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to list instances using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_instances.js`\n```\n\n----------------------------------------\n\nTITLE: Rolling Back a Deployment with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to roll back a deployment using the Google Telco Automation API. It provides the command to execute the sample code that reverts a deployment to a previous state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.rollback_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Generative Language API Client Library (Node.js)\nDESCRIPTION: This snippet provides the command to install the Generative Language API client library for Node.js using npm. It requires npm to be installed on the local machine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-ai/generativelanguage\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating BigQuery Connection Credential (Node.js)\nDESCRIPTION: This snippet illustrates how to update the credential for a BigQuery connection using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.update_connection_credential.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.get_device_registry in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `get_device_registry` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.get_device_registry.js\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Merchant API Client Library\nDESCRIPTION: npm command to install the Google Shopping Promotions client library package\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/promotions\n```\n\n----------------------------------------\n\nTITLE: Importing a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This snippet illustrates how to import a flow into Dialogflow CX using the Node.js client library. The `Flows.import_flow` method allows importing a flow from a Google Cloud Storage bucket or inline content. Ensure proper client initialization and authentication before executing the import operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_ImportFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callImportFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [operation] = await client.importFlow(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallImportFlow();\n// [END dialogflow_cx_v3_generated_Flows_ImportFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Build: Update library to use Node 12 - Node.js\nDESCRIPTION: This code snippet updates the library's build system to use Node.js version 12. This update ensures compatibility with the newer Node.js runtime and allows the library to leverage the latest features and performance improvements offered by Node.js 12. It requires Node.js 12 or higher.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"4395d5696205c257498d33693e53135da998ed38\"\n```\n\n----------------------------------------\n\nTITLE: Get Route\nDESCRIPTION: Command line usage example for retrieving a route in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.get_route.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a User with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet shows how to delete a user using the Google Shopping Merchant Accounts API. It uses the user_service.delete_user method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/user_service.delete_user.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Assets using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to export assets using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.export_assets.js`\n```\n\n----------------------------------------\n\nTITLE: Route Optimization Single Tour Optimization in Node.js\nDESCRIPTION: Sample code for optimizing individual tours using the Route Optimization API. Shows how to optimize a single tour route for maximum efficiency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-routeoptimization/samples/generated/v1/route_optimization.optimize_tours.js\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Search Sample\nDESCRIPTION: Node.js script to perform search operations in Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.search_catalog.js\n```\n\n----------------------------------------\n\nTITLE: Listing Assets with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This example demonstrates how to list assets under the current project using the Google Cloud Asset Inventory API. The script accepts asset types and content type as parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode listAssets <ASSET_TYPES> <content_type>\n```\n\n----------------------------------------\n\nTITLE: Listing Attributes with API Hub using Node.js\nDESCRIPTION: List available API attributes using this Node.js script interfacing with Google Cloud API Hub. Assists developers by providing visibility into API attributes, fostering a more informed development process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_attributes.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Entity with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample demonstrates how to update an entity using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_78\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.update_entity.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Repository from Artifact Registry using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a repository from Google Cloud Artifact Registry. It utilizes the get_repository method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_repository.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file using npm. It is used to verify the functionality of individual components of the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests\nDESCRIPTION: Executes the sample integration tests which ensure that the different components of the application work together correctly. This is an important step in validating the overall functionality after code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Releasing SSRS Lease with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to release an SSRS lease on a Google Cloud SQL instance using the `release_ssrs_lease` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.release_ssrs_lease.js`\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Batch Image Annotation with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to perform asynchronous batch image annotation using the Google Cloud Vision API. It utilizes the image_annotator.async_batch_annotate_images method for processing multiple images.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/image_annotator.async_batch_annotate_images.js\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Dataproc Library Usage in Node.js\nDESCRIPTION: Basic setup instructions for using the client library, including installation via npm and initial configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Generating TPU Service Identity in Node.js\nDESCRIPTION: Sample code for generating a service identity for TPU resources using the Google Cloud TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.generate_service_identity.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google AI Generative Language Client for Node.js 8\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google AI Generative Language client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_26\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-ai/generativelanguage@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Listing Conversation Models in Dialogflow v2\nDESCRIPTION: Demonstrates how to list conversation models in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and retrieves a list of available conversation models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.list_conversation_models.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Notification Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to delete a notification configuration using the Google Cloud Security Center API. Notification configs determine how to send notifications for findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.delete_notification_config.js\n```\n\n----------------------------------------\n\nTITLE: Get Project Data Profile with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code demonstrates how to retrieve a project data profile using the Google Cloud DLP service. It uses the getProjectDataProfile method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_project_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Searching All Assignments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to search for all assignments using the BigQuery Reservation Service API in Node.js. This allows you to find assignments across multiple projects and locations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.search_all_assignments.js\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format for Google Cloud Node\nDESCRIPTION: Standardized changelog format showing version changes, breaking changes, features, and bug fixes using semantic versioning.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [0.2.1](https://github.com/googleapis/google-cloud-node/compare/promotions-v0.2.0...promotions-v0.2.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6191](https://github.com/googleapis/google-cloud-node/issues/6191)) ([c9adc61](https://github.com/googleapis/google-cloud-node/commit/c9adc6150ad09630854554c2ed7e558fb3e04315))\n\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/promotions-v0.1.0...promotions-v0.2.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([388b4e2](https://github.com/googleapis/google-cloud-node/commit/388b4e20329b7f6fc0dd061dddff573c45104213))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n\n## 0.1.0 (2024-06-04)\n\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n* Add initial files for google.shopping.merchant.promotions.v1beta ([#5422](https://github.com/googleapis/google-cloud-node/issues/5422)) ([84adc73](https://github.com/googleapis/google-cloud-node/commit/84adc73cb2c7aa1e87bf2d060fd99d713234c79c))\n```\n\n----------------------------------------\n\nTITLE: Get HCX Activation Key in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_hcx_activation_key sample for the VMware Engine API. This retrieves HCX activation key details for VMware HCX setup in VMware Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_hcx_activation_key.js\n```\n\n----------------------------------------\n\nTITLE: Linting and fixing code with npm\nDESCRIPTION: This command runs the linter to check the code for style and potential errors, and may attempt to automatically fix some of the issues found. This helps maintain code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run fix\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to delete a model using the Google Cloud Retail API. It utilizes the deleteModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.delete_model.js\n```\n\n----------------------------------------\n\nTITLE: Adding Fulfillment Places - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet demonstrates how to add fulfillment places to a product using the Google Cloud Retail API. It requires the Google Cloud SDK and Node.js environment to be set up. The input involves details of the product and fulfillment locations, and the expected output is confirmation of the fulfillment places added.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for adding fulfillment places\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Storage Insights API client\nDESCRIPTION: This command installs the Google Cloud Storage Insights API client library for Node.js using npm. It adds the @google-cloud/storageinsights package to your project's dependencies, allowing you to use the library's functionalities in your code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/storageinsights\n```\n\n----------------------------------------\n\nTITLE: Version 0.6.1 Changelog Entry\nDESCRIPTION: Documents bug fixes for promise handling and listOperationsAsync return type updates across multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.6.1](https://github.com/googleapis/google-cloud-node/compare/procurement-v0.6.0...procurement-v0.6.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Configuring npm Version for Google App Engine in package.json\nDESCRIPTION: Overrides the default npm version in Google App Engine's Node.js flexible environment by specifying npm v3+ in the engines field of package.json. This helps avoid large dependency sizes caused by npm v2's lack of automatic deduplication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/docs/troubleshooting.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"your-app\",\n  \"version\": \"...\",\n  \"dependencies\": {},\n  \"engines\": {\n    \"npm\": \"^3.0.0\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Session Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for listing session templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionTemplateController.listSessionTemplates method to enumerate all available templates in a project or region.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_template_controller.list_session_templates.js\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Generative Question Configs with Google Cloud Retail API in Node.js\nDESCRIPTION: This code sample shows how to batch update generative question configurations using the Google Cloud Retail API. It uses the GenerativeQuestionService client to modify multiple question configs in a single request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/generative_question_service.batch_update_generative_question_configs.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node.js\nDESCRIPTION: This command is used to run unit tests for the Google Cloud Node.js library ensuring that the changes do not break existing functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Applying Deployment with Telco Automation API in Node.js\nDESCRIPTION: This sample demonstrates how to apply a deployment using the Telco Automation API. It requires the Google Cloud Node.js client library to be installed and set up correctly. The script executes the deployment operation and outputs the result based on the deployment's status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { TelcoAutomationClient } = require('@google-cloud/telcoautomation');\n\nconst client = new TelcoAutomationClient();\n\nasync function applyDeployment() {\n  const request = {/* request parameters */};\n  const [operation] = await client.applyDeployment(request);\n  const [response] = await operation.promise();\n  console.log('Deployment Applied:', response);\n}\n\napplyDeployment();\n```\n\n----------------------------------------\n\nTITLE: Certificate Manager Usage Examples\nDESCRIPTION: Example commands showing how to execute various Certificate Manager operations using the Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.create_certificate.js\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.create_certificate_issuance_config.js\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.create_certificate_map.js\n```\n\n----------------------------------------\n\nTITLE: Managing GKE Hub Features (v1alpha)\nDESCRIPTION: Examples for creating, deleting, getting, listing and updating features in GKE Hub using v1alpha API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha/gke_hub.create_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha/gke_hub.delete_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha/gke_hub.get_feature.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha/gke_hub.list_features.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha/gke_hub.update_feature.js\n```\n\n----------------------------------------\n\nTITLE: Waiting for client before checking for terminate\nDESCRIPTION: This snippet ensures the code waits for the client to be initialized before checking for termination. Proper sequencing ensures that the client is ready and prevents errors caused by accessing an uninitialized client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * wait for client before checking for terminate ([35c1905](https://www.github.com/googleapis/nodejs-cloudbuild/commit/35c19050bd7594301df14ffa182fc6e6e73c1d64))\n */\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version 4.0.1 Update\nDESCRIPTION: Bug fix release that updates promise handling and listOperationsAsync return type\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/web-security-scanner-v4.0.0...web-security-scanner-v4.0.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6189](https://github.com/googleapis/google-cloud-node/issues/6189)) ([0eab6d4](https://github.com/googleapis/google-cloud-node/commit/0eab6d40a12aa7f387a4621c6611aa4cbc86e178))\n```\n\n----------------------------------------\n\nTITLE: Running IAP Quickstart Sample in JavaScript\nDESCRIPTION: A quickstart script demonstrating basic usage of Identity-Aware Proxy in Node.js. Execute the script to get started with IAP services in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any linting issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Pausing Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to pause a model using the Google Cloud Retail API. It uses the pauseModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.pause_model.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Tasks Client Library\nDESCRIPTION: Command to install the @google-cloud/tasks npm package for Node.js projects, enabling interaction with Google Cloud Tasks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/tasks\n```\n\n----------------------------------------\n\nTITLE: Issue References\nDESCRIPTION: GitHub issue number references for tracking changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[#6183](https://github.com/googleapis/google-cloud-node/issues/6183)\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to List Certificate Authorities in Node.js\nDESCRIPTION: This sample demonstrates how to list all certificate authorities using Google Cloud Certificate Authority Service. The code can be executed directly to list all CAs in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.list_certificate_authorities.js\n```\n\n----------------------------------------\n\nTITLE: Using Content Service Operations in Node.js\nDESCRIPTION: Methods for managing content in Google Cloud Dataplex. These operations allow creating and deleting content resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.create_content.js\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.delete_content.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Release Config - Google Cloud Node.js\nDESCRIPTION: This snippet enables the deletion of a release configuration in Dataform by using the Google Cloud Node.js library. The user can execute the provided command to perform this action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.delete_release_config.js\n```\n\n----------------------------------------\n\nTITLE: Calling Google Cloud Function - Node.js\nDESCRIPTION: This snippet demonstrates how to call a Google Cloud Function using the cloud_functions_service. It provides a practical example of making a remote call to execute a cloud function and handle the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.call_function.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests in Node.js\nDESCRIPTION: This snippet provides the command to execute all system tests, necessary to verify the overall functionality of the system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing the Analytics Hub API Node.js Client Library\nDESCRIPTION: Command to install the Analytics Hub API client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-data-exchange\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Changes in Node.js Code\nDESCRIPTION: This command is used to lint the code changes and automatically fix any issues found. It helps maintain code quality and adheres to the project's coding standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Instance in Bare Metal Solution using Node.js\nDESCRIPTION: This code shows how to update an instance in Google Cloud Bare Metal Solution with Node.js. It uses the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.update_instance.js\n```\n\n----------------------------------------\n\nTITLE: Listing Scan Runs with Web Security Scanner in Node.js (V1alpha)\nDESCRIPTION: This script lists scan runs for a specified configuration in the alpha version of Web Security Scanner. It demands Node.js and validated credentials. The script outputs scan runs associated with a specific configuration in version 1alpha.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.list_scan_runs.js\"\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js package dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieving Backup Information for GKE - Node.js\nDESCRIPTION: This snippet shows how to retrieve details of a specific backup in Google Kubernetes Engine using the Google Cloud Node.js client library. It depends on `@google-cloud/gkebackup` and requires the backup ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Backup\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getBackup(request)\n  .then(response => {\n    console.log('Backup details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving backup:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Updating View - Google Cloud Contact Center Insights - JavaScript\nDESCRIPTION: This snippet shows how to update a view in the Contact Center Insights API using Node.js. It requires the Google Cloud client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\n\"const {ContactCenterInsightsClient} = require('@google-cloud/contact-center-insights');\\nconst client = new ContactCenterInsightsClient();\\n\\nasync function updateView() {\\n  const request = {\\n    name: 'projects/your-project-id/views/your-view-id',\\n    view: {\\n      displayName: 'Updated View Name'\\n    }\\n  };\\n\\n  const result = await client.updateView(request);\\n  console.log('Updated View:', result);\\n}\\n\\nupdateView();\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.10.0\nDESCRIPTION: Documents breaking changes for Node 18 upgrade and feature additions for request/response debug logging\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.10.0](https://github.com/googleapis/google-cloud-node/compare/netapp-v0.9.0...netapp-v0.10.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([#6140](https://github.com/googleapis/google-cloud-node/issues/6140)) ([2f96b1f](https://github.com/googleapis/google-cloud-node/commit/2f96b1f95dd6b7cb89871b56e5ea5aadf5454292))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Getting Private Connection in Google Cloud Datastream - Node.js\nDESCRIPTION: Retrieves details of a specific private connection in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to get private connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function getPrivateConnection() {\n  const request = {\n    // Parameters to identify the private connection\n  };\n\n  const response = await client.getPrivateConnection(request);\n  console.log('Retrieved private connection:', response);\n}\n\ngetPrivateConnection();\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Support API\nDESCRIPTION: Sample quickstart script providing a basic introduction to using the Google Cloud Support API with Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Disabling a Processor - Google Cloud Node.js\nDESCRIPTION: This snippet illustrates the process of disabling a specified processor. It requires the processor name as input, and the output verifies the disable action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to disable a processor\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorName };\nawait client.disableProcessor(request);\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to run the quickstart example using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the quickstart sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: List Device States - Cloud IoT - Node.js\nDESCRIPTION: This sample shows how to list the states of a device using the Google Cloud IoT Device Manager in Node.js. It uses the google-cloud-node library to interact with the IoT service. Appropriate authentication and project configuration are needed to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Listing Cloud Assets with Node.js client\nDESCRIPTION: This code snippet demonstrates how to list assets using the Cloud Asset Inventory API with the Node.js client library. It initializes the client, constructs a request with the project resource and asset types, and then calls the listAssets method to retrieve the assets. The result is then printed to the console using util.inspect for detailed output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const assetTypes = 'storage.googleapis.com/Bucket,bigquery.googleapis.com/Table';\n// const contentType = 'RESOURCE';\n\nconst util = require('util');\nconst {v1} = require('@google-cloud/asset');\nconst client = new v1.AssetServiceClient();\n\nconst projectResource = `projects/${projectId}`;\n// TODO(developer): Choose types of assets to list, such as 'storage.googleapis.com/Bucket':\n//   const assetTypes = 'storage.googleapis.com/Bucket,bigquery.googleapis.com/Table';\n// Or simply use empty string to list all types of assets:\n//   const assetTypes = '';\nconst assetTypesList = assetTypes ? assetTypes.split(',') : [];\n\nasync function listAssets() {\n  const request = {\n    parent: projectResource,\n    assetTypes: assetTypesList,\n    contentType: contentType,\n    // (Optional) Add readTime parameter to list assets at the given time instead of current time:\n    //   readTime: { seconds: 1593988758 },\n  };\n\n  // Call cloud.assets.v1.ListAssets API.\n  const result = await client.listAssets(request);\n  // Handle the response.\n  console.log(util.inspect(result, {depth: null}));\n}\nlistAssets();\n\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This quickstart sample demonstrates basic usage of the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting Domain Details with Node.js\nDESCRIPTION: This script fetches details of a specific domain using Node.js with Google Cloud Managed Identities API. It requires 'google-cloud-managedidentities' library installed and appropriate permissions. The script helps in retrieving metadata and status information about domains managed on the cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.get_domain.js\n```\n\n----------------------------------------\n\nTITLE: Searching Versions in Private Catalog with Node.js\nDESCRIPTION: This sample demonstrates how to search versions using the Private Catalog API in Node.js. It provides the command to execute the sample and links to the source code for detailed implementation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-privatecatalog/samples/generated/v1beta1/private_catalog.search_versions.js`\n```\n\n----------------------------------------\n\nTITLE: Updating EKM Connection with Ekm_service in Node.js\nDESCRIPTION: This snippet demonstrates how to update an EKM connection using the google-cloud-kms library in a Node.js environment. It provides the command to execute the sample, which updates a specific EKM connection.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/ekm_service.update_ekm_connection.js`\n```\n\n----------------------------------------\n\nTITLE: Using Phishing Protection Client Library\nDESCRIPTION: Example demonstrating how to initialize the Phishing Protection client and report a phishing URI using the API. The code shows setting up the client, formatting the project path, and making a request to report phishing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {\n  PhishingProtectionServiceV1Beta1Client,\n} = require('@google-cloud/phishing-protection');\nconst client = new PhishingProtectionServiceV1Beta1Client();\n\n// the numeric project ID.\nconst formattedParent = client.projectPath(projectId);\nconst request = {\n  parent: formattedParent,\n  uri: uri, // the URI to report to Phishing API.\n};\n\nawait client.reportPhishing(request);\n\nconsole.info(`reported ${uri} to Phishing Protection API`);\n```\n\n----------------------------------------\n\nTITLE: Running sample integration tests with npm\nDESCRIPTION: This command runs integration tests specifically designed for samples within the project. This verifies that the samples interact correctly with other parts of the system or external services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run sample integration tests.\\nnpm run samples-test\"\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Update API Config - ApiGatewayService\nDESCRIPTION: This JavaScript code snippet demonstrates how to update an API configuration using the Google Cloud API Gateway service. The snippet shows how to execute the sample from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apigateway/samples/generated/v1/api_gateway_service.update_api_config.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Logging Server with Node.js\nDESCRIPTION: This JavaScript snippet demonstrates how to create a logging server in the Google Cloud VMware Engine using Node.js. Ensure you have the required Google Cloud dependencies set up before execution. Run the script using Node.js command specified.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_logging_server.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Ad Manager API Node.js Client Library\nDESCRIPTION: Command to install the Google Ad Manager API client library via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-ads/admanager\n```\n\n----------------------------------------\n\nTITLE: Version Updates and Changes in Markdown\nDESCRIPTION: Markdown formatted changelog entries detailing version changes, bug fixes and new features for the Node.js Policy Troubleshooter library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **build:** switch primary branch to main ([#76](https://www.github.com/googleapis/nodejs-policy-troubleshooter/issues/76)) ([dd536c5](https://www.github.com/googleapis/nodejs-policy-troubleshooter/commit/dd536c5796007a1c5c42c30bbd672b40b7bc5e60))\n\n## [1.1.0](https://www.github.com/googleapis/nodejs-policy-troubleshooter/compare/v1.0.6...v1.1.0) (2021-08-23)\n\n\n### Features\n\n* turns on self-signed JWT feature flag ([#72](https://www.github.com/googleapis/nodejs-policy-troubleshooter/issues/72)) ([cb9e610](https://www.github.com/googleapis/nodejs-policy-troubleshooter/commit/cb9e61019ea6ec71201b30de68c84b1e93b1045e))\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration Update\nDESCRIPTION: Update to TypeScript configuration targeting ES2018 instead of ES2016\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"target\": \"es2018\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing the Address Validation API Node.js Client Library\nDESCRIPTION: Command to install the Address Validation API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-addressvalidation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/addressvalidation\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests for Google Cloud Node\nDESCRIPTION: This snippet describes the command to run all system tests for the Google Cloud Node library to ensure comprehensive validation of the library's functionality after code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version Reference Example (Node.js)\nDESCRIPTION: Example showing version comparison reference in changelog entry\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [2.3.0](https://www.github.com/googleapis/nodejs-analytics-data/compare/v2.2.1...v2.3.0)\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Config.delete_deployment in Node.js\nDESCRIPTION: Illustrates how to delete a deployment using the Infrastructure Manager API Config client in Node.js. This sample shows the basic usage of the delete_deployment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.delete_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Cleaning up synth.py for multiple versions\nDESCRIPTION: This snippet focuses on cleaning up the synth.py script to support multiple versions. Clean and maintainable build scripts facilitate version management and simplify the build process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * synth.py clean up for multiple version ([#115](https://www.github.com/googleapis/nodejs-cloudbuild/issues/115)) ([aa7d99b](https://www.github.com/googleapis/nodejs-cloudbuild/commit/aa7d99b9c02267808cac07f7691f5ce62f06ca14))\n */\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This Bash command installs all the necessary dependencies specified in the package.json file. It is essential for setting up the development environment before running or testing any code in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter and attempts to fix any linting issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Retrieving Task Details via Google Cloud Batch Service in Node.js\nDESCRIPTION: This example script queries task details from a specific job in Google Cloud's Batch service using Node.js. Ensure that the desired task ID is provided and the credentials are authenticated for access control.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.get_task.js\"\n```\n\n----------------------------------------\n\nTITLE: Validating IAP Attribute Expression in JavaScript\nDESCRIPTION: Executes a sample script to validate an Identity-Aware Proxy attribute expression via the admin service. Requires a Node.js environment. Execute the command from a terminal to perform the validation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_admin_service.validate_iap_attribute_expression.js\n```\n\n----------------------------------------\n\nTITLE: Creating Route in Node.js\nDESCRIPTION: Creates a network route in the Google Cloud Datastream to define data paths using Node.js. Detailed Google Cloud setup is necessary alongside Datastream API credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.create_route.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Client Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Get SQL User\nDESCRIPTION: Retrieves a SQL user using the google-cloud-sql Node.js library. The sample demonstrates how to call the `get` method from the `Sql_users_service` to fetch user information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nSql_users_service.get\n```\n\n----------------------------------------\n\nTITLE: GKE Backup API Quickstart in Node.js\nDESCRIPTION: A quickstart example demonstrating basic usage of the GKE Backup API with Node.js. Provides a starting point for developers integrating with Google Kubernetes Engine Backup services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Telco Automation API Client Library using npm\nDESCRIPTION: This bash command installs the Telco Automation API client library for Node.js from npm, enabling developers to interact with the Telco Automation API services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/telcoautomation\n```\n\n----------------------------------------\n\nTITLE: Running Get Node Pool Script in Node.js\nDESCRIPTION: This Node.js script retrieves information about a specific node pool within a cluster. Ensure Node.js and Google Cloud SDK are set up. Provide the node pool identifier to receive configuration details as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.get_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Update Connection - Google Cloud Connectors\nDESCRIPTION: Node.js script to update an existing connection using the Google Cloud Connectors API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.update_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running VM Migration Target Project Creation Sample\nDESCRIPTION: Node.js script demonstrating how to create a target project using the VM Migration API. Usage requires the google-cloud-vmmigration package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.create_target_project.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests - JavaScript\nDESCRIPTION: This snippet executes all system tests using npm. System tests typically encompass end-to-end scenarios to ensure that the application works in a production-like environment. Run this command after all unit and integration tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Generating Exclusivity Manifest - JavaScript\nDESCRIPTION: This snippet demonstrates how to generate an exclusivity manifest for a GKE Hub membership using the generate_exclusivity_manifest method. It requires the GKE Hub client library for JavaScript. The parameters include the membership details, and the output is the exclusivity manifest for managing membership exclusivity.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// View the source code at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.generate_exclusivity_manifest.js\n\n// Usage:\n// node packages/google-cloud-gkehub/samples/generated/v1beta1/gke_hub_membership_service.generate_exclusivity_manifest.js\n```\n\n----------------------------------------\n\nTITLE: Adding a Secret Version with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This code example shows how to add a new version to an existing secret using the Google Cloud Secret Manager service (v1beta2). It employs the add_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.add_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Deleting VMware Engine Network in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete a VMware Engine network using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.delete_vmware_engine_network\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Memorystore Client Library\nDESCRIPTION: Command to install the Google Cloud Memorystore Node.js client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/memorystore\n```\n\n----------------------------------------\n\nTITLE: Running System Tests\nDESCRIPTION: Runs all system tests to validate the system's functionality as a whole. This comprehensive testing is key to maintaining reliability and performance standards in the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating API with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to update an API using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_api.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Pause Queue Sample Usage\nDESCRIPTION: This sample demonstrates how to pause a queue using the Cloud Tasks API in Node.js. The script `cloud_tasks.pause_queue.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.pause_queue.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments with Google Workspace Add-ons API in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Google Workspace Add-ons API to list deployments within a project. It initializes the GSuiteAddOnsClient, constructs a request with optional pagination parameters, and iterates through the results asynchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Name of the project in which to create the deployment.\n *  Example: `projects/my_project`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of deployments to return. The service may return fewer\n *  than this value.\n *  If unspecified, at most 1000 deployments will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListDeployments` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListDeployments` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Gsuiteaddons library\nconst {GSuiteAddOnsClient} = require('@google-cloud/gsuiteaddons').v1;\n\n// Instantiates a client\nconst gsuiteaddonsClient = new GSuiteAddOnsClient();\n\nasync function callListDeployments() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await gsuiteaddonsClient.listDeploymentsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDeployments();\n```\n\n----------------------------------------\n\nTITLE: Installing specific version of @google-cloud/bigquery-data-transfer\nDESCRIPTION: Command to install a specific version of the @google-cloud/bigquery-data-transfer npm package using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/bigquery-data-transfer@5.0.1\n```\n\n----------------------------------------\n\nTITLE: Creating a Workflow - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a new workflow in Google Cloud Workflows. It requires Node.js, access to Google Cloud Workflows API, and the workflow definition in the request. The key parameters include the workflow name and the definition itself. The output will confirm the creation of the workflow along with its ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WorkflowsClient} = require('@google-cloud/workflows-executions');\n\nasync function createWorkflow() {\n  const client = new WorkflowsClient();\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID',\n    workflow: {\n      name: 'YOUR_WORKFLOW_NAME',\n      definition: 'YOUR_WORKFLOW_DEFINITION'\n    }\n  };\n  const [response] = await client.createWorkflow(request);\n  console.log(`Created workflow: ${response.name}`);\n}\ncreateWorkflow();\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library via NPM\nDESCRIPTION: Example command showing how to install Google Cloud client libraries for legacy Node.js versions using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google/area120-tables@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Connect to Active Conference using Google Meet API\nDESCRIPTION: Sample code showing how to connect to an active conference using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.connect_active_conference.js\n```\n\n----------------------------------------\n\nTITLE: Using the DataSourcesServiceClient to List Data Sources in Node.js\nDESCRIPTION: This example demonstrates how to instantiate the DataSourcesServiceClient and use it to list data sources for a merchant account. It shows the basic pattern of creating a client, constructing a request, and iterating through paginated responses.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The account to list data sources for.\n *  Format: `accounts/{account}`\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of data sources to return. The service may\n *  return fewer than this value. The maximum value is 1000; values above 1000\n *  will be coerced to 1000. If unspecified, the maximum number of data sources\n *  will be returned.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListDataSources` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListDataSources`\n *  must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Datasources library\nconst {DataSourcesServiceClient} =\n  require('@google-shopping/datasources').v1beta;\n\n// Instantiates a client\nconst datasourcesClient = new DataSourcesServiceClient();\n\nasync function callListDataSources() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = datasourcesClient.listDataSourcesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDataSources();\n\n```\n\n----------------------------------------\n\nTITLE: Updating Functions (v2beta)\nDESCRIPTION: Example demonstrating how to update existing Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.update_function.js\n```\n\n----------------------------------------\n\nTITLE: Creating Analysis Rule with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to use the create_analysis_rule method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_analysis_rule.js\n```\n\n----------------------------------------\n\nTITLE: Get AlloyDB User Information using Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve information about an AlloyDB user using the AlloyDB Admin API in Node.js. It uses the get_user method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.get_user.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Server TLS Policy with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a server TLS policy using the Google Cloud Network Security API. It uses the get_server_tls_policy method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.get_server_tls_policy.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.lookup_stream_object in Node.js\nDESCRIPTION: Sample code for looking up a stream object using the Google Cloud Datastream API in Node.js. This script demonstrates how to find a specific object within a stream based on search criteria.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.lookup_stream_object.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Service from App Hub - Node.js\nDESCRIPTION: This snippet retrieves a specific service from Google Cloud App Hub using its service identifier. It requires initialization with appropriate credentials to access Google Cloud resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.get_service.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_service.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Get Automation Run Sample\nDESCRIPTION: This sample demonstrates how to get an automation run using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_automation_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes end-to-end system tests for the project. It uses npm to run the `system-test` script defined in the `package.json` file. System tests simulate real-world usage scenarios to ensure that the entire system functions correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Managing Table Rows - Batch Update\nDESCRIPTION: Example showing how to batch update multiple rows in an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.batch_update_rows.js\n```\n\n----------------------------------------\n\nTITLE: Permission Service: Transfer Ownership Sample\nDESCRIPTION: Sample code demonstrating how to transfer ownership of a resource using the Google Cloud AI Generative Language Permission Service in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nPermission Service Transfer Ownership Sample\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB User in Node.js\nDESCRIPTION: This code snippet shows how to update an AlloyDB user using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1alpha/alloy_d_b_admin.update_user.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.get_device in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `get_device` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.get_device.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Backup using Backup for GKE API in Node.js\nDESCRIPTION: This sample demonstrates how to create a backup using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.create_backup.js\n```\n\n----------------------------------------\n\nTITLE: Using Migration Service to Start Migration Workflow in BigQuery Migration API\nDESCRIPTION: Demonstrates how to start a migration workflow using the BigQuery Migration API v2alpha. This sample shows the command to execute the Node.js script that initiates a migration workflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-migration/samples/generated/v2alpha/migration_service.start_migration_workflow.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating IAP OAuth Client in JavaScript\nDESCRIPTION: Execute this sample to create a client for Identity-Aware Proxy using OAuth services. The script is intended for Node.js environments; run the script using the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.create_identity_aware_proxy_client.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies Using npm\nDESCRIPTION: This shell command installs all necessary dependencies for the Node.js project using npm. It must be executed in the root directory of the project where the package.json file is located. This is a prerequisite for running and testing the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Executing Model Armor API Samples in Node.js\nDESCRIPTION: This snippet demonstrates how to run the various Model Armor API sample scripts. It shows the command to execute each sample file from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-modelarmor/samples/generated/v1/model_armor.create_template.js\n```\n\n----------------------------------------\n\nTITLE: Loading JSON protos using require() in Node.js Domains library\nDESCRIPTION: A bug fix that changes the method of loading JSON protocol buffers to use require() instead of a previous approach. This change was implemented in version 1.0.1 of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nuse require() to load JSON protos\n```\n\n----------------------------------------\n\nTITLE: Installing and Linking the CLI Tool\nDESCRIPTION: Commands to install dependencies, compile the project, and create a symlink for the CLI tool in the local environment. This needs to be run from within the gapic-node-templating package directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/gapic-node-templating/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd  $MONO_REPO_NAME/packages/gapic-node-templating\nnpm ci\nnpm run compile\nnpm link .\n```\n\n----------------------------------------\n\nTITLE: Dependency Version Update Example (Node.js)\nDESCRIPTION: Example showing dependency update in package.json for google-auth-library to version 7\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n\"dependencies\": {\n  \"google-auth-library\": \"^7.0.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Version Link Reference in Markdown\nDESCRIPTION: Markdown link syntax for comparing version changes between 0.6.0 and 0.6.1\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[0.6.1](https://github.com/googleapis/google-cloud-node/compare/edgecontainer-v0.6.0...edgecontainer-v0.6.1)\n```\n\n----------------------------------------\n\nTITLE: Importing Cloud Tasks Client in Node.js\nDESCRIPTION: Demonstrates how to import and initialize the Cloud Tasks client with version selection\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst cloudTasks = require('@google-cloud/tasks');\nconst client = new cloudTasks.CloudTasksClient(); // v2beta2 by default\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js package dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Version Headers in Changelog\nDESCRIPTION: Version headers showing release information and Git commit references\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.1.0](https://github.com/googleapis/google-cloud-node/compare/cloudquotas-v2.0.0...cloudquotas-v2.1.0) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Update Entitlement Usage Command - Node.js\nDESCRIPTION: Shell command to execute the update entitlement sample code for the Privileged Access Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-privilegedaccessmanager/samples/generated/v1/privileged_access_manager.update_entitlement.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for a Policy Tag Manager in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This code retrieves the IAM policy associated with a resource managed by Policy Tag Manager within Google Cloud Data Catalog, using Node.js and the google-cloud-datacatalog library. It uses the `getIamPolicy` method to fetch the IAM policy. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(resource) {\n  // [START datacatalog_get_iam_policy]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const resource = 'PROJECT_ID'; // Resource path.\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function getIamPolicy() {\n    const [policy] = await policyTagManagerClient.getIamPolicy({\n      resource: resource,\n    });\n\n    console.log('Got IAM policy for resource: %s', resource);\n    console.log(policy);\n  }\n  getIamPolicy();\n  // [END datacatalog_get_iam_policy]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Require google-gax v2.12.0\nDESCRIPTION: This snippet updates the google-gax dependency to version 2.12.0.  Updating dependencies is crucial for stability and ensuring compatibility with the Cloud Build NodeJS library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * **deps:** require google-gax v2.12.0 ([#219](https://www.github.com/googleapis/nodejs-cloudbuild/issues/219)) ([2d5e809](https://www.github.com/googleapis/nodejs-cloudbuild/commit/2d5e8091d4c2f99739ebd2f849eb5c30e3956952))\n */\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing BigQuery Data Transfer Client Library - NPM\nDESCRIPTION: Command to install the Google Cloud BigQuery Data Transfer client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-data-transfer\n```\n\n----------------------------------------\n\nTITLE: Acknowledging Violation with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to acknowledge a violation using the Assured Workloads service in Node.js. It requires the `@google-cloud/assuredworkloads` package and assumes that the necessary authentication and project configuration have been set up. The sample is executed directly from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.acknowledge_violation.js`\n```\n\n----------------------------------------\n\nTITLE: Restoring a Service in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet illustrates how to restore a service in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.restore_service.js\n```\n\n----------------------------------------\n\nTITLE: Running Parameter Manager quickstart sample\nDESCRIPTION: This command executes the quickstart sample for the Parameter Manager API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-parametermanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Policy - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to get a data policy using the BigQuery Data Policies API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.get_data_policy.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Partition with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample shows how to delete a partition using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_73\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.delete_partition.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for Artifact Registry using Node.js\nDESCRIPTION: This snippet demonstrates how to get the IAM policy for a resource in Google Cloud Artifact Registry. It uses the get_iam_policy method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Getting Saved Query using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a saved query using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.get_saved_query.js`\n```\n\n----------------------------------------\n\nTITLE: Fixing GoogleAdsError Missing Issue\nDESCRIPTION: This commit resolves an issue where the GoogleAdsError was missing when using a generator version after 1.3.0. This ensures that the GoogleAdsError is correctly available and can be used for error handling in the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n* GoogleAdsError missing using generator version after 1.3.0 ([#52](https://www.github.com/googleapis/nodejs-managed-identities/issues/52)) ([747a6f2](https://www.github.com/googleapis/nodejs-managed-identities/commit/747a6f2ee3a7a6d341ad5f3825a22f31886474ac))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and automatically fixes any linting issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js dependencies with npm\nDESCRIPTION: This command installs the dependencies required for the project using npm, the Node.js package manager. It reads the `package.json` file in the project directory and installs all listed dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting and fixing Node.js code with npm\nDESCRIPTION: This command runs the linter and attempts to fix any style issues in the code using npm. It executes the script defined under the `fix` key in the `package.json` file, typically using a linter like ESLint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Project Documentation Comment in Markdown\nDESCRIPTION: HTML comment indicating the file is generated by synthtool and should not be edited manually.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Canceling a Metadata Job in Cloud Dataplex using Node.js\nDESCRIPTION: This code snippet demonstrates how to cancel a metadata job in Cloud Dataplex using the Node.js client library. It imports the necessary modules and calls the cancelMetadataJob method of the CatalogServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'YOUR_PROJECT_ID';\n// const location = 'YOUR_LOCATION';\n// const metadataJobId = 'YOUR_METADATA_JOB_ID';\n\n// Imports the Google Cloud client library\nconst {CatalogServiceClient} = require('@google-cloud/dataplex').v1;\n\n// Creates a client\nconst catalogClient = new CatalogServiceClient();\n\nasync function callCancelMetadataJob() {\n  // Construct request\n  const request = {\n    name: catalogClient.metadataJobPath(\n      projectId,\n      location,\n      metadataJobId\n    ),\n  };\n\n  // Run request\n  const response = await catalogClient.cancelMetadataJob(request);\n  console.log(response);\n}\n```\n\n----------------------------------------\n\nTITLE: Linting Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter on code changes, with automatic fixing of some issues. This helps maintain code quality and consistency in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Taxonomy with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This code snippet shows how to retrieve a data taxonomy using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the get_data_taxonomy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.get_data_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Running VM Migration Utilization Report Creation Sample\nDESCRIPTION: Node.js script showing how to create a utilization report using the VM Migration API. Usage requires the google-cloud-vmmigration package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.create_utilization_report.js\n```\n\n----------------------------------------\n\nTITLE: Replacing Service Perimeters with Access Context Manager API in Node.js\nDESCRIPTION: This code example demonstrates replacing service perimeters using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.replace_service_perimeters.js\n```\n\n----------------------------------------\n\nTITLE: Updating Capacity Commitments with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to update capacity commitments using the BigQuery Reservation Service API in Node.js. This allows you to modify existing capacity commitment properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.update_capacity_commitment.js\n```\n\n----------------------------------------\n\nTITLE: Updating Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet shows how to update a tag value using the Google Cloud Resource Manager API in Node.js. It uses the tag_values.update_tag_value method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.update_tag_value.js\n```\n\n----------------------------------------\n\nTITLE: Getting Protected Resources Summary - Node.js\nDESCRIPTION: This sample script shows how to retrieve a summary of protected resources using the Key Tracking Service from the KMS Inventory API. Make sure client library dependencies are prepared prior to execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms-inventory/samples/generated/v1/key_tracking_service.get_protected_resources_summary.js\n```\n\n----------------------------------------\n\nTITLE: Executing Dataplex Run Task\nDESCRIPTION: Runs a specific task with Dataplex via a Node.js script. Ensure environment and authentication are set. Executes 'dataplex_service.run_task.js' to initiate the specified task.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.run_task.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to List Certificates in Node.js\nDESCRIPTION: This sample demonstrates how to list all certificates using Google Cloud Certificate Authority Service. The code can be executed directly to list all certificates in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.list_certificates.js\n```\n\n----------------------------------------\n\nTITLE: Listing Connections with Google Cloud Connectors API\nDESCRIPTION: Example code demonstrating how to list connections using the Google Cloud Connectors API client. The code shows initialization of the client and making an async request to list connections with pagination support. Includes configurable parameters for parent resource, page size, filtering, and view options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent resource of the Connection, of the form:\n *  `projects/* /locations/*`\n */\n// const parent = 'abc123'\n/**\n *  Page size.\n */\n// const pageSize = 1234\n/**\n *  Page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter.\n */\n// const filter = 'abc123'\n/**\n *  Order by parameters.\n */\n// const orderBy = 'abc123'\n/**\n *  Specifies which fields of the Connection are returned in the response.\n *  Defaults to `BASIC` view.\n */\n// const view = {}\n\n// Imports the Connectors library\nconst {ConnectorsClient} = require('@google-cloud/connectors').v1;\n\n// Instantiates a client\nconst connectorsClient = new ConnectorsClient();\n\nasync function callListConnections() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await connectorsClient.listConnectionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListConnections();\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter and attempts to automatically fix any linting issues in the code. This helps to maintain consistent code style and quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Client in Google Cloud Multi-Cloud\nDESCRIPTION: Node.js sample script for creating an Azure client configuration using Google Cloud Multi-Cloud API. Establishes connection and authentication for Azure Kubernetes cluster management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-gkemulticloud\\/samples\\/generated\\/v1\\/azure_clusters.create_azure_client.js\n```\n\n----------------------------------------\n\nTITLE: Updating Domain Registration with Google Cloud Domains Node.js\nDESCRIPTION: Sample script for updating existing domain registrations using the Google Cloud Domains API in Node.js. Demonstrates modification of domain registration details in the V1beta1 version of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1beta1/domains.update_registration.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Volume Backup using GKE Backup API in Node.js\nDESCRIPTION: Sample code for retrieving a specific volume backup using the GKE Backup API. Used to get detailed information about a persistent volume backup in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_volume_backup.js\n```\n\n----------------------------------------\n\nTITLE: Creating OS Policy Assignment with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet shows how to create an OS policy assignment using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.create_o_s_policy_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Data Loss Prevention API in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Cloud Data Loss Prevention API to inspect content for sensitive information. It sets up the client, defines inspection parameters, and processes the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Instantiates a client\nconst dlp = new DLP.DlpServiceClient();\n\n// The string to inspect\nconst string = 'Robert Frost';\n\n// The project ID to run the API call under\n// const projectId = 'my-project';\n\nasync function quickStart() {\n  // The minimum likelihood required before returning a match\n  const minLikelihood = 'LIKELIHOOD_UNSPECIFIED';\n\n  // The maximum number of findings to report (0 = server maximum)\n  const maxFindings = 0;\n\n  // The infoTypes of information to match\n  const infoTypes = [{name: 'PERSON_NAME'}, {name: 'US_STATE'}];\n\n  // Whether to include the matching string\n  const includeQuote = true;\n\n  // Construct item to inspect\n  const item = {value: string};\n\n  // Construct request\n  const request = {\n    parent: `projects/${projectId}/locations/global`,\n    inspectConfig: {\n      infoTypes: infoTypes,\n      minLikelihood: minLikelihood,\n      limits: {\n        maxFindingsPerRequest: maxFindings,\n      },\n      includeQuote: includeQuote,\n    },\n    item: item,\n  };\n\n  // Run request\n  const [response] = await dlp.inspectContent(request);\n  const findings = response.result.findings;\n  if (findings.length > 0) {\n    console.log('Findings:');\n    findings.forEach(finding => {\n      if (includeQuote) {\n        console.log(`\\tQuote: ${finding.quote}`);\n      }\n      console.log(`\\tInfo type: ${finding.infoType.name}`);\n      console.log(`\\tLikelihood: ${finding.likelihood}`);\n    });\n  } else {\n    console.log('No findings.');\n  }\n}\nquickStart();\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Security Settings Dialogflow CX with Node.js\nDESCRIPTION: This snippet retrieves security settings using the Dialogflow CX API with Node.js. It depends on the `@google-cloud/dialogflow-cx` package.  The command line is used to execute this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/security_settings_service.get_security_settings.js`\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to list load balancer route extensions in Node.js\nDESCRIPTION: Example for listing load balancer route extensions using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the list_lb_route_extensions method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.list_lb_route_extensions.js\n```\n\n----------------------------------------\n\nTITLE: Running Create Environment Sample\nDESCRIPTION: Example command for running the environments.create_environment sample to create a new Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.create_environment.js\n```\n\n----------------------------------------\n\nTITLE: Minifying JSON and JS Files in JavaScript\nDESCRIPTION: Minifies JSON and JS files, and removes .map files to optimize the package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Minify JSON and JS files\n// Remove .map files\n```\n\n----------------------------------------\n\nTITLE: Preserving Default Values in Request Header for JavaScript\nDESCRIPTION: Preserves default values in the x-goog-request-params header.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nPreserve default values in x-goog-request-params header\n```\n\n----------------------------------------\n\nTITLE: Accepting strings for enum, bytes, and Long types\nDESCRIPTION: This snippet ensures that enum, bytes, and Long types now accept strings. Accepting strings simplifies data input and improves flexibility when interacting with the Cloud Build API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * enum, bytes, and Long types now accept strings ([64538fe](https://www.github.com/googleapis/nodejs-cloudbuild/commit/64538fe21aae6430f8f3e1ec6604b286bd890535))\n */\n```\n\n----------------------------------------\n\nTITLE: Version 0.6.0 Changelog Entry\nDESCRIPTION: Major version update featuring Node 18 upgrade requirement and addition of request/response debug logging to GAPICs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.6.0](https://github.com/googleapis/google-cloud-node/compare/procurement-v0.5.0...procurement-v0.6.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([e7409c8](https://github.com/googleapis/google-cloud-node/commit/e7409c87febcf33359a2d36ae4551f502b8a2f93))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Project Identification Comment in HTML\nDESCRIPTION: Auto-generated HTML comment indicating the file was generated by synthtool and should not be edited.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Getting Config - Google Cloud Node.js\nDESCRIPTION: This snippet fetches the configuration of Dataform using the Google Cloud Node.js library. To use this functionality, the user must execute the corresponding Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.get_config.js\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry Version 4.0.1\nDESCRIPTION: Changelog entry documenting bug fixes for version 4.0.1 released on 2025-03-21, including fixes for promise handling and listOperationsAsync return type.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/org-policy-v4.0.0...org-policy-v4.0.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Executing Data Labeling Service Sample Scripts\nDESCRIPTION: Node.js scripts demonstrating interactions with Google Cloud Data Labeling Service API in the v1beta1 version. Each script represents a specific operation like data export, dataset retrieval, labeling, and listing resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.export_data.js\n```\n\n----------------------------------------\n\nTITLE: Updating Google GAX Dependency\nDESCRIPTION: Updates the google-gax dependency to version 2.24.1.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n**deps:** google-gax v2.24.1 ([#415](https://www.github.com/googleapis/nodejs-security-center/issues/415)) ([aa77ac3](https://www.github.com/googleapis/nodejs-security-center/commit/aa77ac33ed9e20e75505fb4d31183a0f1f0d1f76))\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 2.0.1\nDESCRIPTION: Documents version 2.0.1 release with bug fixes for promise handling and listOperationsAsync return type updates\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/rapidmigrationassessment-v2.0.0...rapidmigrationassessment-v2.0.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the project's code and attempts to fix any issues it finds. It should be run before submitting a pull request to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Policy Tag Details with Node.js\nDESCRIPTION: Execute this Node.js script to fetch detailed information about a specific policy tag in Google Cloud. It utilizes API access to retrieve tag details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.get_policy_tag.js\"\n```\n\n----------------------------------------\n\nTITLE: Installing the Network Services API Node.js Client Library\nDESCRIPTION: Command to install the Network Services API client library for Node.js via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/networkservices\n```\n\n----------------------------------------\n\nTITLE: Deleting an Intent in Node.js\nDESCRIPTION: This snippet enables the deletion of a specific intent from a Dialogflow agent, allowing for the removal of intents that are no longer needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_102\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Delete intent\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function deleteIntent() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.deleteIntent(request);\n  console.log(response);\n}\ndeleteIntent();\n```\n\n----------------------------------------\n\nTITLE: Creating an Environment in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to create an environment within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.create_environment.js\"\n```\n\n----------------------------------------\n\nTITLE: Executing Quickstart Sample Code\nDESCRIPTION: This quickstart script provides a basic example of how to start using the BeyondCorp API with Node.js. Ensure you have the necessary Node.js environment and libraries configured. The script demonstrates initial API interaction and requires authentication and setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Private Catalog Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Private Catalog client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/private-catalog\n```\n\n----------------------------------------\n\nTITLE: Listing SQL Users with Google Cloud SQL API in Node.js\nDESCRIPTION: This snippet shows how to list SQL users using the Google Cloud SQL API. It utilizes the sql_users_service.list method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_users_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Disabling Interactive Serial Console in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This code snippet disables the interactive serial console for a bare metal instance. It utilizes the Google Cloud Bare Metal Solution API to achieve this. Usage requires the Node.js environment to run the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.disable_interactive_serial_console.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.disable_interactive_serial_console.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: List CA Pools using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to list Certificate Authority pools using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.list_ca_pools.js\n```\n\n----------------------------------------\n\nTITLE: Deleting VOD Config in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to delete a VOD (Video on Demand) configuration using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.delete_vod_config.js\n```\n\n----------------------------------------\n\nTITLE: Route Optimization Batch Tour Optimization in Node.js\nDESCRIPTION: Sample code for using the batch optimize tours functionality of the Route Optimization API. Demonstrates how to optimize multiple tour routes in a single batch request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-routeoptimization/samples/generated/v1/route_optimization.batch_optimize_tours.js\n```\n\n----------------------------------------\n\nTITLE: Creating User in AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet details how to create a new user in an AlloyDB database using the Google Cloud Node.js SDK. Before running, ensure client library initialization and authentication are performed. Once executed, a new user is added to the database.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_user.js\n```\n\n----------------------------------------\n\nTITLE: Listing Regions using the Merchant API Client in Node.js\nDESCRIPTION: Example code demonstrating how to use the RegionsServiceClient from the Google Shopping Merchant Accounts library to list regions for a merchant account. The code initializes the client, creates a request with required parameters, and iterates through the paginated results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The account to list regions for.\n *  Format: `accounts/{account}`\n */\n// const parent = 'accounts/abc123'\n/**\n *  Optional. The maximum number of regions to return. The service may return\n *  fewer than this value.\n *  If unspecified, at most 50 regions will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListRegions` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListRegions` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Accounts library\nconst {RegionsServiceClient} = require('@google-shopping/accounts').v1beta;\n\n// Instantiates a client\nconst accountsClient = new RegionsServiceClient();\n\nasync function callListRegions() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = accountsClient.listRegionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListRegions();\n```\n\n----------------------------------------\n\nTITLE: Executing Reference Image Creation Node.js Script\nDESCRIPTION: Run this command to execute a script that creates a reference image using the Google Cloud Vision API. Requires Node.js, with inputs such as image details and expected output is a created reference image entity in the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.create_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Installing Certificate Authority Service Client Library (Node.js)\nDESCRIPTION: This command installs the Certificate Authority Service client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/security-private-ca\n```\n\n----------------------------------------\n\nTITLE: Listing Analytics Hub Subscriptions\nDESCRIPTION: Example showing how to list subscriptions in Analytics Hub\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.list_subscriptions.js\n```\n\n----------------------------------------\n\nTITLE: Linting the Code\nDESCRIPTION: This snippet specifies the command to lint the code, ensuring that it follows the coding standards and conventions defined for the project. This step is helpful in identifying and possibly fixing style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Requiring google-gax v2.12.0\nDESCRIPTION: This commit updates the google-gax dependency to version 2.12.0. This ensures compatibility and resolves potential issues related to the google-gax library within the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** require google-gax v2.12.0 ([#44](https://www.github.com/googleapis/nodejs-managed-identities/issues/44)) ([bc171dc](https://www.github.com/googleapis/nodejs-managed-identities/commit/bc171dc8b143a2964bdb737a2c665a9386d1f47f))\n```\n\n----------------------------------------\n\nTITLE: Adding JSON Files to TSConfig Templates in Google Cloud Node\nDESCRIPTION: This code snippet shows a bug fix where JSON files are added to TSConfig templates in the Google Cloud Node project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* Add json files to tsconfig templates ([#1692](https://github.com/googleapis/google-cloud-node/issues/1692)) (ba6be1d) ([eed00f4](https://github.com/googleapis/google-cloud-node/commit/eed00f4e4de22392db3a440a20486c3eeb9d33a6))\n```\n\n----------------------------------------\n\nTITLE: Listing Backups in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet demonstrates how to list all backups in Google Cloud Filestore using the manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n// List Backups Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function listBackups(projectId) {\n  // Implementation for listing backups\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Subnet in VMware Engine (Node.js)\nDESCRIPTION: Example showing how to update subnet configurations in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_subnet.js\n```\n\n----------------------------------------\n\nTITLE: Updating method name from imagePath to referenceImagePath\nDESCRIPTION: This snippet shows the breaking change where `imagePath` method was renamed to `referenceImagePath` in `ProductSearchClient`. It requires updating existing code that uses the old method name to the new one to avoid errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// old code\nconst formattedName = client.imagePath(...);\n\n// new code\nconst formattedName = client.referenceImagePath(...);\n```\n\n----------------------------------------\n\nTITLE: Installing GKE Connect Gateway Client Library\nDESCRIPTION: Command to install the GKE Connect Gateway Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gke-connect-gateway\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Delivery Pipeline Deletion Sample in Node.js\nDESCRIPTION: This snippet is tailored to execute a script to delete a delivery pipeline using Node.js. The script requires Node.js and the library samples locally available. Running the script removes a specified delivery pipeline configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_delivery_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance for Cloud Filestore\nDESCRIPTION: This sample demonstrates how to delete an existing instance from Google Cloud Filestore using Node.js. Ensure the instance is not in use before deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function deleteInstance() {\n    const response = await client.deleteInstance(...);\n    console.log(response);\n}\ndeleteInstance();\n```\n\n----------------------------------------\n\nTITLE: Listing Key Rings in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample shows how to list key rings using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.list_key_rings.js\n```\n\n----------------------------------------\n\nTITLE: Search Documents Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to search documents using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.search_documents.js\n```\n\n----------------------------------------\n\nTITLE: Getting Provisioning Configuration from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet retrieves the provisioning configuration for a bare metal instance through the API. It should be run in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_provisioning_config.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_provisioning_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Executions - Google Cloud Workflows - JavaScript\nDESCRIPTION: This snippet lists all executions for a specified workflow. It requires Node.js and access to Google Cloud Workflows API. The workflow ID is the key parameter needed for the request. The output will include details of all executions associated with the workflow in a JSON format.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ExecutionsClient} = require('@google-cloud/workflows-executions');\n\nasync function listExecutions() {\n  const client = new ExecutionsClient();\n  const workflowId = 'YOUR_WORKFLOW_ID';\n  const request = {parent: `projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION_ID/workflows/${workflowId}`};\n  const [response] = await client.listExecutions(request);\n  console.log(response);\n}\nlistExecutions();\n```\n\n----------------------------------------\n\nTITLE: Upgrading Notebook Runtime with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to upgrade a notebook runtime using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.upgrade_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Job Service Create Job\nDESCRIPTION: Demonstrates how to create a job using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.create_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Slate in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to get a slate using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_slate.js\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments with API Hub using Node.js\nDESCRIPTION: Use this Node.js script to acquire a list of current deployments from the Google Cloud API Hub. Essential for deployment tracking and monitoring, aiding in infrastructure management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_deployments.js\n```\n\n----------------------------------------\n\nTITLE: Executing update_app_connection Sample Code\nDESCRIPTION: This Node.js script updates an existing app connection using the BeyondCorp API. Before running this command, ensure that Node.js and required libraries are installed, and authentication is configured. The script updates specified connection parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.update_app_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running a Cloud Scheduler Job in Node.js\nDESCRIPTION: This snippet illustrates how to manually trigger a job execution in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.run_job.js\n```\n\n----------------------------------------\n\nTITLE: List Device Registries - Cloud IoT - Node.js\nDESCRIPTION: This sample illustrates how to list device registries using the Google Cloud IoT Device Manager in Node.js. The google-cloud-node library is used for interacting with the IoT service. Running the sample requires authentication and properly configured project settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Getting Taxonomy in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet shows how to retrieve a specific taxonomy from Google Cloud's Data Catalog service using the Node.js client. The google-cloud-datacatalog package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function getTaxonomy() {\n  const request = {\n    name: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/taxonomies/YOUR_TAXONOMY_ID',\n  };\n  const [taxonomy] = await client.getTaxonomy(request);\n  console.log('Taxonomy:', taxonomy);\n}\ngetTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Recommender Node.js Client\nDESCRIPTION: Command to install the Google Cloud Recommender client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/recommender\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy with Node.js\nDESCRIPTION: Illustrates how to retrieve the IAM policy of a resource within Google Cloud Data Catalog using Node.js. Requires the `@google-cloud/datacatalog` package, this script is integral for managing resource permissions and security policy validations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating and Running a Storage Transfer Job with Node.js\nDESCRIPTION: This snippet demonstrates how to use the Storage Transfer Service client library to create a one-time transfer job between two Google Cloud Storage buckets. It initializes the client, creates a transfer job request, and then runs the transfer job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {\n  StorageTransferServiceClient,\n} = require('@google-cloud/storage-transfer');\n\n/**\n * TODO(developer): Uncomment the following lines before running the sample.\n */\n// Your project id\n// const projectId = 'my-project'\n\n// The ID of the GCS bucket to transfer data from\n// const gcsSourceBucket = 'my-source-bucket'\n\n// The ID of the GCS bucket to transfer data to\n// const gcsSinkBucket = 'my-sink-bucket'\n\n// Creates a client\nconst client = new StorageTransferServiceClient();\n\n/**\n * Creates a one-time transfer job.\n */\nasync function quickstart() {\n  // Creates a request to transfer from the source bucket to\n  // the sink bucket\n  const createRequest = {\n    transferJob: {\n      projectId: projectId,\n      transferSpec: {\n        gcsDataSource: {bucketName: gcsSourceBucket},\n        gcsDataSink: {bucketName: gcsSinkBucket},\n      },\n      status: 'ENABLED',\n    },\n  };\n\n  // Runs the request and creates the job\n  const [transferJob] = await client.createTransferJob(createRequest);\n\n  const runRequest = {\n    jobName: transferJob.name,\n    projectId: projectId,\n  };\n  await client.runTransferJob(runRequest);\n\n  console.log(\n    `Created and ran a transfer job from ${gcsSourceBucket} to ${gcsSinkBucket} with name ${transferJob.name}`\n  );\n}\n\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Running Tests Using npm\nDESCRIPTION: These Bash commands are used to execute different kinds of tests in the project, including unit tests, integration tests, and system tests. They ensure that the code changes do not break existing functionality and adhere to the project's quality standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\\nnpm test\\n\\n# Run sample integration tests.\\nnpm run samples-test\\n\\n# Run all system tests.\\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting a Restore Plan using Backup for GKE API in Node.js\nDESCRIPTION: This sample shows how to delete a restore plan using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.delete_restore_plan.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Google Cloud Node\nDESCRIPTION: This snippet provides the command to execute sample integration tests for the Google Cloud Node library, helping to validate the functionality of code changes with existing integrations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check the code for style and formatting issues, and potentially fix them. This ensures the code adheres to the project's coding standards and best practices.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run fix\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check the code for style and formatting issues, and attempts to automatically fix any violations found. This helps to maintain consistent code style across the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Importing Google Cloud Resource Manager (Old Method)\nDESCRIPTION: The previous method for importing and initializing the Google Cloud Resource Manager library before v0.9.0. This approach uses CommonJS require without destructuring.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst Resource = require('@google-cloud/resource-manager');\nconst resource = Resource({...});\n```\n\n----------------------------------------\n\nTITLE: Viewing Sample Source Code\nDESCRIPTION: Shell command to open and view sample source code in Cloud Shell editor.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[![Open in Cloud Shell][shell_img]](https://console.cloud.google.com/cloudshell/open?git_repo=https://github.com/googleapis/google-cloud-node&page=editor&open_in_editor=packages/google-cloud-speech/samples/generated/v1/adaptation.create_custom_class.js,samples/README.md)\n```\n\n----------------------------------------\n\nTITLE: Update @google-cloud/pubsub dependency to v2 in Node.js\nDESCRIPTION: This commit updates the @google-cloud/pubsub dependency to version 2 in the Google Cloud IoT Node.js library. This update likely incorporates bug fixes, performance improvements, or new features from the Pub/Sub library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency @google-cloud/pubsub to v2 ([#341](https://www.github.com/googleapis/nodejs-iot/issues/341)) ([81609b8](https://www.github.com/googleapis/nodejs-iot/commit/81609b84406077532f58af70028ccf675fa838f3))\"\n```\n\n----------------------------------------\n\nTITLE: Update googleapis dependency to v52 in Node.js\nDESCRIPTION: Updates the googleapis dependency to version 52 in the Google Cloud IoT Node.js library. This update likely incorporates new features, bug fixes, or performance improvements from the googleapis library, which provides access to various Google APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency googleapis to v52 ([#343](https://www.github.com/googleapis/nodejs-iot/issues/343)) ([d26347e](https://www.github.com/googleapis/nodejs-iot/commit/d26347e4b80ac6bff4270442dc9f8e24c7245316))\"\n```\n\n----------------------------------------\n\nTITLE: Version Number References\nDESCRIPTION: Semantic version numbers used to track library versions and releases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nv2.1.0\nv2.0.0\nv1.7.0\nv1.6.0\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center get_import_data_file script in Node.js\nDESCRIPTION: Example command to execute the Migration Center get_import_data_file sample script. This script demonstrates how to retrieve information about an import data file using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_import_data_file.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests\nDESCRIPTION: This snippet describes the command used to run all system tests for the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Supporting fallback mode for Electron\nDESCRIPTION: This snippet adds support for fallback mode when running in an Electron environment. Electron environments require special handling, and implementing fallback mode improves the library's compatibility and reliability in Electron applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * support fallback mode for electron ([#124](https://www.github.com/googleapis/nodejs-cloudbuild/issues/124)) ([d2c9f9b](https://www.github.com/googleapis/nodejs-cloudbuild/commit/d2c9f9b69463f9739b1813c673ba53ee97c9a3d5))\n */\n```\n\n----------------------------------------\n\nTITLE: Resume Model Retail API\nDESCRIPTION: This sample demonstrates how to resume a model in the Retail API using Node.js. It involves setting up the necessary authentication and calling the `resumeModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.resume_model.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Zone in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a zone within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.get_zone.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Mute Config with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to delete a mute configuration using the Google Cloud Security Center API. Mute configs control which findings are suppressed from view.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.delete_mute_config.js\n```\n\n----------------------------------------\n\nTITLE: Fix: GoogleAdsError missing using generator version - Node.js\nDESCRIPTION: This code snippet fixes an issue where `GoogleAdsError` was missing when using a generator version after 1.3.0. It ensures that the error class is properly included. It addresses error handling.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"f48e238ae8141c4bd92cfa2fbca8f6af7cc07355\"\n```\n\n----------------------------------------\n\nTITLE: Updating Dependency Version in JavaScript\nDESCRIPTION: Updates the google-gax dependency to version 3.5.2.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n**deps:** Use google-gax v3.5.2\n```\n\n----------------------------------------\n\nTITLE: Running Node.js system tests with npm\nDESCRIPTION: This command executes end-to-end system tests to validate the overall functionality of the application or library. It simulates real-world scenarios and verifies that all components work together correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Exporting Engine Config Metadata with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This example demonstrates exporting engine configuration metadata using the A_m_l.export_engine_config_metadata method of the Google Cloud Financial Services API. The Node.js package and proper credentials are required to execute this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.export_engine_config_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Getting AWS Open ID Configuration - Google Cloud Node\nDESCRIPTION: This snippet fetches the Open ID configuration for AWS clusters. The functionality allows users to authenticate against AWS services with the appropriate tokens generated from the configuration. Ensure proper initialization of the client to use this method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AwsClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AwsClustersClient();\nawait client.getAwsOpenIdConfig({name: 'projects/my-project/locations/my-location/awsClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Installing Google Meet API Node.js Client Library\nDESCRIPTION: Command to install the Google Meet API client library for Node.js using npm. This step is necessary before using the library in your project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-apps/meet\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node\nDESCRIPTION: Command to install required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Get Metadata\nDESCRIPTION: Sample script for retrieving metadata related to Google Analytics Data using the Beta API. Provides insights into available data dimensions and metrics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.get_metadata\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to list load balancer traffic extensions in Node.js\nDESCRIPTION: Example for listing load balancer traffic extensions using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the list_lb_traffic_extensions method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.list_lb_traffic_extensions.js\n```\n\n----------------------------------------\n\nTITLE: Importing Documents with Dialogflow V2beta1\nDESCRIPTION: This code sample showcases how to import multiple documents into a knowledge base using the Dialogflow V2beta1 API in Node.js. It employs the `Documents.import_documents` method to perform the import operation. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.import_documents\"\n```\n\n----------------------------------------\n\nTITLE: Listing Automation Runs in Cloud Deploy with Node.js\nDESCRIPTION: This snippet demonstrates how to list automation runs using the Cloud Deploy API. It uses the list_automation_runs method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_automation_runs.js\n```\n\n----------------------------------------\n\nTITLE: Issue Reference Link Format\nDESCRIPTION: Markdown link format used to reference GitHub issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6185](https://github.com/googleapis/google-cloud-node/issues/6185)\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Network Connectivity Center Node.js Client Library\nDESCRIPTION: Command to install the Network Connectivity Center client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/network-connectivity\n```\n\n----------------------------------------\n\nTITLE: Version 0.3.0 Changelog Entry\nDESCRIPTION: Feature update implementing API version headers in Node.js generator\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/notifications-v0.2.0...notifications-v0.3.0) (2024-05-21)\n\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n* [merchantapi] update Nodejs generator to send API versions in headers for GAPICs ([#5338](https://github.com/googleapis/google-cloud-node/issues/5338)) ([2077593](https://github.com/googleapis/google-cloud-node/commit/20775936d379fc4a1d9afbabdb58b1940f2ab260))\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Tasks Get Task Sample\nDESCRIPTION: Shows how to get information about a specific task in Cloud Tasks using the Node.js client library. The sample code can be found in the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-tasks/samples/generated/v2beta3/cloud_tasks.get_task.js\n```\n\n----------------------------------------\n\nTITLE: Initializing Resource Manager Sample Project\nDESCRIPTION: Setup instructions for preparing the Google Cloud Resource Manager sample project, including navigating to samples directory and installing dependencies\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\\nnpm install\\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Email Contact Information in Markdown\nDESCRIPTION: Email addresses for reporting code of conduct violations to project stewards and alternative contacts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n*googleapis-stewards@google.com*, *Google Cloud Client Libraries*\n```\n\n----------------------------------------\n\nTITLE: Managing GKE Hub Memberships (v1alpha2)\nDESCRIPTION: Examples for managing cluster memberships including creation, deletion, generating connect manifests, and listing memberships using v1alpha2 API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.create_membership.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.delete_membership.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.generate_connect_manifest.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.get_membership.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.initialize_hub.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.list_memberships.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkehub/samples/generated/v1alpha2/gke_hub.update_membership.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Terms of Service Agreement State with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet shows how to get the terms of service agreement state using the Google Shopping Merchant Accounts API. It uses the terms_of_service_agreement_state_service.get_terms_of_service_agreement_state method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/terms_of_service_agreement_state_service.get_terms_of_service_agreement_state.js\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_deployment sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.create_deployment sample using Node.js. It provides the command to run the sample, which creates a new deployment within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_deployment.js`\n```\n\n----------------------------------------\n\nTITLE: Restrict Allowed Resources in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to restrict allowed resources within the Assured Workloads service using the google-cloud-node library. It leverages the AssuredWorkloadsService client to configure resource restrictions for a specific workload. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Using Config.get_deployment in Node.js\nDESCRIPTION: Demonstrates retrieving deployment information using the Infrastructure Manager API Config client in Node.js. This sample shows the usage of the get_deployment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.get_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Pages Dialogflow CX with Node.js\nDESCRIPTION: This snippet lists pages using the Dialogflow CX API in Node.js. It uses the `@google-cloud/dialogflow-cx` package. The script executes when run from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/pages.list_pages.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Network Policy with Node.js\nDESCRIPTION: This snippet offers functionality to delete a network policy in VMware Engine using Node.js. Prerequisite includes Google Cloud libraries. Script is run with the specified Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_network_policy.js\n```\n\n----------------------------------------\n\nTITLE: Usage Example: Cloud Composer Node.js Sample\nDESCRIPTION: Basic usage example showing how to use the Cloud Composer Node.js samples by installing dependencies and running sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance - Node.js\nDESCRIPTION: This snippet provides the functionality to delete an existing instance from the Apigee Registry. It specifies the necessary parameters and permissions required to execute the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/provisioning.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Job Trigger with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a job trigger using the Google Cloud DLP service. It uses the deleteJobTrigger method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_job_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Google Shopping Account Management Samples\nDESCRIPTION: Collection of API endpoints for managing Google Shopping merchant accounts including creation, deletion, listing, and updating of accounts and their associated settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-apikeys/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center create_report_config script in Node.js\nDESCRIPTION: Example command to execute the Migration Center create_report_config sample script. This script demonstrates how to create a report configuration using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.create_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Using BeyondCorp API Client in Node.js\nDESCRIPTION: This code snippet demonstrates how to create a client for BeyondCorp API using Node.js, and make an asynchronous call to list client gateways. The Node.js client library '@google-cloud/clientgateways' is required. It uses the ClientGatewaysServiceClient class to make API calls asynchronously, iterating through and printing each response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/*\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListClientGatewaysRequest.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Clientgateways library\nconst {ClientGatewaysServiceClient} =\n  require('@google-cloud/clientgateways').v1;\n\n// Instantiates a client\nconst clientgatewaysClient = new ClientGatewaysServiceClient();\n\nasync function callListClientGateways() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await clientgatewaysClient.listClientGatewaysAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClientGateways();\n```\n\n----------------------------------------\n\nTITLE: Listing Webhooks in Dialogflow CX - JavaScript\nDESCRIPTION: This snippet lists all webhooks associated with a Dialogflow CX agent. It retrieves information about each webhook by calling the Dialogflow CX API. Dependencies include the Dialogflow CX library. This function does not require parameters and returns an array of all webhooks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_153\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WebhooksClient} = require('@google-cloud/dialogflow-cx');\nconst client = new WebhooksClient();\n\nasync function listWebhooks() {\n  const request = {\n    parent: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT`\n  };\n  const response = await client.listWebhooks(request);\n  console.log('Webhooks:', response);\n}\n\nlistWebhooks();\n```\n\n----------------------------------------\n\nTITLE: Update google-gax dependency to v2.17.1 in Node.js\nDESCRIPTION: Updates the google-gax dependency to version 2.17.1 within the Google Cloud IoT Node.js library. Updating this dependency ensures compatibility and access to the latest features and fixes in the google-gax library, which is essential for interacting with Google Cloud APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** google-gax v2.17.1 ([#496](https://www.github.com/googleapis/nodejs-iot/issues/496)) ([dc278eb](https://www.github.com/googleapis/nodejs-iot/commit/dc278eb4d8ce23454a582fda121766fa0f47e619))\"\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Link Format in Markdown\nDESCRIPTION: Markdown formatting for Git commit hash links in changelog\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6187](https://github.com/googleapis/google-cloud-node/issues/6187)\n```\n\n----------------------------------------\n\nTITLE: Quickstart Usage Command - Node.js\nDESCRIPTION: Shell command to execute the quickstart sample code for the Privileged Access Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-privilegedaccessmanager/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs sample integration tests to ensure that different parts of the application work together correctly.  These tests verify the interactions between components or services, ensuring they function as expected in a combined environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command executes the sample integration tests for the project using npm.  These tests likely verify the integration of the library with sample applications or scenarios.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Importing Intents Dialogflow CX with Node.js\nDESCRIPTION: This snippet imports intents using the Dialogflow CX API with Node.js. It depends on the `@google-cloud/dialogflow-cx` package. The script is executed from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.import_intents.js`\n```\n\n----------------------------------------\n\nTITLE: Documenting New Features in Markdown\nDESCRIPTION: This snippet demonstrates how new features are documented in the changelog. It includes a brief description of the feature and links to related issues and commits.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [fleetengine-delivery] A new field `past_locations` is added to message `.maps.fleetengine.delivery.v1.DeliveryVehicle` ([#6064](https://github.com/googleapis/google-cloud-node/issues/6064)) ([48190a2](https://github.com/googleapis/google-cloud-node/commit/48190a2219978f1ddf29776a40f069fc235e0476))\n* [fleetengine-delivery] Added Fleet Engine Delete APIs ([#6081](https://github.com/googleapis/google-cloud-node/issues/6081)) ([07a6a9a](https://github.com/googleapis/google-cloud-node/commit/07a6a9a97c625ab8aeeccd991e45d4c8ac6abf0f))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node project before development or testing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Create Network Connectivity Hub with Node.js\nDESCRIPTION: Creates a new hub in the Network Connectivity service using the v1alpha1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.create_hub.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to list connection profiles in Node.js\nDESCRIPTION: Example showing how to list connection profiles using the Google Cloud Datastream API. This sample demonstrates the list_connection_profiles method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.list_connection_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Intents in Node.js\nDESCRIPTION: This snippet facilitates the batch updating of multiple intents within a Dialogflow agent, providing a quick way to apply changes across many intents simultaneously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_100\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Batch update intents\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function batchUpdateIntents() {\n  const request = {\n    // Define request parameters\n  };\n  const response = await client.batchUpdateIntents(request);\n  console.log(response);\n}\nbatchUpdateIntents();\n```\n\n----------------------------------------\n\nTITLE: Version Reference Link in Markdown\nDESCRIPTION: NPM version history link for the Google Cloud Vision Node.js package\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[npm history][1]\\n\\n[1]: https://www.npmjs.com/package/@google-cloud/nodejs-vision?activeTab=versions\n```\n\n----------------------------------------\n\nTITLE: Linting Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter on code changes which can automatically fix some style issues. This ensures that contributed code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Update Gaxios dependency to v4 in Node.js\nDESCRIPTION: Updates the gaxios dependency to version 4 in the Google Cloud IoT Node.js library. Gaxios is a HTTP client library, and this update likely includes bug fixes, performance improvements, or new features related to HTTP requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency gaxios to v4 ([#403](https://www.github.com/googleapis/nodejs-iot/issues/403)) ([0f05a18](https://www.github.com/googleapis/nodejs-iot/commit/0f05a18d4facda85735f7b7aafc04584b9234c81))\"\n```\n\n----------------------------------------\n\nTITLE: List Clips Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to list clips using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.list_clips.js\n```\n\n----------------------------------------\n\nTITLE: Delete Ad Sense Link in Analytics Admin via Node.js\nDESCRIPTION: This sample demonstrates how to delete an Ad Sense link within the Google Analytics Admin API using Node.js. It leverages the `deleteAdSenseLink` method of the `AnalyticsAdminServiceClient`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.delete_ad_sense_link.js)\n```\n\n----------------------------------------\n\nTITLE: Getting LB Route Extension with Network Services API in Node.js\nDESCRIPTION: This snippet shows how to retrieve a load balancer route extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.get_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Listing Google Analytics Accounts using Node.js Client\nDESCRIPTION: Example code demonstrating how to instantiate the Analytics Admin client and list all available accounts. Includes error handling and shows how to optionally configure authentication using a service account JSON file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Analytics Admin API client library\nconst analyticsAdmin = require('@google-analytics/admin');\n\nasync function main() {\n  // Instantiates a client using default credentials.\n  // TODO(developer): uncomment and use the following line in order to\n  //  manually set the path to the service account JSON file instead of\n  //  using the value from the GOOGLE_APPLICATION_CREDENTIALS environment\n  //  variable.\n  // const analyticsAdminClient = new analyticsAdmin.AnalyticsAdminServiceClient(\n  //     {keyFilename: \"your_key_json_file_path\"});\n  const analyticsAdminClient = new analyticsAdmin.AnalyticsAdminServiceClient();\n\n  // Calls listAccounts() method of the Google Analytics Admin API and prints\n  // the response for each account.\n  const [accounts] = await analyticsAdminClient.listAccounts();\n\n  console.log('Accounts:');\n  accounts.forEach(account => {\n    console.log(account);\n  });\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\nprocess.on('unhandledRejection', err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n```\n\n----------------------------------------\n\nTITLE: Update Project Settings - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example showing how to update project settings in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.update_project_settings.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Agent Validation Results in Dialogflow CX\nDESCRIPTION: Sample script to retrieve validation results for a Dialogflow CX agent. Allows checking the validation status and potential configuration issues for an agent.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nagents.get_agent_validation_result.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This snippet illustrates how to lint the code and potentially fix any linting issues using npm. Linting helps maintain code style consistency and identify potential errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run fix\"\n```\n\n----------------------------------------\n\nTITLE: Delete Endpoint using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `deleteEndpoint` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for deleting an endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_endpoint.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Managed Kafka Connector in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a connector from a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.delete_connector.js\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Text-to-Speech Client - Node.js\nDESCRIPTION: This snippet demonstrates how to use the Google Cloud Text-to-Speech client library to synthesize speech from text. It creates a client, constructs a synthesis request, and writes the output audio to a file. Ensure necessary libraries are imported and authentication is set up before running the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst textToSpeech = require('@google-cloud/text-to-speech');\n\n// Import other required libraries\nconst fs = require('fs');\nconst util = require('util');\n// Creates a client\nconst client = new textToSpeech.TextToSpeechClient();\nasync function quickStart() {\n  // The text to synthesize\n  const text = 'hello, world!';\n\n  // Construct the request\n  const request = {\n    input: {text: text},\n    // Select the language and SSML voice gender (optional)\n    voice: {languageCode: 'en-US', ssmlGender: 'NEUTRAL'},\n    // select the type of audio encoding\n    audioConfig: {audioEncoding: 'MP3'},\n  };\n\n  // Performs the text-to-speech request\n  const [response] = await client.synthesizeSpeech(request);\n  // Write the binary audio content to a local file\n  const writeFile = util.promisify(fs.writeFile);\n  await writeFile('output.mp3', response.audioContent, 'binary');\n  console.log('Audio content written to file: output.mp3');\n}\nquickStart();\n```\n\n----------------------------------------\n\nTITLE: Marking Breaking Changes in Markdown\nDESCRIPTION: This snippet shows how breaking changes are highlighted in the changelog using Markdown. It uses a warning emoji and uppercase text to draw attention to significant changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Recommendation in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to get a specific recommendation using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the get_recommendation method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.get_recommendation.js\n```\n\n----------------------------------------\n\nTITLE: Updating Secrets in Google Cloud with Node.js\nDESCRIPTION: This Node.js snippet updates a secret's metadata or payload in the Google Cloud Secret Manager, depending on parameters provided. It requires the `@google-cloud/secret-manager` library and access to a Google Cloud project. Essential parameters include secret ID and the desired updates, facilitating secret maintenance and management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.update_secret.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Service with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script illustrates how to create a service within the App Hub using the Node.js client SDK. Ensure all prerequisites for using Node.js and the Google Cloud libraries are met before executing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.create_service.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Merchant API in Node.js\nDESCRIPTION: This quickstart sample demonstrates basic usage of the Merchant API with Node.js. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB Instance in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete an AlloyDB instance using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Updating AlloyDB Cluster - Node.js\nDESCRIPTION: Sample code showing how to update properties of an existing AlloyDB cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.update_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Batch File Annotation with Google Cloud Vision API in Node.js\nDESCRIPTION: This code example demonstrates how to perform batch file annotation using the Google Cloud Vision API. It uses the image_annotator.batch_annotate_files method for processing multiple files synchronously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/image_annotator.batch_annotate_files.js\n```\n\n----------------------------------------\n\nTITLE: Updating Certificate Maps with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This snippet illustrates how to update certificate maps using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.update_certificate_map.js\n```\n\n----------------------------------------\n\nTITLE: Installing a specific version\nDESCRIPTION: Shows how to install a specific version of the package using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/phishing-protection@5.0.1\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud SQL Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud SQL Admin API client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/sql\n```\n\n----------------------------------------\n\nTITLE: Updating an Environment in Node.js\nDESCRIPTION: This snippet updates the details of an existing Dialogflow environment. Useful for modifying the configuration based on new requirements or fixes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_91\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Update environment\nconst {EnvironmentsClient} = require('@google-cloud/dialogflow');\nconst client = new EnvironmentsClient();\n\nasync function updateEnvironment() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.updateEnvironment(request);\n  console.log(response);\n}\nupdateEnvironment();\n```\n\n----------------------------------------\n\nTITLE: Pausing a Cloud Scheduler Job in Node.js\nDESCRIPTION: This snippet shows how to pause an active job in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.pause_job.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Data Taxonomy with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This code example shows how to delete a data taxonomy using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the delete_data_taxonomy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.delete_data_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which identifies and potentially fixes code style issues. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using VM Migration API - Add Group Migration\nDESCRIPTION: Example code showing how to add a group migration in the VM Migration API using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.add_group_migration.js\n```\n\n----------------------------------------\n\nTITLE: Using SQL Translation Service to Translate Queries in BigQuery Migration API\nDESCRIPTION: Demonstrates how to translate SQL queries from one dialect to another using the BigQuery Migration API v2alpha. This sample shows the command to execute the Node.js script that performs SQL translation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-migration/samples/generated/v2alpha/sql_translation_service.translate_query.js\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: Add JSON Files to TSConfig Templates\nDESCRIPTION: This bug fix ensures that JSON files are properly included in the TypeScript configuration templates. This is important for projects that rely on JSON files for configuration or data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\nAdd json files to tsconfig templates ([#1692](https://github.com/googleapis/google-cloud-node/issues/1692)) (ba6be1d) ([7a23322](https://github.com/googleapis/google-cloud-node/commit/7a23322530b610eec2fe4c18fe1854048f31c811))\n```\n\n----------------------------------------\n\nTITLE: Installing Advisory Notifications API Client Library\nDESCRIPTION: Command to install the Advisory Notifications API client library via npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/advisorynotifications\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Generator in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve details of a specific generator in Dialogflow CX. It utilizes the generators.get_generator method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/generators.get_generator.js\n```\n\n----------------------------------------\n\nTITLE: Updating Security Center Service in Javascript\nDESCRIPTION: This snippet shows how to update a Security Center Service using the google-cloud-securitycentermanagement library. The code resides within the specified GitHub repository and is executable in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center_management.update_security_center_service\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating DNS Authorizations with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This sample shows how to update DNS authorizations using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.update_dns_authorization.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run linting checks and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the code linter which may also automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using Document Service to Create Document in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Document Service to create a document using the Document AI Warehouse API in Node.js. It references the source code file for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.create_document.js\n```\n\n----------------------------------------\n\nTITLE: Add IoT Token Service sample code in Node.js\nDESCRIPTION: Adds sample code for the cloud-iot-token-service generateAccessToken API. This enhancement introduces a new feature or functionality to the existing Google Cloud IoT Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"* Add sample codes for cloud-iot-token-service generateAccessToken API ([#502](https://www.github.com/googleapis/nodejs-iot/issues/502)) ([21ef5c7](https://www.github.com/googleapis/nodejs-iot/commit/21ef5c7a264c01c12675e623e7c160b2e33c8072))\"\n```\n\n----------------------------------------\n\nTITLE: Listing Products with Google Merchant API in Node.js\nDESCRIPTION: Example code demonstrating how to use the Google Merchant API Node.js client to list products for a merchant account. The code instantiates a ProductsServiceClient and calls the listProductsAsync method to retrieve product data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The account to list processed products for.\n *  Format: accounts/{account}\n */\n// const parent = 'accounts/abc123'\n/**\n *  The maximum number of products to return. The service may return fewer than\n *  this value.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n *  If unspecified, the maximum number of products will be returned.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListProducts` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListProducts` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Products library\nconst {ProductsServiceClient} = require('@google-shopping/products').v1beta;\n\n// Instantiates a client\nconst productsClient = new ProductsServiceClient();\n\nasync function callListProducts() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = productsClient.listProductsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListProducts();\n```\n\n----------------------------------------\n\nTITLE: Updating Notebook Instances in Node.js\nDESCRIPTION: This snippet details how to update the configuration of a notebook instance using the Google Cloud Notebooks Node.js client. Users must provide the instance ID and the new configuration details to update. Successful execution confirms the update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to update a notebook instance\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\n\nconst client = new NotebookServiceClient();\n\nasync function updateInstance(instanceId, updateMask) {\n    const request = {\n        instance: {\n            name: `projects/my-project/locations/us-central1-a/instances/${instanceId}`,\n            ...updateMask\n        },\n        updateMask: 'label'\n    };\n    const [operation] = await client.updateInstance(request);\n    await operation.promise();\n    console.log(`Instance ${instanceId} updated.`);\n}\nupdateInstance('my-notebook-instance', {labels: {newLabel: 'newValue'}});\n```\n\n----------------------------------------\n\nTITLE: Auto-generation Notice in Markdown Comments\nDESCRIPTION: Comments indicating that the README file is auto-generated and should not be manually edited. Changes made directly to this file will be lost upon regeneration using synthtool.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[//]: # \"This README.md file is auto-generated, all changes to this file will be lost.\"\n[//]: # \"To regenerate it, use `python -m synthtool`.\"\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center get_asset script in Node.js\nDESCRIPTION: Example command to execute the Migration Center get_asset sample script. This script demonstrates how to retrieve information about an asset using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_asset.js\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB User in Node.js\nDESCRIPTION: This code snippet shows how to delete an AlloyDB user using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.delete_user.js\n```\n\n----------------------------------------\n\nTITLE: Installing Essential Contacts API Client in Node.js\nDESCRIPTION: Command to install the Essential Contacts API client library using npm. Ensures that the library is available in your Node.js environment. No special permissions are required other than npm and internet access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/essential-contacts\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs integration tests specifically designed for samples within the project.  These tests verify that the samples work correctly with the Google Cloud services they interact with.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Node.js Version Compatibility Update\nDESCRIPTION: Breaking change to drop support for Node.js v8 and introduce support for Node.js v10+. This update enables use of modern JavaScript features like async iterators.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Minimum Node.js version set to v10\n```\n\n----------------------------------------\n\nTITLE: Get Customer using Cloud Controls Partner Core API (v1beta)\nDESCRIPTION: Sample code demonstrating how to retrieve customer details using the Cloud Controls Partner Core API v1beta endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/generated/v1beta/cloud_controls_partner_core.get_customer.js\n```\n\n----------------------------------------\n\nTITLE: Managing Google Analytics Beta Features\nDESCRIPTION: Methods for managing beta features of Google Analytics including user data collection, custom dimensions/metrics, and conversion events. These methods are part of the v1beta version of the Analytics Admin API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_37\n\n\n\n----------------------------------------\n\nTITLE: Group Security Center Findings\nDESCRIPTION: Groups security findings based on specified criteria using the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.group_findings.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up a Service Project Attachment - Node.js\nDESCRIPTION: This snippet looks up a specific service project attachment in App Hub, helping in the management of project-service relationships.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_service_project_attachment.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_service_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: List Conference Recordings using Google Meet API\nDESCRIPTION: Sample code showing how to retrieve recordings from a conference using the Conference Records Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.list_recordings.js\n```\n\n----------------------------------------\n\nTITLE: Listing Memorystore Instances using Node.js Client\nDESCRIPTION: Example code demonstrating how to list Memorystore instances using the Node.js client library. The code initializes a Memorystore client and performs an asynchronous operation to list instances with optional filtering and pagination parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent to list instances from.\n *  Format: projects/{project}/locations/{location}\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Expression for filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Sort results by a defined order. Supported values: \"name\",\n *  \"create_time\".\n */\n// const orderBy = 'abc123'\n\n// Imports the Memorystore library\nconst {MemorystoreClient} = require('@google-cloud/memorystore').v1;\n\n// Instantiates a client\nconst memorystoreClient = new MemorystoreClient();\n\nasync function callListInstances() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = memorystoreClient.listInstancesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListInstances();\n```\n\n----------------------------------------\n\nTITLE: Installing npm dependencies\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file in the project directory to determine the required packages and their versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Using Migration Service to List Migration Workflows in BigQuery Migration API\nDESCRIPTION: Demonstrates how to list migration workflows using the BigQuery Migration API v2alpha. This sample shows the command to execute the Node.js script that lists migration workflows.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-migration/samples/generated/v2alpha/migration_service.list_migration_workflows.js\n```\n\n----------------------------------------\n\nTITLE: Installing Managed Kafka Client with npm\nDESCRIPTION: This command installs the Google Cloud Managed Kafka client library for Node.js using npm. It allows you to interact with the Managed Service for Apache Kafka API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/managedkafka\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Connectors Node.js Client\nDESCRIPTION: Command to install the Google Cloud Connectors client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/connectors\n```\n\n----------------------------------------\n\nTITLE: Listing Session Entity Types using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to list session entity types using the Dialogflow API. It uses the session_entity_types.list_session_entity_types method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_75\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/session_entity_types.list_session_entity_types.js\n```\n\n----------------------------------------\n\nTITLE: Updating Entity Type in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Updates an existing entity type in Dialogflow V2beta1. This involves calling the `update_entity_type` method, likely part of a client library, to modify the details of an entity type. The sample probably covers constructing the request with the updated entity type information and handling the API response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Version 6.0.0 Release Notes\nDESCRIPTION: Breaking change to upgrade to Node 18. Adds request/response debug logging to gapics and updates templates to gax 5.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [6.0.0](https://github.com/googleapis/google-cloud-node/compare/billing-budgets-v5.4.0...billing-budgets-v6.0.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics, update templates to gax 5  ([32fff6f](https://github.com/googleapis/google-cloud-node/commit/32fff6f5e36a33729591a9ba531cc5de07f046cc))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: List Messages - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to list messages within a Google Chat space using Node.js. The code uses the `list_messages` method of the `Chat_service` to retrieve a collection of messages from a specific space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Delete Synonym Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to delete a synonym set using the SynonymSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/synonym_set_service.delete_synonym_set.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Get Contact\nDESCRIPTION: Sample code for retrieving a specific contact in the Essential Contacts API using Node.js. Shows how to fetch contact details through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.get_contact.js\n```\n\n----------------------------------------\n\nTITLE: Executing Reference Image Deletion Node.js Script\nDESCRIPTION: This command runs a Node.js script to delete a reference image using Google Cloud Vision API. Prerequisites include Node.js and valid reference image ID, with expected output being confirmation of deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.delete_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Workload Move with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to analyze a workload move using the Assured Workloads service in Node.js. It requires the `@google-cloud/assuredworkloads` package and is executed directly from the command line using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1beta1/assured_workloads_service.analyze_workload_move.js`\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing reCAPTCHA Keys Using Node.js Client\nDESCRIPTION: Example code demonstrating how to use the reCAPTCHA Enterprise client library to list API keys. The code initializes the client and makes an asynchronous request to fetch keys with optional pagination parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The name of the project that contains the keys that will be\n *  listed, in the format \"projects/{project}\".\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of keys to return. Default is 10. Max limit is\n *  1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. The next_page_token value returned from a previous.\n *  ListKeysRequest, if any.\n */\n// const pageToken = 'abc123'\n\n// Imports the Recaptchaenterprise library\nconst {RecaptchaEnterpriseServiceClient} =\n  // eslint-disable-next-line node/no-missing-require\n  require('@google-cloud/recaptcha-enterprise').v1;\n\n// Instantiates a client\nconst recaptchaenterpriseClient = new RecaptchaEnterpriseServiceClient();\n\nasync function callListKeys() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await recaptchaenterpriseClient.listKeysAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListKeys();\n```\n\n----------------------------------------\n\nTITLE: Getting Recommendations with Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve a specific recommendation using the Recommender API. Requires Google Cloud project setup and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.get_recommendation.js\n```\n\n----------------------------------------\n\nTITLE: Running Job Service Sample\nDESCRIPTION: Command to execute the job service batch operations sample code\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-talent/samples/generated/v4/job_service.batch_create_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Job - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This sample demonstrates how to create a new job in Google Cloud Dataflow using Node.js, specifying configurations and parameters crucial for job execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to create a new job goes here.\n```\n\n----------------------------------------\n\nTITLE: Listing Interconnects - Google Cloud Node.js\nDESCRIPTION: This script lists all interconnects in the Google Cloud Edge Network. No parameters are needed, and it outputs the details of all interconnects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_interconnects.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all interconnects\nasync function listInterconnects() {\n  const [interconnects] = await client.listInterconnects({});\n  console.log('Interconnects:', interconnects);\n}\n\nlistInterconnects();\n```\n\n----------------------------------------\n\nTITLE: Initial Generation of Node.js AI Platform Library\nDESCRIPTION: Marks the initial release and generation of the Google Cloud AI Platform Node.js client library. This is version 1.0.0, released on November 10, 2020, and includes breaking changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* initial generation ([182128b](https://www.github.com/googleapis/nodejs-ai-platform/commit/182128bfa593c787e2f0970ba224a68595b45971))\n* initial generation of library ([#4](https://www.github.com/googleapis/nodejs-ai-platform/issues/4)) ([1b8db30](https://www.github.com/googleapis/nodejs-ai-platform/commit/1b8db30e243aac5d9dab74b00431c81dbf412a66))\n```\n\n----------------------------------------\n\nTITLE: Creating Backup for Cloud Filestore\nDESCRIPTION: This sample demonstrates how to create a backup in Google Cloud Filestore using the Node.js client library. It requires the Google Cloud SDK and a configured project with Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function createBackup() {\n    const response = await client.createBackup(...);\n    console.log(response);\n}\ncreateBackup();\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Libraries via npm\nDESCRIPTION: Demonstrates how to install client libraries compatible with legacy Node.js versions using npm dist-tags. This allows users to utilize older versions of Node.js by installing the corresponding library version via `npm install`. The example provided installs the client library compatible with Node.js 8.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/channel@legacy-8\"\n```\n\n----------------------------------------\n\nTITLE: Listing Channels with Google Cloud Live Stream API\nDESCRIPTION: Example code that demonstrates how to use the LivestreamServiceClient to list channels. The code instantiates a client and makes an asynchronous request to list channels with optional parameters for filtering and pagination.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent location for the resource, in the form of:\n *  `projects/{project}/locations/{location}`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of items to return. If unspecified, server\n *  will pick an appropriate default. Server may return fewer items than\n *  requested. A caller should only rely on response's\n *  next_page_token google.cloud.video.livestream.v1.ListChannelsResponse.next_page_token  to\n *  determine if there are more items left to be queried.\n */\n// const pageSize = 1234\n/**\n *  The next_page_token value returned from a previous List request, if any.\n */\n// const pageToken = 'abc123'\n/**\n *  The filter to apply to list results.\n */\n// const filter = 'abc123'\n/**\n *  Specifies the ordering of results following syntax at\n *  https://cloud.google.com/apis/design/design_patterns#sorting_order.\n */\n// const orderBy = 'abc123'\n\n// Imports the Livestream library\nconst {LivestreamServiceClient} = require('@google-cloud/livestream').v1;\n\n// Instantiates a client\nconst livestreamClient = new LivestreamServiceClient();\n\nasync function callListChannels() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await livestreamClient.listChannelsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListChannels();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Dialogflow Agent using Node.js\nDESCRIPTION: This snippet allows you to delete a Dialogflow agent. It requires the Google Cloud Dialogflow client library. Make sure to pass the correct agent ID as a parameter for successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n'node packages/google-cloud-dialogflow/samples/generated/v2/agents.delete_agent.js'\n```\n\n----------------------------------------\n\nTITLE: Fetching Certificate Authority CSR with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet illustrates how to fetch a Certificate Authority's Certificate Signing Request (CSR) using the Google Cloud Private CA Service API. It utilizes the CertificateAuthorityService client to invoke the fetchCertificateAuthorityCsr method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.fetch_certificate_authority_csr.js\n```\n\n----------------------------------------\n\nTITLE: Looking Up a Discovered Service - Node.js\nDESCRIPTION: This snippet performs a lookup for a specific discovered service in App Hub based on its identifier, crucial for retrieving service details post-discovery.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_discovered_service.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.lookup_discovered_service.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library with npm\nDESCRIPTION: Example command for installing a legacy version of the Google Cloud Functions client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @google-cloud/functions@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Plans for GKE - Node.js\nDESCRIPTION: This snippet shows how to list all backup plans in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and does not necessarily need any parameters, but may include filters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// List Backup Plans\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.listBackupPlans(request)\n  .then(response => {\n    console.log('Backup plans:', response);\n  })\n  .catch(err => {\n    console.error('Error listing backup plans:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service Client Library (Node.js)\nDESCRIPTION: This code snippet demonstrates how to use the Certificate Authority Service client library in Node.js. It imports the library, creates a client, and defines an async function to list certificates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {\n  CertificateAuthorityServiceClient,\n} = require('@google-cloud/security-private-ca');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new CertificateAuthorityServiceClient();\n\nasync function listCertificates() {\n  const res = await client.listCertificates({\n    parent: `projects/${projectId}/locations/${location}/caPools/${name}`,\n  });\n  return res;\n}\n\nlistCertificates();\n```\n\n----------------------------------------\n\nTITLE: Canceling a Job with Google Cloud Batch Service in Node.js\nDESCRIPTION: This script demonstrates how to cancel a specific job using the Google Cloud Batch service in Node.js. It requires setting up the Google Cloud Node.js client library beforehand and expects the job's identifier as input to cancel the job on Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1/batch_service.cancel_job.js\"\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-batch/samples/generated/v1alpha/batch_service.cancel_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Secret with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This snippet illustrates how to retrieve metadata about a secret using the Google Cloud Secret Manager service (v1beta2). It uses the get_secret method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.get_secret.js\n```\n\n----------------------------------------\n\nTITLE: Executing Products Listing Node.js Script\nDESCRIPTION: Command to run a Node.js script that lists all products via Google Cloud Vision API. Requires Node.js, with no specific input, outputting a list of existing products.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.list_products.js\n```\n\n----------------------------------------\n\nTITLE: Issue References in Markdown\nDESCRIPTION: Markdown links to GitHub issues in the repository\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n([#6187](https://github.com/googleapis/google-cloud-node/issues/6187))\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in Node.js Vision Library\nDESCRIPTION: Updates the redis dependency to version 4.3.0 and changes the import of 'long' to use require instead of import.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Update redis dependency\nconst redis = require('redis'); // Now using version ~4.3.0\n\n// Change long import\nconst Long = require('long');\n```\n\n----------------------------------------\n\nTITLE: Managing reCAPTCHA Enterprise Keys\nDESCRIPTION: Code sample showing key management operations including creation, deletion, and updating of reCAPTCHA Enterprise keys.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recaptchaenterprise/samples/generated/v1/recaptcha_enterprise_service.create_key.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream Node.js Client to List Connection Profiles\nDESCRIPTION: Example code demonstrating how to use the Datastream client library to list connection profiles. It includes importing the library, instantiating a client, constructing a request, and iterating through the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent that owns the collection of connection profiles.\n */\n// const parent = 'abc123'\n/**\n *  Maximum number of connection profiles to return.\n *  If unspecified, at most 50 connection profiles will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Page token received from a previous `ListConnectionProfiles` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListConnectionProfiles`\n *  must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter request.\n */\n// const filter = 'abc123'\n/**\n *  Order by fields for the result.\n */\n// const orderBy = 'abc123'\n\n// Imports the Datastream library\nconst {DatastreamClient} = require('@google-cloud/datastream').v1;\n\n// Instantiates a client\nconst datastreamClient = new DatastreamClient();\n\nasync function listConnectionProfiles() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await datastreamClient.listConnectionProfilesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\nlistConnectionProfiles();\n```\n\n----------------------------------------\n\nTITLE: Getting VOD Session in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to retrieve a VOD session using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_vod_session.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fix: Deps: google-gax v2.17.0 with mTLS - Node.js\nDESCRIPTION: This code snippet updates the `google-gax` dependency to version 2.17.0 and enables mTLS (mutual Transport Layer Security). mTLS enhances security by requiring both the client and server to authenticate each other. It depends on the google-gax library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"5c6c68cb54aa684a4d2f33cedc6565ef2f17e153\"\n```\n\n----------------------------------------\n\nTITLE: Linting Code for Google Cloud Node.js Libraries\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js libraries project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run before testing or development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Resuming Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to resume a model using the Google Cloud Retail API. It utilizes the resumeModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.resume_model.js\n```\n\n----------------------------------------\n\nTITLE: Getting VPN Connection - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This snippet retrieves a VPN connection from Google Cloud Edge Container API. Dependencies include the Node.js runtime and necessary Google Cloud libraries for authentication and access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to get a VPN connection\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function getVpnConnection(vpnConnectionId) {\n    const [vpnConnection] = await client.getVpnConnection(vpnConnectionId);\n    console.log('VPN Connection:', vpnConnection);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Installing the Places Insights API Node.js Client Library\nDESCRIPTION: Command to install the Google Maps Places Insights API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-areainsights/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/areainsights\n```\n\n----------------------------------------\n\nTITLE: Deleting Connection Profile in Node.js\nDESCRIPTION: Delete a specified connection profile using the Datastream API in a Node.js application. Proper authentication is necessary alongside identification of the profile to be removed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.delete_connection_profile.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Version Comparison in Markdown\nDESCRIPTION: This snippet shows how version comparisons are formatted in the changelog using Markdown syntax. It includes a link to the GitHub comparison view between two versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.5.1](https://github.com/googleapis/google-cloud-node/compare/securesourcemanager-v0.5.0...securesourcemanager-v0.5.1) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Creating Host Project Registration in API Hub using Node.js\nDESCRIPTION: Sample code showing how to register a new host project with API Hub service using the create_host_project_registration method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/host_project_registration_service.create_host_project_registration.js\n```\n\n----------------------------------------\n\nTITLE: Listing Regional Inventories with Merchant API in Node.js\nDESCRIPTION: This code sample illustrates how to list regional inventories using the Regional Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/regional_inventory_service.list_regional_inventories.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Apigee Connect - JavaScript\nDESCRIPTION: This quickstart sample code provides a minimal application setup for using the Apigee Connect API with Node.js. It requires the Google Cloud client library and correct project setup in Google Cloud. The input consists of valid project details, and the output will detail the successful execution of basic API calls.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-apigeeconnect/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Using Network Management API Client in Node.js\nDESCRIPTION: Example showing how to initialize the ReachabilityServiceClient and list connectivity tests for a project. This demonstrates basic usage of the client library to interact with the Network Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {\n  ReachabilityServiceClient,\n} = require('@google-cloud/network-management');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new ReachabilityServiceClient();\n\nasync function listConnectivityTests() {\n  const tests = await client.listConnectivityTests({\n    parent: `projects/${projectId}/locations/global`,\n  });\n  console.info(tests);\n}\nlistConnectivityTests();\n```\n\n----------------------------------------\n\nTITLE: Using Network_services to create an endpoint policy in Node.js\nDESCRIPTION: Example for creating an endpoint policy using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the create_endpoint_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/network_services.create_endpoint_policy.js\n```\n\n----------------------------------------\n\nTITLE: Searching Resources with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to search resources using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.search_resources.js\n```\n\n----------------------------------------\n\nTITLE: Usage Instructions for Data Labeling Samples\nDESCRIPTION: Installation and setup instructions for running the data labeling samples. Required steps include following the client library setup and installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Deleting a Dataset in AutoML with Node.js\nDESCRIPTION: This snippet provides the functionality to delete a dataset in AutoML using Node.js. It requires confirmation of the dataset ID to be deleted and provides feedback upon successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function deleteDataset(projectId, computeRegion, datasetId) {\n  const request = {\n    name: client.datasetPath(projectId, computeRegion, datasetId),\n  };\n  const [operation] = await client.deleteDataset(request);\n  await operation.promise();\n  console.log(`Dataset deleted: ${datasetId}`);\n}\n\ndeleteDataset('your-project-id', 'us-central1', 'your-dataset-id');\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Group in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet provides functionality for deleting an entry group from the Google Cloud Dataplex. Necessary dependencies include the Google Cloud client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for deleting an entry group\n\n```\n\n----------------------------------------\n\nTITLE: Creating an Intent in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates how to create an intent in Dialogflow CX using the Node.js client library. It utilizes the `Intents.create_intent` method. Make sure to initialize and authenticate the Dialogflow CX client before running this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Intents_CreateIntent_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callCreateIntent() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [response] = await client.createIntent(request);\n  console.log(response);\n}\n\ncallCreateIntent();\n// [END dialogflow_cx_v3_generated_Intents_CreateIntent_async]\n```\n\n----------------------------------------\n\nTITLE: Listing OS Policy Assignment Revisions with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet demonstrates how to list OS policy assignment revisions using the Google Cloud OS Config Zonal Service. It requires the google-cloud-osconfig package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1/os_config_zonal_service.list_o_s_policy_assignment_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Listing Resource Allowances in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet provides a list of available resource allowances in the batch service. Useful for understanding the resources at your disposal. The snippet requires the Google Cloud Client library and proper service account permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to list resource allowances\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function listResourceAllowances() {\\n  const response = await client.listResourceAllowances();\\n  console.log(response);\\n}\\nlistResourceAllowances();\"\n```\n\n----------------------------------------\n\nTITLE: Listing Zones - Google Cloud Node.js\nDESCRIPTION: This script lists all zones in the Google Cloud Edge Network without the need for input parameters, outputting the details of each zone.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_zones.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all zones\nasync function listZones() {\n  const [zones] = await client.listZones({});\n  console.log('Zones:', zones);\n}\n\nlistZones();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Connection with Connectors API in Node.js\nDESCRIPTION: This snippet shows how to delete an existing connection using the Connectors API. It uses the deleteConnection method of the Connectors client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.delete_connection.js\n```\n\n----------------------------------------\n\nTITLE: Project Setup Commands - Node.js\nDESCRIPTION: Commands for setting up the project environment, including navigating to the samples directory and installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project in Bash\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting and Auto-fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to lint JavaScript code and automatically fix style issues where possible. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Dataform Git Operations: Push Commits\nDESCRIPTION: Sample script illustrating how to push Git commits using the Dataform API in Node.js. Enables committing and synchronizing changes to a repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Installing the Cloud TPU Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud TPU Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/tpu\n```\n\n----------------------------------------\n\nTITLE: Listing Providers with Eventarc API in Node.js\nDESCRIPTION: This example illustrates how to list providers using the Eventarc API. It is included in the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.list_providers.js\n```\n\n----------------------------------------\n\nTITLE: Creating Client Gateways: Node.js\nDESCRIPTION: This snippet demonstrates how to create a new client gateway using the BeyondCorp API. It requires the Node.js environment and appropriate packages from the google-cloud-beyondcorp-clientgateways library. The input includes necessary parameters to define the client gateway, while outputs include the created gateway's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-clientgateways/samples/generated/v1/client_gateways_service.create_client_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Listing Reservations with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to list reservations using the BigQuery Reservation Service API in Node.js. This allows you to view all reservations in a project or specific location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.list_reservations.js\n```\n\n----------------------------------------\n\nTITLE: Version 0.3.0 Changelog Entry\nDESCRIPTION: Changelog entry documenting CMEK support addition and bug fixes related to promises and operations return types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/parametermanager-v0.2.0...parametermanager-v0.3.0) (2025-03-21)\n\n### Features\n\n* [parametermanager] add CMEK support ([#6196](https://github.com/googleapis/google-cloud-node/issues/6196)) ([83d590e](https://github.com/googleapis/google-cloud-node/commit/83d590ec19b702c63850edccac9bc7a4a51f2c8d))\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Updating Volume in Bare Metal Solution with Node.js\nDESCRIPTION: This example shows how to update a volume in Google Cloud Bare Metal Solution using Node.js. It uses the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.update_volume.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Taxonomies in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to export taxonomies using the Google Cloud's Data Catalog service. The google-cloud-datacatalog package is necessary for this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerSerializationClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerSerializationClient();\n\nasync function exportTaxonomies() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n  };\n  const [response] = await client.exportTaxonomies(request);\n  console.log('Taxonomies exported:', response);\n}\nexportTaxonomies();\n```\n\n----------------------------------------\n\nTITLE: Listing AWS Node Pools with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to list all node pools in an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows how to enumerate worker node pools in a specific AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.list_aws_node_pools.js\n```\n\n----------------------------------------\n\nTITLE: Using Data Labeling Service to get datasets in Node.js\nDESCRIPTION: This code demonstrates how to list all available datasets using the Google Cloud Data Labeling Service client. It shows the basic pattern for initializing the client and making a request to the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnode quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file in the project directory to determine which packages to install.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Initializing Zone - Google Cloud Node.js\nDESCRIPTION: This script initializes a zone within the Google Cloud Edge Network. This setup undergoes several prerequisites and requires the zone ID. Outputs the status of the initialization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.initialize_zone.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Initialize the zone\nasync function initializeZone(id) {\n  const request = {zone: id};\n  const [operation] = await client.createZone(request);\n  console.log('Initializing zone...', operation);\n}\n\ninitializeZone('your-zone-id');\n```\n\n----------------------------------------\n\nTITLE: Undelete Certificate Authority using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to undelete a Certificate Authority using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.undelete_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests with npm for Node.js\nDESCRIPTION: Provides commands to install dependencies, run unit, integration, and system tests, and to lint the code for a Node.js project. Assumes npm is installed and commands are run in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm test\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run samples-test\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run system-test\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Removing Catalog Attribute with Google Cloud Retail API in Node.js\nDESCRIPTION: This code snippet shows how to remove a catalog attribute using the Google Cloud Retail API. It utilizes the CatalogService client to delete a specific attribute from a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/catalog_service.remove_catalog_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Connection with Connectors API in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific connection using the Connectors API. It uses the getConnection method of the Connectors client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.get_connection.js\n```\n\n----------------------------------------\n\nTITLE: Using Config.create_deployment in Node.js\nDESCRIPTION: Demonstrates how to create a deployment using the Infrastructure Manager API Config client in Node.js. This sample shows the basic usage pattern for the create_deployment method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.create_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Manage Backup Runs - Google Cloud SQL Node.js Beta\nDESCRIPTION: Beta version examples for managing backup runs including delete, get, insert and list operations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_backup_runs_service.delete.js\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_backup_runs_service.get.js\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_backup_runs_service.insert.js\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_backup_runs_service.list.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run various test suites for the project including unit tests, sample integration tests, and system tests. These should be executed to ensure code quality before submitting patches.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Firebase Link - Google Analytics Admin Service - JavaScript\nDESCRIPTION: The JavaScript snippet displays how to remove a Firebase link in Google Analytics using Admin Service. Dependencies include Google Cloud Node.js client library. Input required is the ID of the Firebase link for successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteFirebaseLink(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Backup Plan using Backup for GKE API in Node.js\nDESCRIPTION: This sample demonstrates how to delete a backup plan using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.delete_backup_plan.js\n```\n\n----------------------------------------\n\nTITLE: Updating EKM Configuration with Ekm_service in Node.js\nDESCRIPTION: This snippet demonstrates how to update EKM configuration using the google-cloud-kms library in a Node.js environment. It provides the command to run the sample which updates the existing EKM configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/ekm_service.update_ekm_config.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Network Peering in VMware Engine (Node.js)\nDESCRIPTION: Example showing how to update network peering configurations in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_network_peering.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for BeyondCorp App Connectors in Node.js\nDESCRIPTION: Introductory sample script demonstrating basic usage of BeyondCorp App Connectors with the Google Cloud Node.js client library. Provides a starting point for developers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Automation Retrieval Sample in Node.js\nDESCRIPTION: This snippet describes how to execute the automation retrieval script using Node.js. Ensure Node.js is properly installed, and the sample scripts are accessible. The command fetches information on specified automation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_automation.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific flow in Dialogflow CX. It uses the flows.get_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.get_flow.js\n```\n\n----------------------------------------\n\nTITLE: Updating Dataplex Zone\nDESCRIPTION: Executes a script to update a zone in Dataplex through Node.js. Ensure Google Cloud project is configured and Node.js is available. Uses 'dataplex_service.update_zone.js' to apply zone changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_69\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.update_zone.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Definition with API Hub using Node.js\nDESCRIPTION: Running this Node.js command provides access to specific API definitions within the Google Cloud API Hub. The script is a crucial tool for those needing accurate and up-to-date definitions for API development and support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_definition.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates how to create a flow in Dialogflow CX using the Node.js client library. It utilizes the `Flows.create_flow` method to create a new flow within a specified agent and location.  The snippet assumes you have the necessary Dialogflow CX client library and credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_CreateFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callCreateFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [operation] = await client.createFlow(request);\n  const [response] = await operation.promise();\n  console.log(response);\n}\n\ncallCreateFlow();\n// [END dialogflow_cx_v3_generated_Flows_CreateFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Getting a Feed - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates how to retrieve a specific feed in the Google Cloud Asset API. Node.js and the Google Cloud SDK are required. Outputs will include details about the retrieved feed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code to get a feed\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Libraries\nDESCRIPTION: Commands for running different test suites in the Google Cloud Node.js libraries, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Secure Source Manager API Node.js Client\nDESCRIPTION: This snippet demonstrates how to use the Secure Source Manager API client library in Node.js. It includes importing the library, instantiating a client, and making an asynchronous request to list instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListInstancesRequest.\n */\n// const parent = 'abc123'\n/**\n *  Requested page size. Server may return fewer items than requested.\n *  If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter for filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Securesourcemanager library\nconst {SecureSourceManagerClient} =\n  require('@google-cloud/securesourcemanager').v1;\n\n// Instantiates a client\nconst securesourcemanagerClient = new SecureSourceManagerClient();\n\nasync function callListInstances() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = securesourcemanagerClient.listInstancesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListInstances();\n```\n\n----------------------------------------\n\nTITLE: Enabling Plugin with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to enable a plugin using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_plugin.enable_plugin.js\n```\n\n----------------------------------------\n\nTITLE: Adding debug logging\nDESCRIPTION: Mentions that request/response debug logging was added to GAPICs in version 5.0.0.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Debug logging added for requests and responses\n```\n\n----------------------------------------\n\nTITLE: Fetching Reference Image Information with Google Cloud Vision API in Node.js\nDESCRIPTION: This code snippet shows how to retrieve information about a reference image using the Google Cloud Vision API. It utilizes the product_search.get_reference_image method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.get_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet demonstrates how to install necessary dependencies for the Node.js environment to prepare for testing the Google Cloud library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting up Cloud IDS Project Dependencies\nDESCRIPTION: Initial setup instructions for installing dependencies and navigating to the correct directory before running samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\\nnpm install\\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Version 0.1.0 Initial Release Entry\nDESCRIPTION: Initial changelog entry documenting the first release with basic Parameter Manager API implementation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.0 (2025-02-03)\n\n### Features\n\n* Add initial files for google.cloud.parametermanager.v1 ([#6005](https://github.com/googleapis/google-cloud-node/issues/6005)) ([0927db0](https://github.com/googleapis/google-cloud-node/commit/0927db07d23a5d4ff619dc73acfb92a271aaf044))\n```\n\n----------------------------------------\n\nTITLE: Removing Additional V1 Folder from Node.js Cloud Shell Client\nDESCRIPTION: This code snippet represents a commit that removes an additional v1 folder from the Node.js Cloud Shell client library structure.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\nremove additional v1 folder ([7c5353c](https://www.github.com/googleapis/nodejs-cloud-shell/commit/7c5353c89630fb61ec3f264196766ecf51669e0e))\n```\n\n----------------------------------------\n\nTITLE: Managing Authorized Certificates in App Engine\nDESCRIPTION: Examples demonstrating certificate management operations including creation, deletion, retrieval, listing and updating of authorized certificates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Fixing google-gax Dependency (v2.17.1)\nDESCRIPTION: This commit addresses a bug by updating the google-gax dependency to version 2.17.1. This ensures compatibility and resolves potential issues related to the google-gax library within the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** google-gax v2.17.1 ([#66](https://www.github.com/googleapis/nodejs-managed-identities/issues/66)) ([6d78b78](https://www.github.com/googleapis/nodejs-managed-identities/commit/6d78b78f9c441006d8f61e711f3304c84b3aa5b6))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Get Job with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a job using the Dataflow API in Node.js. The command executes the `get_job.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.get_job.js`\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. Each command should be run separately in the project's root directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Configuring Firewall Policies\nDESCRIPTION: Code sample demonstrating firewall policy management including creation, deletion, updating and retrieval of policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recaptchaenterprise/samples/generated/v1/recaptcha_enterprise_service.create_firewall_policy.js\n```\n\n----------------------------------------\n\nTITLE: Listing Dataproc Metastore Services using Node.js Client\nDESCRIPTION: Example demonstrating how to initialize the Dataproc Metastore client and list available services for a specific project and location. The code shows importing the client library, creating a client instance, and making an API call to list services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {DataprocMetastoreClient} = require('@google-cloud/dataproc-metastore');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n// const location = 'my-location'\n\n// Creates a client\nconst client = new DataprocMetastoreClient();\n\nasync function listServices() {\n  const [services] = await client.listServices({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(services);\n}\nlistServices();\n```\n\n----------------------------------------\n\nTITLE: List Contact Center Conversations\nDESCRIPTION: Sample script for retrieving a list of conversations from the Contact Center Insights API. Demonstrates how to interact with the API to fetch conversation data using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample script for listing contact center conversations\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - Window Fetch Check\nDESCRIPTION: Added check to verify fetch API availability on window object before usage.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Add check for fetch on window object\nif (typeof window !== 'undefined' && window.fetch) {\n  // Use fetch\n}\n```\n\n----------------------------------------\n\nTITLE: Training a Flow in Dialogflow CX with Node.js\nDESCRIPTION: This JavaScript code snippet shows how to train a flow within Dialogflow CX using the Node.js client library.  It calls the `Flows.train_flow` method on a given flow to initiate the training process.  Make sure to initialize and authenticate the Dialogflow CX client before executing this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Flows_TrainFlow_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callTrainFlow() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'flows/my-flow',\n  };\n\n  // Make the request\n  const [operation] = await client.trainFlow(request);\n  await operation.promise();\n  console.log('Train request succeeded');\n}\n\ncallTrainFlow();\n// [END dialogflow_cx_v3_generated_Flows_TrainFlow_async]\n```\n\n----------------------------------------\n\nTITLE: Resetting an Instance using Bare Metal Solution API in Node.js\nDESCRIPTION: This code shows how to reset an instance using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.reset_instance.js\n```\n\n----------------------------------------\n\nTITLE: Using Developer Connect API Client Library in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Developer Connect API client library in Node.js. It includes importing the library, instantiating a client, and making a request to list connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListConnectionsRequest\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results\n */\n// const orderBy = 'abc123'\n\n// Imports the Developerconnect library\nconst {DeveloperConnectClient} = require('@google-cloud/developerconnect').v1;\n\n// Instantiates a client\nconst developerconnectClient = new DeveloperConnectClient({fallback: true});\n\nasync function callListConnections() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = developerconnectClient.listConnectionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListConnections();\n```\n\n----------------------------------------\n\nTITLE: Checking for fetch on window\nDESCRIPTION: This snippet checks if the 'fetch' API is available on the 'window' object.  This is likely to provide compatibility within browser environments and prevent errors where 'fetch' might not be globally defined.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * check for fetch on window ([#185](https://www.github.com/googleapis/nodejs-cloudbuild/issues/185)) ([115de71](https://www.github.com/googleapis/nodejs-cloudbuild/commit/115de7141262c119113759aee5ddc141d129b55d))\n */\n```\n\n----------------------------------------\n\nTITLE: Export SBOM with Container Analysis in Node.js\nDESCRIPTION: This sample demonstrates how to export a Software Bill of Materials (SBOM) using the Container Analysis API in Node.js. It requires the google-devtools-containeranalysis package and is executed via a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/container_analysis.export_s_b_o_m.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Rapid Migration Assessment Node.js Client\nDESCRIPTION: Command to install the Google Cloud Rapid Migration Assessment client library via npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/rapidmigrationassessment\n```\n\n----------------------------------------\n\nTITLE: Update @google-cloud/iot dependency to v2 in Node.js\nDESCRIPTION: Updates the @google-cloud/iot dependency to version 2 in the Google Cloud IoT Node.js library. This update incorporates breaking changes, bug fixes, or new features from the core IoT library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency @google-cloud/iot to v2 ([#326](https://www.github.com/googleapis/nodejs-iot/issues/326)) ([37a9faf](https://www.github.com/googleapis/nodejs-iot/commit/37a9faf5bece0d08b3205baa4e8e4505b07cbd73))\"\n```\n\n----------------------------------------\n\nTITLE: Using the Merchant API Node.js Client Library\nDESCRIPTION: Example of how to use the Merchant API client library to list conversion sources. This snippet demonstrates client initialization and making an API request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-conversions/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The merchant account who owns the collection of conversion\n *  sources. Format: accounts/{account}\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of conversion sources to return in a page.\n *  If no `page_size` is specified, `100` is used as the default value. The\n *  maximum value is `200`. Values above `200` will be coerced to `200`.\n *  Regardless of pagination, at most `200` conversion sources are returned\n *  in total.\n */\n// const pageSize = 1234\n/**\n *  Optional. Page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Show deleted (archived) option.\n */\n// const showDeleted = true\n\n// Imports the Conversions library\nconst {ConversionSourcesServiceClient} =\n  require('@google-shopping/conversions').v1beta;\n\n// Instantiates a client\nconst conversionsClient = new ConversionSourcesServiceClient();\n\nasync function callListConversionSources() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = conversionsClient.listConversionSourcesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListConversionSources();\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 2.0.0\nDESCRIPTION: Documents breaking change upgrade to Node 18 and feature addition of request/response debug logging\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.0](https://github.com/googleapis/google-cloud-node/compare/rapidmigrationassessment-v1.3.1...rapidmigrationassessment-v2.0.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([b99c5f8](https://github.com/googleapis/google-cloud-node/commit/b99c5f8269a8401c72e9c913971c7e90467209e2))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Using the Merchant API Client Library in Node.js\nDESCRIPTION: This snippet demonstrates how to use the Merchant API client library to list product reviews. It initializes the client, constructs a request, and iterates through the responses.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reviews/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The account to list product reviews for.\n *  Format: accounts/{account}\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of products to return. The service may return\n *  fewer than this value.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListProductReviews` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListProductReviews`\n *  must match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Reviews library\nconst {ProductReviewsServiceClient} =\n  require('@google-shopping/reviews').v1beta;\n\n// Instantiates a client\nconst reviewsClient = new ProductReviewsServiceClient();\n\nasync function callListProductReviews() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = reviewsClient.listProductReviewsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListProductReviews();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Media Translation Client Library - JavaScript\nDESCRIPTION: This snippet demonstrates how to install the Cloud Media Translation client library for Node.js using npm. It requires Node.js and npm to be installed on your machine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/media-translation\n```\n\n----------------------------------------\n\nTITLE: Getting Metadata Job with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet shows how to get a metadata job using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.get_metadata_job.js\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Stub of Library\nDESCRIPTION: This commit creates the initial stub of the Node.js Managed Identities library. This lays the groundwork for the library's functionality and provides a starting point for further development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: Markdown\nCODE:\n```\n* initial stub of library ([#3](https://www.github.com/googleapis/nodejs-managed-identities/issues/3)) ([d2a37f6](https://www.github.com/googleapis/nodejs-managed-identities/commit/d2a37f6431257415122312a77fff24c7f8963b61))\n```\n\n----------------------------------------\n\nTITLE: Adding Access Binding Methods in JavaScript\nDESCRIPTION: Adds new methods for creating, getting, updating, deleting, listing, and batch operations on access bindings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd `CreateAccessBinding`, `GetAccessBinding`, `UpdateAccessBinding`, `DeleteAccessBinding`, `ListAccessBindings`, `BatchCreateAccessBindings`, `BatchGetAccessBindings`, `BatchUpdateAccessBindings`, `BatchDeleteAccessBindings` m...\n```\n\n----------------------------------------\n\nTITLE: Exporting Intents Dialogflow CX with Node.js\nDESCRIPTION: This snippet shows how to export intents using the Dialogflow CX API in Node.js. It uses the `@google-cloud/dialogflow-cx` package. The script is run directly from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.export_intents.js`\n```\n\n----------------------------------------\n\nTITLE: Setup Instructions\nDESCRIPTION: Initial setup commands for running the Web Risk API samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to delete a load balancer traffic extension in Node.js\nDESCRIPTION: Example for deleting a load balancer traffic extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the delete_lb_traffic_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.delete_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Miscellaneous Chores in Markdown\nDESCRIPTION: This snippet demonstrates how miscellaneous chores are documented in the changelog using Markdown. It includes a bullet point with a link to the GitHub issue and commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Client Libraries\nDESCRIPTION: Command to run the linter which checks for code style issues and potentially fixes them automatically. This ensures code adheres to the project's coding standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Rollout Retrieval Sample in Node.js\nDESCRIPTION: The snippet allows executing a script that retrieves rollout information using Node.js. Before execution, ensure Node.js and the Cloud Deploy samples are available. The executed script returns rollout details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_rollout.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Client Library\nDESCRIPTION: This command runs the linter and potentially fixes any style issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Style Guide using Node.js\nDESCRIPTION: Sample code showing how to update an existing style guide using the update_style_guide method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/linting_service.update_style_guide.js\n```\n\n----------------------------------------\n\nTITLE: Getting OS Policy Assignment Report with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code sample illustrates how to get an OS policy assignment report using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.get_o_s_policy_assignment_report.js\n```\n\n----------------------------------------\n\nTITLE: Web Risk Service Beta Usage Commands\nDESCRIPTION: Command line usage instructions for running Web Risk service beta version sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-webrisk/samples/generated/v1beta1/web_risk_service_v1_beta1.compute_threat_list_diff.js\nnode packages/google-cloud-webrisk/samples/generated/v1beta1/web_risk_service_v1_beta1.search_hashes.js\nnode packages/google-cloud-webrisk/samples/generated/v1beta1/web_risk_service_v1_beta1.search_uris.js\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.create_device_registry in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `create_device_registry` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.create_device_registry.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet shows how to retrieve the IAM policy for a tag value using the Google Cloud Resource Manager API in Node.js. It uses the tag_values.get_iam_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Using Google Merchant API Client Library\nDESCRIPTION: Example demonstrating how to instantiate the client and list notification subscriptions. Shows core initialization and API call patterns with async/await.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The merchant account who owns the notification subscriptions.\n *  Format: `accounts/{account}`\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of notification subscriptions to return in a page.\n *  The default value for `page_size` is 100. The\n *  maximum value is `200`. Values above `200` will be coerced to `200`.\n */\n// const pageSize = 1234\n/**\n *  Token (if provided) to retrieve the subsequent page. All other parameters\n *  must match the original call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Notifications library\nconst {NotificationsApiServiceClient} =\n  require('@google-shopping/notifications').v1beta;\n\n// Instantiates a client\nconst notificationsClient = new NotificationsApiServiceClient();\n\nasync function callListNotificationSubscriptions() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    notificationsClient.listNotificationSubscriptionsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListNotificationSubscriptions();\n```\n\n----------------------------------------\n\nTITLE: Updating Crypto Key Version in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to update a crypto key version using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.update_crypto_key_version.js\n```\n\n----------------------------------------\n\nTITLE: Update Rule Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to update a rule set using the RuleSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/rule_set_service.update_rule_set.js\n```\n\n----------------------------------------\n\nTITLE: Updating CDN Key in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet updates a CDN key for the Google Cloud Video Stitcher service. It is used to change or modify CDN configurations required for serving VODs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function updateCdnKey(keyId, newCdnKey) {\n  const request = { keyId, cdnKey: newCdnKey };\n  const response = await client.updateCdnKey(request);\n  console.log('Updated CDN Key:', response);\n}\nupdateCdnKey('your-key-id', 'your-new-cdn-key');\n```\n\n----------------------------------------\n\nTITLE: Updating BigQuery Connection (Node.js)\nDESCRIPTION: This snippet shows how to update a BigQuery connection using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.update_connection.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Build: Set default branch to main - Node.js\nDESCRIPTION: This code snippet fixes the build configuration to set the default branch to `main`. This is a common update as projects migrate from using `master` to `main` as their primary branch. It relies on updating the project's configuration files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"6891351d06b48e6337567c4fb9e6f885204920e3\"\n```\n\n----------------------------------------\n\nTITLE: Listing Data Exchanges with Analytics Hub API in Node.js\nDESCRIPTION: Example of using the Analytics Hub API client library to list data exchanges. This snippet initializes the client and makes an async call to fetch data exchanges from a specified parent resource path.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent resource path of the DataExchanges.\n *  e.g. `projects/myproject/locations/US`.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of results to return in a single response page. Leverage\n *  the page tokens to iterate through the entire collection.\n */\n// const pageSize = 1234\n/**\n *  Page token, returned by a previous call, to request the next page of\n *  results.\n */\n// const pageToken = 'abc123'\n\n// Imports the Dataexchange library\nconst {AnalyticsHubServiceClient} =\n  require('@google-cloud/bigquery-data-exchange').v1beta1;\n\n// Instantiates a client\nconst dataexchangeClient = new AnalyticsHubServiceClient();\n\nasync function callListDataExchanges() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await dataexchangeClient.listDataExchangesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDataExchanges();\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Secret Manager in Node.js\nDESCRIPTION: This snippet shows how to test IAM permissions for a secret or secret version using the Google Cloud Secret Manager service. It utilizes the test_iam_permissions method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1/secret_manager_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Policy Tag in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates how to retrieve a specific Policy Tag from Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js. It uses the `getPolicyTag` method, providing the name of the desired policy tag. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(name) {\n  // [START datacatalog_get_policy_tag]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const name = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}/policyTags/{policy_tag}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function getPolicyTag() {\n    const [policyTag] = await policyTagManagerClient.getPolicyTag({\n      name: name,\n    });\n    console.log(`Policy Tag : ${policyTag.name}`);\n  }\n  getPolicyTag();\n  // [END datacatalog_get_policy_tag]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Getting an Intent in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet shows how to retrieve a specific intent from Dialogflow CX using the Node.js client library. The `Intents.get_intent` method is used, requiring the intent's resource name as input. Client initialization and authentication are prerequisite.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Intents_GetIntent_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callGetIntent() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'intents/my-intent',\n  };\n\n  // Make the request\n  const [response] = await client.getIntent(request);\n  console.log(response);\n}\n\ncallGetIntent();\n// [END dialogflow_cx_v3_generated_Intents_GetIntent_async]\n```\n\n----------------------------------------\n\nTITLE: Listing Managed Kafka Connectors in Node.js\nDESCRIPTION: This snippet shows how to list connectors in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.list_connectors.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Get Corpus Example in Node.js\nDESCRIPTION: This snippet runs the JavaScript file to get a corpus from the Retriever service, requiring Node.js installation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.get_corpus.js\"\n```\n\n----------------------------------------\n\nTITLE: Git Compare URL Version 6.0.1\nDESCRIPTION: GitHub URL comparing grafeas versions 6.0.0 to 6.0.1\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[6.0.1](https://github.com/googleapis/google-cloud-node/compare/grafeas-v6.0.0...grafeas-v6.0.1)\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing BeyondCorp API Client for Node.js\nDESCRIPTION: This snippet demonstrates how to install the BeyondCorp API client library using npm. The command installs the necessary package to enable access to the BeyondCorp functionalities in a Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/appgateways\n```\n\n----------------------------------------\n\nTITLE: Do Not Modify Options Object in Node.js\nDESCRIPTION: This commit changes the Google Cloud IoT Node.js library to avoid modifying the options object directly and instead use defaultScopes.  This change helps prevent unexpected side effects and promotes a more predictable and maintainable codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"* do not modify options object, use defaultScopes ([#416](https://www.github.com/googleapis/nodejs-iot/issues/416)) ([00bf691](https://www.github.com/googleapis/nodejs-iot/commit/00bf691f327f596effc67679b1fb05f6614b57fe))\"\n```\n\n----------------------------------------\n\nTITLE: Create Rollup Property Source Link in Analytics Admin using Node.js\nDESCRIPTION: This code shows how to create a rollup property source link using the Google Analytics Admin API in Node.js. The `createRollupPropertySourceLink` method of the `AnalyticsAdminServiceClient` is used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_rollup_property_source_link.js)\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes system tests for the Node.js project. It runs the script named \"system-test\" defined in the package.json file, which contains the commands to run the system tests and verify the integration with external systems.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run all system tests.\\n        npm run system-test\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Document Service Methods - Node.js\nDESCRIPTION: Core document service operations for DocumentAI including batch document deletion, schema management and document retrieval functionality. These methods are part of the v1beta3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Document service methods referenced:\n// - document_service.batch_delete_documents.js\n// - document_service.get_dataset_schema.js\n// - document_service.get_document.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Domains Client Library - Bash\nDESCRIPTION: This snippet demonstrates how to install the Google Cloud Domains client library using npm. It prepares the environment by adding the necessary library to your Node.js project to enable interaction with Google Cloud Domains API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @google-cloud/domains\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Compute Contacts\nDESCRIPTION: Sample code for computing contacts in the Essential Contacts API using Node.js. Demonstrates how to interact with the Essential Contacts Service to compute contact information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.compute_contacts.js\n```\n\n----------------------------------------\n\nTITLE: Using BigQuery Data Transfer Service Client - Node.js Example\nDESCRIPTION: Example showing how to initialize the client and list data sources using both iteration and stream methods. Demonstrates pagination handling and async/await pattern.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst bigqueryDataTransfer = require('@google-cloud/bigquery-data-transfer');\nconst client = new bigqueryDataTransfer.v1.DataTransferServiceClient();\n\nasync function quickstart() {\n  const projectId = await client.getProjectId();\n\n  // Iterate over all elements.\n  const formattedParent = client.projectPath(projectId, 'us-central1');\n  let nextRequest = {parent: formattedParent};\n  const options = {autoPaginate: false};\n  console.log('Data sources:');\n  do {\n    // Fetch the next page.\n    const responses = await client.listDataSources(nextRequest, options);\n    // The actual resources in a response.\n    const resources = responses[0];\n    // The next request if the response shows that there are more responses.\n    nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // const rawResponse = responses[2];\n    resources.forEach(resource => {\n      console.log(`  ${resource.name}`);\n    });\n  } while (nextRequest);\n\n  console.log('\\n\\n');\n  console.log('Sources via stream:');\n\n  client\n    .listDataSourcesStream({parent: formattedParent})\n    .on('data', element => {\n      console.log(`  ${element.name}`);\n    });\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: List Tags - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example showing how to list tags in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.list_tags.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Policy Tag in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This code snippet illustrates how to delete a Policy Tag from Google Cloud Data Catalog using the google-cloud-datacatalog library for Node.js.  It uses the `deletePolicyTag` method, specifying the name of the policy tag to be deleted. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(name) {\n  // [START datacatalog_delete_policy_tag]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const name = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}/policyTags/{policy_tag}';\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function deletePolicyTag() {\n    await policyTagManagerClient.deletePolicyTag({\n      name: name,\n    });\n    console.log('Deleted policy tag');\n  }\n  deletePolicyTag();\n  // [END datacatalog_delete_policy_tag]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Release Details in Markdown\nDESCRIPTION: Structured release notes detailing version changes, bug fixes, and features added to the Node.js Billing Budgets library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### [1.0.1](https://www.github.com/googleapis/nodejs-billing-budgets/compare/v1.0.0...v1.0.1) (2020-01-14)\n\n### Bug Fixes\n\n* **deps:** update dependency mocha to v7 ([#9](https://www.github.com/googleapis/nodejs-billing-budgets/issues/9)) ([69795da](https://www.github.com/googleapis/nodejs-billing-budgets/commit/69795daef3c439b1ce89e21a6c7b5118d6cc79b1))\n\n## 1.0.0 (2019-11-16)\n\n### Features\n\n* adding samples, tests, documentation ([#3](https://www.github.com/googleapis/nodejs-billing-budgets/issues/3)) ([855b0aa](https://www.github.com/googleapis/nodejs-billing-budgets/commit/855b0aad28a7c6d9980f230a81c74a22f774ad76))\n* generate initial TypeScript library ([7548e10](https://www.github.com/googleapis/nodejs-billing-budgets/commit/7548e1073fe6113f8dfedc87ac6eadbb550b3cef))\n* initial files for repo ([2de7f34](https://www.github.com/googleapis/nodejs-billing-budgets/commit/2de7f3492e22ce6ff5c2c3edba77557491f4e135))\n```\n\n----------------------------------------\n\nTITLE: Listing Workloads using Assured Workloads Node.js client\nDESCRIPTION: This snippet demonstrates how to list workloads using the Assured Workloads Node.js client library. It initializes the client, calls the listWorkloads method with a specified project ID, and iterates through the results to print workload information to the console. Requires the `@google-cloud/assured-workloads` package to be installed and a project ID to be defined.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\n\n// Imports the Google Cloud Some API library\nconst {\n  AssuredWorkloadsServiceClient,\n} = require('@google-cloud/assured-workloads');\nconst client = new AssuredWorkloadsServiceClient();\nasync function listWorkloads() {\n  const [workloads] = await client.listWorkloads({\n    parent: `organizations/${projectId}`,\n  });\n  for (const workload of workloads) {\n    console.info(workload);\n  }\n}\nlistWorkloads();\n\n```\n\n----------------------------------------\n\nTITLE: Running Basic Analytics Report with Node.js\nDESCRIPTION: Example of using the Google Analytics Data API to run a basic report that retrieves active users by city. The code demonstrates initialization of the client and making a report request using the runReport method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment this variable and replace with your\n *   Google Analytics 4 property ID before running the sample.\n */\n// propertyId = 'YOUR-GA4-PROPERTY-ID';\n\n// Imports the Google Analytics Data API client library.\nconst {BetaAnalyticsDataClient} = require('@google-analytics/data');\n\n// Using a default constructor instructs the client to use the credentials\n// specified in GOOGLE_APPLICATION_CREDENTIALS environment variable.\nconst analyticsDataClient = new BetaAnalyticsDataClient();\n\n// Runs a simple report.\nasync function runReport() {\n  const [response] = await analyticsDataClient.runReport({\n    property: `properties/${propertyId}`,\n    dateRanges: [\n      {\n        startDate: '2020-03-31',\n        endDate: 'today',\n      },\n    ],\n    dimensions: [\n      {\n        name: 'city',\n      },\n    ],\n    metrics: [\n      {\n        name: 'activeUsers',\n      },\n    ],\n  });\n\n  console.log('Report result:');\n  response.rows.forEach(row => {\n    console.log(row.dimensionValues[0], row.metricValues[0]);\n  });\n}\n\nrunReport();\n```\n\n----------------------------------------\n\nTITLE: Cancel Patch Job in GCP OS Config Service\nDESCRIPTION: Demonstrates how to cancel an in-progress patch job using the OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1beta/os_config_service.cancel_patch_job.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests in Node.js\nDESCRIPTION: This snippet provides instructions to set up the testing environment for a Node.js application. It includes commands to install dependencies and run various tests, ensuring code quality and functionality before submission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-mediatranslation/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting AWS Node Pools with GKE Multi-cloud API in Node.js\nDESCRIPTION: Demonstrates how to delete a node pool from an AWS Kubernetes cluster using the Google Cloud GKE Multi-cloud API. This sample shows how to remove worker nodes from an existing AWS cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkemulticloud/samples/generated/v1/aws_clusters.delete_aws_node_pool.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running a Cloud Scheduler Job with Node.js\nDESCRIPTION: This code snippet shows how to manually run a Cloud Scheduler job using the Google Cloud Node.js client library. It requires the google-cloud-scheduler package and proper authentication configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1beta1/cloud_scheduler.run_job.js\n```\n\n----------------------------------------\n\nTITLE: Version Compare Example (Git)\nDESCRIPTION: Git comparison reference between package versions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nprivate-catalog-v4.0.0...private-catalog-v4.0.1\n```\n\n----------------------------------------\n\nTITLE: Listing Tenants with Tenant Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list tenants using the Tenant Service in the Google Cloud Talent API with Node.js. The sample code is located at packages/google-cloud-talent/samples/generated/v4/tenant_service.list_tenants.js. It requires the google-cloud-talent package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-talent/samples/generated/v4/tenant_service.list_tenants.js`\n```\n\n----------------------------------------\n\nTITLE: Searching IAM Policies using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search all IAM policies using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.search_all_iam_policies.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Recommender Configuration in Google Cloud Recommender API v1\nDESCRIPTION: Example demonstrating how to update a recommender configuration using the Google Cloud Recommender API v1. This sample shows the command to execute the update_recommender_config method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.update_recommender_config.js\n```\n\n----------------------------------------\n\nTITLE: Getting TPU Accelerator Type in Node.js\nDESCRIPTION: Sample code for retrieving TPU accelerator type information using the Google Cloud TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.get_accelerator_type.js\n```\n\n----------------------------------------\n\nTITLE: Executing Autokey.list_key_handles Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `list_key_handles` function within the Autokey service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/autokey.list_key_handles.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code\nDESCRIPTION: NPM script for linting and automatically fixing code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Group Assets in Security Center\nDESCRIPTION: Groups assets in Google Cloud Security Center using the Node.js client library. This sample demonstrates how to group assets based on specified criteria. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.group_assets\"\n```\n\n----------------------------------------\n\nTITLE: Updating Private Cloud in VMware Engine (Node.js)\nDESCRIPTION: Example showing how to update private cloud configurations in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_private_cloud.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Custom Target Type in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to update a custom target type in Cloud Deploy. It utilizes the update_custom_target_type method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.update_custom_target_type.js\n```\n\n----------------------------------------\n\nTITLE: Get Event Threat Detection Custom Module\nDESCRIPTION: Retrieves an event threat detection custom module from Google Cloud Security Center using the Node.js client library. This sample shows how to fetch configurations related to event threat detection within Security Center. It depends on the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_event_threat_detection_custom_module\"\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests for the project using npm. The tests are defined in the project's package.json file under the 'test' script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing the Fleet Engine Client Library with npm\nDESCRIPTION: Command to install the Google Maps Fleet Engine client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/fleetengine\n```\n\n----------------------------------------\n\nTITLE: Running Asset Discovery in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet initiates asset discovery to refresh the inventory of resources in the Google Cloud Security Center. Ensure that permissions are properly set to perform this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.run_asset_discovery.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Management DNS Zone Binding in VMware Engine (Node.js)\nDESCRIPTION: Example demonstrating how to update DNS zone bindings for management in Google Cloud VMware Engine using Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.update_management_dns_zone_binding.js\n```\n\n----------------------------------------\n\nTITLE: Fetch Database Properties - Node.js\nDESCRIPTION: Script to retrieve database properties from a Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.fetch_database_properties.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Get Certificate in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a specific certificate using Google Cloud Certificate Authority Service. The code can be executed directly to get detailed information about a certificate in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.get_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Creating Service - Google Cloud Node.js\nDESCRIPTION: A Node.js script for creating a service within the Google Cloud Service Directory. This requires the `@google-cloud/service-directory` package. Input parameters are the namespace name and service configuration. Outputs the created service's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_service.js>\n```\n\n----------------------------------------\n\nTITLE: Handle CSS Product Operations\nDESCRIPTION: Demonstrates product management functionality including inserting, updating and deleting CSS product inputs as well as retrieving and listing CSS products.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// CSS Product Operations\\nnode packages/google-shopping-css/samples/generated/v1/css_product_inputs_service.delete_css_product_input.js\\nnode packages/google-shopping-css/samples/generated/v1/css_product_inputs_service.insert_css_product_input.js\\nnode packages/google-shopping-css/samples/generated/v1/css_product_inputs_service.update_css_product_input.js\\nnode packages/google-shopping-css/samples/generated/v1/css_products_service.get_css_product.js\\nnode packages/google-shopping-css/samples/generated/v1/css_products_service.list_css_products.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tags with Node.js\nDESCRIPTION: A Node.js script to list tags associated with entries in Google Cloud Data Catalog. Using the `@google-cloud/datacatalog` package, it conveys the relationship between data entries and tags, executed from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.list_tags.js\n```\n\n----------------------------------------\n\nTITLE: Listing Environments in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to list all environments in a Dialogflow CX agent using Node.js. This sample provides the command-line syntax for executing the list environments operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.list_environments.js\n```\n\n----------------------------------------\n\nTITLE: Managing Database Migration Service Code Samples\nDESCRIPTION: Collection of code samples for interacting with Google Cloud Database Migration Service. Each sample demonstrates a specific operation like creating connection profiles, managing conversion workspaces, handling migration jobs, and working with mapping rules. The samples are organized by functionality and provide usage examples for the service's API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Updating Backups in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet demonstrates how to update an existing backup in Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n// Update Backup Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function updateBackup(projectId, backupId) {\n  // Implementation for updating a backup\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating API using Registry service in Node.js\nDESCRIPTION: This snippet shows how to use the update_api method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.update_api.js\n```\n\n----------------------------------------\n\nTITLE: Looking up API Hub Instance using Node.js\nDESCRIPTION: Sample code demonstrating how to look up an API Hub instance using the lookup_api_hub_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/provisioning.lookup_api_hub_instance.js\n```\n\n----------------------------------------\n\nTITLE: Ignoring a Job in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to ignore a job in Cloud Deploy. It utilizes the ignore_job method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.ignore_job.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Projects\nDESCRIPTION: Command for running linting checks and automatically fixing style issues in code changes for Google Cloud Node.js repositories.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Get User Workloads Config Map - Node.js\nDESCRIPTION: Retrieves user workloads configuration map from a Google Cloud Airflow environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.get_user_workloads_config_map.js\n```\n\n----------------------------------------\n\nTITLE: Using the API Keys API Node.js Client Library to List API Keys\nDESCRIPTION: Example code demonstrating how to use the API Keys API Node.js client to list all API keys associated with a project. The sample shows initialization of the client and pagination through results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-apikeys/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Lists all API keys associated with this project.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Specifies the maximum number of results to be returned at a time.\n */\n// const pageSize = 1234\n/**\n *  Optional. Requests a specific page of results.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Indicate that keys deleted in the past 30 days should also be\n *  returned.\n */\n// const showDeleted = true\n\n// Imports the Apikeys library\nconst {ApiKeysClient} = require('@google-cloud/apikeys').v2;\n\n// Instantiates a client\nconst apikeysClient = new ApiKeysClient();\n\nasync function callListKeys() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await apikeysClient.listKeysAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListKeys();\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet illustrates how to delete an entry using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.delete_entry.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Intent in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet shows how to delete an intent in Dialogflow CX using the Node.js client library. It makes use of the `Intents.delete_intent` method. Ensure that the Dialogflow CX client is properly initialized and authenticated before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Intents_DeleteIntent_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callDeleteIntent() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    name: 'intents/my-intent',\n  };\n\n  // Make the request\n  await client.deleteIntent(request);\n  console.log('Delete request succeeded');\n}\n\ncallDeleteIntent();\n// [END dialogflow_cx_v3_generated_Intents_DeleteIntent_async]\n```\n\n----------------------------------------\n\nTITLE: Creating a Task with Delivery Service API in Node.js\nDESCRIPTION: This snippet illustrates how to create a task using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.create_task.js\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.get_stream in Node.js\nDESCRIPTION: Sample code for retrieving a stream using the Google Cloud Datastream API in Node.js. This script demonstrates how to get details about a specific stream configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.get_stream.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests in Node.js Project\nDESCRIPTION: npm script commands for running different types of tests in the Google Cloud Node.js library, including unit, sample integration, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n\n# Lint and fix changes\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Release Version Details in Markdown\nDESCRIPTION: Version history entries documenting changes, breaking updates, and new features for the Node.js Video Live Stream library across multiple releases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* support regapic LRO ([#45](https://github.com/googleapis/nodejs-video-live-stream/issues/45)) ([fc3c1b4](https://github.com/googleapis/nodejs-video-live-stream/commit/fc3c1b426407d6ff8b825483c0ab892e25a28d09))\n\n## [0.2.0](https://github.com/googleapis/nodejs-video-live-stream/compare/v0.1.0...v0.2.0) (2022-06-03)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade library to stable (#35)\n* update library to use Node 12 (#34)\n\n### Features\n\n* upgrade library to stable ([#35](https://github.com/googleapis/nodejs-video-live-stream/issues/35)) ([ab9935b](https://github.com/googleapis/nodejs-video-live-stream/commit/ab9935b560bda6a047dbfa64cc7357e5647c272e))\n\n\n### Build System\n\n* update library to use Node 12 ([#34](https://github.com/googleapis/nodejs-video-live-stream/issues/34)) ([ce13574](https://github.com/googleapis/nodejs-video-live-stream/commit/ce13574050cc1cf510275737cf351660a2495f6b))\n\n\n### Miscellaneous Chores\n\n* release as v0.2.0 ([#38](https://github.com/googleapis/nodejs-video-live-stream/issues/38)) ([f068c7b](https://github.com/googleapis/nodejs-video-live-stream/commit/f068c7bdee9b877b53230df7a64b1d4ea30da8a1))\n\n## 0.1.0 (2022-02-11)\n\n\n### Features\n\n* initial generation of video livestream library ([#4](https://github.com/googleapis/nodejs-video-live-stream/issues/4)) ([1e1e570](https://github.com/googleapis/nodejs-video-live-stream/commit/1e1e570cf9e8a11458c35b9e2b6b5ecde6a140a3))\n```\n\n----------------------------------------\n\nTITLE: Querying Audience List - Google Analytics Data API v1alpha\nDESCRIPTION: Sample code for querying audience list data using the Google Analytics Data API alpha version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-analytics-data/samples/generated/v1alpha/alpha_analytics_data.query_audience_list.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating a Product - Google Cloud Retail - JavaScript\nDESCRIPTION: This snippet provides functionality for updating an existing product in Google Cloud Retail. It requires the Node.js environment with Google Cloud libraries. Input is the updated product information, and the output acknowledges the successful update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for updating a product\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Project\nDESCRIPTION: Command to install project dependencies using npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Batch Client Library - Listing Jobs in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Batch client library for Node.js to list jobs. Users need to modify the template to set correct values for the parent path and any filters they may wish to apply. The snippet showcases the creation of a BatchServiceClient and an asynchronous function to list jobs from the Batch service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Batch library\nconst {BatchServiceClient} = require('@google-cloud/batch').v1;\n\n// Instantiates a client\nconst batchClient = new BatchServiceClient();\n\nasync function callListJobs() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await batchClient.listJobsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListJobs();\n\n```\n\n----------------------------------------\n\nTITLE: Getting Volume Snapshot from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet retrieves a specific volume snapshot from the API. It must be executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_volume_snapshot.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_volume_snapshot.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an External API with API Hub using Node.js\nDESCRIPTION: This script allows users to delete an external API from the Google Cloud API Hub using Node.js. Execution requires Node.js installed and the appropriate command run from a terminal. This utility helps in managing and maintaining accurate API listings by removing outdated or obsolete external APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_external_api.js\n```\n\n----------------------------------------\n\nTITLE: Getting Intent Dialogflow CX with Node.js\nDESCRIPTION: This snippet retrieves an intent using the Dialogflow CX API with Node.js. It relies on the `@google-cloud/dialogflow-cx` package. The command line is used to execute the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.get_intent.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Mesh in Google Cloud Network Services\nDESCRIPTION: Node.js code sample demonstrating mesh deletion using the Network Services API. Executable via command line or Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.delete_mesh.js\n```\n\n----------------------------------------\n\nTITLE: Listing Access Policies with Access Context Manager Node.js Client\nDESCRIPTION: Example code showing how to initialize the Access Context Manager client and list access policies for an organization. The sample demonstrates making an asynchronous API request with pagination handling.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Resource name for the container to list AccessPolicy instances\n *  from.\n *  Format:\n *  `organizations/{org_id}`\n */\n// const parent = 'abc123'\n/**\n *  Number of AccessPolicy instances to include in the list. Default 100.\n */\n// const pageSize = 1234\n/**\n *  Next page token for the next batch of AccessPolicy instances. Defaults to\n *  the first page of results.\n */\n// const pageToken = 'abc123'\n\n// Imports the Accesscontextmanager library\nconst {AccessContextManagerClient} =\n  require('@google-cloud/access-context-manager').v1;\n\n// Instantiates a client\nconst accesscontextmanagerClient = new AccessContextManagerClient();\n\nasync function listAccessPolicies() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await accesscontextmanagerClient.listAccessPoliciesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\nlistAccessPolicies();\n```\n\n----------------------------------------\n\nTITLE: Creating a Taxonomy in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates creating a new Taxonomy in Google Cloud Data Catalog using the google-cloud-datacatalog library in Node.js.  It leverages the `createTaxonomy` method to create a taxonomy within a specified location. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(parent, taxonomy) {\n  // [START datacatalog_create_taxonomy]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const parent = 'projects/{project}/locations/{location}';\n  // const taxonomy = {};\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function createTaxonomy() {\n    const [taxonomy] = await policyTagManagerClient.createTaxonomy({\n      parent: parent,\n      taxonomy: taxonomy,\n    });\n    console.log(`Taxonomy : ${taxonomy.name}`);\n  }\n  createTaxonomy();\n  // [END datacatalog_create_taxonomy]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Issues with npm\nDESCRIPTION: This command runs a linting tool to detect and possibly fix style issues in the code. It requires a pre-configured linting setup in the project, such as ESLint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-conversions/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Dependency with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to get a dependency using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_dependencies.get_dependency.js\n```\n\n----------------------------------------\n\nTITLE: Running AlloyDB Admin Script\nDESCRIPTION: Each of the listed Node.js scripts is run using a specific command format, indicating its functionality such as listing databases, updating backups, or managing clusters. These scripts are examples of how to interact with Google Cloud AlloyDB using Node.js. They require Node.js as a dependency and are executed via the command line, taking no direct inputs but operating on specific Google Cloud resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.get_user.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.inject_fault.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_backups.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_clusters.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_databases.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_instances.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_supported_database_flags.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.list_users.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.promote_cluster.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.restart_instance.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.restore_cluster.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.switchover_cluster.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.update_backup.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.update_cluster.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.update_instance.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.update_user.js\n```\n\n----------------------------------------\n\nTITLE: Listing Managed Kafka Connect Clusters in Node.js\nDESCRIPTION: This code sample demonstrates how to list Managed Kafka Connect clusters using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.list_connect_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Listing Video Stitcher Service Operations in Node.js\nDESCRIPTION: Sample code demonstrating various Video Stitcher API operations including VOD sessions, CDN keys, live configs, and ad tag management. The code provides examples of listing and managing different components of the Video Stitcher service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code samples referenced in documentation:\n// - video_stitcher_service.get_vod_session.js\n// - video_stitcher_service.get_vod_stitch_detail.js\n// - video_stitcher_service.list_cdn_keys.js\n// - video_stitcher_service.list_live_ad_tag_details.js\n// - video_stitcher_service.list_live_configs.js\n// - video_stitcher_service.list_slates.js\n// - video_stitcher_service.list_vod_ad_tag_details.js\n// - video_stitcher_service.list_vod_configs.js\n// - video_stitcher_service.list_vod_stitch_details.js\n// - video_stitcher_service.update_cdn_key.js\n// - video_stitcher_service.update_live_config.js\n// - video_stitcher_service.update_slate.js\n// - video_stitcher_service.update_vod_config.js\n// - quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Server Configuration - JavaScript\nDESCRIPTION: This snippet retrieves the server configuration from the Cluster Manager API. It requires appropriate setup of the Google Cloud Node.js client library for successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function getServerConfig() {\n  const response = await client.getServerConfig();\n  console.log(`Server configuration: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Getting Encryption Spec using Dialogflow API in Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve an encryption specification from Dialogflow. The code shows usage of the encryption_spec_service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_85\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/encryption_spec_service.get_encryption_spec.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Cluster - Google Cloud Node\nDESCRIPTION: This snippet provides the functionality to delete an Azure cluster specified by its name. Proper authentication and correct project context are necessary to avoid errors during this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.deleteAzureCluster({name: 'projects/my-project/locations/my-location/azureClusters/my-cluster'});\n```\n\n----------------------------------------\n\nTITLE: Updating NFS Share in Bare Metal Solution using Node.js\nDESCRIPTION: This snippet shows how to update an NFS share in Google Cloud Bare Metal Solution with Node.js. It uses the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.update_nfs_share.js\n```\n\n----------------------------------------\n\nTITLE: Listing Recommendations in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to list recommendations for a specific project using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the list_recommendations method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.list_recommendations.js\n```\n\n----------------------------------------\n\nTITLE: Validating a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to validate a flow in Dialogflow CX. It uses the flows.validate_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.validate_flow.js\n```\n\n----------------------------------------\n\nTITLE: Delete Device - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to delete a device using the Google Cloud IoT Device Manager in Node.js. It employs the google-cloud-node library for interaction with the IoT service. Authentication and project setup are prerequisites for running the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js library project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Network Peering with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a network peering configuration using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_network_peering\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Network Connectivity Spoke\nDESCRIPTION: Node.js code sample for updating an existing spoke in the Google Cloud Network Connectivity service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.update_spoke.js\n```\n\n----------------------------------------\n\nTITLE: Using Security Center Management API Node.js Client\nDESCRIPTION: This code demonstrates how to use the Security Center Management API client library in Node.js. It includes importing the library, instantiating a client, and making an API call to list effective event threat detection custom modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Name of parent to list effective custom modules. Its format is\n *  \"organizations/{organization}/locations/{location}\",\n *  \"folders/{folder}/locations/{location}\",\n *  or\n *  \"projects/{project}/locations/{location}\"\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of results to return in a single response.\n *  Default is 10, minimum is 1, maximum is 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. The value returned by the last call indicating a continuation\n */\n// const pageToken = 'abc123'\n\n// Imports the Securitycentermanagement library\nconst {SecurityCenterManagementClient} =\n  require('@google-cloud/securitycentermanagement').v1;\n\n// Instantiates a client\nconst securitycentermanagementClient = new SecurityCenterManagementClient();\n\nasync function callListEffectiveEventThreatDetectionCustomModules() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    securitycentermanagementClient.listEffectiveEventThreatDetectionCustomModulesAsync(\n      request\n    );\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListEffectiveEventThreatDetectionCustomModules();\n```\n\n----------------------------------------\n\nTITLE: Creating an Intent in Node.js\nDESCRIPTION: This snippet allows developers to create a new intent within a Dialogflow agent, enabling the configuration of specific actions based on user input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_101\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Create intent\nconst {IntentsClient} = require('@google-cloud/dialogflow');\nconst client = new IntentsClient();\n\nasync function createIntent() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.createIntent(request);\n  console.log(response);\n}\ncreateIntent();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Import Job in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to retrieve an import job using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.get_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Updating Site in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to update a site using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which updates the specified site.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.update_site.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Saved Query using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to update a saved query using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.update_saved_query.js`\n```\n\n----------------------------------------\n\nTITLE: Training a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to train a flow in Dialogflow CX. It uses the flows.train_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.train_flow.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Restore using Backup for GKE API in Node.js\nDESCRIPTION: This sample illustrates how to delete a restore operation using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.delete_restore.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Cloud Scheduler Job in Node.js\nDESCRIPTION: This code example shows how to update an existing job in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.update_job.js\n```\n\n----------------------------------------\n\nTITLE: Listing Transition Route Groups in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to list all transition route groups in a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_141\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/transition_route_groups.list_transition_route_groups.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Tool Version in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to get a specific tool version using the Dialogflow CX API. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_133\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/tools.get_tool_version.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Policy Tag in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates updating a Policy Tag within Google Cloud Data Catalog using the google-cloud-datacatalog library with Node.js. The `updatePolicyTag` method is called with the desired changes to the policy tag. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(policyTag) {\n  // [START datacatalog_update_policy_tag]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const policyTag = {};\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function updatePolicyTag() {\n    const [response] = await policyTagManagerClient.updatePolicyTag({\n      policyTag: policyTag,\n    });\n    console.log(`Policy Tag updated: ${response.name}`);\n  }\n  updatePolicyTag();\n  // [END datacatalog_update_policy_tag]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Resource Value Configurations in Google Cloud Security Center - JavaScript\nDESCRIPTION: This snippet demonstrates how to batch create resource value configurations in Google Cloud Security Center using Node.js. It allows users to configure multiple resource values simultaneously by making a single API call. Ensure that the Google Cloud SDK is installed and configured properly before running this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for batch creating resource value configs\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function batchCreateResourceValueConfigs() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID' // Required\n    // Additional parameters go here\n  };\n  const [response] = await client.batchCreateResourceValueConfigs(request);\n  console.log(response);\n}\n\nbatchCreateResourceValueConfigs();\n```\n\n----------------------------------------\n\nTITLE: Updating an Entry Group in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates updating an entry group within Google Cloud Data Catalog using the google-cloud-datacatalog library for Node.js. The `updateEntryGroup` method is called with the desired modifications to the entry group. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(entryGroup) {\n  // [START datacatalog_update_entry_group]\n  // Imports the Google Cloud client library\n  const {DataCatalogClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const entryGroup = {};\n\n  // Instantiates a client\n  const datacatalog = new DataCatalogClient();\n\n  async function updateEntryGroup() {\n    const [response] = await datacatalog.updateEntryGroup({\n      entryGroup: entryGroup,\n    });\n    console.log(`Entry Group updated: ${response.name}`);\n  }\n  updateEntryGroup();\n  // [END datacatalog_update_entry_group]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Updating CSS API Version in Markdown\nDESCRIPTION: This snippet shows the version update for the CSS API client from 0.7.0 to 0.8.0. It includes breaking changes, new features, and miscellaneous chores.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.8.0](https://github.com/googleapis/google-cloud-node/compare/css-v0.7.0...css-v0.8.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([388b4e2](https://github.com/googleapis/google-cloud-node/commit/388b4e20329b7f6fc0dd061dddff573c45104213))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry Version 4.0.0\nDESCRIPTION: Changelog entry documenting breaking changes, features and chores for version 4.0.0 released on 2025-03-18, including Node 18 upgrade and debug logging additions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.0](https://github.com/googleapis/google-cloud-node/compare/org-policy-v3.5.0...org-policy-v4.0.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([#6140](https://github.com/googleapis/google-cloud-node/issues/6140)) ([2f96b1f](https://github.com/googleapis/google-cloud-node/commit/2f96b1f95dd6b7cb89871b56e5ea5aadf5454292))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node Project\nDESCRIPTION: Command to run linting checks and potentially fix issues automatically in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Searching Files in Google Cloud Dataform with Node.js\nDESCRIPTION: Using Node.js, this script searches for files within a Dataform workspace. The command line script outputs files matching the search terms.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.search_files.js\n```\n\n----------------------------------------\n\nTITLE: Updating Provisioning Config for Bare Metal Solution in Node.js\nDESCRIPTION: This code demonstrates updating a provisioning configuration for Google Cloud Bare Metal Solution using Node.js. It requires the google-cloud-baremetalsolution package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.update_provisioning_config.js\n```\n\n----------------------------------------\n\nTITLE: GKE Gateway Quickstart\nDESCRIPTION: Quick start sample demonstrating basic usage of the GKE Connect Gateway client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating Session Entity Type using Dialogflow API in Node.js\nDESCRIPTION: This snippet shows how to update a session entity type using the Dialogflow API. It utilizes the session_entity_types.update_session_entity_type method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_76\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/session_entity_types.update_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Updating Domain Registration (v1alpha2)\nDESCRIPTION: Shows how to update an existing domain registration using the Cloud Domains API v1alpha2.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1alpha2/domains.update_registration.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file and installs all listed packages.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Storage Insights API - Node.js\nDESCRIPTION: A quickstart guide to utilizing the Google Cloud Storage Insights API with a Node.js sample, offering an entry point for understanding basic service interactions. It requires npm dependencies and correct client library setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required dependencies for the project before development or testing. This must be run in the project root directory after cloning the repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Network Connectivity Spokes\nDESCRIPTION: Node.js code sample for listing all available spokes in the Google Cloud Network Connectivity service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.list_spokes.js\n```\n\n----------------------------------------\n\nTITLE: Documenting Initial Release of CSS API in Markdown\nDESCRIPTION: This snippet shows the initial release (version 0.1.0) of the CSS API client, including breaking changes and new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## 0.1.0 (2024-01-05)\n\n\n### ⚠ BREAKING CHANGES\n\n* migrate to Node 14 ([#4443](https://github.com/googleapis/google-cloud-node/issues/4443))\n\n### Features\n\n* Add initial files for google.shopping.css.v1 ([#4892](https://github.com/googleapis/google-cloud-node/issues/4892)) ([104566a](https://github.com/googleapis/google-cloud-node/commit/104566a4eb00aa2d91f24f98a1e0f0ec761e8471))\n\n\n### Miscellaneous Chores\n\n* Migrate to Node 14 ([#4443](https://github.com/googleapis/google-cloud-node/issues/4443)) ([2260f12](https://github.com/googleapis/google-cloud-node/commit/2260f12543d171bda95345e53475f5f0fdc45770))\n```\n\n----------------------------------------\n\nTITLE: Updating Session Entity Type - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet updates an existing session entity type in Dialogflow, ensuring the session's entities reflect current contextual requirements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_120\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Updates a session entity type.\nconst {SessionEntityTypesClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionEntityTypesClient();\n\nasync function updateSessionEntityType() {\n  // Implementation logic here\n}\n\nupdateSessionEntityType();\n```\n\n----------------------------------------\n\nTITLE: Using the Edge Network Client Library to List Zones\nDESCRIPTION: JavaScript example showing how to instantiate the Edge Network client and use it to list zones in a project. The example demonstrates initialization, request construction, and asynchronous iteration over results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value for ListZonesRequest\n */\n// const parent = 'projects/your-project/locations/your-location'\n\n// Imports the Edgenetwork library\nconst {EdgeNetworkClient} = require('@google-cloud/edgenetwork').v1;\n\n// Instantiates a client\nconst edgenetworkClient = new EdgeNetworkClient();\n\nasync function callListZones() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await edgenetworkClient.listZonesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListZones();\n```\n\n----------------------------------------\n\nTITLE: Listing Streams in Node.js\nDESCRIPTION: This script provides functionality to list all available streams using the Datastream API via Node.js. It facilitates stream management by fetching and displaying stream information. Prerequisites include setting up the appropriate Google Cloud credentials and having access to the Datastream service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.list_streams.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Create Namespace using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `createNamespace` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for creating a namespace.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_namespace.js`\n```\n\n----------------------------------------\n\nTITLE: Get Model Retail API\nDESCRIPTION: This sample demonstrates how to retrieve a model from the Retail API using Node.js. It involves setting up the necessary authentication and calling the `getModel` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-retail/samples/generated/v2/model_service.get_model.js`\n```\n\n----------------------------------------\n\nTITLE: Transferring Domain Registration (v1alpha2)\nDESCRIPTION: Demonstrates domain transfer process using the Cloud Domains API v1alpha2.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1alpha2/domains.transfer_domain.js\n```\n\n----------------------------------------\n\nTITLE: Running Organization Policy Samples\nDESCRIPTION: Example usage commands for running the Organization Policy samples. Shows how to execute individual sample files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-orgpolicy/samples/generated/v2/org_policy.create_custom_constraint.js\nnode packages/google-cloud-orgpolicy/samples/generated/v2/org_policy.create_policy.js\nnode packages/google-cloud-orgpolicy/samples/generated/v2/org_policy.delete_custom_constraint.js\nnode packages/google-cloud-orgpolicy/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating Target Site in Node.js\nDESCRIPTION: This sample demonstrates how to create a target site using the DiscoveryEngine API in Node.js. It utilizes the `Site_search_engine_service.create_target_site` method for creating a new target site. The sample requires a properly initialized and authenticated DiscoveryEngine client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_CreateTargetSite_async]\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Group Information with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for retrieving node group information using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the NodeGroupController.getNodeGroup method to get details about a specific node group.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/node_group_controller.get_node_group.js\n```\n\n----------------------------------------\n\nTITLE: Updating Completion Config in Google Cloud Retail API\nDESCRIPTION: Example showing how to update completion configuration using the Google Cloud Retail API. Handles completion settings for retail catalog items.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_67\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/catalog_service.update_completion_config.js\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This snippet demonstrates how to run system tests using npm. System tests are end-to-end tests that validate the entire system's functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run all system tests.\n        npm run system-test\"\n```\n\n----------------------------------------\n\nTITLE: Moving a Table to a Database in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet demonstrates how to move a table to a database in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.move_table_to_database.js\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Life Sciences Client in Node.js\nDESCRIPTION: The code demonstrates how to use the Google Cloud Life Sciences client library in a Node.js application to check the progress of a pipeline run. It requires creating a WorkflowsServiceV2BetaClient instance and calling its method with project-specific identifiers. Node.js and the client library should be installed beforehand.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {WorkflowsServiceV2BetaClient} = require('@google-cloud/life-sciences');\n\n// const pipeline = 'name-of-pipeline', i.e., 1234\n// const projectId = your-project-id\n// const location = your-pipeline-location\n\n// Creates a client\nconst client = new WorkflowsServiceV2BetaClient();\n\nasync function checkPipelineProgress() {\n  const status = await client.checkRunPipelineProgress(\n    `projects/${projectId}/locations/${location}/operations/${pipeline}`\n  );\n  console.info(status);\n}\ncheckPipelineProgress();\n\n```\n\n----------------------------------------\n\nTITLE: Get Advisory Settings using Node.js\nDESCRIPTION: Sample code showing how to retrieve advisory notification settings using the Advisory Notifications API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-advisorynotifications/samples/generated/v1/advisory_notifications_service.get_settings.js\n```\n\n----------------------------------------\n\nTITLE: Undeploying Issue Models in Contact Center Insights with Node.js\nDESCRIPTION: Sample code showing how to undeploy an issue model using the Google Cloud Contact Center Insights API. This sample uses the contact_center_insights.undeploy_issue_model method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.undeploy_issue_model.js\n```\n\n----------------------------------------\n\nTITLE: Listing Playbooks in Dialogflow CX using Node.js\nDESCRIPTION: A script for listing all playbooks in a Dialogflow CX agent, leveraging Node.js client library. Requires client authentication. Outputs a list of available playbooks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_128\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.list_playbooks.js\n```\n\n----------------------------------------\n\nTITLE: List SKUs using Cloud Channel Service\nDESCRIPTION: Sample code for listing SKUs using the Cloud Channel Service API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_skus.js\n```\n\n----------------------------------------\n\nTITLE: Analyzing Move - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample shows how to analyze asset moves and their transitions using the Google Cloud Asset API. It requires a Node.js environment with the Google Cloud SDK installed. The output includes details regarding asset movement tracking.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code to analyze asset movement\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for BigQuery Connection (Node.js)\nDESCRIPTION: This snippet illustrates how to set the IAM policy for a BigQuery connection using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving IAM Policy with Access Context Manager API in Node.js\nDESCRIPTION: This snippet shows how to get an IAM policy using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Restarting an Instance in Data Fusion with Node.js\nDESCRIPTION: A script to restart an instance in Google Cloud Data Fusion, utilizing Node.js. Requires Google Cloud library dependencies, with execution resulting in the specified instance being restarted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datafusion/samples/generated/v1beta1/data_fusion.restart_instance.js\"\n```\n\n----------------------------------------\n\nTITLE: Run unit tests using npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file, typically using a testing framework like Mocha or Jest. The output shows the results of each test case, indicating whether they passed or failed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Deleting Conversion Event - Google Analytics Admin Service - JavaScript\nDESCRIPTION: The JavaScript snippet shows the method to delete a conversion event in Google Analytics using the Admin Service API. Necessary dependencies include Google Cloud's Node.js client library. It requires the conversion event ID to proceed, and upon success, deletes the specified event.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteConversionEvent(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check the code for style and potential errors, and attempts to automatically fix any issues found.  The `npm run fix` command typically executes a script defined in the `package.json` file, which uses a linter tool (e.g., ESLint) to analyze the code and apply fixes where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node Project\nDESCRIPTION: Command to run the linter on code changes, which may also automatically fix some issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Attribute Binding with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This example demonstrates how to retrieve a data attribute binding using the Google Cloud Dataplex Data Taxonomy Service API. It requires the google-cloud-dataplex package and executes the get_data_attribute_binding method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.get_data_attribute_binding.js\n```\n\n----------------------------------------\n\nTITLE: Executing Google Cloud Data Plex Content Service Scripts\nDESCRIPTION: These scripts demonstrate how to interact with the Content Service in Google Cloud Data Plex using Node.js. Dependencies include Node.js and the Google Cloud Node.js library. These scripts cover operations like getting content, listing content, and managing IAM policies. Each script is run using the Node.js command line with expected outputs being the successful execution of API requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.get_content.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.get_iam_policy.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.list_content.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.set_iam_policy.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.test_iam_permissions.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/content_service.update_content.js\n```\n\n----------------------------------------\n\nTITLE: Detaching Trust with Node.js\nDESCRIPTION: This snippet is used to detach a trust from a domain using Node.js in conjunction with the Google Cloud Managed Identities API. Before running, ensure all required packages are installed and the user has appropriate roles. The script is executed via a Node.js command to manage domain trust relationships effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.detach_trust.js\n```\n\n----------------------------------------\n\nTITLE: Updating API Version using Registry service in Node.js\nDESCRIPTION: This snippet shows how to use the update_api_version method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.update_api_version.js\n```\n\n----------------------------------------\n\nTITLE: Installing Backup and DR Service API Client Library - Node.js\nDESCRIPTION: This snippet installs the Backup and DR Service API client library for Node.js using npm. It's mandatory to include this library to interact with the Backup and DR API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/backupdr\n```\n\n----------------------------------------\n\nTITLE: Deleting LB Route Extension with Network Services API in Node.js\nDESCRIPTION: This snippet illustrates how to delete a load balancer route extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.delete_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes the system tests for the project using npm. System tests evaluate the end-to-end functionality of the system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.get_iam_policy in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `get_iam_policy` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.get_iam_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Playbook Version in Dialogflow CX using Node.js\nDESCRIPTION: A Node.js script sample that deletes a specific version of a playbook in Dialogflow CX through API client interaction, requiring authentication and playbook version ID. Outputs result of the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_124\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.delete_playbook_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating VPC Connector using Node.js\nDESCRIPTION: Sample code demonstrating how to create a new VPC connector using the VPC Access service API. Found in vpc_access_service.create_connector.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vpcaccess/samples/generated/v1/vpc_access_service.create_connector.js\n```\n\n----------------------------------------\n\nTITLE: Creating Metadata Import in Dataproc Metastore\nDESCRIPTION: Sample code for creating a metadata import operation using the Dataproc Metastore API in Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.create_metadata_import.js\n```\n\n----------------------------------------\n\nTITLE: Creating Report Config with Storage Insights API - Node.js\nDESCRIPTION: This snippet demonstrates how to create a report configuration using the Google Cloud Storage Insights API in Node.js. It requires the Google Cloud client library for Storage Insights, which can be installed via npm. The script should be executed within the sample directory after installing dependencies with npm install.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.create_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Update EKM Connection JavaScript\nDESCRIPTION: This snippet updates a specific EKM connection in Google Cloud KMS through Node.js. Prerequisites involve authenticated Google Cloud API service. Successful execution confirms the connection's new settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Listing Child Accounts with CSS API - Node.js\nDESCRIPTION: Example code demonstrating how to use the CSS API client library to list child accounts. Shows initialization of the client and making an async request with pagination support. Includes optional parameters for filtering results by label ID, name, and controlling page size.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent account. Must be a CSS group or domain.\n *  Format: accounts/{account}\n */\n// const parent = 'abc123'\n/**\n *  If set, only the MC accounts with the given label ID will be returned.\n */\n// const labelId = 1234\n/**\n *  If set, only the MC accounts with the given name (case sensitive) will be\n *  returned.\n */\n// const fullName = 'abc123'\n/**\n *  Optional. The maximum number of accounts to return. The service may return\n *  fewer than this value. If unspecified, at most 50 accounts will be\n *  returned. The maximum value is 1000; values above 1000 will be coerced to\n *  1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A page token, received from a previous `ListChildAccounts` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to `ListChildAccounts` must\n *  match the call that provided the page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Css library\nconst {AccountsServiceClient} = require('@google-shopping/css').v1;\n\n// Instantiates a client\nconst cssClient = new AccountsServiceClient();\n\nasync function callListChildAccounts() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await cssClient.listChildAccountsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListChildAccounts();\n```\n\n----------------------------------------\n\nTITLE: Updating Crypto Key Primary Version in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample illustrates how to update the primary version of a crypto key using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.update_crypto_key_primary_version.js\n```\n\n----------------------------------------\n\nTITLE: Using the Dataflow Client Library - JavaScript\nDESCRIPTION: This snippet demonstrates how to use the Dataflow client library in a Node.js application. It imports the 'TemplatesServiceClient', replaces placeholder values with your project ID and GCS path, and defines an async function to get a template from Dataflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {TemplatesServiceClient} = require('@google-cloud/dataflow');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n// TODO(developer): replace with your bucket path.\n// const gcsPath = 'gs://<bucket>/path'\n\n// Creates a client\nconst client = new TemplatesServiceClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function getTemplate() {\n  const template = await client.getTemplate({\n    projectId,\n    gcsPath,\n  });\n  console.info(template);\n}\ngetTemplate();\n\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Dataform Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Dataform client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dataform\n```\n\n----------------------------------------\n\nTITLE: Deleting Webhook in Dialogflow CX - JavaScript\nDESCRIPTION: This snippet shows how to delete an existing webhook for a Dialogflow CX agent. It makes a call to the Dialogflow CX API to remove the specified webhook using its ID. Dependencies include the Dialogflow CX library. The `webhookId` parameter specifies which webhook to delete, and it confirms the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_151\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WebhooksClient} = require('@google-cloud/dialogflow-cx');\nconst client = new WebhooksClient();\n\nasync function deleteWebhook(webhookId) {\n  const request = {\n    name: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT/webhooks/${webhookId}`\n  };\n  await client.deleteWebhook(request);\n  console.log('Webhook deleted:', webhookId);\n}\n\ndeleteWebhook('WEBHOOK_ID');\n```\n\n----------------------------------------\n\nTITLE: Specifying Build as Body of CreateBuild Call\nDESCRIPTION: This snippet specifies that the 'build' object is explicitly passed as the body of a 'CreateBuild' API call. This clarifies the intended data structure for creating builds and ensures alignment with the Cloud Build API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * Specify `build` as the body of a `CreateBuild` call. The Cloud Build API has always assumed this, but now we are actually specifying it. ([#202](https://www.github.com/googleapis/nodejs-cloudbuild/issues/202)) ([48fe15d](https://www.github.com/googleapis/nodejs-cloudbuild/commit/48fe15d49504bbb77078984154a147840c484825))\n */\n```\n\n----------------------------------------\n\nTITLE: Using Artifact Registry Client - Node.js\nDESCRIPTION: This JavaScript snippet demonstrates how to import the Artifact Registry client, create an instance, and define an asynchronous function that lists repositories from the Artifact Registry. It requires a valid project ID and location to fetch the repositories.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {ArtifactRegistryClient} = require('@google-cloud/artifact-registry');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new ArtifactRegistryClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function listsRepositories() {\n  const repositories = await client.listRepositories({\n    parent: `projects/${projectId}/locations/${location}`,\n  });\n  console.info(repositories);\n}\nlistsRepositories();\n```\n\n----------------------------------------\n\nTITLE: Deleting Big Query Export in Google Cloud Security Center - JavaScript\nDESCRIPTION: This code snippet shows how to delete a BigQuery export configuration in Google Cloud Security Center using Node.js. This operation helps in cleaning up unused configurations to maintain an organized environment. Ensure the export being deleted is no longer needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a big query export\n\nconst {SecurityCenterClient} = require('@google-cloud/security-center');\nconst client = new SecurityCenterClient();\n\nasync function deleteBigQueryExport() {\n  const request = {\n    name: 'projects/YOUR_PROJECT_ID/bigQueryExports/YOUR_EXPORT_ID', // Required\n  };\n  const [response] = await client.deleteBigQueryExport(request);\n  console.log(response);\n}\n\ndeleteBigQueryExport();\n```\n\n----------------------------------------\n\nTITLE: Using OS Config API Client Library in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the OS Config API client library to list patch deployments for a project. It imports the library, creates a client, and defines an async function to make the API call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\n\n// Creates a client\nconst client = new OsConfigServiceClient();\n\n// project = 'my-project' // Project to list deployments for.\n\nasync function listPatchDeployments() {\n  const [deployments] = await client.listPatchDeployments({\n    parent: `projects/${project}`,\n  });\n  console.info(`found ${deployments.length} deployments:`);\n  console.info(deployments);\n}\nconst listPatchDeploymentsResponse = listPatchDeployments();\n```\n\n----------------------------------------\n\nTITLE: Deleting Backtest Result - Node.js\nDESCRIPTION: This snippet provides an implementation for deleting a backtest result in the Financial Services API using Node.js. The Google Cloud client library and appropriate authentication setup are required. The input consists of the identifier for the backtest to be deleted, and the output is a confirmation of successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete backtest result\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function deleteBacktestResult() {\n    const request = { /* parameters for deletion */ };\n    const response = await client.deleteBacktestResult(request);\n    console.log(response);\n}\ndeleteBacktestResult();\n```\n\n----------------------------------------\n\nTITLE: Getting an Agent in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve information about a specific agent in Dialogflow CX. It uses the agents.get_agent method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_82\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.get_agent.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Backup Plan using GKE Backup API in Node.js\nDESCRIPTION: Sample code for updating a specific backup plan using the GKE Backup API. Used to modify configuration and settings of an existing backup plan in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.update_backup_plan.js\n```\n\n----------------------------------------\n\nTITLE: Get Device - Cloud IoT - Node.js\nDESCRIPTION: This sample shows how to retrieve a specific device using the Google Cloud IoT Device Manager in Node.js. It depends on the google-cloud-node library to interact with the IoT service. To execute the sample, appropriate authentication and project configurations are needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieving VOD Config in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This code sample shows how to get a VOD configuration using the Google Cloud Video Stitcher service. It uses the google-cloud-video-stitcher package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.get_vod_config.js\n```\n\n----------------------------------------\n\nTITLE: Updating ParallelStore Instance with Node.js\nDESCRIPTION: This snippet demonstrates how to update a ParallelStore instance using the Google Cloud Node.js client library. It uses the parallelstore.update_instance method from the v1beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-parallelstore/samples/generated/v1beta/parallelstore.update_instance.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Scan Config with Web Security Scanner in Node.js\nDESCRIPTION: This script creates a new scan configuration in Google Cloud Web Security Scanner, requiring Node.js and appropriate Google Cloud permissions. The output is the details of the newly created scan configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.create_scan_config.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB Cluster in Node.js\nDESCRIPTION: This code snippet illustrates how to delete an AlloyDB cluster using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.delete_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Enabling Certificate Authority with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet demonstrates how to enable a Certificate Authority using the Google Cloud Private CA Service API. It employs the CertificateAuthorityService client to invoke the enableCertificateAuthority method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.enable_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Searching Tasks with Delivery Service API in Node.js\nDESCRIPTION: This snippet illustrates how to search for tasks using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.search_tasks.js\n```\n\n----------------------------------------\n\nTITLE: Updating Engine Config in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update an engine configuration using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_engine_config.js`\n```\n\n----------------------------------------\n\nTITLE: Refreshing Runtime Token with Google Cloud Node.js Client\nDESCRIPTION: Sample code showing how to refresh an internal runtime token using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.refresh_runtime_token_internal.js\n```\n\n----------------------------------------\n\nTITLE: Update Gax, Fix Protos, Run Generator in Node.js\nDESCRIPTION: This commit removes eslint, updates gax, fixes generated protos, and runs the generator in the Google Cloud IoT Node.js library. These changes are aimed at improving the code quality, build process, and overall stability of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n\"* remove eslint, update gax, fix generated protos, run the generator ([#306](https://www.github.com/googleapis/nodejs-iot/issues/306)) ([8edd1b5](https://www.github.com/googleapis/nodejs-iot/commit/8edd1b51347efc7a78390702ba8bd0a714599695))\"\n```\n\n----------------------------------------\n\nTITLE: Updating Google GAX Dependency in JavaScript\nDESCRIPTION: Updates the google-gax dependency to version ^3.5.8 to fix issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"google-gax\": \"^3.5.8\"\n```\n\n----------------------------------------\n\nTITLE: Listing Dashboards with Google Cloud Monitoring Dashboards Client in Node.js\nDESCRIPTION: This example demonstrates how to initialize the Monitoring Dashboards client and list all dashboards for a specified project. It imports the client library, creates a client instance, and makes an API call to retrieve and display dashboard information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {\n  DashboardsServiceClient,\n} = require('@google-cloud/monitoring-dashboards');\n\n// Creates a client\nconst ds = new DashboardsServiceClient();\n\n// parent = 'projects/my-project', // Project to list dashboards for.\n\nasync function listDashboards() {\n  const [dashboards] = await ds.listDashboards({\n    parent,\n  });\n  console.info('Listing Dashboards:');\n  for (const dashboard of dashboards) {\n    console.info(`\\t${dashboard.displayName}`);\n  }\n}\nlistDashboards();\n```\n\n----------------------------------------\n\nTITLE: Getting Interconnect Attachment - Google Cloud Node.js\nDESCRIPTION: This script retrieves an interconnect attachment from the edge network using its ID. It requires the Google Cloud Node.js libraries to work correctly. Expected inputs include the interconnect attachment ID, and it outputs the details of the specified attachment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.get_interconnect_attachment.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Fetch the interconnect attachment\nasync function getInterconnectAttachment(id) {\n  const request = {interconnectAttachment: id};\n  const [response] = await client.getInterconnectAttachment(request);\n  console.log(response);\n}\n\ngetInterconnectAttachment('your-interconnect-attachment-id');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Client Gateways: Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a client gateway's information by its identifier using the BeyondCorp API. The Node.js environment and google-cloud-beyondcorp-clientgateways library are required. Input includes the ID of the gateway to fetch, and the output provides the gateway's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-clientgateways/samples/generated/v1/client_gateways_service.get_client_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Version 5.1.0 Release\nDESCRIPTION: New features include awaiting/catching promises and updating the listOperationsAsync return type. Bug fixes for multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [5.1.0](https://github.com/googleapis/google-cloud-node/compare/datacatalog-v5.0.0...datacatalog-v5.1.0) (2025-03-19)\n\n\n### Features\n\n* [datacatalog] await/catch promises, and update listOperationsAsync return type ([#6156](https://github.com/googleapis/google-cloud-node/issues/6156)) ([f79da88](https://github.com/googleapis/google-cloud-node/commit/f79da88b29303a18c00e8081434af4859ad91225))\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Feat: Update v1beta1 proto - Node.js\nDESCRIPTION: This code snippet updates the v1beta1 protocol buffer definitions. Updating the proto definitions ensures that the library is using the latest version of the API contract, enabling new features and bug fixes. It requires the latest proto definitions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"0d78e6c87e51c040c5f35064b53f96d1353f93b9\"\n```\n\n----------------------------------------\n\nTITLE: Creating QA Scorecard Revision with Contact Center Insights API in Node.js\nDESCRIPTION: This code snippet shows how to use the create_qa_scorecard_revision method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.create_qa_scorecard_revision.js\n```\n\n----------------------------------------\n\nTITLE: Initializing Encryption Spec with Dialogflow V2beta1\nDESCRIPTION: This code sample initializes the encryption configurations using Dialogflow V2beta1 API in Node.js. It utilizes `Encryption_spec_service.initialize_encryption_spec` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"Encryption_spec_service.initialize_encryption_spec\"\n```\n\n----------------------------------------\n\nTITLE: Listing Usable Subnetworks - JavaScript\nDESCRIPTION: This snippet retrieves all usable subnetworks within a specified region using the Cluster Manager API. Proper authentication through the Google Cloud Node.js client library is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function listUsableSubnetworks() {\n  const response = await client.listUsableSubnetworks();\n  console.log(`Usable subnetworks: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Using IAP Client Library in Node.js\nDESCRIPTION: Example demonstrating how to initialize the IAP client and list brands using the Identity-Aware Proxy OAuth Service. The code shows creating a client instance and making an API call to retrieve brands for a specific project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {IdentityAwareProxyOAuthServiceClient} = require('@google-cloud/iap');\n\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new IdentityAwareProxyOAuthServiceClient();\n\nasync function listBrands() {\n  const [brands] = await client.listBrands({\n    parent: `projects/${projectId}`,\n  });\n  console.info(brands);\n}\nlistBrands();\n```\n\n----------------------------------------\n\nTITLE: Sample Usage - Domain Management Commands\nDESCRIPTION: Example commands showing how to run individual domain management sample files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1/domains.configure_contact_settings.js\nnode packages/google-cloud-domains/samples/generated/v1/domains.configure_dns_settings.js\nnode packages/google-cloud-domains/samples/generated/v1/domains.configure_management_settings.js\n```\n\n----------------------------------------\n\nTITLE: Using Google Cloud Filestore Node.js Client\nDESCRIPTION: This Node.js snippet demonstrates how to list Filestore instances using the Google Cloud Filestore client. It requires setting up a Cloud Platform project, enabling the Filestore API, and authentication via a service account. Modify the project ID and location before running.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\n// const location = 'us-central1-a';\n\n// Imports the Google Cloud Some API library\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\nasync function listInstances() {\n  for await (const instance of client.listInstancesAsync({\n    parent: `projects/${projectId}/locations/${location}`,\n  })) {\n    console.info(instance);\n  }\n}\nlistInstances();\n```\n\n----------------------------------------\n\nTITLE: Creating Backup Plan for GKE - Node.js\nDESCRIPTION: This snippet shows how to create a backup plan for Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package as a dependency. The parameters involve the plan configuration details, including schedules and retention settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Create Backup Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.createBackupPlan(request)\n  .then(response => {\n    console.log('Backup plan created:', response);\n  })\n  .catch(err => {\n    console.error('Error creating backup plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Deleting Report Config with Storage Insights API - Node.js\nDESCRIPTION: This snippet shows how to delete a report configuration using the Google Cloud Storage Insights API in Node.js. Users must ensure they have set up the client library properly and installed necessary packages. The script is run using Node.js after navigating to the appropriate directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-storageinsights/samples/generated/v1/storage_insights.delete_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Assured Workloads Quickstart - JavaScript\nDESCRIPTION: This sample demonstrates a quick start guide to using Google Cloud Assured Workloads with Node.js. The script sets up essential connections and performs initial setup operations. Requirements include Node.js environment setup and access to Google Cloud APIs. Visit the GitHub repository to view the complete code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Executing Ekm_service.create_ekm_connection Node.js Sample\nDESCRIPTION: This sample demonstrates how to execute the `create_ekm_connection` function within the EKM Service using Node.js. It provides a command to run the sample from the command line, assuming the necessary Google Cloud KMS and Node.js environments are set up.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-kms/samples/generated/v1/ekm_service.create_ekm_connection.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Typescript Generator in WORKSPACE files\nDESCRIPTION: This commit updates the WORKSPACE files to utilize the newest version of the Typescript generator. This ensures that the project is using the latest Typescript tooling, potentially resolving build issues and improving code generation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* Updating WORKSPACE files to use the newest version of the Typescript generator. ([#68](https://www.github.com/googleapis/nodejs-managed-identities/issues/68)) ([c20fd86](https://www.github.com/googleapis/nodejs-managed-identities/commit/c20fd865b86823464b8539c4150307df465636fe))\n```\n\n----------------------------------------\n\nTITLE: Adding ID Field to Product Message in Service Health API\nDESCRIPTION: This code snippet shows a feature update where a new field 'id' is added to the .google.cloud.servicehealth.v1.Product message in the Service Health API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [servicehealth] A new field `id` is added to message `.google.cloud.servicehealth.v1.Product` ([#5843](https://github.com/googleapis/google-cloud-node/issues/5843)) ([1a3f99f](https://github.com/googleapis/google-cloud-node/commit/1a3f99fab38eb491c17f4407f9cf1676eeb2bdce))\n```\n\n----------------------------------------\n\nTITLE: Stopping Notebook Instances in Node.js\nDESCRIPTION: This snippet shows how to stop a running notebook instance using the Google Cloud Notebooks Node.js client. It requires authentication with Google Cloud and the instance ID as a key parameter. The output confirms the successful stop of the instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to stop a notebook instance\nconst {NotebookServiceClient} = require('@google-cloud/notebooks');\n\nconst client = new NotebookServiceClient();\n\nasync function stopInstance(instanceId) {\n    const request = {\n        name: `projects/my-project/locations/us-central1-a/instances/${instanceId}`,\n    };\n    const [operation] = await client.stopInstance(request);\n    await operation.promise();\n    console.log(`Instance ${instanceId} stopped.`);\n}\nstopInstance('my-notebook-instance');\n```\n\n----------------------------------------\n\nTITLE: Deploying Conversation Model in Dialogflow v2\nDESCRIPTION: Demonstrates how to deploy a conversation model in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and deploys an existing conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.deploy_conversation_model.js`\n```\n\n----------------------------------------\n\nTITLE: Listing All Batch Tasks using Google Cloud Node.js\nDESCRIPTION: This code snippet illustrates how to list all tasks of a specified batch job using the Google Cloud Batch Service. It returns an array of tasks for the job, requiring the job ID as input.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function listTasks(jobId) {\n  const [tasks] = await client.listTasks({ jobId });\n  console.log('Tasks:', tasks);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Asset Feeds with Google Cloud Asset Inventory in Node.js\nDESCRIPTION: This sample demonstrates how to list all feeds in a project using the Google Cloud Asset Inventory service v1p2beta1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-asset/samples/generated/v1p2beta1/asset_service.list_feeds.js\n```\n\n----------------------------------------\n\nTITLE: Creating Workload with Assured Workloads Service in Node.js (v1beta1)\nDESCRIPTION: This sample demonstrates how to create a workload using the Assured Workloads service v1beta1 in Node.js.  It relies on the `@google-cloud/assuredworkloads` package. The sample is meant to be executed directly using Node.js from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1beta1/assured_workloads_service.create_workload.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Node Type with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to get a node type using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.get_node_type\"\n```\n\n----------------------------------------\n\nTITLE: Creating Dataset - Node.js\nDESCRIPTION: This snippet provides an implementation for creating a dataset in the Financial Services API using Node.js. It requires the Google Cloud client library and appropriate setup for authentication. The function prepares the request with the necessary dataset parameters and logs the response after execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Create dataset\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createDataset() {\n    const request = { /* parameters for dataset */ };\n    const response = await client.createDataset(request);\n    console.log(response);\n}\ncreateDataset();\n```\n\n----------------------------------------\n\nTITLE: AutoML Get Model Evaluation in Node.js\nDESCRIPTION: This sample shows how to get a model evaluation using the AutoML API in Node.js. The `getModelEvaluation` function is called. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.get_model_evaluation\"\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to List Certificate Revocation Lists in Node.js\nDESCRIPTION: This sample shows how to list all certificate revocation lists (CRLs) using Google Cloud Certificate Authority Service. The code can be executed directly to list CRLs in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.list_certificate_revocation_lists.js\n```\n\n----------------------------------------\n\nTITLE: Submitting Config Source with Service Management API (Node.js)\nDESCRIPTION: Sample code demonstrating how to submit a configuration source using the Google Cloud Service Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-servicemanagement/samples/generated/v1/service_manager.submit_config_source.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud Network Security API. It demonstrates basic usage of the API client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing Runtime Project Attachments using Node.js\nDESCRIPTION: Sample code demonstrating how to list all runtime project attachments using the list_runtime_project_attachments method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/runtime_project_attachment_service.list_runtime_project_attachments.js\n```\n\n----------------------------------------\n\nTITLE: Getting Batch Task Details using Google Cloud Node.js\nDESCRIPTION: This snippet retrieves specific task details from a batch job in Google Cloud using the Batch Service. It needs the job and task ID as input and provides the task details as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function getTask(jobId, taskId) {\n  const [task] = await client.getTask({ jobId, taskId });\n  console.log(`Task details: ${JSON.stringify(task)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Backup Plan Information for GKE - Node.js\nDESCRIPTION: This snippet illustrates how to retrieve details of a backup plan in Google Kubernetes Engine using the Google Cloud Node.js client library. It relies on the `@google-cloud/gkebackup` package and requires the backup plan ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Backup Plan\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getBackupPlan(request)\n  .then(response => {\n    console.log('Backup plan details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving backup plan:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Scheduler Node.js Client Library\nDESCRIPTION: This command installs the Google Cloud Scheduler client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/scheduler\n```\n\n----------------------------------------\n\nTITLE: Update Googleapis dependency to v54 in Node.js\nDESCRIPTION: This commit updates the googleapis dependency to version 54 in the Google Cloud IoT Node.js library.  This update likely incorporates new features, bug fixes, or performance improvements from the googleapis library, which provides access to various Google APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency googleapis to v54 ([#360](https://www.github.com/googleapis/nodejs-iot/issues/360)) ([d4fc58a](https://www.github.com/googleapis/nodejs-iot/commit/d4fc58a9588af800556f884b8e8d3e2418eda94a))\"\n```\n\n----------------------------------------\n\nTITLE: Creating an Application in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet demonstrates how to create an application within the Google Cloud App Hub using the Node.js client library. It provides necessary parameters like application name and configuration. Expected input includes the application's details, and it outputs the newly created application object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {AppHubClient} = require('@google-cloud/apphub');\nconst client = new AppHubClient();\nconst createApplication = async () => {\n  const response = await client.createApplication({\n    name: 'my-application',\n    ...\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Feat: Support MULAW, MP3_64_KBPS, SSML mark tag - Node.js\nDESCRIPTION: This code snippet adds support for MULAW and MP3_64_KBPS audio encoding, and also supports timepointing via the SSML `<mark>` tag. This provides expanded audio encoding options and enhanced SSML support. It depends on audio encoding and SSML parsing logic.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"8826c8714498d4d87546b2d61ea9ebbcff443971\"\n```\n\n----------------------------------------\n\nTITLE: Creating Private Connection with Node.js\nDESCRIPTION: Use this JavaScript snippet to establish a private connection in VMware Engine through Node.js. Confirm all Google Cloud libraries are present. Run the script with the provided Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Detaching LUN - Google Cloud Node.js\nDESCRIPTION: This code snippet demonstrates how to detach a Logical Unit Number (LUN) in the Bare Metal Solution using Node.js. Ensure you have the necessary permissions for executing this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function detachLun() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/luns/YOUR_LUN_ID',\n  };\n  const [operation] = await client.detachLun(request);\n  await operation.promise();\n  console.log('LUN detached.');\n}\ndetachLun();\n```\n\n----------------------------------------\n\nTITLE: Updating Workload in Google Cloud Assured Workloads Service - JavaScript\nDESCRIPTION: This code snippet illustrates how to update a workload in Google Cloud Assured Workloads using JavaScript. It utilizes the Google Cloud Node.js client library. The sample requires Node.js and npm for dependencies management. Access the full code on GitHub through the given link for implementation details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/generated/v1beta1/assured_workloads_service.update_workload.js\n```\n\n----------------------------------------\n\nTITLE: List Transferable Offers using Cloud Channel Service\nDESCRIPTION: Sample code for listing transferable offers using the Cloud Channel Service API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_transferable_offers.js\n```\n\n----------------------------------------\n\nTITLE: Feature: Add Request/Response Debug Logging\nDESCRIPTION: This snippet introduces a feature to add debug logging for requests and responses within the GAPIC layer.  The templates were also updated to use gax 5 and Node 18, enhancing the library's debugging capabilities and compatibility.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\nAdd request/response debug logging to gapics, update templates to gax 5 and node 18 ([#1671](https://github.com/googleapis/google-cloud-node/issues/1671)) ([7a23322](https://github.com/googleapis/google-cloud-node/commit/7a23322530b610eec2fe4c18fe1854048f31c811))\n```\n\n----------------------------------------\n\nTITLE: Creating Generator in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Creates a new generator in Dialogflow V2beta1. The code uses the `create_generator` function, likely utilizing the Dialogflow client library. This function is responsible for sending a request to the Dialogflow API to create a new generator, including specifying necessary parameters like the generator's display name and language code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Updating BI Reservations with BigQuery Reservation Service in JavaScript\nDESCRIPTION: Demonstrates how to update BI (Business Intelligence) reservations using the BigQuery Reservation Service API in Node.js. This allows you to modify existing BI reservation properties.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-reservation/samples/generated/v1/reservation_service.update_bi_reservation.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Data Exchange - Node.js\nDESCRIPTION: This snippet shows how to delete a specific data exchange using the Analytics Hub API in Node.js. It requires the Google Cloud SDK and authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to delete a data exchange\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function deleteDataExchange() {\n  const request = {\n    name: 'projects/your-project-id/dataExchanges/your-data-exchange-id',\n  };\n  const [response] = await client.deleteDataExchange(request);\n  console.log('Data Exchange deleted:', response);\n}\n\ndeleteDataExchange();\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run linting checks and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting an Entity with Google Cloud Dataplex API using Node.js\nDESCRIPTION: This sample demonstrates how to delete an entity using the Google Cloud Dataplex Metadata Service API. It requires the google-cloud-dataplex package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/metadata_service.delete_entity.js\n```\n\n----------------------------------------\n\nTITLE: Rolling back API Spec using Registry service in Node.js\nDESCRIPTION: This snippet shows how to use the rollback_api_spec method of the Registry service in the Google Cloud Apigee Registry API. It requires the google-cloud-apigeeregistry package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.rollback_api_spec.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Dataset in AutoML with Node.js\nDESCRIPTION: This snippet provides the functionality to retrieve information about a specific dataset in AutoML using Node.js. The dataset ID must be specified, and the corresponding dataset details are returned.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst automl = require('@google-cloud/automl');\n\n// Instantiate client\nconst client = new automl.v1.AutoMlClient();\n\nasync function getDataset(projectId, computeRegion, datasetId) {\n  const request = {\n    name: client.datasetPath(projectId, computeRegion, datasetId),\n  };\n  const [response] = await client.getDataset(request);\n  console.log(`Dataset: ${JSON.stringify(response)}`);\n}\n\ngetDataset('your-project-id', 'us-central1', 'your-dataset-id');\n```\n\n----------------------------------------\n\nTITLE: Listing Reactions with Google Chat API in Node.js\nDESCRIPTION: This snippet demonstrates how to list reactions in a chat using the Google Chat API. It requires the Google Chat API client library for Node.js and proper authentication setup. The main function fetches the reactions, specifying relevant parameters to retrieve the desired data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to list reactions\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function listReactions() {\n  const res = await client.listReactions();\n  console.log(res);\n}\nlistReactions();\n```\n\n----------------------------------------\n\nTITLE: Using the Service Control API Node.js Client Library\nDESCRIPTION: Basic example demonstrating how to use the Service Control API client library to report operation results. This sample imports the client, initializes it, and calls the report method for a service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {ServiceControllerClient} = require('@google-cloud/service-control');\n\n// TODO(developer): replace with your prefered project ID and serviceName.\n// const projectId = 'my-project'\n// the service name to test, like 'pubsub.googleapis.com'\n// const serviceName = 'pubsub.googleapis.com'\n\n// Creates a client\nconst client = new ServiceControllerClient();\n\nasync function reportOperationResults() {\n  const [response] = await client.report({serviceName});\n  console.info(response);\n}\nreportOperationResults();\n```\n\n----------------------------------------\n\nTITLE: Documenting New Features in Markdown\nDESCRIPTION: Markdown syntax for listing new features added in a release, including links to issues and commit hashes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* Add IngestConversationsStats ([#3941](https://github.com/googleapis/google-cloud-node/issues/3941)) ([7d98066](https://github.com/googleapis/google-cloud-node/commit/7d98066e5335f8e089a9f193a2ec907b99b3e042))\n```\n\n----------------------------------------\n\nTITLE: Deleting Domain with Node.js\nDESCRIPTION: This snippet illustrates how to delete a domain using Node.js for the Google Cloud Managed Identities service. Dependencies include the 'google-cloud-managedidentities' Node.js package. The script performs operations that remove the specified domain, a critical task in domain lifecycle management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.delete_domain.js\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: Await/Catch Promises and Update ListOperationsAsync Return Type\nDESCRIPTION: This snippet reflects a bug fix in the Cloud Profiler library where promises were not being properly awaited or caught, and the return type of the listOperationsAsync function was updated to ensure correct error handling and data retrieval. This was a common issue across multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Patch\nCODE:\n```\n\"[Many APIs] await/catch promises, and update listOperationsAsync return type ([#6189](https://github.com/googleapis/google-cloud-node/issues/6189)) ([0eab6d4](https://github.com/googleapis/google-cloud-node/commit/0eab6d40a12aa7f387a4621c6611aa4cbc86e178))\"\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions in Google Cloud IoT - JavaScript\nDESCRIPTION: This snippet is designed to test IAM permissions for device management in Google Cloud IoT. It checks whether the current user has the required permissions to manage devices. It requires the Google Cloud IAM library, and inputs include the device ID and permissions to test, returning true or false.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/generated/v1/device_manager.test_iam_permissions.js).\n```\n\n----------------------------------------\n\nTITLE: Update googleapis dependency to v49 in Node.js\nDESCRIPTION: Updates the googleapis dependency to version 49 in the Google Cloud IoT Node.js library. This update ensures the library uses the latest available features, bug fixes, and performance improvements from the core googleapis package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency googleapis to v49 ([#327](https://www.github.com/googleapis/nodejs-iot/issues/327)) ([e1fee34](https://www.github.com/googleapis/nodejs-iot/commit/e1fee342fa0eedb2ec9f0d1c0ed9e20da2b1cd6c))\"\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for Secret Manager in Node.js (Beta)\nDESCRIPTION: This code sample demonstrates how to get the IAM policy for a secret or secret version using the Google Cloud Secret Manager service (v1beta2). It employs the get_iam_policy method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Version 0.2.0 Changelog Entry\nDESCRIPTION: Changelog entry noting Node 18 upgrade breaking change and addition of debug logging features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/parametermanager-v0.1.0...parametermanager-v0.2.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([b99c5f8](https://github.com/googleapis/google-cloud-node/commit/b99c5f8269a8401c72e9c913971c7e90467209e2))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Deleting a Repository in Google Cloud\nDESCRIPTION: This code snippet illustrates how to delete a repository from the Google Cloud Artifact Registry. Users must have appropriate roles and permissions to manage repositories. Run this code within a Node.js environment after setting up the required authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a repository\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_repository.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_repository.js\n```\n\n----------------------------------------\n\nTITLE: Rescheduling Maintenance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to reschedule maintenance for a Google Cloud SQL instance using the `reschedule_maintenance` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.reschedule_maintenance.js`\n```\n\n----------------------------------------\n\nTITLE: List Network Connectivity Spokes with Node.js\nDESCRIPTION: Lists spokes configured in the Network Connectivity Hub Service using the v1 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_spokes.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command for installing all required Node.js dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Delete Orchestration Cluster in Telco Automation API - JavaScript\nDESCRIPTION: Deletes an orchestration cluster using the Telco Automation API v1alpha1. This sample demonstrates cluster deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.delete_orchestration_cluster.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR createManagementServer Sample\nDESCRIPTION: This sample demonstrates how to create a management server using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Retriever Service: Resource Management Samples\nDESCRIPTION: Sample code for managing various resources like chunks, corpora, and documents in the Google Cloud AI Generative Language Retriever Service using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Create Chunk Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Create Corpus Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Create Document Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Delete Chunk Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Delete Corpus Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Delete Document Sample\n```\n\n----------------------------------------\n\nTITLE: Deleting a Backup in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet demonstrates how to delete a backup in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Deps: google-gax v2.24.1 - Node.js\nDESCRIPTION: This code snippet updates the `google-gax` dependency to version 2.24.1.  Updating dependencies ensures compatibility and access to the latest bug fixes and performance improvements.  It depends on the `google-gax` library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"0c93b5bd89bd983c1a9d658d22179b8732b533ed\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Private Connection with Vmware Engine in Node.js\nDESCRIPTION: This code snippet demonstrates how to delete a private connection using the Vmware Engine API in Node.js. It requires the google-cloud-vmwareengine package. The snippet assumes that you have the necessary permissions and have configured authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"Vmware_engine.delete_private_connection\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This code snippet demonstrates the deletion of a tag value using the Google Cloud Resource Manager API in Node.js. It uses the tag_values.delete_tag_value method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.delete_tag_value.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Restore Information for GKE - Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific restore operation in Google Kubernetes Engine using the Google Cloud Node.js client library. It requires the `@google-cloud/gkebackup` package and needs the restore ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Restore\nconst {BackupForGKEClient} = require('@google-cloud/gkebackup');\nconst client = new BackupForGKEClient();\nconst request = { /* your request parameters */ };\nclient.getRestore(request)\n  .then(response => {\n    console.log('Restore details:', response);\n  })\n  .catch(err => {\n    console.error('Error retrieving restore:', err);\n  });\n```\n\n----------------------------------------\n\nTITLE: Getting Dialogflow CX Intent\nDESCRIPTION: Command to retrieve a specific Dialogflow CX intent using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_112\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.get_intent.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tag in Google Cloud\nDESCRIPTION: This snippet demonstrates how to remove a tag from the Google Cloud Artifact Registry, which is crucial for resource categorization and management. Proper environment setup and Google Cloud SDK installation are required to run it successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a tag\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_tag.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_tag.js\n```\n\n----------------------------------------\n\nTITLE: Version Tag and Comparison Link\nDESCRIPTION: Markdown header showing the version number and GitHub comparison link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/gkemulticloud-v2.0.0...gkemulticloud-v2.0.1) (2025-03-21)\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting a Feedback Label with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates the deletion of a feedback label using the Contact Center Insights API. It utilizes the delete_feedback_label method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_feedback_label.js\n```\n\n----------------------------------------\n\nTITLE: Listing Management Servers - Node.js\nDESCRIPTION: This JavaScript snippet demonstrates how to list management servers using the Backup and DR Service API. It outlines the required parameters and provides an asynchronous function to retrieve server details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The project and location for which to retrieve management servers\n *  information, in the format `projects/{project_id}/locations/{location}`. In\n *  Cloud BackupDR, locations map to GCP regions, for example **us-central1**.\n *  To retrieve management servers for all locations, use \"-\" for the\n *  `{location}` value.\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filtering results.\n */\n// const filter = 'abc123'\n/**\n *  Optional. Hint for how to order the results.\n */\n// const orderBy = 'abc123'\n\n// Imports the Backupdr library\nconst {BackupDRClient} = require('@google-cloud/backupdr').v1;\n\n// Instantiates a client\nconst backupdrClient = new BackupDRClient();\n\nasync function callListManagementServers() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = backupdrClient.listManagementServersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListManagementServers();\n```\n\n----------------------------------------\n\nTITLE: Deleting SSH Key - Google Cloud Node.js\nDESCRIPTION: This code snippet shows how to delete an SSH key in the Google Cloud Bare Metal Solution. You must have appropriate permissions set up for the API to execute successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function deleteSshKey() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/sshKeys/YOUR_SSH_KEY_ID',\n  };\n  const [operation] = await client.deleteSshKey(request);\n  await operation.promise();\n  console.log('SSH Key deleted.');\n}\ndeleteSshKey();\n```\n\n----------------------------------------\n\nTITLE: Getting Stream in Google Cloud Datastream - Node.js\nDESCRIPTION: Retrieves details of a specific stream in Google Cloud Datastream. This snippet requires the Google Cloud Datastream client library and appropriate permissions to get streams.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function getStream() {\n  const request = {\n    // Parameters to identify the stream\n  };\n\n  const response = await client.getStream(request);\n  console.log('Retrieved stream:', response);\n}\n\ngetStream();\n```\n\n----------------------------------------\n\nTITLE: Converting Individual TypeScript Files\nDESCRIPTION: Command to convert specific TypeScript files to JavaScript using the typeless-sample-bot with the targets flag.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/typeless-sample-bot/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntypeless-sample-bot --targets file1.ts,file2.ts,etc\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud IoT in Node.js - JavaScript\nDESCRIPTION: This script demonstrates a quickstart guide for using Google Cloud IoT with Node.js, highlighting basic functionalities and setup. It requires the Google Cloud IoT library and other related configurations. It outputs confirmation messages and examples for device management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nView the [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/quickstart.js).\n```\n\n----------------------------------------\n\nTITLE: Updating VOD Configuration in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet updates a VOD configuration for the Google Cloud Video Stitcher service. It is useful for changing parameters related to the delivery of video content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function updateVodConfig(vodConfigId, newVodConfig) {\n  const request = { vodConfigId, ...newVodConfig };\n  const response = await client.updateVodConfig(request);\n  console.log('Updated VOD Configuration:', response);\n}\nupdateVodConfig('your-vod-config-id', { /* new VOD configuration object */ });\n```\n\n----------------------------------------\n\nTITLE: Getting a Backup using Backup for GKE API in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve information about a specific backup using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_backup.js\n```\n\n----------------------------------------\n\nTITLE: Managing Single Table Row - Update\nDESCRIPTION: Example showing how to update a single row in an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.update_row.js\n```\n\n----------------------------------------\n\nTITLE: Creating Aspect Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet shows how to create a new aspect type in the Dataplex catalog service. It requires the Google Cloud client library for Node.js and includes parameters for specifying the aspect type details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for creating an aspect type\n\n```\n\n----------------------------------------\n\nTITLE: Getting Webhook Details in Dialogflow CX - JavaScript\nDESCRIPTION: This snippet retrieves the details of a specific webhook in Dialogflow CX by its ID. It sends a request to the Dialogflow CX API to retrieve and display webhook information. Dependencies include the Dialogflow CX library. The function expects a webhook ID and returns the webhook's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_152\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {WebhooksClient} = require('@google-cloud/dialogflow-cx');\nconst client = new WebhooksClient();\n\nasync function getWebhook(webhookId) {\n  const request = {\n    name: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT/webhooks/${webhookId}`\n  };\n  const response = await client.getWebhook(request);\n  console.log('Webhook details:', response);\n}\n\ngetWebhook('WEBHOOK_ID');\n```\n\n----------------------------------------\n\nTITLE: Listing Tasks in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to list all tasks in Google Cloud Run. It uses the Tasks.list_tasks method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/tasks.list_tasks.js\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.delete_attribute sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.delete_attribute sample using Node.js. It provides the command to run the sample, which deletes an attribute from the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_attribute.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.create_external_api sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.create_external_api sample using Node.js. It provides the command to run the sample, which creates a new external API within the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.create_external_api.js`\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node Project\nDESCRIPTION: Commands to run various test suites including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Enabling Interactive Serial Console in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This code snippet enables the interactive serial console for a bare metal instance using the Google Cloud Bare Metal Solution API. Requires Node.js to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.enable_interactive_serial_console.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.enable_interactive_serial_console.js\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Participants Operations in Node.js\nDESCRIPTION: Collection of methods for participant management including suggesting smart replies and updating participant information in Dialogflow conversations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_44\n\n\n\n----------------------------------------\n\nTITLE: Installing Google Cloud IoT Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud IoT Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/iot\n```\n\n----------------------------------------\n\nTITLE: Using the Organization Policy Node.js Client Library\nDESCRIPTION: This snippet demonstrates how to initialize and use the Google Cloud Organization Policy client to list constraints for a project. It shows the basic pattern of creating a client instance and making an API call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {OrgPolicyClient} = require('@google-cloud/org-policy');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new OrgPolicyClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function listConstraints() {\n  const constraints = await client.listConstraints({\n    parent: `projects/${projectId}`,\n  });\n  console.info(constraints);\n}\nlistConstraints();\n\n```\n\n----------------------------------------\n\nTITLE: Creating Batch Job using Google Cloud Node.js\nDESCRIPTION: This code snippet provides an example of how to create a batch job using the Batch Service in Google Cloud. It requires the `@google-cloud/batch` package installed. The function takes job specifications as parameters and outputs the created job's details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function createJob(jobSpec) {\n  const [response] = await client.createJob({ job: jobSpec });\n  console.log(`Created job: ${response.name}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Customer Repricing Configuration in Google Cloud Channel Service - JavaScript\nDESCRIPTION: This snippet allows modification of a customer's repricing configuration in the Google Cloud Channel service. It's essential to have the corresponding customer ID and repricing configurations defined beforehand. Ensure necessary permissions are granted for the API access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for updating customer repricing configuration\n// Visit the link for full implementation\nconst {CloudChannelServiceClient} = require('@google-cloud/channel');\nconst client = new CloudChannelServiceClient();\n\nasync function updateRepricingConfig() {\n    // Implementation here...\n}\n```\n\n----------------------------------------\n\nTITLE: Check for Fetch on Window in Browser in Node.js\nDESCRIPTION: In the browser environment, this commit adds a check for the existence of the `fetch` function on the `window` object. This ensures that the code gracefully handles environments where the `fetch` API might not be available natively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **browser:** check for fetch on window ([84ca7b6](https://www.github.com/googleapis/nodejs-iot/commit/84ca7b6f4d6a696713e02a1f9d4b3aebb30a5589))\"\n```\n\n----------------------------------------\n\nTITLE: Updating Revocation List in Certificate Authority - JavaScript\nDESCRIPTION: This JavaScript code snippet is used to update the certificate revocation list using the Google Cloud Node.js client library. The snippet requires the appropriate library and API keys to function and involves specifying the revocation list and the updates to be made. Outputs include a confirmation of the successful update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nhttps://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.update_certificate_revocation_list.js\n```\n\n----------------------------------------\n\nTITLE: Loading JSON Protos Using require()\nDESCRIPTION: This commit modifies the library to load JSON protos using the `require()` function. This ensures proper loading of the protocol buffer definitions, which is crucial for the functionality of the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n* use require() to load JSON protos ([#47](https://www.github.com/googleapis/nodejs-managed-identities/issues/47)) ([15c5a32](https://www.github.com/googleapis/nodejs-managed-identities/commit/15c5a325dbceaa505d54165da687e9c317f7ded2))\n```\n\n----------------------------------------\n\nTITLE: Initializing Cloud Shell Client in Node.js\nDESCRIPTION: Example showing how to import and initialize the Cloud Shell client library, create a client instance, and make an initialization call. Includes placeholder for project ID configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\n// remove this line after package is released\n// eslint-disable-next-line node/no-missing-require\nconst {CloudShellServiceClient} = require('@google-cloud/shell');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\n// eslint-disable-next-line no-unused-vars\nconst client = new CloudShellServiceClient();\n\n//TODO(library generator): write the actual function you will be testing\nasync function initializeClient() {\n  const operation = await client.initialize();\n  console.info(operation);\n}\ninitializeClient();\n```\n\n----------------------------------------\n\nTITLE: Deleting Calculated Metric - Google Analytics Admin Service - JavaScript\nDESCRIPTION: The snippet demonstrates how to delete a calculated metric using the Google Analytics Admin Service. Dependencies include the Google Cloud Node.js client library for analytics admin. It requires the unique identifier of the calculated metric to be deleted as input. Successful execution results in the removal of the specified calculated metric from Google Analytics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteCalculatedMetric(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check for code style violations and potentially fix them automatically. It uses npm to execute the `fix` script defined in the `package.json` file, which typically invokes a linter like ESLint. This helps maintain consistent code style and improve code quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Service Directory Operations in Node.js\nDESCRIPTION: These snippets demonstrate how to perform operations such as creating, retrieving, updating, and deleting namespaces and services on Google Cloud Service Directory using Node.js. Each script is executed via a Node.js command. Ensure that Node.js is installed and configured for authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_namespace.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_service.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_endpoint.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_iam_policy.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_namespace.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_service.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_endpoints.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_namespaces.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.list_services.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.set_iam_policy.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.test_iam_permissions.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.update_endpoint.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.update_namespace.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.update_service.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-servicedirectory/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Making Request Optional in all Cases\nDESCRIPTION: This commit modifies the library to make the 'request' parameter optional in all function calls. This provides more flexibility and simplifies usage of the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* make request optional in all cases ([#59](https://www.github.com/googleapis/nodejs-managed-identities/issues/59)) ([e9bf7c3](https://www.github.com/googleapis/nodejs-managed-identities/commit/e9bf7c3d97394c7d491f0cab064d53e30b23d2dd))\n```\n\n----------------------------------------\n\nTITLE: Creating Instance - Node.js\nDESCRIPTION: This code demonstrates creating an instance in the Financial Services API using Node.js. It necessitates the Google Cloud client library and suitable authentication setup. The snippet sets up the instance parameters and logs the corresponding response upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Create instance\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function createInstance() {\n    const request = { /* parameters for instance */ };\n    const response = await client.createInstance(request);\n    console.log(response);\n}\ncreateInstance();\n```\n\n----------------------------------------\n\nTITLE: Deleting Node Pool - JavaScript\nDESCRIPTION: This snippet illustrates how to delete a node pool from a cluster using the Cluster Manager API. Proper authentication and parameters are required in conjunction with the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function deleteNodePool(clusterId, nodePoolId) {\n  const request = {clusterId, nodePoolId};\n  const response = await client.deleteNodePool(request);\n  console.log(`Node pool deleted: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Fix GoogleAdsError in Node.js\nDESCRIPTION: Fixes a missing GoogleAdsError issue in the Google Cloud IoT Node.js library when using a generator version after 1.3.0.  This resolves a potential error or bug related to Google Ads integration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"* GoogleAdsError missing using generator version after 1.3.0 ([#478](https://www.github.com/googleapis/nodejs-iot/issues/478)) ([5c20030](https://www.github.com/googleapis/nodejs-iot/commit/5c20030e43fdd110b87aeeabed533f6c70a03e81))\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests including unit tests, sample integration tests, and system tests for the Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-addressvalidation/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Subnet - Google Cloud Node.js\nDESCRIPTION: This script retrieves details about a specific subnet identified by its ID using the Google Cloud Node.js library. It requires the subnet ID as input and outputs the subnet details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.get_subnet.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Fetch the subnet\nasync function getSubnet(id) {\n  const request = {subnet: id};\n  const [response] = await client.getSubnet(request);\n  console.log(response);\n}\n\ngetSubnet('your-subnet-id');\n```\n\n----------------------------------------\n\nTITLE: Updating Version Number in Markdown\nDESCRIPTION: This snippet shows how version numbers are formatted in the changelog. It includes a link to compare changes between versions on GitHub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.4.1](https://github.com/googleapis/google-cloud-node/compare/fleetengine-delivery-v0.4.0...fleetengine-delivery-v0.4.1) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Fix: Better support for fallback mode - Node.js\nDESCRIPTION: This code snippet provides a bug fix that enhances the support for fallback mode within the library. Fallback mode is typically used when the preferred communication channel is unavailable. The fix likely improves the reliability and stability of the fallback mechanism.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"cece3bdb3782c3c8e8bd264fac706edc887c281b\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing IAM Policy with Node.js\nDESCRIPTION: This sample demonstrates how to analyze IAM policies using the Google Cloud Asset API. It allows users to check the IAM policies attached to their resources. It requires the Google Cloud Asset API to be set up and appropriate permissions granted.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: analyze_iam_policy.js\nconst {AssetServiceClient} = require('@google-cloud/asset').v1;\n\nasync function analyzeIAMPolicy() {\n  const client = new AssetServiceClient();\n  // Implementation details...\n}\n\nanalyzeIAMPolicy();\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs all necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deleting a Corpus with Retriever Service using Node.js\nDESCRIPTION: This snippet shows how to use the deleteCorpus method of the RetrieverService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.delete_corpus.js\n```\n\n----------------------------------------\n\nTITLE: Allowing GAX Instance in Client Constructor for JavaScript\nDESCRIPTION: Allows passing a Google API Extensions (GAX) instance to the client constructor.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nAllow passing gax instance to client constructor\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Add ServerCertFile Parameter in Node.js\nDESCRIPTION: Adds a `serverCertFile` parameter to the Google Cloud IoT Node.js library. This new parameter allows users to specify a server certificate file, potentially enhancing security or customization options for server-side configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"* add serverCertFile parameter ([#438](https://www.github.com/googleapis/nodejs-iot/issues/438)) ([e979160](https://www.github.com/googleapis/nodejs-iot/commit/e97916026e6d794b09143059203f8d3530311ffe))\"\n```\n\n----------------------------------------\n\nTITLE: List Packages - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example showing how to list packages in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.list_packages.js\n```\n\n----------------------------------------\n\nTITLE: Git Compare URLs in Markdown\nDESCRIPTION: Repository comparison URLs for tracking changes between different versions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[4.0.1](https://github.com/googleapis/google-cloud-node/compare/channel-v4.0.0...channel-v4.0.1)\n[4.0.0](https://github.com/googleapis/google-cloud-node/compare/channel-v3.6.0...channel-v4.0.0)\n[3.6.0](https://github.com/googleapis/google-cloud-node/compare/channel-v3.5.0...channel-v3.6.0)\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version 0.4.0 Changelog Entry\nDESCRIPTION: Major version update including Node 18 upgrade and debug logging features\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.4.0](https://github.com/googleapis/google-cloud-node/compare/notifications-v0.3.0...notifications-v0.4.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([388b4e2](https://github.com/googleapis/google-cloud-node/commit/388b4e20329b7f6fc0dd061dddff573c45104213))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Updating Subnet - Google Cloud Node.js\nDESCRIPTION: This script updates a specified subnet in the Google Cloud Edge Network by its ID and the update details. It requires the subnet ID and update parameters and outputs the status of the update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.update_subnet.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// Update the subnet\nasync function updateSubnet(id, updateParams) {\n  const request = {subnet: id, update: updateParams};\n  const [operation] = await client.updateSubnet(request);\n  console.log('Subnet updated:', operation);\n}\n\nupdateSubnet('your-subnet-id', {name: 'updated-subnet-name'});\n```\n\n----------------------------------------\n\nTITLE: Documenting Breaking Changes in Markdown\nDESCRIPTION: Markdown syntax for highlighting breaking changes in the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Getting Resource Allowance in Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet retrieves the current resource allowance for the batch service. It is useful for understanding resource limits before submitting batch jobs. The snippet requires the Google Cloud Client library for Node.js and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code to get resource allowance\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function getResourceAllowance() {\\n  const response = await client.getResourceAllowance();\\n  console.log(response);\\n}\\ngetResourceAllowance();\"\n```\n\n----------------------------------------\n\nTITLE: Updating Domain with Node.js\nDESCRIPTION: This snippet updates domain settings using Node.js with the Google Cloud Managed Identities service. Necessary configurations entail 'google-cloud-managedidentities' and access permissions. The script provides tools for modifying domain configurations for network and user policies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/generated/v1beta1/managed_identities_service.update_domain.js\n```\n\n----------------------------------------\n\nTITLE: Feature: Add Fields to Manage Database Encryption Update State\nDESCRIPTION: This feature introduces new fields to manage the state of database encryption updates across several APIs. These fields likely provide more granular control and visibility into the encryption update process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Text\nCODE:\n```\n[Many APIs] add several fields to manage state of database encryption update ([#5192](https://github.com/googleapis/google-cloud-node/issues/5192)) ([b926f13](https://github.com/googleapis/google-cloud-node/commit/b926f1326ea4df73c411dbeb7e529f8d9ccc3642))\n```\n\n----------------------------------------\n\nTITLE: Deleting Generator in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Deletes an existing generator in Dialogflow V2beta1. The code utilizes the `delete_generator` function, which presumably calls the Dialogflow client library to send a request to delete the specified generator by its ID or name. The sample demonstrates how to construct the delete request and handle any potential errors.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Listing Identity-Aware Proxy Clients\nDESCRIPTION: This snippet demonstrates how to list identity-aware proxy clients associated with a brand. It showcases the use of the Identity-Aware Proxy API to manage client resources. Required dependencies include the '@google-cloud/iap' package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import the IAP client library\nconst { IdentityAwareProxyOAuthServiceClient } = require('@google-cloud/iap');\n\n// Create a client\nconst client = new IdentityAwareProxyOAuthServiceClient();\n\nasync function listClients() {\n  const [clients] = await client.listIdentityAwareProxyClients();\n  console.log('Clients:', clients);\n}\nlistClients();\n```\n\n----------------------------------------\n\nTITLE: Training Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet demonstrates how to train a processor version within the Document AI service. It is necessary to configure the training input settings beforehand. The input expects processor name and training configurations; it outputs the operation details of the training job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to train processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorVersionName, trainingInput: trainingInput };\nconst [operation] = await client.trainProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. Each command should be run separately in the project's root directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-webrisk/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating Channel with Eventarc in Node.js\nDESCRIPTION: The code creates a new channel using Google Cloud Eventarc in a Node.js environment. This operation requires prior setup of authorization and environment configuration. The sample is executed via command line with Node.js dependency installed, and it outputs the creation result of the channel.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.create_channel.js\n```\n\n----------------------------------------\n\nTITLE: Running Delete Cluster Script in Node.js\nDESCRIPTION: This snippet demonstrates how to run a Node.js script to delete a Google Cloud cluster via the command line. Dependencies include Node.js and the Google Cloud SDK. The script requires cluster identification parameters and deletes the specified cluster. Output includes confirmation of cluster deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.delete_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Getting Listing - Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific listing from a data exchange using the Analytics Hub API in Node.js. Authentication must be set up correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to get a listing\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function getListing() {\n  const request = {\n    name: 'projects/your-project-id/listings/your-listing-id',\n  };\n  const [response] = await client.getListing(request);\n  console.log('Listing retrieved:', response);\n}\n\ngetListing();\n```\n\n----------------------------------------\n\nTITLE: Fix: Allow gax instance to client constructor - Node.js\nDESCRIPTION: This code snippet addresses a bug fix that allows a `gax` instance to be passed to the client constructor. This provides more flexibility in how the client is initialized and configured. It depends on the google-gax library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"df7fc1076fa70c3a41a40f18d677ea3108091e76\"\n```\n\n----------------------------------------\n\nTITLE: Enable Self-Signed JWT feature flag in Node.js\nDESCRIPTION: Enables the self-signed JWT feature flag in the Google Cloud IoT Node.js library. This introduces a new capability related to JWT authentication, potentially simplifying or enhancing the security aspects of IoT device communication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"* turns on self-signed JWT feature flag ([#509](https://www.github.com/googleapis/nodejs-iot/issues/509)) ([09350a3](https://www.github.com/googleapis/nodejs-iot/commit/09350a3b33d418c94dc36d0ff3abd1e11958fc55))\"\n```\n\n----------------------------------------\n\nTITLE: Patching SQL Instance with Node.js\nDESCRIPTION: Demonstrates how to use Node.js to patch a Google Cloud SQL instance using the `patch` method of the `Sql_instances_service` client. The sample code is executed via a simple `node` command, assuming the necessary dependencies are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-sql/samples/generated/v1beta4/sql_instances_service.patch.js`\n```\n\n----------------------------------------\n\nTITLE: List Device Config Versions - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to list the configuration versions for a device using the Google Cloud IoT Device Manager in Node.js. The google-cloud-node library facilitates interaction with the IoT service. To successfully run the sample, authentication and project configurations are necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project. It uses npm to run the test script specified in the `package.json` file, which typically invokes a testing framework like Mocha or Jest.  Passing unit tests are essential for verifying the correctness of individual components.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Feature: Add `start_time` to Profile Proto\nDESCRIPTION: This feature adds the `start_time` field to the Profile protocol buffer definition. This field likely represents the time at which the profiling session began, providing valuable context for analyzing profiling data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Text\nCODE:\n```\n[cloudprofiler] add `start_time` to Profile proto ([#5086](https://github.com/googleapis/google-cloud-node/issues/5086)) ([1fb1181](https://github.com/googleapis/google-cloud-node/commit/1fb1181f966a376c4e9f08dd779ec90aff059e80))\n```\n\n----------------------------------------\n\nTITLE: Deleting a Rule in Google Cloud\nDESCRIPTION: This snippet details the procedure to delete a rule associated with the Google Cloud Artifact Registry. It necessitates proper authentication and must be run in a Node.js context, ensuring the user has the required permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a rule\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_rule.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_rule.js\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Failover Instance in Node.js\nDESCRIPTION: Demonstrates how to trigger a failover for an AlloyDB instance using the Node.js client library. It involves setting up the AlloyDBAdmin client and invoking the `failoverInstance` method. This sample requires the proper setup and authentication of your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.failover_instance | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.failover_instance.js)\"\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.create_device in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `create_device` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.create_device.js\"\n```\n\n----------------------------------------\n\nTITLE: Canceling Operation with Cluster Manager - JavaScript\nDESCRIPTION: This snippet demonstrates how to cancel an ongoing operation on a cluster using the Cluster Manager API. It requires the Google Cloud Node.js client library to be set up and authenticated for accessing the Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function cancelOperation(operationId) {\n  const request = {operationId};\n  const response = await client.cancelOperation(request);\n  console.log(`Operation canceled: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag Template with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code example illustrates how to delete a tag template using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.delete_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Clusters with Node.js Client\nDESCRIPTION: Example showing how to initialize the Cluster Manager client and list clusters in a specified zone. This code demonstrates basic usage of the Container Engine API including project ID retrieval and cluster listing.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function main() {\n  const container = require('@google-cloud/container');\n\n  // Create the Cluster Manager Client\n  const client = new container.v1.ClusterManagerClient();\n\n  async function quickstart() {\n    const zone = 'us-central1-a';\n    const projectId = await client.getProjectId();\n    const request = {\n      projectId: projectId,\n      zone: zone,\n    };\n\n    const [response] = await client.listClusters(request);\n    console.log('Clusters: ', response);\n  }\n  quickstart();\n}\n\nmain().catch(console.error);\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node Project\nDESCRIPTION: Command to run the linter which checks for code style issues and potentially fixes them automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting Google Ads Link - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This snippet shows how to delete a Google Ads link in Google Analytics Admin Service via Node.js. The Google Cloud Node.js client library is a necessary dependency; input needed is the Google Ads link ID for the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteGoogleAdsLink(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Searching Resources using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to search all resources using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.search_all_resources.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Tag in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a tag in Google Cloud's Data Catalog service using the Node.js client library. It requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nconst {DataCatalogClient} = require('@google-cloud/datacatalog');\nconst client = new DataCatalogClient();\n\nasync function createTag() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/entryGroups/YOUR_ENTRY_GROUP_ID/entries/YOUR_ENTRY_ID',\n    tag: {\n      displayName: 'YOUR_TAG_NAME',\n      fields: {/* your tag fields */},\n    },\n  };\n  const [response] = await client.createTag(request);\n  console.log('Tag created:', response);\n}\ncreateTag();\n```\n\n----------------------------------------\n\nTITLE: Managing Notebook Environments - JavaScript/Node.js\nDESCRIPTION: Node.js code samples for managing notebook environments, including creating and deleting environments. These samples show how to manage notebook environments through the Google Cloud Notebooks API beta version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1beta1/notebook_service.create_environment.js\nnode packages/google-cloud-notebooks/samples/generated/v1beta1/notebook_service.delete_environment.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Docs: describe fallback rest option - Node.js\nDESCRIPTION: This code snippet is a documentation update that describes the fallback REST option.  This likely clarifies how to configure the library to use REST as a fallback communication method.  It depends on providing clear and accurate documentation to users.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"26bc91afb45e51486061d00517c4acb0de7aaa2e\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Delivery Vehicle with Delivery Service API in Node.js\nDESCRIPTION: This code example demonstrates how to delete a delivery vehicle using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.delete_delivery_vehicle.js\n```\n\n----------------------------------------\n\nTITLE: Markdown Version History\nDESCRIPTION: Formatted changelog entries documenting version changes, features, bug fixes and other updates for the Redis Cluster Node.js client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [0.7.1](https://github.com/googleapis/google-cloud-node/compare/redis-cluster-v0.7.0...redis-cluster-v0.7.1) (2025-03-21)\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n\n## [0.7.0](https://github.com/googleapis/google-cloud-node/compare/redis-cluster-v0.6.1...redis-cluster-v0.7.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([b99c5f8](https://github.com/googleapis/google-cloud-node/commit/b99c5f8269a8401c72e9c913971c7e90467209e2))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Version Headers Update Commit\nDESCRIPTION: Commit hash reference for updating Node.js generator to send API versions in headers for GAPICs\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372\n```\n\n----------------------------------------\n\nTITLE: Renaming a Volume using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet demonstrates how to rename a volume using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.rename_volume.js\n```\n\n----------------------------------------\n\nTITLE: Query Completion in Google Cloud Retail API\nDESCRIPTION: Example demonstrating query completion functionality using the Google Cloud Retail API. Provides autocomplete/search suggestions for retail catalogs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_68\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/completion_service.complete_query.js\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Bug Fixes in Markdown\nDESCRIPTION: This snippet demonstrates how bug fixes are documented in the changelog using Markdown. It includes a bullet point with a link to the GitHub issue and commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6188](https://github.com/googleapis/google-cloud-node/issues/6188)) ([a73cdbf](https://github.com/googleapis/google-cloud-node/commit/a73cdbfe33d5ba9952f0c87cb9d5d12ee8753dd2))\n```\n\n----------------------------------------\n\nTITLE: Clean Up Synth.py for Multi-Version in Node.js\nDESCRIPTION: Cleans up the synth.py script to better handle multiple versions of the Google Cloud IoT Node.js library. This change likely improves the build and release process for different versions of the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n\"* synth.py clean up for multiple version ([#335](https://www.github.com/googleapis/nodejs-iot/issues/335)) ([a329db2](https://www.github.com/googleapis/nodejs-iot/commit/a329db210db15e6a34b4fa6cae400b52f62dafa2))\"\n```\n\n----------------------------------------\n\nTITLE: Updating Preference Sets in Migration Center\nDESCRIPTION: Node.js example showing how to update preference sets using the Migration Center API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_preference_set.js\n```\n\n----------------------------------------\n\nTITLE: Get Rule Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to retrieve a rule set using the RuleSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/rule_set_service.get_rule_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Group in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet illustrates how to create a new entry group within the Dataplex catalog service. It requires appropriate configuration with the Google Cloud client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for creating an entry group\n\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Metadata Import in Dataproc Metastore - Node.js\nDESCRIPTION: This snippet updates metadata import in the Dataproc Metastore using Node.js. It is part of the Google Cloud Metastore package and requires Node.js to run. The expected input is the service and import metadata, leading to an update of the existing metadata import.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update metadata import\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.update_metadata_import.js\n```\n\n----------------------------------------\n\nTITLE: Listing Continuous Test Results in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to retrieve a list of continuous test results for an environment in Dialogflow CX using Node.js. The sample provides the command-line execution example for listing test results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.list_continuous_test_results.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Commands for installing the required Node.js dependencies for the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Getting a Docker Image in Google Cloud\nDESCRIPTION: This snippet illustrates how to obtain a Docker image from the Google Cloud Artifact Registry. It is essential to have the Google Cloud client libraries installed and proper permissions before running this code in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting a docker image\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_docker_image.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_docker_image.js\n```\n\n----------------------------------------\n\nTITLE: Completing Node Pool Upgrade - JavaScript\nDESCRIPTION: This snippet completes the upgrade process of a node pool using the Cluster Manager API. Proper authentication and setup with the Google Cloud Node.js client library are essential.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function completeNodePoolUpgrade(clusterId, nodePoolId) {\n  const request = {clusterId, nodePoolId};\n  const response = await client.completeNodePoolUpgrade(request);\n  console.log(`Node pool upgrade completed: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Listing Finding Type Stats with Web Security Scanner in Node.js\nDESCRIPTION: This script lists statistical data about different types of findings from a scan performed by Google Cloud Web Security Scanner. Node.js and proper authentication are required. The output includes statistical details of findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1alpha/web_security_scanner.list_finding_type_stats.js\"\n```\n\n----------------------------------------\n\nTITLE: Set IAM Policy - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to set the IAM policy for a device registry using the Google Cloud IoT Device Manager in Node.js. It utilizes the google-cloud-node library to interact with the IoT service. The sample needs appropriate authentication and project configurations to run correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Running Folder Management Sample Scripts\nDESCRIPTION: Node.js CLI commands for executing various folder-related sample scripts in the Google Cloud Resource Manager package, demonstrating operations like create, delete, get, and list folders\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/folders.create_folder.js\\nnode packages/google-cloud-resourcemanager/samples/generated/v3/folders.delete_folder.js\\nnode packages/google-cloud-resourcemanager/samples/generated/v3/folders.get_folder.js\\nnode packages/google-cloud-resourcemanager/samples/generated/v3/folders.list_folders.js\n```\n\n----------------------------------------\n\nTITLE: Creating Key Handle with Autokey JavaScript\nDESCRIPTION: This Node.js snippet demonstrates how to create a key handle using the Autokey feature in Google Cloud KMS. It requires the Google Cloud Node.js client library and appropriate API credentials. Inputs include necessary configurations for key creation, and it outputs a key handle object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Creating Node Pool - JavaScript\nDESCRIPTION: This snippet shows how to create a new node pool within a cluster using the Cluster Manager API. Requires the Google Cloud Node.js client library and setup of necessary parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function createNodePool(clusterId, nodePoolParams) {\n  const request = {clusterId, nodePoolParams};\n  const response = await client.createNodePool(request);\n  console.log(`Node pool created: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Documenting Bug Fixes in Markdown\nDESCRIPTION: This snippet demonstrates how bug fixes are documented in the changelog. It includes a brief description of the fix and a link to the related issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6190](https://github.com/googleapis/google-cloud-node/issues/6190)) ([f4866df](https://github.com/googleapis/google-cloud-node/commit/f4866dfa6ab481163150f54928a9857d2dfef948))\n```\n\n----------------------------------------\n\nTITLE: Chore: Upgrade to Node 18\nDESCRIPTION: This snippet indicates an upgrade to Node 18, likely as part of a larger maintenance effort or to align with the latest supported Node.js versions. This upgrade may bring performance improvements and new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\nUpgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Deleting Batch Job using Google Cloud Node.js\nDESCRIPTION: This snippet illustrates how to delete a batch job using the Batch Service in Google Cloud. It utilizes the `@google-cloud/batch` package and the function requires the job ID as input, returning a confirmation message upon successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function deleteJob(jobId) {\n  await client.deleteJob({ jobId });\n  console.log('Job deleted successfully');\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a File in Google Cloud\nDESCRIPTION: This snippet shows how to delete a file from the Google Cloud Artifact Registry. Proper authentication and permissions are required to execute the operation successfully. This code should be executed in a Node.js runtime.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a file\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_file.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_file.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests for the Node.js project, as defined in the package.json file under the \"test\" script. It uses the testing framework configured in the project (e.g., Mocha, Jest) to run the tests and report the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run unit tests.\\n        npm test\"\n```\n\n----------------------------------------\n\nTITLE: Initial generation of Storage Transfer Node.js library\nDESCRIPTION: This commit marks the initial generation of the Storage Transfer Node.js client library. It's a breaking change as it's the first release.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* initial generation of nodejs-storage-transfer library (#2)\n\n### Features\n\n* initial generation of nodejs-storage-transfer library ([#2](https://www.github.com/googleapis/nodejs-storage-transfer/issues/2)) ([1179aad](https://www.github.com/googleapis/nodejs-storage-transfer/commit/1179aadc343772b7b31406f1d884153a362f1c16))\n* initial stub of library ([f825ae3](https://www.github.com/googleapis/nodejs-storage-transfer/commit/f825ae32380ed31f4d64102a4554292f97aa1fc2))\n```\n\n----------------------------------------\n\nTITLE: Adding New Feature to CSS API in Markdown\nDESCRIPTION: This snippet documents the addition of a new field 'headline_offer_installment' to the Attributes message in the CSS API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.6.0](https://github.com/googleapis/google-cloud-node/compare/css-v0.5.0...css-v0.6.0) (2024-10-30)\n\n\n### Features\n\n* [css] A new field `headline_offer_installment` is added to message `.google.shopping.css.v1.Attributes` ([#5765](https://github.com/googleapis/google-cloud-node/issues/5765)) ([2fdec25](https://github.com/googleapis/google-cloud-node/commit/2fdec25aba6fc7457e77d11ee24f2f79f262a618))\n```\n\n----------------------------------------\n\nTITLE: Listing Transcoder Jobs using Node.js\nDESCRIPTION: Example of using the Transcoder API client library to list transcoder jobs. It initializes the client and calls the listJobs method, providing the project ID and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-transcoder/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// const projectId = 'my-project';\n// const location = 'us-central1';\nconst {TranscoderServiceClient} =\n  require('@google-cloud/video-transcoder').v1;\nconst client = new TranscoderServiceClient();\nasync function listJobs() {\n  const [jobs] = await client.listJobs({\n    parent: client.locationPath(projectId, location),\n  });\n  console.info('jobs:');\n  for (const job of jobs) {\n    console.info(job);\n  }\n}\nlistJobs();\n```\n\n----------------------------------------\n\nTITLE: Analyzing IAM Policy - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample demonstrates how to analyze IAM policies using the Google Cloud Asset API. It requires the Google Cloud SDK and Node.js environment to run properly. The expected output is the analysis of IAM policies for a given resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Functionality to analyze IAM policy goes here\n```\n\n----------------------------------------\n\nTITLE: Listing Node Pools - JavaScript\nDESCRIPTION: This snippet lists all node pools associated with a particular cluster using the Cluster Manager API, requiring the Google Cloud Node.js client library's setup for proper functioning.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function listNodePools(clusterId) {\n  const request = {clusterId};\n  const response = await client.listNodePools(request);\n  console.log(`Node pools: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry v4.1.0\nDESCRIPTION: Changelog entry documenting promise handling updates and new return type for listOperationsAsync across multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.1.0](https://github.com/googleapis/google-cloud-node/compare/apigee-connect-v4.0.0...apigee-connect-v4.1.0) (2025-03-19)\n\n### Features\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6182](https://github.com/googleapis/google-cloud-node/issues/6182)) ([c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf))\n```\n\n----------------------------------------\n\nTITLE: Running Tests using npm Scripts\nDESCRIPTION: Execute various tests for the Node.js project using predefined npm scripts. This includes unit tests, sample integration tests, and system tests. These commands require npm and a properly setup project environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy - Google Cloud Node.js\nDESCRIPTION: This code fetches IAM policy details for a specific resource within Google Cloud Service Directory using Node.js. Requires the `@google-cloud/service-directory` library and the resource's name for execution. The result is the full IAM policy document.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.get_iam_policy.js>\n```\n\n----------------------------------------\n\nTITLE: Listing Policy Tags in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet illustrates how to list all policy tags within a specified taxonomy in Google Cloud's Data Catalog. It requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function listPolicyTags() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/taxonomies/YOUR_TAXONOMY_ID',\n  };\n  const [response] = await client.listPolicyTags(request);\n  response.forEach(tag => console.log(tag.displayName));\n}\nlistPolicyTags();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Version with API Hub using Node.js\nDESCRIPTION: Execute this Node.js script to delete a specific version of an API from Google Cloud API Hub. You need Node.js to run this script that is part of version control and maintenance tasks, ensuring only relevant versions are kept in the repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_version.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Managed Identities with Node.js\nDESCRIPTION: This 'Quickstart' script introduces basic usage of Google Cloud Managed Identities via Node.js. It serves as a simple entry point for newcomers to manage domains and trusts, assuming installation of required Node.js dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedidentities/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter and attempts to fix any linting errors in the code. The \"fix\" script is defined in the package.json file and typically uses tools like ESLint to enforce code style and automatically fix violations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run fix\"\n```\n\n----------------------------------------\n\nTITLE: Egress Tether - Google Cloud Apigee Connect API - JavaScript\nDESCRIPTION: This snippet illustrates how to use the Tether API to manage egress in a Node.js application. It requires access to the Google Cloud client library and appropriate credentials. The input expected is the tether configuration, and the output corresponds to the egress management status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-apigeeconnect/samples/generated/v1/tether.egress.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Version in Google App Engine - Node.js\nDESCRIPTION: This snippet is responsible for updating a specific version of a service in Google App Engine. It interacts with the API to patch the version with new settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for updating a version\n// File: versions.update_version.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function updateVersion(serviceName, versionId) {\n  const res = await appengine.versions.patch({\n    name: `apps/your-app-id/services/${serviceName}/versions/${versionId}`,\n    requestBody: {\n      // Updated version details\n    }\n  });\n  console.log(res.data);\n}\n\nupdateVersion('your-service-name', 'your-version-id');\n```\n\n----------------------------------------\n\nTITLE: Update Googleapis dependency to v51 in Node.js\nDESCRIPTION: Updates the googleapis dependency to version 51 in the Google Cloud IoT Node.js library. This update integrates the newest features, bug fixes, and performance improvements from the googleapis package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency googleapis to v51 ([#339](https://www.github.com/googleapis/nodejs-iot/issues/339)) ([70b65b7](https://www.github.com/googleapis/nodejs-iot/commit/70b65b74e803e1fd8cdaed258cbc63f73a110a87))\"\n```\n\n----------------------------------------\n\nTITLE: Linting Code Changes - JavaScript\nDESCRIPTION: This snippet runs the linting process for the code changes using npm. Linting helps identify and fix issues in the code style, ensuring adherence to the project's coding standards. It's essential to run this step before submitting a pull request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Backups in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet provides functionality to list backups associated with AlloyDB instances, essential for managing data recovery. Requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listBackups() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm, the Node.js package manager. It reads the `package.json` file in the project directory to determine the required packages and their versions. This step is crucial for setting up the development environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-storageinsights/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js library project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gsuiteaddons/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. Each command should be run separately in the project directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating a Version in Google App Engine - Node.js\nDESCRIPTION: This snippet demonstrates how to create a new version of a service in Google App Engine. It utilizes the create version method from the API to deploy a new version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for creating a version\n// File: versions.create_version.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function createVersion(serviceName) {\n  const res = await appengine.versions.create({\n    parent: `apps/your-app-id/services/${serviceName}`,\n    requestBody: {\n      // Version deployment details\n    }\n  });\n  console.log(res.data);\n}\n\ncreateVersion('your-service-name');\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Dataproc Client Library\nDESCRIPTION: Command to install the Google Cloud Dataproc client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dataproc\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. Each command should be run separately in the project directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workstations/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Batch Get Assets History - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample provides functionality to batch retrieve the history of assets using the Google Cloud Asset API. It requires the Google Cloud SDK and Node.js for execution, with outputs including the historical data for specified assets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code to batch get assets history\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create Secondary Cluster in Node.js\nDESCRIPTION: Details the process of creating a secondary AlloyDB cluster using the Node.js client library. This entails setting up the AlloyDBAdmin client and calling the `createSecondaryCluster` method. Pre-configured project and authentication settings are necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_secondary_cluster | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_secondary_cluster.js)\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud Batch - JavaScript\nDESCRIPTION: This snippet serves as a quickstart guide to using the Batch service in Google Cloud. It demonstrates initializing the service client and running a simple operation. The sample requires the Google Cloud Client library and authenticated access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"// Sample code for quickstart\\nconst {BatchServiceClient} = require('@google-cloud/batch');\\nconst client = new BatchServiceClient();\\nasync function quickstart() {\\n  console.log('Quickstart for Google Cloud Batch');\\n}\\nquickstart();\"\n```\n\n----------------------------------------\n\nTITLE: Restrict Allowed Resources V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to restrict allowed resources within the Assured Workloads service (v1beta1) using the google-cloud-node library. It leverages the AssuredWorkloadsService client to configure resource restrictions for a specific workload. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Getting a Maven Artifact in Google Cloud\nDESCRIPTION: This code demonstrates how to get a Maven artifact from the Google Cloud Artifact Registry. Proper Google Cloud authentication must be set up, and this should be executed within a Node.js runtime environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting a Maven artifact\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_maven_artifact.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_maven_artifact.js\n```\n\n----------------------------------------\n\nTITLE: Installing Client Library using npm\nDESCRIPTION: This snippet demonstrates how to install the Identity and Access Management client library for Node.js using npm. Ensure that you have Node.js installed on your system to execute this command. The expected output is the successful installation of the @google-cloud/iam package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/iam\n```\n\n----------------------------------------\n\nTITLE: Getting Node Pool Details - JavaScript\nDESCRIPTION: This snippet fetches the details of a specific node pool within a cluster via the Cluster Manager API. Proper authentication is required through the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function getNodePool(clusterId, nodePoolId) {\n  const request = {clusterId, nodePoolId};\n  const response = await client.getNodePool(request);\n  console.log(`Node pool details: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Creating Entry in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet demonstrates how to create an entry in Google Cloud's Data Catalog service using the Node.js client library. The google-cloud-datacatalog package is necessary.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst {DataCatalogClient} = require('@google-cloud/datacatalog');\nconst client = new DataCatalogClient();\n\nasync function createEntry() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION/entryGroups/YOUR_ENTRY_GROUP_ID',\n    entry: {\n      displayName: 'YOUR_ENTRY_NAME',\n      type: 'YOUR_ENTRY_TYPE',\n    },\n  };\n  const [response] = await client.createEntry(request);\n  console.log('Entry created:', response);\n}\ncreateEntry();\n```\n\n----------------------------------------\n\nTITLE: Reloading a Document with Dialogflow V2beta1\nDESCRIPTION: This code sample illustrates how to reload a document using the Dialogflow V2beta1 API in Node.js.  It uses the `Documents.reload_document` method to refresh a document's data. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"Documents.reload_document\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Version in Google App Engine - Node.js\nDESCRIPTION: This snippet retrieves metadata about a specific version of a service in Google App Engine. It uses the get version method from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for getting a version\n// File: versions.get_version.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function getVersion(serviceName, versionId) {\n  const res = await appengine.versions.get({\n    name: `apps/your-app-id/services/${serviceName}/versions/${versionId}`\n  });\n  console.log(res.data);\n}\n\ngetVersion('your-service-name', 'your-version-id');\n```\n\n----------------------------------------\n\nTITLE: List Recurring Audience Lists in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to list recurring audience lists using the Alpha version of the Google Analytics Data API with Node.js. It makes use of the `alpha_analytics_data.list_recurring_audience_lists` method. Instructions for running the sample are available in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Listing Node Pools - Google Cloud Edge Container - JavaScript\nDESCRIPTION: This code snippet lists node pools associated with a specific cluster in the Google Cloud Edge Container service, requiring the appropriate Node.js environment and Google Cloud libraries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to list node pools\nconst {EdgeContainerClient} = require('@google-cloud/edge-container');\nconst client = new EdgeContainerClient();\n\nasync function listNodePools(clusterId) {\n    const [nodePools] = await client.listNodePools(clusterId);\n    console.log('Node Pools:', nodePools);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This Bash command checks the code for stylistic errors according to predefined rules and potentially fixes them. It helps maintain the code's style and quality by following the project's linting configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Serving Configs via DiscoveryEngine in Node.js\nDESCRIPTION: This sample demonstrates how to list serving configurations using the DiscoveryEngine API in a Node.js environment. It uses the `Serving_config_service.list_serving_configs` to retrieve a list of available serving configurations. Proper initialization and authentication of the DiscoveryEngine client are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_ServingConfigService_ListServingConfigs_async]\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Service in Google App Engine - Node.js\nDESCRIPTION: This snippet updates an existing service in a Google App Engine application. It calls the update service method from the API and provides the new configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for updating a service\n// File: services.update_service.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function updateService(serviceName) {\n  const res = await appengine.services.patch({\n    name: serviceName,\n    requestBody: {\n      // New configuration details\n    }\n  });\n  console.log(res.data);\n}\n\nupdateService('your-service-name');\n```\n\n----------------------------------------\n\nTITLE: Deleting an Attachment in Google Cloud\nDESCRIPTION: This snippet demonstrates how to delete an attachment from the Google Cloud Artifact Registry using Node.js. It requires the appropriate Google Cloud client libraries set up and authenticated. The code is executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting an attachment\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_attachment.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Update Googleapis dependency to v50 in Node.js\nDESCRIPTION: Updates the googleapis dependency to version 50 in the Google Cloud IoT Node.js library. This update incorporates the latest features, bug fixes, and performance enhancements from the googleapis library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** update dependency googleapis to v50 ([#334](https://www.github.com/googleapis/nodejs-iot/issues/334)) ([a5b5fcc](https://www.github.com/googleapis/nodejs-iot/commit/a5b5fcccfffe06f4cd3969ba374e67a0f2144add))\"\n```\n\n----------------------------------------\n\nTITLE: Get Recurring Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a recurring audience list using the Alpha version of the Google Analytics Data API with Node.js. It uses the `alpha_analytics_data.get_recurring_audience_list` method. Instructions for running the sample can be found in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Get Cluster Script in Node.js\nDESCRIPTION: This script retrieves information about a Google Cloud cluster using Node.js. Required inputs include the cluster identifier, and it outputs details about the specified cluster. Dependencies are similar, requiring Node.js and the Google Cloud SDK.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.get_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Checking Active Jobs - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet checks for active jobs within a specified project in Google Cloud Dataflow, providing insights into the ongoing processes. It is important for monitoring job statuses and resource allocation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to check active jobs goes here.\n```\n\n----------------------------------------\n\nTITLE: Running Dataplex Zone Actions\nDESCRIPTION: Lists zone actions using Node.js in Dataplex. Needs a correctly configured Google Cloud environment. Executes 'dataplex_service.list_zone_actions.js' to collate action details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.list_zone_actions.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Node.js Application\nDESCRIPTION: This command is used to run sample integration tests, which help verify that different parts of the application work together correctly. It is an important step after making changes to ensure full functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Updating a Space with Google Chat API in Node.js\nDESCRIPTION: This snippet provides functionality for updating a chat space in Google Chat. It outlines how to send necessary updates and the types of changes that can be made.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update a space\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateSpace(spaceId, updates) {\n  const res = await client.updateSpace(spaceId, updates);\n  console.log(res);\n}\nupdateSpace('SPACE_ID', {name: 'Updated Space Name'});\n```\n\n----------------------------------------\n\nTITLE: Breaking Change: Upgrade to Node 18\nDESCRIPTION: This entry signifies a major breaking change where the minimum supported Node.js version was upgraded to Node 18. This change may require users to update their Node.js runtime to be compatible with the newer library version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. Each command should be run in the project directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Database Migration Service Node.js Client\nDESCRIPTION: This snippet shows how to install the Cloud Database Migration Service client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dms\n```\n\n----------------------------------------\n\nTITLE: Delete Device Registry - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to delete a device registry using the Google Cloud IoT Device Manager in Node.js. It leverages the google-cloud-node library to interact with the IoT service. Proper authentication and project setup are required to run the sample successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Get Comment Operation Sample - Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve a comment using the GDC Hardware Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.get_comment.js\n```\n\n----------------------------------------\n\nTITLE: Reverting Removal of WorkerPool API\nDESCRIPTION: This snippet addresses the removal of the WorkerPool API and its subsequent reinstatement. It ensures the availability of the WorkerPool API for alpha users who rely on it.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * revert removal of WorkerPool API ([#178](https://www.github.com/googleapis/nodejs-cloudbuild/issues/178)) ([07400cb](https://www.github.com/googleapis/nodejs-cloudbuild/commit/07400cbcb05808762ab3c56c5827607cdefd43c0))\n */\n```\n\n----------------------------------------\n\nTITLE: Deleting Client Gateways: Node.js\nDESCRIPTION: This snippet illustrates the process of deleting an existing client gateway by its identifier using the BeyondCorp API. It requires the Node.js environment and the google-cloud-beyondcorp-clientgateways library. The input is the ID of the gateway to be deleted, and the expected output is a confirmation of deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-clientgateways/samples/generated/v1/client_gateways_service.delete_client_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Analyze Workload Move in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to analyze a workload move within the Assured Workloads service using the google-cloud-node library. It uses the AssuredWorkloadsService client to analyze the implications of moving a workload from one environment to another. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Client Libraries\nDESCRIPTION: Commands to run different test suites including unit tests, sample integration tests, and system tests. These commands help verify that code changes don't break existing functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Channel Group - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This code snippet illustrates the deletion of a channel group in Google Analytics using the Admin Service via Node.js. The Google Cloud Node.js client library for analytics admin is required. The snippet demands the identifier of the channel group intended for deletion and on success, the particular channel group is removed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteChannelGroup(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Creating a Lake in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to create a lake within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.create_lake.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting an Asset in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to delete an asset within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.delete_asset.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Services in Google App Engine - Node.js\nDESCRIPTION: This snippet lists the available services in a Google App Engine application. It makes a call to the Google Cloud API to retrieve service details and logs them to the console.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for listing services\n// File: services.list_services.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function listServices() {\n  const res = await appengine.services.list({\n    // Parameters for the request\n  });\n  console.log(res.data);\n}\n\nlistServices();\n```\n\n----------------------------------------\n\nTITLE: Feature: Add `ListProfiles` RPC to `ExportService`\nDESCRIPTION: This feature introduces the `ListProfiles` Remote Procedure Call (RPC) to the `ExportService`. This allows clients to retrieve a list of available profiles from the Cloud Profiler service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: Text\nCODE:\n```\n[cloudprofiler] add `ListProfiles` RPC to `ExportService` ([#4887](https://github.com/googleapis/google-cloud-node/issues/4887)) ([47c87d0](https://github.com/googleapis/google-cloud-node/commit/47c87d04ca86a56a98a85fe71b362d068b8161b0))\n```\n\n----------------------------------------\n\nTITLE: Updating Slate in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet updates the slate for the Google Cloud Video Stitcher service. It allows users to modify the visual placeholder shown during buffering or downtime.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function updateSlate(slateId, newSlate) {\n  const request = { slateId, ...newSlate };\n  const response = await client.updateSlate(request);\n  console.log('Updated Slate:', response);\n}\nupdateSlate('your-slate-id', { /* new slate object */ });\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format\nDESCRIPTION: Standard format for changelog entries showing version number, comparison link, and change categories\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/contact-center-insights-v4.0.0...contact-center-insights-v4.0.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n```\n\n----------------------------------------\n\nTITLE: Creating an Asset in Dataplex using Node.js\nDESCRIPTION: This snippet demonstrates how to create an asset within Dataplex using the Node.js client library. It assumes that the necessary Dataplex client and authentication are already set up. The code snippet shows the command to run the generated sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.create_asset.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating Repository - Node.js\nDESCRIPTION: This JavaScript code snippet provides a guide on creating a repository in Artifact Registry using the Node.js environment. Proper setup with Node.js and necessary dependencies from NPM is required. The script facilitates defining repository properties and interacting with the API to create it.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.create_repository.js`\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Create Backup in Node.js\nDESCRIPTION: Illustrates how to create an AlloyDB backup using the Node.js client library. This involves setting up the AlloyDBAdmin client and making a call to the `createBackup` method. Proper project configuration and credentials are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"Alloy_d_b_admin.create_backup | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.create_backup.js)\"\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Container Analysis Client Library - Bash\nDESCRIPTION: This snippet demonstrates how to install the Google Cloud Container Analysis client library using npm. It requires Node.js and npm to be installed on your machine. The command `npm install @google-cloud/containeranalysis` adds the client library to your project, enabling integration with Google Cloud Container Analysis functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/containeranalysis\n```\n\n----------------------------------------\n\nTITLE: Creating a Tag in Artifact Registry using Node.js\nDESCRIPTION: This snippet demonstrates how to create a tag in Google Cloud Artifact Registry. It uses the create_tag method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.create_tag.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js unit tests with npm\nDESCRIPTION: This command executes the unit tests for the project using npm. It runs the script defined under the `test` key in the `package.json` file, typically using a testing framework like Mocha or Jest.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: List Runtime Action Schemas - Google Cloud Connectors\nDESCRIPTION: Node.js script to list runtime action schemas using the Google Cloud Connectors API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.list_runtime_action_schemas.js\n```\n\n----------------------------------------\n\nTITLE: Creating NFS Share in Bare Metal Solution\nDESCRIPTION: Sample script for creating a new NFS share in Google Cloud Bare Metal Solution. Demonstrates programmatic NFS share provisioning using the Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.create_nfs_share.js\n```\n\n----------------------------------------\n\nTITLE: Updating Snapshot with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet demonstrates how to update a snapshot using the Cloud Filestore Manager in Javascript. It utilizes the google-cloud-node library to interact with the Cloud Filestore API to modify an existing snapshot.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.update_snapshot.js`\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Node 18\nDESCRIPTION: Indicates that version 5.0.0 upgraded the package to use Node 18.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code updated to work with Node 18\n```\n\n----------------------------------------\n\nTITLE: Bind Device to Gateway - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to bind a device to a gateway using the Google Cloud IoT Device Manager in Node.js. It leverages the google-cloud-node library to interact with the IoT service. The sample requires setting up authentication and project configurations to run successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Get Device Registry - Cloud IoT - Node.js\nDESCRIPTION: This sample illustrates how to retrieve a device registry using the Google Cloud IoT Device Manager in Node.js. The google-cloud-node library is used for interaction with the IoT service. Running the sample requires proper authentication and project setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Tag Template Update Script in Node.js\nDESCRIPTION: This Node.js script updates a tag template in Google Cloud Data Catalog. Run the script using the provided command to apply the changes. The script requires Node.js environment to execute.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.update_tag_template.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.2.1 Changes in Markdown\nDESCRIPTION: Documents the changes in version 0.2.1 of the Oracle Database service, including bug fixes for typings in headers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.2.1](https://github.com/googleapis/google-cloud-node/compare/oracledatabase-v0.2.0...oracledatabase-v0.2.1) (2025-02-12)\n\n\n### Bug Fixes\n\n* [Many APIs] finalize fixing typings for headers in generator ([#6013](https://github.com/googleapis/google-cloud-node/issues/6013)) ([cd3a2d4](https://github.com/googleapis/google-cloud-node/commit/cd3a2d44fc7a9b3798346162ba19df1c748fba58))\n```\n\n----------------------------------------\n\nTITLE: Querying Notebook Instance Information\nDESCRIPTION: Sample script for retrieving details of a specific Google Cloud Notebook instance using the Notebook Service API in Node.js. Allows fetching comprehensive information about a notebook instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnode packages\\/google-cloud-notebooks\\/samples\\/generated\\/v1beta1\\/notebook_service.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Getting Instance with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code sample shows how to retrieve an instance using the A_m_l.get_instance method of the Google Cloud Financial Services API. The necessary Node.js package and proper credentials are required to execute this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_instance.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests. These should be executed after installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Company Service Sample\nDESCRIPTION: Command to execute the company service creation sample code\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-talent/samples/generated/v4/company_service.create_company.js\n```\n\n----------------------------------------\n\nTITLE: Updating Permission using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to update a permission using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `updatePermission` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_69\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.update_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Updating a Generator in Node.js\nDESCRIPTION: This snippet updates an existing generator configuration in a Dialogflow agent, allowing for modifications based on changing requirements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_98\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Update generator\nconst {GeneratorsClient} = require('@google-cloud/dialogflow');\nconst client = new GeneratorsClient();\n\nasync function updateGenerator() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.updateGenerator(request);\n  console.log(response);\n}\nupdateGenerator();\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Template Field with Node.js\nDESCRIPTION: Demonstrates adding a new field to an existing tag template in Google Cloud Data Catalog using Node.js. Dependencies include the `@google-cloud/datacatalog` package. This script modifies existing tag templates by adding new fields, run from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.create_tag_template_field.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Version in Google App Engine - Node.js\nDESCRIPTION: This snippet handles the deletion of a specific version of a service in Google App Engine. It calls the delete version method from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for deleting a version\n// File: versions.delete_version.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function deleteVersion(serviceName, versionId) {\n  const res = await appengine.versions.delete({\n    name: `apps/your-app-id/services/${serviceName}/versions/${versionId}`\n  });\n  console.log(res.data);\n}\n\ndeleteVersion('your-service-name', 'your-version-id');\n```\n\n----------------------------------------\n\nTITLE: List SQL Users\nDESCRIPTION: Lists SQL users using the google-cloud-sql Node.js library. The sample demonstrates how to call the `list` method from the `Sql_users_service` to retrieve a list of users.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nSql_users_service.list\n```\n\n----------------------------------------\n\nTITLE: Updating Settings in Migration Center\nDESCRIPTION: Node.js example demonstrating how to update Migration Center settings\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_settings.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Environment\nDESCRIPTION: This snippet provides the command to install necessary dependencies for the Node.js environment before running tests or making changes. It is essential to set up the Node.js environment correctly for development purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deleting Entry Group with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code sample demonstrates how to delete an entry group using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.delete_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js library. They include unit tests, sample integration tests, and system tests. Each command serves a specific testing purpose.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Update Device Registry - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to update a device registry using the Google Cloud IoT Device Manager in Node.js. It uses the google-cloud-node library for interacting with the IoT service. Appropriate authentication and project configuration are needed to run this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Feat: Add ALAW support, improve ListVoiceRequest docs - Node.js\nDESCRIPTION: This code snippet adds support for ALAW audio encoding and improves the documentation for the `ListVoiceRequest` message. It enhances audio format support and documentation. It requires documentation and code updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"0c5217ce2882297aae399f83a444eaa6a7483811\"\n```\n\n----------------------------------------\n\nTITLE: Updating Namespace - Google Cloud Node.js\nDESCRIPTION: This script updates an existing namespace in Google Cloud's Service Directory using Node.js. It requires the `@google-cloud/service-directory` library. Input parameters include the name of the namespace and the updated configuration. Outputs the updated namespace details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.update_namespace.js>\n```\n\n----------------------------------------\n\nTITLE: Transferring Ownership using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to transfer ownership using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `transferOwnership` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_68\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.transfer_ownership.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Permission using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to delete a permission using the Google AI Generative Language API with Node.js.  This snippet shows how to execute the `deletePermission` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_65\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/permission_service.delete_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Setting Addons Configuration - JavaScript\nDESCRIPTION: This snippet sets or updates the addons configuration for a cluster using the Cluster Manager API. This operation requires the Google Cloud Node.js client library for proper functioning.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function setAddonsConfig(clusterId, addonsConfig) {\n  const request = {clusterId, addonsConfig};\n  const response = await client.setAddonsConfig(request);\n  console.log(`Addons configuration set: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Migrating from Old to New Translate Module Import Pattern in Node.js\nDESCRIPTION: Example showing the breaking change in v2.0.0 where direct module instantiation was replaced with class-based instantiation. This change was made to provide consistency with ES modules.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Old code\nconst translate = require('@google-cloud/translate')({\n  keyFilename: '...'\n});\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New code\nconst {Translate} = require('@google-cloud/translate');\nconst translate = new Translate({\n  keyFilename: '...'\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Space Notification Setting with Google Chat API in Node.js\nDESCRIPTION: This snippet illustrates how to update settings related to notifications in a chat space using the Google Chat API. It requires the space ID and the notification preferences.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update space notification setting\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateSpaceNotificationSetting(spaceId, notificationSetting) {\n  const res = await client.updateSpaceNotificationSetting(spaceId, notificationSetting);\n  console.log(res);\n}\nupdateSpaceNotificationSetting('SPACE_ID', {mentionAll: true});\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy - Google Cloud Node.js\nDESCRIPTION: Script for setting IAM policy on resources within Google Cloud Service Directory using Node.js. It involves `@google-cloud/service-directory` and needs both resource identifier and policy specifications as inputs. Confirms with setup results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.set_iam_policy.js>\n```\n\n----------------------------------------\n\nTITLE: Launch Template Dataflow API v1beta3\nDESCRIPTION: Demonstrates how to launch a template using the Dataflow API v1beta3 in Node.js. It shows the command to execute the sample code, which would typically involve setting up authentication and any necessary environment variables before running the command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/templates_service.launch_template.js`\n```\n\n----------------------------------------\n\nTITLE: Aggregated List Jobs - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet retrieves a consolidated list of all jobs across various locations in the Google Cloud Dataflow service. It is useful for obtaining an overview of job activity within a project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to retrieve the aggregated list of jobs goes here.\n```\n\n----------------------------------------\n\nTITLE: Embedding Text using Generative Language API in Node.js\nDESCRIPTION: Demonstrates how to embed text using the Google AI Generative Language API with Node.js. This snippet shows how to execute the `embed_text` function. No dependencies are explicitly shown, but it relies on the `@google-ai-generativelanguage` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_72\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1beta3/text_service.embed_text.js`\n```\n\n----------------------------------------\n\nTITLE: Starting a Scan Run with Web Security Scanner in Node.js\nDESCRIPTION: This script initiates a scan run given a scan configuration in Google Cloud Web Security Scanner. It requires Node.js and proper authentication setup through Google Cloud SDKs. The expected output is the initiation of a scan and the return of the scan run details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.start_scan_run.js\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Version in Google Cloud\nDESCRIPTION: This snippet shows how to delete a specific version of an artifact from the Google Cloud Artifact Registry. Ensure authentication is configured properly. Execute this JavaScript code in a Node.js environment to perform the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for deleting a version\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_version.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.delete_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating Tag - Node.js\nDESCRIPTION: This Node.js script is designed to create a tag within the Artifact Registry framework. Ensure the Node environment is configured, with all required packages installed. The provided code facilitates tagging an artifact to manage and organize repositories effectively.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.create_tag.js`\n```\n\n----------------------------------------\n\nTITLE: Create Recurring Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to create a recurring audience list using the Alpha version of the Google Analytics Data API with Node.js. It utilizes the `alpha_analytics_data.create_recurring_audience_list` method, and instructions for running the sample are in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Get EKM Connection JavaScript\nDESCRIPTION: Fetches details of a specific EKM connection in Google Cloud KMS using Node.js. The user must install necessary npm packages and provide correct API credentials. Outputs the properties of the EKM connection upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Node.js Application\nDESCRIPTION: This snippet provides commands to run different types of tests, including unit tests, sample integration tests, and system tests, ensuring that code changes do not break existing functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Create EKM Connection JavaScript\nDESCRIPTION: Demonstrates creating an EKM (External Key Manager) connection in Google Cloud KMS using a Node.js script. Requires google-cloud-node library and a valid API key. Takes connection details as input and outputs the created connection object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Listing Space Events with Google Chat API in Node.js\nDESCRIPTION: This snippet illustrates how to list space events in Google Chat using the API client for Node.js. It requires authentication and the appropriate API access to fetch space events for a given chat space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to list space events\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function listSpaceEvents() {\n  const res = await client.listSpaceEvents();\n  console.log(res);\n}\nlistSpaceEvents();\n```\n\n----------------------------------------\n\nTITLE: Deleting IAM Policy - Node.js\nDESCRIPTION: This snippet illustrates how to delete an IAM policy specified by its name using the Google Cloud Node.js client library. It requires the `google-iam` package. The input is the policy name, and there is no output on successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.delete_policy.js\n```\n\n----------------------------------------\n\nTITLE: Importing Taxonomies in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet shows how to import taxonomies into Google Cloud's Data Catalog service. The implementation requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerSerializationClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerSerializationClient();\n\nasync function importTaxonomies() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n    taxonomies: [/* your taxonomies here */],\n  };\n  const [response] = await client.importTaxonomies(request);\n  console.log('Taxonomies imported:', response);\n}\nimportTaxonomies();\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for New Features in Markdown\nDESCRIPTION: This snippet illustrates how new features are documented in the changelog using Markdown. It includes a bullet point with a brief description and the commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([b99c5f8](https://github.com/googleapis/google-cloud-node/commit/b99c5f8269a8401c72e9c913971c7e90467209e2))\n```\n\n----------------------------------------\n\nTITLE: Getting Violation with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a violation using the Assured Workloads service in Node.js. It needs the `@google-cloud/assuredworkloads` package and proper authentication setup. The command shows how to execute this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.get_violation.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.list_device_registries in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `list_device_registries` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.list_device_registries.js\"\n```\n\n----------------------------------------\n\nTITLE: Searching Deployment Revisions with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to search deployment revisions using the Google Telco Automation API. It provides the command to execute the sample code that searches for specific deployment revisions based on criteria.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.search_deployment_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Create Workload V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to create a workload within the Assured Workloads service (v1beta1) using the google-cloud-node library. It uses the AssuredWorkloadsService client to create a new workload with the specified configurations. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Live Configuration in Google Cloud Video Stitcher - JavaScript\nDESCRIPTION: This snippet updates the live configuration for the Google Cloud Video Stitcher service. It is aimed at users who need to modify live streaming setups.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst {VideoStitcherServiceClient} = require('@google-cloud/video-stitcher');\n\nconst client = new VideoStitcherServiceClient();\nasync function updateLiveConfig(configId, newLiveConfig) {\n  const request = { configId, ...newLiveConfig };\n  const response = await client.updateLiveConfig(request);\n  console.log('Updated Live Configuration:', response);\n}\nupdateLiveConfig('your-config-id', { /* new live configuration object */ });\n```\n\n----------------------------------------\n\nTITLE: Deleting a Workload with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This code sample illustrates how to delete a workload in the Google Cloud App Hub using the Node.js client library. Be sure that all dependencies and configurations are met prior to execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.delete_workload.js\n```\n\n----------------------------------------\n\nTITLE: Suggesting Knowledge Assists - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to suggest knowledge assists for a participant in a Dialogflow session. It utilizes the Dialogflow API to analyze the current context and provide relevant knowledge answers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_109\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Suggests knowledge assists for a participant.\nconst {ParticipantsClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new ParticipantsClient();\n\nasync function suggestKnowledgeAssist() {\n  // Implementation logic here\n}\n\nsuggestKnowledgeAssist();\n```\n\n----------------------------------------\n\nTITLE: Deleting Data Stream - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This Node.js code provides a way to delete a data stream in Google Analytics through the Admin Service. It depends on the Google Cloud Node.js client library. A data stream identifier is needed as input, and its execution deletes the designated data stream.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteDataStream(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating Service - Google Cloud Node.js\nDESCRIPTION: This Node.js script demonstrates how to update an existing service in the Google Cloud Service Directory. It depends on the `@google-cloud/service-directory` library and requires service name and updated parameters as inputs. The output provides the updated service details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.update_service.js>\n```\n\n----------------------------------------\n\nTITLE: Get Space Read State - Chat Service - Node.js\nDESCRIPTION: This sample shows how to retrieve the read state of a user in a specific Google Chat space using Node.js. It utilizes the `get_space_read_state` method of the `Chat_service` to determine if a user has read the latest messages in the space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Completing IP Rotation - JavaScript\nDESCRIPTION: This snippet completes the IP rotation process for a cluster using the Cluster Manager API. It requires the proper authentication and setup of the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function completeIPRotation(clusterId) {\n  const request = {clusterId};\n  const response = await client.completeIPRotation(request);\n  console.log(`IP rotation completed: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests. These ensure code quality and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Versions in Google App Engine - Node.js\nDESCRIPTION: This snippet lists all versions of a specific service in Google App Engine. It taps into the list versions method from the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for listing versions\n// File: versions.list_versions.js\n\nconst {google} = require('googleapis');\nconst appengine = google.appengine('v1');\n\nasync function listVersions(serviceName) {\n  const res = await appengine.versions.list({\n    parent: `apps/your-app-id/services/${serviceName}`\n  });\n  console.log(res.data);\n}\n\nlistVersions('your-service-name');\n```\n\n----------------------------------------\n\nTITLE: Listing Models with Model Service in JavaScript\nDESCRIPTION: This sample demonstrates how to list available models using the ModelService in the google-ai-generativelanguage package. It provides the command to execute the sample, which fetches and displays the available models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.list_models.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Generators in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Lists available generators in Dialogflow V2beta1. The code snippet utilizes the `list_generators` function, which presumably leverages the Dialogflow client library to send a request to the Dialogflow API. It retrieves the list of available generators and handles pagination, if needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Version Control Commit References\nDESCRIPTION: Git commit hashes referencing specific changes in the codebase across multiple versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\n86f2d90ea924f6067e08299635e051c5dd03a1a2\ne05d7ff66b12d2b14a7e65fba355f64f5ce578f0\n7dcae38bf3dd3f52656c98b7f342a068e0bc4577\n668c16f5c2773ebd580930d3e97c8c3328852688\n6d4541373dbc0ca6da27903666ad1ec8d1fbefed\n```\n\n----------------------------------------\n\nTITLE: Listing Environments in Dialogflow V2beta1 with Node.js\nDESCRIPTION: Lists available environments in Dialogflow V2beta1. The code snippet utilizes the `list_environments` function, which presumably leverages the Dialogflow client library to send a request to the Dialogflow API. It retrieves the list of available environments and handles pagination, if needed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n\"\"\n```\n\n----------------------------------------\n\nTITLE: Listing Routers - Google Cloud Node.js\nDESCRIPTION: This script retrieves a list of all routers in the Google Cloud Edge Network, without requiring parameters, and displays their details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Edge_network.list_routers.js\n\n// Required dependencies\nconst {EdgeNetworkServiceClient} = require('@google-cloud/edgenetwork');\nconst client = new EdgeNetworkServiceClient();\n\n// List all routers\nasync function listRouters() {\n  const [routers] = await client.listRouters({});\n  console.log('Routers:', routers);\n}\n\nlistRouters();\n```\n\n----------------------------------------\n\nTITLE: Creating Attachment - Node.js\nDESCRIPTION: This sample code demonstrates how to create an attachment in the Artifact Registry using Node.js. The Node environment and associated NPM dependencies must be properly set up beforehand. The script initializes an attachment entity and interacts with the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.create_attachment.js`\n```\n\n----------------------------------------\n\nTITLE: Batch Run Pivot Reports in Analytics Data API (Beta) with Node.js\nDESCRIPTION: This sample demonstrates how to batch run pivot reports using the Beta version of the Google Analytics Data API with Node.js. It makes use of the `beta_analytics_data.batch_run_pivot_reports` method. Consult the README.md file for execution instructions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet illustrates how to install required dependencies using npm for setting up the Node.js environment for the project. Prior to executing tests, the dependencies must be installed to ensure all required libraries and packages are available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating a Message with Google Chat API in Node.js\nDESCRIPTION: This snippet shows how to update a message in Google Chat using the API. It includes parameters for identifying the message to be updated and the new content.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update a message\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateMessage(messageId, newContent) {\n  const res = await client.updateMessage({messageId, content: newContent});\n  console.log(res);\n}\nupdateMessage('MESSAGE_ID', 'Updated content');\n```\n\n----------------------------------------\n\nTITLE: Getting Effective Event Threat Detection Custom Module with Security Center API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve an effective event threat detection custom module using the Google Cloud Security Center API. This shows the actual module being applied based on inheritance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_effective_event_threat_detection_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Recording Action on Comment in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to record an action on a comment using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which records an action on a comment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.record_action_on_comment.js`\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.deleteReferenceImage method with Google Cloud Vision API v1p3beta1 in JavaScript\nDESCRIPTION: Sample code demonstrating how to delete a reference image from a product in Google Cloud Vision API. This removes a specific visual example of a product used for matching during visual search.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.delete_reference_image.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Display Video 360 Advertiser Link - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This JavaScript snippet highlights how to delete a Display Video 360 advertiser link using the Admin Service in Node.js. The Google Cloud Node.js client library is a dependency. Requires the identifier of the advertiser link to remove it from Google Analytics.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteDisplayVideo360AdvertiserLink(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Executing Device_manager.list_device_states in Node.js\nDESCRIPTION: This snippet demonstrates how to execute the `list_device_states` sample for the Google Cloud IoT Device Manager using Node.js. It involves navigating to the samples directory and running the specific JavaScript file using the `node` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"node packages/google-cloud-iot/samples/generated/v1/device_manager.list_device_states.js\"\n```\n\n----------------------------------------\n\nTITLE: Updating Google GAX Dependency with mTLS Support in Node.js Cloud Shell Client\nDESCRIPTION: This code snippet shows a commit updating the google-gax dependency to version 2.17.0 with mTLS support in the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n**deps:** google-gax v2.17.0 with mTLS ([#16](https://www.github.com/googleapis/nodejs-cloud-shell/issues/16)) ([8a0d38d](https://www.github.com/googleapis/nodejs-cloud-shell/commit/8a0d38df49000efdaa011f82cdc0f26af9c0468d))\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Target Creation Sample in Node.js\nDESCRIPTION: This snippet serves to execute the target creation sample in the Google Cloud Deploy Node.js library. Before running the script, ensure Node.js is set up, and the library is available. The script initiates a process to create a deployment target.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.create_target.js\n```\n\n----------------------------------------\n\nTITLE: Feat: Drop node8 support - Node.js\nDESCRIPTION: This code snippet removes support for Node.js version 8. This breaking change signifies that the library will no longer be tested or guaranteed to function correctly on Node.js 8. It requires Node.js v10+.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"21e359885c39d4dfc6ed0a231fd66d35628fa0cb\"\n```\n\n----------------------------------------\n\nTITLE: Running Get JSON Web Keys Script in Node.js\nDESCRIPTION: This Node.js script retrieves JSON web keys for a specified cluster. It requires Node.js, Google Cloud SDK, and relevant cluster parameters. The output consists of JSON web key data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.get_j_s_o_n_web_keys.js\n```\n\n----------------------------------------\n\nTITLE: Query Audience List in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to query an audience list using the Alpha version of the Google Analytics Data API with Node.js. The `alpha_analytics_data.query_audience_list` method is used. Instructions for running the sample can be found in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests. These should be executed to ensure code quality before submitting a pull request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Config.export_revision_statefile in Node.js\nDESCRIPTION: Illustrates exporting a revision statefile using the Infrastructure Manager API Config client in Node.js. This sample shows how to use the export_revision_statefile method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.export_revision_statefile.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Get Node Type in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_node_type sample for the VMware Engine API. This retrieves details about a specific node type available in VMware Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_node_type.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fetching Data Attribute Binding - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet fetches a data attribute binding from Google Cloud Dataplex. It utilizes the Data_taxonomy_service to retrieve specific attribute bindings based on provided identifiers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to get data attribute binding\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function getDataAttributeBinding() {\n  const request = {name: 'name_of_the_data_attribute_binding'};\n  const [response] = await client.getDataAttributeBinding(request);\n  console.log(response);\n}\ngetDataAttributeBinding();\n```\n\n----------------------------------------\n\nTITLE: Get Space Notification Setting - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to retrieve notification settings for a specific space in Google Chat using Node.js. It involves calling the `get_space_notification_setting` method of the `Chat_service` to retrieve the notification preferences for a given space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Updating Hardware Group in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to update a hardware group using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which updates the specified hardware group.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.update_hardware_group.js`\n```\n\n----------------------------------------\n\nTITLE: Signaling Zone State in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to signal the state of a zone using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which signals the zone state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.signal_zone_state.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Discovered Workload with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This code sample demonstrates how to get a discovered workload within the Google Cloud App Hub using the Node.js client SDK. It is essential to have the environment and libraries set up previously.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_discovered_workload.js\n```\n\n----------------------------------------\n\nTITLE: Getting Volume Details from Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This code snippet fetches details of a specific volume associated with a bare metal instance using the API. Execution requires a Node.js setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_volume.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.get_volume.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Session Information with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for retrieving session information using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionController.getSession method to get details about a specific interactive session.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_controller.get_session.js\n```\n\n----------------------------------------\n\nTITLE: List Runtime Entity Schemas - Google Cloud Connectors\nDESCRIPTION: Node.js script to list runtime entity schemas using the Google Cloud Connectors API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-connectors/samples/generated/v1/connectors.list_runtime_entity_schemas.js\n```\n\n----------------------------------------\n\nTITLE: Project Service Operations - Node.js Google Cloud Retail\nDESCRIPTION: Sample files for managing project configurations in Google Cloud Retail, including alert config operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nProject_service.get_alert_config\nProject_service.update_alert_config\n```\n\n----------------------------------------\n\nTITLE: Listing Delivery Pipelines with Google Cloud Deploy Node.js Client\nDESCRIPTION: This code demonstrates how to use the Google Cloud Deploy client library to list delivery pipelines. It includes importing the library, instantiating a client, constructing a request, and iterating through the results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent, which owns this collection of pipelines. Format must be\n *  projects/{project_id}/locations/{location_name}.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of pipelines to return. The service may return\n *  fewer than this value. If unspecified, at most 50 pipelines will\n *  be returned. The maximum value is 1000; values above 1000 will be set\n *  to 1000.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListDeliveryPipelines` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other provided parameters match\n *  the call that provided the page token.\n */\n// const pageToken = 'abc123'\n/**\n *  Filter builds to be returned. See https://google.aip.dev/160 for more\n *  details.\n */\n// const filter = 'abc123'\n/**\n *  Field to sort by. See https://google.aip.dev/132#ordering for more details.\n */\n// const orderBy = 'abc123'\n\n// Imports the Deploy library\nconst {CloudDeployClient} = require('@google-cloud/deploy').v1;\n\n// Instantiates a client\nconst deployClient = new CloudDeployClient();\n\nasync function listDeliveryPipelines() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await deployClient.listDeliveryPipelinesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\nlistDeliveryPipelines();\n```\n\n----------------------------------------\n\nTITLE: Getting a Service in Google Cloud App Hub - JavaScript\nDESCRIPTION: This code snippet shows how to retrieve a service from Google Cloud App Hub. It requires the service ID as input and returns the details of the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getService = async (serviceId) => {\n  const response = await client.getService({\n    id: serviceId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud TPU in Node.js\nDESCRIPTION: This code snippet provides a quickstart guide for using Google Cloud TPU with Node.js. It demonstrates basic setup and usage of the TPU client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating Trust Configs with Google Cloud Certificate Manager in Node.js\nDESCRIPTION: This code snippet demonstrates updating trust configurations using the Google Cloud Certificate Manager client library for Node.js. It requires the google-cloud-certificatemanager package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.update_trust_config.js\n```\n\n----------------------------------------\n\nTITLE: Resuming Patch Deployment - Google Cloud OS Config - JavaScript\nDESCRIPTION: This snippet resumes a previously paused patch deployment using the OS Config service in Google Cloud. It uses the Node.js client library to facilitate the action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n// sample code for resuming patch deployment\nconst {OsConfigServiceClient} = require('@google-cloud/os-config');\nconst client = new OsConfigServiceClient();\n\nasync function resumePatchDeployment(deploymentId) {\n    const request = {name: deploymentId};\n    await client.resumePatchDeployment(request);\n    console.log(`Resumed patch deployment: ${deploymentId}`);\n}\nresumePatchDeployment('PATCH_DEPLOYMENT_ID');\n```\n\n----------------------------------------\n\nTITLE: Creating v1 AssetServiceClient in Node.js\nDESCRIPTION: This code snippet demonstrates how to create a v1 AssetServiceClient using the @google-cloud/asset library in Node.js. It requires the @google-cloud/asset package to be installed. The snippet initializes the client for interacting with the Google Cloud Asset API v1.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst asset = require('@google-cloud/asset');\nconst client = new asset.v1.AssetServiceClient();\n```\n\n----------------------------------------\n\nTITLE: Enrolling in a Solution - Google Cloud Retail - JavaScript\nDESCRIPTION: This sample shows how to enroll in a solution using Google Cloud Retail services. It requires Node.js setup with the appropriate libraries. Input details of the solution to enroll, and the output is confirmation of successful enrollment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: javascript\nCODE:\n```\nrequire('google-cloud-retail');\n// Sample Code for enrolling in a solution\n```\n\n----------------------------------------\n\nTITLE: Creating Offline Profiles using Cloud Profiler API - Node.js\nDESCRIPTION: This snippet allows users to create offline profiles with the Google Cloud Profiler API in Node.js. It's useful for profiling applications that do not run continuously or require on-demand profiling.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-cloudprofiler/samples/generated/v2/profiler_service.create_offline_profile.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Cluster - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a specified cluster using the Cluster Manager API, requiring the Google Cloud Node.js client library configured with appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function deleteCluster(clusterId) {\n  const request = {clusterId};\n  const response = await client.deleteCluster(request);\n  console.log(`Cluster deleted: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Fulfillment in Node.js\nDESCRIPTION: This snippet updates the fulfillment settings for a Dialogflow agent, allowing developers to control how their agent responds to user intents through fulfillment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_93\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code - Update fulfillment\nconst {FulfillmentsClient} = require('@google-cloud/dialogflow');\nconst client = new FulfillmentsClient();\n\nasync function updateFulfillment() {\n  const request = {\n    // Define request parameters\n  };\n  const [response] = await client.updateFulfillment(request);\n  console.log(response);\n}\nupdateFulfillment();\n```\n\n----------------------------------------\n\nTITLE: Fix: Use require() to load JSON protos - Node.js\nDESCRIPTION: This code snippet changes the way JSON protos are loaded to use the `require()` function. It ensures that JSON proto files are loaded correctly. It addresses proto loading.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"5046bb9e223e8effe5a9a414783e1e482c8f8b4c\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Service Project Attachment from App Hub - Node.js\nDESCRIPTION: This snippet retrieves the project attachment associated with a specific service in App Hub. It helps in managing the relationship between services and projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.get_service_project_attachment.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_service_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Creating Workload with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to create a workload using the Assured Workloads service in Node.js.  It relies on the `@google-cloud/assuredworkloads` package. The sample is meant to be executed directly using Node.js from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.create_workload.js`\n```\n\n----------------------------------------\n\nTITLE: Verifying Attestation with Confidential Computing API (v1alpha1) in Node.js\nDESCRIPTION: This code example demonstrates how to verify an attestation using the alpha version (v1alpha1) of the Confidential Computing API. It requires the google-cloud-confidentialcomputing package and proper Google Cloud credential configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-confidentialcomputing/samples/generated/v1alpha1/confidential_computing.verify_attestation.js\n```\n\n----------------------------------------\n\nTITLE: Updating Order in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to update an order using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which updates the specified order.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.update_order.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Batch Job Details using Google Cloud Node.js\nDESCRIPTION: This code snippet helps retrieve details about a specific batch job using the Google Cloud Batch Service. It requires the Batch client and the job ID as input, returning the job's details as output.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BatchServiceClient } = require('@google-cloud/batch');\nconst client = new BatchServiceClient();\n\nasync function getJob(jobId) {\n  const [job] = await client.getJob({ jobId });\n  console.log(`Job details: ${JSON.stringify(job)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Create Web Data Stream in Analytics Admin using Node.js\nDESCRIPTION: This code sample shows how to create a web data stream using the Google Analytics Admin API with Node.js. The `createWebDataStream` method is invoked from the `AnalyticsAdminServiceClient` to accomplish this.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_web_data_stream.js)\n```\n\n----------------------------------------\n\nTITLE: Fetching Data Taxonomy - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet retrieves a specific data taxonomy using the Data_taxonomy_service. The purpose is to get details related to the taxonomy, given its identifier.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to get data taxonomy\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function getDataTaxonomy() {\n  const request = {name: 'name_of_the_data_taxonomy'};\n  const [response] = await client.getDataTaxonomy(request);\n  console.log(response);\n}\ngetDataTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Listing Operations - JavaScript\nDESCRIPTION: This snippet lists all operations that have been executed via the Cluster Manager API. It requires the Google Cloud Node.js client library for authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function listOperations() {\n  const response = await client.listOperations();\n  console.log(`Operations: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Automation Deletion Sample in Node.js\nDESCRIPTION: The snippet demonstrates how to execute the script for deleting an automation using the Node.js platform. Required setup includes Node.js and a local copy of the samples. This script deletes a specified automation resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_automation.js\n```\n\n----------------------------------------\n\nTITLE: Resizing Node Groups with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for resizing node groups using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the NodeGroupController.resizeNodeGroup method to adjust the size of an existing node group in a Dataproc cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/node_group_controller.resize_node_group.js\n```\n\n----------------------------------------\n\nTITLE: Update Autokey Configuration JavaScript\nDESCRIPTION: Updates the Autokey configuration in Google Cloud KMS through a Node.js script. Necessary components include Google Cloud SDK and application credentials. The script modifies settings based on provided configuration and outputs confirmation of changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Enhancing Node.js AI Platform Library\nDESCRIPTION: Introduces various enhancements to the Google Cloud AI Platform Node.js client library. These improvements are part of version 1.1.0, released on January 7, 2021.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* adds enhancements to library ([#22](https://www.github.com/googleapis/nodejs-ai-platform/issues/22)) ([b697a38](https://www.github.com/googleapis/nodejs-ai-platform/commit/b697a38f696ab14b3a7ce9563f2ed5449eeeab4f))\n```\n\n----------------------------------------\n\nTITLE: Installing the Merchant API Node.js Client Library\nDESCRIPTION: Command to install the Merchant API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/lfp\n```\n\n----------------------------------------\n\nTITLE: Running List Node Pools Script in Node.js\nDESCRIPTION: This script lists all node pools within a specific cluster using Node.js. Prerequisites include Node.js, Google Cloud SDK, and the cluster identifier. Output is a list of node pools.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.list_node_pools.js\n```\n\n----------------------------------------\n\nTITLE: Updating Policy Binding - Node.js\nDESCRIPTION: This snippet provides a method to update an existing policy binding using the Google Cloud Node.js client library. It requires the `google-iam` package. Input is the updated binding details, and the output is the updated policy binding object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.update_policy_binding.js\n```\n\n----------------------------------------\n\nTITLE: Using Google Chat API - Space Operations\nDESCRIPTION: Sample commands for executing Google Chat API space-related operations including getting spaces, listing spaces, searching spaces and managing space settings using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-chat/samples/generated/v1/chat_service.get_space.js\nnode packages/google-chat/samples/generated/v1/chat_service.list_spaces.js\nnode packages/google-chat/samples/generated/v1/chat_service.search_spaces.js\nnode packages/google-chat/samples/generated/v1/chat_service.set_up_space.js\nnode packages/google-chat/samples/generated/v1/chat_service.update_space.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Deps: require google-gax v2.12.0 - Node.js\nDESCRIPTION: This code snippet updates the `google-gax` dependency to version 2.12.0 using `require()`. It pins the library to a specific version. It depends on the google-gax library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"077490cb19e0cd3835c449392556131b3e1e9373\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the project, including unit tests, sample integration tests, and system tests. These tests ensure code quality and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version 5.0.0 Release (Breaking Change)\nDESCRIPTION: Major version upgrade to Node 18. This is a breaking change.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [5.0.0](https://github.com/googleapis/google-cloud-node/compare/datacatalog-v4.7.0...datacatalog-v5.0.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud IDS Node.js Client Library via npm\nDESCRIPTION: This code snippet shows how to install the Cloud IDS client library for Node.js using npm. It is a prerequisite to using the client in your application. Ensure you have Node.js and npm installed on your system before running this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/ids\n```\n\n----------------------------------------\n\nTITLE: List Audience Lists in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to list audience lists using the Alpha version of the Google Analytics Data API with Node.js. It uses the `alpha_analytics_data.list_audience_lists` method. The README.md file contains instructions on how to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Version Comparison in Markdown\nDESCRIPTION: This snippet shows how version comparisons are formatted in the changelog using Markdown syntax. It includes links to GitHub compare views for each version update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.3.1](https://github.com/googleapis/google-cloud-node/compare/quota-v0.3.0...quota-v0.3.1) (2025-03-21)\n```\n\n----------------------------------------\n\nTITLE: Regenerating GAPIC clients using synth.py\nDESCRIPTION: This snippet triggers the regeneration of the Google API Client Libraries for the specified versions using the synthesis Python script. This is crucial to ensure that clients are up-to-date with the latest API specifications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n- Regenerate GAPIC for V1 and V2Beta1 using synth.py (#110)\n```\n\n----------------------------------------\n\nTITLE: Listing Spaces with Google Chat API in Node.js\nDESCRIPTION: This snippet shows how to retrieve a list of chat spaces using the Google Chat API with Node.js. It includes necessary authentication and client setup to successfully call the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to list spaces\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function listSpaces() {\n  const res = await client.listSpaces();\n  console.log(res);\n}\nlistSpaces();\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Section in Markdown\nDESCRIPTION: This snippet shows how breaking changes are highlighted in the changelog using Markdown formatting, including a warning symbol and a link to the related GitHub issue.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes system tests, which are end-to-end tests that verify the entire system functionality.  The `npm run system-test` command invokes a script defined in `package.json` which executes the tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running List Usable Subnetworks Script in Node.js\nDESCRIPTION: This script generates a list of usable subnetworks for cluster setup using Node.js. Requires Node.js, Google Cloud SDK, and cluster-related parameters. Output comprises usable subnetworks information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.list_usable_subnetworks.js\n```\n\n----------------------------------------\n\nTITLE: Updating VPC Flow Logs Configuration in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to update an existing VPC flow logs configuration using the Google Cloud Network Management API v1beta1. This modifies the flow logging settings for a VPC.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/vpc_flow_logs_service.update_vpc_flow_logs_config.js\n```\n\n----------------------------------------\n\nTITLE: Create SKAdNetwork Conversion Value Schema in Analytics Admin with Node.js\nDESCRIPTION: This sample shows how to create an SKAdNetwork conversion value schema using the Analytics Admin API and Node.js. The method `createSKAdNetworkConversionValueSchema` on the `AnalyticsAdminServiceClient` is leveraged.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_s_k_ad_network_conversion_value_schema.js)\n```\n\n----------------------------------------\n\nTITLE: Delete Workload V1beta1 in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to delete a workload within the Assured Workloads service (v1beta1) using the google-cloud-node library.  It utilizes the AssuredWorkloadsService client to delete an existing workload. The sample is located in the `samples/generated/v1beta1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Classifying Text with Google Cloud Natural Language API (v2)\nDESCRIPTION: This code sample shows how to use the classify_text method of the Language Service API (v2) to categorize text content. It requires the google-cloud-language package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v2/language_service.classify_text.js\n```\n\n----------------------------------------\n\nTITLE: Version History Entry for 1.2.1\nDESCRIPTION: Changelog entry documenting build fix to set default branch to main\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### [1.2.1](https://www.github.com/googleapis/nodejs-service-control/compare/v1.2.0...v1.2.1) (2021-09-10)\n\n### Bug Fixes\n\n* **build:** set default branch to main ([#75](https://www.github.com/googleapis/nodejs-service-control/issues/75)) ([96864af](https://www.github.com/googleapis/nodejs-service-control/commit/96864af35c2ba7a08c5aacbdf73024ab15f722c3))\n```\n\n----------------------------------------\n\nTITLE: Version Headers Markdown Entry\nDESCRIPTION: Changelog entry documenting version 2.0.1 release with bug fixes for handling promises\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/places-v2.0.0...places-v2.0.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6190](https://github.com/googleapis/google-cloud-node/issues/6190)) ([f4866df](https://github.com/googleapis/google-cloud-node/commit/f4866dfa6ab481163150f54928a9857d2dfef948))\n```\n\n----------------------------------------\n\nTITLE: Listing Discovered Workloads from App Hub - Node.js\nDESCRIPTION: This snippet lists all discovered workloads associated with your Google Cloud App Hub project, providing visibility into the workloads managed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_discovered_workloads.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_discovered_workloads.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Service with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This code sample demonstrates the deletion of a service in the Google Cloud App Hub using Node.js. All necessary preparations for Node.js must be completed before running this sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.delete_service.js\n```\n\n----------------------------------------\n\nTITLE: Getting Cluster Details - JavaScript\nDESCRIPTION: This snippet retrieves detailed information about a specific cluster using the Cluster Manager API, requiring configuration of the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function getCluster(clusterId) {\n  const request = {clusterId};\n  const response = await client.getCluster(request);\n  console.log(`Cluster details: ${JSON.stringify(response)}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Run Funnel Report in Analytics Data API (Alpha) with Node.js\nDESCRIPTION: This sample demonstrates how to run a funnel report using the Alpha version of the Google Analytics Data API with Node.js. It uses the `alpha_analytics_data.run_funnel_report` method. Instructions for running the sample are in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Listing Taxonomies in Google Cloud Datacatalog - JavaScript\nDESCRIPTION: This snippet provides functionality to list all taxonomies in Google Cloud's Data Catalog service. It requires the google-cloud-datacatalog package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst {PolicyTagManagerClient} = require('@google-cloud/datacatalog');\nconst client = new PolicyTagManagerClient();\n\nasync function listTaxonomies() {\n  const request = {\n    parent: 'projects/YOUR_PROJECT_ID/locations/YOUR_LOCATION',\n  };\n  const [response] = await client.listTaxonomies(request);\n  response.forEach(taxonomy => console.log(taxonomy.displayName));\n}\nlistTaxonomies();\n```\n\n----------------------------------------\n\nTITLE: Importing a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to import a flow into Dialogflow CX. It uses the flows.import_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.import_flow.js\n```\n\n----------------------------------------\n\nTITLE: Getting Stage Execution Details - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code provides functionality to get execution details of stages within a job, offering deeper insights into the processing flow and performance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {MetricsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new MetricsV1Beta3Client();\n// Functionality to get stage execution details goes here.\n```\n\n----------------------------------------\n\nTITLE: Listing Orders in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to list orders using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which retrieves a list of orders.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.list_orders.js`\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Policy - Node.js\nDESCRIPTION: This snippet demonstrates how to create an IAM policy using the Google Cloud Node.js client library. It requires the `google-iam` package. Expected input is policy details, and the output is the newly created policy instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.create_policy.js\n```\n\n----------------------------------------\n\nTITLE: Managing Merchant Reviews\nDESCRIPTION: Collection of samples for managing merchant reviews including CRUD operations (Create, Read, Update, Delete). Located in the v1beta samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reviews/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/merchant_reviews_service.delete_merchant_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/merchant_reviews_service.get_merchant_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/merchant_reviews_service.insert_merchant_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/merchant_reviews_service.list_merchant_reviews.js\n```\n\n----------------------------------------\n\nTITLE: Listing Applications in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet illustrates how to list all applications from Google Cloud App Hub. It doesn't require any input parameters and returns a list of application objects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst listApplications = async () => {\n  const response = await client.listApplications();\n};\n```\n\n----------------------------------------\n\nTITLE: Search Entitlements Usage Command - Node.js\nDESCRIPTION: Shell command to execute the search entitlements sample code for the Privileged Access Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-privilegedaccessmanager/samples/generated/v1/privileged_access_manager.search_entitlements.js\n```\n\n----------------------------------------\n\nTITLE: Listing Instructions with Data Labeling Service in Node.js\nDESCRIPTION: This code demonstrates how to list instructions using the Google Cloud Data Labeling Service client. It provides a basic example of how to invoke the list_instructions method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-datalabeling/samples/generated/v1beta1/data_labeling_service.list_instructions.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating Rule - Node.js\nDESCRIPTION: This example illustrates how to create a rule in the Artifact Registry via a Node.js script. Ensure that Node.js and the essential NPM packages are installed. The script sets rule parameters and sends them to the registry API to establish a rule.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.create_rule.js`\n```\n\n----------------------------------------\n\nTITLE: SQL Connection Services - Google Cloud SQL Node.js Beta\nDESCRIPTION: Beta version examples for SQL connection services including generating ephemeral certificates and getting connection settings\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_connect_service.generate_ephemeral_cert.js\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_connect_service.get_connect_settings.js\n```\n\n----------------------------------------\n\nTITLE: Categorizing Changes in Markdown\nDESCRIPTION: This snippet demonstrates how changes are categorized in the changelog using Markdown headers. Categories include 'Bug Fixes', 'Features', and 'Breaking Changes'.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6186](https://github.com/googleapis/google-cloud-node/issues/6186)) ([dcfc7b4](https://github.com/googleapis/google-cloud-node/commit/dcfc7b492a2ac3fb86b93ae1375bac1c5153d049))\n```\n\n----------------------------------------\n\nTITLE: Create Rollup Property in Analytics Admin using Node.js\nDESCRIPTION: This code snippet illustrates the creation of a rollup property using the Google Analytics Admin API with Node.js. The `createRollupProperty` method of `AnalyticsAdminServiceClient` facilitates this operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_rollup_property.js)\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to list private connections in Node.js\nDESCRIPTION: Example showing how to list private connections using the Google Cloud Datastream API. This sample demonstrates the list_private_connections method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.list_private_connections.js\n```\n\n----------------------------------------\n\nTITLE: Get Space - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates retrieving information about a specific space in Google Chat using Node.js. It calls the `get_space` method of the `Chat_service` to fetch the details of a space, given its ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google Cloud Secure Source Manager Client Library\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google Cloud Secure Source Manager client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/securesourcemanager@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Version 0.2.0 Changelog Entry\nDESCRIPTION: Feature update adding Weight to common types for Shopping APIs\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/notifications-v0.1.0...notifications-v0.2.0) (2024-05-02)\n\n### Features\n\n* [shopping] add `Weight` to common types for Shopping APIs to be used for accounts bundle ([#5291](https://github.com/googleapis/google-cloud-node/issues/5291)) ([27a72a6](https://github.com/googleapis/google-cloud-node/commit/27a72a6d16079ff025b4a9ac702c6d1bffd017ce))\n```\n\n----------------------------------------\n\nTITLE: Creating Connection Profile in Google Cloud Datastream - Node.js\nDESCRIPTION: Creates a new connection profile in Google Cloud Datastream. This snippet necessitates the Google Cloud Datastream client library and suitable permissions for creating connection profiles.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {DatastreamClient} = require('@google-cloud/datastream');\n\nconst client = new DatastreamClient();\n\nasync function createConnectionProfile() {\n  const request = {\n    // Connection profile parameters\n  };\n\n  const [operation] = await client.createConnectionProfile(request);\n  const [response] = await operation.promise();\n  console.log('Connection profile created:', response);\n}\n\ncreateConnectionProfile();\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with npm\nDESCRIPTION: Command to install project dependencies for the Google Cloud Node.js repository using npm package manager\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Loading Dialogflow CX Version - JavaScript\nDESCRIPTION: This snippet loads a specific version of a Dialogflow CX agent. It allows you to retrieve the details of a given version by calling the appropriate API endpoint. Dependencies include the Dialogflow CX library. It requires the version ID to be passed as a parameter and returns the version details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_148\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {VersionsClient} = require('@google-cloud/dialogflow-cx');\nconst client = new VersionsClient();\n\nasync function loadVersion(versionId) {\n  const request = {\n    name: `projects/YOUR_PROJECT/locations/YOUR_LOCATION/agents/YOUR_AGENT/versions/${versionId}`\n  };\n  const response = await client.getVersion(request);\n  console.log('Version details:', response);\n}\n\nloadVersion('VERSION_ID');\n```\n\n----------------------------------------\n\nTITLE: Update Hydrated Deployment in Telco Automation API - JavaScript\nDESCRIPTION: Updates a hydrated deployment using the Telco Automation API v1. This sample shows the usage of update_hydrated_deployment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.update_hydrated_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Getting Engine Version with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet illustrates how to retrieve an engine version using the A_m_l.get_engine_version method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and authentication to run.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_engine_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Glossary using Google Cloud Translation API - JavaScript\nDESCRIPTION: Creates a new glossary in the Google Cloud Translation service. It involves specifying a glossary name and setting its entries. Proper authentication is required to access the translation client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Create a glossary\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function createGlossary() {\n  // Your code here to create a glossary\n}\ncreateGlossary();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Lake - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet provides functionality to delete a lake in Google Cloud Dataplex, which is important for maintaining only necessary data structures.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to delete a lake\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function deleteLake() {\n  const request = {name: 'name_of_the_lake'};\n  const [response] = await client.deleteLake(request);\n  console.log(response);\n}\ndeleteLake();\n```\n\n----------------------------------------\n\nTITLE: Using Maps Platform Datasets API Client Library in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Maps Platform Datasets API client library in Node.js. It includes importing the library, instantiating a client, and making an asynchronous request to list datasets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The name of the project to list all the datasets for.\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of versions to return per page.\n *  If unspecified (or zero), at most 1000 datasets will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  The page token, received from a previous GetDatasetVersions call.\n *  Provide this to retrieve the subsequent page.\n */\n// const pageToken = 'abc123'\n\n// Imports the Mapsplatformdatasets library\nconst {MapsPlatformDatasetsV1AlphaClient} =\n  // eslint-disable-next-line node/no-missing-require\n  require('@googlemaps/maps-platform-datasets').v1alpha;\n\n// Instantiates a client\nconst mapsplatformdatasetsClient = new MapsPlatformDatasetsV1AlphaClient();\n\nasync function callListDataset() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await mapsplatformdatasetsClient.listDatasetsAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListDataset();\n```\n\n----------------------------------------\n\nTITLE: Generating Random Bytes with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to generate random bytes using the google-cloud-kms library in a Node.js environment. The given command executes the sample which generates the random bytes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.generate_random_bytes.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to delete an existing flow in Dialogflow CX. It uses the flows.delete_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.delete_flow.js\n```\n\n----------------------------------------\n\nTITLE: Listing Generators in Dialogflow CX with Node.js\nDESCRIPTION: This code snippet demonstrates how to list generators in Dialogflow CX using the Node.js client library. It uses the `Generators.list_generators` method. Make sure that the Dialogflow CX client and authentication are properly configured before running this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// [START dialogflow_cx_v3_generated_Generators_ListGenerators_async]\n// This snippet has been automatically generated and should be regarded as a\n// code template only.\n// It will require modifications to work:\n// - It may require correct/in-range values for request initialization.\n// - It may require specifying regional endpoints when creating the service client as shown in\n//   https://cloud.google.com/nodejs/docs/reference/service-client#creating-a-client\n\nasync function callListGenerators() {\n  // [START_EXCLUDE]\n  // \"before\" section is not part of the code snippet\n  [truncated]\n  // [END_EXCLUDE]\n\n  // Initialize client request here\n  const request = {\n    parent: 'locations/my-location/agents/my-agent',\n  };\n\n  // Make the request\n  const [response] = await client.listGenerators(request);\n  for (const item of response) {\n    console.log(item);\n  }\n}\n\ncallListGenerators();\n// [END dialogflow_cx_v3_generated_Generators_ListGenerators_async]\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests. These ensure code quality and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Session Entity Type - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet retrieves a specific session entity type, providing insights into defined entities within a user session in Dialogflow for querying and modifications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_118\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Gets a session entity type.\nconst {SessionEntityTypesClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionEntityTypesClient();\n\nasync function getSessionEntityType() {\n  // Implementation logic here\n}\n\ngetSessionEntityType();\n```\n\n----------------------------------------\n\nTITLE: Getting Job Execution Details - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet allows users to obtain detailed execution information for a specified job, useful for performance monitoring and optimization.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {MetricsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new MetricsV1Beta3Client();\n// Functionality to get job execution details goes here.\n```\n\n----------------------------------------\n\nTITLE: Submitting Order in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to submit an order using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which submits an order.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.submit_order.js`\n```\n\n----------------------------------------\n\nTITLE: Managing Product Reviews\nDESCRIPTION: Collection of samples for managing product reviews including CRUD operations (Create, Read, Update, Delete). Located in the v1beta samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reviews/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/product_reviews_service.delete_product_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/product_reviews_service.get_product_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/product_reviews_service.insert_product_review.js\nnode packages/google-shopping-merchant-reviews/samples/generated/v1beta/product_reviews_service.list_product_reviews.js\n```\n\n----------------------------------------\n\nTITLE: Listing Discovered Services from App Hub - Node.js\nDESCRIPTION: This snippet enumerates all the services discovered in App Hub, facilitating a broad overview of available services tied to your project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_discovered_services.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_discovered_services.js\n```\n\n----------------------------------------\n\nTITLE: Managing Quota Preferences with Cloud Quotas API in Node.js (v1)\nDESCRIPTION: Collection of Node.js samples for managing quota preferences including creating, getting, listing and updating quota preferences using the Cloud Quotas API v1.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.create_quota_preference.js\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.get_quota_preference.js\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.list_quota_preferences.js\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.update_quota_preference.js\n```\n\n----------------------------------------\n\nTITLE: Updating IAM Policy - Node.js\nDESCRIPTION: This snippet shows how to update an existing IAM policy using the Google Cloud Node.js client library. It requires the `google-iam` package. The input is the updated policy details, and the output is the updated policy object.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.update_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Project Attachment with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This code sample illustrates how to create a service project attachment in the App Hub using Node.js. It requires the Google Cloud client library to be installed and configured properly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.create_service_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Feed - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample illustrates how to delete an existing feed in the Google Cloud Asset API. Requires Google Cloud SDK and Node.js for execution. Outputs include confirmation of successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code to delete a feed\n```\n\n----------------------------------------\n\nTITLE: Get IAM Policy with Container Analysis in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve the IAM policy for a resource using the Container Analysis API in Node.js. It uses the google-devtools-containeranalysis package and is executed through a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/container_analysis.get_iam_policy.js`\n```\n\n----------------------------------------\n\nTITLE: BackupDR deleteManagementServer Sample\nDESCRIPTION: This sample demonstrates how to delete a management server using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Participant - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet shows how to update participant details in Dialogflow. It enables modifications on participant state and information to reflect changes required during conversation handling.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_111\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Updates details of a participant.\nconst {ParticipantsClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new ParticipantsClient();\n\nasync function updateParticipant() {\n  // Implementation logic here\n}\n\nupdateParticipant();\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: The snippet provides an example of testing IAM permissions for Google Cloud Backup and DR using Node.js. Utilize the script to verify IAM permissions. It requires Node.js for execution and relies on the `@google-cloud/backupdr` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Create Reaction - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates creating a reaction to a message in a Google Chat space using Node.js. The code utilizes the `create_reaction` method of the `Chat_service` to add a reaction (e.g., emoji) to a specific message.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check the code for style and potential errors, and attempts to automatically fix any violations. This ensures code consistency and helps maintain code quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting a Workload in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a workload from Google Cloud App Hub. It requires the workload ID as input and returns a confirmation upon successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst deleteWorkload = async (workloadId) => {\n  await client.deleteWorkload({\n    id: workloadId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Listing Workloads from App Hub - Node.js\nDESCRIPTION: This snippet lists all workloads associated with your services in Google Cloud App Hub, providing essential workload management insights.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_workloads.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_workloads.js\n```\n\n----------------------------------------\n\nTITLE: Create Key Event in Analytics Admin using Node.js\nDESCRIPTION: This code sample demonstrates how to create a key event using the Google Analytics Admin API with Node.js. It uses the `createKeyEvent` method of the `AnalyticsAdminServiceClient` to create a new key event.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_key_event.js)\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which will check for code style issues and potentially fix them automatically. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Google Chat API Quickstart Example in Node.js\nDESCRIPTION: This snippet provides a quickstart guide to using the Google Chat API in a Node.js application. It outlines the setup process and the initial API calls needed to get started.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Quickstart code for Google Chat API\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function quickstart() {\n  const res = await client.listSpaces();\n  console.log(res);\n}\nquickstart();\n```\n\n----------------------------------------\n\nTITLE: Updating Data Taxonomy with Google Cloud Dataplex API (Node.js)\nDESCRIPTION: This code snippet shows how to update a data taxonomy using the Google Cloud Dataplex Data Taxonomy Service API. It utilizes the google-cloud-dataplex package and calls the update_data_taxonomy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/data_taxonomy_service.update_data_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Get IAM Policy for Security Center\nDESCRIPTION: Retrieves the IAM policy for Google Cloud Security Center using the Node.js client library. This shows how to fetch access control policies configured for Security Center. The snippet requires the `@google-cloud/security-center` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_iam_policy\"\n```\n\n----------------------------------------\n\nTITLE: Getting Site Search Engine in Node.js\nDESCRIPTION: This sample demonstrates how to get a site search engine using the DiscoveryEngine API in Node.js. The `Site_search_engine_service.get_site_search_engine` method is used for this purpose. Requires an initialized and authenticated client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_GetSiteSearchEngine_async]\"\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node\nDESCRIPTION: This snippet outlines the command to run unit tests in the Google Cloud Node environment. It's part of the testing process that ensures code changes meet quality standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs sample integration tests.  It executes a script, `samples-test`, defined in the `package.json` file.  These tests typically verify the integration between different components or services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Set Internal Status in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: This example demonstrates setting the internal status of a backup in Google Cloud Backup and DR via Node.js. It makes use of the `@google-cloud/backupdr` API. Running the script with Node.js updates the internal status accordingly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.set_internal_status.js\n```\n\n----------------------------------------\n\nTITLE: Listing Blueprints with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list blueprints using the Google Telco Automation API. It provides the command to execute the sample code that retrieves a list of available blueprints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.list_blueprints.js\n```\n\n----------------------------------------\n\nTITLE: Creating Management DNS Zone Binding with Node.js\nDESCRIPTION: This JavaScript snippet facilitates the creation of a management DNS zone binding in the VMware Engine via Node.js. Dependencies include Google Cloud libraries. Use the provided Node.js command to execute the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_management_dns_zone_binding.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Library\nDESCRIPTION: Commands for running different test suites, including unit tests, sample integration tests, and system tests. These commands validate code functionality before submitting contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Node.js sample integration tests with npm\nDESCRIPTION: This snippet demonstrates how to execute sample integration tests for the Node.js project using npm. It uses the `npm run samples-test` command to run the tests defined specifically for sample integrations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\n\"# Run sample integration tests.\\n        npm run samples-test\"\n```\n\n----------------------------------------\n\nTITLE: Updating Security Health Analytics Custom Module in Security Center Management\nDESCRIPTION: This sample demonstrates how to update a security health analytics custom module using the Security Center Management API in Node.js.  It requires the `@google-cloud/securitycentermanagement` package. The script is executed directly using `node`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.update_security_health_analytics_custom_module.js`\n```\n\n----------------------------------------\n\nTITLE: Version Headers and Links - Markdown\nDESCRIPTION: Version headers with links to compare changes between releases\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/contentwarehouse-v2.0.0...contentwarehouse-v2.0.1) (2025-03-19)\n\n## [2.0.0](https://github.com/googleapis/google-cloud-node/compare/contentwarehouse-v1.11.0...contentwarehouse-v2.0.0) (2025-03-18)\n\n## [1.11.0](https://github.com/googleapis/google-cloud-node/compare/contentwarehouse-v1.10.0...contentwarehouse-v1.11.0) (2024-10-30)\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Custom Target Type Deletion Sample in Node.js\nDESCRIPTION: This sample demonstrates executing a deletion of a custom target type using Node.js. Ensure Node.js and the relevant samples are set up locally. The script removes a designated custom target type from the deployment configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_custom_target_type.js\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Breaking Changes in Markdown\nDESCRIPTION: This snippet shows how breaking changes are highlighted in the changelog using Markdown. It uses a warning symbol and includes a link to the relevant GitHub issue.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Get Message - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates retrieving a specific message from a Google Chat space using Node.js. It uses the `get_message` method of the `Chat_service` to fetch the details of a message based on its ID.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Updating Data Taxonomy - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet updates a data taxonomy in Google Cloud Dataplex. It is necessary for editing properties of existing taxonomies in the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to update a data taxonomy\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function updateDataTaxonomy() {\n  const request = {dataTaxonomy: {name: 'name_of_the_taxonomy', ...}};\n  const [response] = await client.updateDataTaxonomy(request);\n  console.log(response);\n}\nupdateDataTaxonomy();\n```\n\n----------------------------------------\n\nTITLE: Updating Tuned Models with Model Service in JavaScript\nDESCRIPTION: This sample demonstrates how to update tuned models using the ModelService in the google-ai-generativelanguage package. It gives the command to execute the sample, updating configurations of tuned models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/model_service.update_tuned_model.js`\n```\n\n----------------------------------------\n\nTITLE: List Descendant Event Threat Detection Custom Modules\nDESCRIPTION: Lists descendant event threat detection custom modules in Google Cloud Security Center using the Node.js client library. This sample shows how to list these modules. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.list_descendant_event_threat_detection_custom_modules\"\n```\n\n----------------------------------------\n\nTITLE: Updating a Delivery Vehicle with Delivery Service API in Node.js\nDESCRIPTION: This code example demonstrates how to update a delivery vehicle using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.update_delivery_vehicle.js\n```\n\n----------------------------------------\n\nTITLE: Importing DNS Module (New ES Style)\nDESCRIPTION: Shows the new way of importing the DNS module using ES module syntax.  This enables better forward compatibility with TypeScript, Babel, and modern ES module specifications. It uses destructuring to import the DNS class.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst {DNS} = require('@google-cloud/dns');\nconst dns = new DNS();\n```\n\n----------------------------------------\n\nTITLE: Generating TCP Proxy Script with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet shows how to generate a TCP proxy script using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.generate_tcp_proxy_script.js\n```\n\n----------------------------------------\n\nTITLE: Describing Conversion Workspace Revisions with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet illustrates how to describe conversion workspace revisions using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.describe_conversion_workspace_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Getting VPC Flow Logs Configuration in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to retrieve a specific VPC flow logs configuration using the Google Cloud Network Management API v1beta1. This returns the details of an existing configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/vpc_flow_logs_service.get_vpc_flow_logs_config.js\n```\n\n----------------------------------------\n\nTITLE: Delete Access Binding in Analytics Admin via Node.js\nDESCRIPTION: This code shows how to delete an access binding within the Google Analytics Admin API using Node.js. The `deleteAccessBinding` method of the `AnalyticsAdminServiceClient` is employed to achieve this.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.delete_access_binding.js)\n```\n\n----------------------------------------\n\nTITLE: Creating a Delivery Vehicle with Delivery Service API in Node.js\nDESCRIPTION: This code sample shows how to create a delivery vehicle using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.create_delivery_vehicle.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Get Certificate Revocation List in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a certificate revocation list (CRL) using Google Cloud Certificate Authority Service. The code can be executed directly to get a CRL from your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.get_certificate_revocation_list.js\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring a Merchant Account with Google Shopping API in Node.js\nDESCRIPTION: This snippet illustrates how to create and configure a new merchant account using the Google Shopping Merchant API's AccountsService. It requires the google-cloud-node library and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/accounts_service.create_and_configure_account.js\n```\n\n----------------------------------------\n\nTITLE: Removing a Deployment with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to remove a deployment using the Google Telco Automation API. It provides the command to execute the sample code that deletes a specific deployment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.remove_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Listing Services from App Hub - Node.js\nDESCRIPTION: This snippet provides a list of all services available in App Hub, critical for service management and selection within applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_services.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_services.js\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 4.0.1\nDESCRIPTION: Changelog entry documenting bug fixes for version 4.0.1 including updates to promise handling and return types\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/dataflow-v4.0.0...dataflow-v4.0.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and listOperationsAsync return type ([#6189](https://github.com/googleapis/google-cloud-node/issues/6189))\n```\n\n----------------------------------------\n\nTITLE: Deleting Phone Number - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet is used to delete a specified phone number in the Dialogflow system. Ensures that obsolete numbers are removed from the participant info.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_112\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Deletes a specific phone number.\nconst {PhoneNumbersClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new PhoneNumbersClient();\n\nasync function deletePhoneNumber() {\n  // Implementation logic here\n}\n\ndeletePhoneNumber();\n```\n\n----------------------------------------\n\nTITLE: Deleting a Processor Version - Google Cloud Node.js\nDESCRIPTION: This snippet outlines how to delete a specific processor version. It requires the version name as input, and the output verifies the deletion action.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to delete a processor version\nconst {DocumentProcessorServiceClient} = require('@google-cloud/documentai');\nconst client = new DocumentProcessorServiceClient();\nconst request = { name: processorVersionName };\nawait client.deleteProcessorVersion(request);\n```\n\n----------------------------------------\n\nTITLE: Create Reporting Data Annotation in Analytics Admin using Node.js\nDESCRIPTION: This code sample demonstrates the use of the `createReportingDataAnnotation` method of the `AnalyticsAdminServiceClient` in Node.js, which creates a new reporting data annotation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_reporting_data_annotation.js)\n```\n\n----------------------------------------\n\nTITLE: Installing Assured Workloads client library with npm\nDESCRIPTION: This command installs the Assured Workloads client library for Node.js using npm, the Node.js package manager.  This allows you to use the library in your Node.js projects.  Requires Node.js and npm to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/assured-workloads\n```\n\n----------------------------------------\n\nTITLE: Update Data Source in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: Demonstrates how to update an existing data source within Google Cloud Backup and DR using Node.js. This script assumes `@google-cloud/backupdr` availability in the Node.js environment and returns update outcomes upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.update_data_source.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Reporting Data Annotation - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This snippet shows the process for deleting a reporting data annotation using Google Analytics Admin Service with the help of Node.js. The operation requires the Google Cloud Node.js client library and the annotation ID to proceed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteReportingDataAnnotation(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Linting Node.js Code\nDESCRIPTION: This snippet shows how to run the linting process to check for any style issues or errors in the code, and possibly fix them, ensuring code quality before submitting changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing VOD Ad Tag Details in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to list VOD ad tag details using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.list_vod_ad_tag_details.js\n```\n\n----------------------------------------\n\nTITLE: Running all system tests with npm\nDESCRIPTION: This command executes all system tests for the project using npm. System tests validate the end-to-end functionality of the application, ensuring that all components work together as expected.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run all system tests.\\nnpm run system-test\"\n```\n\n----------------------------------------\n\nTITLE: BackupDR getBackupPlan Sample\nDESCRIPTION: This sample demonstrates how to get a backup plan using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Retrieving Account Tax Information with Google Shopping Merchant API in Node.js\nDESCRIPTION: This code sample shows how to get account tax information using the Google Shopping Merchant API's AccountTaxService. It requires the google-cloud-node library and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/account_tax_service.get_account_tax.js\n```\n\n----------------------------------------\n\nTITLE: Running Set Addons Config Script in Node.js\nDESCRIPTION: This script configures addons for a specific cluster. Needs Node.js, Google Cloud SDK, and addon settings as inputs. Outputs confirmation of configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.set_addons_config.js\n```\n\n----------------------------------------\n\nTITLE: Using Agents.get_agent_validation_result method in Google Cloud Dialogflow CX with Node.js\nDESCRIPTION: Example showing how to use the get_agent_validation_result method from the Agents class in Google Cloud Dialogflow CX. This requires proper setup and authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/agents.get_agent_validation_result.js\n```\n\n----------------------------------------\n\nTITLE: Running Session Entity Type Update\nDESCRIPTION: Executes the script to update an existing session entity type in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Accepts parameters for the session entity type ID and updated attributes. Outputs the result of the update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/session_entity_types.update_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Expanded Data Set - Google Analytics Admin Service - JavaScript\nDESCRIPTION: Illustrating the removal of an expanded data set in Google Analytics via Admin Service with Node.js, this snippet relies on Google Cloud's Node.js client library. Requires the data set ID for executing the deletion process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteExpandedDataSet(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating a Workload - Node.js\nDESCRIPTION: This snippet updates the details of a specific workload in App Hub, ensuring that workload definitions are up to date with current requirements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.update_workload.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.update_workload.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR deleteBackupPlan Sample\nDESCRIPTION: This sample demonstrates how to delete a backup plan using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command lints the code and potentially fixes any issues in the Google Cloud Node.js project. It should be run before submitting changes to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy - Node.js\nDESCRIPTION: This snippet is used to retrieve an IAM policy by its ID. It utilizes the Google Cloud Node.js client library and requires the `google-iam` package. The input is the policy ID, and the output is the policy details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.get_policy.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Application with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script allows for deletion of an application in the App Hub using the Google Cloud Node.js client. Proper setup of the Node.js environment and libraries is required to run this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.delete_application.js\n```\n\n----------------------------------------\n\nTITLE: Listing Assets - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This sample illustrates how to list assets using the Google Cloud Asset API. The implementation requires Node.js and Google Cloud SDK. Expected outputs will return the list of assets.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for listing assets\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes system tests for the project using npm. System tests validate the end-to-end functionality of the entire system, including interactions with external services and dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run all system tests.\\nnpm run system-test\"\n```\n\n----------------------------------------\n\nTITLE: Fetching Domain Verification Status in Node.js\nDESCRIPTION: This sample demonstrates how to fetch the domain verification status using the DiscoveryEngine API in Node.js. It calls the `Site_search_engine_service.fetch_domain_verification_status`. Proper client initialization and authentication are required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_FetchDomainVerificationStatus_async]\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Mapping Rule with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code sample shows how to get a mapping rule using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.get_mapping_rule.js\n```\n\n----------------------------------------\n\nTITLE: Creating an Asset - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet showcases the creation of an asset in Google Cloud Dataplex, allowing users to manage new data resources within the platform.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to create an asset\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function createAsset() {\n  const request = {asset: {name: 'name_of_the_asset', ...}};\n  const [response] = await client.createAsset(request);\n  console.log(response);\n}\ncreateAsset();\n```\n\n----------------------------------------\n\nTITLE: Running Set Locations Script in Node.js\nDESCRIPTION: Use this Node.js script to configure specific locations settings for a cluster. Needs Node.js, Google Cloud SDK, and location settings. Outputs location configuration result.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.set_locations.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests. These commands verify that code changes work correctly and don't break existing functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version Number Link Format in Markdown\nDESCRIPTION: Markdown formatting for version comparison links in changelog\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[0.6.1](https://github.com/googleapis/google-cloud-node/compare/policy-troubleshooter-iam-v0.6.0...policy-troubleshooter-iam-v0.6.1)\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install Node.js project dependencies using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Network Management Version 4.0.0 Breaking Changes\nDESCRIPTION: Major version upgrade including Node 18 requirement and debug logging features\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([#6140](https://github.com/googleapis/google-cloud-node/issues/6140)) ([2f96b1f](https://github.com/googleapis/google-cloud-node/commit/2f96b1f95dd6b7cb89871b56e5ea5aadf5454292))\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Chunks with Retriever Service using Node.js\nDESCRIPTION: This code example shows how to use the batchUpdateChunks method of the RetrieverService. It uses the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.batch_update_chunks.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Transition Route Group in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to get a specific transition route group from a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_140\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/transition_route_groups.get_transition_route_group.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Application Terms of Service Agreement State with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve the application terms of service agreement state using the Google Shopping Merchant Accounts API. It uses the terms_of_service_agreement_state_service.retrieve_for_application_terms_of_service_agreement_state method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/terms_of_service_agreement_state_service.retrieve_for_application_terms_of_service_agreement_state.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter to check the code for style and potential errors, and attempts to automatically fix any detected issues. This ensures code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Data Attribute - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet updates a specific data attribute in Google Cloud Dataplex, providing ways to modify properties of existing attributes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to update a data attribute\nconst {DataTaxonomyServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataTaxonomyServiceClient();\nasync function updateDataAttribute() {\n  const request = {dataAttribute: {name: 'name_of_the_attribute', ...}};\n  const [response] = await client.updateDataAttribute(request);\n  console.log(response);\n}\nupdateDataAttribute();\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Get Reusable Config in Node.js\nDESCRIPTION: This sample shows how to retrieve a reusable configuration using Google Cloud Certificate Authority Service. The code can be executed directly to get details about a reusable config in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_34\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.get_reusable_config.js\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate for AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet generates a client certificate for accessing AlloyDB databases using Node.js. Requires proper security settings and initialization routine. After running, it provides a certificate for client authentication in AlloyDB.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.generate_client_certificate.js\n```\n\n----------------------------------------\n\nTITLE: Getting Job Details - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet retrieves details of a specific job in Google Cloud Dataflow, which is valuable for analyzing job performance and configuration after submission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to get job details goes here.\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions with Container Analysis in Node.js\nDESCRIPTION: This sample demonstrates how to test IAM permissions for a resource using the Container Analysis API in Node.js. It utilizes the google-devtools-containeranalysis package and is executed via a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/container_analysis.test_iam_permissions.js`\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: Use npm scripts to lint and potentially auto-fix code issues in the project. Ensures code adheres to set styling and quality standards. Requires npm and a set linting configuration in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting a Glossary by ID using Google Cloud Translation API - JavaScript\nDESCRIPTION: Retrieves a specific glossary by its ID in the Cloud Translation service. This code sample necessitates a valid glossary ID and proper setup of the translation client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Get a glossary by ID\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function getGlossary() {\n  // Your code here to get glossary by ID\n}\ngetGlossary();\n```\n\n----------------------------------------\n\nTITLE: Listing Delivery Vehicles with Delivery Service API in Node.js\nDESCRIPTION: This snippet demonstrates how to list delivery vehicles using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.list_delivery_vehicles.js\n```\n\n----------------------------------------\n\nTITLE: Updating Membership with Google Chat API in Node.js\nDESCRIPTION: This snippet enables the updating of a membership in a chat space. It details the necessary parameters for modifying a member’s details or status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Code to update membership\nconst {ChatServiceClient} = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateMembership(membershipData) {\n  const res = await client.updateMembership(membershipData);\n  console.log(res);\n}\nupdateMembership({memberId: 'MEMBER_ID', status: 'ACTIVE'});\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag Template with Node.js\nDESCRIPTION: Shows how to delete a tag template in Google Cloud Data Catalog using Node.js. Requires the `@google-cloud/datacatalog` package, and is designed for command-line execution, facilitating tag template lifecycle management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.delete_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Enabling Advanced Site Search in Node.js\nDESCRIPTION: This sample demonstrates how to enable advanced site search using the DiscoveryEngine API in Node.js. It uses the `Site_search_engine_service.enable_advanced_site_search` method. An initialized and authenticated DiscoveryEngine client is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"// [START discoveryengine_v1alpha_generated_SiteSearchEngineService_EnableAdvancedSiteSearch_async]\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Setup\nDESCRIPTION: This snippet contains the command necessary to install the required dependencies to setup the Node.js environment for Google Cloud Node library. It is essential to run this command before executing tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Batch Creating Chunks with Retriever Service in JavaScript\nDESCRIPTION: This sample demonstrates batch creation of chunks using the RetrieverService within the google-ai-generativelanguage package. The command executes the sample to create multiple chunks at once.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.batch_create_chunks.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Service Project Attachments from App Hub - Node.js\nDESCRIPTION: This snippet retrieves all service project attachments, helping to manage and review project-service associations efficiently.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.list_service_project_attachments.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.list_service_project_attachments.js\n```\n\n----------------------------------------\n\nTITLE: Feature: Initial Files for Cloud Profiler v2\nDESCRIPTION: This feature adds the initial files for the google.devtools.cloudprofiler.v2 API. This marks the beginning of support for the Cloud Profiler v2 API within the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: Text\nCODE:\n```\nAdd initial files for google.devtools.cloudprofiler.v2 ([#4647](https://github.com/googleapis/google-cloud-node/issues/4647)) ([3814097](https://github.com/googleapis/google-cloud-node/commit/38140975dcfc5936032d05083eb3f7b9bfe93a7c))\n```\n\n----------------------------------------\n\nTITLE: Listing Client Gateways: Node.js\nDESCRIPTION: This snippet provides a method to list all client gateways through the BeyondCorp API. It requires a Node.js environment and the google-cloud-beyondcorp-clientgateways library. The output is a list of all client gateways available.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-clientgateways/samples/generated/v1/client_gateways_service.list_client_gateways.js\n```\n\n----------------------------------------\n\nTITLE: Using Agents.delete_agent method in Google Cloud Dialogflow CX with Node.js\nDESCRIPTION: Example showing how to use the delete_agent method from the Agents class in Google Cloud Dialogflow CX. This requires proper setup and authentication with Google Cloud.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/agents.delete_agent.js\n```\n\n----------------------------------------\n\nTITLE: Updating Synonym Sets with Synonym Set Service in Node.js\nDESCRIPTION: This snippet illustrates the usage of the updateSynonymSet method from the Synonym Set Service in the Google Cloud Content Warehouse API. It provides a command to run the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/synonym_set_service.update_synonym_set.js\n```\n\n----------------------------------------\n\nTITLE: Getting a File from Artifact Registry using Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a file from Google Cloud Artifact Registry. It utilizes the get_file method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_file.js\n```\n\n----------------------------------------\n\nTITLE: Update Endpoint using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `updateEndpoint` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for updating an endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.update_endpoint.js`\n```\n\n----------------------------------------\n\nTITLE: Executing Synonym Set Service Get Operation in Node.js\nDESCRIPTION: This snippet demonstrates how to use the getSynonymSet method of the Synonym Set Service in the Google Cloud Content Warehouse API. It provides a command to run the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/synonym_set_service.get_synonym_set.js\n```\n\n----------------------------------------\n\nTITLE: Run system tests using npm\nDESCRIPTION: This command runs the system tests, which are end-to-end tests that verify the entire system is working correctly. These tests are defined in the `package.json` file. The output shows the results of the system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting a Private Connection with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code sample demonstrates the process of deleting a private connection using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.delete_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running Get Operation Script in Node.js\nDESCRIPTION: Use this Node.js script to fetch details about a specific Google Cloud operation. It requires Node.js, Google Cloud SDK, and the operation identifier to output operation details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.get_operation.js\n```\n\n----------------------------------------\n\nTITLE: Getting Model with Model Service in Javascript\nDESCRIPTION: This code retrieves a model using the `getModel` method from the Model Service, leveraging the google-ai-generativelanguage package. It provides an example of how to obtain information about a specific model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating VPC Flow Logs Configuration in Google Cloud Network Management API v1\nDESCRIPTION: A Node.js sample that demonstrates how to update an existing VPC flow logs configuration using the Google Cloud Network Management API v1. This function allows modification of VPC flow logs settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1/vpc_flow_logs_service.update_vpc_flow_logs_config.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR finalizeBackup Sample\nDESCRIPTION: This sample demonstrates how to finalize a backup using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Task with Delivery Service API in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a task using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.get_task.js\n```\n\n----------------------------------------\n\nTITLE: Running Get Server Config Script in Node.js\nDESCRIPTION: Retrieve server configuration settings using this Node.js script. Requires Node.js, Google Cloud SDK, and server configuration parameters. Outputs detailed server configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.get_server_config.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Task with Delivery Service API in Node.js\nDESCRIPTION: This snippet shows how to delete a task using the Delivery Service API. It requires the google-maps-fleetengine-delivery package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-fleetengine-delivery/samples/generated/v1/delivery_service.delete_task.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: This set of commands runs different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating Corpus with Retriever Service in JavaScript\nDESCRIPTION: This sample illustrates creating a corpus using the RetrieverService within the google-ai-generativelanguage package. Executing the command will run the sample which creates a corpus.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.create_corpus.js`\n```\n\n----------------------------------------\n\nTITLE: BackupDR deleteBackup Sample\nDESCRIPTION: This sample demonstrates how to delete a backup using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: BackupDR abandonBackup Sample\nDESCRIPTION: This sample demonstrates how to abandon a backup using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Deleting Session Templates with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for deleting session templates using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the SessionTemplateController.deleteSessionTemplate method to remove an existing session template.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/session_template_controller.delete_session_template.js\n```\n\n----------------------------------------\n\nTITLE: Describing Database Entities with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This code example shows how to describe database entities using the Google Cloud Data Migration Service. It uses the google-cloud-clouddms package and requires proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.describe_database_entities.js\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Database Flags in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet retrieves a list of database flags supported by AlloyDB, which can be configured for instances. It requires the AlloyDB client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function listSupportedDatabaseFlags() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Using Dep_service to update a load balancer route extension in Node.js\nDESCRIPTION: Example for updating a load balancer route extension using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the update_lb_route_extension method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/dep_service.update_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: Listing Live Configs in Google Cloud Video Stitcher (Node.js)\nDESCRIPTION: This snippet demonstrates how to list live configurations using the Google Cloud Video Stitcher service. It requires the google-cloud-video-stitcher package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-stitcher/samples/generated/v1/video_stitcher_service.list_live_configs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Tag Template Field with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a tag template field using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.delete_tag_template_field.js\n```\n\n----------------------------------------\n\nTITLE: Getting Backup Details from Cloud Filestore\nDESCRIPTION: This sample retrieves the details of a specific backup in Google Cloud Filestore. Make sure to have the backup’s name and other identifiers ready.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function getBackup() {\n    const response = await client.getBackup(...);\n    console.log(response);\n}\ngetBackup();\n```\n\n----------------------------------------\n\nTITLE: Show Effective Autokey Config JavaScript\nDESCRIPTION: Retrieves the effective Autokey configuration by querying Google Cloud KMS using Node.js. Requires Google Cloud credentials and npm dependencies for execution. Displays consolidated configuration settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Using ProductSearch.updateProductSet method with Google Cloud Vision API in JavaScript\nDESCRIPTION: Sample code demonstrating how to update a product set in Google Cloud Vision. This allows modifying metadata for a collection of products using the ProductSearch client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1/product_search.update_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Failover Instance in AlloyDB using Node.js\nDESCRIPTION: This snippet facilitates the execution of a failover for an instance within AlloyDB using Node.js. Prior implementation of failover policies and permissions is necessary for success. Executing the script triggers the failover process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.failover_instance.js\n```\n\n----------------------------------------\n\nTITLE: Delete Membership - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates deleting a membership from a Google Chat space using Node.js. The code uses the `delete_membership` method of the `Chat_service` to remove a member from a particular space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Quick Start Guide for Google Cloud Network Management API\nDESCRIPTION: A Node.js quickstart sample that demonstrates basic initialization and usage of the Google Cloud Network Management API. This serves as an entry point for developers new to the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Node.js Code\nDESCRIPTION: This command uses a linter (like ESLint) to check the code for style and potential errors, and optionally fix them automatically. This helps maintain code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting a File Store Data Profile with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a file store data profile using the Google Cloud DLP service. It uses the deleteFileStoreDataProfile method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_file_store_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Updating Transition Route Group in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to update an existing transition route group in a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_142\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/transition_route_groups.update_transition_route_group.js\n```\n\n----------------------------------------\n\nTITLE: Searching Protected Resources - Node.js\nDESCRIPTION: This sample script illustrates how to search for protected resources using the Key Tracking Service in the KMS Inventory API. Required setups include necessary npm packages.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms-inventory/samples/generated/v1/key_tracking_service.search_protected_resources.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests in Node.js\nDESCRIPTION: This snippet outlines the steps to install dependencies and run various tests in the Node.js environment. It ensures the local environment is properly set up to maintain code integrity and functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Merchant Center Account Links in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to list Merchant Center account links using the Google Cloud Retail API. It utilizes the listMerchantCenterAccountLinks method of the MerchantCenterAccountLinkService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/merchant_center_account_link_service.list_merchant_center_account_links.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Snapshot - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a previously created snapshot in Google Cloud Dataflow, which is important for resource management and cleanup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {SnapshotsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new SnapshotsV1Beta3Client();\n// Functionality to delete a snapshot goes here.\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the project's code and attempts to fix any issues it finds. It's an important step in maintaining code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Delete Workload in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to delete a workload within the Assured Workloads service using the google-cloud-node library.  It utilizes the AssuredWorkloadsService client to delete an existing workload. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Version History Entry for 1.3.0\nDESCRIPTION: Changelog entry documenting addition of KMS configuration in settings\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.3.0](https://github.com/googleapis/nodejs-service-control/compare/v1.2.1...v1.3.0) (2022-02-23)\n\n### Features\n\n* add KMS configuration in settings ([#107](https://github.com/googleapis/nodejs-service-control/issues/107)) ([c2cc91a](https://github.com/googleapis/nodejs-service-control/commit/c2cc91a4a03e4f5752e72357526010807ba9e834))\n```\n\n----------------------------------------\n\nTITLE: Create Crypto Key Version using Key Management Service JavaScript\nDESCRIPTION: Adds a new version to an existing crypto key in Google Cloud KMS with Node.js. Requires identifier of the parent crypto key. Outputs information on the new key version after successful execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Adding Initial Samples and Tests to Node.js Cloud Shell Client\nDESCRIPTION: This code snippet represents a commit that adds initial samples and tests to the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\nadd initial samples and tests ([#4](https://www.github.com/googleapis/nodejs-cloud-shell/issues/4)) ([3900384](https://www.github.com/googleapis/nodejs-cloud-shell/commit/3900384736a8e66e5b00c8ca298d3d4fb9a1b4b3))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Generating Answers with Generative Service in Javascript\nDESCRIPTION: This sample demonstrates the usage of the `generateAnswer` method from the Generative Service, using the google-ai-generativelanguage package. It showcases how to obtain answers from a generative AI model based on given inputs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm. It retrieves and installs all packages listed in the project's package.json file, allowing the project to run correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieve EKM Configuration JavaScript\nDESCRIPTION: Node.js snippet for getting the current configuration settings of an EKM in Google Cloud KMS. Ensure client library installation and authenticate requests. Outputs include the detailed EKM configuration settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Create Service using Service Directory in Node.js\nDESCRIPTION: This snippet shows how to execute the `createService` method using Node.js. It requires the google-cloud-servicedirectory package and displays the basic usage pattern for creating a service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.create_service.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Applicable IAM Policies - Node.js\nDESCRIPTION: This code snippet lists applicable IAM policies for a specified resource using the Google Cloud Node.js client library. It requires the `google-iam` package. The output is a list of policies applicable to the resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.list_applicable_policies.js\n```\n\n----------------------------------------\n\nTITLE: Updating Workload with Assured Workloads Service in Node.js\nDESCRIPTION: This sample demonstrates how to update a workload using the Assured Workloads service in Node.js. It uses the `@google-cloud/assuredworkloads` package. The command shows how to run the sample using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-assuredworkloads/samples/generated/v1/assured_workloads_service.update_workload.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Backtest Result in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to update a backtest result using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.update_backtest_result.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Playbook from Dialogflow CX using Node.js\nDESCRIPTION: This script fetches a specific playbook's details from Dialogflow CX using the Node.js API client. Appropriate client authentication and the playbook ID are required. Output contains playbook metadata.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_125\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.get_playbook.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Stored Info Type with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to delete a stored info type using the Google Cloud DLP service. It utilizes the deleteStoredInfoType method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_stored_info_type.js\n```\n\n----------------------------------------\n\nTITLE: List Big Query Exports in Security Center\nDESCRIPTION: Lists BigQuery exports in Google Cloud Security Center using the Node.js client library. This sample shows how to retrieve a list of BigQuery export configurations. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.list_big_query_exports\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Corpus with Retriever Service using Node.js\nDESCRIPTION: This code sample shows how to use the createCorpus method of the RetrieverService. It utilizes the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.create_corpus.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Kubernetes Engine with Node.js\nDESCRIPTION: A quickstart sample for using the Google Container (Kubernetes Engine) client library with Node.js. This example demonstrates how to get started with basic operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-container/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Adding Style Enumeration to Node.js AI Platform\nDESCRIPTION: Implements style enumeration functionality in the Google Cloud AI Platform Node.js client library. This feature is included in version 1.1.0 or later.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* adds style enumeration ([#37](https://www.github.com/googleapis/nodejs-ai-platform/issues/37)) ([81c1515](https://www.github.com/googleapis/nodejs-ai-platform/commit/81c15150f55c4ef20359c1e48530f2c9bcd0f64b))\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs the sample integration tests for the project. These tests verify the integration of different components and ensure that the samples are working as expected.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Listing GCP User Access Bindings with Access Context Manager API in Node.js\nDESCRIPTION: This code snippet shows how to list GCP user access bindings using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.list_gcp_user_access_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Delete Big Query Link in Analytics Admin using Node.js\nDESCRIPTION: This sample demonstrates how to delete a BigQuery link using the Google Analytics Admin API in Node.js. The `deleteBigQueryLink` method of the `AnalyticsAdminServiceClient` is used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.delete_big_query_link.js)\n```\n\n----------------------------------------\n\nTITLE: Importing Entries with Node.js\nDESCRIPTION: The script demonstrates importing entries into Google Cloud Data Catalog using Node.js, powered by the `@google-cloud/datacatalog` package. Run from the command line, it supports data ingestion processes into the catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.import_entries.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Tag Binding using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This code sample shows how to create a tag binding using the Google Cloud Resource Manager API v3. It uses the google-cloud-resourcemanager package and is run with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_bindings.create_tag_binding.js\n```\n\n----------------------------------------\n\nTITLE: Destroying Crypto Key Version with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to destroy a crypto key version using the google-cloud-kms library in a Node.js environment. It executes the sample code to destroy a particular crypto key version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.destroy_crypto_key_version.js`\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests - JavaScript\nDESCRIPTION: This snippet runs the sample integration tests using npm. These tests validate that the various samples provided in the library work as intended. It is recommended to run these tests after the unit tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-discoveryengine/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Linting and fixing Node.js code with npm\nDESCRIPTION: This command runs the linter to identify code style issues and automatically fixes them if possible. It helps to maintain code consistency and adherence to coding standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting CA Pool with Google Cloud Private CA in Node.js\nDESCRIPTION: This code example demonstrates how to retrieve a Certificate Authority Pool using the Google Cloud Private CA Service API. It employs the CertificateAuthorityService client to call the getCaPool method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.get_ca_pool.js\n```\n\n----------------------------------------\n\nTITLE: Verifying Attestation with Confidential Computing API in Node.js\nDESCRIPTION: This code sample shows how to verify an attestation using the Confidential Computing API. It requires the google-cloud-confidentialcomputing package and proper configuration of Google Cloud credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-confidentialcomputing/samples/generated/v1/confidential_computing.verify_attestation.js\n```\n\n----------------------------------------\n\nTITLE: Deleting iOS App Data Stream - Google Analytics Admin Service - JavaScript\nDESCRIPTION: Demonstrating the deletion of an iOS app data stream using Google Analytics Admin Service in Node.js, this snippet needs the Google Cloud Node.js client library. The iOS data stream ID is required as an input parameter.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteIosAppDataStream(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests\nDESCRIPTION: This code shows how to execute all system tests for verifying the complete integration and functionality of the Google Cloud Node.js library. System tests check the overall system's compliance with the specified requirements.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Chunks with Retriever Service using Node.js\nDESCRIPTION: This snippet illustrates how to use the batchDeleteChunks method of the RetrieverService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.batch_delete_chunks.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which checks code style and quality, with the option to automatically fix issues. This ensures code adheres to project standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Detecting Language using Google Cloud Translation API - JavaScript\nDESCRIPTION: Detects the language of a given text input. This function showcases how to use the translation service API to identify languages from text strings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Detect language\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function detectLanguage() {\n  // Your code here to detect language\n}\ndetectLanguage();\n```\n\n----------------------------------------\n\nTITLE: Get User Workloads Config Map - Node.js\nDESCRIPTION: Script to retrieve user workload configuration maps from a Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.get_user_workloads_config_map.js\n```\n\n----------------------------------------\n\nTITLE: Listing Webhooks in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to list all webhooks for a Dialogflow CX agent. It uses the webhooks.list_webhooks method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_77\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/webhooks.list_webhooks.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Google Cloud Node.js Library\nDESCRIPTION: Command to run integration tests for code samples in the Google Cloud Node.js library. This ensures that example code works correctly with the actual API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Listing Network Connectivity Hubs\nDESCRIPTION: Node.js code sample for listing all available hubs in the Google Cloud Network Connectivity service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1alpha1/hub_service.list_hubs.js\n```\n\n----------------------------------------\n\nTITLE: Running List Clusters Script in Node.js\nDESCRIPTION: Lists all Google Cloud clusters using Node.js. Requires Node.js and Google Cloud SDK with appropriate permissions. Outputs a list of all clusters in the given project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.list_clusters.js\n```\n\n----------------------------------------\n\nTITLE: Undeleting Services with Service Management API (Node.js)\nDESCRIPTION: Sample code demonstrating how to undelete a previously deleted service using the Google Cloud Service Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-servicemanagement/samples/generated/v1/service_manager.undelete_service.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Remove pip install statements - Node.js\nDESCRIPTION: This code snippet removes `pip install` statements from the codebase.  Since this is a Node.js library, `pip` (Python's package installer) is irrelevant and its presence is likely an error or artifact from a shared build process.  Removing these statements cleans up the build process and prevents confusion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"6626498331534247b53a876b06aefa11c689b5a2\"\n```\n\n----------------------------------------\n\nTITLE: Google Cloud Redis Cluster Quickstart with Node.js\nDESCRIPTION: This quickstart guide provides a simple example of using the Google Cloud Redis Cluster client library for Node.js. It demonstrates basic usage and setup for the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Execute Account Label Operations in CSS API\nDESCRIPTION: Contains sample code for creating, deleting, listing and updating account labels using the CSS API Account Labels Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Account Labels Service Operations\\nnode packages/google-shopping-css/samples/generated/v1/account_labels_service.create_account_label.js\\nnode packages/google-shopping-css/samples/generated/v1/account_labels_service.delete_account_label.js\\nnode packages/google-shopping-css/samples/generated/v1/account_labels_service.list_account_labels.js\\nnode packages/google-shopping-css/samples/generated/v1/account_labels_service.update_account_label.js\n```\n\n----------------------------------------\n\nTITLE: Running Set Labels Script in Node.js\nDESCRIPTION: Set labels on clusters using this Node.js script. Prerequisites include Node.js, Google Cloud SDK, and label configurations. Outputs confirmation of labels set.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.set_labels.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificate Authority with Google Cloud Private CA in Node.js\nDESCRIPTION: This code sample demonstrates the deletion of a Certificate Authority using the Google Cloud Private CA Service API. It employs the CertificateAuthorityService client to call the deleteCertificateAuthority method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.delete_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Test IAM Permissions - Cloud IoT - Node.js\nDESCRIPTION: This sample demonstrates how to test IAM permissions for a device registry using the Google Cloud IoT Device Manager in Node.js. It leverages the google-cloud-node library for interaction with the IoT service. Running the sample needs proper authentication and project setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided in the text, only a link to the source code.\n```\n\n----------------------------------------\n\nTITLE: Getting a Workload in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet shows how to retrieve details of a workload from Google Cloud App Hub. It requires the workload ID and returns the workload details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getWorkload = async (workloadId) => {\n  const response = await client.getWorkload({\n    id: workloadId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the project code and attempts to fix any issues it finds. It should be run before submitting a pull request to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workstations/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting a Migration Job with Google Cloud Data Migration Service in Node.js\nDESCRIPTION: This snippet demonstrates how to get a migration job using the Google Cloud Data Migration Service. It requires the google-cloud-clouddms package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.get_migration_job.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Node.js\nDESCRIPTION: Lint the code for style issues and automatically fix them where possible using npm scripts. This helps maintain code consistency within the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc-publishing/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using DLP API to Inspect and Assess a String in Node.js\nDESCRIPTION: This quickstart sample demonstrates how to use the Google Cloud DLP API to inspect and assess a string for sensitive information. It requires a project ID to be passed as a command-line argument.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nnode quickstart.js my-project\n```\n\n----------------------------------------\n\nTITLE: Running Session Entity Type Listing\nDESCRIPTION: Executes the script to list all session entity types in a Dialogflow CX environment. Requires Node.js and relevant Dialogflow CX credentials. Outputs a list of all session entity types with their details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/session_entity_types.list_session_entity_types.js\n```\n\n----------------------------------------\n\nTITLE: Updating Permission with Permission Service in JavaScript\nDESCRIPTION: This sample shows updating a permission using the PermissionService from the google-ai-generativelanguage package. The provided command is used to execute the sample, updating specific permission configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.update_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Permissions with Permission Service using Node.js\nDESCRIPTION: This code example demonstrates how to use the updatePermission method of the PermissionService. It uses the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/permission_service.update_permission.js\n```\n\n----------------------------------------\n\nTITLE: Updating Job - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet allows you to update the configuration or parameters of an existing job in Google Cloud Dataflow, providing flexibility in managing job resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {JobsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new JobsV1Beta3Client();\n// Functionality to update an existing job goes here.\n```\n\n----------------------------------------\n\nTITLE: Creating Import Job with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to create an import job using the google-cloud-kms library in a Node.js environment. The provided command is used to generate a new import job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.create_import_job.js`\n```\n\n----------------------------------------\n\nTITLE: Batch Create Notes with Grafeas in Node.js\nDESCRIPTION: This sample shows how to create multiple notes in batch using the Grafeas API in Node.js. It depends on the google-devtools-containeranalysis package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/grafeas.batch_create_notes.js`\n```\n\n----------------------------------------\n\nTITLE: Getting GCP User Access Binding with Access Context Manager API in Node.js\nDESCRIPTION: This example demonstrates retrieving a GCP user access binding using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.get_gcp_user_access_binding.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy with Access Context Manager API in Node.js\nDESCRIPTION: This snippet shows how to set an IAM policy using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Application - Node.js\nDESCRIPTION: This snippet updates a specified application within Google Cloud App Hub, allowing modifications to application configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.update_application.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.update_application.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet shows how to set the IAM policy for a tag value using the Google Cloud Resource Manager API in Node.js. It uses the tag_values.set_iam_policy method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy via Node.js\nDESCRIPTION: This script sets an IAM policy for a resource in Google Cloud's Policy Tag Manager using Node.js. It is necessary to have appropriate permissions and access configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.set_iam_policy.js\"\n```\n\n----------------------------------------\n\nTITLE: Running List Operations Script in Node.js\nDESCRIPTION: This Node.js script returns a list of operations related to Google Cloud clusters. Dependencies include Node.js and Google Cloud SDK. Outputs comprehensive operation details upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-container/samples/generated/v1/cluster_manager.list_operations.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Spec with API Hub using Node.js\nDESCRIPTION: This example showcases how to extract specification details of an API from Google Cloud API Hub using Node.js, a valuable tool in maintaining accurate API specs within your environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_spec.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Dialogflow Intent using Node.js\nDESCRIPTION: The snippet executes a JavaScript command via Node.js to retrieve a Dialogflow intent's details. Requires the Google Cloud Node.js client library and Node environment configuration to run the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.get_intent.js\"\n```\n\n----------------------------------------\n\nTITLE: Documenting New Features in Markdown\nDESCRIPTION: Lists new features added to the Chat API, including references to related issues and commit hashes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6182](https://github.com/googleapis/google-cloud-node/issues/6182)) ([c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Maps Routing Samples in Node.js\nDESCRIPTION: These commands navigate to the samples directory, install the necessary npm packages, and return to the parent directory. This setup is required before running the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Getting Managed Kafka Connect Cluster in Node.js\nDESCRIPTION: This code sample shows how to retrieve information about a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.get_connect_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Glossary using Google Cloud Translation API - JavaScript\nDESCRIPTION: Deletes an existing glossary in the Google Cloud Translation service by glossary ID. The script ensures authentication with the translation client before making the request.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Delete a glossary\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function deleteGlossary() {\n  // Your code here to delete a glossary\n}\ndeleteGlossary();\n```\n\n----------------------------------------\n\nTITLE: Create User Link in Analytics Admin using Node.js\nDESCRIPTION: This sample shows how to create a user link using the Google Analytics Admin API with Node.js. The `createUserLink` method is used to create the new user link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_user_link.js)\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Group with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet shows how to create an entry group using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.create_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Data Source with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to get a data source using the BackupDR service in Node.js. The snippet shows the command-line usage for executing the sample, leveraging the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_data_source.js`\n```\n\n----------------------------------------\n\nTITLE: Delete Android App Data Stream in Analytics Admin using Node.js\nDESCRIPTION: This code demonstrates how to delete an Android app data stream using the Google Analytics Admin API with Node.js. The `deleteAndroidAppDataStream` method is used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.delete_android_app_data_stream.js)\n```\n\n----------------------------------------\n\nTITLE: Creating Artifact - Node.js\nDESCRIPTION: This snippet illustrates how to create an artifact in the Apigee Registry. It focuses on the necessary parameters and the expected output upon successful creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.create_artifact.js\n```\n\n----------------------------------------\n\nTITLE: Deleting API Deployment Revision - Node.js\nDESCRIPTION: This snippet demonstrates how to delete a specific revision of an API deployment within the Apigee Registry. It details the necessary inputs and expected results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeregistry/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apigeeregistry/samples/generated/v1/registry.delete_api_deployment_revision.js\n```\n\n----------------------------------------\n\nTITLE: Enabling a Secret Version with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This snippet shows how to enable a previously disabled secret version using the Google Cloud Secret Manager service (v1beta2). It utilizes the enable_secret_version method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.enable_secret_version.js\n```\n\n----------------------------------------\n\nTITLE: Creating Page Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to create a page using the Dialogflow CX API in a Node.js environment.  The `@google-cloud/dialogflow-cx` package is required.  The command-line tool is used to run this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/pages.create_page.js`\n```\n\n----------------------------------------\n\nTITLE: Creating Network Policy with Node.js\nDESCRIPTION: This snippet enables the creation of a network policy in Google's VMware Engine using Node.js. Google Cloud dependencies are necessary. Execute via the specified Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_network_policy.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Account Issues with Google Shopping Merchant API in Node.js\nDESCRIPTION: This snippet demonstrates how to list account issues using the Google Shopping Merchant API's AccountIssueService. It requires the google-cloud-node library and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/account_issue_service.list_account_issues.js\n```\n\n----------------------------------------\n\nTITLE: Starting Photo Sequence Upload - Street View Publish API Node.js\nDESCRIPTION: Example showing how to initiate a photo sequence upload using the Street View Publish API. This endpoint allows uploading multiple connected photos as a sequence.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.start_photo_sequence_upload.js\n```\n\n----------------------------------------\n\nTITLE: Getting Autokey Configuration in JavaScript\nDESCRIPTION: Fetches the current Autokey configuration settings in Google Cloud KMS using Node.js. The script requires the Google Cloud client library and proper authentication. It outputs the existing configuration settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Listing Job Messages - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet retrieves a list of messages associated with a certain job in Google Cloud Dataflow, aiding in debugging and understanding job execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {MessagesV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new MessagesV1Beta3Client();\n// Functionality to list job messages goes here.\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Node.js\nDESCRIPTION: This snippet shows the command to run sample integration tests for the Node.js project. This step is necessary to verify that the new changes work well with the overall system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Updating Asset Feed using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to update an asset feed using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.update_feed.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Policy Bindings - Node.js\nDESCRIPTION: This code snippet lists all policy bindings using the Google Cloud Node.js client library. It requires the `google-iam` package. The output is a collection of policy binding objects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.list_policy_bindings.js\n```\n\n----------------------------------------\n\nTITLE: Displaying Version History in Markdown\nDESCRIPTION: This snippet shows how version history is formatted in the changelog using Markdown. It includes version numbers, dates, and links to compare changes between versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [2.0.1](https://github.com/googleapis/google-cloud-node/compare/migrationcenter-v2.0.0...migrationcenter-v2.0.1) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: List Workloads in Assured Workloads using JavaScript\nDESCRIPTION: This sample demonstrates how to list workloads within the Assured Workloads service using the google-cloud-node library. It uses the AssuredWorkloadsService client to retrieve a list of workloads. The sample is located in the `samples/generated/v1` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Deleting OS Policy Assignment with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code sample demonstrates deleting an OS policy assignment using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.delete_o_s_policy_assignment.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests.\nDESCRIPTION: This command is used to run all system tests for the Node.js application. These tests help in validating the system as a whole and ensuring that everything functions together seamlessly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Web Security Scanner Scan Configs with Node.js\nDESCRIPTION: A script for listing all scan configurations available in the Web Security Scanner. Execute this Node.js script after ensuring Google Cloud SDK is set up and accessible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-websecurityscanner/samples/generated/v1/web_security_scanner.list_scan_configs.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Node.js Application\nDESCRIPTION: This command runs the unit tests for the Node.js application. It ensures that the individual components of the application are working as intended after changes have been made.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Deleting Event Create Rule - Google Analytics Admin Service - JavaScript\nDESCRIPTION: The snippet details the deletion of an event create rule in Google Analytics using Node.js with Admin Service. Requires Google Cloud's Node.js client library and the specific rule ID for deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteEventCreateRule(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting a Chunk with Retriever Service using Node.js\nDESCRIPTION: This snippet illustrates how to use the getChunk method of the RetrieverService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.get_chunk.js\n```\n\n----------------------------------------\n\nTITLE: Listing Local Inventories with Merchant API in Node.js\nDESCRIPTION: This snippet illustrates how to list local inventories using the Local Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/local_inventory_service.list_local_inventories.js\n```\n\n----------------------------------------\n\nTITLE: Updating Control with Google Cloud Retail API in Node.js\nDESCRIPTION: This snippet illustrates how to update a control using the Google Cloud Retail API. It utilizes the ControlService client to modify the properties of an existing control in a catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2/control_service.update_control.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Deidentify Template with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to delete a deidentify template using the Google Cloud DLP service. It utilizes the deleteDeidentifyTemplate method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_deidentify_template.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Inspect Template with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to delete an inspect template using the Google Cloud DLP service. It utilizes the deleteInspectTemplate method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_inspect_template.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file. The tests are typically written using a testing framework like Mocha or Jest.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-batch/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Creating Client Connector Service in BeyondCorp API using Node.js\nDESCRIPTION: This snippet demonstrates how to create a Client Connector Service using the BeyondCorp API in Node.js.  It provides the command to execute the sample code for creating a client connector service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/generated/v1/client_connector_services_service.create_client_connector_service.js`\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to List Reusable Configs in Node.js\nDESCRIPTION: This sample shows how to list all reusable configurations using Google Cloud Certificate Authority Service. The code can be executed directly to list all reusable configs in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.list_reusable_configs.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Node.js Project\nDESCRIPTION: These commands run different sets of tests on the Node.js project to ensure code quality. There are commands to run unit tests, sample integration tests, and system tests using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\nLANGUAGE: Shell\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\nLANGUAGE: Shell\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Deployment with API Hub using Node.js\nDESCRIPTION: This Node.js script retrieves deployment data from Google Cloud's API Hub, enabling developers to collect information on existing deployments. Ensures up-to-date deployment information is readily accessible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Intent Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to delete an intent using the Dialogflow CX API in a Node.js environment. It requires the `@google-cloud/dialogflow-cx` package. The script is executed via the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.delete_intent.js`\n```\n\n----------------------------------------\n\nTITLE: Restoring Tool Version in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to restore a specific version of a tool using the Dialogflow CX API. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_136\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/tools.restore_tool_version.js\n```\n\n----------------------------------------\n\nTITLE: Create Message - Chat Service - Node.js\nDESCRIPTION: This sample shows how to create a message in a Google Chat space with Node.js.  It uses the `create_message` method of the `Chat_service` to send a new message to a designated space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Running Session Entity Type Retrieval\nDESCRIPTION: Executes the script to retrieve details of a session entity type in Dialogflow CX. Requires Node.js and relevant Dialogflow CX credentials. Takes the session entity type ID as a parameter and returns the entity details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/session_entity_types.get_session_entity_type.js\n```\n\n----------------------------------------\n\nTITLE: Switching Over a Cluster in AlloyDB Admin using Node.js\nDESCRIPTION: This snippet performs a switchover operation on a cluster in AlloyDB, facilitating failover processes. It requires the AlloyDB Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/README.md#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AlloyDBAdminClient } = require('@google-cloud/alloydb');\nconst client = new AlloyDBAdminClient();\n\nasync function switchoverCluster() {\n  // ... implementation ...\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting Regional Inventory with Merchant API in Node.js\nDESCRIPTION: This code sample demonstrates how to delete regional inventory using the Regional Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/regional_inventory_service.delete_regional_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Document with Retriever Service using Node.js\nDESCRIPTION: This snippet illustrates how to use the createDocument method of the RetrieverService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/retriever_service.create_document.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Table Data Profile with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a table data profile using the Google Cloud DLP service. It uses the deleteTableDataProfile method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_table_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Listing IAM Policies - Node.js\nDESCRIPTION: This snippet provides a method to list all IAM policies using the Google Cloud Node.js client library. It requires the `google-iam` package. The output is a collection of policy objects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v2/policies.list_policies.js\n```\n\n----------------------------------------\n\nTITLE: Updating Managed Kafka Consumer Group in Node.js\nDESCRIPTION: This code sample shows how to update a consumer group in a Managed Kafka cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka.update_consumer_group.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance from AlloyDB using Node.js\nDESCRIPTION: This JavaScript snippet showcases how to delete an instance from an AlloyDB cluster. The execution requires suitable permissions and setup. Upon running, it removes the specified instance from the cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1/alloy_d_b_admin.delete_instance.js\n```\n\n----------------------------------------\n\nTITLE: Update Backup Vault in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: The snippet provides guidance on updating a backup vault in Google Cloud Backup and DR through Node.js. Dependency includes the `@google-cloud/backupdr` package. Execute using Node.js for vault update results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.update_backup_vault.js\n```\n\n----------------------------------------\n\nTITLE: Updating Product Set Information with Google Cloud Vision API in Node.js\nDESCRIPTION: This snippet shows how to update product set information using the Google Cloud Vision API. It utilizes the product_search.update_product_set method to modify existing product set details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p3beta1/product_search.update_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Creating Key Ring with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to create a key ring using the google-cloud-kms library in a Node.js environment. It executes the given command to create a new key ring.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.create_key_ring.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Client Connector Service in BeyondCorp API using Node.js\nDESCRIPTION: This snippet demonstrates retrieving a Client Connector Service using the BeyondCorp API in Node.js.  It includes the command needed to execute the sample code for getting a client connector service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/generated/v1/client_connector_services_service.get_client_connector_service.js`\n```\n\n----------------------------------------\n\nTITLE: Purging User Events from Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code showing how to purge user events from Google Cloud Retail API. Used for removing user data when needed for privacy or maintenance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_77\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.purge_user_events.js\n```\n\n----------------------------------------\n\nTITLE: Hybrid Inspect Job Trigger with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample shows how to perform a hybrid inspect operation on a job trigger using the Google Cloud DLP service. It uses the hybridInspectJobTrigger method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.hybrid_inspect_job_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Delete Message - Chat Service - Node.js\nDESCRIPTION: This sample shows how to delete a message from a Google Chat space using Node.js. It uses the `delete_message` method of the `Chat_service` to remove a specific message from a space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Updating Google Cloud Vision API Request Parameters\nDESCRIPTION: Preserves default values in the x-goog-request-params header and makes BatchAnnotateImagesRequest.requests a required parameter.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example of using BatchAnnotateImagesRequest with required requests parameter\nconst request = {\n  requests: [\n    {\n      image: {...},\n      features: [...]\n    }\n  ]\n};\n\nclient.batchAnnotateImages(request);\n```\n\n----------------------------------------\n\nTITLE: Auto-generation Comment in Markdown\nDESCRIPTION: These comments indicate that the README file is auto-generated and provide instructions for regenerating it using synthtool.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[//]: # \"This README.md file is auto-generated, all changes to this file will be lost.\"\n[//]: # \"To regenerate it, use `python -m synthtool`.\"\n```\n\n----------------------------------------\n\nTITLE: Deleting CA Pool with Google Cloud Private CA in Node.js\nDESCRIPTION: This snippet shows how to delete a Certificate Authority Pool using the Google Cloud Private CA Service API. It utilizes the CertificateAuthorityService client to invoke the deleteCaPool method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.delete_ca_pool.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter on changes and automatically fix issues where possible. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Google Cloud Function - Node.js\nDESCRIPTION: This code demonstrates how to set or update the IAM policy for a Google Cloud Function, which is crucial for managing access permissions associated with the function.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v1/cloud_functions_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Client Connector Service in BeyondCorp API using Node.js\nDESCRIPTION: This snippet shows how to delete a Client Connector Service using the BeyondCorp API in Node.js. The provided command will run the sample code to delete a client connector service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-beyondcorp-clientconnectorservices/samples/generated/v1/client_connector_services_service.delete_client_connector_service.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the Node.js project, as specified in the package.json file. It fetches and installs all required packages into the `node_modules` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating library to use Node 12\nDESCRIPTION: This is a breaking change that updates the Storage Transfer Node.js library to use Node 12.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* update library to use Node 12 (#64)\n\n### Build System\n\n* update library to use Node 12 ([#64](https://github.com/googleapis/nodejs-storage-transfer/issues/64)) ([908f83e](https://github.com/googleapis/nodejs-storage-transfer/commit/908f83e07c89cd14a434fe2a09f5ca22ef3956be))\n```\n\n----------------------------------------\n\nTITLE: Getting Datastream Route in Node.js\nDESCRIPTION: This code snippet shows how to retrieve a route in Google Cloud Datastream using Node.js, vital for operational integrity and data flow management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.get_route.js\n```\n\n----------------------------------------\n\nTITLE: Launching Flex Template - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to launch a Flex Template in Google Cloud Dataflow using Node.js. It utilizes the Dataflow service to initiate a template with specified parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {FlexTemplatesServiceClient} = require('@google-cloud/dataflow');\nconst client = new FlexTemplatesServiceClient();\n// Functionality to launch a flex template goes here.\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Billing Account Resources\nDESCRIPTION: Extends the Recommender API to support billing accounts as a parent resource for recommendations and insights. This feature enables more flexible resource management and access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Added support for billingAccounts as parent resource\n```\n\n----------------------------------------\n\nTITLE: Using DLP Service to Create Stored Info Type in Node.js\nDESCRIPTION: This snippet demonstrates how to create a stored info type using the Google Cloud DLP service. It requires the google-privacy-dlp package and uses the createStoredInfoType method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.create_stored_info_type.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Network Peering with Node.js\nDESCRIPTION: Implements deletion of network peering in VMware Engine through Node.js. Ensure all required Google Cloud dependencies are installed. Command-line execution via Node.js is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_network_peering.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Channel Connection with Eventarc in Node.js\nDESCRIPTION: Remove an existing channel connection in Google Cloud Eventarc using this Node.js command. Requires using Node.js setup with proper authentication. Running the command reflects the connection deletion in results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.delete_channel_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command runs system tests to validate the end-to-end functionality of the application. System tests simulate real-world scenarios to verify that the entire system behaves as expected.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Resizing a Volume using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet demonstrates how to resize a volume using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.resize_volume.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Deploy Policy Retrieval Sample in Node.js\nDESCRIPTION: The script executed by this snippet retrieves deploy policy data using Node.js. Ensure Node.js and the sample setup is available. Executing the script returns specifics of deploy policy configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_deploy_policy.js\n```\n\n----------------------------------------\n\nTITLE: Creating Tag with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This code sample illustrates how to create a tag using the Google Cloud Data Catalog API (v1beta1). It requires the google-cloud-datacatalog package and appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.create_tag.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google Cloud BigQuery Data Exchange Client Library\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google Cloud BigQuery Data Exchange client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/bigquery-data-exchange@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This quickstart guide provides a simple example to get started with the BigQuery Data Transfer Service using Node.js. It includes instructions on how to run the quickstart script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Verify EKM Connectivity JavaScript\nDESCRIPTION: Node.js script to verify connectivity of an EKM connection within Google Cloud KMS. Requires configured access to Google Cloud services. Verifies and outputs the connectivity status as the primary result.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code is available at the provided link in the samples section\n\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests in Node.js\nDESCRIPTION: This snippet shows the command to execute unit tests in a Node.js environment. It is essential to run these tests to ensure the functionality and stability of the project after making changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Starting an Instance using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet demonstrates how to start an instance using the Google Cloud Bare Metal Solution API. It uses the google-cloud-baremetalsolution package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.start_instance.js\n```\n\n----------------------------------------\n\nTITLE: Updating Client TLS Policy with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet shows how to update a client TLS policy using the Google Cloud Network Security API. It uses the update_client_tls_policy method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.update_client_tls_policy.js\n```\n\n----------------------------------------\n\nTITLE: Create Occurrence with Grafeas in Node.js\nDESCRIPTION: This sample showcases how to create a single occurrence using the Grafeas API in Node.js. The sample depends on the google-devtools-containeranalysis package and is executed using a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/grafeas.create_occurrence.js`\n```\n\n----------------------------------------\n\nTITLE: Creating a Challenge with Confidential Computing API in Node.js\nDESCRIPTION: This snippet demonstrates how to create a challenge using the Confidential Computing API. It requires the google-cloud-confidentialcomputing package and proper setup of Google Cloud credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-confidentialcomputing/samples/generated/v1/confidential_computing.create_challenge.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Set of commands to run different test suites including unit tests, sample integration tests, and system tests for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-areainsights/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Key Event - Google Analytics Admin Service - JavaScript\nDESCRIPTION: This snippet outlines the procedure to delete a key event using Google Analytics Admin Service in Node.js. It requires the Google Cloud Node.js client library. Provide the key event ID to proceed with the operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nrequire('@google-cloud/analytics-admin').AnalyticsAdminServiceClient.deleteKeyEvent(params, callback);\n```\n\n----------------------------------------\n\nTITLE: Listing Inventories with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This snippet illustrates how to list inventories using the Google Cloud OS Config Zonal Service. It is a Node.js script that depends on the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_inventories.js\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_report_config script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_report_config sample script. This script demonstrates how to delete a report configuration using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_report_config.js\n```\n\n----------------------------------------\n\nTITLE: Listing Data Sources with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to list data sources using the BackupDR service in Node.js. It shows the command-line usage to run the sample, utilizing the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_data_sources.js`\n```\n\n----------------------------------------\n\nTITLE: Get DLP Job with Google Cloud DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve information about a specific DLP job using the Google Cloud DLP service. It uses the getDlpJob method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_dlp_job.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Speech Client Library\nDESCRIPTION: This snippet demonstrates how to install the Google Cloud Speech client library using npm. It is essential to make sure that Node.js and npm are installed prior to running this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/speech\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tag Hold using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet illustrates how to delete a tag hold using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_holds.delete_tag_hold.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Deidentify Template with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a deidentify template using the Google Cloud DLP service. It uses the getDeidentifyTemplate method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_deidentify_template.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: This snippet outlines the command to run unit tests for the Google Cloud Node.js library. Running these tests verifies that code changes work as intended without introducing regressions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Projects\nDESCRIPTION: Commands for running different types of tests for Google Cloud Node.js projects, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-marketingplatform-admin/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Create Property in Analytics Admin via Node.js\nDESCRIPTION: This example demonstrates how to create a property within the Google Analytics Admin API using Node.js. It utilizes the `createProperty` method of the `AnalyticsAdminServiceClient`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_property.js)\n```\n\n----------------------------------------\n\nTITLE: Creating Conversation Model in Dialogflow v2\nDESCRIPTION: Demonstrates how to create a conversation model in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and creates a new conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.create_conversation_model.js`\n```\n\n----------------------------------------\n\nTITLE: Get Stored Info Type with Google Cloud DLP Service in Node.js\nDESCRIPTION: This snippet shows how to get information about a stored info type using the Google Cloud DLP service. It calls the getStoredInfoType method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_stored_info_type.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Snapshot - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code retrieves details of a specified snapshot in Google Cloud Dataflow, useful for analyzing its contents and state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {SnapshotsV1Beta3Client} = require('@google-cloud/dataflow');\nconst client = new SnapshotsV1Beta3Client();\n// Functionality to get a snapshot goes here.\n```\n\n----------------------------------------\n\nTITLE: Calculating Stats with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to use the calculate_stats method of the Contact Center Insights API. It requires the google-cloud-contactcenterinsights package and is run as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.calculate_stats.js\n```\n\n----------------------------------------\n\nTITLE: Manage Accounts in CSS API\nDESCRIPTION: Sample code for account management operations including getting account details, listing child accounts and updating account labels.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Accounts Service Operations\\nnode packages/google-shopping-css/samples/generated/v1/accounts_service.get_account.js\\nnode packages/google-shopping-css/samples/generated/v1/accounts_service.list_child_accounts.js\\nnode packages/google-shopping-css/samples/generated/v1/accounts_service.update_labels.js\n```\n\n----------------------------------------\n\nTITLE: Installing the App Hub API Client Library via npm\nDESCRIPTION: This snippet demonstrates how to install the App Hub API client library for Node.js using npm. It requires npm to be installed and configured on your local machine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apphub\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests in Node.js\nDESCRIPTION: This snippet demonstrates how to run sample integration tests in a Node.js setup. These tests are important for validating the interaction between different components of the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Running Google Cloud Controls Partner Quickstart in Node.js\nDESCRIPTION: This command demonstrates how to run the quickstart sample for the Google Cloud Controls Partner API using Node.js. It executes the quickstart script located in the specified package directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Package from Artifact Registry using Node.js\nDESCRIPTION: This snippet shows how to retrieve a package from Google Cloud Artifact Registry. It utilizes the get_package method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_package.js\n```\n\n----------------------------------------\n\nTITLE: Listing External APIs with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to list external APIs using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_external_apis.js\n```\n\n----------------------------------------\n\nTITLE: Getting Flow Validation Result in Dialogflow CX using Node.js\nDESCRIPTION: This code shows how to get the validation result for a flow in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and assumes proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_98\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.get_flow_validation_result.js\n```\n\n----------------------------------------\n\nTITLE: Get File Store Data Profile with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample shows how to retrieve a file store data profile using the Google Cloud DLP service. It calls the getFileStoreDataProfile method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_file_store_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Creating Metadata Job in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet shows how to create a metadata job in the Google Cloud Dataplex catalog service. It requires the Google Cloud client library for Node.js and allows setting various parameters for the job.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for creating a metadata job\n\n```\n\n----------------------------------------\n\nTITLE: Listing Backups with BackupDR in Node.js\nDESCRIPTION: This snippet shows how to list backups using the BackupDR service in Node.js. It includes the command-line usage for executing the sample, leveraging the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_backups.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js project using npm. This is a prerequisite step before running tests or developing new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Complete Import Space - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to complete the import of a space using the Google Chat API in Node.js. It involves calling the `completeImportSpace` method of the `Chat_service` to finalize the space import process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which identifies and potentially fixes code style issues in the project. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Management Servers with BackupDR in Node.js\nDESCRIPTION: This snippet illustrates how to list management servers using the BackupDR service in Node.js.  It includes the command-line usage for executing the sample using the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_management_servers.js`\n```\n\n----------------------------------------\n\nTITLE: Updating a Service - Node.js\nDESCRIPTION: This snippet updates a specific service in App Hub, critical for maintaining service configurations as per business needs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code link: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/generated/v1/app_hub.update_service.js\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.update_service.js\n```\n\n----------------------------------------\n\nTITLE: Using Network_services to list endpoint policies in Node.js\nDESCRIPTION: Example for listing endpoint policies using the Google Cloud Network Services API in Node.js. This sample demonstrates how to call the list_endpoint_policies method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1beta1/network_services.list_endpoint_policies.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required NPM dependencies for the project. This should be run before attempting to run tests or contribute code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ads-admanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using Google Chat API - Message Operations\nDESCRIPTION: Sample commands for executing Google Chat API message-related operations including getting messages, listing messages, and updating messages using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-chat/samples/generated/v1/chat_service.get_message.js\nnode packages/google-chat/samples/generated/v1/chat_service.list_messages.js\nnode packages/google-chat/samples/generated/v1/chat_service.update_message.js\n```\n\n----------------------------------------\n\nTITLE: Creating Version in Dialogflow CX using Node.js\nDESCRIPTION: This code snippet shows how to create a new version of a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_144\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/versions.create_version.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Retriever Service: Batch Operations Samples\nDESCRIPTION: Comprehensive collection of sample code for batch operations in the Google Cloud AI Generative Language Retriever Service, including creating, deleting, and updating chunks\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Batch Create Chunks Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Batch Delete Chunks Sample\n```\n\nLANGUAGE: javascript\nCODE:\n```\nRetriever Service Batch Update Chunks Sample\n```\n\n----------------------------------------\n\nTITLE: Querying Metadata in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet shows how to query metadata in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.query_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Markdown Comment - Auto-generation Notice\nDESCRIPTION: Markdown comment indicating that the README file is auto-generated and changes should be made through synthtool.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[//]: # \"This README.md file is auto-generated, all changes to this file will be lost.\"\n[//]: # \"To regenerate it, use `python -m synthtool`.\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Cloud Scheduler with Node.js\nDESCRIPTION: This quickstart guide provides a basic example of using Cloud Scheduler with Node.js. It demonstrates how to set up and use the Google Cloud Scheduler client library for common operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Playbook Version in Dialogflow CX using Node.js\nDESCRIPTION: This Node.js script illustrates the process of creating a new version of an existing playbook in Dialogflow CX. Authentication via API client is required. The script outputs the new playbook version details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_122\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/playbooks.create_playbook_version.js\n```\n\n----------------------------------------\n\nTITLE: Discovering a Connection Profile with Datastream API in Node.js\nDESCRIPTION: This sample demonstrates how to discover a connection profile using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.discover_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Supporting regapic LRO in Node.js\nDESCRIPTION: This commit adds support for regapic LRO (Long Running Operations) to the Storage Transfer Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* support regapic LRO ([#75](https://github.com/googleapis/nodejs-storage-transfer/issues/75)) ([cc80906](https://github.com/googleapis/nodejs-storage-transfer/commit/cc80906bcf86b68485fd62970b1b6f8a30c1123b))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Managing Entity Types and Entities in Dialogflow using Node.js\nDESCRIPTION: Collection of samples for managing entity types and entities, including batch operations for creating, updating, and deleting entities and entity types.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_87\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/entity_types.batch_create_entities.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/entity_types.batch_delete_entities.js\nnode packages/google-cloud-dialogflow/samples/generated/v2beta1/entity_types.batch_update_entities.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Node.js Project\nDESCRIPTION: Command to run the linter that checks for code style issues and potentially fixes them automatically. This ensures code adheres to the project style guide.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deploying a QA Scorecard Revision with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates how to deploy a QA scorecard revision using the Contact Center Insights API. It utilizes the deploy_qa_scorecard_revision method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.deploy_qa_scorecard_revision.js\n```\n\n----------------------------------------\n\nTITLE: Deidentifying Content with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to deidentify content using the Google Cloud DLP service. It uses the deidentifyContent method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.deidentify_content.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js system tests with npm\nDESCRIPTION: This snippet shows how to run the system tests for the Node.js project using npm. It executes system-level tests using the `npm run system-test` command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\n\"# Run all system tests.\\n        npm run system-test\"\n```\n\n----------------------------------------\n\nTITLE: Linting Changes - Node.js\nDESCRIPTION: This snippet describes the command used for linting the code and potentially fixing any issues identified by the linter. The command 'npm run fix' is used for this purpose.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: Commands to run different test suites for the Google Cloud Node project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Comparison in Markdown\nDESCRIPTION: This snippet shows how version comparisons are formatted in the changelog using Markdown syntax. It includes a link to the GitHub comparison view.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.5.1](https://github.com/googleapis/google-cloud-node/compare/gdchardwaremanagement-v0.5.0...gdchardwaremanagement-v0.5.1) (2025-03-21)\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests\nDESCRIPTION: This snippet contains the command used to execute sample integration tests. These tests are critical for assessing the interaction between various parts of the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Deleting AlloyDB Backup in Node.js\nDESCRIPTION: This code snippet shows how to delete an AlloyDB backup using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.delete_backup.js\n```\n\n----------------------------------------\n\nTITLE: Creating Entry Group with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet illustrates how to create an entry group using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.create_entry_group.js\n```\n\n----------------------------------------\n\nTITLE: Creating AlloyDB Cluster in Node.js\nDESCRIPTION: This code snippet illustrates how to create an AlloyDB cluster using the Google Cloud Node.js client library. It requires the AlloyDB Admin client and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.create_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Domain Mapping Operations in Google App Engine using Node.js\nDESCRIPTION: Sample code demonstrating domain mapping CRUD operations in Google App Engine. Includes creating, reading, updating, deleting and listing domain mappings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/domain_mappings.create_domain_mapping.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/domain_mappings.delete_domain_mapping.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/domain_mappings.get_domain_mapping.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/domain_mappings.list_domain_mappings.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/domain_mappings.update_domain_mapping.js\n```\n\n----------------------------------------\n\nTITLE: Create Space - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates how to create a new space in Google Chat using Node.js. It involves calling the `create_space` method of the `Chat_service` to provision a new chat space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Running Node.js System Tests\nDESCRIPTION: This command executes end-to-end system tests for the Node.js project. These tests simulate real-world scenarios to ensure the application functions correctly in a production-like environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\n        npm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Continuous Tests in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to run continuous tests for an environment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the continuous test operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.run_continuous_test.js\n```\n\n----------------------------------------\n\nTITLE: Getting a Connection with DLP Service in Node.js\nDESCRIPTION: This code sample shows how to retrieve a connection using the Google Cloud DLP service. It utilizes the getConnection method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_connection.js\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Vaults with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to list backup vaults using the BackupDR service in Node.js. It showcases the command-line usage to run the sample, using the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.list_backup_vaults.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Case Attachments with Google Cloud Support API\nDESCRIPTION: Sample script demonstrating how to list attachments for a specific support case using the Case Attachment Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_attachment_service.list_attachments.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Executes the unit tests for the application, helping to verify that individual components function as expected. This is vital for maintaining the integrity of the code upon updates or changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Updating Chat API Version in Markdown\nDESCRIPTION: Updates the version number and date for the Chat API, including a link to compare changes with the previous version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.15.0](https://github.com/googleapis/google-cloud-node/compare/chat-v0.14.0...chat-v0.15.0) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Updating Access Level with Access Context Manager API in Node.js\nDESCRIPTION: This code snippet shows how to update an access level using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.update_access_level.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Testing - Node.js\nDESCRIPTION: This snippet explains how to install dependencies necessary for running tests in a Node.js environment. It emphasizes the need to run 'npm install' before testing the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding Gitignore and Samples to Node.js Cloud Shell Client\nDESCRIPTION: This code snippet shows a commit that adds a gitignore file and samples to the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\nadd gitignore, and samples ([4951579](https://www.github.com/googleapis/nodejs-cloud-shell/commit/4951579c22c3a230621898ec6f581faa0a5df28b))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js library, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating Metadata Job with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet shows how to create a metadata job using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.create_metadata_job.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests - Node.js\nDESCRIPTION: This snippet outlines how to run sample integration tests for the library. It requires using the npm command 'npm run samples-test' to execute the defined integration tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Executing Permission Service Get Permission Method with Node.js\nDESCRIPTION: This snippet demonstrates how to use the getPermission method of the PermissionService. It requires the Google Cloud AI Generative Language API Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta/permission_service.get_permission.js\n```\n\n----------------------------------------\n\nTITLE: Listing Adaptive MT Sentences with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code sample illustrates how to list adaptive MT sentences using the Translation Service. It employs the list_adaptive_mt_sentences method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_adaptive_mt_sentences.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a DLP Job in Node.js\nDESCRIPTION: This code sample shows how to delete a DLP job using the Google Cloud DLP service. It utilizes the deleteDlpJob method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.delete_dlp_job.js\n```\n\n----------------------------------------\n\nTITLE: Delete Account in Analytics Admin using Node.js\nDESCRIPTION: This code snippet demonstrates the deletion of an account in Google Analytics Admin via Node.js. It uses the `deleteAccount` method of the `AnalyticsAdminServiceClient`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.delete_account.js)\n```\n\n----------------------------------------\n\nTITLE: Get Source in Security Center\nDESCRIPTION: Retrieves a source from Google Cloud Security Center using the Node.js client library. This sample demonstrates fetching a security source configured in Security Center. The `@google-cloud/security-center` package is a prerequisite.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.get_source\"\n```\n\n----------------------------------------\n\nTITLE: Launching a Template - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This code snippet demonstrates how to launch a template in Google Cloud Dataflow, which is crucial for executing predefined workflows.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {TemplatesServiceClient} = require('@google-cloud/dataflow');\nconst client = new TemplatesServiceClient();\n// Functionality to launch a template goes here.\n```\n\n----------------------------------------\n\nTITLE: Deleting Taxonomy with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line script to delete an existing taxonomy in the Google Cloud Datacatalog using the Policy Tag Manager API. Requires Node.js and Google Cloud SDK setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.delete_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Promoting Replica with Cloud Filestore Manager in Javascript\nDESCRIPTION: This snippet shows how to promote a replica using the Cloud Filestore Manager in Javascript.  It uses the google-cloud-node library to interact with the Cloud Filestore API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-filestore/samples/generated/v1/cloud_filestore_manager.promote_replica.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Asset Inventory client library\nDESCRIPTION: This command installs the Cloud Asset Inventory client library for Node.js using npm. It allows you to interact with the Google Cloud Asset Inventory API from your Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/asset\n```\n\n----------------------------------------\n\nTITLE: Finishing a DLP Job in Node.js\nDESCRIPTION: This code sample shows how to finish a DLP job using the Google Cloud DLP service. It utilizes the finishDlpJob method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.finish_dlp_job.js\n```\n\n----------------------------------------\n\nTITLE: Insights API Method Integration\nDESCRIPTION: Adds new methods for interacting with insights in the Recommender API. These methods provide enhanced capabilities for retrieving and managing insights.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New methods for ListInsights, GetInsight, MarkInsightAccepted\n```\n\n----------------------------------------\n\nTITLE: Updating Intent Dialogflow CX with Node.js\nDESCRIPTION: This snippet demonstrates how to update an intent using the Dialogflow CX API in a Node.js environment. The `@google-cloud/dialogflow-cx` package is a prerequisite. The command-line triggers the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/intents.update_intent.js`\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter on the codebase which can automatically fix certain issues to ensure code style consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating a Secret with Google Cloud Secret Manager in Node.js (Beta)\nDESCRIPTION: This snippet demonstrates how to create a new secret using the Google Cloud Secret Manager service (v1beta2). It utilizes the create_secret method of the SecretManagerServiceClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-secretmanager/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-secretmanager/samples/generated/v1beta2/secret_manager_service.create_secret.js\n```\n\n----------------------------------------\n\nTITLE: Translating a Document using Google Cloud Translation API - JavaScript\nDESCRIPTION: Translates the content of a document using the Google Cloud Translation service. This script requires proper settings and source document paths.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Translate a document\nconst {TranslationServiceClient} = require('@google-cloud/translate');\nconst client = new TranslationServiceClient();\n\nasync function translateDocument() {\n  // Your code here to translate a document\n}\ntranslateDocument();\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests including unit tests, sample integration tests, and system tests for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-apikeys/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Creating Taxonomy with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line script to create a new taxonomy in the Google Cloud Datacatalog using the Policy Tag Manager API. Requires Node.js and Google Cloud SDK setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.create_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Workflow Sample Usage Commands\nDESCRIPTION: Examples of how to execute individual workflow sample files using Node.js command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-workflows-executions/samples/generated/v1/executions.cancel_execution.js\nnode packages/google-cloud-workflows-executions/samples/generated/v1/executions.create_execution.js\nnode packages/google-cloud-workflows-executions/samples/generated/v1/executions.get_execution.js\nnode packages/google-cloud-workflows-executions/samples/generated/v1/executions.list_executions.js\n```\n\n----------------------------------------\n\nTITLE: Starting Single Photo Upload - Street View Publish API Node.js\nDESCRIPTION: Example demonstrating how to start a single photo upload to Street View using the Publish API. Used for uploading individual photos to Google Street View.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.start_upload.js\n```\n\n----------------------------------------\n\nTITLE: Importing Adaptive MT File with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code sample shows how to import an adaptive MT file using the Translation Service. It uses the import_adaptive_mt_file method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.import_adaptive_mt_file.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Shares in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a share in Google Cloud Filestore using the provided function from the Cloud Filestore Manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete Share Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function deleteShare(projectId, shareId) {\n  // Implementation of deleting a share\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running Taxonomy Deletion Script in Node.js\nDESCRIPTION: Utilize this Node.js script to delete an existing taxonomy in the Google Cloud Data Catalog. Ensure proper permissions are set before executing the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.delete_taxonomy.js\"\n```\n\n----------------------------------------\n\nTITLE: Get Table Data Profile with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample demonstrates how to retrieve a table data profile using the Google Cloud DLP service. It utilizes the getTableDataProfile method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_table_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Create Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to create a worker pool using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Listing Cloud Scheduler Jobs in Node.js\nDESCRIPTION: This code example demonstrates how to list all jobs in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.list_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Listing Specs with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to list specs using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.list_specs.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests\nDESCRIPTION: This snippet demonstrates the command to run sample integration tests for the Google Cloud Node.js library. Integration tests are crucial as they validate the interactions between different components of the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Run Realtime Report\nDESCRIPTION: Sample script for generating realtime reports in the Google Analytics Data Beta API. Provides immediate insights into current website or app performance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.run_realtime_report\n```\n\n----------------------------------------\n\nTITLE: Inject Fault into AlloyDB Instance using Node.js\nDESCRIPTION: This code snippet shows how to inject a fault into an AlloyDB instance for testing purposes using the AlloyDB Admin API in Node.js. It uses the inject_fault method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.inject_fault.js\n```\n\n----------------------------------------\n\nTITLE: Getting Aspect Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific aspect type in the Dataplex service. It requires proper setup of the Google Cloud client library and the corresponding aspect type identifier.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for getting an aspect type\n\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Get Chunk Example in Node.js\nDESCRIPTION: Illustrates the execution of a JavaScript file to retrieve a chunk using Google's Retriever service, with the prerequisite of having Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.get_chunk.js\"\n```\n\n----------------------------------------\n\nTITLE: Getting Recommender Insights with Node.js\nDESCRIPTION: Sample code demonstrating how to get a specific insight using the Recommender API. Requires authentication and proper configuration of the Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1/recommender.get_insight.js\n```\n\n----------------------------------------\n\nTITLE: Increasing STS Sample Coverage in Node.js\nDESCRIPTION: This commit increases the sample coverage for Storage Transfer Service (STS) in the Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n* Increase STS Sample Coverage ([#42](https://github.com/googleapis/nodejs-storage-transfer/issues/42)) ([e10a3e4](https://github.com/googleapis/nodejs-storage-transfer/commit/e10a3e4fa5c712f9f857748eec98b7e0317460d9))\n```\n\n----------------------------------------\n\nTITLE: Quickstart - Google Cloud Dataflow - JavaScript\nDESCRIPTION: This quickstart sample provides a basic example of using Google Cloud Dataflow in Node.js, giving developers a straightforward way to begin exploration with the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {Dataflow} = require('@google-cloud/dataflow');\n// Basic quickstart functionality goes here.\n```\n\n----------------------------------------\n\nTITLE: Deploying an Issue Model with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet illustrates how to deploy an issue model using the Contact Center Insights API. It employs the deploy_issue_model method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.deploy_issue_model.js\n```\n\n----------------------------------------\n\nTITLE: Updating Deployment with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet demonstrates how to update a deployment using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Updating Attribute with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet illustrates how to update an attribute using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.update_attribute.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a QA Scorecard Revision with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet demonstrates the deletion of a QA scorecard revision using the Contact Center Insights API. It utilizes the delete_qa_scorecard_revision method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_qa_scorecard_revision.js\n```\n\n----------------------------------------\n\nTITLE: Get Inspect Template with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code snippet demonstrates how to retrieve an inspect template using the Google Cloud DLP service. It utilizes the getInspectTemplate method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_inspect_template.js\n```\n\n----------------------------------------\n\nTITLE: Asymmetric Decryption with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to perform asymmetric decryption using the google-cloud-kms library in a Node.js environment. It executes the provided command to perform asymmetric decryption with a key.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.asymmetric_decrypt.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting an Analysis Rule with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to delete an analysis rule using the Contact Center Insights API. It uses the delete_analysis_rule method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_analysis_rule.js\n```\n\n----------------------------------------\n\nTITLE: Updating Photo Metadata - Street View Publish API Node.js\nDESCRIPTION: Example showing how to update metadata for an existing photo in Street View using the Publish API. Allows modification of photo attributes after upload.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.update_photo.js\n```\n\n----------------------------------------\n\nTITLE: Apply Hydrated Deployment in Telco Automation API - JavaScript\nDESCRIPTION: Applies a hydrated deployment using the Telco Automation API v1alpha1. This sample shows how to use the apply_hydrated_deployment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.apply_hydrated_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Get Job Trigger with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample illustrates how to get information about a job trigger using the Google Cloud DLP service. It calls the getJobTrigger method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_job_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Unit Tests\nDESCRIPTION: This command executes the unit tests defined in the Node.js project. It typically uses a testing framework like Mocha or Jest, configured in the `package.json` file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\n        npm test\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project. These tests are designed to verify the functionality of individual components or modules of the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Updating Space Read State in Google Chat - JavaScript\nDESCRIPTION: This snippet demonstrates how to update the read state of a space in Google Chat. It requires Node.js and the Google Chat API. The expected input is the space ID and the read state details. The output is the updated space information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n```javascript\n// Code to update space read state\nconst { ChatServiceClient } = require('@google-cloud/chat');\nconst client = new ChatServiceClient();\nasync function updateSpaceReadState(spaceId, readState) {\n  const request = {\n    spaceId: spaceId,\n    readState: readState\n  };\n  const [response] = await client.updateSpaceReadState(request);\n  console.log(`Updated Space: ${response.name}`);\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Managing Load Balancer Route Extensions with Node.js\nDESCRIPTION: Examples for listing and updating load balancer route extensions using the Network Services API. Includes operations for both route and traffic extensions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.list_lb_route_extensions.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.update_lb_route_extension.js\n```\n\n----------------------------------------\n\nTITLE: List Inputs Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to list inputs using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.list_inputs.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Policy Tag in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet shows how to create a Policy Tag in Google Cloud Data Catalog, utilizing the google-cloud-datacatalog library within a Node.js environment. It uses the `createPolicyTag` method to instantiate the new policy tag. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(parent, policyTag) {\n  // [START datacatalog_create_policy_tag]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const parent = 'projects/{project}/locations/{location}/taxonomies/{taxonomy}';  // Taxonomy name.\n  // const policyTag = {};\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function createPolicyTag() {\n    const [policyTag] = await policyTagManagerClient.createPolicyTag({\n      parent: parent,\n      policyTag: policyTag,\n    });\n    console.log(`Policy Tag : ${policyTag.name}`);\n  }\n  createPolicyTag();\n  // [END datacatalog_create_policy_tag]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project's `package.json` file using npm.  It typically runs a testing framework like Mocha or Jest.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Quotas API Client Library in Node.js\nDESCRIPTION: This code snippet demonstrates how to use the Cloud Quotas API client library in Node.js. It includes importing the library, instantiating a client, and making an asynchronous request to list quota preferences.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. Parent value of QuotaPreference resources.\n *  Listing across different resource containers (such as 'projects/-') is not\n *  allowed.\n *  When the value starts with 'folders' or 'organizations', it lists the\n *  QuotaPreferences for org quotas in the container. It does not list the\n *  QuotaPreferences in the descendant projects of the container.\n *  Example parents:\n *  `projects/123/locations/global`\n */\n// const parent = 'abc123'\n/**\n *  Optional. Requested page size. Server may return fewer items than\n *  requested. If unspecified, server will pick an appropriate default.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. Filter result QuotaPreferences by their state, type,\n *  create/update time range.\n *  Example filters:\n *  `state=PENDING OR state=PENDING_PARTIALLY_GRANTED`\n *  `state=PENDING OR state=PENDING_PARTIALLY_GRANTED AND\n *   creation_time>2022-12-03T10:30:00`\n *  If no filter is provided, returns all pending quota preferences.\n */\n// const filter = 'abc123'\n/**\n *  Optional. How to order of the results. By default, the results are ordered\n *  by create time.\n *  Example orders:\n *  `type`\n *  `state, create_time`\n */\n// const orderBy = 'abc123'\n\n// Imports the Cloudquotas library\nconst {CloudQuotasClient} = require('@google-cloud/cloudquotas').v1;\n\n// Instantiates a client\nconst cloudquotasClient = new CloudQuotasClient();\n\nasync function callListQuotaPreferences() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = await cloudquotasClient.listQuotaPreferencesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListQuotaPreferences();\n```\n\n----------------------------------------\n\nTITLE: Updating a Certificate Authority using Google Cloud Certificate Authority Service in Node.js\nDESCRIPTION: This snippet shows how to update a certificate authority using the Google Cloud Certificate Authority Service API. It requires the google-cloud-security-privateca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.update_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Listing Git Repository Links with Developer Connect in Node.js\nDESCRIPTION: This snippet demonstrates how to list Git repository links using the Developer Connect API in Node.js. It assumes that the necessary Google Cloud libraries are installed and configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-developerconnect/samples/generated/v1/developer_connect.list_git_repository_links.js`\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Create Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to create a build trigger using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.create_build_trigger.js`\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Delete Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to delete a worker pool using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.delete_worker_pool.js`\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs the sample integration tests using npm. Integration tests verify the interaction between different parts of the system or with external services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Listing OS Policy Assignment Reports with Google Cloud OS Config Zonal Service in JavaScript\nDESCRIPTION: This code sample shows how to list OS policy assignment reports using the Google Cloud OS Config Zonal Service. It is implemented as a Node.js script and requires the google-cloud-osconfig package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_o_s_policy_assignment_reports.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build List Worker Pools Sample\nDESCRIPTION: This sample demonstrates how to list worker pools using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Target Deletion Sample in Node.js\nDESCRIPTION: This snippet facilitates the execution of a target deletion script using Node.js. Node.js and access to the necessary samples are prerequisites. Running this command deletes a targeted deployment configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_target.js\n```\n\n----------------------------------------\n\nTITLE: Serving Config Service Operations - Node.js Google Cloud Retail\nDESCRIPTION: Sample files for managing serving configurations in Google Cloud Retail, including creating, deleting, and retrieving serving configs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nServing_config_service.add_control\nServing_config_service.create_serving_config\nServing_config_service.delete_serving_config\nServing_config_service.get_serving_config\n```\n\n----------------------------------------\n\nTITLE: Change Entry with Issue Link\nDESCRIPTION: Markdown entry showing a feature change with associated GitHub issue number and commit hash\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* [alloydb] A new method `ExportCluster` is added to service `AlloyDBAdmin` ([#6170](https://github.com/googleapis/google-cloud-node/issues/6170)) ([4569e91](https://github.com/googleapis/google-cloud-node/commit/4569e91b5f4c888cd52dd795dbe27cddf0801f51))\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google Cloud KMS Inventory API - Node.js\nDESCRIPTION: This quickstart example provides a streamlined method to begin using the Google Cloud KMS Inventory API with Node.js. It is essential to ensure that the client libraries are correctly installed before running the script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms-inventory/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Reviewing Documents with DocumentAI in Node.js\nDESCRIPTION: This code sample shows how to review a processed document using the Google Cloud DocumentAI API. It uses the document_processor_service to perform a review on processed document results.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-documentai/samples/generated/v1beta3/document_processor_service.review_document.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Dataflow Client Library - Bash\nDESCRIPTION: This snippet provides the command to install the Google Cloud Dataflow client library using npm. Ensure you have Node.js and npm installed before running this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dataflow\n```\n\n----------------------------------------\n\nTITLE: Listing Deployments with Config.list_deployments in Node.js\nDESCRIPTION: This example demonstrates how to list deployments using the Config API. It is included in the google-cloud-config package and executes as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-config/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-config/samples/generated/v1/config.list_deployments.js\n```\n\n----------------------------------------\n\nTITLE: Listing Experiments in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to retrieve a list of all experiments in a Dialogflow CX agent using Node.js. The sample provides the command-line execution example for listing experiments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/experiments.list_experiments.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: Command to install all required dependencies for the project using npm. This step is necessary before running tests or developing new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using the Area120 Tables API Client in Node.js\nDESCRIPTION: Basic example demonstrating how to initialize the TablesServiceClient and list tables using the Area120 Tables API. This code imports the client library, creates a client instance, and implements a simple function to list all tables.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {TablesServiceClient} = require('@google/area120-tables');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new TablesServiceClient();\n\nasync function listTables() {\n  const res = await client.listTables();\n  console.log(res);\n}\n\nlistTables();\n\n```\n\n----------------------------------------\n\nTITLE: Evicting Volume in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet evicts a storage volume from a bare metal instance using the Google Cloud Bare Metal Solution API. Typically run in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.evict_volume.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.evict_volume.js\n```\n\n----------------------------------------\n\nTITLE: Creating Node Groups with Google Cloud Dataproc in Node.js\nDESCRIPTION: Sample code for creating node groups using the Google Cloud Dataproc API with Node.js. The sample demonstrates how to use the NodeGroupController.createNodeGroup method to create a new node group in a Dataproc cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dataproc/samples/generated/v1/node_group_controller.create_node_group.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Message Bus with Eventarc API in Node.js\nDESCRIPTION: This example shows how to update a message bus using the Eventarc API. It is included in the google-cloud-eventarc package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/generated/v1/eventarc.update_message_bus.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Errors in Node.js\nDESCRIPTION: Illustrates fetching error details from Datastream using the API in a Node.js environment. Necessary setup includes API client initialization and credential provisioning.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.fetch_errors.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Using IAM Policy Troubleshooter Client Library\nDESCRIPTION: Example demonstrating how to initialize the IAM Checker client and troubleshoot an IAM policy. The code creates a client instance and makes a request to analyze access permissions for a given principal, resource, and permission combination.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\nconst {IamCheckerClient} = require('@google-cloud/policy-troubleshooter');\n\n// TODO(developer): replace with your prefered project ID.\n// const projectId = 'my-project'\n\n// Creates a client\nconst client = new IamCheckerClient();\n\nasync function troubelshootPolicy() {\n  const policy = await client.troubleshootIamPolicy({\n    accessTuple: {\n      principal,\n      fullResourceName,\n      permission,\n    },\n  });\n  console.log(policy);\n}\n\ntroubelshootPolicy();\n```\n\n----------------------------------------\n\nTITLE: SQL Instance Management Operations in Node.js\nDESCRIPTION: Collection of methods for managing Google Cloud SQL instances including restart, backup restoration, server CA rotation, replica management, and instance updates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_7\n\n\n\n----------------------------------------\n\nTITLE: Initializing Grafeas Client and Listing Occurrences in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Grafeas client, set up a request to list occurrences, and execute the request. It uses gRPC for communication and overrides default service settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// const projectId = 'my-project';\n\n// instantiate the client.\nconst grpc = require('@grpc/grpc-js');\nconst {GrafeasClient} = require('@google-cloud/grafeas');\nconst client = new GrafeasClient({\n  sslCreds: grpc.credentials.createInsecure(), // or any other credentials object.\n  servicePath: '0.0.0.0', // overriding the service path.\n  port: 8080, // overriding the port.\n});\n\n// populate the request.\nconst formattedName = client.projectPath(projectId);\nconst request = {\n  parent: formattedName,\n};\n\n// fetch the list of occurrences.\nconst [resp] = await client.listOccurrences(request);\nconsole.info(resp);\n```\n\n----------------------------------------\n\nTITLE: Running Routes.compute_route_matrix Sample in Node.js\nDESCRIPTION: This command executes the sample code for computing a route matrix using the Google Maps Routing API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-routing/samples/generated/v2/routes.compute_route_matrix.js\n```\n\n----------------------------------------\n\nTITLE: Get DNS Bind Permission in VMware Engine using Node.js\nDESCRIPTION: Command to execute the get_dns_bind_permission sample for the VMware Engine API. This retrieves DNS bind permission details for a VMware Engine resource.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.get_dns_bind_permission.js\n```\n\n----------------------------------------\n\nTITLE: Getting Data Exchange - Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve details of a specific data exchange using the Analytics Hub API in Node.js. Make sure to authenticate to access the data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to get a data exchange\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function getDataExchange() {\n  const request = {\n    name: 'projects/your-project-id/dataExchanges/your-data-exchange-id',\n  };\n  const [response] = await client.getDataExchange(request);\n  console.log('Data Exchange retrieved:', response);\n}\n\ngetDataExchange();\n```\n\n----------------------------------------\n\nTITLE: Using Datastream.list_private_connections in Node.js\nDESCRIPTION: Sample code for listing private connections using the Google Cloud Datastream API in Node.js. This script demonstrates how to retrieve all private connections within a project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.list_private_connections.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: This command installs the necessary dependencies for the Node.js project. It reads the `package.json` file in the current directory to identify and install all listed dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Conversation Model in Dialogflow v2\nDESCRIPTION: Demonstrates how to retrieve a conversation model in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and fetches details of a specific conversation model.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_models.get_conversation_model.js`\n```\n\n----------------------------------------\n\nTITLE: Getting App Connector Details in Node.js\nDESCRIPTION: Sample script for retrieving details of a specific BeyondCorp App Connector using the Google Cloud Node.js client library. Allows fetching individual app connector information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.get_app_connector.js\n```\n\n----------------------------------------\n\nTITLE: Updating an Experiment in Dialogflow CX using Node.js\nDESCRIPTION: This snippet illustrates how to update an existing experiment in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and requires appropriate credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_93\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/experiments.update_experiment.js\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Get Audience Export\nDESCRIPTION: Sample script for retrieving details of a specific audience export from the Google Analytics Data Beta API. Allows developers to fetch export information programmatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.get_audience_export\n```\n\n----------------------------------------\n\nTITLE: Executing Api_hub.delete_api sample\nDESCRIPTION: This snippet demonstrates how to execute the Api_hub.delete_api sample using Node.js. It provides the command to run the sample, which deletes an API from the API Hub.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-apihub/samples/generated/v1/api_hub.delete_api.js`\n```\n\n----------------------------------------\n\nTITLE: List Feedback Labels\nDESCRIPTION: Sample script for retrieving feedback labels from the Contact Center Insights API. Shows how to query and display available feedback labels using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample script for listing feedback labels\n```\n\n----------------------------------------\n\nTITLE: Importing DNS Module (Old Style)\nDESCRIPTION: Demonstrates the old way of importing the DNS module in versions prior to the update. This approach uses `require` and assigns the module or calls it immediately.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst DNS = require('@google-cloud/dns');\nconst dns = new DNS();\n// OR...\nconst dns = require('@google-cloud/dns')();\n```\n\n----------------------------------------\n\nTITLE: Comparing Versions in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to compare two versions of a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_143\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/versions.compare_versions.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests\nDESCRIPTION: Here, the snippet shows the command to run all system tests in the Google Cloud Node.js library. This step ensures the overall integrity and reliability of the system.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Big Query Export in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet updates an existing Big Query export configuration in the Google Cloud Security Center, facilitating data management for security findings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.update_big_query_export.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Disable Certificate Authority in Node.js\nDESCRIPTION: This sample demonstrates how to disable an existing certificate authority using Google Cloud Certificate Authority Service. The code can be executed directly to disable a CA in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.disable_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Group Findings in Security Center\nDESCRIPTION: Groups findings in Google Cloud Security Center using the Node.js client library. The sample demonstrates how to group security findings based on specified attributes. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.group_findings\"\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Maps Platform Datasets API in Node.js\nDESCRIPTION: This quickstart guide provides a basic example of using the Maps Platform Datasets API. It demonstrates essential setup and usage of the API in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-maps-mapsplatformdatasets/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Getting IAM Policy for a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet shows how to retrieve the IAM policy for a service in Google Cloud Run. It uses the Services.get_iam_policy method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.get_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Discard Blueprint Changes in Telco Automation API - JavaScript\nDESCRIPTION: Discards changes made to a blueprint using the Telco Automation API v1alpha1. This sample shows how to revert blueprint changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.discard_blueprint_changes.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Environment in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to delete an existing environment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the environment deletion operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.delete_environment.js\n```\n\n----------------------------------------\n\nTITLE: Using Certificate Authority Service to Create Certificate Authority in Node.js\nDESCRIPTION: This sample shows how to create a new certificate authority using Google Cloud Certificate Authority Service. The code can be executed directly to create a CA in your Google Cloud project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.create_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Dataflow Quickstart\nDESCRIPTION: Provides a quickstart example for using the Dataflow API in Node.js. It shows the command to execute the quickstart sample code, which typically sets up a basic data processing pipeline.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-dataflow/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Cluster with Node.js\nDESCRIPTION: This JavaScript snippet is used for deleting a cluster in VMware Engine utilizing Node.js. Dependencies include Google Cloud SDKs. Execute using the Node.js command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.delete_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run various types of tests including unit tests, sample integration tests, and system tests for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Examples in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to list examples in Dialogflow CX. It uses the google-cloud-dialogflow-cx package and requires appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_85\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/examples.list_examples.js\n```\n\n----------------------------------------\n\nTITLE: Fetch Network Policy External Addresses in VMware Engine using Node.js\nDESCRIPTION: Command to execute the fetch_network_policy_external_addresses sample for the VMware Engine API. This retrieves external addresses associated with a network policy.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.fetch_network_policy_external_addresses.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Project\nDESCRIPTION: Series of commands to run different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Access Levels with Access Context Manager API in Node.js\nDESCRIPTION: This snippet shows how to list access levels using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.list_access_levels.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Commands\nDESCRIPTION: Example commands for executing the various sample scripts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-rapidmigrationassessment/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-rapidmigrationassessment/samples/generated/v1/rapid_migration_assessment.create_annotation.js\nnode packages/google-cloud-rapidmigrationassessment/samples/generated/v1/rapid_migration_assessment.create_collector.js\nnode packages/google-cloud-rapidmigrationassessment/samples/generated/v1/rapid_migration_assessment.delete_collector.js\nnode packages/google-cloud-rapidmigrationassessment/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Google Cloud Node.js Library\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests for the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Delete Space - Chat Service - Node.js\nDESCRIPTION: This sample demonstrates deleting a space in Google Chat using Node.js. It calls the `delete_space` method of the `Chat_service` to remove an existing chat space.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, only a link to the source code is available.\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Sample Integration Tests\nDESCRIPTION: This command runs integration tests for the samples included in the Node.js project. These tests verify the interaction between different components of the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\n        npm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Financialservices Quickstart with Node.js\nDESCRIPTION: Demonstrates the quickstart usage of the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/quickstart.js`\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: Commands to run different types of tests including unit tests, sample integration tests, and system tests for the Google Cloud Node project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Version Compare Links in Markdown\nDESCRIPTION: Markdown links for comparing changes between different versions of the service-management package using GitHub's comparison view\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[3.1.0](https://github.com/googleapis/google-cloud-node/compare/service-management-v3.0.0...service-management-v3.1.0)\n```\n\n----------------------------------------\n\nTITLE: List Column Data Profiles with Google Cloud DLP Service in Node.js\nDESCRIPTION: This snippet illustrates how to list column data profiles using the Google Cloud DLP service. It utilizes the listColumnDataProfiles method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_column_data_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Video Intelligence API Quickstart\nDESCRIPTION: Basic quickstart sample demonstrating initialization and usage of the Video Intelligence API. Provides a simple starting point for new users.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-videointelligence/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Development\nDESCRIPTION: Command to install the required dependencies for working with the Google Cloud Node.js library. This is a prerequisite step before running tests or making contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Accepting Terms of Service with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet shows how to accept the terms of service using the Google Shopping Merchant Accounts API. It uses the terms_of_service_service.accept_terms_of_service method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/terms_of_service_service.accept_terms_of_service.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project\nDESCRIPTION: Commands for running different types of tests in the Google Cloud Node project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: List Assets in Security Center\nDESCRIPTION: Lists assets in Google Cloud Security Center using the Node.js client library. This sample demonstrates how to retrieve a list of assets. The `@google-cloud/security-center` package is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n\"Security_center.list_assets\"\n```\n\n----------------------------------------\n\nTITLE: Enabling self-signed JWT feature in Node.js\nDESCRIPTION: This commit turns on the self-signed JWT feature flag for the Storage Transfer Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* turns on self-signed JWT feature flag ([#9](https://www.github.com/googleapis/nodejs-storage-transfer/issues/9)) ([47dde37](https://www.github.com/googleapis/nodejs-storage-transfer/commit/47dde3725b8907d1f974dca83b778ccd7e312bef))\n```\n\n----------------------------------------\n\nTITLE: Generating Stub of Library\nDESCRIPTION: This commit represents a breaking change by generating a stub of the library. This likely involves a significant restructuring or initial setup of the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: Markdown\nCODE:\n```\n* generate stub of library\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center get_error_frame script in Node.js\nDESCRIPTION: Example command to execute the Migration Center get_error_frame sample script. This script demonstrates how to retrieve error frame information using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_error_frame.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Update Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to update a build trigger using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Get Generator - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to retrieve a generator using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `getGenerator` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/generators.get_generator.js`\n```\n\n----------------------------------------\n\nTITLE: Retrieving Terms of Service with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to get the terms of service using the Google Shopping Merchant Accounts API. It uses the terms_of_service_service.get_terms_of_service method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/terms_of_service_service.get_terms_of_service.js\n```\n\n----------------------------------------\n\nTITLE: List Discovery Configs with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample illustrates how to list discovery configurations using the Google Cloud DLP service. It calls the listDiscoveryConfigs method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_discovery_configs.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding Debug Logging in Container v6.0.0\nDESCRIPTION: Adds request/response debug logging to gapics and updates templates to gax 5 and Node 18.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nAdd request/response debug logging to gapics, update templates to gax 5 and node 18 ([#1671](https://github.com/googleapis/google-cloud-node/issues/1671)) ([7a23322](https://github.com/googleapis/google-cloud-node/commit/7a23322530b610eec2fe4c18fe1854048f31c811))\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build List Build Triggers Sample\nDESCRIPTION: This sample demonstrates how to list build triggers using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.list_build_triggers.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting Permission with Permission Service in Javascript\nDESCRIPTION: This sample code demonstrates the usage of `deletePermission` method from Permission Service. It uses google-ai-generativelanguage package to delete a permission entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet shows how to update a model using the Google Cloud Retail API. It utilizes the updateModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.update_model.js\n```\n\n----------------------------------------\n\nTITLE: Rejoining User Events in Google Cloud Retail (Node.js)\nDESCRIPTION: Sample code demonstrating how to rejoin user events in Google Cloud Retail API. Used for linking related user interaction data.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_78\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2beta/user_event_service.rejoin_user_events.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Stored Info Types with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to list all custom stored info types defined in a project using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_stored_info_types.js\n```\n\n----------------------------------------\n\nTITLE: Creating IAP OAuth Brand in JavaScript\nDESCRIPTION: Runs a sample to create a brand for the Identity-Aware Proxy OAuth service. Ensure a Node.js environment before running the command in a terminal.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-iap/samples/generated/v1/identity_aware_proxy_o_auth_service.create_brand.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Tuning Model in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to tune a model using the Google Cloud Retail API. It uses the tuneModel method of the ModelService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/model_service.tune_model.js\n```\n\n----------------------------------------\n\nTITLE: Adding Initial Template Samples to Node.js Cloud Shell Client\nDESCRIPTION: This code snippet shows a commit that adds initial template samples to the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\nadd initial template samples ([226fea0](https://www.github.com/googleapis/nodejs-cloud-shell/commit/226fea0042f75dcff523d47477583b9180fa7b46))\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Restore Plan using GKE Backup API in Node.js\nDESCRIPTION: Sample code for retrieving a specific restore plan using the GKE Backup API. Used to get configuration details for a restore plan in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_restore_plan.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Route in Node.js\nDESCRIPTION: Execute route deletion commands in Google Cloud via the Datastream API using Node.js. Requires correct permissions and route identification for accurate operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.delete_route.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Deleting an Issue with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to delete an issue using the Contact Center Insights API. It uses the delete_issue method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_issue.js\n```\n\n----------------------------------------\n\nTITLE: Updating Dataset Metadata using Maps Platform Datasets API in Node.js\nDESCRIPTION: This code sample shows how to update dataset metadata using the Maps Platform Datasets API. It requires the google-maps-mapsplatformdatasets package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-maps-mapsplatformdatasets/samples/generated/v1alpha/maps_platform_datasets_v1_alpha.update_dataset_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Inserting Shipping Settings with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to insert shipping settings using the Google Shopping Merchant Accounts API. It uses the shipping_settings_service.insert_shipping_settings method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/shipping_settings_service.insert_shipping_settings.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud Content Warehouse API in Node.js\nDESCRIPTION: This code sample provides a quickstart guide for using the Google Cloud Content Warehouse API with Node.js. It includes a command to execute the quickstart sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: Commands for running different types of tests, including unit tests, sample integration tests, and system tests for the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Product Service Operations in Google Cloud Retail API\nDESCRIPTION: Comprehensive sample implementations for product management including CRUD operations, inventory management, fulfillment places and local inventory operations in Google Cloud Retail API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/README.md#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Updating GCP User Access Binding with Access Context Manager\nDESCRIPTION: Sample code showing how to update GCP user access bindings using the Access Context Manager API. The code is executed via Node.js CLI.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.update_gcp_user_access_binding.js\n```\n\n----------------------------------------\n\nTITLE: Deleting LB Traffic Extension with Network Services API in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a load balancer traffic extension using the Network Services API client library for Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/dep_service.delete_lb_traffic_extension.js\n```\n\n----------------------------------------\n\nTITLE: Job Service Batch Create Jobs\nDESCRIPTION: Demonstrates how to batch create jobs using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.batch_create_jobs.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Service Perimeters with Access Context Manager API in Node.js\nDESCRIPTION: This example demonstrates listing service perimeters using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.list_service_perimeters.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Example - Street View Publish API Node.js\nDESCRIPTION: Basic quickstart example demonstrating initialization and basic usage of the Street View Publish API with Node.js. Provides a starting point for using the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-streetview-publish/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Creating Conversation Profile in Dialogflow v2\nDESCRIPTION: Demonstrates how to create a conversation profile in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and creates a new conversation profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.create_conversation_profile.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the project using npm. This is a prerequisite step before running tests or making code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-conversions/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Conversation Profile in Dialogflow (JavaScript)\nDESCRIPTION: This snippet demonstrates how to retrieve a specific conversation profile using the Dialogflow API. It uses the get_conversation_profile method of the conversation_profiles service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.get_conversation_profile.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Workspace - Google Cloud Node.js\nDESCRIPTION: This snippet explains how to delete a workspace in Dataform using the Google Cloud Node.js library. The user must execute the command to perform the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-dataform/samples/generated/v1beta1/dataform.delete_workspace.js\n```\n\n----------------------------------------\n\nTITLE: Route Optimization API Quickstart Guide for Node.js\nDESCRIPTION: A quickstart guide demonstrating basic usage of the Route Optimization API. Provides a simple example to help developers get started with the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-maps-routeoptimization/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Updating Vehicle Attributes with Fleet Engine API\nDESCRIPTION: Example showing how to update vehicle attributes using the Google Maps Fleet Engine service in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-fleetengine/samples/generated/v1/vehicle_service.update_vehicle_attributes.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Get Build Sample\nDESCRIPTION: This sample demonstrates how to retrieve a build using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.get_build.js`\n```\n\n----------------------------------------\n\nTITLE: Getting Tag Value in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This snippet shows how to retrieve a tag value using the Google Cloud Resource Manager API in Node.js. It uses the tag_values.get_tag_value method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.get_tag_value.js\n```\n\n----------------------------------------\n\nTITLE: Listing Inspect Templates with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to retrieve all inspection templates configured for a project using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_inspect_templates.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests in a Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Making Predictions in Google Cloud Retail API (JavaScript)\nDESCRIPTION: This snippet demonstrates how to make predictions using the Google Cloud Retail API. It uses the predict method of the PredictionService.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-retail/samples/generated/v2alpha/prediction_service.predict.js\n```\n\n----------------------------------------\n\nTITLE: Listing Datastream Private Connections in Node.js\nDESCRIPTION: This snippet illustrates how to list private connections in Google Cloud Datastream using Node.js, vital for managing secure connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.list_private_connections.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tag Values in Google Cloud Resource Manager (Node.js)\nDESCRIPTION: This code demonstrates how to list tag values using the Google Cloud Resource Manager API in Node.js. It utilizes the tag_values.list_tag_values method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_values.list_tag_values.js\n```\n\n----------------------------------------\n\nTITLE: Getting Subscription - Node.js\nDESCRIPTION: This snippet shows how to retrieve details of a specific subscription using the Analytics Hub API in Node.js. Ensure correct authentication before execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// Sample code to get a subscription\n// Requires installation of the Google Cloud client library\n\nconst {AnalyticsHubServiceClient} = require('@google-cloud/bigquery-analyticshub');\nconst client = new AnalyticsHubServiceClient();\n\nasync function getSubscription() {\n  const request = {\n    name: 'projects/your-project-id/subscriptions/your-subscription-id',\n  };\n  const [response] = await client.getSubscription(request);\n  console.log('Subscription retrieved:', response);\n}\n\ngetSubscription();\n```\n\n----------------------------------------\n\nTITLE: Updating a Blueprint with Google Telco Automation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to update a blueprint using the Google Telco Automation API. It provides the command to execute the sample code that modifies an existing blueprint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1/telco_automation.update_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions with Access Context Manager API in Node.js\nDESCRIPTION: This example demonstrates testing IAM permissions using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Application Gateway with BeyondCorp API - Node.js\nDESCRIPTION: This snippet showcases the procedure to delete an existing application gateway using the BeyondCorp API in Node.js. It relies on prior setup within the development environment. The input required is the identifier of the application gateway to be deleted, and the output will be a confirmation message upon successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appgateways/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appgateways/samples/generated/v1/app_gateways_service.delete_app_gateway.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Package from Artifact Registry using Node.js\nDESCRIPTION: This snippet shows how to delete a package from Google Cloud Artifact Registry. It utilizes the delete_package method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.delete_package.js\n```\n\n----------------------------------------\n\nTITLE: Sample Usage Command for Chat Service Functions\nDESCRIPTION: Example command to run individual Chat API sample functions. This pattern applies to all service methods in the samples directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-chat/samples/generated/v1/chat_service.{method_name}.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Dashboard using Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet shows how to delete a dashboard using the Monitoring Dashboards service. It requires the google-monitoring-dashboard package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/generated/v1/dashboards_service.delete_dashboard.js\n```\n\n----------------------------------------\n\nTITLE: Create Environment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to create an environment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `createEnvironment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.create_environment.js`\n```\n\n----------------------------------------\n\nTITLE: Adding support for Agent Pools in Node.js\nDESCRIPTION: This commit adds support for Agent Pools to the Storage Transfer Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* add support for Agent Pools ([#51](https://github.com/googleapis/nodejs-storage-transfer/issues/51)) ([0baf572](https://github.com/googleapis/nodejs-storage-transfer/commit/0baf5721ce0d8a49059ec75e3b57f63c0e381e36))\n```\n\n----------------------------------------\n\nTITLE: Updating a Dashboard using Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet shows how to update a dashboard using the Monitoring Dashboards service. It requires the google-monitoring-dashboard package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/generated/v1/dashboards_service.update_dashboard.js\n```\n\n----------------------------------------\n\nTITLE: Getting Instance Details from Cloud Filestore\nDESCRIPTION: This sample demonstrates how to retrieve details of a specific Filestore instance using its identifying information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function getInstance() {\n    const response = await client.getInstance(...);\n    console.log(response);\n}\ngetInstance();\n```\n\n----------------------------------------\n\nTITLE: Upgrading Node.js Version Requirement\nDESCRIPTION: Breaking change requiring upgrade to Node 18 and Node 14 in different versions, affecting compatibility and dependency management\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Node.js version upgrade requirements\n// From version 9.0.0: Upgrade to Node 18\n// From version 8.0.0: Upgrade to Node 14\n```\n\n----------------------------------------\n\nTITLE: Getting a Tag from Artifact Registry using Node.js\nDESCRIPTION: This snippet shows how to get a tag from Google Cloud Artifact Registry. It uses the get_tag method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.get_tag.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Glossary with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet illustrates how to update a glossary using the Translation Service. It employs the update_glossary method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.update_glossary.js\n```\n\n----------------------------------------\n\nTITLE: Linting Code Changes\nDESCRIPTION: Utilizes a linter to check for coding standard violations and potentially fix them. Ensures code quality and adherence to the project's coding conventions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-assuredworkloads/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Managing TLS Routes in Network Services\nDESCRIPTION: Example showing how to list and update TLS routes using the Network Services API. Demonstrates usage of list_tls_routes and update_tls_route endpoints.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_tls_routes.js\n```\n\n----------------------------------------\n\nTITLE: Running tests for Google Cloud Node project\nDESCRIPTION: Commands to run different test suites including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-transcoder/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Entries in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet details the process of listing all entries within the Dataplex catalog service, utilizing the Google Cloud client library to manage request parameters and pagination.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for listing entries\n\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Run Build Trigger Sample\nDESCRIPTION: This sample demonstrates how to run a build trigger using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Compute Deployment Status in Telco Automation API - JavaScript\nDESCRIPTION: Computes the status of a deployment using the Telco Automation API v1alpha1. This sample shows how to check deployment status.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.compute_deployment_status.js\n```\n\n----------------------------------------\n\nTITLE: Executing Natural Language API Sample Scripts\nDESCRIPTION: Command-line instructions for running various Natural Language API sample scripts using Node.js across different API versions and functionalities.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-language/samples/generated/v1/language_service.analyze_entities.js\nnode packages/google-cloud-language/samples/generated/v1/language_service.analyze_sentiment.js\nnode packages/google-cloud-language/samples/generated/v1/language_service.annotate_text.js\n```\n\n----------------------------------------\n\nTITLE: Minifying JSON and JS Files in Node.js Project\nDESCRIPTION: Performs minification on JSON and JavaScript files while removing source map files to optimize the project's file size.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Minify JSON and JS files, and remove .map files\"\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Format\nDESCRIPTION: Format for entries containing breaking changes, showing the breaking change warning and related details\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Retrieving Runtime Information with AI Platform Notebooks API in Node.js\nDESCRIPTION: This sample shows how to get information about a specific runtime using the AI Platform Notebooks Managed Notebook Service API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.get_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Inserting New SQL Databases in Google Cloud\nDESCRIPTION: Sample script for creating new databases in Google Cloud SQL using the Node.js client library. Demonstrates the database insertion process.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1beta4/sql_databases_service.insert.js\n```\n\n----------------------------------------\n\nTITLE: Listing BigQuery Connections (Node.js)\nDESCRIPTION: This snippet shows how to list BigQuery connections using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.list_connections.js\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry 4.0.0\nDESCRIPTION: Major version changelog entry highlighting Node 18 upgrade and breaking changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.0](https://github.com/googleapis/google-cloud-node/compare/dataflow-v3.3.0...dataflow-v4.0.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096])\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Google Cloud Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workstations/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js library project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Cancel Build Sample\nDESCRIPTION: This sample demonstrates how to cancel a build using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Google Cloud Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Create Build Sample\nDESCRIPTION: This sample demonstrates how to create a build using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node Project in Bash\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests for the Google Cloud Node project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Entry Group in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet illustrates how to fetch the details of an entry group in the Google Cloud Dataplex. The code requires the Google Cloud client library and the appropriate group identifier.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for getting an entry group\n\n```\n\n----------------------------------------\n\nTITLE: Listing Info Types with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to list available info types (sensitive data categories) using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_info_types.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Getting Entry Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet shows how to retrieve an entry type's details from the Google Cloud Dataplex catalog service, requiring invocation of the Google Cloud client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for getting an entry type\n\n```\n\n----------------------------------------\n\nTITLE: Updating Dataplex Task\nDESCRIPTION: Updates a task in Dataplex using a Node.js command. Requires Google Cloud setup with authenticated access. Runs 'dataplex_service.update_task.js' to execute the task update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_68\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/dataplex_service.update_task.js\n```\n\n----------------------------------------\n\nTITLE: Listing Job Triggers with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to list all configured job triggers for a project using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_job_triggers.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Cancel Build Sample\nDESCRIPTION: This sample demonstrates how to cancel a build using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.cancel_build.js`\n```\n\n----------------------------------------\n\nTITLE: Update Job with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to update a job using the Dataflow API in Node.js. The command executes the `update_job.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.update_job.js`\n```\n\n----------------------------------------\n\nTITLE: Cloud Deploy Delete Automation Sample\nDESCRIPTION: This sample demonstrates how to delete an automation using the Cloud Deploy API. The sample is written in JavaScript and can be run in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.delete_automation.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Datasets using Maps Platform Datasets API in Node.js\nDESCRIPTION: This snippet demonstrates how to list datasets using the Maps Platform Datasets API. It requires the google-maps-mapsplatformdatasets package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-maps-mapsplatformdatasets/samples/generated/v1alpha/maps_platform_datasets_v1_alpha.list_datasets.js\n```\n\n----------------------------------------\n\nTITLE: Listing Taxonomies with Node.js Script\nDESCRIPTION: Execute this Node.js script to list all taxonomies in the Google Cloud Data Catalog. The script requires access to the Google Cloud resources being listed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager.list_taxonomies.js\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Private Connection Info - Google Cloud DMS JavaScript\nDESCRIPTION: Node.js code sample that demonstrates how to get details of a private connection using the Database Migration Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-clouddms/samples/generated/v1/data_migration_service.get_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Create Build Sample\nDESCRIPTION: This sample demonstrates how to create a build using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.create_build.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Stored Info Types with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update an existing custom stored info type using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_stored_info_type.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Shopping CSS API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Shopping CSS API with Node.js. It demonstrates basic usage and setup of the API client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-css/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Delete Snapshot with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to delete a snapshot using the Dataflow API in Node.js. The command executes the `delete_snapshot.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/snapshots_v1_beta3.delete_snapshot.js`\n```\n\n----------------------------------------\n\nTITLE: AutoML Export Model in Node.js\nDESCRIPTION: This sample shows how to export a model using the AutoML API in Node.js. The `exportModel` function is called to export the model. It depends on the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.export_model\"\n```\n\n----------------------------------------\n\nTITLE: Updating Environment in Dialogflow CX (JavaScript)\nDESCRIPTION: Shows how to update an existing environment in Dialogflow CX using Node.js. The sample provides the command-line execution example for the environment update operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.update_environment.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam-credentials/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting VPC Connector using Node.js\nDESCRIPTION: Sample code demonstrating how to delete an existing VPC connector using the VPC Access service API. Found in vpc_access_service.delete_connector.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vpcaccess/samples/generated/v1/vpc_access_service.delete_connector.js\n```\n\n----------------------------------------\n\nTITLE: Company Service List Companies\nDESCRIPTION: Demonstrates how to list companies using the Company Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/company_service.list_companies.js\"\n```\n\n----------------------------------------\n\nTITLE: List Jobs with Dataflow in Node.js\nDESCRIPTION: This sample demonstrates how to list jobs using the Dataflow API in Node.js. The command executes the `list_jobs.js` script located in the specified directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: Node.js\nCODE:\n```\n`node packages/google-dataflow/samples/generated/v1beta3/jobs_v1_beta3.list_jobs.js`\n```\n\n----------------------------------------\n\nTITLE: Deleting a Version in Artifact Registry using Node.js\nDESCRIPTION: This snippet shows how to delete a version in Google Cloud Artifact Registry. It uses the delete_version method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.delete_version.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Dashboards using Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet demonstrates how to list dashboards using the Monitoring Dashboards service. It requires the google-monitoring-dashboard package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/generated/v1/dashboards_service.list_dashboards.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Listing Datasets with Google Cloud Translation API in JavaScript\nDESCRIPTION: This snippet demonstrates how to list datasets using the Translation Service. It utilizes the list_datasets method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_datasets.js\n```\n\n----------------------------------------\n\nTITLE: Creating Private Connection in Node.js\nDESCRIPTION: A script to establish a private connection using the Datastream API in Node.js. Necessary prerequisites include API setup and correct environmental permission settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.create_private_connection.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Listing Access Policies with Access Context Manager API in Node.js\nDESCRIPTION: This example demonstrates listing access policies using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.list_access_policies.js\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: Delete Contact\nDESCRIPTION: Sample code for deleting a contact in the Essential Contacts API using Node.js. Demonstrates how to remove an existing contact through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.delete_contact.js\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required Node.js dependencies for the project. This is a prerequisite step before running tests or contributing code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Commit\nDESCRIPTION: Commit message showing dependency update to google-auth-library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* **deps:** Update dependency google-auth-library to v9 ([#4560](https://github.com/googleapis/google-cloud-node/issues/4560)) ([e5099b7](https://github.com/googleapis/google-cloud-node/commit/e5099b7a475e0cfaf0d25aa8d6755cd7bc43cbe0))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting a Tag in Artifact Registry using Node.js\nDESCRIPTION: This snippet demonstrates how to delete a tag in Google Cloud Artifact Registry. It utilizes the delete_tag method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.delete_tag.js\n```\n\n----------------------------------------\n\nTITLE: Using Storage Transfer Service Sample Code\nDESCRIPTION: Example usage commands for running individual Storage Transfer Service sample files\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-storagetransfer/samples/generated/v1/storage_transfer_service.create_agent_pool.js\nnode packages/google-storagetransfer/samples/generated/v1/storage_transfer_service.create_transfer_job.js\nnode packages/google-storagetransfer/samples/generated/v1/storage_transfer_service.delete_agent_pool.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and automatically fixes any issues it can.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: List DLP Jobs with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code demonstrates how to list DLP jobs using the Google Cloud DLP service. It utilizes the listDlpJobs method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_dlp_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Repository in Artifact Registry using Node.js\nDESCRIPTION: This snippet illustrates how to delete a repository in Google Cloud Artifact Registry. It uses the delete_repository method of the Artifact Registry API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.delete_repository.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Run Client Library\nDESCRIPTION: This command installs the Cloud Run client library for Node.js using npm.  It allows you to interact with the Cloud Run Admin API from your Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/run\n```\n\n----------------------------------------\n\nTITLE: Updating Access Policy with Google Cloud Access Context Manager\nDESCRIPTION: Sample code demonstrating how to update an access policy using the Access Context Manager API. The code is executed via Node.js CLI.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.update_access_policy.js\n```\n\n----------------------------------------\n\nTITLE: Listing Revisions in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to list all revisions in Google Cloud Run. It uses the Revisions.list_revisions method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/revisions.list_revisions.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Shares in Google Cloud Filestore - JavaScript\nDESCRIPTION: This function illustrates the process of retrieving share information within Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Share Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function getShare(projectId, shareId) {\n  // Implementation for getting a share\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center delete_report script in Node.js\nDESCRIPTION: Example command to execute the Migration Center delete_report sample script. This script demonstrates how to delete a report using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.delete_report.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any issues in the codebase for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Changes for Node.js\nDESCRIPTION: This command is used to lint the code for the Google Cloud Node.js library and may automatically fix any issues if possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientgateways/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Users with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet shows how to list users using the Google Shopping Merchant Accounts API. It uses the user_service.list_users method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/user_service.list_users.js\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: Run Standard Report\nDESCRIPTION: Sample script for running standard reports in the Google Analytics Data Beta API. Allows retrieval of standard analytics metrics and dimensions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.run_report\n```\n\n----------------------------------------\n\nTITLE: Formatting Changelog Sections in Markdown\nDESCRIPTION: Shows how different changelog sections like Bug Fixes, Features, and Breaking Changes are formatted using Markdown headers.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n### Features\n\n### ⚠ BREAKING CHANGES\n```\n\n----------------------------------------\n\nTITLE: Get AlloyDB Cluster Information using Node.js\nDESCRIPTION: This code snippet shows how to get information about an AlloyDB cluster using the AlloyDB Admin API in Node.js. It uses the get_cluster method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.get_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to get a user using the Google Shopping Merchant Accounts API. It uses the user_service.get_user method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/user_service.get_user.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Static IPs in Node.js\nDESCRIPTION: Fetch static IP addresses associated with a Google Cloud Datastream using Node.js, facilitated by API invocation with correct credentials and permissions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.fetch_static_ips.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Listing Delivery Pipelines in Cloud Deploy using Node.js\nDESCRIPTION: This code sample shows how to list delivery pipelines in Cloud Deploy. It utilizes the list_delivery_pipelines method of the CloudDeployClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.list_delivery_pipelines.js\n```\n\n----------------------------------------\n\nTITLE: Updating a User with Google Shopping Merchant Accounts API in Node.js\nDESCRIPTION: This snippet demonstrates how to update a user using the Google Shopping Merchant Accounts API. It uses the user_service.update_user method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-accounts/samples/generated/v1beta/user_service.update_user.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Tuned Model with Model Service in Javascript\nDESCRIPTION: This sample demonstrates how to delete a tuned model using the `deleteTunedModel` method from the Model Service in the google-ai-generativelanguage package. It shows how to remove previously created tuned models.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Using Google Chat API - Membership Operations\nDESCRIPTION: Sample commands for executing Google Chat API membership-related operations including listing and updating memberships using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-chat/samples/generated/v1/chat_service.list_memberships.js\nnode packages/google-chat/samples/generated/v1/chat_service.update_membership.js\n```\n\n----------------------------------------\n\nTITLE: Creating Network Resources with Node.js\nDESCRIPTION: Examples for creating various network resources including endpoint policies, gateways, meshes, and service bindings using the Network Services API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_endpoint_policy.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_gateway.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_mesh.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.create_service_binding.js\n```\n\n----------------------------------------\n\nTITLE: Running Developer Connect API Samples in Node.js\nDESCRIPTION: This snippet shows the basic setup and usage instructions for running the Developer Connect API samples. It includes steps for installing dependencies and running individual sample files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\nnode packages/google-cloud-developerconnect/samples/generated/v1/developer_connect.create_connection.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds. It's an important step in maintaining code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Create Subproperty Event Filter in Analytics Admin using Node.js\nDESCRIPTION: This sample demonstrates creating a subproperty event filter using the Google Analytics Admin API and Node.js. The method `createSubpropertyEventFilter` on the `AnalyticsAdminServiceClient` is used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_subproperty_event_filter.js)\n```\n\n----------------------------------------\n\nTITLE: Get Vulnerability Occurrences Summary in Node.js\nDESCRIPTION: This sample shows how to obtain a summary of vulnerability occurrences using the Container Analysis API in Node.js. It relies on the google-devtools-containeranalysis package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-containeranalysis/samples/generated/v1/container_analysis.get_vulnerability_occurrences_summary.js`\n```\n\n----------------------------------------\n\nTITLE: Running Data Catalog Entry Overview Modification Sample\nDESCRIPTION: Node.js script to modify the overview information of a Data Catalog entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.modify_entry_overview.js\n```\n\n----------------------------------------\n\nTITLE: Running Phishing Protection Report Sample\nDESCRIPTION: Command to execute the phishing reporting sample code that demonstrates how to report phishing incidents using the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-phishingprotection/samples/generated/v1beta1/phishing_protection_service_v1_beta1.report_phishing.js\n```\n\n----------------------------------------\n\nTITLE: Listing Project Data Profiles with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to list all data profiles at the project level using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_project_data_profiles.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run various types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Quota Adjuster Settings - Google Cloud - JavaScript\nDESCRIPTION: This code snippet updates the quota adjuster settings for a specified Google Cloud project. It shows how to modify existing configurations to better allocate resources based on current needs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code for updating quota adjuster settings\n// file: quota_adjuster_settings_manager.update_quota_adjuster_settings.js\n\nconst {QuotasClient} = require('@google-cloud/quotas');\n\nasync function updateQuotaAdjusterSettings(newSettings) {\n  const client = new QuotasClient();\n  await client.updateQuotaAdjusterSettings(newSettings);\n  console.log('Quota adjuster settings updated.');\n}\nupdateQuotaAdjusterSettings({/* new settings object */});\n\n```\n\n----------------------------------------\n\nTITLE: Creating a Generator in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to create a new generator in Dialogflow CX. It utilizes the generators.create_generator method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/generators.create_generator.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies for Google Cloud Projects\nDESCRIPTION: Command to install all required Node.js dependencies for Google Cloud projects. This should be run before testing or development work begins.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-marketingplatform-admin/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Quickstart Sample for Merchant Reviews API\nDESCRIPTION: Basic quickstart sample demonstrating initial setup and usage of the Merchant Reviews API. Located at samples/quickstart.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reviews/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-reviews/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing HTTP Routes in Google Cloud Network Services\nDESCRIPTION: Example showing how to list HTTP routes using the Network Services API. Demonstrates usage of the list_http_routes endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_http_routes.js\n```\n\n----------------------------------------\n\nTITLE: Adding Advanced OCR Options to Vision API\nDESCRIPTION: Adds TextDetectionParams.advanced_ocr_options to allow configuring advanced OCR settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst request = {\n  image: {...},\n  features: [{type: 'TEXT_DETECTION'}],\n  imageContext: {\n    textDetectionParams: {\n      advancedOcrOptions: {\n        // Configure advanced OCR options here\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Updating a Generator in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to update an existing generator in Dialogflow CX. It utilizes the generators.update_generator method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/generators.update_generator.js\n```\n\n----------------------------------------\n\nTITLE: Linting Code Changes in Google Cloud Node.js Projects\nDESCRIPTION: Command to run the linter on code changes, which can automatically fix style issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Managing IAM Policies with Node.js in Google Cloud Datacatalog\nDESCRIPTION: Command-line scripts for managing IAM policies in the Google Cloud Datacatalog, including getting, setting, and testing IAM permissions using the Policy Tag Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.get_iam_policy.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.set_iam_policy.js\n```\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/policy_tag_manager.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Searching Support Cases in Google Cloud\nDESCRIPTION: Sample script demonstrating how to search for support cases using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.search_cases.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Application in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete an existing application from Google Cloud App Hub. It requires the application ID as input and does not return output other than a successful deletion confirmation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst deleteApplication = async (appId) => {\n  await client.deleteApplication({\n    id: appId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for BigQuery Connection (Node.js)\nDESCRIPTION: This snippet demonstrates how to test IAM permissions for a BigQuery connection using the Google Cloud BigQuery Connection Service in Node.js. It requires the google-cloud-bigquery-connection package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-connection/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-connection/samples/generated/v1beta1/connection_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests in Node.js\nDESCRIPTION: This snippet provides the command to run all system tests. Executing these tests is crucial for ensuring that the entire system operates as expected after any code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Using Analytics Hub Service in Node.js\nDESCRIPTION: Collection of Node.js code samples for interacting with Analytics Hub API, including operations for data exchanges, listings, and IAM policy management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.create_data_exchange.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.create_listing.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.delete_data_exchange.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.delete_listing.js\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-bigquery-dataexchange/samples/generated/v1beta1/analytics_hub_service.get_data_exchange.js\n```\n\n----------------------------------------\n\nTITLE: Company Service Create Company\nDESCRIPTION: Demonstrates how to create a company using the Company Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/company_service.create_company.js\"\n```\n\n----------------------------------------\n\nTITLE: Job Service Get Job\nDESCRIPTION: Demonstrates how to get a job using the Job Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/job_service.get_job.js\"\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node Project\nDESCRIPTION: Command to identify and potentially fix linting issues in the codebase. This ensures code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating a Service in Google Cloud Run using Node.js\nDESCRIPTION: This snippet demonstrates how to update an existing service in Google Cloud Run. It uses the Services.update_service method from the Google Cloud Run API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/generated/v2/services.update_service.js\n```\n\n----------------------------------------\n\nTITLE: Updating Deidentify Templates with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update an existing de-identification template using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_deidentify_template.js\n```\n\n----------------------------------------\n\nTITLE: Creating an Agent in Dialogflow CX using Node.js\nDESCRIPTION: This snippet demonstrates how to create a new agent in Dialogflow CX. It uses the agents.create_agent method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_79\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/agents.create_agent.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud Recommender API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud Recommender API in Node.js. It demonstrates basic usage and setup for the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-recommender/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Beta Analytics Data: List Audience Exports\nDESCRIPTION: Sample script demonstrating how to list multiple audience exports in the Google Analytics Data Beta API. Enables retrieval of multiple export configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nBeta_analytics_data.list_audience_exports\n```\n\n----------------------------------------\n\nTITLE: Managing App Engine Applications in Node.js\nDESCRIPTION: Sample code showing common operations for managing Google App Engine applications including create, get, repair and update operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/README.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: List Connections with Google Cloud DLP Service in Node.js\nDESCRIPTION: This sample demonstrates how to list connections using the Google Cloud DLP service. It calls the listConnections method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.list_connections.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Client\nDESCRIPTION: Commands to run unit tests, sample integration tests, and system tests for the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating Inspect Templates with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update an existing inspection template using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_inspect_template.js\n```\n\n----------------------------------------\n\nTITLE: Adding RunAccessReport Method in JavaScript\nDESCRIPTION: Adds the RunAccessReport method to the Admin API v1beta, with bindings for account and property resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd `RunAccessReport` method (with bindings for account and property resources) to the Admin API v1beta\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Places API Node.js Client\nDESCRIPTION: Command to install the Places API Node.js client library via npm. This is the first step to integrate the Places API into your Node.js application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/places\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Update Chunk Example in Node.js\nDESCRIPTION: Executes a JavaScript file to update a chunk using the Retriever service, contingent upon having Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.update_chunk.js\"\n```\n\n----------------------------------------\n\nTITLE: Listing Product Sets using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample demonstrates how to list product sets using the Google Cloud Vision API. It uses the ProductSearch.listProductSets method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.list_product_sets.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Flow in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to create a new flow in Dialogflow CX. It utilizes the flows.create_flow method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.create_flow.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter to check for code style issues and potentially fix them automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample for Google Maps Routing in Node.js\nDESCRIPTION: This command executes the quickstart sample code for the Google Maps Routing API in Node.js, providing a basic introduction to using the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-maps-routing/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Updating App Connector in Node.js\nDESCRIPTION: Sample script for updating a BeyondCorp App Connector using the Google Cloud Node.js client library. Allows modifying existing app connector configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.update_app_connector.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud Run API in Node.js\nDESCRIPTION: This snippet provides a quickstart guide for using the Google Cloud Run API in Node.js. It demonstrates basic usage and setup for the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-run/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-run/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Security Center Findings in Node.js\nDESCRIPTION: Sample code for updating findings in Google Cloud Security Center. Shows how to modify existing security findings with updated information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1p1beta1/security_center.update_finding.js\n```\n\n----------------------------------------\n\nTITLE: AutoML Deploy Model in Node.js\nDESCRIPTION: This sample demonstrates how to deploy a model using the AutoML API in Node.js. The `deployModel` function is used. It requires the `@google-cloud/automl` package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"Auto_ml.deploy_model\"\n```\n\n----------------------------------------\n\nTITLE: List Interconnect Attachments in Google Cloud Edge Network\nDESCRIPTION: Sample code for retrieving a list of interconnect attachments using the Edge Network API in Node.js. Demonstrates API interaction for network infrastructure management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nEdge_network.list_interconnect_attachments\n```\n\n----------------------------------------\n\nTITLE: Installing Service Directory Client\nDESCRIPTION: This command installs the Google Cloud Service Directory client library for Node.js using npm. It allows Node.js applications to interact with the Service Directory API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install @google-cloud/service-directory\"\n```\n\n----------------------------------------\n\nTITLE: Comparing Contact Center Insights Versions in Markdown\nDESCRIPTION: Markdown syntax for comparing different versions of the Contact Center Insights library using GitHub links.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## [2.4.0](https://github.com/googleapis/google-cloud-node/compare/contact-center-insights-v2.3.0...contact-center-insights-v2.4.0) (2023-02-09)\n```\n\n----------------------------------------\n\nTITLE: Apply Deployment in Telco Automation API - JavaScript\nDESCRIPTION: Applies a deployment using the Telco Automation API v1alpha1. This sample demonstrates the apply_deployment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.apply_deployment.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run unit tests, sample integration tests, and system tests for the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command for running the linter to check for code style issues and automatically fix them where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Simulator.create_replay Sample\nDESCRIPTION: Sample code demonstrating how to create a replay using the Policy Simulator API. Located in simulator.create_replay.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-policysimulator/samples/generated/v1/simulator.create_replay.js\n```\n\n----------------------------------------\n\nTITLE: Creating DLP Inspect Template in Node.js\nDESCRIPTION: Sample code showing implementation of inspect template creation for DLP service. Located at /google-privacy-dlp/samples/generated/v2/dlp_service.create_inspect_template.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.create_inspect_template.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Example for Eventarc API in Node.js\nDESCRIPTION: This quickstart example demonstrates basic usage of the Eventarc API. It is part of the google-cloud-eventarc package and runs as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-eventarc/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Monitoring Dashboards Service in Node.js\nDESCRIPTION: This snippet provides a quickstart example for using the Monitoring Dashboards service. It demonstrates basic usage and setup of the service in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-monitoring-dashboard/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Query Document Example in Node.js\nDESCRIPTION: Allows executing a JavaScript example for querying a document with the Retriever service, presumes Node.js is present.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.query_document.js\"\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes the system tests using npm. System tests validate the end-to-end functionality of the entire application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Managing Dialogflow Phone Numbers Operations in Node.js\nDESCRIPTION: Suite of methods for phone number management including creation, deletion, listing, undeleting, and updating phone numbers in Dialogflow.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_45\n\n\n\n----------------------------------------\n\nTITLE: Running Parameter Manager API samples in Node.js\nDESCRIPTION: This snippet shows the commands to run the Parameter Manager API samples. It includes steps to install dependencies and navigate to the correct directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Installing @google-cloud/bigquery-analyticshub via npm\nDESCRIPTION: This Bash snippet demonstrates the installation of the Analytics Hub API client library for Node.js using npm. This is a prerequisite for using the API client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-analyticshub\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command lints the code and potentially fixes any style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Service Management in Google App Engine using Node.js\nDESCRIPTION: Sample code demonstrating service operations in Google App Engine. Includes deleting and getting service information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/services.delete_service.js\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-appengine/samples/generated/v1/services.get_service.js\n```\n\n----------------------------------------\n\nTITLE: Listing Network Meshes in Google Cloud Network Services\nDESCRIPTION: Example showing how to list network meshes using the Network Services API. Demonstrates usage of the list_meshes endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkservices/samples/generated/v1/network_services.list_meshes.js\n```\n\n----------------------------------------\n\nTITLE: Reverting Instances in Google Cloud Filestore - JavaScript\nDESCRIPTION: This function provides functionality to revert an instance in Google Cloud Filestore to a previous state.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n// Revert Instance Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function revertInstance(projectId, instanceId) {\n  // Implementation for reverting an instance\n}\n\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node Project in Bash\nDESCRIPTION: Command to run the linter which may also automatically fix some issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkservices/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Public Certificate Authority Service\nDESCRIPTION: This sample provides a quickstart guide for the Public Certificate Authority Service. It demonstrates basic usage of the google-cloud-security-publicca package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-publicca/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-publicca/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: List Channels Example - Google Cloud Video Livestream Service\nDESCRIPTION: Node.js code sample demonstrating how to list channels using the Livestream Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-video-livestream/samples/generated/v1/livestream_service.list_channels.js\n```\n\n----------------------------------------\n\nTITLE: Listing Host Project Registrations using Node.js\nDESCRIPTION: Sample code showing how to list all registered host projects using the list_host_project_registrations method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/host_project_registration_service.list_host_project_registrations.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Runtime with AI Platform Notebooks API in Node.js\nDESCRIPTION: This sample shows how to delete an existing runtime using the AI Platform Notebooks Managed Notebook Service API in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.delete_runtime.js\n```\n\n----------------------------------------\n\nTITLE: Managing Sales Data with Node.js\nDESCRIPTION: Example showing how to insert sales data using the LFP Sale Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-shopping-merchant-lfp/samples/generated/v1beta/lfp_sale_service.insert_lfp_sale.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service Update Document Example in Node.js\nDESCRIPTION: Executes a JavaScript script to update a document with the Retriever service. Prior Node.js setup is required.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.update_document.js\"\n```\n\n----------------------------------------\n\nTITLE: Creating DLP Job Trigger in Node.js\nDESCRIPTION: Sample code demonstrating how to create a job trigger for DLP operations. Located at /google-privacy-dlp/samples/generated/v2/dlp_service.create_job_trigger.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.create_job_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Last Mile Fleet Solution Delivery API Client Library in Node.js\nDESCRIPTION: Command to install the Google Maps Fleet Engine Delivery API Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/fleetengine-delivery\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Documenting New Features in Markdown\nDESCRIPTION: Markdown syntax for documenting new features added to the library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([e7409c8](https://github.com/googleapis/google-cloud-node/commit/e7409c87febcf33359a2d36ae4551f502b8a2f93))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and attempts to fix any style issues in the code automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Version Dependencies\nDESCRIPTION: Code showing updated package dependency versions referenced in changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"dependencies\": {\n    \"google-gax\": \"v2.17.1\",\n    \"google-auth-library\": \"v7\",\n    \"open\": \"v8\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Redacting Images with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to redact sensitive information from images using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.redact_image.js\n```\n\n----------------------------------------\n\nTITLE: Updating Data Exchange\nDESCRIPTION: Example showing how to update an Analytics Hub data exchange\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.update_data_exchange.js\n```\n\n----------------------------------------\n\nTITLE: Executing Retriever Service List Corpora Example in Node.js\nDESCRIPTION: Enables the execution of a JavaScript script to list corpora in the Retriever service, with a Node.js prerequisite.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-ai-generativelanguage/samples/generated/v1alpha/retriever_service.list_corpora.js\"\n```\n\n----------------------------------------\n\nTITLE: Preserving Options Object in Document AI Node.js Client\nDESCRIPTION: Bug fix to prevent modification of the options object, referenced in a GitHub issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\ndo not modify options object (#125) (acd166f)\n```\n\n----------------------------------------\n\nTITLE: Deleting Azure Client - Google Cloud Node\nDESCRIPTION: This snippet deletes an Azure client from Google Cloud. It is crucial to follow the right project and client specifications to avoid unintentional data loss. Ensure the client is correctly set up before attempting deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst {AzureClustersClient} = require('@google-cloud/gkemulticloud');\n\nconst client = new AzureClustersClient();\nawait client.deleteAzureClient({name: 'projects/my-project/locations/my-location/azureClients/my-client'});\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Get Product Details using Merchant API\nDESCRIPTION: Sample code showing how to retrieve details for a specific product using the Google Merchant API products service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/generated/v1beta/products_service.get_product.js\n```\n\n----------------------------------------\n\nTITLE: Version 0.1.0 Changelog Entry\nDESCRIPTION: Initial release of google.shopping.merchant.notifications.v1beta\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.0 (2024-04-18)\n\n### Features\n\n* Add initial files for google.shopping.merchant.notifications.v1beta ([#5257](https://github.com/googleapis/google-cloud-node/issues/5257)) ([8a23a90](https://github.com/googleapis/google-cloud-node/commit/8a23a9076bf72d2f38fae0199735772aa650c57b))\n```\n\n----------------------------------------\n\nTITLE: Using Datastream to list routes in Node.js\nDESCRIPTION: Example showing how to list routes using the Google Cloud Datastream API. This sample demonstrates the list_routes method of the Datastream client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1alpha1/datastream.list_routes.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm. It is a prerequisite for running tests and other development tasks.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Using VMware Engine API Node.js Client to List VMware Engine Networks\nDESCRIPTION: Example of using the VMware Engine API Node.js client to list VMware Engine networks. This snippet demonstrates how to instantiate the client, construct a request, and iterate through the response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the location to query for\n *  VMware Engine networks. Resource names are schemeless URIs that follow the\n *  conventions in https://cloud.google.com/apis/design/resource_names. For\n *  example: `projects/my-project/locations/global`\n */\n// const parent = 'abc123'\n/**\n *  The maximum number of results to return in one page.\n *  The maximum value is coerced to 1000.\n *  The default value of this field is 500.\n */\n// const pageSize = 1234\n/**\n *  A page token, received from a previous `ListVmwareEngineNetworks` call.\n *  Provide this to retrieve the subsequent page.\n *  When paginating, all other parameters provided to\n *  `ListVmwareEngineNetworks` must match the call that provided the page\n *  token.\n */\n// const pageToken = 'abc123'\n/**\n *  A filter expression that matches resources returned in the response.\n *  The expression must specify the field name, a comparison\n *  operator, and the value that you want to use for filtering. The value\n *  must be a string, a number, or a boolean. The comparison operator\n *  must be `=`, `!=`, `>`, or `<`.\n *  For example, if you are filtering a list of network peerings, you can\n *  exclude the ones named `example-network` by specifying\n *  `name != \"example-network\"`.\n *  To filter on multiple expressions, provide each separate expression within\n *  parentheses. For example:\n *  ```\n *  (name = \"example-network\")\n *  (createTime > \"2021-04-12T08:15:10.40Z\")\n *  ```\n *  By default, each expression is an `AND` expression. However, you\n *  can include `AND` and `OR` expressions explicitly.\n *  For example:\n *  ```\n *  (name = \"example-network-1\") AND\n *  (createTime > \"2021-04-12T08:15:10.40Z\") OR\n *  (name = \"example-network-2\")\n *  ```\n */\n// const filter = 'abc123'\n/**\n *  Sorts list results by a certain order. By default, returned results\n *  are ordered by `name` in ascending order.\n *  You can also sort results in descending order based on the `name` value\n *  using `orderBy=\"name desc\"`.\n *  Currently, only ordering by `name` is supported.\n */\n// const orderBy = 'abc123'\n\n// Imports the Vmwareengine library\nconst {VmwareEngineClient} = require('@google-cloud/vmwareengine').v1;\n\n// Instantiates a client\nconst vmwareengineClient = new VmwareEngineClient();\n\nasync function callListVmwareEngineNetworks() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable =\n    await vmwareengineClient.listVmwareEngineNetworksAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListVmwareEngineNetworks();\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: Command for running code linter to identify and potentially automatically fix code style and potential issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any code style issues in the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Job Triggers with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update an existing job trigger using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_job_trigger.js\n```\n\n----------------------------------------\n\nTITLE: Install Dependencies Command\nDESCRIPTION: Commands to install the required dependencies for running the samples. Must be executed in the correct directory order.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter and potentially fixes any style issues in the code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Documenting Miscellaneous Changes in Markdown\nDESCRIPTION: Records miscellaneous changes or chores related to the API update.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Listing Cloud Function Runtimes (v2alpha)\nDESCRIPTION: Example showing how to list available runtimes for Google Cloud Functions using the v2alpha API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2alpha/function_service.list_runtimes.js\n```\n\n----------------------------------------\n\nTITLE: Installing BigQuery Migration API Node.js Client Library\nDESCRIPTION: This command installs the BigQuery Migration API client library for Node.js using npm. It adds the @google-cloud/bigquery-migration package to your project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-migration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-migration\n```\n\n----------------------------------------\n\nTITLE: Set IAM Policy - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example showing how to set IAM policies in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Updating Snapshot in Cloud Filestore\nDESCRIPTION: Sample script demonstrating how to update a snapshot using the Cloud Filestore Manager API in Node.js beta version\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-filestore/samples/generated/v1beta1/cloud_filestore_manager.update_snapshot.js\n```\n\n----------------------------------------\n\nTITLE: List AlloyDB Backups using Node.js\nDESCRIPTION: This code snippet demonstrates how to list AlloyDB backups using the AlloyDB Admin API in Node.js. It uses the list_backups method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.list_backups.js\n```\n\n----------------------------------------\n\nTITLE: Linting Changes in Google Cloud Node Library\nDESCRIPTION: This snippet provides the command to lint the code and potentially fix any issues in the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing BeyondCorp API Client Library - Node.js\nDESCRIPTION: This snippet shows how to install the BeyondCorp API client library for Node.js using npm. This library is essential for interacting with the BeyondCorp API services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/appconnectors\n```\n\n----------------------------------------\n\nTITLE: Promote AlloyDB Cluster using Node.js\nDESCRIPTION: This code snippet demonstrates how to promote an AlloyDB cluster using the AlloyDB Admin API in Node.js. It uses the promote_cluster method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.promote_cluster.js\n```\n\n----------------------------------------\n\nTITLE: SQL Service Tiers and User Management in Node.js\nDESCRIPTION: Methods for listing available service tiers and managing SQL users including user deletion operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/README.md#2025-04-22_snippet_10\n\n\n\n----------------------------------------\n\nTITLE: Initializing Node.js Cloud Shell Client Library\nDESCRIPTION: This code snippet represents the initial generation of the Node.js Cloud Shell client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\ninitial lib generation ([d309d59](https://www.github.com/googleapis/nodejs-cloud-shell/commit/d309d59eed1de379b13c328a82d86c88f7aa453c))\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks Delete Task Sample Usage\nDESCRIPTION: This sample demonstrates how to delete a task using the Cloud Tasks API in Node.js. The script `cloud_tasks.delete_task.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.delete_task.js`\n```\n\n----------------------------------------\n\nTITLE: Restart AlloyDB Instance using Node.js\nDESCRIPTION: This code snippet shows how to restart an AlloyDB instance using the AlloyDB Admin API in Node.js. It uses the restart_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.restart_instance.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Retrieving Support Case Details with Google Cloud\nDESCRIPTION: Sample script showing how to fetch details of a specific support case using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.get_case.js\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample code demonstrating how to test IAM permissions on a data policy resource\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/generated/v1beta1/data_policy_service.test_iam_permissions.js\n```\n\n----------------------------------------\n\nTITLE: Executing Discussion Service Message Generation\nDESCRIPTION: Sample demonstrating how to generate messages using the Discussion Service API in beta2 version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/discuss_service.generate_message.js\n```\n\n----------------------------------------\n\nTITLE: Creating a Restore Plan using Backup for GKE API in Node.js\nDESCRIPTION: This sample demonstrates the creation of a restore plan using the Backup for GKE API client library in Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.create_restore_plan.js\n```\n\n----------------------------------------\n\nTITLE: Updating Discovery Configurations with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to update a discovery configuration using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.update_discovery_config.js\n```\n\n----------------------------------------\n\nTITLE: Marking Breaking Changes in Markdown\nDESCRIPTION: Highlights breaking changes in the API update, such as upgrading to a new Node.js version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Fixing Browser Fetch Check in Document AI Node.js Client\nDESCRIPTION: Bug fix to check for fetch on window in browser environments, referenced in a GitHub issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: text\nCODE:\n```\ncheck for fetch on window (#131) (b7b016e)\n```\n\n----------------------------------------\n\nTITLE: Restoring Instances in Google Cloud Filestore - JavaScript\nDESCRIPTION: This code demonstrates how to restore an instance in Google Cloud Filestore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n// Restore Instance Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function restoreInstance(projectId, instanceId) {\n  // Implementation for restoring an instance\n}\n\n```\n\n----------------------------------------\n\nTITLE: Run Funnel Report - Google Analytics Data API v1alpha\nDESCRIPTION: Sample code for running funnel reports using the Google Analytics Data API alpha version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-analytics-data/samples/generated/v1alpha/alpha_analytics_data.run_funnel_report.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js project using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Listing Notebook Runtimes with Google Cloud Node.js Client\nDESCRIPTION: Sample code demonstrating how to list notebook runtimes using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.list_runtimes.js\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Version Example\nDESCRIPTION: Example command showing how to install the Google Meet API client library for legacy Node.js version 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-apps/meet@legacy-8\n```\n\n----------------------------------------\n\nTITLE: List Transcript Entries from Conference Records Service\nDESCRIPTION: Node.js sample for listing transcript entries using the conference_records_service API endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2/conference_records_service.list_transcript_entries.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Code Quality\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: List Transcript Entries using Google Meet API\nDESCRIPTION: Sample code for retrieving transcript entries from a conference using the Conference Records Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.list_transcript_entries.js\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample\nDESCRIPTION: Command to execute the quickstart sample that provides a basic introduction to using the IAM Policy Troubleshooter API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-policytroubleshooter/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Processing OpenLineage Run Events with Node.js\nDESCRIPTION: Sample code for processing OpenLineage run events using the Google Cloud Datacatalog Lineage API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog-lineage/samples/generated/v1/lineage.process_open_lineage_run_event.js\n```\n\n----------------------------------------\n\nTITLE: Getting API Hub Plugin Details using Node.js\nDESCRIPTION: Sample code demonstrating how to retrieve plugin information from the API Hub service using the get_plugin method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_plugin.get_plugin.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Google Cloud Connectors\nDESCRIPTION: Basic example showing how to get started with the Google Cloud Connectors API using Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-connectors/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// No direct code snippets provided in the text, only links to external samples\n```\n\n----------------------------------------\n\nTITLE: Adding JSON Files to TypeScript Config in Container v6.0.0\nDESCRIPTION: Adds JSON files to the TypeScript configuration templates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nAdd json files to tsconfig templates ([#1692](https://github.com/googleapis/google-cloud-node/issues/1692)) (ba6be1d) ([7a23322](https://github.com/googleapis/google-cloud-node/commit/7a23322530b610eec2fe4c18fe1854048f31c811))\n```\n\n----------------------------------------\n\nTITLE: Running Storage Transfer Service Code Samples\nDESCRIPTION: Basic setup instructions for running the Storage Transfer Service code samples. Requires installing dependencies via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Loading Protos from JSON in JavaScript\nDESCRIPTION: Adds support for loading protocol buffer definitions from JSON files and adds gRPC fallback support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nload protos from JSON, grpc-fallback support\n```\n\n----------------------------------------\n\nTITLE: Renaming an Instance using Bare Metal Solution API in Node.js\nDESCRIPTION: This code demonstrates how to rename an instance using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.rename_instance.js\n```\n\n----------------------------------------\n\nTITLE: Generating Stateless Suggestions in Dialogflow (JavaScript)\nDESCRIPTION: This snippet demonstrates how to generate stateless suggestions for a conversation in Dialogflow. It uses the generate_stateless_suggestion method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.generate_stateless_suggestion.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Session Entity Type - Google Cloud Dialogflow - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a session entity type from Dialogflow, assisting with the management of dynamic entities as the context of conversations evolves.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_117\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Deletes a session entity type.\nconst {SessionEntityTypesClient} = require('@google-cloud/dialogflow').v2beta1;\n\nconst client = new SessionEntityTypesClient();\n\nasync function deleteSessionEntityType() {\n  // Implementation logic here\n}\n\ndeleteSessionEntityType();\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter on the codebase and potentially fixes any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing the client library\nDESCRIPTION: This snippet demonstrates how to install the Backup for GKE API client library using npm. It is a necessary step to use the library in a Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/gke-backup\n```\n\n----------------------------------------\n\nTITLE: List Transferable SKUs using Cloud Channel Service\nDESCRIPTION: Sample code for listing transferable SKUs using the Cloud Channel Service API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_transferable_skus.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving AI Model Information\nDESCRIPTION: Sample showing how to retrieve information about a specific AI model using the Model Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/model_service.get_model.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Tasks List Tasks Sample Usage\nDESCRIPTION: This sample demonstrates how to list tasks using the Cloud Tasks API in Node.js. The script `cloud_tasks.list_tasks.js` is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tasks/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-tasks/samples/generated/v2/cloud_tasks.list_tasks.js`\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds. It should be run before submitting a pull request to ensure code quality and consistency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Move Table Between Databases in Dataproc Metastore\nDESCRIPTION: Example showing how to move a table from one database to another within Dataproc Metastore.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1alpha/dataproc_metastore.move_table_to_database.js\n```\n\n----------------------------------------\n\nTITLE: Update Repository - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example demonstrating how to update repository settings in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.update_repository.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Command to execute all test suites for the Google Cloud Node.js project to ensure code changes pass validation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Notification Subscription Update Sample\nDESCRIPTION: Command to execute the sample code for updating an existing notification subscription in the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/generated/v1beta/notifications_api_service.update_notification_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Update Tag - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example showing how to update tags in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.update_tag.js\n```\n\n----------------------------------------\n\nTITLE: Creating an Application with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script demonstrates how to create an application using the Google Cloud App Hub API. It requires the Google Cloud client library for Node.js and assumes prior setup of the environment to run Node.js scripts.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.create_application.js\n```\n\n----------------------------------------\n\nTITLE: Deleting an Asset - Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet demonstrates how to delete an asset in Google Cloud Dataplex, which is crucial for managing unnecessary or outdated resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example code to delete an asset\nconst {DataplexServiceClient} = require('@google-cloud/dataplex');\nconst client = new DataplexServiceClient();\nasync function deleteAsset() {\n  const request = {name: 'name_of_the_asset'};\n  const [response] = await client.deleteAsset(request);\n  console.log(response);\n}\ndeleteAsset();\n```\n\n----------------------------------------\n\nTITLE: Deleting Policy Binding - Node.js\nDESCRIPTION: This snippet illustrates how to delete a specified policy binding using the Node.js client library. It requires the `google-iam` package. The input is the binding name, and there is no output on successful deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-iam/samples/generated/v3/policy_bindings.delete_policy_binding.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Promoting Replica in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet provides functionality to promote a replica of a Filestore instance.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n// Promote Replica Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function promoteReplica(projectId, instanceId) {\n  // Implementation for promoting a replica\n}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Contact Settings (v1beta1)\nDESCRIPTION: Demonstrates how to configure domain contact settings using the Cloud Domains API v1beta1.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-domains/samples/generated/v1beta1/domains.configure_contact_settings.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Projects\nDESCRIPTION: Command to run linting checks and automatically fix code style issues in Google Cloud Node.js projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-marketingplatform-admin/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Suggesting Articles using Dialogflow API in Node.js\nDESCRIPTION: This snippet demonstrates how to suggest articles using the Dialogflow API. It uses the participants.suggest_articles method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_67\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/participants.suggest_articles.js\n```\n\n----------------------------------------\n\nTITLE: Running Notification Subscription Retrieval Sample\nDESCRIPTION: Command to execute the sample code for retrieving a notification subscription from the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/generated/v1beta/notifications_api_service.get_notification_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run linting checks and automatically fix common issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Product Review Data Source Commit\nDESCRIPTION: Commit hash reference for adding product_review_data_source field to DataSource message\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n866f6b008669065da0f50eccd445b18b6476fd12\n```\n\n----------------------------------------\n\nTITLE: List Transcripts using Google Meet API\nDESCRIPTION: Sample code demonstrating how to list transcripts from a conference using the Conference Records Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.list_transcripts.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Get Security Health Analytics Custom Module\nDESCRIPTION: Shows how to fetch information about a specific Security Health Analytics custom module.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycentermanagement/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycentermanagement/samples/generated/v1/security_center_management.get_security_health_analytics_custom_module.js\n```\n\n----------------------------------------\n\nTITLE: Executing Migration Center List Import Jobs\nDESCRIPTION: Command to execute the list import jobs sample code for Migration Center API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.list_import_jobs.js\n```\n\n----------------------------------------\n\nTITLE: Executing Migration Center List Error Frames\nDESCRIPTION: Command to execute the list error frames sample code for Migration Center API using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.list_error_frames.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-apikeys/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Client Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting Code for Google Cloud Node.js Libraries\nDESCRIPTION: Command to run the linter on code changes and automatically fix issues where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Partner Repricing Configs - Node.js Cloud Channel API\nDESCRIPTION: Example showing how to list channel partner repricing configurations using Cloud Channel Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_channel_partner_repricing_configs.js\n```\n\n----------------------------------------\n\nTITLE: Getting API Hub Instance Details using Node.js\nDESCRIPTION: Sample code showing how to retrieve information about an API Hub instance using the get_api_hub_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/provisioning.get_api_hub_instance.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workflows-executions/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Version Links in Markdown\nDESCRIPTION: Markdown version comparison links showing the differences between releases\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[0.2.1](https://github.com/googleapis/google-cloud-node/compare/streetview-publish-v0.2.0...streetview-publish-v0.2.1)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[0.2.0](https://github.com/googleapis/google-cloud-node/compare/streetview-publish-v0.1.0...streetview-publish-v0.2.0)\n```\n\n----------------------------------------\n\nTITLE: Policy Based Routing Service Operations v1\nDESCRIPTION: Endpoints for managing policy-based routes in the network connectivity service. Includes CRUD operations for policy-based routes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Searching Connections with DLP API in Node.js\nDESCRIPTION: Sample demonstrating how to search for connections using the Google Cloud DLP API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.search_connections.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Web Security Scanner Configuration in Node.js\nDESCRIPTION: Sample showing how to delete an existing scan configuration from the Google Cloud Web Security Scanner service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nWeb_security_scanner.delete_scan_config\n```\n\n----------------------------------------\n\nTITLE: Allowing Calls with No Request in JavaScript\nDESCRIPTION: Fixes a bug to allow API calls with no request and adds JSON protocol buffer support.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nallow calls with no request, add JSON proto\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Edge Network Client Library with npm\nDESCRIPTION: Command to install the Google Cloud Edge Network client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/edgenetwork\n```\n\n----------------------------------------\n\nTITLE: List Repositories - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example demonstrating how to list repositories in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.list_repositories.js\n```\n\n----------------------------------------\n\nTITLE: Recursive Directory Processing\nDESCRIPTION: Command to recursively process all TypeScript files in a directory tree and convert them to JavaScript.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/typeless-sample-bot/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ntypeless-sample-bot --targets samples --recursive\n```\n\n----------------------------------------\n\nTITLE: Query Report Task - Google Analytics Data API v1alpha\nDESCRIPTION: Implementation for querying report tasks using the Google Analytics Data API alpha version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-analytics-data/samples/generated/v1alpha/alpha_analytics_data.query_report_task.js\n```\n\n----------------------------------------\n\nTITLE: Delete Rule Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to delete a rule set using the RuleSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/rule_set_service.delete_rule_set.js\n```\n\n----------------------------------------\n\nTITLE: List Rule Sets Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to list rule sets using the RuleSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/rule_set_service.list_rule_sets.js\n```\n\n----------------------------------------\n\nTITLE: Version Tag References\nDESCRIPTION: Git tag/version references showing the version comparisons between releases\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[5.0.1](https://github.com/googleapis/google-cloud-node/compare/billing-v5.0.0...billing-v5.0.1)\n```\n\n----------------------------------------\n\nTITLE: Delete Product Input using Merchant API\nDESCRIPTION: Sample code demonstrating how to delete a product input using the Google Merchant API product inputs service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/generated/v1beta/product_inputs_service.delete_product_input.js\n```\n\n----------------------------------------\n\nTITLE: List Versions - Google Cloud Artifact Registry API\nDESCRIPTION: Node.js example demonstrating how to list versions in Artifact Registry using the v1beta2 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-devtools-artifactregistry/samples/generated/v1beta2/artifact_registry.list_versions.js\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: Command for executing comprehensive system tests that validate entire system functionality and interactions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Default Branch in Build Configuration\nDESCRIPTION: Sets the default branch to 'main' in the build configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n**build:** set default branch to main ([#420](https://www.github.com/googleapis/nodejs-security-center/issues/420)) ([7a04895](https://www.github.com/googleapis/nodejs-security-center/commit/7a04895d15fc51694aba186bfbffaf7495744937))\n```\n\n----------------------------------------\n\nTITLE: Running Notification Subscription Deletion Sample\nDESCRIPTION: Command to execute the sample code for deleting a notification subscription in the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/generated/v1beta/notifications_api_service.delete_notification_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Create Rule Set Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to create a rule set using the RuleSet Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/rule_set_service.create_rule_set.js\n```\n\n----------------------------------------\n\nTITLE: Get Space using Google Meet API\nDESCRIPTION: Sample code showing how to retrieve space information using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.get_space.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Client\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Notification Subscription Creation Sample\nDESCRIPTION: Command to execute the sample code for creating a notification subscription in the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/generated/v1beta/notifications_api_service.create_notification_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Get Member using Google Meet API\nDESCRIPTION: Sample code demonstrating how to retrieve member information using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.get_member.js\n```\n\n----------------------------------------\n\nTITLE: Running Natural Language API Samples\nDESCRIPTION: Setup and installation instructions for running Natural Language API code samples in Node.js. Requires changing directory to samples and installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Closing a Support Case in Google Cloud\nDESCRIPTION: Sample script showing how to close an existing support case using the Case Service in the Google Cloud Support API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-support/samples/generated/v2/case_service.close_case.js\n```\n\n----------------------------------------\n\nTITLE: End Active Conference using Google Meet API\nDESCRIPTION: Sample code showing how to end an active conference using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.end_active_conference.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Projects\nDESCRIPTION: Command for installing all project dependencies using npm before contributing or running tests for Google Cloud Node.js repositories.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: File Upload Service Commit\nDESCRIPTION: Commit hash reference for adding FileUploads service to the Merchant API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n667316b70270f59b10cfb41c687ef9375b683f53\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Embedding Text Content\nDESCRIPTION: Sample showing how to generate text embeddings using the Text Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/text_service.embed_text.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Setup\nDESCRIPTION: This snippet provides instructions for installing the required dependencies for the Node.js setup before running tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setup Instructions\nDESCRIPTION: Initial setup steps required before running the samples, including installing dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Version Update Links in Markdown\nDESCRIPTION: Markdown links comparing different versions of the policysimulator package on GitHub\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[0.5.1](https://github.com/googleapis/google-cloud-node/compare/policysimulator-v0.5.0...policysimulator-v0.5.1)\n```\n\n----------------------------------------\n\nTITLE: Adding Trusted Private Cloud Support with universeDomain Parameter\nDESCRIPTION: This code snippet shows a feature update where Trusted Private Cloud support is added using the universeDomain parameter.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* Trusted Private Cloud support, use the universeDomain parameter  ([#5027](https://github.com/googleapis/google-cloud-node/issues/5027)) ([88763bb](https://github.com/googleapis/google-cloud-node/commit/88763bb1b7ce9ff884b9e3f476230d38985b2ff2))\n```\n\n----------------------------------------\n\nTITLE: Cloud IDS Quickstart Sample Usage\nDESCRIPTION: Command to execute the quickstart sample code for Cloud IDS.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-ids/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Cloud Build Retry Build Sample\nDESCRIPTION: This sample demonstrates how to retry a build using the Cloud Build API in JavaScript. The sample can be run in Cloud Shell and the source code is available in the provided link.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter on the codebase and automatically fixes any issues it can. It helps maintain code quality and consistency across the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-areainsights/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Commit References\nDESCRIPTION: Markdown links to specific commit hashes and pull requests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([#6183](https://github.com/googleapis/google-cloud-node/issues/6183)) ([f91c71f](https://github.com/googleapis/google-cloud-node/commit/f91c71f71c7a08ac17a15b7bb2233cbc041ee69b))\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which may automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Evicting LUN in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet evicts a logical unit number (LUN) from a bare metal instance. The script requires a Node.js environment to execute against the Google Cloud Bare Metal Solution API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.evict_lun.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.evict_lun.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Connectivity Test in Google Cloud Network Management API v1beta1\nDESCRIPTION: A Node.js sample that demonstrates how to delete an existing connectivity test using the Google Cloud Network Management API v1beta1. This removes a previously created connectivity test from your project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networkmanagement/samples/generated/v1beta1/reachability_service.delete_connectivity_test.js\n```\n\n----------------------------------------\n\nTITLE: Update Certificate Revocation List using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to update a Certificate Revocation List using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.update_certificate_revocation_list.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linting process which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Edge Container Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud Edge Container client library using NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/edgecontainer\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which may automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Create Space using Google Meet API\nDESCRIPTION: Sample code showing how to create a new space using the Spaces Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/spaces_service.create_space.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run code linting and automatically fix issues where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parametermanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Activate Certificate Authority using Google Cloud Private CA Service (Beta)\nDESCRIPTION: Node.js sample code to activate a Certificate Authority using the Google Cloud Private CA Beta API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1beta1/certificate_authority_service.activate_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Google Shopping Business Identity Service Samples\nDESCRIPTION: API endpoints for managing merchant business identity information including retrieval and updates of business profiles.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Service Management API (Node.js)\nDESCRIPTION: A quickstart sample demonstrating basic usage of the Google Cloud Service Management API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-servicemanagement/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: List Certificate Revocation Lists using Google Cloud Private CA Service\nDESCRIPTION: Node.js sample code to list Certificate Revocation Lists using the Google Cloud Private CA API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.list_certificate_revocation_lists.js\n```\n\n----------------------------------------\n\nTITLE: Listing Cloud Functions (v2beta)\nDESCRIPTION: Example demonstrating how to list all Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.list_functions.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Channel Reports Sample\nDESCRIPTION: Example command for running the fetch report results sample code\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_reports_service.fetch_report_results.js\n```\n\n----------------------------------------\n\nTITLE: Get Conference Record Details\nDESCRIPTION: Node.js sample for retrieving conference record details using the conference_records_service API endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.get_conference_record.js\n```\n\n----------------------------------------\n\nTITLE: Creating API Hub Instance using Node.js\nDESCRIPTION: Sample code demonstrating how to create a new API Hub instance using the create_api_hub_instance method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/provisioning.create_api_hub_instance.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy\nDESCRIPTION: Example showing how to set IAM policy for Analytics Hub resources\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Delete Trust Config using Node.js\nDESCRIPTION: Example showing how to delete a trust configuration using the Google Cloud Certificate Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.delete_trust_config.js\n```\n\n----------------------------------------\n\nTITLE: Commit Reference Links in Markdown\nDESCRIPTION: Markdown links referencing specific commit hashes in the repository\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf)\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Reference\nDESCRIPTION: Markdown link showing a Git commit hash reference.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[ab30412](https://github.com/googleapis/google-cloud-node/commit/ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906)\n```\n\n----------------------------------------\n\nTITLE: List Products using Merchant API\nDESCRIPTION: Sample code demonstrating how to list multiple products using the Google Merchant API products service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-products/samples/generated/v1beta/products_service.list_products.js\n```\n\n----------------------------------------\n\nTITLE: Generate GKE Gateway Credentials - v1beta1\nDESCRIPTION: Sample code demonstrating how to generate credentials for GKE Connect Gateway using v1beta1 API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_control.generate_credentials.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Security Command Center client library with npm\nDESCRIPTION: Command to install the Google Cloud Security Command Center Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/security-center\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing BigQuery Reservation Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud BigQuery Reservation client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-reservation/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-reservation\n```\n\n----------------------------------------\n\nTITLE: Installing Service Management Client Library using NPM\nDESCRIPTION: Command to install the Google Cloud Service Management Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/service-management\n```\n\n----------------------------------------\n\nTITLE: Using NotebookService.getExecution in Node.js\nDESCRIPTION: Example showing how to get execution details using the Google Cloud Notebooks API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/notebook_service.get_execution.js\n```\n\n----------------------------------------\n\nTITLE: Update Workloads Config Map in Airflow\nDESCRIPTION: Shows how to update user workloads configuration map in a Cloud Composer Airflow environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.update_user_workloads_config_map.js\n```\n\n----------------------------------------\n\nTITLE: Generating Text Content\nDESCRIPTION: Sample demonstrating text generation capabilities using the Text Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-ai-generativelanguage/samples/generated/v1beta2/text_service.generate_text.js\n```\n\n----------------------------------------\n\nTITLE: Quickstart - BigQuery Data Policies API (JavaScript)\nDESCRIPTION: Sample quickstart code demonstrating basic usage of the BigQuery Data Policies API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-datapolicies/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Version Compare Links\nDESCRIPTION: GitHub repository compare links for version diffs\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[6.0.1](https://github.com/googleapis/google-cloud-node/compare/resource-manager-v6.0.0...resource-manager-v6.0.1)\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the code linter and automatically fix issues where possible.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Channel Partner Links - Node.js Cloud Channel API\nDESCRIPTION: Example showing how to list channel partner links using Cloud Channel Service API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.list_channel_partner_links.js\n```\n\n----------------------------------------\n\nTITLE: Installing the BigQuery DataPolicies Client Library with npm\nDESCRIPTION: Command to install the Google Cloud BigQuery DataPolicies client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/bigquery-datapolicies\n```\n\n----------------------------------------\n\nTITLE: Deleting Cloud Functions (v2beta)\nDESCRIPTION: Example demonstrating how to delete Cloud Functions using the v2beta API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/generated/v2beta/function_service.delete_function.js\n```\n\n----------------------------------------\n\nTITLE: Get KMS Config - Google Cloud NetApp Node.js\nDESCRIPTION: Example usage of the NetApp API to retrieve KMS configuration details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.get_kms_config.js\n```\n\n----------------------------------------\n\nTITLE: Commit Reference Link Format\nDESCRIPTION: Markdown link format used to reference specific commits\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[ab30412](https://github.com/googleapis/google-cloud-node/commit/ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906)\n```\n\n----------------------------------------\n\nTITLE: Getting Tag Template in Data Catalog\nDESCRIPTION: Sample code demonstrating how to retrieve a tag template from Google Cloud Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.get_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Commit Reference in Markdown\nDESCRIPTION: Markdown link syntax for referencing a specific Git commit\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[ab30412](https://github.com/googleapis/google-cloud-node/commit/ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906)\n```\n\n----------------------------------------\n\nTITLE: Deleting a QA Question with Contact Center Insights API in Node.js\nDESCRIPTION: This snippet shows how to delete a QA question using the Contact Center Insights API. It uses the delete_qa_question method of the ContactCenterInsights client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/samples/README.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-contactcenterinsights/samples/generated/v1/contact_center_insights.delete_qa_question.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using the Confidential Computing API Client in Node.js\nDESCRIPTION: This snippet demonstrates how to create a Challenge using the Confidential Computing API client. It imports the library, instantiates a client, constructs a request, and calls the createChallenge method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The resource name of the location where the Challenge will be\n *  used, in the format `projects/* /locations/*`.\n */\n// const parent = 'abc123'\n/**\n *  Required. The Challenge to be created. Currently this field can be empty as\n *  all the Challenge fields are set by the server.\n */\n// const challenge = {}\n\n// Imports the Confidentialcomputing library\nconst {ConfidentialComputingClient} =\n  require('@google-cloud/confidentialcomputing').v1;\n\n// Instantiates a client\nconst confidentialcomputingClient = new ConfidentialComputingClient();\n\nasync function callCreateChallenge() {\n  // Construct request\n  const request = {\n    parent,\n    challenge,\n  };\n\n  // Run request\n  const response = await confidentialcomputingClient.createChallenge(request);\n  console.log(response);\n}\n\ncallCreateChallenge();\n```\n\n----------------------------------------\n\nTITLE: Deleting Datastream Route in Node.js\nDESCRIPTION: This code snippet provides an example of how to delete a route in Google Cloud Datastream using Node.js, allowing for the removal of data pathways.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.delete_route.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Library\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds. It helps maintain code quality and consistency across the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating Permission with Permission Service in Javascript\nDESCRIPTION: This sample code demonstrates the usage of `createPermission` method from Permission Service. It uses google-ai-generativelanguage package to create a permission entry.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/README.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Testing IAM Permissions for Policy Tag Manager in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet checks IAM permissions on a resource managed by the Policy Tag Manager in Google Cloud Data Catalog, using the google-cloud-datacatalog library and Node.js. It utilizes the `testIamPermissions` method to determine if the caller has the specified permissions. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(resource, permissions) {\n  // [START datacatalog_test_iam_permissions]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const resource = 'PROJECT_ID'; // Resource path.\n  // const permissions = ['datacatalog.entries.get'];\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function testIamPermissions() {\n    const [policy] = await policyTagManagerClient.testIamPermissions({\n      resource: resource,\n      permissions: permissions,\n    });\n\n    console.log('Tested permissions for resource: %s', resource);\n    console.log(policy);\n  }\n  testIamPermissions();\n  // [END datacatalog_test_iam_permissions]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Resuming a Cloud Scheduler Job in Node.js\nDESCRIPTION: This code sample demonstrates how to resume a paused job in Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.resume_job.js\n```\n\n----------------------------------------\n\nTITLE: Batch Deleting Entities with Dialogflow V2beta1\nDESCRIPTION: This sample demonstrates deleting multiple entities in a batch operation using Dialogflow V2beta1 in Node.js. It uses the `Entity_types.batch_delete_entities` method. The sample would likely require the Dialogflow client library and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/README.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n\"Entity_types.batch_delete_entities\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Libraries\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js libraries project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dns/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Advisory Notifications API\nDESCRIPTION: Sample quickstart code demonstrating basic usage of the Advisory Notifications API with Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-advisorynotifications/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node Project\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Libraries\nDESCRIPTION: Command to install all required Node.js dependencies for development work on the Google Cloud Node.js libraries.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fetching Static IPs for Datastream in Node.js\nDESCRIPTION: This snippet illustrates how to fetch static IP addresses used by Google Cloud Datastream in Node.js applications, facilitating network configuration.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.fetch_static_ips.js\n```\n\n----------------------------------------\n\nTITLE: Initializing the BackupDR Service in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the BackupDR service using Node.js. It utilizes the google-cloud-node library and shows the command-line execution to run the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.initialize_service.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Shared Resource Subscriptions\nDESCRIPTION: Example showing how to list shared resource subscriptions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.list_shared_resource_subscriptions.js\n```\n\n----------------------------------------\n\nTITLE: Get Participant Details\nDESCRIPTION: Node.js sample for retrieving participant details using the conference_records_service API endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/generated/v2beta/conference_records_service.get_participant.js\n```\n\n----------------------------------------\n\nTITLE: Delete DNS Authorization using Node.js\nDESCRIPTION: Example showing how to delete a DNS authorization using the Google Cloud Certificate Manager API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-certificatemanager/samples/generated/v1/certificate_manager.delete_dns_authorization.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: List Airflow Environments - Node.js\nDESCRIPTION: Lists all Airflow environments in the specified project and location.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.list_environments.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Video Stitcher API Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Video Stitcher API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-stitcher/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/video-stitcher\n```\n\n----------------------------------------\n\nTITLE: Run Pipeline Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to run a pipeline using the Pipeline Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/pipeline_service.run_pipeline.js\n```\n\n----------------------------------------\n\nTITLE: Restoring AlloyDB Cluster - Node.js\nDESCRIPTION: Sample code demonstrating how to restore an AlloyDB cluster using the AlloyDB Admin API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/generated/v1beta/alloy_d_b_admin.restore_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node Library\nDESCRIPTION: This snippet outlines the command to run unit tests for the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Channel Service Sample\nDESCRIPTION: Example command for running the activate entitlement sample code\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnode packages/google-cloud-channel/samples/generated/v1/cloud_channel_service.activate_entitlement.js\n```\n\n----------------------------------------\n\nTITLE: Get Document Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to retrieve a document using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.get_document.js\n```\n\n----------------------------------------\n\nTITLE: Installing AI Platform Notebooks Client Library\nDESCRIPTION: Command to install the Google Cloud AI Platform Notebooks client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/notebooks\n```\n\n----------------------------------------\n\nTITLE: Managing Single Table Row - Get\nDESCRIPTION: Example showing how to retrieve a single row from an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.get_row.js\n```\n\n----------------------------------------\n\nTITLE: Installing Migration Center API Node.js Client\nDESCRIPTION: This snippet shows how to install the Migration Center API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/migrationcenter\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Workstations Client Library\nDESCRIPTION: Command to install the Google Cloud Workstations Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-workstations/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/workstations\n```\n\n----------------------------------------\n\nTITLE: Managing Table Rows - Batch Delete\nDESCRIPTION: Example showing how to batch delete multiple rows from an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.batch_delete_rows.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Shopping Merchant Reports Client Library\nDESCRIPTION: Command to install the Google Shopping Merchant Reports Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reports/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/reports\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Entry Groups in Data Catalog\nDESCRIPTION: Sample code demonstrating how to list entry groups in Google Cloud Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.list_entry_groups.js\n```\n\n----------------------------------------\n\nTITLE: List SQL Operations - Google Cloud SQL Node.js\nDESCRIPTION: Sample code demonstrating how to list SQL operations using the Google Cloud SQL API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-sql/samples/generated/v1/sql_operations_service.list.js\n```\n\n----------------------------------------\n\nTITLE: List Active Directories - Google Cloud NetApp Node.js\nDESCRIPTION: Example usage of the NetApp API to list active directory configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.list_active_directories.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reports/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Storage Client Library\nDESCRIPTION: Command to install the Google Cloud Storage Control client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/storage-control\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: List Storage Pools - Google Cloud NetApp Node.js\nDESCRIPTION: Example usage of the NetApp API to list all storage pools.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-netapp/samples/generated/v1/net_app.list_storage_pools.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-accessapproval/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: List Hubs\nDESCRIPTION: Command line usage example for listing hubs in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_hubs.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Queued TPU Resource in Node.js\nDESCRIPTION: Sample code for deleting a queued TPU resource using the Google Cloud TPU API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-tpu/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-tpu/samples/generated/v2alpha1/tpu.delete_queued_resource.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Data Catalog Client Library\nDESCRIPTION: Command to install the Google Cloud Data Catalog client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/datacatalog\n```\n\n----------------------------------------\n\nTITLE: Installing Parallelstore Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Parallelstore client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/parallelstore\n```\n\n----------------------------------------\n\nTITLE: Get Hub\nDESCRIPTION: Command line usage example for retrieving a hub in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.get_hub.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Development\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting API Specifications using Node.js\nDESCRIPTION: Sample code demonstrating how to lint API specifications using the lint_spec method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/linting_service.lint_spec.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Generate GKE Gateway Credentials - v1\nDESCRIPTION: Sample code demonstrating how to generate credentials for GKE Connect Gateway using v1 API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1/gateway_control.generate_credentials.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Merchant API Client Library with npm\nDESCRIPTION: Command to install the Google Merchant API Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/products\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Data Exchange\nDESCRIPTION: Example showing how to subscribe to an Analytics Hub data exchange\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.subscribe_data_exchange.js\n```\n\n----------------------------------------\n\nTITLE: Commit References in Markdown\nDESCRIPTION: Markdown links to specific commit hashes in the repository\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Adding Style Enumeration in Document AI Node.js Client\nDESCRIPTION: Addition of style enumeration functionality, referenced in a GitHub issue and commit.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-documentai/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nadds style enumeration (#143) (0ed64c4)\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Node.js version upgrade specification\nDESCRIPTION: Package.json engine field update to require Node.js version 8.10.0 or higher\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"engines\": {\n  \"node\": \">=8.10.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Secure Source Manager API Node.js Client\nDESCRIPTION: This command installs the Secure Source Manager API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securesourcemanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/securesourcemanager\n```\n\n----------------------------------------\n\nTITLE: Installing the Area120 Tables API Client Library in Node.js\nDESCRIPTION: Command to install the Area120 Tables API Node.js client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google/area120-tables\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Controls Partner API Node.js Client\nDESCRIPTION: This command installs the Node.js client library for the Cloud Controls Partner API using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @google-cloud/cloudcontrolspartner\n```\n\n----------------------------------------\n\nTITLE: Managing Single Table Row - Delete\nDESCRIPTION: Example showing how to delete a single row from an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.delete_row.js\n```\n\n----------------------------------------\n\nTITLE: Exporting Metadata from Dataproc Metastore\nDESCRIPTION: Sample code demonstrating metadata export functionality from a Dataproc Metastore service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1beta/dataproc_metastore.export_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Data Labeling Node.js Client Library\nDESCRIPTION: This command installs the Google Cloud Data Labeling client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/datalabeling\n```\n\n----------------------------------------\n\nTITLE: Update Document Sample - Content Warehouse API (Node.js)\nDESCRIPTION: Sample code demonstrating how to update a document using the Document Service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-cloud-contentwarehouse/samples/generated/v1/document_service.update_document.js\n```\n\n----------------------------------------\n\nTITLE: List Oracle Autonomous Database Character Sets Command\nDESCRIPTION: Node.js command to list available character sets for autonomous databases.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.list_autonomous_database_character_sets.js\n```\n\n----------------------------------------\n\nTITLE: Getting Backtest Result with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This code sample demonstrates how to retrieve a backtest result using the A_m_l.get_backtest_result method of the Google Cloud Financial Services API. The necessary Node.js package and credentials are required to run this code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.get_backtest_result.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run before testing or development.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command runs the sample integration tests defined in the project using npm. These tests ensure that the samples work correctly in an integrated environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Version Links in Markdown\nDESCRIPTION: Links to npm version history for the package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[npm history][1]\n\n[1]: https://www.npmjs.com/package/@google-cloud/talent?activeTab=versions\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run linting checks and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Adaptive MT Datasets with Google Cloud Translation API in JavaScript\nDESCRIPTION: This code example demonstrates how to list adaptive MT datasets using the Translation Service. It utilizes the list_adaptive_mt_datasets method from the v3 API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-translate/samples/generated/v3/translation_service.list_adaptive_mt_datasets.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding VM Update Method in Node.js Compute Client\nDESCRIPTION: A new vm.update() method has been added to update VM instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nvm.update()\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-monitoring/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run code linting and automatic fixes for code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Adding TypeScript Declaration Files for Protos in JavaScript\nDESCRIPTION: Adds TypeScript .d.ts files for protocol buffer definitions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n.d.ts for protos\n```\n\n----------------------------------------\n\nTITLE: Including Correct Node Version in Header in JavaScript\nDESCRIPTION: Fixes a bug to include the correct version of Node.js in a header.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\ninclude the correct version of node in a header\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Documenting Breaking Changes in Markdown\nDESCRIPTION: Markdown syntax for highlighting breaking changes in a release.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* update library to use Node 12 (#122)\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Google Cloud IoT Node.js Commit Reference Example\nDESCRIPTION: Example of referencing a specific commit hash\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\n629e2edcf7a693e156ca2a144615c2b5a4daa4ee\n```\n\n----------------------------------------\n\nTITLE: Installing the Service Control API Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Service Control client library via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/service-control\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Deploy Node.js Client Library\nDESCRIPTION: This snippet shows how to install the Google Cloud Deploy client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install project dependencies using npm package manager\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Shell Environment Setup Commands\nDESCRIPTION: Basic setup commands to install and prepare the environment for running Cloud Shell samples\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-shell/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\\nnpm install\\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Get GKE Gateway Resource\nDESCRIPTION: Sample code demonstrating how to retrieve a resource from GKE Connect Gateway\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-gkeconnect-gateway/samples/generated/v1beta1/gateway_service.get_resource.js\n```\n\n----------------------------------------\n\nTITLE: Get Valued Resource\nDESCRIPTION: Retrieves a valued resource from the Security Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.get_valued_resource.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Analytics Admin Node.js Client\nDESCRIPTION: Command to install the Google Analytics Admin client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-analytics/admin\n```\n\n----------------------------------------\n\nTITLE: Listing Tags in Data Catalog\nDESCRIPTION: Sample code demonstrating how to list tags in Google Cloud Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.list_tags.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Chat API Node.js Client\nDESCRIPTION: Command to install the Google Chat API client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-apps/chat\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Maps Routing Client Library for Node.js\nDESCRIPTION: Command to install the Google Maps Routing client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/routing\n```\n\n----------------------------------------\n\nTITLE: Updating Import Jobs in Migration Center\nDESCRIPTION: Node.js example demonstrating how to update import job configurations\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.update_import_job.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies in Node.js Project\nDESCRIPTION: Command to install all dependencies defined in package.json for a Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Initializing Area120 Tables Quick Start\nDESCRIPTION: Basic quick start example for using the Area120 Tables API with Node.js\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Refreshing Analytics Hub Subscription\nDESCRIPTION: Example showing how to refresh an Analytics Hub subscription\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.refresh_subscription.js\n```\n\n----------------------------------------\n\nTITLE: Running Quickstart Sample\nDESCRIPTION: Command to execute the quickstart sample code for the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Channel API Dependencies\nDESCRIPTION: Instructions for installing the required npm dependencies for running the samples\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Issue Reference Links in Markdown\nDESCRIPTION: Markdown links referencing GitHub issue numbers in the repository\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicemanagement/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[#6182](https://github.com/googleapis/google-cloud-node/issues/6182)\n```\n\n----------------------------------------\n\nTITLE: AlloyDB Quickstart - Node.js\nDESCRIPTION: Quick start sample demonstrating basic usage of the AlloyDB Admin API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/samples/README.md#2025-04-22_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-alloydb/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Managing Single Table Row - Create\nDESCRIPTION: Example showing how to create a single row in an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.create_row.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Quotas API Client Library for Node.js\nDESCRIPTION: This command installs the Cloud Quotas API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/cloudquotas\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install required Node.js dependencies for the Google Cloud project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-areainsights/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Merchant API Dependencies\nDESCRIPTION: Initial setup instructions for installing the required Node.js dependencies for the Google Merchant API samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Listing Table Rows\nDESCRIPTION: Example showing how to list all rows in an Area120 table\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.list_rows.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install the required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-chat/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting an Application with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This code sample shows how to retrieve details of an application in the App Hub using Node.js. The Google Cloud client library must be set up properly in your environment to execute this script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.get_application.js\n```\n\n----------------------------------------\n\nTITLE: HTML Comment in Markdown\nDESCRIPTION: Synthtool-generated warning comment indicating the file should not be edited manually\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Listing Dialogflow CX Generators\nDESCRIPTION: Command to list all Dialogflow CX generators using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_107\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/generators.list_generators.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Developer Connect API Client Library for Node.js\nDESCRIPTION: This command installs the Developer Connect API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/developerconnect\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install the required dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Google Cloud IoT Node.js Version Comparison Example\nDESCRIPTION: Example of using version comparison in commit link\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\ncompare/v1.6.0...v1.6.1\n```\n\n----------------------------------------\n\nTITLE: Running System Tests\nDESCRIPTION: NPM script for executing all system tests in the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Volume Snapshot - Google Cloud Node.js\nDESCRIPTION: This snippet provides functionality to delete a volume snapshot from the Google Cloud Bare Metal Solution using Node.js. Necessary permissions should be granted to perform this operation smoothly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function deleteVolumeSnapshot() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/volumeSnapshots/YOUR_VOLUME_SNAPSHOT_ID',\n  };\n  const [operation] = await client.deleteVolumeSnapshot(request);\n  await operation.promise();\n  console.log('Volume Snapshot deleted.');\n}\ndeleteVolumeSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Deleting Permission with Permission Service in JavaScript\nDESCRIPTION: This sample demonstrates deleting a permission using the PermissionService within the google-ai-generativelanguage package. Executing the provided command will trigger the sample to delete a specific permission.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-ai-generativelanguage/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n`node packages/google-ai-generativelanguage/samples/generated/v1alpha/permission_service.delete_permission.js`\n```\n\n----------------------------------------\n\nTITLE: Updating an Example in Dialogflow CX using Node.js\nDESCRIPTION: This code shows how to update an existing example in Dialogflow CX. It utilizes the google-cloud-dialogflow-cx package and assumes proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_86\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/examples.update_example.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and automatically fixes any linting issues in the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-datasources/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Setting Finding State in Google Cloud Security Center (Node.js)\nDESCRIPTION: This snippet modifies the state of a finding in the Security Center, allowing for better management of alerts and investigations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-securitycenter/samples/README.md#2025-04-22_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-securitycenter/samples/generated/v1/security_center.set_finding_state.js\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Node.js Project\nDESCRIPTION: Command to run the linter which may also automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Analytics Hub Quickstart\nDESCRIPTION: Quickstart example for using the Analytics Hub service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Listing EKM Connections with Ekm_service in Node.js\nDESCRIPTION: This snippet demonstrates how to list EKM connections using the google-cloud-kms library in a Node.js environment. It provides the necessary command to execute the sample which lists the existing EKM connections.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/ekm_service.list_ekm_connections.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Binary Authorization Samples\nDESCRIPTION: Commands to install and set up the Binary Authorization samples\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-binaryauthorization/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iap/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routing/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install the required npm dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigeeconnect/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Disabling Certificate Authority with Google Cloud Private CA in Node.js\nDESCRIPTION: This code example shows how to disable a Certificate Authority using the Google Cloud Private CA Service API. It utilizes the CertificateAuthorityService client to call the disableCertificateAuthority method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.disable_certificate_authority.js\n```\n\n----------------------------------------\n\nTITLE: Creating Dialogflow CX Page\nDESCRIPTION: Command to create a new Dialogflow CX page using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_116\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/pages.create_page.js\n```\n\n----------------------------------------\n\nTITLE: Google Meet API Quickstart\nDESCRIPTION: Sample quickstart code demonstrating basic usage of the Google Meet API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-apps-meet/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-sql/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: List Oracle Cloud Exadata Infrastructures Command\nDESCRIPTION: Node.js command to list Exadata infrastructure resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-oracledatabase/samples/generated/v1/oracle_database.list_cloud_exadata_infrastructures.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud OS Login Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud OS Login Node.js client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/os-login\n```\n\n----------------------------------------\n\nTITLE: Required OAuth2 Scope\nDESCRIPTION: OAuth2 scope required for Analytics Admin API access.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nhttps://www.googleapis.com/auth/analytics.edit\n```\n\n----------------------------------------\n\nTITLE: Installing OS Config API Node.js Client Library\nDESCRIPTION: This command installs the OS Config API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/os-config\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js package dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js package dependencies for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run code linting and auto-fix formatting issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Dialogflow CX Intent\nDESCRIPTION: Command to update a Dialogflow CX intent using Node.js API client\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_115\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/intents.update_intent.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-ids/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: NPM script for executing unit tests in the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing the Service Usage Node.js Client\nDESCRIPTION: Command to install the Google Cloud Service Usage client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/service-usage\n```\n\n----------------------------------------\n\nTITLE: Installing the API Keys API Node.js Client Library\nDESCRIPTION: Command to install the @google-cloud/apikeys package using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-apikeys/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apikeys\n```\n\n----------------------------------------\n\nTITLE: Execute Airflow Command - Node.js\nDESCRIPTION: Script to execute Airflow commands in a Cloud Composer environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.execute_airflow_command.js\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing the Model Armor API Node.js Client Library\nDESCRIPTION: Command to install the Model Armor API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-modelarmor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/modelarmor\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Merchant API Client Library\nDESCRIPTION: Command to install the Google Merchant API client library via npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/notifications\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node Project\nDESCRIPTION: Command to install required Node.js dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-speech/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Analytics Data Client Library\nDESCRIPTION: Command to install the Google Analytics Data client library via npm\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-analytics/data\n```\n\n----------------------------------------\n\nTITLE: Version History Documentation in Markdown\nDESCRIPTION: Markdown formatted changelog showing version updates, breaking changes, features, and fixes for the Google Cloud Node Advisory Notifications library from v0.1.0 through v2.1.0.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-advisorynotifications/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [2.1.0](https://github.com/googleapis/google-cloud-node/compare/advisorynotifications-v2.0.0...advisorynotifications-v2.1.0) (2025-03-19)\n\n\n### Features\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6182](https://github.com/googleapis/google-cloud-node/issues/6182)) ([c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf))\n\n## [2.0.0](https://github.com/googleapis/google-cloud-node/compare/advisorynotifications-v1.4.0...advisorynotifications-v2.0.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics, update templates to gax 5  ([54a73fe](https://github.com/googleapis/google-cloud-node/commit/54a73fe74eab0675c006f24d5f1e4574c44d829b))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n\n```\n\n----------------------------------------\n\nTITLE: Exporting Model Metadata with Google Cloud Financial Services A_m_l API in JavaScript\nDESCRIPTION: This snippet shows how to export model metadata using the A_m_l.export_model_metadata method of the Google Cloud Financial Services API. It requires the appropriate Node.js package and authentication to run successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-financialservices/samples/generated/v1/a_m_l.export_model_metadata.js\n```\n\n----------------------------------------\n\nTITLE: Linting Changes in Node.js\nDESCRIPTION: This snippet describes the command for linting the code, which helps identify and fix potential errors or stylistic issues. Running this command is advisable before finalizing code changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-retail/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs all project dependencies necessary for the Node.js environment. Make sure you have Node.js and npm installed before executing this command.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting a Column Data Profile with DLP Service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a column data profile using the Google Cloud DLP service. It uses the getColumnDataProfile method from the google-privacy-dlp package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.get_column_data_profile.js\n```\n\n----------------------------------------\n\nTITLE: Installing the Access Context Manager Node.js Client Library\nDESCRIPTION: Command to install the Access Context Manager client library via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/access-context-manager\n```\n\n----------------------------------------\n\nTITLE: Project Contact Information in Markdown\nDESCRIPTION: Contact information for reporting code of conduct violations and project stewards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter-iam/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ngoogleapis-stewards@google.com\n```\n\n----------------------------------------\n\nTITLE: Formatting Changelog Entries in Markdown\nDESCRIPTION: Demonstrates how individual changelog entries are formatted, including issue links and commit hashes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6186](https://github.com/googleapis/google-cloud-node/issues/6186)) ([dcfc7b4](https://github.com/googleapis/google-cloud-node/commit/dcfc7b492a2ac3fb86b93ae1375bac1c5153d049))\n```\n\n----------------------------------------\n\nTITLE: Updating Backup in Cloud Filestore\nDESCRIPTION: This snippet shows how to update existing backup details within Google Cloud Filestore, necessitating appropriate access rights.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function updateBackup() {\n    const response = await client.updateBackup(...);\n    console.log(response);\n}\nupdateBackup();\n```\n\n----------------------------------------\n\nTITLE: Get Environment - Dialogflow V2 - Node.js\nDESCRIPTION: Demonstrates how to retrieve an environment using the Dialogflow V2 API with Node.js. The sample requires the Dialogflow client library and uses the `getEnvironment` method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/environments.get_environment.js`\n```\n\n----------------------------------------\n\nTITLE: Initializing GKE Connect Gateway Client\nDESCRIPTION: Example showing how to import and initialize the GKE Connect Gateway client library in Node.js. Creates a new instance of the GatewayControlClient.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Imports the Google Cloud client library\n\nconst {GatewayControlClient} = require('@google-cloud/gke-connect-gateway');\n\n// Creates a client\nnew GatewayControlClient();\n\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Projects\nDESCRIPTION: Series of commands for running different types of tests (unit, sample integration, and system tests) for Google Cloud Node.js repositories to ensure code quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-routeoptimization/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Upgrading to Node 18 in Container v6.0.0\nDESCRIPTION: Breaking change upgrading the minimum Node.js version to 18 for the Container client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nupgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Getting a Product Set using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to get a product set using the Google Cloud Vision API. It utilizes the ProductSearch.getProductSet method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.get_product_set.js\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cloud Scheduler Job in Node.js\nDESCRIPTION: This code sample shows how to delete an existing job from Google Cloud Scheduler using Node.js. It requires the google-cloud-scheduler package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-scheduler/samples/generated/v1/cloud_scheduler.delete_job.js\n```\n\n----------------------------------------\n\nTITLE: Executing Cloud Deploy Job Run Retrieval Sample in Node.js\nDESCRIPTION: This command is for executing a Node.js script to retrieve job run details. Prerequisites include Node.js installation and local availability of the required samples. The script outputs job run information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-deploy/samples/generated/v1/cloud_deploy.get_job_run.js\n```\n\n----------------------------------------\n\nTITLE: Listing NFS Shares using Bare Metal Solution API in Node.js\nDESCRIPTION: This snippet demonstrates how to list NFS shares using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_nfs_shares.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cloud Composer Node.js Client\nDESCRIPTION: Command to install the Cloud Composer client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/orchestration-airflow\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Tag Key using Google Cloud Resource Manager API in Node.js\nDESCRIPTION: This snippet illustrates how to set the IAM policy for a tag key using the Google Cloud Resource Manager API v3. It requires the google-cloud-resourcemanager package and is executed using Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-resourcemanager/samples/generated/v3/tag_keys.set_iam_policy.js\n```\n\n----------------------------------------\n\nTITLE: Issue Reference in Markdown\nDESCRIPTION: Markdown link syntax for referencing GitHub issue #6185\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgecontainer/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6185](https://github.com/googleapis/google-cloud-node/issues/6185)\n```\n\n----------------------------------------\n\nTITLE: Executing delete_app_connection Sample Code\nDESCRIPTION: This Node.js script shows how to delete an app connection using the BeyondCorp API. Appropriate setup steps should be completed prior to running this command, including installation of Node.js and the Google Cloud client library. The script deletes a specified app connection and requires authentication details.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnections/samples/generated/v1/app_connections_service.delete_app_connection.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datapolicies/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Using the Solar API Client Library in Node.js\nDESCRIPTION: This snippet demonstrates how to initialize the Solar API client and make a request to find the closest building insights. It includes setting up location parameters and handling the API response.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-solar/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The longitude and latitude from which the API looks for the\n *  nearest known building.\n */\n// const location = {\n//   latitude: 37.7900161,\n//   longitude: -122.3900146,\n// };\n/**\n *  Optional. The minimum quality level allowed in the results. No result with\n *  lower quality than this will be returned. Not specifying this is\n *  equivalent to restricting to HIGH quality only.\n */\n// const requiredQuality = {}\n/**\n *  Optional. Whether to require exact quality of the imagery.\n *  If set to false, the `required_quality` field is interpreted as the minimum\n *  required quality, such that HIGH quality imagery may be returned when\n *  `required_quality` is set to MEDIUM.  If set to true, `required_quality`\n *  is interpreted as the exact required quality and only `MEDIUM` quality\n *  imagery is returned if `required_quality` is set to `MEDIUM`.\n */\n// const exactQualityRequired = true\n\n// Imports the Solar library\nconst {SolarClient} = require('@googlemaps/solar').v1;\n\n// Instantiates a client\nconst solarClient = new SolarClient();\n\nasync function callFindClosestBuildingInsights() {\n  // Construct request\n  const request = {\n    location,\n    requiredQuality,\n    exactQualityRequired,\n  };\n\n  // Run request\n  const response = await solarClient.findClosestBuildingInsights(request);\n  console.log(response);\n}\n\ncallFindClosestBuildingInsights();\n```\n\n----------------------------------------\n\nTITLE: Listing Feeds - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This snippet demonstrates how to list all feeds in the Google Cloud Asset API. It requires Node.js and the Google Cloud SDK. The expected output will be a list of existing feeds.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Code for listing feeds\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Dataplex Client Library\nDESCRIPTION: Command to install the Google Cloud Dataplex client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/dataplex\n```\n\n----------------------------------------\n\nTITLE: Detaching a Service Project Attachment with Google Cloud App Hub API in JavaScript\nDESCRIPTION: This script provides functionality to detach a service project attachment within Google Cloud App Hub using Node.js. Ensure all configurations and permissions are set correctly beforehand.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apphub/samples/generated/v1/app_hub.detach_service_project_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Pinning TypeScript version below 3.7.0\nDESCRIPTION: This snippet describes pinning the TypeScript version below 3.7.0. Pinning dependencies ensures stability and prevents potential issues caused by incompatible changes in newer versions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * **deps:** pin TypeScript below 3.7.0 ([c8d7267](https://www.github.com/googleapis/nodejs-cloudbuild/commit/c8d72671a810750d13d327e78b0eafbd0aeac46f))\n */\n```\n\n----------------------------------------\n\nTITLE: Listing Engine Configs in Financialservices with Node.js\nDESCRIPTION: Demonstrates how to list engine configurations using the Google Cloud Financial Services API with Node.js. This involves running a specific JavaScript file within the google-cloud-node repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-financialservices/samples/generated/v1/a_m_l.list_engine_configs.js`\n```\n\n----------------------------------------\n\nTITLE: Getting a Discovered Service in Google Cloud App Hub - JavaScript\nDESCRIPTION: This snippet illustrates how to fetch details for a discovered service in the Google Cloud App Hub. It requires the service ID as input and outputs detailed information about the service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst getDiscoveredService = async (serviceId) => {\n  const response = await client.getDiscoveredService({\n    id: serviceId,\n  });\n};\n```\n\n----------------------------------------\n\nTITLE: Updating dependency in package.json\nDESCRIPTION: Updates the yargs dependency to version 15 in the package.json file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-videointelligence/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n\"yargs\": \"^15\"\n```\n\n----------------------------------------\n\nTITLE: Getting Backups in Google Cloud Filestore - JavaScript\nDESCRIPTION: This snippet is for retrieving backup information in Google Cloud Filestore using the API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n// Get Backup Example\nconst {CloudFilestoreManagerClient} = require('@google-cloud/filestore');\nconst client = new CloudFilestoreManagerClient();\n\nasync function getBackup(projectId, backupId) {\n  // Implementation for getting a backup\n}\n\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests for Node.js\nDESCRIPTION: This snippet outlines the command to run all system tests for the Node.js project. It ensures that all aspects of the application function correctly together after changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Feature: Update Node.js Generator to Send API Versions in Headers\nDESCRIPTION: This feature updates the Node.js generator to include API versions in the headers for GAPICs. This change allows the server to correctly identify the client version and potentially tailor responses accordingly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudprofiler/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\n[Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n```\n\n----------------------------------------\n\nTITLE: Create Customer using Cloud Controls Partner Core API (v1beta)\nDESCRIPTION: Sample code demonstrating how to create a new customer using the Cloud Controls Partner Core API v1beta endpoint.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-cloudcontrolspartner/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-cloudcontrolspartner/samples/generated/v1beta/cloud_controls_partner_core.create_customer.js\n```\n\n----------------------------------------\n\nTITLE: Listing Stream Objects in Node.js\nDESCRIPTION: This script demonstrates how to list all stream objects using the Google Cloud Datastream API in a Node.js environment. It retrieves these objects and processes them as needed. The code depends on the Datastream client library and requires valid Google Cloud credentials.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n/* Code for Datastream.list_stream_objects.js would be here */\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library via npm\nDESCRIPTION: This snippet demonstrates how to install a legacy version of the Google Cloud Dataflow client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-dataflow/README.md#2025-04-22_snippet_21\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install @google-cloud/dataflow@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Fix: Deps: google-gax v2.17.1 - Node.js\nDESCRIPTION: This code snippet updates the `google-gax` dependency to version 2.17.1. This ensures the library uses the specified version of `google-gax`, including its fixes and features. It depends on the google-gax library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"200ddae856e42b45a10a34d903adc699eb188c7c\"\n```\n\n----------------------------------------\n\nTITLE: Formatting Changelog Version Headers in Markdown\nDESCRIPTION: Demonstrates how version headers are formatted in the changelog using Markdown syntax. Includes version number, compare link, and release date.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [3.0.1](https://github.com/googleapis/google-cloud-node/compare/network-security-v3.0.0...network-security-v3.0.1) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Listing Autonomous Databases with Node.js Client\nDESCRIPTION: Example demonstrating how to use the Oracle Database client to list autonomous databases. Shows initialization of the client and making an async request with pagination support, filtering, and ordering options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * This snippet has been automatically generated and should be regarded as a code template only.\n * It will require modifications to work.\n * It may require correct/in-range values for request initialization.\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The parent value for the Autonomous Database in the following\n *  format: projects/{project}/locations/{location}.\n */\n// const parent = 'abc123'\n/**\n *  Optional. The maximum number of items to return.\n *  If unspecified, at most 50 Autonomous Database will be returned.\n *  The maximum value is 1000; values above 1000 will be coerced to 1000.\n */\n// const pageSize = 1234\n/**\n *  Optional. A token identifying a page of results the server should return.\n */\n// const pageToken = 'abc123'\n/**\n *  Optional. An expression for filtering the results of the request.\n */\n// const filter = 'abc123'\n/**\n *  Optional. An expression for ordering the results of the request.\n */\n// const orderBy = 'abc123'\n\n// Imports the Oracledatabase library\nconst {OracleDatabaseClient} = require('@google-cloud/oracledatabase').v1;\n\n// Instantiates a client\nconst oracledatabaseClient = new OracleDatabaseClient({fallback: true});\n\nasync function callListAutonomousDatabases() {\n  // Construct request\n  const request = {\n    parent,\n  };\n\n  // Run request\n  const iterable = oracledatabaseClient.listAutonomousDatabasesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListAutonomousDatabases();\n```\n\n----------------------------------------\n\nTITLE: Initializing Google Cloud Support Client in Node.js\nDESCRIPTION: Sets up the CaseServiceClient for interacting with the Google Cloud Support API. Demonstrates importing the library and creating a client instance to perform support case operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst {CaseServiceClient} = require('@google-cloud/support').v2;\n\nconst supportClient = new CaseServiceClient();\n```\n\n----------------------------------------\n\nTITLE: Listing Discovered Services in Google Cloud App Hub - JavaScript\nDESCRIPTION: This code snippet retrieves a list of all discovered services in the Google Cloud App Hub. It does not require any parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/README.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst listDiscoveredServices = async () => {\n  const response = await client.listDiscoveredServices();\n};\n```\n\n----------------------------------------\n\nTITLE: Avoiding modification of options object\nDESCRIPTION: This snippet describes a fix to prevent modification of the options object by using defaultScopes.  Avoiding modifications to the original options object maintains data integrity and prevents unexpected side effects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * do not modify options object, use defaultScopes ([#181](https://www.github.com/googleapis/nodejs-cloudbuild/issues/181)) ([c1a8c19](https://www.github.com/googleapis/nodejs-cloudbuild/commit/c1a8c1948441cbc4643692f039c5a4ddbd178162))\n */\n```\n\n----------------------------------------\n\nTITLE: Deleting Instance - Node.js\nDESCRIPTION: This code demonstrates how to delete an instance using the Financial Services API in Node.js. The implementation requires the Google Cloud client library and suitable authentication. It takes the instance identifier as input and logs the confirmation of the deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-financialservices/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// Delete instance\nconst { FinancialServicesClient } = require('@google-cloud/financialservices');\n\nconst client = new FinancialServicesClient();\nasync function deleteInstance() {\n    const request = { /* parameters for deletion */ };\n    const response = await client.deleteInstance(request);\n    console.log(response);\n}\ndeleteInstance();\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.2.0 Changes in Markdown\nDESCRIPTION: Documents the changes in version 0.2.0 of the Oracle Database service, including a new value added to the State enum.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/oracledatabase-v0.1.0...oracledatabase-v0.2.0) (2025-01-11)\n\n\n### Features\n\n* [oracledatabase] A new value `ACCOUNT_SUSPENDED` is added to enum `State` ([#5909](https://github.com/googleapis/google-cloud-node/issues/5909)) ([5e0e4c1](https://github.com/googleapis/google-cloud-node/commit/5e0e4c19f006579e8808e21bcf0154d5e47669f8))\n```\n\n----------------------------------------\n\nTITLE: Fetching Access Policy with Access Context Manager API in Node.js\nDESCRIPTION: This code snippet shows how to retrieve an access policy using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and appropriate authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.get_access_policy.js\n```\n\n----------------------------------------\n\nTITLE: Sample Usage Commands\nDESCRIPTION: Example commands showing how to run different Street View Publish API sample scripts\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.batch_delete_photos.js\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.batch_get_photos.js\nnode packages/google-streetview-publish/samples/generated/v1/street_view_publish_service.batch_update_photos.js\n```\n\n----------------------------------------\n\nTITLE: Commit Hash References\nDESCRIPTION: Git commit hashes referencing changes made to the codebase, including examples of commit IDs used throughout the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nf307d9f9560dc07a8e0c3e36972b1af2519f8aca\n24e220281861c3a1b4e4ee8931c53c478635ec8f\n6c79b81b8957826c264f44b68b972afd80bcbe6d\n```\n\n----------------------------------------\n\nTITLE: Submitting Intent Answer Feedback\nDESCRIPTION: Executes the script to submit feedback for intent answers in a Dialogflow CX session. Requires Node.js and relevant Dialogflow CX credentials. Allows user feedback to improve system responses.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/sessions.submit_answer_feedback.js\n```\n\n----------------------------------------\n\nTITLE: Running VMware Engine Create External Access Rule Sample\nDESCRIPTION: Example command to run the sample code for creating external access rules in VMware Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_external_access_rule.js\n```\n\n----------------------------------------\n\nTITLE: Installing CSS API Client Library - NPM\nDESCRIPTION: Command to install the Google Shopping CSS API client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/css\n```\n\n----------------------------------------\n\nTITLE: Retrieving Quota Adjuster Settings - Google Cloud - JavaScript\nDESCRIPTION: This code snippet retrieves the current quota adjuster settings for a specified Google Cloud project. It demonstrates how to use the Google Cloud API to fetch configuration settings related to service quotas.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Source code for getting quota adjuster settings\n// file: quota_adjuster_settings_manager.get_quota_adjuster_settings.js\n\nconst {QuotasClient} = require('@google-cloud/quotas');\n\nasync function getQuotaAdjusterSettings() {\n  const client = new QuotasClient();\n  const [settings] = await client.getQuotaAdjusterSettings();\n  console.log(settings);\n}\ngetQuotaAdjusterSettings();\n\n```\n\n----------------------------------------\n\nTITLE: Listing Quota Groups with Google Shopping CSS API in Node.js\nDESCRIPTION: This snippet demonstrates how to list quota groups using the Google Shopping CSS API. It requires the google-shopping-css package to be installed and properly configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-css/samples/generated/v1/quota_service.list_quota_groups.js\n```\n\n----------------------------------------\n\nTITLE: Storage Control Command Line Usage\nDESCRIPTION: Command line usage examples for various storage control operations including creating, deleting, getting, listing and renaming folders and managed folders.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storage-control/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-storage-control/samples/generated/v2/storage_control.create_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.create_managed_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.delete_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.delete_managed_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.get_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.get_managed_folder.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.get_storage_layout.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.list_folders.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.list_managed_folders.js\nnode packages/google-storage-control/samples/generated/v2/storage_control.rename_folder.js\nnode packages/google-storage-control/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Company Service Get Company\nDESCRIPTION: Demonstrates how to get a company using the Company Service in Google Cloud Talent API. The sample is written in Javascript and uses Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n\"https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/samples/generated/v4/company_service.get_company.js\"\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center create_source script in Node.js\nDESCRIPTION: Example command to execute the Migration Center create_source sample script. This script demonstrates how to create a source using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.create_source.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Volume Restore using GKE Backup API in Node.js\nDESCRIPTION: Sample code for retrieving a specific volume restore using the GKE Backup API. Used to get detailed information about a persistent volume restore operation in Google Kubernetes Engine.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkebackup/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-gkebackup/samples/generated/v1/backup_for_g_k_e.get_volume_restore.js\n```\n\n----------------------------------------\n\nTITLE: GitHub Issue Reference\nDESCRIPTION: Markdown link referencing a GitHub issue number.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkemulticloud/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6185](https://github.com/googleapis/google-cloud-node/issues/6185)\n```\n\n----------------------------------------\n\nTITLE: Installing the NetApp API Node.js Client Library\nDESCRIPTION: Command to install the NetApp API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/netapp\n```\n\n----------------------------------------\n\nTITLE: Inserting Regional Inventory with Merchant API in Node.js\nDESCRIPTION: This snippet shows how to insert regional inventory using the Regional Inventory Service of the Merchant API. It requires the google-shopping-merchant-inventories package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-shopping-merchant-inventories/samples/generated/v1beta/regional_inventory_service.insert_regional_inventory.js\n```\n\n----------------------------------------\n\nTITLE: Fix: Change import long to require - Node.js\nDESCRIPTION: This code snippet fixes an issue by changing an `import` statement for the `long` library to a `require` statement. This change is often necessary for compatibility reasons, particularly in environments where ES module syntax is not fully supported. The fix ensures proper loading of the `long` library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"e525bd8d1b4ecf281b8b3d6145f5183384dacc3f\"\n```\n\n----------------------------------------\n\nTITLE: NPM Package Link Reference\nDESCRIPTION: Markdown link reference for the NPM package version history\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[1]: https://www.npmjs.com/package/@google-cloud/resource-manager?activeTab=versions\n```\n\n----------------------------------------\n\nTITLE: Loading a Version in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to load a specific version of a Dialogflow CX agent. It uses the versions.load_version method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/versions.load_version.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Security Settings in Dialogflow CX using Node.js\nDESCRIPTION: This script deletes the specified security settings from Dialogflow CX using the Node.js client library. Requires valid authentication and security settings ID. The operation result is logged upon execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_131\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/security_settings_service.delete_security_settings.js\n```\n\n----------------------------------------\n\nTITLE: Installing IAM Policy Troubleshooter Client Library\nDESCRIPTION: Command to install the Google Cloud Policy Troubleshooter client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/policy-troubleshooter\n```\n\n----------------------------------------\n\nTITLE: Listing Dependencies with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet shows how to list dependencies using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_dependencies.list_dependencies.js\n```\n\n----------------------------------------\n\nTITLE: Listing Support Cases with Filtering and Pagination\nDESCRIPTION: Demonstrates how to use the listCasesAsync method to retrieve support cases with optional filtering by state, priority, and creator. Supports pagination and advanced filtering options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-support/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function callListCases() {\n  const request = {\n    parent,\n    filter,\n    pageSize,\n    pageToken\n  };\n\n  const iterable = await supportClient.listCasesAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListCases();\n```\n\n----------------------------------------\n\nTITLE: Installing the Certificate Manager Client Library with npm\nDESCRIPTION: Command to install the Google Cloud Certificate Manager client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-certificatemanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/certificate-manager\n```\n\n----------------------------------------\n\nTITLE: BackupDR getBackup Sample\nDESCRIPTION: This sample demonstrates how to get a backup using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Migration Center get_group script in Node.js\nDESCRIPTION: Example command to execute the Migration Center get_group sample script. This script demonstrates how to retrieve information about a group using the Migration Center API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-migrationcenter/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nnode packages/google-cloud-migrationcenter/samples/generated/v1/migration_center.get_group.js\n```\n\n----------------------------------------\n\nTITLE: Listing Tables\nDESCRIPTION: Example showing how to list all tables in an Area120 workspace\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-area120-tables/samples/generated/v1alpha1/tables_service.list_tables.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR getBackupVault Sample\nDESCRIPTION: This sample demonstrates how to get a backup vault using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Load JSON Protos Using require() in Node.js\nDESCRIPTION: This commit modifies the Google Cloud IoT Node.js library to load JSON protos using the require() function. This change likely aims to improve compatibility or resolve issues related to how the protobuf definitions are loaded and used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"* use require() to load JSON protos ([#472](https://www.github.com/googleapis/nodejs-iot/issues/472)) ([d963cf7](https://www.github.com/googleapis/nodejs-iot/commit/d963cf709052a7236a80cf1c0c9fbbaffd311aad))\"\n```\n\n----------------------------------------\n\nTITLE: Essential Contacts Service: List Contacts\nDESCRIPTION: Sample code for listing contacts in the Essential Contacts API using Node.js. Demonstrates how to retrieve a collection of contacts through the Essential Contacts Service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-essentialcontacts/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nnode packages/google-cloud-essentialcontacts/samples/generated/v1/essential_contacts_service.list_contacts.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: Command to install the required dependencies for the Google Cloud Node.js library development environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Commit Reference Format\nDESCRIPTION: Standard format for referencing commit hashes and pull request numbers in changelog entries\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n([c9adc61](https://github.com/googleapis/google-cloud-node/commit/c9adc6150ad09630854554c2ed7e558fb3e04315))\n```\n\n----------------------------------------\n\nTITLE: Batch Updating Dialogflow Intents in Node.js\nDESCRIPTION: Demonstrates how to execute a JavaScript command for batch updating Dialogflow intents via Node.js. This example requires the setup of the Google Cloud Node.js client library and Node.js environment to perform the batch update operation on intents.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"node packages/google-cloud-dialogflow/samples/generated/v2/intents.batch_update_intents.js\"\n```\n\n----------------------------------------\n\nTITLE: Git Issue References\nDESCRIPTION: References to GitHub issues and pull requests used in commit messages\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6185](https://github.com/googleapis/google-cloud-node/issues/6185)\n[#6096](https://github.com/googleapis/google-cloud-node/issues/6096)\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library\nDESCRIPTION: Command to install Google Cloud Memcache client library for legacy Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memcache/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/memcache@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Deleting Datastream Connection Profile in Node.js\nDESCRIPTION: This snippet demonstrates how to delete a connection profile in Google Cloud Datastream using Node.js, removing the profile and its settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.delete_connection_profile.js\n```\n\n----------------------------------------\n\nTITLE: Fetching Usable Backup Vaults with BackupDR in Node.js\nDESCRIPTION: This snippet demonstrates how to fetch usable backup vaults using the BackupDR service in Node.js. It utilizes the google-cloud-node library and shows the command-line usage for executing the sample.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.fetch_usable_backup_vaults.js`\n```\n\n----------------------------------------\n\nTITLE: Adding Search Ads 360 Link Methods in JavaScript\nDESCRIPTION: Adds new methods for getting, listing, creating, deleting, and updating Search Ads 360 links in the Admin API v1alpha.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd `GetSearchAds360Link`, `ListSearchAds360Links`, `CreateSearchAds360Link`, `DeleteSearchAds360Link`, `UpdateSearchAds360Link` methods to the Admin API v1alpha\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Reference Example\nDESCRIPTION: Git commit hash reference for version changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privatecatalog/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\nb33692d64bd42b99f37d0f919f2b0c06a673ab7f\n```\n\n----------------------------------------\n\nTITLE: Updating Dependency with Google Cloud API Hub in Node.js\nDESCRIPTION: This snippet illustrates how to update a dependency using the Google Cloud API Hub client library for Node.js. It requires the google-cloud-apihub package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub_dependencies.update_dependency.js\n```\n\n----------------------------------------\n\nTITLE: API Error Message for Rate Limit Exceeded\nDESCRIPTION: Example error message shown when hitting Google Cloud API rate limits. The error instructs users to retry the request after a delay.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/docs/troubleshooting.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nApiError: The service was unable to fulfill your request. Please try again.\n```\n\n----------------------------------------\n\nTITLE: Merchant API Quickstart Guide\nDESCRIPTION: Basic quickstart sample demonstrating initial setup and usage of the Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nnode packages/google-shopping-merchant-lfp/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for Google Cloud Node.js Library\nDESCRIPTION: Command to run unit tests for the Google Cloud Node.js library. This verifies that individual components work as expected without external dependencies.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Creating a Feed - Google Cloud Asset Service - JavaScript\nDESCRIPTION: This snippet illustrates how to create a feed in the Google Cloud Asset API. The implementation requires Node.js and the Google Cloud SDK. Outputs will confirm successful feed creation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst { AssetServiceClient } = require('@google-cloud/asset');\nconst client = new AssetServiceClient();\n// Feed creation functionality\n```\n\n----------------------------------------\n\nTITLE: Version Tag Linking in Changelog\nDESCRIPTION: Git commit and tag linking format used in the changelog to reference different versions and changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apigateway/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[4.1.0](https://github.com/googleapis/google-cloud-node/compare/api-gateway-v4.0.0...api-gateway-v4.1.0)\n```\n\n----------------------------------------\n\nTITLE: Replacing Taxonomy with Google Cloud Data Catalog in Node.js\nDESCRIPTION: This snippet illustrates how to replace a taxonomy using the Google Cloud Data Catalog API. It requires the google-cloud-datacatalog package and proper authentication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/policy_tag_manager_serialization.replace_taxonomy.js\n```\n\n----------------------------------------\n\nTITLE: Version 4.7.0 Release\nDESCRIPTION: Added a new SetConfig method to the DataCatalog service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## [4.7.0](https://github.com/googleapis/google-cloud-node/compare/datacatalog-v4.6.0...datacatalog-v4.7.0) (2024-11-21)\n\n\n### Features\n\n* [datacatalog] A new method `SetConfig` is added to service `DataCatalog` ([#5830](https://github.com/googleapis/google-cloud-node/issues/5830)) ([65a557c](https://github.com/googleapis/google-cloud-node/commit/65a557c7722e603c0ffea2d42d8bc176b3467ddb))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Client\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: BackupDR deleteBackupPlanAssociation Sample\nDESCRIPTION: This sample demonstrates how to delete a backup plan association using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Environment Check Upgrade Sample\nDESCRIPTION: Example command for running the environments.check_upgrade sample to check if a Cloud Composer environment can be upgraded.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1/environments.check_upgrade.js\n```\n\n----------------------------------------\n\nTITLE: Network Management Version 4.0.1 Updates\nDESCRIPTION: Bug fix for handling promises and listOperationsAsync return type\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6186](https://github.com/googleapis/google-cloud-node/issues/6186)) ([dcfc7b4](https://github.com/googleapis/google-cloud-node/commit/dcfc7b492a2ac3fb86b93ae1375bac1c5153d049))\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.1.0 Changes in Markdown\nDESCRIPTION: Documents the initial release (version 0.1.0) of the Oracle Database service, including features for sending API versions in headers for GAPICs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n## 0.1.0 (2024-10-10)\n\n\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n* Add initial files for google.cloud.oracledatabase.v1 ([#5727](https://github.com/googleapis/google-cloud-node/issues/5727)) ([73973c4](https://github.com/googleapis/google-cloud-node/commit/73973c441885b512790a6a4f6c9a37a09ca8e60c))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It downloads and installs all packages listed in the project's package.json file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting a Management Server with BackupDR in Node.js\nDESCRIPTION: This snippet illustrates how to retrieve a management server using the BackupDR service in Node.js. It provides the command-line usage for running the sample with the google-cloud-node library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.get_management_server.js`\n```\n\n----------------------------------------\n\nTITLE: Updating Server TLS Policy with Google Cloud Network Security API in JavaScript\nDESCRIPTION: This snippet demonstrates how to update a server TLS policy using the Google Cloud Network Security API. It uses the update_server_tls_policy method of the Network_security client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-networksecurity/samples/generated/v1beta1/network_security.update_server_tls_policy.js\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Tests\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing reCAPTCHA Enterprise Client Library with NPM\nDESCRIPTION: Command to install the Google Cloud reCAPTCHA Enterprise client library via NPM package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recaptchaenterprise/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/recaptcha-enterprise\n```\n\n----------------------------------------\n\nTITLE: BackupDR createBackupPlan Sample\nDESCRIPTION: This sample demonstrates how to create a backup plan using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Updating Version Number in Markdown\nDESCRIPTION: Markdown syntax for updating the version number and comparing to previous version in the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/data-qna-v4.0.0...data-qna-v4.0.1) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Version Headers with Links and Version Numbers\nDESCRIPTION: Markdown headers showing version numbers with links to GitHub comparisons between versions\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.1.0](https://github.com/googleapis/google-cloud-node/compare/alloydb-v2.0.0...alloydb-v2.1.0) (2025-03-19)\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js library project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests with npm\nDESCRIPTION: This command executes the unit tests defined in the project. The `npm test` command typically runs a script defined in the `package.json` file, which in turn invokes a testing framework (e.g., Mocha, Jest) to execute the tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet outlines the command used to install dependencies for the Node.js project. It is essential for preparing the environment before running any tests or contributing code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-clientconnectorservices/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding VM Labels Methods in Node.js Compute Client\nDESCRIPTION: New methods VM.getLabels() and VM.setLabels() have been added to get and set labels on VM instances.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nVM.getLabels()\nVM.setLabels()\n```\n\n----------------------------------------\n\nTITLE: Installing Maps Platform Datasets API Client Library for Node.js\nDESCRIPTION: This command installs the Maps Platform Datasets API client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-mapsplatformdatasets/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/maps-platform-datasets\n```\n\n----------------------------------------\n\nTITLE: Version History and Changes\nDESCRIPTION: A markdown formatted changelog tracking version releases from v4.0.0 to v7.0.1, documenting breaking changes, features, bug fixes and other updates to the Google Cloud Recommender Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [7.0.1](https://github.com/googleapis/google-cloud-node/compare/recommender-v7.0.0...recommender-v7.0.1) (2025-03-21)\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187](https://github.com/googleapis/google-cloud-node/issues/6187)) ([b33692d](https://github.com/googleapis/google-cloud-node/commit/b33692d64bd42b99f37d0f919f2b0c06a673ab7f))\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites for Google Cloud Node.js Project\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reports/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: Install necessary dependencies for the Node.js environment using npm. Ensure all packages required for development and testing are installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc-publishing/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-alloydb/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Getting Page Dialogflow CX with Node.js\nDESCRIPTION: This snippet retrieves a page using the Dialogflow CX API with Node.js.  It relies on the `@google-cloud/dialogflow-cx` package.  The script runs from the command line.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow-cx/samples/generated/v3/pages.get_page.js`\n```\n\n----------------------------------------\n\nTITLE: Documenting Miscellaneous Changes in Markdown\nDESCRIPTION: This snippet shows how miscellaneous changes or chores are documented in the changelog. It includes a brief description of the change and links to related issues and commits.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Running All System Tests - Node.js\nDESCRIPTION: This snippet provides the command to run all system tests for the library, which is performed using 'npm run system-test'. This ensures that all parts of the system are functioning correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run linting checks and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Removing eslint, updating gax, fixing generated protos\nDESCRIPTION: This snippet addresses removing eslint, updating gax, and fixing generated protos. These changes enhance code quality, modernize dependencies, and resolve issues related to generated protocol buffer files.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * remove eslint, update gax, fix generated protos, run the generator ([#100](https://www.github.com/googleapis/nodejs-cloudbuild/issues/100)) ([aafb9cc](https://www.github.com/googleapis/nodejs-cloudbuild/commit/aafb9cc7745b4d5d6dce58f17763f76379af733f))\n */\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command installs the necessary dependencies for the Node.js project using npm, the Node.js package manager. It reads the package.json file and downloads the listed modules into the node_modules directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry with Issue Link in Markdown\nDESCRIPTION: This snippet demonstrates how a changelog entry is formatted, including a description of the change, a link to the related GitHub issue, and a commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-quota/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6191](https://github.com/googleapis/google-cloud-node/issues/6191)) ([c9adc61](https://github.com/googleapis/google-cloud-node/commit/c9adc6150ad09630854554c2ed7e558fb3e04315))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-servicecontrol/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Restoring Crypto Key Version in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample demonstrates how to restore a crypto key version using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.restore_crypto_key_version.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run linting on code and automatically fix issues where possible in a Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-confidentialcomputing/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Fixing Bug with Long Type Support\nDESCRIPTION: Fix to allow enum, bytes, and Long types to accept string values for improved type compatibility.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_31\n\nLANGUAGE: TypeScript\nCODE:\n```\nenum.accept('string');\nbytes.accept('string');\nLong.accept('string');\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests with npm\nDESCRIPTION: This command executes sample integration tests for the Node.js project using npm. It executes the script named \"samples-test\" defined in the package.json file, which contains the commands to run the integration tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"# Run sample integration tests.\\n        npm run samples-test\"\n```\n\n----------------------------------------\n\nTITLE: Version Comparison Link Format\nDESCRIPTION: Markdown link format used to compare different versions of the domains package\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[4.0.1](https://github.com/googleapis/google-cloud-node/compare/domains-v4.0.0...domains-v4.0.1)\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which checks and potentially fixes code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-reports/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes in Changelog\nDESCRIPTION: Breaking change notifications in the changelog\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Retrieving Tag Template with Node.js\nDESCRIPTION: This JavaScript script retrieves a specified tag template from Google Cloud Data Catalog. Utilizing the `@google-cloud/datacatalog` package, it is executed via the command line, essential for accessing and managing tag templates.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1/data_catalog.get_tag_template.js\n```\n\n----------------------------------------\n\nTITLE: Version Numbers and Git Commit References\nDESCRIPTION: Git commit hashes and version compare links used throughout the changelog for reference\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkeconnect-gateway/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[5.0.1](https://github.com/googleapis/google-cloud-node/compare/gke-connect-gateway-v5.0.0...gke-connect-gateway-v5.0.1)\n[ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906]\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm for Node.js\nDESCRIPTION: Install the necessary dependencies for the Node.js project using npm before running tests or making changes. This command must be executed in the project directory. Ensure that npm is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating google-gax dependency in Node.js\nDESCRIPTION: This commit updates the google-gax dependency to version 2.24.1 for the Storage Transfer Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* **deps:** google-gax v2.24.1 ([#7](https://www.github.com/googleapis/nodejs-storage-transfer/issues/7)) ([e52a0be](https://www.github.com/googleapis/nodejs-storage-transfer/commit/e52a0befc6497c68ea5401e35f3c1c7de0402941))\n```\n\n----------------------------------------\n\nTITLE: Running Code Linter\nDESCRIPTION: Command to run the code linter which can automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing LUNs in Google Cloud Bare Metal Solution - JavaScript\nDESCRIPTION: This snippet lists all logical unit numbers (LUNs) available in the bare metal solution environment. Execution requires Node.js.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code available at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_luns.js\n\n// Usage: node packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_luns.js\n```\n\n----------------------------------------\n\nTITLE: Migrate Build to main Branch in Node.js\nDESCRIPTION: Migrates the build process to the main branch in the Google Cloud IoT Node.js library repository. This change likely affects the CI/CD pipeline and potentially impacts how the library is built and released.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **build:** migrate to main branch ([#512](https://www.github.com/googleapis/nodejs-iot/issues/512)) ([8528684](https://www.github.com/googleapis/nodejs-iot/commit/852868454982502c0a1ab0d2fa09f14bcfe5ff13))\"\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project. They include unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-phishingprotection/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Getting Managed Kafka Connector in Node.js\nDESCRIPTION: This snippet illustrates how to get information about a connector in a Managed Kafka Connect cluster using the Google Cloud Node.js client library. It requires the google-cloud-managedkafka package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedkafka/samples/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-managedkafka/samples/generated/v1/managed_kafka_connect.get_connector.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run various types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-lfp/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Auto-fixing Code for Google Cloud Node.js Library\nDESCRIPTION: Command to run the linter which checks code style and potentially fixes common issues automatically. This ensures code quality and consistency across the codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-edgenetwork/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster - JavaScript\nDESCRIPTION: This snippet demonstrates how to create a cluster using the Cluster Manager API. It requires the Google Cloud Node.js client library and proper configuration of request parameters.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-container/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst {ClusterManagerClient} = require('@google-cloud/container');\nconst client = new ClusterManagerClient();\n\nasync function createCluster(clusterParams) {\n  const response = await client.createCluster(clusterParams);\n  console.log(`Cluster created: ${response}`);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Network Management API Samples Overview\nDESCRIPTION: Directory of code samples for Google Cloud Network Management API, including connectivity testing and VPC flow logs configuration. Samples demonstrate both v1 and v1beta1 API versions with various operations like create, delete, get, list, rerun, and update operations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/README.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n1. Reachability Service (v1 & v1beta1):\n- Create connectivity test\n- Delete connectivity test\n- Get connectivity test\n- List connectivity tests\n- Rerun connectivity test\n- Update connectivity test\n\n2. VPC Flow Logs Service (v1):\n- Create VPC flow logs config\n- Delete VPC flow logs config\n- Get VPC flow logs config\n- List VPC flow logs configs\n- Update VPC flow logs config\n```\n\n----------------------------------------\n\nTITLE: Running Linter\nDESCRIPTION: Command to run the code linter which may also fix some issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing New Features in Markdown\nDESCRIPTION: This snippet demonstrates how new features are documented in the changelog using Markdown. It includes a brief description and the commit hash.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([afcb5c0](https://github.com/googleapis/google-cloud-node/commit/afcb5c07e82bc8349b9677766cd880f69a97f77f))\n```\n\n----------------------------------------\n\nTITLE: Getting Asset Feed using Asset Service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve an asset feed using the Google Cloud Asset Service in a Node.js environment. It provides the command to execute the sample, assuming the necessary Google Cloud Asset package is installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-asset/samples/generated/v1/asset_service.get_feed.js`\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-products/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Style in Google Cloud Node.js Project\nDESCRIPTION: Command to lint and automatically fix code style issues in the Google Cloud Node.js project, ensuring code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oslogin/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Deleting Conversation Profile in Dialogflow v2\nDESCRIPTION: Demonstrates how to delete a conversation profile in Dialogflow v2 using the google-cloud-node library. The code snippet is executed using Node.js and removes an existing conversation profile.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-dialogflow/samples/generated/v2/conversation_profiles.delete_conversation_profile.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js Setup\nDESCRIPTION: This snippet describes the command used to install the necessary dependencies for the Node.js environment setup. It is an essential step before running tests or developing new features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fix: Make request optional in all cases - Node.js\nDESCRIPTION: This code snippet modifies the library to make the `request` parameter optional in all cases. This provides more flexibility in how the API is called. It involves changes to API parameter handling.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"256f21bada718586549f07327be2509c79da3912\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Transition Route Group in Dialogflow CX using Node.js\nDESCRIPTION: This sample demonstrates how to delete a transition route group from a Dialogflow CX agent. It requires the google-cloud-dialogflow-cx package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_139\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/transition_route_groups.delete_transition_route_group.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Deleting Aspect Type in Google Cloud Dataplex - JavaScript\nDESCRIPTION: This snippet illustrates how to delete an aspect type from the Dataplex catalog service. It requires the Google Cloud client library for installation and execution.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/README.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// source code for deleting an aspect type\n\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js 8 Client Library with npm\nDESCRIPTION: Example command to install client libraries compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/lineage@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Listing Conversations in Dialogflow (JavaScript)\nDESCRIPTION: This code sample illustrates how to list conversations using the Dialogflow API. It utilizes the list_conversations method of the conversations service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow/samples/generated/v2/conversations.list_conversations.js\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter and potentially fixes any linting issues in the Google Cloud Node.js project codebase.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required npm dependencies for the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Quickstart for Google App Engine - Node.js\nDESCRIPTION: This snippet serves as a quickstart guide for setting up a Google App Engine application and showcasing basic functionalities. It is a foundational example for new users of the platform.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/samples/README.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Source code for quickstart\n// File: quickstart.js\n\nconsole.log('Quickstart example for Google App Engine');\n```\n\n----------------------------------------\n\nTITLE: Running Node.js sample integration tests with npm\nDESCRIPTION: This command executes the sample integration tests for the project using npm. It runs the script defined under the `samples-test` key in the `package.json` file, which validates the integration of samples with the core library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-domains/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Deleting a Private Connection with Datastream API in Node.js\nDESCRIPTION: This sample shows how to delete a private connection using the Datastream API. It requires proper setup of Google Cloud authentication and the Datastream client library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/README.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datastream/samples/generated/v1/datastream.delete_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run unit tests, sample integration tests, and system tests for the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Libraries\nDESCRIPTION: Command to install all required dependencies for the Google Cloud Node.js libraries project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-billing-budgets/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Deleting Datastream Private Connection in Node.js\nDESCRIPTION: This code snippet shows how to delete a private connection in Google Cloud Datastream using Node.js, ensuring proper cleanup and resource management.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// source code\n// Located at: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/samples/generated/v1/datastream.delete_private_connection.js\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.4.0 Changes in Markdown\nDESCRIPTION: Documents the changes in version 0.4.0 of the Oracle Database service, including a new enum value for the State enum.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.4.0](https://github.com/googleapis/google-cloud-node/compare/oracledatabase-v0.3.0...oracledatabase-v0.4.0) (2025-03-19)\n\n\n### Features\n\n* [oracledatabase] add enum value `State::NOT_APPROVED_IN_PRIVATE_MARKETPLACE` ([#6162](https://github.com/googleapis/google-cloud-node/issues/6162)) ([336ec31](https://github.com/googleapis/google-cloud-node/commit/336ec3119f2c1964b3d43ed23fba880ab4658b20))\n```\n\n----------------------------------------\n\nTITLE: Linting and fixing Node.js code with npm\nDESCRIPTION: This snippet demonstrates how to lint and automatically fix code style issues in a Node.js project using npm.  The command `npm run fix` executes the linting and fixing scripts defined in the `package.json` file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n\"npm run fix\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Interactive Serial Console - Google Cloud Node.js\nDESCRIPTION: This snippet shows how to disable the interactive serial console for an instance in the Google Cloud Bare Metal Solution using Node.js. Proper configurations and permissions are required to run this code successfully.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/README.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { BareMetalSolutionClient } = require('@google-cloud/baremetalsolution');\n\nconst client = new BareMetalSolutionClient();\nasync function disableInteractiveSerialConsole() {\n  const request = {\n    name: 'projects/YOUR_PROJECT/locations/YOUR_LOCATION/instances/YOUR_INSTANCE_ID',\n  };\n  const [operation] = await client.disableInteractiveSerialConsole(request);\n  await operation.promise();\n  console.log('Interactive Serial Console disabled.');\n}\ndisableInteractiveSerialConsole();\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests\nDESCRIPTION: This snippet provides the command to run sample integration tests in the Google Cloud Node.js library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apphub/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Listing Service Usage Example\nDESCRIPTION: Sample code demonstrating how to list service usage in Google Cloud, referenced in issue #2\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-serviceusage/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Note: No actual code snippet provided in the changelog text, only reference to sample code in issue #2\n```\n\n----------------------------------------\n\nTITLE: Running Tests in Node.js\nDESCRIPTION: These commands execute various test suites for the Node.js project: unit tests, sample integration tests, and system tests. Ensure all dependencies are installed and the testing framework is configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-lifesciences/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\\nnpm test\n```\n\nLANGUAGE: shell\nCODE:\n```\n# Run sample integration tests.\\nnpm run samples-test\n```\n\nLANGUAGE: shell\nCODE:\n```\n# Run all system tests.\\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Utility Flag Options\nDESCRIPTION: Various utility commands showing how to enable verbose output, debug mode, and disable ANSI colors/emojis.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/typeless-sample-bot/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# turn on verbose output\ntypeless-sample-bot --verbose\n\n# turn on full debug output\ntypeless-sample-bot --debug\n\n# turn off ANSI colour/emojis\ntypeless-sample-bot --no-art\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Bump Release Level to GA in Node.js\nDESCRIPTION: Increases the release level of the Google Cloud IoT Node.js library to General Availability (GA). This indicates that the library is considered stable and ready for production use.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n\"* bump release level to GA ([#257](https://www.github.com/googleapis/nodejs-iot/issues/257)) ([aeb5ff6](https://www.github.com/googleapis/nodejs-iot/commit/aeb5ff6f0e9dc01f68c41d7cf7eeda770ee4d35e))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Node.js Client Library with npm\nDESCRIPTION: Example command for installing a legacy version of the Google Cloud Org Policy client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orgpolicy/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/org-policy@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Updating IPProtocol Enum in Node.js Compute Client\nDESCRIPTION: The IPProtocol enum has been renamed to IPProtocolEnum as part of a code refactoring change.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nIPProtocol enum has been renamed to IPProtocolEnum\n```\n\n----------------------------------------\n\nTITLE: Quickstart Guide for Datacatalog Lineage API\nDESCRIPTION: Basic quickstart sample demonstrating initial setup and usage of the Google Cloud Datacatalog Lineage API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-datacatalog-lineage/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: BackupDR fetchAccessToken Sample\nDESCRIPTION: This sample demonstrates how to fetch an access token using the Google Cloud Backup and DR service with Node.js. It requires the `@google-cloud/backupdr` package and assumes you have the necessary credentials configured.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/README.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Library\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js library. They include unit tests, sample integration tests, and system tests. Each command should be run in the project's root directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-inventories/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: Commands to run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing API Hub Client Library for Legacy Node.js Versions\nDESCRIPTION: This command demonstrates how to install the API Hub client library for legacy versions of Node.js using npm dist-tags. The example shows installation for Node.js 8 compatibility.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/apihub@legacy-8\n```\n\n----------------------------------------\n\nTITLE: Adding Fields for Database Encryption State Management\nDESCRIPTION: This code snippet shows a feature update where several fields are added to manage the state of database encryption updates across multiple APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [Many APIs] add several fields to manage state of database encryption update ([#5191](https://github.com/googleapis/google-cloud-node/issues/5191)) ([57567db](https://github.com/googleapis/google-cloud-node/commit/57567db36033ca53ae2f54e6517b8cd12145bb82))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter which can automatically fix code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-conversions/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code Issues\nDESCRIPTION: This command is used to lint the code in the Node.js project and automatically fix issues where possible. It ensures that code changes adhere to the required style and quality standards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataqna/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Shopping Merchant Accounts Client Library with npm\nDESCRIPTION: Command to install the Google Shopping Merchant Accounts client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-shopping/accounts\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-commerce-consumer-procurement/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Git Compare URL Version 5.5.0\nDESCRIPTION: GitHub URL comparing grafeas versions 5.4.0 to 5.5.0\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[5.5.0](https://github.com/googleapis/google-cloud-node/compare/grafeas-v5.4.0...grafeas-v5.5.0)\n```\n\n----------------------------------------\n\nTITLE: Adding start Parameter to getSerialPortOutput in Node.js Compute Client\nDESCRIPTION: A new 'start' parameter has been added to the options for the getSerialPortOutput method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-compute/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\ngetSerialPortOutput(options)\n```\n\n----------------------------------------\n\nTITLE: Remove Data Source in Google Cloud Backup and DR using JavaScript\nDESCRIPTION: This snippet demonstrates how to remove a data source from Google Cloud Backup and DR using Node.js. It depends on the `@google-cloud/backupdr` package. The script should be run using Node.js and outputs the result of the data removal operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/samples/README.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-backupdr/samples/generated/v1/backup_d_r.remove_data_source.js\n```\n\n----------------------------------------\n\nTITLE: Installing Datastream Node.js Client Library\nDESCRIPTION: Command to install the Datastream client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/datastream\n```\n\n----------------------------------------\n\nTITLE: Running VMware Engine Create Cluster Sample\nDESCRIPTION: Example command to run the create cluster sample code which demonstrates creating a new VMware Engine cluster.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmwareengine/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmwareengine/samples/generated/v1/vmware_engine.create_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js\nDESCRIPTION: Command to install all necessary Node.js dependencies for the project. This must be run before testing or development work.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam-credentials/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Export Explicit Version from Protos.js in Node.js\nDESCRIPTION: This commit adds the explicit export of the version from the protos.js file in the Google Cloud IoT Node.js library. This makes the version information readily accessible for other parts of the application or for debugging purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n\"* export explicit version from protos.js ([#302](https://www.github.com/googleapis/nodejs-iot/issues/302)) ([8c8acba](https://www.github.com/googleapis/nodejs-iot/commit/8c8acba58f2670139863849cb86e3d8fe9fc7af7))\"\n```\n\n----------------------------------------\n\nTITLE: Listing Volume Snapshots using Bare Metal Solution API in Node.js\nDESCRIPTION: This code demonstrates how to list volume snapshots using the Google Cloud Bare Metal Solution API. It requires the google-cloud-baremetalsolution package and is executed as a Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-baremetalsolution/samples/README.md#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-baremetalsolution/samples/generated/v2/bare_metal_solution.list_volume_snapshots.js\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud KMS Node.js Client\nDESCRIPTION: Command line instruction to install the @google-cloud/kms npm package for Google Cloud Key Management Service client library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/kms\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Library\nDESCRIPTION: Command to run the linter that checks for code style issues and potentially fixes them automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Change Category Format\nDESCRIPTION: Standard format for categorizing changes with ### headers like Bug Fixes, Features, Breaking Changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6191](https://github.com/googleapis/google-cloud-node/issues/6191))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Node.js\nDESCRIPTION: This snippet provides the command to install the required dependencies for the Node.js application using npm. It's essential to run this command in the terminal before executing any tests or running the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-backupdr/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Replacing snippets in jsdoc comments\nDESCRIPTION: This snippet addresses the correct replacement of snippets within jsdoc comments. Correct jsdoc ensures accurate and up-to-date API documentation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * **docs:** snippets are now replaced in jsdoc comments ([#21](https://www.github.com/googleapis/nodejs-cloudbuild/issues/21)) ([b6bf159](https://www.github.com/googleapis/nodejs-cloudbuild/commit/b6bf159e7d3799121b58fe8b290181c16b6aa894))\n */\n```\n\n----------------------------------------\n\nTITLE: Fix: Use google-gax v3.3.0 - Node.js\nDESCRIPTION: This code snippet is a fix that updates the version of the `google-gax` dependency to v3.3.0. This ensures compatibility and access to the latest features and bug fixes in the underlying `google-gax` library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"655571f6322adc6fd75fc05b694eddc52b7eccbe\"\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Changelog for Developer Connect Library in Markdown\nDESCRIPTION: This snippet shows the changelog entries for the Developer Connect library, documenting version updates, bug fixes, and new features. It includes commit hashes, issue references, and descriptions of changes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-developerconnect/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Changelog\n\n## [0.3.1](https://github.com/googleapis/google-cloud-node/compare/developerconnect-v0.3.0...developerconnect-v0.3.1) (2025-03-21)\n\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6185](https://github.com/googleapis/google-cloud-node/issues/6185)) ([ab30412](https://github.com/googleapis/google-cloud-node/commit/ab304122e3e825c9a76af7d6b0ef4ddc9aa6e906))\n\n## [0.3.0](https://github.com/googleapis/google-cloud-node/compare/developerconnect-v0.2.0...developerconnect-v0.3.0) (2025-03-18)\n\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* [Many APIs] add request/response debug logging to gapics ([afcb5c0](https://github.com/googleapis/google-cloud-node/commit/afcb5c07e82bc8349b9677766cd880f69a97f77f))\n\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n\n## [0.2.0](https://github.com/googleapis/google-cloud-node/compare/developerconnect-v0.1.0...developerconnect-v0.2.0) (2024-11-21)\n\n\n### Features\n\n* [developerconnect] A new resource_definition `servicedirectory.googleapis.com/Service` is added ([#5820](https://github.com/googleapis/google-cloud-node/issues/5820)) ([b80a7b7](https://github.com/googleapis/google-cloud-node/commit/b80a7b7e6f97d9a07110adb27dcad28f0b5de341))\n\n## 0.1.0 (2024-06-12)\n\n\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n* Add initial files for google.cloud.developerconnect.v1 ([#5397](https://github.com/googleapis/google-cloud-node/issues/5397)) ([724f42c](https://github.com/googleapis/google-cloud-node/commit/724f42c129e09a79dd0be0c87578ed0507fa19b5))\n```\n\n----------------------------------------\n\nTITLE: Adding Cleaner Utility for Orphaned Resources in Node.js AI Platform\nDESCRIPTION: Introduces a new cleaner utility for handling orphaned resources in the Google Cloud AI Platform Node.js client library. This feature is part of version 1.1.0 or later.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-aiplatform/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* adds cleaner utility for orphaned resources ([#34](https://www.github.com/googleapis/nodejs-ai-platform/issues/34)) ([7c09258](https://www.github.com/googleapis/nodejs-ai-platform/commit/7c09258eb99d9c40ba7bf28b6d84434d6bb8a5b9))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code in Google Cloud Node.js Projects\nDESCRIPTION: Command to run the linter which identifies and potentially fixes code style issues. This helps ensure code adheres to the project's style guidelines.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs all necessary dependencies for the Google Cloud Node.js project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests in Node.js\nDESCRIPTION: This snippet details the command to execute unit tests, ensuring that code changes are functionally correct.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-asset/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running System Tests with npm\nDESCRIPTION: This command executes the system tests defined in the project using npm.  System tests are end-to-end tests that verify the entire system's functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnections/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project. It should be run in the project root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-clouddms/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Google GAX Dependency in Node.js\nDESCRIPTION: Updates the google-gax dependency to version ^3.5.8 to address potential bugs or compatibility issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"**deps:** Bump `google-gax` to ^3.5.8\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Client Library\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-deploy/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Installing the Privileged Access Manager Client Library in Node.js\nDESCRIPTION: This bash command installs the Privileged Access Manager client library for Node.js, allowing interactions with the Google Cloud Privileged Access Manager API. This step is a prerequisite for using the client library in Node.js applications.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-privilegedaccessmanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/privilegedaccessmanager\n```\n\n----------------------------------------\n\nTITLE: Fixing typo in nodejs .gitattribute\nDESCRIPTION: This snippet describes a fix for a typo found in the nodejs .gitattribute file. Fixing typos in configuration files is essential to ensure proper version control and project settings.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * typeo in nodejs .gitattribute ([#132](https://www.github.com/googleapis/nodejs-cloudbuild/issues/132)) ([80b5bd9](https://www.github.com/googleapis/nodejs-cloudbuild/commit/80b5bd963aa43e5a47da9e6d0e2ffbf0cde7feef))\n */\n```\n\n----------------------------------------\n\nTITLE: API Client Versioning\nDESCRIPTION: Fix for x-goog-api-client header to use correct version string in API requests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst headers = {\n  'x-goog-api-client': `${version}/gax-${gaxVersion}`\n};\n```\n\n----------------------------------------\n\nTITLE: Pass x-goog-request-params Header in Node.js\nDESCRIPTION: Ensures that the `x-goog-request-params` header is correctly passed for streaming calls within the Google Cloud IoT Node.js library. This header is essential for routing and identifying the request, ensuring proper handling by the Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\n\"* pass x-goog-request-params header for streaming calls ([5a35e0f](https://www.github.com/googleapis/nodejs-iot/commit/5a35e0fd4ea40a1a5e9be2c03e83db5fb7c11f81))\"\n```\n\n----------------------------------------\n\nTITLE: Updating Proto Definitions in JavaScript\nDESCRIPTION: Updates the proto definitions for the nodejs-translate library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-translate/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nupdate proto definitions\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests\nDESCRIPTION: NPM script for executing sample integration tests in the project\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install project dependencies using npm. This is a prerequisite step before running tests or contributing to the project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fixing markup spans in text\nDESCRIPTION: This snippet addresses an issue related to inline markup spans in text by ensuring they are separated from surrounding text by non-word characters. This improves text formatting and rendering within the Cloud Build NodeJS library documentation or user interfaces.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * inline markup spans must be separated from the surrounding text by non-word characters ([#146](https://www.github.com/googleapis/nodejs-cloudbuild/issues/146)) ([52b4770](https://www.github.com/googleapis/nodejs-cloudbuild/commit/52b4770f0c262ce91306e31d68f3b47b0598751d))\n */\n```\n\n----------------------------------------\n\nTITLE: Introducing Style Enumeration\nDESCRIPTION: Adds a new style enumeration feature to enhance the functionality of the Recommender library. This change provides more granular control and categorization options.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// New style enumeration implementation\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Node.js\nDESCRIPTION: Run different sets of tests for the Node.js application including unit tests, integration tests, and system tests. This ensures code changes do not break existing functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-eventarc-publishing/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run the linter and potentially fix any code style issues in the Google Cloud Node.js project.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Package Installation Command\nDESCRIPTION: Commands for installing required npm packages for running the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataform/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\\nnpm install\\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Fix: Update node issue template - Node.js\nDESCRIPTION: This code snippet updates the Node.js issue template. This update is intended to improve the issue reporting process and ensure that developers provide the necessary information when submitting bug reports or feature requests. It relies on updating the project's issue template file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"5f506f013f46c734fef6fbeb38ed1827f0648514\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Self-Signed JWT Feature Flag\nDESCRIPTION: This commit activates the self-signed JWT feature within the Node.js Managed Identities library. This allows developers to utilize self-signed JSON Web Tokens for authentication purposes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* turns on self-signed JWT feature flag ([#78](https://www.github.com/googleapis/nodejs-managed-identities/issues/78)) ([0c98ad5](https://www.github.com/googleapis/nodejs-managed-identities/commit/0c98ad5ef15b1afc2de4b9e74a14d7366589cfb3))\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: This command runs the linter on the codebase and attempts to fix any issues it finds automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Live Stream API Node.js Client Library\nDESCRIPTION: Command to install the Live Stream API client library via npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-livestream/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/livestream\n```\n\n----------------------------------------\n\nTITLE: Loading JSON Protos in Node.js\nDESCRIPTION: Changes the code to use require() for loading JSON protos instead of the previous method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datalabeling/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"use require() to load JSON protos ([#273](https://www.github.com/googleapis/nodejs-datalabeling/issues/273)) ([4ba477e](https://www.github.com/googleapis/nodejs-datalabeling/commit/4ba477e2f408db02ed08cc4acfc02914273c5b92))\"\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Markdown Entry\nDESCRIPTION: Changelog entry documenting version 2.0.0 release with Node 18 upgrade breaking change\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-places/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.0.0](https://github.com/googleapis/google-cloud-node/compare/places-v1.10.0...places-v2.0.0) (2025-03-18)\n\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n\n### Features\n\n* Add request/response debug logging to gapics, update templates to gax 5 and node 18 ([ec637db](https://github.com/googleapis/google-cloud-node/commit/ec637db171237d31da01f356af88a243e608fb14))\n\n### Miscellaneous Chores\n\n* Upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096)) ([eadae64](https://github.com/googleapis/google-cloud-node/commit/eadae64d54e07aa2c65097ea52e65008d4e87436))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Development\nDESCRIPTION: Command to install required Node.js dependencies before contributing to the project or running tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-dataexchange/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing IoT client libraries for Node.js 8\nDESCRIPTION: This snippet shows how to install specific legacy versions of the google-cloud-iot client libraries that are compatible with Node.js 8 using npm and dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/README.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"npm install @google-cloud/iot@legacy-8\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Feature Updates in Changelog\nDESCRIPTION: Feature update entries showing changes made to the library\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6182](https://github.com/googleapis/google-cloud-node/issues/6182)) ([c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Project\nDESCRIPTION: Command to install all required Node.js dependencies for the project using npm. This is a prerequisite step before running tests or making code contributions.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-monitoring-dashboard/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting IAM Policy for Policy Tag Manager in Data Catalog (v1beta1) using Javascript\nDESCRIPTION: This snippet demonstrates setting the IAM policy for a resource handled by the Policy Tag Manager in Google Cloud Data Catalog, utilizing the google-cloud-datacatalog library and Node.js. It uses the `setIamPolicy` method to apply the specified policy. Requires the google-cloud-datacatalog dependency.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/README.md#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\n\"use strict\";\n\nasync function main(resource, policy) {\n  // [START datacatalog_set_iam_policy]\n  // Imports the Google Cloud client library\n  const {PolicyTagManagerClient} = require('@google-cloud/datacatalog').v1beta1;\n\n  // TODO(developer): replace with your values\n  // const resource = 'PROJECT_ID'; // Resource path.\n  // const policy = {};\n\n  // Instantiates a client\n  const policyTagManagerClient = new PolicyTagManagerClient();\n\n  async function setIamPolicy() {\n    const [response] = await policyTagManagerClient.setIamPolicy({\n      resource: resource,\n      policy: policy,\n    });\n\n    console.log('Set IAM policy for resource: %s', resource);\n    console.log(response);\n  }\n  setIamPolicy();\n  // [END datacatalog_set_iam_policy]\n}\n\nmain(...process.argv.slice(2)).catch(err => {\n  console.error(err.message);\n  process.exitCode = 1;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install Node.js project dependencies using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policytroubleshooter/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Adding Account-Level RunAccessReport Binding in JavaScript\nDESCRIPTION: Adds an account-level binding for the RunAccessReport method, allowing it to be called on account resources.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nadd account-level binding for the`RunAccessReport` method (example: /v1alpha/accounts/1234567:runAccessReport)\n```\n\n----------------------------------------\n\nTITLE: Changelog Entries - Markdown\nDESCRIPTION: Individual changelog entries documenting changes with commit references\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contentwarehouse/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6184](https://github.com/googleapis/google-cloud-node/issues/6184)) ([2fcd202](https://github.com/googleapis/google-cloud-node/commit/2fcd2029c35e8fb2199d03ac6e61e2d821ddf72e))\n\n### Features\n\n* [contentwarehouse] Updated the exponential backoff settings for the Document AI ProcessDocument and BatchProcessDocuments methods ([#5763](https://github.com/googleapis/google-cloud-node/issues/5763)) ([c605006](https://github.com/googleapis/google-cloud-node/commit/c6050069aa75b31a262ff243c9f5407707926856))\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Commit\nDESCRIPTION: Commit message indicating upgrade requirement to Node 18\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### ⚠ BREAKING CHANGES\n\n* upgrade to Node 18 ([#6096](https://github.com/googleapis/google-cloud-node/issues/6096))\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Updating Node.js Generator for API Version Headers in GAPICs\nDESCRIPTION: This code snippet shows a feature update where the Node.js generator is updated to send API versions in headers for GAPICs (Google API Client Libraries).\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5351](https://github.com/googleapis/google-cloud-node/issues/5351)) ([01f48fc](https://github.com/googleapis/google-cloud-node/commit/01f48fce63ec4ddf801d59ee2b8c0db9f6fb8372))\n* [Many APIs] update Nodejs generator to send API versions in headers for GAPICs ([#5354](https://github.com/googleapis/google-cloud-node/issues/5354)) ([a9784ed](https://github.com/googleapis/google-cloud-node/commit/a9784ed3db6ee96d171762308bbbcd57390b6866))\n```\n\n----------------------------------------\n\nTITLE: Markdown Comment Directives\nDESCRIPTION: Comment directives indicating the README is auto-generated using synthtool\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/samples/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[//]: # \"This README.md file is auto-generated, all changes to this file will be lost.\"\n[//]: # \"To regenerate it, use `python -m synthtool`.\"\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference\nDESCRIPTION: Git commit hash reference with markdown formatting\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[c41ff07](https://github.com/googleapis/google-cloud-node/commit/c41ff0729b65a1207978b4029d6369cc0552e0bf)\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud Data Fusion Node.js Client Library\nDESCRIPTION: Command to install the Google Cloud Data Fusion client library via npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datafusion/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/data-fusion\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js dependencies with npm\nDESCRIPTION: This snippet demonstrates how to install the necessary dependencies for the Node.js project using npm. It ensures that all project dependencies are installed from the `package.json` file, allowing the project to run correctly.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms-inventory/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Require google-gax v2.12.0 in Node.js\nDESCRIPTION: This commit updates the dependency of google-gax to version 2.12.0 in the Google Cloud IoT Node.js library.  It ensures the library uses a specific version of google-gax, potentially addressing bugs or ensuring compatibility.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"* **deps:** require google-gax v2.12.0 ([#469](https://www.github.com/googleapis/nodejs-iot/issues/469)) ([fba8758](https://www.github.com/googleapis/nodejs-iot/commit/fba875813f41232a71338971c4c1766001dcefb5))\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-talent/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js Project\nDESCRIPTION: Command to run linting checks and potentially fix any style issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-promotions/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code for Google Cloud Node.js\nDESCRIPTION: Command to run the linter which checks for code style issues and potentially fixes them automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-iam-credentials/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-parallelstore/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Version 0.4.1 Changelog Entry\nDESCRIPTION: Bug fix entry detailing changes to promise handling and listOperationsAsync return type\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.4.1](https://github.com/googleapis/google-cloud-node/compare/notifications-v0.4.0...notifications-v0.4.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6191](https://github.com/googleapis/google-cloud-node/issues/6191)) ([c9adc61](https://github.com/googleapis/google-cloud-node/commit/c9adc6150ad09630854554c2ed7e558fb3e04315))\n```\n\n----------------------------------------\n\nTITLE: Version Header Format\nDESCRIPTION: Standard version header format used throughout the changelog showing version number, comparison link, and date\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [4.0.1](https://github.com/googleapis/google-cloud-node/compare/storage-transfer-v4.0.0...storage-transfer-v4.0.1) (2025-03-21)\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the Google Cloud Node.js project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog-lineage/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Run sample integration tests using npm\nDESCRIPTION: This command executes sample integration tests, which verify the interaction between different parts of the system. These tests are defined in the `package.json` file. The output shows the results of the tests, indicating if the samples are working as expected.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n# Run sample integration tests.\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference\nDESCRIPTION: Example Git commit hash reference used throughout the changelog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gkehub/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nab304122e3e825c9a76af7d6b0ef4ddc9aa6e906\n```\n\n----------------------------------------\n\nTITLE: Install dependencies using npm\nDESCRIPTION: This command installs the necessary dependencies for the project using npm (Node Package Manager). It reads the `package.json` file and downloads the specified packages into the `node_modules` directory.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript Sample Bot Globally\nDESCRIPTION: Command to install the typeless-sample-bot package globally via npm for system-wide availability.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/typeless-sample-bot/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @google-cloud/typeless-sample-bot -g\n```\n\n----------------------------------------\n\nTITLE: Feat: Turn on self-signed JWT feature flag - Node.js\nDESCRIPTION: This code snippet enables the self-signed JWT feature flag. This feature likely allows users to generate their own JWTs (JSON Web Tokens) for authentication, providing more control over security.  It relies on JWT functionality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"bd5ecd31f2cf39486b85c62e1f5d35850cde22b9\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Comment Header\nDESCRIPTION: Generated comment indicating the file is managed by synthtool and should not be edited manually.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Setting default branch to main in Node.js\nDESCRIPTION: This commit sets the default branch to 'main' for the Storage Transfer Node.js library repository.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-storagetransfer/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* **build:** set default branch to main ([#14](https://www.github.com/googleapis/nodejs-storage-transfer/issues/14)) ([9068b92](https://www.github.com/googleapis/nodejs-storage-transfer/commit/9068b9213daa48d4592ff51c0e520af6eb631b45))\n```\n\n----------------------------------------\n\nTITLE: Version History Entry - Redis v5.0.1\nDESCRIPTION: Changelog entry documenting bug fixes for managing promises in many APIs and updating listOperationsAsync return type.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [5.0.1](https://github.com/googleapis/google-cloud-node/compare/redis-v5.0.0...redis-v5.0.1) (2025-03-21)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6187])\n```\n\n----------------------------------------\n\nTITLE: Issue References in Markdown\nDESCRIPTION: Markdown links referencing GitHub issues and commits related to changes\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[#6191](https://github.com/googleapis/google-cloud-node/issues/6191)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[#6096](https://github.com/googleapis/google-cloud-node/issues/6096)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[#5351](https://github.com/googleapis/google-cloud-node/issues/5351)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[#5354](https://github.com/googleapis/google-cloud-node/issues/5354)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[#5396](https://github.com/googleapis/google-cloud-node/issues/5396)\n```\n\n----------------------------------------\n\nTITLE: Documenting Bug Fixes in Markdown\nDESCRIPTION: Markdown syntax for listing bug fixes in a release, including links to issues and commit hashes.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Bug Fixes\n\n* **deps:** Use google-gax v3.5.2 ([#162](https://github.com/googleapis/nodejs-contact-center-insights/issues/162)) ([06d86b1](https://github.com/googleapis/nodejs-contact-center-insights/commit/06d86b138f000bcd5a3d0f909bff35c9d791420d))\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command for installing project dependencies using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-maps-fleetengine-delivery/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Release Information Markdown Entries\nDESCRIPTION: Markdown formatted release history entries documenting version changes, bug fixes, and feature updates for the network-management module.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkmanagement/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## [2.4.2](https://github.com/googleapis/google-cloud-node/compare/network-management-v2.4.1...network-management-v2.4.2) (2023-04-13)\n\n### Bug Fixes\n\n* **deps:** Bump `google-gax` to ^3.5.8\n* Minify JSON and JS files, and remove .map files\n```\n\n----------------------------------------\n\nTITLE: Running Linter\nDESCRIPTION: Command to run the code linter which may also fix certain issues automatically.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Feature Commit\nDESCRIPTION: Commit message documenting updates to request/response debug logging\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-area120-tables/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* [Many APIs] add request/response debug logging to gapics, update templates to gax 5  ([54a73fe](https://github.com/googleapis/google-cloud-node/commit/54a73fe74eab0675c006f24d5f1e4574c44d829b))\n```\n\n----------------------------------------\n\nTITLE: Running Node.js Test Suites\nDESCRIPTION: Commands for running different types of tests including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-css/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Changes Using npm\nDESCRIPTION: This npm script runs a linter on the codebase to detect stylistic issues, and optionally fixes them according to predefined rules. Ensuring the code adheres to consistent styling is crucial for maintainability and readability.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Migration to Node 14 in Google Cloud Node\nDESCRIPTION: This code snippet shows a breaking change where the project is migrated to Node 14.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicehealth/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n### Miscellaneous Chores\n\n* Migrate to Node 14 ([#4443](https://github.com/googleapis/google-cloud-node/issues/4443)) ([2260f12](https://github.com/googleapis/google-cloud-node/commit/2260f12543d171bda95345e53475f5f0fdc45770))\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vpcaccess/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Unenrolling Data Sources with BigQuery Data Transfer Service in Node.js\nDESCRIPTION: This snippet shows how to unenroll data sources using the BigQuery Data Transfer Service in Node.js. It includes instructions on executing the sample code.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-datatransfer/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-bigquery-datatransfer/samples/generated/v1/data_transfer_service.unenroll_data_sources.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Create Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to create a worker pool using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.create_worker_pool.js`\n```\n\n----------------------------------------\n\nTITLE: Installing Legacy Version of Google Cloud Grafeas Client for Node.js 8\nDESCRIPTION: This command demonstrates how to install a legacy version of the Google Cloud Grafeas client library compatible with Node.js 8 using npm dist-tags.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/grafeas/README.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @google-cloud/grafeas@legacy-8\n```\n\n----------------------------------------\n\nTITLE: List OS Policy Assignments in GCP OS Config Service\nDESCRIPTION: Shows how to list OS policy assignments using the zonal OS Config service.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-osconfig/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-osconfig/samples/generated/v1alpha/os_config_zonal_service.list_o_s_policy_assignments.js\n```\n\n----------------------------------------\n\nTITLE: Google Shopping Account Tax Service Samples\nDESCRIPTION: API endpoints for managing tax settings for merchant accounts, including retrieving, listing, and updating tax configurations.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-accounts/README.md#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Fix: Updating WORKSPACE files - Node.js\nDESCRIPTION: This code snippet updates the WORKSPACE files to use the newest version of the Typescript generator. Updating the Typescript generator ensures that the generated code is up-to-date and compatible with the latest Typescript features.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-texttospeech/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"dee8dc23024f67d5ad3888e2ea4b6829cbd4cae6\"\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the project using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-resourcemanager/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: HTML Comment in Markdown\nDESCRIPTION: Generated comment indicating the file is auto-generated by synthtool and should not be edited manually.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- # Generated by synthtool. DO NOT EDIT! !-->\n```\n\n----------------------------------------\n\nTITLE: Fixing google-gax Dependency (v2.24.1)\nDESCRIPTION: This commit addresses a bug by updating the google-gax dependency to version 2.24.1. This ensures compatibility and resolves potential issues related to the google-gax library within the Node.js Managed Identities library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-managedidentities/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* **deps:** google-gax v2.24.1 ([#76](https://www.github.com/googleapis/nodejs-managed-identities/issues/76)) ([f506d16](https://www.github.com/googleapis/nodejs-managed-identities/commit/f506d16f5fb9a79511ee629841bf2d8bca75699c))\n```\n\n----------------------------------------\n\nTITLE: Installing Contact Center AI Insights Client Library\nDESCRIPTION: Command to install the Google Cloud Contact Center AI Insights client library using npm package manager.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-contactcenterinsights/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/contact-center-insights\n```\n\n----------------------------------------\n\nTITLE: Using Cloud Channel API with Node.js\nDESCRIPTION: This snippet demonstrates how to authenticate and use the Cloud Channel API to list customers. It includes setting up OAuth2 authentication, creating a client, and making an API call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-channel/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Reads the secrets from a `oauth2.keys.json` file, which should be downloaded\n// from the Google Developers Console and saved in the same directory with the\n// sample app.\n\n// This sample app only calls read-only methods from the Channel API. Include\n// additional scopes if calling methods that modify the configuration.\nconst SCOPES = ['https://www.googleapis.com/auth/apps.order'];\n\nasync function listCustomers(authClient, accountNumber) {\n  // Imports the Google Cloud client library\n  const {CloudChannelServiceClient} = require('@google-cloud/channel');\n\n  // Instantiates a client using OAuth2 credentials.\n  const sslCreds = grpc.credentials.createSsl();\n  const credentials = grpc.credentials.combineChannelCredentials(\n    sslCreds,\n    grpc.credentials.createFromGoogleCredential(authClient)\n  );\n\n  // Instantiates a client\n  const client = new CloudChannelServiceClient({\n    sslCreds: credentials,\n  });\n\n  // Calls listCustomers() method\n  const customers = await client.listCustomers({\n    parent: `accounts/${accountNumber}`,\n  });\n  console.info(customers);\n}\n\n/**\n * Create a new OAuth2Client, and go through the OAuth2 content\n * workflow.  Return the full client to the callback.\n */\nfunction getAuthenticatedClient(keys) {\n  return new Promise((resolve, reject) => {\n    // Create an oAuth client to authorize the API call. Secrets are kept in a\n    // `keys.json` file, which should be downloaded from the Google Developers\n    // Console.\n    const oAuth2Client = new OAuth2Client(\n      keys.web.client_id,\n      keys.web.client_secret,\n      // The first redirect URL from the `oauth2.keys.json` file will be used\n      // to generate the OAuth2 callback URL. Update the line below or edit\n      // the redirect URL in the Google Developers Console if needed.\n      // This sample app expects the callback URL to be\n      // 'http://localhost:3000/oauth2callback'\n      keys.web.redirect_uris[0]\n    );\n\n    // Generate the url that will be used for the consent dialog.\n    const authorizeUrl = oAuth2Client.generateAuthUrl({\n      access_type: 'offline',\n      scope: SCOPES.join(' '),\n    });\n\n    // Open an http server to accept the oauth callback. In this example, the\n    // only request to our webserver is to /oauth2callback?code=<code>\n    const server = http\n      .createServer(async (req, res) => {\n        try {\n          if (req.url.indexOf('/oauth2callback') > -1) {\n            // Acquire the code from the querystring, and close the web\n            // server.\n            const qs = new url.URL(req.url, 'http://localhost:3000')\n              .searchParams;\n            const code = qs.get('code');\n            console.log(`Code is ${code}`);\n            res.end('Authentication successful! Please return to the console.');\n            server.destroy();\n\n            // Now that we have the code, use that to acquire tokens.\n            const r = await oAuth2Client.getToken(code);\n            // Make sure to set the credentials on the OAuth2 client.\n            oAuth2Client.setCredentials(r.tokens);\n            console.info('Tokens acquired.');\n            resolve(oAuth2Client);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      })\n      .listen(3000, () => {\n        // Open the browser to the authorize url to start the workflow.\n        // This line will not work if you are running the code in the\n        // environment where a browser is not available. In this case,\n        // copy the URL and open it manually in a browser.\n        console.info(`Opening the browser with URL: ${authorizeUrl}`);\n        open(authorizeUrl, {wait: false}).then(cp => cp.unref());\n      });\n    destroyer(server);\n  });\n}\n\nasync function main(accountNumber, keys) {\n  // TODO: uncomment with your account number\n  // const accountNumber = '1234'\n\n  // TODO: uncomment this line with your oAuth2 file\n  //const keys = require('./oauth2.keys.json');\n\n  getAuthenticatedClient(keys).then(authClient =>\n    listCustomers(authClient, accountNumber)\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Cloud Functions Quickstart\nDESCRIPTION: Basic quickstart example for using the Google Cloud Functions API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-functions/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-functions/samples/quickstart.js\n```\n\n----------------------------------------\n\nTITLE: Installing Oracle Database Google Cloud Client Library\nDESCRIPTION: Command to install the Node.js client library for Oracle Database@Google Cloud API using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-oracledatabase/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/oracledatabase\n```\n\n----------------------------------------\n\nTITLE: Installing the Google Cloud Transcoder API Node.js client library\nDESCRIPTION: Command to install the Transcoder API client library using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-video-transcoder/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/video-transcoder\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 0.10.1\nDESCRIPTION: Documents bug fixes including promise handling improvements and listOperationsAsync return type updates\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-netapp/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.10.1](https://github.com/googleapis/google-cloud-node/compare/netapp-v0.10.0...netapp-v0.10.1) (2025-03-19)\n\n### Bug Fixes\n\n* [Many APIs] await/catch promises, and update listOperationsAsync return type ([#6186](https://github.com/googleapis/google-cloud-node/issues/6186)) ([dcfc7b4](https://github.com/googleapis/google-cloud-node/commit/dcfc7b492a2ac3fb86b93ae1375bac1c5153d049))\n```\n\n----------------------------------------\n\nTITLE: Project Contact Information in Markdown\nDESCRIPTION: Contact information for reporting code of conduct violations to the project stewards.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networksecurity/CODE_OF_CONDUCT.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n*googleapis-stewards@google.com*, the Project Steward(s) for *Google Cloud Client Libraries*\n```\n\n----------------------------------------\n\nTITLE: Running Notification Subscriptions Listing Sample\nDESCRIPTION: Command to execute the sample code for listing all notification subscriptions in the Google Merchant API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-shopping-merchant-notifications/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-shopping-merchant-notifications/samples/generated/v1beta/notifications_api_service.list_notification_subscriptions.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Public Key in Google Cloud KMS (JavaScript)\nDESCRIPTION: This code sample illustrates how to retrieve a public key using the Google Cloud Key Management Service API. It requires the google-cloud-kms package and appropriate authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-kms/samples/generated/v1/key_management_service.get_public_key.js\n```\n\n----------------------------------------\n\nTITLE: Loading JSON Protos with require() in Node.js Container Analysis\nDESCRIPTION: Fixes the JSON protocol buffer loading by using require() instead of dynamic imports. This change helps ensure proper loading of protocol definitions in different environments.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// use require() to load JSON protos\nconst proto = require('./path/to/proto.json');\n```\n\n----------------------------------------\n\nTITLE: Create Subproperty in Analytics Admin via Node.js\nDESCRIPTION: This code demonstrates how to create a subproperty within the Google Analytics Admin API using Node.js. It leverages the `createSubproperty` method of the `AnalyticsAdminServiceClient`.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/README.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nNo code provided, see [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-admin/samples/generated/v1alpha/analytics_admin_service.create_subproperty.js)\n```\n\n----------------------------------------\n\nTITLE: Installing Compatible Google GAX Version in JavaScript\nDESCRIPTION: Fixes a bug by using a compatible version of the google-gax library.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-scheduler/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nuse compatible version of google-gax\n```\n\n----------------------------------------\n\nTITLE: Linting and Fixing Code with npm\nDESCRIPTION: This command runs the linter and attempts to automatically fix any linting errors in the code using npm. It helps maintain code style and quality.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Hybrid Inspect DLP Job with Google Cloud DLP Service in Node.js\nDESCRIPTION: This code snippet illustrates how to perform a hybrid inspect operation on a DLP job using the Google Cloud DLP service. It calls the hybridInspectDlpJob method of the DLP service client.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-privacy-dlp/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-privacy-dlp/samples/generated/v2/dlp_service.hybrid_inspect_dlp_job.js\n```\n\n----------------------------------------\n\nTITLE: Running Cloud Build Get Worker Pool Sample\nDESCRIPTION: This sample demonstrates how to retrieve a worker pool using the Cloud Build API. To execute this sample, you need to run the provided Node.js script.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-devtools-cloudbuild/samples/generated/v1/cloud_build.get_worker_pool.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Analytics Hub Listings\nDESCRIPTION: Example showing how to list listings using the Analytics Hub service\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-bigquery-analyticshub/samples/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-bigquery-analyticshub/samples/generated/v1/analytics_hub_service.list_listings.js\n```\n\n----------------------------------------\n\nTITLE: Running Code Linting\nDESCRIPTION: Command to run the linter and automatically fix code style issues.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-apps-meet/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run fix\n```\n\n----------------------------------------\n\nTITLE: Updating Redis Clusters with Node.js\nDESCRIPTION: This snippet demonstrates how to update a Redis cluster using the Google Cloud Redis Cluster client library for Node.js. It requires the google-cloud-redis-cluster package to be installed.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-redis-cluster/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-redis-cluster/samples/generated/v1beta1/cloud_redis_cluster.update_cluster.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Namespace - Google Cloud Node.js\nDESCRIPTION: This JavaScript snippet removes a namespace from Google Cloud Service Directory using Node.js, facilitated by the `@google-cloud/service-directory` library. It expects the namespace name as input and deletes it, with no specific output other than a status indication.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script content from https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1beta1/registration_service.delete_namespace.js>\n```\n\n----------------------------------------\n\nTITLE: Getting a Version in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to retrieve information about a specific version in Dialogflow CX. It uses the versions.get_version method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_70\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/versions.get_version.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Google Cloud Node.js Library\nDESCRIPTION: This command installs the necessary dependencies for the Google Cloud Node.js library project. It should be run in the project's root directory after setting up the Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datastream/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Google Cloud AutoML NPM Package\nDESCRIPTION: Command to install the Google Cloud AutoML Node.js client library using npm package manager. Required for initializing AutoML services and interacting with Google Cloud AutoML APIs.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-automl/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @google-cloud/automl\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Google Cloud Node.js Project\nDESCRIPTION: These commands run different types of tests for the project, including unit tests, sample integration tests, and system tests.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-appengine/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n# Run unit tests.\nnpm test\n\n# Run sample integration tests.\nnpm run samples-test\n\n# Run all system tests.\nnpm run system-test\n```\n\n----------------------------------------\n\nTITLE: Delete Blueprint in Telco Automation API - JavaScript\nDESCRIPTION: Deletes a blueprint using the Telco Automation API v1alpha1. This sample demonstrates blueprint deletion.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-telcoautomation/samples/README.md#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-telcoautomation/samples/generated/v1alpha1/telco_automation.delete_blueprint.js\n```\n\n----------------------------------------\n\nTITLE: Running VM Migration Group Management Sample\nDESCRIPTION: Node.js script showing how to delete a group using the VM Migration API. Usage requires the google-cloud-vmmigration package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vmmigration/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-vmmigration/samples/generated/v1/vm_migration.delete_group.js\n```\n\n----------------------------------------\n\nTITLE: Service Directory Sample Code Reference List\nDESCRIPTION: A comprehensive list of Service Directory operations samples including service resolution, namespace/service/endpoint management, and IAM policy operations. Each sample can be accessed via source code link or launched directly in Cloud Shell.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/README.md#2025-04-22_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n| Sample                      | Source Code                       | Try it |\n| --------------------------- | --------------------------------- | ------ |\n| Lookup_service.resolve_service | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1/lookup_service.resolve_service.js) |\n| Registration_service.create_endpoint | [source code](https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-servicedirectory/samples/generated/v1/registration_service.create_endpoint.js) |\n```\n\n----------------------------------------\n\nTITLE: Installing Google Street View Publish Node.js Client\nDESCRIPTION: This command installs the Google Street View Publish client library for Node.js using npm.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-streetview-publish/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @googlemaps/streetview-publish\n```\n\n----------------------------------------\n\nTITLE: Importing Long from Required Instead of Import in Node.js Container Analysis\nDESCRIPTION: Changes the import method for the 'long' package from ES modules style import to CommonJS require. This change is part of bug fixes for version 4.3.0.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-containeranalysis/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Change import long to require\nconst Long = require('long');\n```\n\n----------------------------------------\n\nTITLE: Loading JSON protos using require()\nDESCRIPTION: This snippet demonstrates how to load JSON protos using the require() function. This approach ensures that the protos are correctly loaded and accessible within the application.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-cloudbuild/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * use require() to load JSON protos ([#225](https://www.github.com/googleapis/nodejs-cloudbuild/issues/225)) ([1d9fc28](https://www.github.com/googleapis/nodejs-cloudbuild/commit/1d9fc28d5b2a18305a44a2b315a5f8ccd2cf4da7))\n */\n```\n\n----------------------------------------\n\nTITLE: Listing App Connectors in Node.js\nDESCRIPTION: Sample script for listing BeyondCorp App Connectors using the Google Cloud Node.js client library. Provides a method to retrieve multiple app connector records.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-beyondcorp-appconnectors/samples/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-beyondcorp-appconnectors/samples/generated/v1/app_connectors_service.list_app_connectors.js\n```\n\n----------------------------------------\n\nTITLE: Listing Insights in Google Cloud Recommender API v1beta1\nDESCRIPTION: Example demonstrating how to list insights for a specific project using the Google Cloud Recommender API v1beta1. This sample shows the command to execute the list_insights method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-recommender/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-recommender/samples/generated/v1beta1/recommender.list_insights.js\n```\n\n----------------------------------------\n\nTITLE: Getting a File in Google Cloud\nDESCRIPTION: This code snippet fetches a specific file from the Google Cloud Artifact Registry. Make sure the Google Cloud SDK is properly set up and authenticated before executing this code in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting a file\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_file.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_file.js\n```\n\n----------------------------------------\n\nTITLE: Check Compatibility in Analytics Data API (Beta) with Node.js\nDESCRIPTION: This sample demonstrates how to check compatibility using the Beta version of the Google Analytics Data API with Node.js. It uses the `beta_analytics_data.check_compatibility` method. Instructions for execution are in the README.md file.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-analytics-data/README.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Getting an Attachment in Google Cloud\nDESCRIPTION: This code snippet retrieves an attachment from the Google Cloud Artifact Registry. Ensure you have the necessary authentication and libraries. This code is intended to be executed in a Node.js environment.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Sample code for getting an attachment\n// Reference: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_attachment.js\n\n// Usage\nnode packages/google-devtools-artifactregistry/samples/generated/v1/artifact_registry.get_attachment.js\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Commands for installing required dependencies before running the samples.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-policysimulator/samples/README.md#2025-04-22_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\ncd samples\nnpm install\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Creating Web Security Scanner Configuration in Node.js\nDESCRIPTION: Sample demonstrating how to create a new scan configuration for web security scanning using the Google Cloud Web Security Scanner API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-websecurityscanner/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nWeb_security_scanner.create_scan_config\n```\n\n----------------------------------------\n\nTITLE: Export Protos in src/index.ts in Node.js\nDESCRIPTION: This commit exports the protobuf definitions from the `src/index.ts` file in the Google Cloud IoT Node.js library. This makes the protobuf definitions readily available for use in other parts of the application or in external projects.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-iot/CHANGELOG.md#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n\"* export protos in src/index.ts ([9c3098c](https://www.github.com/googleapis/nodejs-iot/commit/9c3098ca5a232f7fb575d5dce2bc1473365b20bd))\"\n```\n\n----------------------------------------\n\nTITLE: Reporting Runtime Events with Google Cloud Node.js Client\nDESCRIPTION: Sample code for reporting runtime events using the Google Cloud Notebooks API\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-notebooks/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-notebooks/samples/generated/v1/managed_notebook_service.report_runtime_event.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Access Level with Access Context Manager API in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve an access level using the Access Context Manager API. It requires the google-identity-accesscontextmanager package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-identity-accesscontextmanager/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-identity-accesscontextmanager/samples/generated/v1/access_context_manager.get_access_level.js\n```\n\n----------------------------------------\n\nTITLE: Updating Hardware in G_d_c_hardware_management with Node.js\nDESCRIPTION: This snippet demonstrates how to update hardware using the google-cloud-gdchardwaremanagement library in Node.js. It provides the command to run the sample code, which updates hardware information.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-gdchardwaremanagement/samples/README.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-gdchardwaremanagement/samples/generated/v1alpha/g_d_c_hardware_management.update_hardware.js`\n```\n\n----------------------------------------\n\nTITLE: Listing Backups in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet demonstrates how to list backups in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.list_backups.js\n```\n\n----------------------------------------\n\nTITLE: Listing Flows in Dialogflow CX using Node.js\nDESCRIPTION: This code demonstrates how to list all flows in a Dialogflow CX agent. It uses the google-cloud-dialogflow-cx package and assumes proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_100\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3beta1/flows.list_flows.js\n```\n\n----------------------------------------\n\nTITLE: Getting Entry with Google Cloud Dataplex Catalog Service in Node.js\nDESCRIPTION: This code snippet shows how to get an entry using the Google Cloud Dataplex Catalog Service API in Node.js. It requires the google-cloud-dataplex package.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataplex/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-dataplex/samples/generated/v1/catalog_service.get_entry.js\n```\n\n----------------------------------------\n\nTITLE: Check Environment Upgrade Availability\nDESCRIPTION: Shows how to check if a Cloud Composer environment can be upgraded to a newer version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-orchestration-airflow-service/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-orchestration-airflow-service/samples/generated/v1beta1/environments.check_upgrade.js\n```\n\n----------------------------------------\n\nTITLE: Listing Entries in Data Catalog\nDESCRIPTION: Sample code demonstrating how to list entries in Google Cloud Data Catalog.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-datacatalog/samples/README.md#2025-04-22_snippet_53\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-datacatalog/samples/generated/v1beta1/data_catalog.list_entries.js\n```\n\n----------------------------------------\n\nTITLE: Annotating Text with Google Cloud Language API in Node.js\nDESCRIPTION: This snippet shows how to annotate text using the Google Cloud Language API. It requires the 'google-cloud-language' Node.js client library. The function can return various features such as entity analysis, sentiment analysis, and syntax analysis all in a single call.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-language/README.md#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Google Cloud client library\nconst language = require('@google-cloud/language');\n\n// Creates a client\nconst client = new language.LanguageServiceClient();\n\nasync function annotateText(text) {\n  const document = {\n    content: text,\n    type: 'PLAIN_TEXT',\n  };\n\n  const [result] = await client.annotateText({document});\n  console.log('Annotation Results:');\n  console.log(result);\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Spec Contents with API Hub using Node.js\nDESCRIPTION: Retrieve the contents of an API spec using this Node.js script that interfaces with Google Cloud\nAPI Hub. It provides detailed content analysis and validation functionality for the specs used.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-apihub/samples/README.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-apihub/samples/generated/v1/api_hub.get_spec_contents.js\n```\n\n----------------------------------------\n\nTITLE: Getting Certificate Template with Google Cloud Private CA in Node.js\nDESCRIPTION: This code example shows how to retrieve a certificate template using the Google Cloud Private CA Service API. It uses the CertificateAuthorityService client to call the getCertificateTemplate method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-security-privateca/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-security-privateca/samples/generated/v1/certificate_authority_service.get_certificate_template.js\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Details in Dialogflow CX (JavaScript)\nDESCRIPTION: Demonstrates how to retrieve details about a specific environment in Dialogflow CX using Node.js. This sample provides the command-line syntax for executing the get environment operation.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/environments.get_environment.js\n```\n\n----------------------------------------\n\nTITLE: Getting Crypto Key Version with Key_management_service in Node.js\nDESCRIPTION: This snippet demonstrates how to retrieve a crypto key version using the google-cloud-kms library in a Node.js environment. The sample is executed with the command, to retrieve a specified crypto key version.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-kms/samples/README.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n`node packages/google-cloud-kms/samples/generated/v1/key_management_service.get_crypto_key_version.js`\n```\n\n----------------------------------------\n\nTITLE: List Groups\nDESCRIPTION: Command line usage example for listing groups in Google Cloud Network Connectivity\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-networkconnectivity/samples/README.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-networkconnectivity/samples/generated/v1/hub_service.list_groups.js\n```\n\n----------------------------------------\n\nTITLE: Listing Reference Images using Google Cloud Vision API in JavaScript\nDESCRIPTION: This sample shows how to list reference images using the Google Cloud Vision API. It utilizes the ProductSearch.listReferenceImages method.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-vision/samples/README.md#2025-04-22_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-vision/samples/generated/v1p4beta1/product_search.list_reference_images.js\n```\n\n----------------------------------------\n\nTITLE: Deleting Snapshot for Cloud Filestore\nDESCRIPTION: This sample code illustrates how to delete a snapshot in Google Cloud Filestore. Necessary permissions should be ensured before running.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-filestore/README.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst { CloudFilestoreManagerClient } = require('@google-cloud/filestore');\n\nconst client = new CloudFilestoreManagerClient();\n\nasync function deleteSnapshot() {\n    const response = await client.deleteSnapshot(...);\n    console.log(response);\n}\ndeleteSnapshot();\n```\n\n----------------------------------------\n\nTITLE: Listing Dataproc Clusters using Node.js Client\nDESCRIPTION: Example code demonstrating how to initialize the Dataproc client and list clusters. Shows configuration of project ID, region, and optional filters with async/await pattern for handling responses.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dataproc/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n/**\n *  Required. The ID of the Google Cloud Platform project that the cluster\n *  belongs to.\n */\n// const projectId = 'abc123'\n/**\n *  Required. The Dataproc region in which to handle the request.\n */\n// const region = 'us-central1'\n/**\n *  Optional. A filter constraining the clusters to list. Filters are\n *  case-sensitive and have the following syntax:\n *  field = value AND field = value   ...\n *  where **field** is one of `status.state`, `clusterName`, or `labels.KEY`,\n *  and `[KEY]` is a label key. **value** can be `*` to match all values.\n *  `status.state` can be one of the following: `ACTIVE`, `INACTIVE`,\n *  `CREATING`, `RUNNING`, `ERROR`, `DELETING`, or `UPDATING`. `ACTIVE`\n *  contains the `CREATING`, `UPDATING`, and `RUNNING` states. `INACTIVE`\n *  contains the `DELETING` and `ERROR` states.\n *  `clusterName` is the name of the cluster provided at creation time.\n *  Only the logical `AND` operator is supported; space-separated items are\n *  treated as having an implicit `AND` operator.\n *  Example filter:\n *  status.state = ACTIVE AND clusterName = mycluster\n *  AND labels.env = staging AND labels.starred = *\n */\n// const filter = 'abc123'\n/**\n *  Optional. The standard List page size.\n */\n// const pageSize = 1234\n/**\n *  Optional. The standard List page token.\n */\n// const pageToken = 'abc123'\n\n// Imports the Dataproc library\nconst {ClusterControllerClient} = require('@google-cloud/dataproc').v1;\n\n// Instantiates a client\nconst dataprocClient = new ClusterControllerClient();\n\nasync function callListClusters() {\n  // Construct request\n  const request = {\n    projectId,\n    region,\n  };\n\n  // Run request\n  const iterable = dataprocClient.listClustersAsync(request);\n  for await (const response of iterable) {\n    console.log(response);\n  }\n}\n\ncallListClusters();\n```\n\n----------------------------------------\n\nTITLE: Getting Flow Validation Result in Dialogflow CX using Node.js\nDESCRIPTION: This snippet shows how to get the validation result for a flow in Dialogflow CX. It utilizes the flows.get_flow_validation_result method of the Dialogflow CX API.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-dialogflow-cx/samples/README.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nnode packages/google-cloud-dialogflow-cx/samples/generated/v3/flows.get_flow_validation_result.js\n```\n\n----------------------------------------\n\nTITLE: Running Sample Integration Tests for Google Cloud Node.js Project\nDESCRIPTION: This command runs the sample integration tests for the Google Cloud Node.js project. These tests verify that the sample code provided in the project works correctly with the actual Google Cloud services.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-memorystore/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run samples-test\n```\n\n----------------------------------------\n\nTITLE: Managing Quota Information with Cloud Quotas API in Node.js (v1)\nDESCRIPTION: Node.js samples for retrieving quota information using the Cloud Quotas API v1, including getting individual quota info and listing all quota infos.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-api-cloudquotas/samples/README.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.get_quota_info.js\nnode packages/google-api-cloudquotas/samples/generated/v1/cloud_quotas.list_quota_infos.js\n```\n\n----------------------------------------\n\nTITLE: Updating a Metadata Import in Dataproc Metastore with Node.js\nDESCRIPTION: This snippet demonstrates how to update a metadata import in Dataproc Metastore using the Node.js client library. It requires the google-cloud-metastore package and proper authentication setup.\nSOURCE: https://github.com/googleapis/google-cloud-node/blob/main/packages/google-cloud-metastore/samples/README.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode packages/google-cloud-metastore/samples/generated/v1/dataproc_metastore.update_metadata_import.js\n```"
  }
]
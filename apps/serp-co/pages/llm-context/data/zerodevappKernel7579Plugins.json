[
  {
    "owner": "zerodevapp",
    "repo": "kernel-7579-plugins",
    "content": "TITLE: Building Ethereum Applications with Forge\nDESCRIPTION: Command to build Ethereum applications using Forge, the testing framework component of Foundry.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Uses the Forge command to build Ethereum projects. This compiles smart contracts and prepares them for deployment.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Launches a local Ethereum node using Anvil. This provides a development environment for testing and interacting with smart contracts locally.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Displays help information for Forge, Anvil, and Cast tools. These commands provide detailed usage instructions and available options for each tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Contracts with Forge\nDESCRIPTION: Uses the Forge tool to compile and build Ethereum smart contracts in the project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation for Foundry Tools\nDESCRIPTION: Commands to access help documentation for the three main Foundry tools: Forge, Anvil, and Cast.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Command to deploy smart contracts using Forge's script functionality, requiring RPC URL and private key parameters.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Displays help information for Forge, Anvil, and Cast. These commands provide detailed usage instructions and available options for each tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Executes the test suite for Ethereum projects using Forge. This command runs all tests in the project to ensure contract functionality.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation for Foundry Tools\nDESCRIPTION: Commands to access help documentation for Forge, Anvil, and Cast, displaying available options and subcommands.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Command to execute tests for Ethereum smart contracts using Forge's testing capabilities.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Command to build Ethereum smart contracts using Forge, Foundry's development framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Command to build a Foundry project using Forge, which compiles Solidity contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Launches a local Ethereum node using Anvil, which is similar to Ganache or Hardhat Network. This provides a local blockchain for development and testing.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Testing Smart Contracts with Forge\nDESCRIPTION: Command to run tests on Ethereum smart contracts using Forge's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Uses the Forge tool to build Ethereum projects. This command compiles smart contracts and generates necessary artifacts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Uses the Forge tool to build Ethereum projects. This command compiles smart contracts and generates necessary artifacts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Deploys smart contracts using Forge's script functionality. This command requires specifying the script file, RPC URL, and private key for deployment.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Executes the test suite for the Ethereum smart contracts using Forge's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Command to build Ethereum projects using Forge, the testing framework component of Foundry.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Deploys smart contracts using Forge's script functionality. This command requires specifying the script file, RPC URL, and private key for deployment.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Contracts with Forge Script\nDESCRIPTION: Deploys Ethereum contracts using Forge's script functionality. Requires specifying the script file, RPC URL, and private key.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Illustrates the command to deploy a smart contract using Forge Script, specifying the script file, RPC URL, and private key.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Deploys a smart contract using Forge's scripting capabilities. Requires specifying the script file, RPC URL, and private key.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Deploys smart contracts using Forge's scripting capabilities. This command requires specifying the script file, RPC URL, and private key for deployment.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Command for deploying smart contracts using Forge's script functionality. Requires an RPC URL and private key for authentication.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contract with Forge Script\nDESCRIPTION: Illustrates how to deploy a smart contract using Forge's script functionality, specifying RPC URL and private key.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Command to deploy smart contracts using Forge Script. Requires specifying the script file, RPC URL, and private key.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Command to deploy smart contracts using Forge's script functionality with RPC URL and private key parameters.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Utilizes the Cast tool to interact with EVM smart contracts, send transactions, or retrieve chain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Using Cast for Ethereum Interactions\nDESCRIPTION: Demonstrates the basic usage of Cast, Foundry's command-line tool for interacting with Ethereum smart contracts and blockchain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Executes Cast subcommands for interacting with EVM smart contracts, sending transactions, or retrieving chain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts\nDESCRIPTION: Command to deploy smart contracts using Forge script with RPC URL and private key parameters.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Deploying Smart Contracts with Forge Script\nDESCRIPTION: Command to deploy smart contracts using Forge script with RPC URL and private key parameters.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n$ forge script script/Counter.s.sol:CounterScript --rpc-url <your_rpc_url> --private-key <your_private_key>\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Command to execute tests for Ethereum smart contracts using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Shows the command to run tests for an Ethereum project using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Command to execute tests for Ethereum applications using Forge's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Shows the command to run tests for an Ethereum project using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Executes test suites for Ethereum projects using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Testing Ethereum Projects with Forge\nDESCRIPTION: Command for running tests on Ethereum projects using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Command to run tests in a Foundry project using Forge's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Executes test suites for Ethereum projects using Forge. This command runs all tests in the project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Generates gas usage snapshots for smart contracts using Forge. This helps in optimizing contract gas consumption and tracking changes over time.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Starting Anvil Local Node\nDESCRIPTION: Command to start Anvil, Foundry's local Ethereum node for development and testing.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Running Local Ethereum Node with Anvil\nDESCRIPTION: Command to start Anvil, Foundry's local Ethereum node for development and testing purposes.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Launches a local Ethereum node for development and testing using Anvil.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Running Local Ethereum Node with Anvil\nDESCRIPTION: Command to start Anvil, Foundry's local Ethereum development node similar to Ganache.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Shows how to start a local Ethereum node using Anvil, Foundry's local blockchain simulator.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Running Local Ethereum Node with Anvil\nDESCRIPTION: Starts a local Ethereum node using Anvil. This provides a development environment for testing and interacting with smart contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Starting a Local Ethereum Node with Anvil\nDESCRIPTION: Shows how to start a local Ethereum node using Anvil, Foundry's local blockchain simulator.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Running Local Ethereum Node with Anvil\nDESCRIPTION: Command to start Anvil, Foundry's local Ethereum node for development and testing.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Generating Gas Snapshots with Forge\nDESCRIPTION: Creates gas usage snapshots for the smart contracts to track and optimize gas consumption.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Command to generate gas usage snapshots for smart contracts using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interaction\nDESCRIPTION: Command structure for using Cast, Foundry's utility for interacting with EVM smart contracts and chain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Demonstrates the command to generate gas snapshots for an Ethereum project using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Command to create gas usage snapshots of your contracts to track gas optimization using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Command to generate gas usage snapshots for smart contract functions using Forge's snapshot tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Command to create gas usage snapshots for functions in a Foundry project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Generating Gas Snapshots\nDESCRIPTION: Command to create gas usage snapshots for smart contract functions using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Generates gas usage snapshots for smart contracts in the project using Forge. This helps in optimizing gas costs.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Command for creating gas usage snapshots of smart contracts using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Demonstrates the basic syntax for using Cast, Foundry's Swiss army knife for interacting with EVM smart contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Applies code formatting to Solidity files in the project using Forge's formatting tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Code with Forge\nDESCRIPTION: Command to format Solidity code according to standardized style rules using Forge's formatting utility.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Applies consistent formatting to Solidity source files in the project using Forge's formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Command to format Solidity code files according to style guidelines using Forge's formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Command to format Solidity code in a Foundry project using Forge's formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Demonstrates how to generate gas snapshots for an Ethereum project using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Remapping for Solidity Project\nDESCRIPTION: This configuration maps library names to their local paths in the project structure. It helps the Solidity compiler locate and resolve dependencies correctly during compilation.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\nExcessivelySafeCall/=lib/kernel_v3/lib/ExcessivelySafeCall/src/\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/\nsolady/=lib/kernel_v3/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Defining Library Dependencies for Kernel 7579 Plugins in Solidity\nDESCRIPTION: This snippet maps library names to their corresponding local paths. It includes mappings for ds-test, forge-std, kernel, and solady libraries, which are essential dependencies for the Kernel 7579 Plugins project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Remappings for Solidity Dependencies in Forge\nDESCRIPTION: This configuration maps dependency import paths to their actual locations in the project's lib directory. It includes mappings for OpenZeppelin contracts, ds-test, erc4626-tests, forge-std, kernel, and solady libraries, allowing them to be imported via shorter paths in Solidity code.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\nds-test/=lib/kernel/lib/forge-std/lib/ds-test/src/\nerc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel/src/\nopenzeppelin-contracts/=lib/openzeppelin-contracts/\nsolady/=lib/kernel/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Dependency Remappings for Foundry Project\nDESCRIPTION: This configuration maps library import paths to their actual locations in the project directory structure. It allows developers to use shortened import paths in Solidity code instead of relative paths.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Paths for Solidity Libraries in Kernel Plugin Project\nDESCRIPTION: Specifies remapping directives for Solidity library dependencies, allowing the compiler to resolve import statements correctly. The mappings point to the locations of ds-test, forge-std, kernel, and solady libraries within the project structure.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Command to launch Anvil, Foundry's local Ethereum node for development and testing.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Starting Local Ethereum Node with Anvil\nDESCRIPTION: Launches a local Ethereum node using Anvil for development and testing purposes.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Generates gas usage snapshots for the project using Forge. This helps in tracking and optimizing gas costs over time.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Running Local Ethereum Node with Anvil\nDESCRIPTION: Command for starting a local Ethereum node using Anvil, Foundry's local blockchain environment.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ anvil\n```\n\n----------------------------------------\n\nTITLE: Creating Gas Snapshots with Forge\nDESCRIPTION: Generates gas usage snapshots for Ethereum contracts using Forge.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ forge snapshot\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Illustrates how to format Solidity code using Forge's built-in formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Illustrates how to format Solidity code using Forge's built-in formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Code with Forge\nDESCRIPTION: Command to format Solidity code using Forge's formatting tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Applies consistent formatting to Solidity code using Forge's formatting tool. This ensures code style consistency across the project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Applies code formatting to Solidity files using Forge's formatting tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Command for formatting Solidity code using Forge's formatter.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Utilizes the Cast tool for various EVM-related operations. Cast is a versatile command-line tool for interacting with smart contracts and blockchain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Command to format Solidity code using Forge's formatting tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Using Cast for Ethereum Interactions\nDESCRIPTION: Utilizes Cast, a command-line tool for interacting with Ethereum smart contracts and blockchain data. The specific subcommand determines the action performed.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Formatting Solidity Code with Forge\nDESCRIPTION: Formats Solidity code in the project using Forge's built-in formatter. This ensures consistent code style across the project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ forge fmt\n```\n\n----------------------------------------\n\nTITLE: Using Cast for Ethereum Chain Interaction\nDESCRIPTION: Command syntax for using Cast, Foundry's utility for interacting with EVM smart contracts and blockchain data.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Using Cast for Contract Interaction\nDESCRIPTION: Basic command structure for using Cast, Foundry's tool for interacting with EVM smart contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Command for building Ethereum projects using Forge, the Foundry testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Basic command structure for using Cast, Foundry's utility for interacting with EVM smart contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Demonstrates how to build an Ethereum project using Forge, Foundry's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Basic command structure for using Cast, Foundry's utility for interacting with EVM smart contracts. Requires specifying a subcommand.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Forge\nDESCRIPTION: Executes tests for Ethereum projects using Forge. This command runs all test files in the project.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ forge test\n```\n\n----------------------------------------\n\nTITLE: Using Cast for EVM Interactions\nDESCRIPTION: Utilizes the Cast tool for various Ethereum Virtual Machine (EVM) interactions and operations.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Using Cast Command\nDESCRIPTION: Generic command structure for using Cast, Foundry's Swiss army knife for EVM interaction.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cast <subcommand>\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Shows how to access help documentation for Forge, Anvil, and Cast using the --help flag.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/webauthn/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Information for Foundry Tools\nDESCRIPTION: Displays help information for Forge, Anvil, and Cast. These commands provide detailed usage instructions and available options for each tool.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation\nDESCRIPTION: Commands to access help documentation for Forge, Anvil, and Cast tools.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation in Foundry\nDESCRIPTION: Commands to access help documentation for Foundry tools including Forge, Anvil, and Cast.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/signature-caller/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Shows how to access help documentation for Forge, Anvil, and Cast using the --help flag.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Displays help information for Forge, Anvil, and Cast tools, providing guidance on available commands and options.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation for Foundry Tools\nDESCRIPTION: Commands for accessing help documentation for Forge, Anvil, and Cast.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/spendlingLimits/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help for Foundry Tools\nDESCRIPTION: Displays help information for Forge, Anvil, and Cast tools, providing guidance on available commands and options.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Accessing Help Documentation for Foundry Tools\nDESCRIPTION: Commands to access help documentation for Forge, Anvil, and Cast components of Foundry.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/hooks/onlyEntrypoint/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n$ forge --help\n$ anvil --help\n$ cast --help\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Uses the Forge tool to compile and build Ethereum projects.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/ratelimit/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Project with Forge\nDESCRIPTION: Demonstrates how to build an Ethereum project using Forge, Foundry's testing framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/call-policy/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Building Ethereum Projects with Forge\nDESCRIPTION: Command to build Ethereum projects using Forge, Foundry's development framework.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ forge build\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Remappings for Solidity Dependencies\nDESCRIPTION: Defines the path remappings for external Solidity libraries used in the project. This configuration tells the compiler where to find imports for ds-test, forge-std, kernel, and solady libraries, making them accessible in the project's source files.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/ecdsa/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: solidity\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Solidity Dependency Remappings\nDESCRIPTION: Remapping configuration that resolves library paths for Solidity imports. It defines aliases for ds-test, forge-std, and kernel repositories, mapping them to their respective locations in the project's lib directory.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/sudo/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Remappings for Forge/Foundry\nDESCRIPTION: Defines path remappings for Solidity libraries including ds-test, forge-std, kernel, and solady. These remappings allow for shorter import statements in Solidity files by creating aliases to the full dependency paths.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/gas/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Remappings for Solidity Dependencies\nDESCRIPTION: This configuration maps shorthand import references to their actual file system paths for Solidity imports. It enables cleaner import statements in Solidity files by allowing imports like 'import \"forge-std/Test.sol\";' instead of using full paths. The configuration maps ds-test, forge-std, and kernel libraries to their respective locations.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/signers/anysigner/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Paths for Solidity Project\nDESCRIPTION: This configuration maps local directories to external Solidity libraries and contracts. It includes paths for OpenZeppelin, ds-test, ERC4626 tests, Forge Standard Library, Kernel, and Solady. This setup helps manage import statements and dependencies in Solidity smart contracts.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/validators/webauthn/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\nds-test/=lib/kernel/lib/forge-std/lib/ds-test/src/\nerc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel/src/\nopenzeppelin-contracts/=lib/openzeppelin-contracts/\nsolady/=lib/kernel/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Defining Library Dependencies for Solidity Project\nDESCRIPTION: This code snippet specifies the file paths for external libraries used in the Solidity project. It maps library names to their respective source directories, facilitating easier imports and dependencies management.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/actions/recovery/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\nsolady/=lib/kernel_v3/lib/solady/src/\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Path Remappings for Solidity Project\nDESCRIPTION: Defines path remappings for Solidity imports to simplify import statements. Maps shortened aliases to actual file system paths for ds-test, forge-std, and kernel libraries in the project structure.\nSOURCE: https://github.com/zerodevapp/kernel-7579-plugins/blob/master/policies/timestamp/remappings.txt#2025-04-23_snippet_0\n\nLANGUAGE: remappings\nCODE:\n```\nds-test/=lib/kernel_v3/lib/forge-std/lib/ds-test/src/\nforge-std/=lib/forge-std/src/\nkernel/=lib/kernel_v3/src/\n```"
  }
]